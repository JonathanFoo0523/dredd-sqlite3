-- Time: 2024/06/09 18:35:34
-- Database: database15
-- Database version: 3.40.0
-- seed value: 2462717915
PRAGMA cache_size = 50000; -- 12ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
COMMIT; -- 1ms;
PRAGMA main.stats; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (0X57ff3c63); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA main.threads; -- 0ms;
UPDATE rt1 SET (c1)=(NULL); -- 1ms;
PRAGMA temp.busy_timeout; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.legacy_file_format; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt1 SET (c1)=(1476344931); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-1228622913'; -- 0ms;
PRAGMA application_id; -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1989123618), ('孏hx*q'), (x''), (0.31914093367960905), (NULL); -- 2ms;
INSERT OR FAIL INTO rt1 VALUES (0.24316398730685962, x'1f4a', '孏HX*Q'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=('-1228622913'); -- 6ms;
INSERT OR REPLACE INTO rt1(c2, c0, c1) VALUES ('*G0L7C勹n', 1.476344931E9, 0x52ca0e20); -- 0ms;
INSERT OR FAIL INTO rt1(c0, c1) VALUES (0.24316398730685962, x'2c8d3b05'); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c1, c2) VALUES (x'', 0.792425507415058), (0.4753240138101139, NULL), (0.019828640909951845, ' Ah'); -- 2ms;
INSERT OR FAIL INTO rt1(c2, c0, c1) VALUES (0.8629206689607904, '-1267576071', 0.019828640909951845), (NULL, 0.7547649615594738, '-608647336'), (NULL, 1.989123618E9, 0.34961488597412516); -- 2ms;
INSERT OR ROLLBACK INTO rt1(c2) VALUES (x'0360'), (x''), (x''); -- 1ms;
UPDATE rt1 SET (c0, c2)=('5{(*}', '#}Og') WHERE (((~ (rt1.c1)))<=(UNLIKELY(DISTINCT rt1.c2))); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=0.41207219917751603; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '21133'); -- 3ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE (((((vt0.c0))<=((vt0.c0)))) NOT NULL); -- 1ms;
VACUUM; -- 2ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
PRAGMA integrity_check; -- 0ms;
ANALYZE temp; -- 1ms;
UPDATE OR ROLLBACK rt1 SET c0=NULL; -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.07109872771172676); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=('0F'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='425941859' WHERE ((((NULL)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0)))); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=('q의QX<'); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.09035182164134126); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
DELETE FROM rt1 WHERE CAST(((rt1.c1)LIKE(rt1.c1)) AS NUMERIC); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(1989123618) WHERE ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))OR(rt1.c0 COLLATE BINARY)))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END)); -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE ((vt0.c0) BETWEEN ('0.7547649615594738') AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0X33fe0544; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 1ms;
PRAGMA integrity_check; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL; -- 0ms;
INSERT OR ABORT INTO rt1(c2, c1) VALUES (NULL, 0.8035401871813856); -- 1ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (x'93a0'), (x''), (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1375277146);\n; -- 1ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('425941859'); -- 0ms;
PRAGMA soft_heap_limit = 0; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=x'', c0=-1.267576071E9 WHERE (rt1.c0 IN (0.7774622474063886)) COLLATE RTRIM; -- 0ms;
REINDEX  vt0; -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47280'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, rt1 WHERE (CAST((~ (rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CAST((~ (rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CAST((~ (rt1.c0)) AS BLOB));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c1)LIKE(rt1.c1))) AND (((vt0.c0) IS FALSE)))) ORDER BY (((((~ (rt1.c1)))AND(((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))))OR(((((rt1.c2)OR(rt1.c2)))OR(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (((rt1.c1)LIKE(rt1.c1))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((~ (rt1.c1)))AND(((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))))OR(((((rt1.c2)OR(rt1.c2)))OR(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c1)LIKE(rt1.c1))) AND (((vt0.c0) IS FALSE)))) ORDER BY (((((~ (rt1.c1)))AND(((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))))OR(((((rt1.c2)OR(rt1.c2)))OR(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (((rt1.c1)LIKE(rt1.c1))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((~ (rt1.c1)))AND(((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))))OR(((((rt1.c2)OR(rt1.c2)))OR(rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c1)LIKE(rt1.c1))) AND (((vt0.c0) IS FALSE)))) ORDER BY (((((~ (rt1.c1)))AND(((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))))OR(((((rt1.c2)OR(rt1.c2)))OR(rt1.c2))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (0.6249919116661888);
SELECT SUM(count) FROM (SELECT ALL ((0.6249919116661888) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (0.6249919116661888);
SELECT SUM(count) FROM (SELECT ALL ((0.6249919116661888) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (0.6249919116661888);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((CAST(rt1.c2 AS TEXT) IN ())) ORDER BY (TYPEOF(rt1.c1) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (TYPEOF(rt1.c1) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((CAST(rt1.c2 AS TEXT) IN ())) ORDER BY (TYPEOF(rt1.c1) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (TYPEOF(rt1.c1) IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((CAST(rt1.c2 AS TEXT) IN ())) ORDER BY (TYPEOF(rt1.c1) IN ()) DESC;
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(NULL)))AND(x''));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(NULL)))AND(x'')));
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(NULL)))AND(x''));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(NULL)))AND(x'')));
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(NULL)))AND(x''));
SELECT ALL * FROM vt0, rt1 WHERE (((0xffffffff8821669b) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffff8821669b) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((0xffffffff8821669b) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffff8821669b) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((0xffffffff8821669b) NOT NULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(0.30812066110446223 COLLATE BINARY AS REAL)) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST(0.30812066110446223 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(0.30812066110446223 COLLATE BINARY AS REAL)) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST(0.30812066110446223 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(0.30812066110446223 COLLATE BINARY AS REAL)) ORDER BY rt1.c1;
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c2)<>(rt1.c1))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)<>(rt1.c1))) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c2)<>(rt1.c1))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)<>(rt1.c1))) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c2)<>(rt1.c1))) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((~ ((((rt1.c1, rt1.c0, rt1.c0))<=((rt1.c1, rt1.c1, rt1.c0)))))) ORDER BY (((((- (rt1.c0)))OR((+ (rt1.c2)))))AND(CAST(rt1.c1 AS REAL))), json_extract((+ (rt1.c2)), '') ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1, rt1.c0, rt1.c0))<=((rt1.c1, rt1.c1, rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((- (rt1.c0)))OR((+ (rt1.c2)))))AND(CAST(rt1.c1 AS REAL))), json_extract((+ (rt1.c2)), '') ASC);
SELECT ALL * FROM rt1 WHERE ((~ ((((rt1.c1, rt1.c0, rt1.c0))<=((rt1.c1, rt1.c1, rt1.c0)))))) ORDER BY (((((- (rt1.c0)))OR((+ (rt1.c2)))))AND(CAST(rt1.c1 AS REAL))), json_extract((+ (rt1.c2)), '') ASC;
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1, rt1.c0, rt1.c0))<=((rt1.c1, rt1.c1, rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((((- (rt1.c0)))OR((+ (rt1.c2)))))AND(CAST(rt1.c1 AS REAL))), json_extract((+ (rt1.c2)), '') ASC);
SELECT ALL * FROM rt1 WHERE ((~ ((((rt1.c1, rt1.c0, rt1.c0))<=((rt1.c1, rt1.c1, rt1.c0)))))) ORDER BY (((((- (rt1.c0)))OR((+ (rt1.c2)))))AND(CAST(rt1.c1 AS REAL))), json_extract((+ (rt1.c2)), '') ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN rt1.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN rt1.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN rt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN rt1.c2 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON rt1.c0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)) THEN (((rt1.c0))<=((rt1.c0))) END) ORDER BY (((((('S*QF*푠v4Q')AND(rt1.c2)))AND(rt1.c1)))&(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)) THEN (((rt1.c0))<=((rt1.c0))) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON rt1.c0 ORDER BY (((((('S*QF*푠v4Q')AND(rt1.c2)))AND(rt1.c1)))&(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON rt1.c0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)) THEN (((rt1.c0))<=((rt1.c0))) END) ORDER BY (((((('S*QF*푠v4Q')AND(rt1.c2)))AND(rt1.c1)))&(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)) THEN (((rt1.c0))<=((rt1.c0))) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON rt1.c0 ORDER BY (((((('S*QF*푠v4Q')AND(rt1.c2)))AND(rt1.c1)))&(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON rt1.c0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)) THEN (((rt1.c0))<=((rt1.c0))) END) ORDER BY (((((('S*QF*푠v4Q')AND(rt1.c2)))AND(rt1.c1)))&(vt0.c0));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (rt1.c1 COLLATE RTRIM))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (rt1.c1 COLLATE RTRIM))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (NULL) AND (rt1.c1 COLLATE RTRIM))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN x'' ELSE rt1.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN x'' ELSE rt1.c2 END) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN x'' ELSE rt1.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN x'' ELSE rt1.c2 END) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN x'' ELSE rt1.c2 END) IS TRUE));
SELECT * FROM rt1 WHERE ((((- (rt1.c0)))GLOB(((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c0)))GLOB(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT * FROM rt1 WHERE ((((- (rt1.c0)))GLOB(((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c0)))GLOB(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT * FROM rt1 WHERE ((((- (rt1.c0)))GLOB(((rt1.c0) ISNULL))));
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER))>=(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY rt1.c2  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))|(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER))>=(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))|(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER))>=(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY rt1.c2  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))|(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS INTEGER))>=(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))|(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS INTEGER))>=(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY rt1.c2  NULLS FIRST, (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))|(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)<=(vt0.c0))) IS TRUE)) ORDER BY ((CAST(rt1.c0 AS NUMERIC)) IS FALSE), 'uS' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 ORDER BY ((CAST(rt1.c0 AS NUMERIC)) IS FALSE), 'uS' ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)<=(vt0.c0))) IS TRUE)) ORDER BY ((CAST(rt1.c0 AS NUMERIC)) IS FALSE), 'uS' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 ORDER BY ((CAST(rt1.c0 AS NUMERIC)) IS FALSE), 'uS' ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)<=(vt0.c0))) IS TRUE)) ORDER BY ((CAST(rt1.c0 AS NUMERIC)) IS FALSE), 'uS' ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0.14304274784028548) ORDER BY (((vt0.c0 IN ()))LIKE(((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST, (((NOT (vt0.c0)))GLOB((- (vt0.c0))))  NULLS FIRST, json_patch(rt1.c0, NULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.14304274784028548) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0 IN ()))LIKE(((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST, (((NOT (vt0.c0)))GLOB((- (vt0.c0))))  NULLS FIRST, json_patch(rt1.c0, NULL) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0.14304274784028548) ORDER BY (((vt0.c0 IN ()))LIKE(((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST, (((NOT (vt0.c0)))GLOB((- (vt0.c0))))  NULLS FIRST, json_patch(rt1.c0, NULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.14304274784028548) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0 IN ()))LIKE(((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST, (((NOT (vt0.c0)))GLOB((- (vt0.c0))))  NULLS FIRST, json_patch(rt1.c0, NULL) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0.14304274784028548) ORDER BY (((vt0.c0 IN ()))LIKE(((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))  NULLS FIRST, (((NOT (vt0.c0)))GLOB((- (vt0.c0))))  NULLS FIRST, json_patch(rt1.c0, NULL) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((0.055752284537723074, rt1.c1, 0.3474427832317274))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((0.055752284537723074, rt1.c1, 0.3474427832317274))) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((0.055752284537723074, rt1.c1, 0.3474427832317274))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((0.055752284537723074, rt1.c1, 0.3474427832317274))) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((0.055752284537723074, rt1.c1, 0.3474427832317274))) IN ()));
SELECT ALL * FROM vt0, rt1 WHERE (((((CAST(rt1.c2 AS INTEGER))OR(CAST(rt1.c1 AS TEXT))))AND(((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) ORDER BY ''  NULLS LAST, (((vt0.c0)%(vt0.c0)) IN (ABS(DISTINCT rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c2 AS INTEGER))OR(CAST(rt1.c1 AS TEXT))))AND(((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ''  NULLS LAST, (((vt0.c0)%(vt0.c0)) IN (ABS(DISTINCT rt1.c0))));
SELECT ALL * FROM vt0, rt1 WHERE (((((CAST(rt1.c2 AS INTEGER))OR(CAST(rt1.c1 AS TEXT))))AND(((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) ORDER BY ''  NULLS LAST, (((vt0.c0)%(vt0.c0)) IN (ABS(DISTINCT rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c2 AS INTEGER))OR(CAST(rt1.c1 AS TEXT))))AND(((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ''  NULLS LAST, (((vt0.c0)%(vt0.c0)) IN (ABS(DISTINCT rt1.c0))));
SELECT ALL * FROM vt0, rt1 WHERE (((((CAST(rt1.c2 AS INTEGER))OR(CAST(rt1.c1 AS TEXT))))AND(((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) ORDER BY ''  NULLS LAST, (((vt0.c0)%(vt0.c0)) IN (ABS(DISTINCT rt1.c0)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON CAST(((((((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC) WHERE (DATETIME(vt0.c0 COLLATE RTRIM, CAST(rt1.c2 AS TEXT), ((vt0.c0) IS TRUE))) ORDER BY 'N(' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(vt0.c0 COLLATE RTRIM, CAST(rt1.c2 AS TEXT), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CAST(((((((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC) ORDER BY 'N(' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON CAST(((((((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC) WHERE (DATETIME(vt0.c0 COLLATE RTRIM, CAST(rt1.c2 AS TEXT), ((vt0.c0) IS TRUE))) ORDER BY 'N(' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(vt0.c0 COLLATE RTRIM, CAST(rt1.c2 AS TEXT), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CAST(((((((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC) ORDER BY 'N(' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON CAST(((((((((rt1.c1)OR(rt1.c0)))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)) AS NUMERIC) WHERE (DATETIME(vt0.c0 COLLATE RTRIM, CAST(rt1.c2 AS TEXT), ((vt0.c0) IS TRUE))) ORDER BY 'N(' ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (NULL) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0 WHERE (NULL) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0 WHERE (NULL) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((((((TRIM(DISTINCT rt1.c2))OR(((0.3172383411817403) BETWEEN (rt1.c1) AND (vt0.c0)))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))))OR(1.989123618E9)))AND(((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))) WHERE ((NOT (((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c0)OR(vt0.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((((((TRIM(DISTINCT rt1.c2))OR(((0.3172383411817403) BETWEEN (rt1.c1) AND (vt0.c0)))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))))OR(1.989123618E9)))AND(((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((((((TRIM(DISTINCT rt1.c2))OR(((0.3172383411817403) BETWEEN (rt1.c1) AND (vt0.c0)))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))))OR(1.989123618E9)))AND(((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))) WHERE ((NOT (((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c0)OR(vt0.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((((((TRIM(DISTINCT rt1.c2))OR(((0.3172383411817403) BETWEEN (rt1.c1) AND (vt0.c0)))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))))OR(1.989123618E9)))AND(((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON ((((((((TRIM(DISTINCT rt1.c2))OR(((0.3172383411817403) BETWEEN (rt1.c1) AND (vt0.c0)))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt0.c0)))))OR(1.989123618E9)))AND(((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))) WHERE ((NOT (((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)IS NOT(rt1.c1)))/((((rt1.c2))<((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS NOT(rt1.c1)))/((((rt1.c2))<((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)IS NOT(rt1.c1)))/((((rt1.c2))<((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS NOT(rt1.c1)))/((((rt1.c2))<((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)IS NOT(rt1.c1)))/((((rt1.c2))<((rt1.c2))))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))GLOB(((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (SQLITE_COMPILEOPTION_USED(rt1.c2)))) ORDER BY ((rt1.c1 COLLATE RTRIM) BETWEEN (0.41207219917751603) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (SQLITE_COMPILEOPTION_USED(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE RTRIM) BETWEEN (0.41207219917751603) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (SQLITE_COMPILEOPTION_USED(rt1.c2)))) ORDER BY ((rt1.c1 COLLATE RTRIM) BETWEEN (0.41207219917751603) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (SQLITE_COMPILEOPTION_USED(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE RTRIM) BETWEEN (0.41207219917751603) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (SQLITE_COMPILEOPTION_USED(rt1.c2)))) ORDER BY ((rt1.c1 COLLATE RTRIM) BETWEEN (0.41207219917751603) AND (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) IS FALSE))-((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE))-((NULL IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) IS FALSE))-((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE))-((NULL IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0) IS FALSE))-((NULL IN ()))));
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c0)IS NOT(rt1.c2)), rt1.c2)) AND ((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)), vt0.c0, vt0.c0)))) ORDER BY (((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c1)-(rt1.c1)), NULL, (((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))) AND (('1330862927', 4.25941859E8, '-1267576071'))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c0)IS NOT(rt1.c2)), rt1.c2)) AND ((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)), vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c1)-(rt1.c1)), NULL, (((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))) AND (('1330862927', 4.25941859E8, '-1267576071'))) DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c0)IS NOT(rt1.c2)), rt1.c2)) AND ((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)), vt0.c0, vt0.c0)))) ORDER BY (((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c1)-(rt1.c1)), NULL, (((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))) AND (('1330862927', 4.25941859E8, '-1267576071'))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c0)IS NOT(rt1.c2)), rt1.c2)) AND ((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)), vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c1)-(rt1.c1)), NULL, (((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))) AND (('1330862927', 4.25941859E8, '-1267576071'))) DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0, vt0.c0, rt1.c0)) BETWEEN (((NOT (rt1.c2)), ((rt1.c0)IS NOT(rt1.c2)), rt1.c2)) AND ((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(vt0.c0)), vt0.c0, vt0.c0)))) ORDER BY (((rt1.c1, rt1.c0, rt1.c1)) NOT BETWEEN ((((rt1.c1)-(rt1.c1)), NULL, (((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))) AND (('1330862927', 4.25941859E8, '-1267576071'))) DESC;
SELECT * FROM rt1 WHERE (((((rt1.c1)||(rt1.c2)))IS NOT(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) ORDER BY ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))*(((rt1.c2)!=(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)||(rt1.c2)))IS NOT(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))*(((rt1.c2)!=(NULL)))) DESC);
SELECT * FROM rt1 WHERE (((((rt1.c1)||(rt1.c2)))IS NOT(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) ORDER BY ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))*(((rt1.c2)!=(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)||(rt1.c2)))IS NOT(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))*(((rt1.c2)!=(NULL)))) DESC);
SELECT * FROM rt1 WHERE (((((rt1.c1)||(rt1.c2)))IS NOT(((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) ORDER BY ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))*(((rt1.c2)!=(NULL)))) DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((NULL)==(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE ((((rt1.c1)) BETWEEN ((((NULL)>=(rt1.c0)))) AND ((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((NULL)>=(rt1.c0)))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((NULL)=(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((NULL)==(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE ((((rt1.c1)) BETWEEN ((((NULL)>=(rt1.c0)))) AND ((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((NULL)>=(rt1.c0)))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((NULL)=(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((NULL)==(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE ((((rt1.c1)) BETWEEN ((((NULL)>=(rt1.c0)))) AND ((((vt0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(0.9457171914560093 AS NUMERIC)) IS FALSE)) ORDER BY ((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))/(highlight(rt1.c0, rt1.c2, rt1.c2, rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(0.9457171914560093 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))/(highlight(rt1.c0, rt1.c2, rt1.c2, rt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(0.9457171914560093 AS NUMERIC)) IS FALSE)) ORDER BY ((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))/(highlight(rt1.c0, rt1.c2, rt1.c2, rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(0.9457171914560093 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))/(highlight(rt1.c0, rt1.c2, rt1.c2, rt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(0.9457171914560093 AS NUMERIC)) IS FALSE)) ORDER BY ((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))/(highlight(rt1.c0, rt1.c2, rt1.c2, rt1.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((('872285508')OR(rt1.c2)))OR(rt1.c1)))AND(((rt1.c2) NOTNULL))))AND(HEX(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((((((('872285508')OR(rt1.c2)))OR(rt1.c1)))AND(((rt1.c2) NOTNULL))))AND(HEX(rt1.c2)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((('872285508')OR(rt1.c2)))OR(rt1.c1)))AND(((rt1.c2) NOTNULL))))AND(HEX(rt1.c2))));
SELECT SUM(count) FROM (SELECT (((((((((('872285508')OR(rt1.c2)))OR(rt1.c1)))AND(((rt1.c2) NOTNULL))))AND(HEX(rt1.c2)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((('872285508')OR(rt1.c2)))OR(rt1.c1)))AND(((rt1.c2) NOTNULL))))AND(HEX(rt1.c2))));
SELECT ALL * FROM vt0 WHERE ((((((4.25941859E8))==((0.055752284537723074)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((4.25941859E8))==((0.055752284537723074)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((4.25941859E8))==((0.055752284537723074)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((4.25941859E8))==((0.055752284537723074)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((4.25941859E8))==((0.055752284537723074)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((NOT (vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE ((~ (((((((((rt1.c2)OR(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt1.c2)OR(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL ASC);
SELECT * FROM vt0, rt1 WHERE ((~ (((((((((rt1.c2)OR(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt1.c2)OR(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL ASC);
SELECT * FROM vt0, rt1 WHERE ((~ (((((((((rt1.c2)OR(vt0.c0)))OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c0))))) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'' COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)IS NOT(vt0.c0)), 0.2963440507400614));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0)IS NOT(vt0.c0)), 0.2963440507400614)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)IS NOT(vt0.c0)), 0.2963440507400614));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0)IS NOT(vt0.c0)), 0.2963440507400614)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)IS NOT(vt0.c0)), 0.2963440507400614));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c2) IS TRUE))IS(TRIM(DISTINCT rt1.c2, rt1.c2)))  NULLS LAST, ABS(((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((((rt1.c2) IS TRUE))IS(TRIM(DISTINCT rt1.c2, rt1.c2)))  NULLS LAST, ABS(((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c2) IS TRUE))IS(TRIM(DISTINCT rt1.c2, rt1.c2)))  NULLS LAST, ABS(((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((((rt1.c2) IS TRUE))IS(TRIM(DISTINCT rt1.c2, rt1.c2)))  NULLS LAST, ABS(((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (rt1.c1) ORDER BY ((((rt1.c2) IS TRUE))IS(TRIM(DISTINCT rt1.c2, rt1.c2)))  NULLS LAST, ABS(((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c2))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END AS BLOB)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END AS BLOB)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c2 END AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE CASE vt0.c0  WHEN rt1.c1 THEN NULL END  WHEN ((vt0.c0)<<(rt1.c0)) THEN ((((rt1.c2)OR(vt0.c0)))AND(vt0.c0)) ELSE rt1.c2 COLLATE RTRIM END) ORDER BY 0.7091195789674529 ASC, ((((rt1.c2) BETWEEN (2024218822) AND (rt1.c1))) BETWEEN (UPPER(rt1.c2)) AND (((rt1.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN rt1.c1 THEN NULL END  WHEN ((vt0.c0)<<(rt1.c0)) THEN ((((rt1.c2)OR(vt0.c0)))AND(vt0.c0)) ELSE rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.7091195789674529 ASC, ((((rt1.c2) BETWEEN (2024218822) AND (rt1.c1))) BETWEEN (UPPER(rt1.c2)) AND (((rt1.c0) ISNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE CASE vt0.c0  WHEN rt1.c1 THEN NULL END  WHEN ((vt0.c0)<<(rt1.c0)) THEN ((((rt1.c2)OR(vt0.c0)))AND(vt0.c0)) ELSE rt1.c2 COLLATE RTRIM END) ORDER BY 0.7091195789674529 ASC, ((((rt1.c2) BETWEEN (2024218822) AND (rt1.c1))) BETWEEN (UPPER(rt1.c2)) AND (((rt1.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN rt1.c1 THEN NULL END  WHEN ((vt0.c0)<<(rt1.c0)) THEN ((((rt1.c2)OR(vt0.c0)))AND(vt0.c0)) ELSE rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.7091195789674529 ASC, ((((rt1.c2) BETWEEN (2024218822) AND (rt1.c1))) BETWEEN (UPPER(rt1.c2)) AND (((rt1.c0) ISNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE CASE vt0.c0  WHEN rt1.c1 THEN NULL END  WHEN ((vt0.c0)<<(rt1.c0)) THEN ((((rt1.c2)OR(vt0.c0)))AND(vt0.c0)) ELSE rt1.c2 COLLATE RTRIM END) ORDER BY 0.7091195789674529 ASC, ((((rt1.c2) BETWEEN (2024218822) AND (rt1.c1))) BETWEEN (UPPER(rt1.c2)) AND (((rt1.c0) ISNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (vt0.c0 IN (vt0.c0)))) ORDER BY (((((vt0.c0) NOTNULL)))>=((vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOTNULL)))>=((vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (vt0.c0 IN (vt0.c0)))) ORDER BY (((((vt0.c0) NOTNULL)))>=((vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOTNULL)))>=((vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (vt0.c0 IN (vt0.c0)))) ORDER BY (((((vt0.c0) NOTNULL)))>=((vt0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((UPPER(DISTINCT vt0.c0))>=((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT vt0.c0))>=((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((UPPER(DISTINCT vt0.c0))>=((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT vt0.c0))>=((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((UPPER(DISTINCT vt0.c0))>=((+ (vt0.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((((UPPER(DISTINCT rt1.c1))AND(((NULL)%(rt1.c1)))))AND(CAST(rt1.c2 AS BLOB))))AND((('-1327316836') BETWEEN (vt0.c0) AND (rt1.c0)))))AND(((rt1.c1)IS NOT(rt1.c1)))) ASC, (((rt1.c2)) NOT BETWEEN (((- (rt1.c0)))) AND ((0.09527314513062068))) DESC  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((UPPER(DISTINCT rt1.c1))AND(((NULL)%(rt1.c1)))))AND(CAST(rt1.c2 AS BLOB))))AND((('-1327316836') BETWEEN (vt0.c0) AND (rt1.c0)))))AND(((rt1.c1)IS NOT(rt1.c1)))) ASC, (((rt1.c2)) NOT BETWEEN (((- (rt1.c0)))) AND ((0.09527314513062068))) DESC  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((((UPPER(DISTINCT rt1.c1))AND(((NULL)%(rt1.c1)))))AND(CAST(rt1.c2 AS BLOB))))AND((('-1327316836') BETWEEN (vt0.c0) AND (rt1.c0)))))AND(((rt1.c1)IS NOT(rt1.c1)))) ASC, (((rt1.c2)) NOT BETWEEN (((- (rt1.c0)))) AND ((0.09527314513062068))) DESC  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((UPPER(DISTINCT rt1.c1))AND(((NULL)%(rt1.c1)))))AND(CAST(rt1.c2 AS BLOB))))AND((('-1327316836') BETWEEN (vt0.c0) AND (rt1.c0)))))AND(((rt1.c1)IS NOT(rt1.c1)))) ASC, (((rt1.c2)) NOT BETWEEN (((- (rt1.c0)))) AND ((0.09527314513062068))) DESC  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY ((((((((UPPER(DISTINCT rt1.c1))AND(((NULL)%(rt1.c1)))))AND(CAST(rt1.c2 AS BLOB))))AND((('-1327316836') BETWEEN (vt0.c0) AND (rt1.c0)))))AND(((rt1.c1)IS NOT(rt1.c1)))) ASC, (((rt1.c2)) NOT BETWEEN (((- (rt1.c0)))) AND ((0.09527314513062068))) DESC  NULLS FIRST, ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (LIKELY((vt0.c0 IN (vt0.c0, x'')))) ORDER BY '-1e500' ASC  NULLS LAST, json_array_length(vt0.c0) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((LIKELY((vt0.c0 IN (vt0.c0, x'')))) IS TRUE)  as count FROM vt0 ORDER BY '-1e500' ASC  NULLS LAST, json_array_length(vt0.c0) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT COUNT(*) FROM vt0 WHERE (LIKELY((vt0.c0 IN (vt0.c0, x'')))) ORDER BY '-1e500' ASC  NULLS LAST, json_array_length(vt0.c0) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ((LIKELY((vt0.c0 IN (vt0.c0, x'')))) IS TRUE)  as count FROM vt0 ORDER BY '-1e500' ASC  NULLS LAST, json_array_length(vt0.c0) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT COUNT(*) FROM vt0 WHERE (LIKELY((vt0.c0 IN (vt0.c0, x'')))) ORDER BY '-1e500' ASC  NULLS LAST, json_array_length(vt0.c0) ASC, (CASE WHEN vt0.c0 THEN vt0.c0 END IN ());
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c1)IS NOT((- (''))))) ORDER BY (((vt0.c0)OR(rt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)IS NOT((- (''))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0)OR(rt1.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c1)IS NOT((- (''))))) ORDER BY (((vt0.c0)OR(rt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)IS NOT((- (''))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0)OR(rt1.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c1)IS NOT((- (''))))) ORDER BY (((vt0.c0)OR(rt1.c0)) IN ()) DESC;
SELECT * FROM rt1, vt0 WHERE (CAST(TRIM(rt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt1.c0) AS REAL)) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED);
SELECT * FROM rt1, vt0 WHERE (CAST(TRIM(rt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt1.c0) AS REAL)) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED);
SELECT * FROM rt1, vt0 WHERE (CAST(TRIM(rt1.c0) AS REAL));
SELECT COUNT(*) FROM rt1 WHERE (LIKE(((0.7677509151360787)IS(rt1.c0)), CAST(rt1.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((LIKE(((0.7677509151360787)IS(rt1.c0)), CAST(rt1.c2 AS TEXT))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKE(((0.7677509151360787)IS(rt1.c0)), CAST(rt1.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((LIKE(((0.7677509151360787)IS(rt1.c0)), CAST(rt1.c2 AS TEXT))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LIKE(((0.7677509151360787)IS(rt1.c0)), CAST(rt1.c2 AS TEXT)));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (CASE WHEN (- (rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (CASE WHEN (- (rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (CASE WHEN (- (rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) ELSE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END END);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ((((rt1.c0)IS NOT(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)IS NOT(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ((((rt1.c0)IS NOT(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)IS NOT(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(rt1.c1 COLLATE RTRIM AS INTEGER)) ORDER BY ((((rt1.c0)IS NOT(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 WHERE (TRIM((NOT (x'd98ee21f'))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((NOT (x'd98ee21f')))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 WHERE (TRIM((NOT (x'd98ee21f'))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((NOT (x'd98ee21f')))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON rt1.c2 WHERE (TRIM((NOT (x'd98ee21f'))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c2 IN ())  WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (0.7836408498571962)) THEN NULL COLLATE RTRIM ELSE CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c2 IN ())  WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (0.7836408498571962)) THEN NULL COLLATE RTRIM ELSE CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c2 IN ())  WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (0.7836408498571962)) THEN NULL COLLATE RTRIM ELSE CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c2 IN ())  WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (0.7836408498571962)) THEN NULL COLLATE RTRIM ELSE CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c2 IN ())  WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (0.7836408498571962)) THEN NULL COLLATE RTRIM ELSE CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END END);
SELECT * FROM rt1, vt0 WHERE (vt0.c0) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (vt0.c0) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (vt0.c0) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0)>=(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c0))==((rt1.c1))))<=(TRIM(DISTINCT vt0.c0)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))==((rt1.c1))))<=(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c0))==((rt1.c1))))<=(TRIM(DISTINCT vt0.c0)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))==((rt1.c1))))<=(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c0))==((rt1.c1))))<=(TRIM(DISTINCT vt0.c0)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((((vt0.c0) IS TRUE))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE ((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((((vt0.c0) IS TRUE))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE ((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=((((vt0.c0) IS TRUE))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON -1526865665 WHERE ((NOT (((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON -1526865665);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON -1526865665 WHERE ((NOT (((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON -1526865665);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON -1526865665 WHERE ((NOT (((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))));
SELECT COUNT(*) FROM rt1 NOT INDEXED, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))) AND ((((rt1.c2)||(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))) AND ((((rt1.c2)||(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1 NOT INDEXED, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))) AND ((((rt1.c2)||(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))) AND ((((rt1.c2)||(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1 NOT INDEXED, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))) AND ((((rt1.c2)||(rt1.c2))))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((rt1.c1 IN ()), (rt1.c1 IN (rt1.c2)), ((rt1.c1) NOTNULL))) AND ((((rt1.c2)AND(rt1.c1)), ((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)), ')'))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((rt1.c1 IN ()), (rt1.c1 IN (rt1.c2)), ((rt1.c1) NOTNULL))) AND ((((rt1.c2)AND(rt1.c1)), ((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)), ')')))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((rt1.c1 IN ()), (rt1.c1 IN (rt1.c2)), ((rt1.c1) NOTNULL))) AND ((((rt1.c2)AND(rt1.c1)), ((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)), ')'))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((rt1.c1 IN ()), (rt1.c1 IN (rt1.c2)), ((rt1.c1) NOTNULL))) AND ((((rt1.c2)AND(rt1.c1)), ((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)), ')')))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((rt1.c1 IN ()), (rt1.c1 IN (rt1.c2)), ((rt1.c1) NOTNULL))) AND ((((rt1.c2)AND(rt1.c1)), ((((((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c1)), ')'))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c0)))<=(CAST(rt1.c1 AS REAL)))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL)  NULLS LAST, ((((rt1.c1)AND((rt1.c1 IN ()))))OR(((rt1.c0) ISNULL))), ((((rt1.c1)-(x''))) BETWEEN ((rt1.c1 IN ())) AND ((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0)))<=(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL)  NULLS LAST, ((((rt1.c1)AND((rt1.c1 IN ()))))OR(((rt1.c0) ISNULL))), ((((rt1.c1)-(x''))) BETWEEN ((rt1.c1 IN ())) AND ((+ (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c0)))<=(CAST(rt1.c1 AS REAL)))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL)  NULLS LAST, ((((rt1.c1)AND((rt1.c1 IN ()))))OR(((rt1.c0) ISNULL))), ((((rt1.c1)-(x''))) BETWEEN ((rt1.c1 IN ())) AND ((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0)))<=(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL)  NULLS LAST, ((((rt1.c1)AND((rt1.c1 IN ()))))OR(((rt1.c0) ISNULL))), ((((rt1.c1)-(x''))) BETWEEN ((rt1.c1 IN ())) AND ((+ (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c0)))<=(CAST(rt1.c1 AS REAL)))) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) ISNULL)  NULLS LAST, ((((rt1.c1)AND((rt1.c1 IN ()))))OR(((rt1.c0) ISNULL))), ((((rt1.c1)-(x''))) BETWEEN ((rt1.c1 IN ())) AND ((+ (rt1.c1))));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END)<<((((vt0.c0, rt1.c0, rt1.c1))==((rt1.c0, rt1.c0, rt1.c1))))) WHERE ((rt1.c1 IN (vt0.c0)) COLLATE NOCASE) ORDER BY ((((x'')OR(TRIM(DISTINCT rt1.c0, rt1.c2))))AND(JULIANDAY(rt1.c2, vt0.c0, rt1.c0))) ASC, (((rt1.c1))>=((rt1.c0))) COLLATE BINARY, ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(LENGTH(rt1.c1))))AND((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END)<<((((vt0.c0, rt1.c0, rt1.c1))=((rt1.c0, rt1.c0, rt1.c1))))) ORDER BY ((((x'')OR(TRIM(DISTINCT rt1.c0, rt1.c2))))AND(JULIANDAY(rt1.c2, vt0.c0, rt1.c0))) ASC, (((rt1.c1))>=((rt1.c0))) COLLATE BINARY, ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(LENGTH(rt1.c1))))AND((+ (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END)<<((((vt0.c0, rt1.c0, rt1.c1))==((rt1.c0, rt1.c0, rt1.c1))))) WHERE ((rt1.c1 IN (vt0.c0)) COLLATE NOCASE) ORDER BY ((((x'')OR(TRIM(DISTINCT rt1.c0, rt1.c2))))AND(JULIANDAY(rt1.c2, vt0.c0, rt1.c0))) ASC, (((rt1.c1))>=((rt1.c0))) COLLATE BINARY, ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(LENGTH(rt1.c1))))AND((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END)<<((((vt0.c0, rt1.c0, rt1.c1))=((rt1.c0, rt1.c0, rt1.c1))))) ORDER BY ((((x'')OR(TRIM(DISTINCT rt1.c0, rt1.c2))))AND(JULIANDAY(rt1.c2, vt0.c0, rt1.c0))) ASC, (((rt1.c1))>=((rt1.c0))) COLLATE BINARY, ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(LENGTH(rt1.c1))))AND((+ (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END)<<((((vt0.c0, rt1.c0, rt1.c1))==((rt1.c0, rt1.c0, rt1.c1))))) WHERE ((rt1.c1 IN (vt0.c0)) COLLATE NOCASE) ORDER BY ((((x'')OR(TRIM(DISTINCT rt1.c0, rt1.c2))))AND(JULIANDAY(rt1.c2, vt0.c0, rt1.c0))) ASC, (((rt1.c1))>=((rt1.c0))) COLLATE BINARY, ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(LENGTH(rt1.c1))))AND((+ (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((+ (vt0.c0))))>=(((- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt0.c0))))>=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((+ (vt0.c0))))>=(((- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt0.c0))))>=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((+ (vt0.c0))))>=(((- (vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS INTEGER))%((NOT (rt1.c0))))) ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, rt1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))%((NOT (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, rt1.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS INTEGER))%((NOT (rt1.c0))))) ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, rt1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))%((NOT (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, rt1.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS INTEGER))%((NOT (rt1.c0))))) ORDER BY (- (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, rt1.c2 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY rt1.c2 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY rt1.c2 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY rt1.c2 COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'z1삜5' ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'z1삜5' ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'z1삜5' ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'z1삜5' ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'z1삜5' ELSE vt0.c0 END) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, rt1 WHERE (CASE rt1.c1  WHEN CASE WHEN rt1.c0 THEN rt1.c2 END THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN CASE WHEN rt1.c0 THEN rt1.c2 END THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CASE rt1.c1  WHEN CASE WHEN rt1.c0 THEN rt1.c2 END THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN CASE WHEN rt1.c0 THEN rt1.c2 END THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CASE rt1.c1  WHEN CASE WHEN rt1.c0 THEN rt1.c2 END THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END);
SELECT * FROM vt0, rt1 WHERE ((- ((rt1.c1 IN ())))) ORDER BY ((((0xffffffff9fe3b429) BETWEEN (rt1.c0) AND (vt0.c0)))<(((rt1.c0)<>(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((0Xffffffff9fe3b429) BETWEEN (rt1.c0) AND (vt0.c0)))<(((rt1.c0)!=(rt1.c1))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((- ((rt1.c1 IN ())))) ORDER BY ((((0xffffffff9fe3b429) BETWEEN (rt1.c0) AND (vt0.c0)))<(((rt1.c0)<>(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((0Xffffffff9fe3b429) BETWEEN (rt1.c0) AND (vt0.c0)))<(((rt1.c0)!=(rt1.c1))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((- ((rt1.c1 IN ())))) ORDER BY ((((0xffffffff9fe3b429) BETWEEN (rt1.c0) AND (vt0.c0)))<(((rt1.c0)<>(rt1.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)-(0.3879350496756424))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)-(0.3879350496756424))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)-(0.3879350496756424))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)-(0.3879350496756424))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)-(0.3879350496756424))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS REAL))>(CAST(rt1.c2 AS REAL)))) ORDER BY (((((((((- (x'')))AND(((x'') NOT NULL))))OR(CAST(rt1.c0 AS INTEGER))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((NULL))))))OR('S*QF*푠V4Q')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL))>(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY (((((((((- (x'')))AND(((x'') NOT NULL))))OR(CAST(rt1.c0 AS INTEGER))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((NULL))))))OR('S*QF*푠V4Q')) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS REAL))>(CAST(rt1.c2 AS REAL)))) ORDER BY (((((((((- (x'')))AND(((x'') NOT NULL))))OR(CAST(rt1.c0 AS INTEGER))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((NULL))))))OR('S*QF*푠V4Q')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL))>(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY (((((((((- (x'')))AND(((x'') NOT NULL))))OR(CAST(rt1.c0 AS INTEGER))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((NULL))))))OR('S*QF*푠V4Q')) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS REAL))>(CAST(rt1.c2 AS REAL)))) ORDER BY (((((((((- (x'')))AND(((x'') NOT NULL))))OR(CAST(rt1.c0 AS INTEGER))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((NULL))))))OR('S*QF*푠V4Q')) DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY (((+ (vt0.c0)))*(HEX(DISTINCT rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((+ (vt0.c0)))*(HEX(DISTINCT rt1.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY (((+ (vt0.c0)))*(HEX(DISTINCT rt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((+ (vt0.c0)))*(HEX(DISTINCT rt1.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY (((+ (vt0.c0)))*(HEX(DISTINCT rt1.c2))) DESC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)+(json_array_length(rt1.c1, rt1.c1)))) ORDER BY 1.989123618E9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)+(json_array_length(rt1.c1, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY 1.989123618E9 ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)+(json_array_length(rt1.c1, rt1.c1)))) ORDER BY 1.989123618E9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)+(json_array_length(rt1.c1, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY 1.989123618E9 ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)+(json_array_length(rt1.c1, rt1.c1)))) ORDER BY 1.989123618E9 ASC  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.8905176292566421)*(rt1.c0))) BETWEEN (x'') AND (((('', rt1.c2, rt1.c0))<=((vt0.c0, rt1.c0, vt0.c0))))) WHERE (((rt1.c1)+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.8905176292566421)*(rt1.c0))) BETWEEN (x'') AND (((('', rt1.c2, rt1.c0))<=((vt0.c0, rt1.c0, vt0.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.8905176292566421)*(rt1.c0))) BETWEEN (x'') AND (((('', rt1.c2, rt1.c0))<=((vt0.c0, rt1.c0, vt0.c0))))) WHERE (((rt1.c1)+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.8905176292566421)*(rt1.c0))) BETWEEN (x'') AND (((('', rt1.c2, rt1.c0))<=((vt0.c0, rt1.c0, vt0.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.8905176292566421)*(rt1.c0))) BETWEEN (x'') AND (((('', rt1.c2, rt1.c0))<=((vt0.c0, rt1.c0, vt0.c0))))) WHERE (((rt1.c1)+((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (rt1.c1 IN (rt1.c1))  WHEN ((rt1.c0)<>(rt1.c2)) THEN ((rt1.c2) IS TRUE) ELSE (NULL IN ()) END) ORDER BY (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)), (((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))), CAST(rt1.c1 AS NUMERIC)))<=(((NOT (rt1.c2)), ((rt1.c0) ISNULL), ((((((((0.9861778277608262)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN (rt1.c1))  WHEN ((rt1.c0)!=(rt1.c2)) THEN ((rt1.c2) IS TRUE) ELSE (NULL IN ()) END) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)), (((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))), CAST(rt1.c1 AS NUMERIC)))<=(((NOT (rt1.c2)), ((rt1.c0) ISNULL), ((((((((0.9861778277608262)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (rt1.c1 IN (rt1.c1))  WHEN ((rt1.c0)<>(rt1.c2)) THEN ((rt1.c2) IS TRUE) ELSE (NULL IN ()) END) ORDER BY (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)), (((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))), CAST(rt1.c1 AS NUMERIC)))<=(((NOT (rt1.c2)), ((rt1.c0) ISNULL), ((((((((0.9861778277608262)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN (rt1.c1))  WHEN ((rt1.c0)!=(rt1.c2)) THEN ((rt1.c2) IS TRUE) ELSE (NULL IN ()) END) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)), (((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))), CAST(rt1.c1 AS NUMERIC)))<=(((NOT (rt1.c2)), ((rt1.c0) ISNULL), ((((((((0.9861778277608262)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (rt1.c1 IN (rt1.c1))  WHEN ((rt1.c0)<>(rt1.c2)) THEN ((rt1.c2) IS TRUE) ELSE (NULL IN ()) END) ORDER BY (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)), (((NULL)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))), CAST(rt1.c1 AS NUMERIC)))<=(((NOT (rt1.c2)), ((rt1.c0) ISNULL), ((((((((0.9861778277608262)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((0.26528439951003213)OR(((rt1.c0)<>(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN 0.8983750243307119 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.26528439951003213)OR(((rt1.c0)!=(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN 0.8983750243307119 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((0.26528439951003213)OR(((rt1.c0)<>(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN 0.8983750243307119 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.26528439951003213)OR(((rt1.c0)!=(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN 0.8983750243307119 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((0.26528439951003213)OR(((rt1.c0)<>(rt1.c2)))))OR(CASE WHEN rt1.c1 THEN 0.8983750243307119 END)));
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c2))) ORDER BY (- (rt1.c0)) COLLATE BINARY, '''7-CS\nk';
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c0)) COLLATE BINARY, '''7-CS\nk');
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c2))) ORDER BY (- (rt1.c0)) COLLATE BINARY, '''7-CS\nk';
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c0)) COLLATE BINARY, '''7-CS\nk');
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c2))) ORDER BY (- (rt1.c0)) COLLATE BINARY, '''7-CS\nk';
SELECT * FROM rt1 WHERE (((rt1.c0)!=(rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<>(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c0)!=(rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<>(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c0)!=(rt1.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ((- (105830045))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ((- (105830045))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ((- (105830045))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ((- (105830045))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c1))) NOT BETWEEN ((- (105830045))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT * FROM rt1, vt0 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) ORDER BY ((((rt1.c0)|(vt0.c0))) BETWEEN (rt1.c2 COLLATE BINARY) AND (CAST(rt1.c1 AS INTEGER))) DESC  NULLS LAST, (((NOT (x'')))>((((rt1.c1))<((rt1.c2))))) ASC  NULLS LAST, (((((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c0, vt0.c0, rt1.c1, rt1.c0, rt1.c2))))<(((rt1.c1)>=('Vqf')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)|(vt0.c0))) BETWEEN (rt1.c2 COLLATE BINARY) AND (CAST(rt1.c1 AS INTEGER))) DESC  NULLS LAST, (((NOT (x'')))>((((rt1.c1))<((rt1.c2))))) ASC  NULLS LAST, (((((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c0, vt0.c0, rt1.c1, rt1.c0, rt1.c2))))<(((rt1.c1)>=('Vqf')))) DESC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) ORDER BY ((((rt1.c0)|(vt0.c0))) BETWEEN (rt1.c2 COLLATE BINARY) AND (CAST(rt1.c1 AS INTEGER))) DESC  NULLS LAST, (((NOT (x'')))>((((rt1.c1))<((rt1.c2))))) ASC  NULLS LAST, (((((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c0, vt0.c0, rt1.c1, rt1.c0, rt1.c2))))<(((rt1.c1)>=('Vqf')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)|(vt0.c0))) BETWEEN (rt1.c2 COLLATE BINARY) AND (CAST(rt1.c1 AS INTEGER))) DESC  NULLS LAST, (((NOT (x'')))>((((rt1.c1))<((rt1.c2))))) ASC  NULLS LAST, (((((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c0, vt0.c0, rt1.c1, rt1.c0, rt1.c2))))<(((rt1.c1)>=('Vqf')))) DESC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((+ (((vt0.c0)<>(vt0.c0))))) ORDER BY ((((rt1.c0)|(vt0.c0))) BETWEEN (rt1.c2 COLLATE BINARY) AND (CAST(rt1.c1 AS INTEGER))) DESC  NULLS LAST, (((NOT (x'')))>((((rt1.c1))<((rt1.c2))))) ASC  NULLS LAST, (((((vt0.c0, rt1.c2, rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c0, vt0.c0, rt1.c1, rt1.c0, rt1.c2))))<(((rt1.c1)>=('Vqf')))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((('1330862927')) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN ((((rt1.c2))=(('-1327316836')))) AND (((rt1.c1) IS TRUE)))) ORDER BY CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c0 IN ()) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2)))AND(NULL)))OR(vt0.c0)) END ASC  NULLS LAST, ((rt1.c0)>=(rt1.c2)) COLLATE NOCASE ASC, (((rt1.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('1330862927')) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN ((((rt1.c2))=(('-1327316836')))) AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c0 IN ()) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2)))AND(NULL)))OR(vt0.c0)) END ASC  NULLS LAST, ((rt1.c0)>=(rt1.c2)) COLLATE NOCASE ASC, (((rt1.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END))) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((('1330862927')) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN ((((rt1.c2))=(('-1327316836')))) AND (((rt1.c1) IS TRUE)))) ORDER BY CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c0 IN ()) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2)))AND(NULL)))OR(vt0.c0)) END ASC  NULLS LAST, ((rt1.c0)>=(rt1.c2)) COLLATE NOCASE ASC, (((rt1.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('1330862927')) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN ((((rt1.c2))=(('-1327316836')))) AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c0 IN ()) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2)))AND(NULL)))OR(vt0.c0)) END ASC  NULLS LAST, ((rt1.c0)>=(rt1.c2)) COLLATE NOCASE ASC, (((rt1.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END))) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((('1330862927')) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN ((((rt1.c2))=(('-1327316836')))) AND (((rt1.c1) IS TRUE)))) ORDER BY CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c0 IN ()) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2)))AND(NULL)))OR(vt0.c0)) END ASC  NULLS LAST, ((rt1.c0)>=(rt1.c2)) COLLATE NOCASE ASC, (((rt1.c2)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN x'' ELSE rt1.c2 END))) DESC;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB)) NOT BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS BLOB)) NOT BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB)) NOT BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS BLOB)) NOT BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB)) NOT BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL));
SELECT ALL * FROM vt0, rt1 WHERE (0.5992553419133584 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.5992553419133584 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (0.5992553419133584 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.5992553419133584 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (0.5992553419133584 COLLATE RTRIM);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((CAST(rt1.c1 AS NUMERIC))AND(((NULL)LIKE(rt1.c0)))))AND(vt0.c0)))OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))))OR((('647736558')!=(vt0.c0))))) ORDER BY 1138437842 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c1 AS NUMERIC))AND(((NULL)LIKE(rt1.c0)))))AND(vt0.c0)))OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))))OR((('647736558')!=(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 1138437842 DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((CAST(rt1.c1 AS NUMERIC))AND(((NULL)LIKE(rt1.c0)))))AND(vt0.c0)))OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))))OR((('647736558')!=(vt0.c0))))) ORDER BY 1138437842 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c1 AS NUMERIC))AND(((NULL)LIKE(rt1.c0)))))AND(vt0.c0)))OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))))OR((('647736558')!=(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 1138437842 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((NULL IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((NULL IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((NULL IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((('t\n}+*bmR(') NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) WHERE ((((rt1.c1 IN (vt0.c0)))%((('2%Mk!') NOT BETWEEN (rt1.c2) AND (0.2545786836905708))))) ORDER BY CASE rt1.c2 COLLATE BINARY  WHEN ((rt1.c0)<=(rt1.c1)) THEN ((rt1.c0)/('709뎿''|-')) ELSE UNICODE(rt1.c1) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (vt0.c0)))%((('2%Mk!') NOT BETWEEN (rt1.c2) AND (0.2545786836905708))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((('t\n}+*bmR(') NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ORDER BY CASE rt1.c2 COLLATE BINARY  WHEN ((rt1.c0)<=(rt1.c1)) THEN ((rt1.c0)/('709뎿''|-')) ELSE UNICODE(rt1.c1) END DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((('t\n}+*bmR(') NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) WHERE ((((rt1.c1 IN (vt0.c0)))%((('2%Mk!') NOT BETWEEN (rt1.c2) AND (0.2545786836905708))))) ORDER BY CASE rt1.c2 COLLATE BINARY  WHEN ((rt1.c0)<=(rt1.c1)) THEN ((rt1.c0)/('709뎿''|-')) ELSE UNICODE(rt1.c1) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (vt0.c0)))%((('2%Mk!') NOT BETWEEN (rt1.c2) AND (0.2545786836905708))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((('t\n}+*bmR(') NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) ORDER BY CASE rt1.c2 COLLATE BINARY  WHEN ((rt1.c0)<=(rt1.c1)) THEN ((rt1.c0)/('709뎿''|-')) ELSE UNICODE(rt1.c1) END DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((('t\n}+*bmR(') NOT BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) WHERE ((((rt1.c1 IN (vt0.c0)))%((('2%Mk!') NOT BETWEEN (rt1.c2) AND (0.2545786836905708))))) ORDER BY CASE rt1.c2 COLLATE BINARY  WHEN ((rt1.c0)<=(rt1.c1)) THEN ((rt1.c0)/('709뎿''|-')) ELSE UNICODE(rt1.c1) END DESC;
SELECT * FROM rt1, vt0 WHERE (((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((((vt0.c0)AND(rt1.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((((vt0.c0)AND(rt1.c0)))OR(x''))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((((vt0.c0)AND(rt1.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((((vt0.c0)AND(rt1.c0)))OR(x''))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((((vt0.c0)AND(rt1.c0)))OR(x'')))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)||(CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE '1912486225' END)) WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY (((rt1.c2)|(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)||(CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE '1912486225' END)) ORDER BY (((rt1.c2)|(rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)||(CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE '1912486225' END)) WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY (((rt1.c2)|(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)||(CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE '1912486225' END)) ORDER BY (((rt1.c2)|(rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)||(CASE rt1.c2  WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE '1912486225' END)) WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY (((rt1.c2)|(rt1.c2)) IN ());
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt1 WHERE (x'') ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((rt1.c1))));
SELECT ALL * FROM vt0, rt1 WHERE (x'') ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((rt1.c1))));
SELECT ALL * FROM vt0, rt1 WHERE (x'') ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((rt1.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE x'afcd'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE x'afcd'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE x'afcd'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE x'afcd'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE x'afcd'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)LIKE(vt0.c0)) END);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ()))))) ORDER BY UPPER(((((0X38167444)AND(rt1.c2)))AND(rt1.c1))) DESC  NULLS FIRST, ((rt1.c2) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY UPPER(((((0x38167444)AND(rt1.c2)))AND(rt1.c1))) DESC  NULLS FIRST, ((rt1.c2) NOTNULL) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ()))))) ORDER BY UPPER(((((0X38167444)AND(rt1.c2)))AND(rt1.c1))) DESC  NULLS FIRST, ((rt1.c2) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY UPPER(((((0x38167444)AND(rt1.c2)))AND(rt1.c1))) DESC  NULLS FIRST, ((rt1.c2) NOTNULL) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((rt1.c1)) AND (((rt1.c0 IN ()))))) ORDER BY UPPER(((((0X38167444)AND(rt1.c2)))AND(rt1.c1))) DESC  NULLS FIRST, ((rt1.c2) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0 WHERE (UNLIKELY(((NULL) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((NULL) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(((NULL) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((NULL) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(((NULL) IS FALSE)));
SELECT ALL * FROM vt0, rt1 WHERE ((- (((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (((rt1.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.c0) IS TRUE)) IS FALSE) WHERE (CASE WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (rt1.c1 IN ()) WHEN TYPEOF(rt1.c1) THEN ((vt0.c0)||(vt0.c0)) WHEN ((x'1e3e') NOT NULL) THEN NULL END) ORDER BY (((TRIM('')))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))), rt1.c1 DESC  NULLS LAST, (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN (rt1.c0, (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (rt1.c1 IN ()) WHEN TYPEOF(rt1.c1) THEN ((vt0.c0)||(vt0.c0)) WHEN ((x'1e3e') NOT NULL) THEN NULL END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.c0) IS TRUE)) IS FALSE) ORDER BY (((TRIM('')))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))), rt1.c1 DESC  NULLS LAST, (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN (rt1.c0, (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.c0) IS TRUE)) IS FALSE) WHERE (CASE WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (rt1.c1 IN ()) WHEN TYPEOF(rt1.c1) THEN ((vt0.c0)||(vt0.c0)) WHEN ((x'1e3e') NOT NULL) THEN NULL END) ORDER BY (((TRIM('')))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))), rt1.c1 DESC  NULLS LAST, (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN (rt1.c0, (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (rt1.c1 IN ()) WHEN TYPEOF(rt1.c1) THEN ((vt0.c0)||(vt0.c0)) WHEN ((x'1e3e') NOT NULL) THEN NULL END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.c0) IS TRUE)) IS FALSE) ORDER BY (((TRIM('')))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))), rt1.c1 DESC  NULLS LAST, (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN (rt1.c0, (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((vt0.c0) IS TRUE)) IS FALSE) WHERE (CASE WHEN COALESCE(DISTINCT rt1.c0, rt1.c0) THEN (rt1.c1 IN ()) WHEN TYPEOF(rt1.c1) THEN ((vt0.c0)||(vt0.c0)) WHEN ((x'1e3e') NOT NULL) THEN NULL END) ORDER BY (((TRIM('')))>=(((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))), rt1.c1 DESC  NULLS LAST, (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END IN (rt1.c0, (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))))  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (CASE WHEN x'faa5' THEN ((rt1.c2)%(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY WHEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((rt1.c1)=(vt0.c0)) END) ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END IN ())  NULLS LAST, (CAST(rt1.c2 AS INTEGER) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'faa5' THEN ((rt1.c2)%(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY WHEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((rt1.c1)==(vt0.c0)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END IN ())  NULLS LAST, (CAST(rt1.c2 AS INTEGER) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN x'faa5' THEN ((rt1.c2)%(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY WHEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((rt1.c1)=(vt0.c0)) END) ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END IN ())  NULLS LAST, (CAST(rt1.c2 AS INTEGER) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'faa5' THEN ((rt1.c2)%(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY WHEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((rt1.c1)==(vt0.c0)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END IN ())  NULLS LAST, (CAST(rt1.c2 AS INTEGER) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN x'faa5' THEN ((rt1.c2)%(vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN rt1.c0 COLLATE BINARY WHEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END THEN rt1.c2 COLLATE RTRIM ELSE ((rt1.c1)=(vt0.c0)) END) ORDER BY (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END IN ())  NULLS LAST, (CAST(rt1.c2 AS INTEGER) IN ()) ASC  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)GLOB((((rt1.c0))>=((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)GLOB((((rt1.c0))>=((rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)GLOB((((rt1.c0))>=((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)GLOB((((rt1.c0))>=((rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)GLOB((((rt1.c0))>=((rt1.c0))))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((NULL) BETWEEN (CASE WHEN rt1.c2 THEN vt0.c0 END) AND (LOWER(rt1.c1)))) ORDER BY 0.40820463566913257  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (CASE WHEN rt1.c2 THEN vt0.c0 END) AND (LOWER(rt1.c1)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.40820463566913257  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((NULL) BETWEEN (CASE WHEN rt1.c2 THEN vt0.c0 END) AND (LOWER(rt1.c1)))) ORDER BY 0.40820463566913257  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (CASE WHEN rt1.c2 THEN vt0.c0 END) AND (LOWER(rt1.c1)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.40820463566913257  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((NULL) BETWEEN (CASE WHEN rt1.c2 THEN vt0.c0 END) AND (LOWER(rt1.c1)))) ORDER BY 0.40820463566913257  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN '647736558' ELSE rt1.c1 END) AND ('-1327316836')) WHERE ((rt1.c2 IN ()) COLLATE BINARY) ORDER BY ((NULL) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN '647736558' ELSE rt1.c1 END) AND ('-1327316836')) ORDER BY ((NULL) IS FALSE));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN '647736558' ELSE rt1.c1 END) AND ('-1327316836')) WHERE ((rt1.c2 IN ()) COLLATE BINARY) ORDER BY ((NULL) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN '647736558' ELSE rt1.c1 END) AND ('-1327316836')) ORDER BY ((NULL) IS FALSE));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN rt1.c2 THEN '647736558' ELSE rt1.c1 END) AND ('-1327316836')) WHERE ((rt1.c2 IN ()) COLLATE BINARY) ORDER BY ((NULL) IS FALSE);
SELECT ALL * FROM vt0, rt1 WHERE (HEX(COALESCE(rt1.c1, vt0.c0))) ORDER BY ((((rt1.c0)>>(rt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((HEX(COALESCE(rt1.c1, vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c0)>>(rt1.c0))) IS FALSE));
SELECT ALL * FROM vt0, rt1 WHERE (HEX(COALESCE(rt1.c1, vt0.c0))) ORDER BY ((((rt1.c0)>>(rt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((HEX(COALESCE(rt1.c1, vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c0)>>(rt1.c0))) IS FALSE));
SELECT ALL * FROM vt0, rt1 WHERE (HEX(COALESCE(rt1.c1, vt0.c0))) ORDER BY ((((rt1.c0)>>(rt1.c0))) IS FALSE);
SELECT ALL * FROM vt0, rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ())) ORDER BY ((LIKELY(rt1.c2))IS NOT(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, rt1.c0, CASE WHEN CASE WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END THEN ((rt1.c1) ISNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((LIKELY(rt1.c2))IS NOT(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, rt1.c0, CASE WHEN CASE WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END THEN ((rt1.c1) ISNULL) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ())) ORDER BY ((LIKELY(rt1.c2))IS NOT(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, rt1.c0, CASE WHEN CASE WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END THEN ((rt1.c1) ISNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((LIKELY(rt1.c2))IS NOT(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, rt1.c0, CASE WHEN CASE WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END THEN ((rt1.c1) ISNULL) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ())) ORDER BY ((LIKELY(rt1.c2))IS NOT(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST, rt1.c0, CASE WHEN CASE WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END THEN ((rt1.c1) ISNULL) END ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (CAST(((rt1.c2)AND(rt1.c0)) AS TEXT)) ORDER BY ((('')) NOT BETWEEN (('\zD')) AND ((((rt1.c2)OR(rt1.c1))))), rt1.c0 DESC, rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)AND(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((('')) NOT BETWEEN (('\zD')) AND ((((rt1.c2)OR(rt1.c1))))), rt1.c0 DESC, rt1.c1 DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c2)AND(rt1.c0)) AS TEXT)) ORDER BY ((('')) NOT BETWEEN (('\zD')) AND ((((rt1.c2)OR(rt1.c1))))), rt1.c0 DESC, rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)AND(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((('')) NOT BETWEEN (('\zD')) AND ((((rt1.c2)OR(rt1.c1))))), rt1.c0 DESC, rt1.c1 DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c2)AND(rt1.c0)) AS TEXT)) ORDER BY ((('')) NOT BETWEEN (('\zD')) AND ((((rt1.c2)OR(rt1.c1))))), rt1.c0 DESC, rt1.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE HEX(rt1.c1)  WHEN CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END THEN ((rt1.c0)%(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(rt1.c1)  WHEN CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END THEN ((rt1.c0)%(rt1.c1)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE HEX(rt1.c1)  WHEN CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END THEN ((rt1.c0)%(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(rt1.c1)  WHEN CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END THEN ((rt1.c0)%(rt1.c1)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE HEX(rt1.c1)  WHEN CASE rt1.c2  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END THEN ((rt1.c0)%(rt1.c1)) END);
SELECT * FROM vt0, rt1 WHERE (CASE ((rt1.c0) IS TRUE)  WHEN rt1.c2 COLLATE BINARY THEN ((vt0.c0) ISNULL) END) ORDER BY load_extension((((rt1.c0))<((rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) IS TRUE)  WHEN rt1.c2 COLLATE BINARY THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY load_extension((((rt1.c0))<((rt1.c2)))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (CASE ((rt1.c0) IS TRUE)  WHEN rt1.c2 COLLATE BINARY THEN ((vt0.c0) ISNULL) END) ORDER BY load_extension((((rt1.c0))<((rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0) IS TRUE)  WHEN rt1.c2 COLLATE BINARY THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY load_extension((((rt1.c0))<((rt1.c2)))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (CASE ((rt1.c0) IS TRUE)  WHEN rt1.c2 COLLATE BINARY THEN ((vt0.c0) ISNULL) END) ORDER BY load_extension((((rt1.c0))<((rt1.c2)))) ASC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((rt1.c0 COLLATE BINARY IN ())) ORDER BY ((((rt1.c0) NOTNULL)) BETWEEN (((960863513)+(vt0.c0))) AND (CAST(1.912486225E9 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0) NOTNULL)) BETWEEN (((960863513)+(vt0.c0))) AND (CAST(1.912486225E9 AS REAL))));
SELECT * FROM rt1, vt0 WHERE ((rt1.c0 COLLATE BINARY IN ())) ORDER BY ((((rt1.c0) NOTNULL)) BETWEEN (((960863513)+(vt0.c0))) AND (CAST(1.912486225E9 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0) NOTNULL)) BETWEEN (((960863513)+(vt0.c0))) AND (CAST(1.912486225E9 AS REAL))));
SELECT * FROM rt1, vt0 WHERE ((rt1.c0 COLLATE BINARY IN ())) ORDER BY ((((rt1.c0) NOTNULL)) BETWEEN (((960863513)+(vt0.c0))) AND (CAST(1.912486225E9 AS REAL)));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0) NOTNULL) IN (((rt1.c0)<=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOTNULL) IN (((rt1.c0)<=(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0) NOTNULL) IN (((rt1.c0)<=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOTNULL) IN (((rt1.c0)<=(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0) NOTNULL) IN (((rt1.c0)<=(rt1.c0)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (IFNULL(rt1.c1 COLLATE NOCASE, CAST(rt1.c1 AS INTEGER))) ORDER BY (((((((((+ (rt1.c0)))OR(vt0.c0 COLLATE BINARY)))OR(LIKELIHOOD(rt1.c2, 0.46587858462739107))))AND((((rt1.c0, rt1.c2, rt1.c1))==((rt1.c1, vt0.c0, rt1.c2))))))AND((((vt0.c0, rt1.c0, rt1.c0))>=((vt0.c0, rt1.c0, vt0.c0))))) ASC, rt1.c2 DESC  NULLS LAST, (((((0X6346c4ad)<>(vt0.c0)), vt0.c0, x'' COLLATE RTRIM))>((0.4753240138101139, ((x'')>>(rt1.c2)), CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt1.c1 COLLATE NOCASE, CAST(rt1.c1 AS INTEGER))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((+ (rt1.c0)))OR(vt0.c0 COLLATE BINARY)))OR(LIKELIHOOD(rt1.c2, 0.46587858462739107))))AND((((rt1.c0, rt1.c2, rt1.c1))=((rt1.c1, vt0.c0, rt1.c2))))))AND((((vt0.c0, rt1.c0, rt1.c0))>=((vt0.c0, rt1.c0, vt0.c0))))) ASC, rt1.c2 DESC  NULLS LAST, (((((0x6346c4ad)<>(vt0.c0)), vt0.c0, x'' COLLATE RTRIM))>((0.4753240138101139, ((x'')>>(rt1.c2)), CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (IFNULL(rt1.c1 COLLATE NOCASE, CAST(rt1.c1 AS INTEGER))) ORDER BY (((((((((+ (rt1.c0)))OR(vt0.c0 COLLATE BINARY)))OR(LIKELIHOOD(rt1.c2, 0.46587858462739107))))AND((((rt1.c0, rt1.c2, rt1.c1))==((rt1.c1, vt0.c0, rt1.c2))))))AND((((vt0.c0, rt1.c0, rt1.c0))>=((vt0.c0, rt1.c0, vt0.c0))))) ASC, rt1.c2 DESC  NULLS LAST, (((((0X6346c4ad)<>(vt0.c0)), vt0.c0, x'' COLLATE RTRIM))>((0.4753240138101139, ((x'')>>(rt1.c2)), CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(rt1.c1 COLLATE NOCASE, CAST(rt1.c1 AS INTEGER))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((+ (rt1.c0)))OR(vt0.c0 COLLATE BINARY)))OR(LIKELIHOOD(rt1.c2, 0.46587858462739107))))AND((((rt1.c0, rt1.c2, rt1.c1))=((rt1.c1, vt0.c0, rt1.c2))))))AND((((vt0.c0, rt1.c0, rt1.c0))>=((vt0.c0, rt1.c0, vt0.c0))))) ASC, rt1.c2 DESC  NULLS LAST, (((((0x6346c4ad)<>(vt0.c0)), vt0.c0, x'' COLLATE RTRIM))>((0.4753240138101139, ((x'')>>(rt1.c2)), CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (IFNULL(rt1.c1 COLLATE NOCASE, CAST(rt1.c1 AS INTEGER))) ORDER BY (((((((((+ (rt1.c0)))OR(vt0.c0 COLLATE BINARY)))OR(LIKELIHOOD(rt1.c2, 0.46587858462739107))))AND((((rt1.c0, rt1.c2, rt1.c1))==((rt1.c1, vt0.c0, rt1.c2))))))AND((((vt0.c0, rt1.c0, rt1.c0))>=((vt0.c0, rt1.c0, vt0.c0))))) ASC, rt1.c2 DESC  NULLS LAST, (((((0X6346c4ad)<>(vt0.c0)), vt0.c0, x'' COLLATE RTRIM))>((0.4753240138101139, ((x'')>>(rt1.c2)), CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 END))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (rt1.c0 COLLATE BINARY)));
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c0)<>(rt1.c0)) AS INTEGER)) ORDER BY x'' DESC, CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)<>(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY x'' DESC, CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC);
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c0)<>(rt1.c0)) AS INTEGER)) ORDER BY x'' DESC, CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)<>(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY x'' DESC, CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC);
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c0)<>(rt1.c0)) AS INTEGER)) ORDER BY x'' DESC, CAST(vt0.c0 COLLATE NOCASE AS REAL) DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) IS FALSE) IN ()) WHERE (((((rt1.c0)OR(((rt1.c1) IS TRUE))))AND(x'90fc')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(((rt1.c1) IS TRUE))))AND(x'90fc'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) IS FALSE) IN ()) WHERE (((((rt1.c0)OR(((rt1.c1) IS TRUE))))AND(x'90fc')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(((rt1.c1) IS TRUE))))AND(x'90fc'))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1) IS FALSE) IN ()) WHERE (((((rt1.c0)OR(((rt1.c1) IS TRUE))))AND(x'90fc')));
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c1, vt0.c0, rt1.c2, rt1.c1)))))==((rt1.c1)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN ((- (vt0.c0))) AND (((rt1.c2)/(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c1, vt0.c0, rt1.c2, rt1.c1)))))==((rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN ((- (vt0.c0))) AND (((rt1.c2)/(rt1.c1)))) ASC);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c1, vt0.c0, rt1.c2, rt1.c1)))))==((rt1.c1)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN ((- (vt0.c0))) AND (((rt1.c2)/(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c1, vt0.c0, rt1.c2, rt1.c1)))))==((rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN ((- (vt0.c0))) AND (((rt1.c2)/(rt1.c1)))) ASC);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c1, vt0.c0, rt1.c2, rt1.c1)))))==((rt1.c1)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN ((- (vt0.c0))) AND (((rt1.c2)/(rt1.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((rt1.c2))<=((vt0.c0))), ((rt1.c0)>(rt1.c2)), rt1.c1))<=(((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)), (((rt1.c1, rt1.c2, rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1, vt0.c0, rt1.c2)) AND ((vt0.c0, vt0.c0, rt1.c2, rt1.c0, vt0.c0)))))) WHERE (CASE WHEN json_type(rt1.c1) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)) END) ORDER BY CASE ((rt1.c1) BETWEEN (0Xffffffff8e24860e) AND (vt0.c0))  WHEN CAST(rt1.c1 AS BLOB) THEN ((-1.612467159E9) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END DESC  NULLS FIRST, ((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_type(rt1.c1) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((rt1.c2))<=((vt0.c0))), ((rt1.c0)>(rt1.c2)), rt1.c1))<=(((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)), (((rt1.c1, rt1.c2, rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1, vt0.c0, rt1.c2)) AND ((vt0.c0, vt0.c0, rt1.c2, rt1.c0, vt0.c0)))))) ORDER BY CASE ((rt1.c1) BETWEEN (0Xffffffff8e24860e) AND (vt0.c0))  WHEN CAST(rt1.c1 AS BLOB) THEN ((-1.612467159E9) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END DESC  NULLS FIRST, ((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((rt1.c2))<=((vt0.c0))), ((rt1.c0)>(rt1.c2)), rt1.c1))<=(((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)), (((rt1.c1, rt1.c2, rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1, vt0.c0, rt1.c2)) AND ((vt0.c0, vt0.c0, rt1.c2, rt1.c0, vt0.c0)))))) WHERE (CASE WHEN json_type(rt1.c1) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)) END) ORDER BY CASE ((rt1.c1) BETWEEN (0Xffffffff8e24860e) AND (vt0.c0))  WHEN CAST(rt1.c1 AS BLOB) THEN ((-1.612467159E9) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END DESC  NULLS FIRST, ((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_type(rt1.c1) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((rt1.c2))<=((vt0.c0))), ((rt1.c0)>(rt1.c2)), rt1.c1))<=(((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)), (((rt1.c1, rt1.c2, rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1, vt0.c0, rt1.c2)) AND ((vt0.c0, vt0.c0, rt1.c2, rt1.c0, vt0.c0)))))) ORDER BY CASE ((rt1.c1) BETWEEN (0Xffffffff8e24860e) AND (vt0.c0))  WHEN CAST(rt1.c1 AS BLOB) THEN ((-1.612467159E9) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END DESC  NULLS FIRST, ((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((rt1.c2))<=((vt0.c0))), ((rt1.c0)>(rt1.c2)), rt1.c1))<=(((((rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))OR(rt1.c0)))AND(rt1.c0)), (((rt1.c1, rt1.c2, rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, vt0.c0, rt1.c1, vt0.c0, rt1.c2)) AND ((vt0.c0, vt0.c0, rt1.c2, rt1.c0, vt0.c0)))))) WHERE (CASE WHEN json_type(rt1.c1) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)) END) ORDER BY CASE ((rt1.c1) BETWEEN (0Xffffffff8e24860e) AND (vt0.c0))  WHEN CAST(rt1.c1 AS BLOB) THEN ((-1.612467159E9) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END DESC  NULLS FIRST, ((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c0 AS BLOB));
SELECT * FROM rt1 WHERE (((((((rt1.c2)+(rt1.c1)))OR(((((((((rt1.c1)OR(-1327316836)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))))OR(((rt1.c2) ISNULL)))) ORDER BY ((+ (rt1.c0)) IN ())  NULLS FIRST, rt1.c1 ASC  NULLS FIRST, ((((rt1.c0)IS NOT(rt1.c1)))<=(CAST(rt1.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)+(rt1.c1)))OR(((((((((rt1.c1)OR(-1327316836)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))))OR(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((+ (rt1.c0)) IN ())  NULLS FIRST, rt1.c1 ASC  NULLS FIRST, ((((rt1.c0)IS NOT(rt1.c1)))<=(CAST(rt1.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((rt1.c2)+(rt1.c1)))OR(((((((((rt1.c1)OR(-1327316836)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))))OR(((rt1.c2) ISNULL)))) ORDER BY ((+ (rt1.c0)) IN ())  NULLS FIRST, rt1.c1 ASC  NULLS FIRST, ((((rt1.c0)IS NOT(rt1.c1)))<=(CAST(rt1.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)+(rt1.c1)))OR(((((((((rt1.c1)OR(-1327316836)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))))OR(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((+ (rt1.c0)) IN ())  NULLS FIRST, rt1.c1 ASC  NULLS FIRST, ((((rt1.c0)IS NOT(rt1.c1)))<=(CAST(rt1.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((rt1.c2)+(rt1.c1)))OR(((((((((rt1.c1)OR(-1327316836)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))))OR(((rt1.c2) ISNULL)))) ORDER BY ((+ (rt1.c0)) IN ())  NULLS FIRST, rt1.c1 ASC  NULLS FIRST, ((((rt1.c0)IS NOT(rt1.c1)))<=(CAST(rt1.c1 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((TRIM(rt1.c0, rt1.c2)) IS FALSE) WHERE ((+ ((~ (rt1.c1))))) ORDER BY ((CAST(rt1.c0 AS TEXT)) BETWEEN (((rt1.c0)AND(rt1.c0))) AND (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0))))  NULLS LAST, ((((((((CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(vt0.c0)))OR(rt1.c1)))AND(((rt1.c2)-(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt1.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((TRIM(rt1.c0, rt1.c2)) IS FALSE) ORDER BY ((CAST(rt1.c0 AS TEXT)) BETWEEN (((rt1.c0)AND(rt1.c0))) AND (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0))))  NULLS LAST, ((((((((CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(vt0.c0)))OR(rt1.c1)))AND(((rt1.c2)-(rt1.c0)))) DESC);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((TRIM(rt1.c0, rt1.c2)) IS FALSE) WHERE ((+ ((~ (rt1.c1))))) ORDER BY ((CAST(rt1.c0 AS TEXT)) BETWEEN (((rt1.c0)AND(rt1.c0))) AND (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0))))  NULLS LAST, ((((((((CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(vt0.c0)))OR(rt1.c1)))AND(((rt1.c2)-(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt1.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((TRIM(rt1.c0, rt1.c2)) IS FALSE) ORDER BY ((CAST(rt1.c0 AS TEXT)) BETWEEN (((rt1.c0)AND(rt1.c0))) AND (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0))))  NULLS LAST, ((((((((CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(vt0.c0)))OR(rt1.c1)))AND(((rt1.c2)-(rt1.c0)))) DESC);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((TRIM(rt1.c0, rt1.c2)) IS FALSE) WHERE ((+ ((~ (rt1.c1))))) ORDER BY ((CAST(rt1.c0 AS TEXT)) BETWEEN (((rt1.c0)AND(rt1.c0))) AND (((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0))))  NULLS LAST, ((((((((CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR(vt0.c0)))OR(rt1.c1)))AND(((rt1.c2)-(rt1.c0)))) DESC;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1 COLLATE RTRIM)AND(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 COLLATE RTRIM)AND(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1 COLLATE RTRIM)AND(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 COLLATE RTRIM)AND(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1 COLLATE RTRIM)AND(rt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0))))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (vt0.c0) ORDER BY CAST(((rt1.c2)<>(rt1.c1)) AS NUMERIC) DESC, ((((((((((rt1.c0) NOTNULL))AND(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))))AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((rt1.c2)!=(rt1.c1)) AS NUMERIC) DESC, ((((((((((rt1.c0) NOTNULL))AND(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))))AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (vt0.c0) ORDER BY CAST(((rt1.c2)<>(rt1.c1)) AS NUMERIC) DESC, ((((((((((rt1.c0) NOTNULL))AND(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))))AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((rt1.c2)!=(rt1.c1)) AS NUMERIC) DESC, ((((((((((rt1.c0) NOTNULL))AND(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))))AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (vt0.c0) ORDER BY CAST(((rt1.c2)<>(rt1.c1)) AS NUMERIC) DESC, ((((((((((rt1.c0) NOTNULL))AND(((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))))AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(rt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)) AS NUMERIC));
SELECT ALL * FROM rt1 WHERE ((- (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY (~ (rt1.c2)) COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c2)) COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((- (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY (~ (rt1.c2)) COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c2)) COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((- (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY (~ (rt1.c2)) COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((('ȥW')>=(rt1.c1))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('ȥW')>=(rt1.c1))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((('ȥW')>=(rt1.c1))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('ȥW')>=(rt1.c1))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((('ȥW')>=(rt1.c1))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND ((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (CAST(UPPER(rt1.c1) AS INTEGER)) ORDER BY ((NULLIF(x'', rt1.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt1.c1) AS INTEGER)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((NULLIF(x'', rt1.c0)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (CAST(UPPER(rt1.c1) AS INTEGER)) ORDER BY ((NULLIF(x'', rt1.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt1.c1) AS INTEGER)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((NULLIF(x'', rt1.c0)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (CAST(UPPER(rt1.c1) AS INTEGER)) ORDER BY ((NULLIF(x'', rt1.c0)) ISNULL)  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND (x'11d5')))!=(x'')) WHERE ((((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN ((((rt1.c1) IS TRUE))) AND ((-209400192))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND (x'11d5')))<>(x'')) ORDER BY (((vt0.c0)) BETWEEN ((((rt1.c1) IS TRUE))) AND ((-209400192))) DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND (x'11d5')))!=(x'')) WHERE ((((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN ((((rt1.c1) IS TRUE))) AND ((-209400192))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND (x'11d5')))<>(x'')) ORDER BY (((vt0.c0)) BETWEEN ((((rt1.c1) IS TRUE))) AND ((-209400192))) DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND (x'11d5')))!=(x'')) WHERE ((((rt1.c1 IN ())) BETWEEN ((NOT (rt1.c1))) AND ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN ((((rt1.c1) IS TRUE))) AND ((-209400192))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((+ (rt1.c1)))<=(((rt1.c0)LIKE(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1)))<=(((rt1.c0)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((+ (rt1.c1)))<=(((rt1.c0)LIKE(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1)))<=(((rt1.c0)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((+ (rt1.c1)))<=(((rt1.c0)LIKE(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((('425941859')LIKE(vt0.c0))) NOT NULL)) ORDER BY ((((rt1.c1, rt1.c0, rt1.c0))<((rt1.c0, rt1.c2, rt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((('425941859')LIKE(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1, rt1.c0, rt1.c0))<((rt1.c0, rt1.c2, rt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((('425941859')LIKE(vt0.c0))) NOT NULL)) ORDER BY ((((rt1.c1, rt1.c0, rt1.c0))<((rt1.c0, rt1.c2, rt1.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((('425941859')LIKE(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1, rt1.c0, rt1.c0))<((rt1.c0, rt1.c2, rt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((('425941859')LIKE(vt0.c0))) NOT NULL)) ORDER BY ((((rt1.c1, rt1.c0, rt1.c0))<((rt1.c0, rt1.c2, rt1.c0))) IN ());
SELECT * FROM rt1 WHERE ((((- (rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((- (rt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((- (rt1.c1))) NOT NULL));
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((rt1.c1)GLOB(rt1.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)GLOB(rt1.c1)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((rt1.c1)GLOB(rt1.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)GLOB(rt1.c1)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY ((rt1.c1)GLOB(rt1.c1)) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt1 WHERE (CASE rt1.c1  WHEN rt1.c2 THEN (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((NULL, rt1.c2, rt1.c2))) WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((x'2740'))) THEN CAST(rt1.c0 AS NUMERIC) WHEN TRIM(rt1.c0, rt1.c2) THEN ((((rt1.c2)AND(rt1.c2)))OR(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN rt1.c2 THEN (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((NULL, rt1.c2, rt1.c2))) WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((x'2740'))) THEN CAST(rt1.c0 AS NUMERIC) WHEN TRIM(rt1.c0, rt1.c2) THEN ((((rt1.c2)AND(rt1.c2)))OR(x'')) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE rt1.c1  WHEN rt1.c2 THEN (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((NULL, rt1.c2, rt1.c2))) WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((x'2740'))) THEN CAST(rt1.c0 AS NUMERIC) WHEN TRIM(rt1.c0, rt1.c2) THEN ((((rt1.c2)AND(rt1.c2)))OR(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN rt1.c2 THEN (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((NULL, rt1.c2, rt1.c2))) WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((x'2740'))) THEN CAST(rt1.c0 AS NUMERIC) WHEN TRIM(rt1.c0, rt1.c2) THEN ((((rt1.c2)AND(rt1.c2)))OR(x'')) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE rt1.c1  WHEN rt1.c2 THEN (((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((NULL, rt1.c2, rt1.c2))) WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((x'2740'))) THEN CAST(rt1.c0 AS NUMERIC) WHEN TRIM(rt1.c0, rt1.c2) THEN ((((rt1.c2)AND(rt1.c2)))OR(x'')) END);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((json_remove(rt1.c2, vt0.c0))==(((rt1.c0) ISNULL)))) ORDER BY (((~ (vt0.c0)))>(rt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt1.c2, vt0.c0))==(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((~ (vt0.c0)))>(rt1.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((json_remove(rt1.c2, vt0.c0))==(((rt1.c0) ISNULL)))) ORDER BY (((~ (vt0.c0)))>(rt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt1.c2, vt0.c0))==(((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((~ (vt0.c0)))>(rt1.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((json_remove(rt1.c2, vt0.c0))==(((rt1.c0) ISNULL)))) ORDER BY (((~ (vt0.c0)))>(rt1.c1 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)-(vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE ('-1128605973') ORDER BY 0.7294404005640076, CASE WHEN ((NULL) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((NULL) BETWEEN (vt0.c0) AND (rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (('-1128605973') IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.7294404005640076, CASE WHEN ((NULL) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((NULL) BETWEEN (vt0.c0) AND (rt1.c1)) END ASC);
SELECT * FROM vt0, rt1 WHERE ('-1128605973') ORDER BY 0.7294404005640076, CASE WHEN ((NULL) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((NULL) BETWEEN (vt0.c0) AND (rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (('-1128605973') IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.7294404005640076, CASE WHEN ((NULL) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((NULL) BETWEEN (vt0.c0) AND (rt1.c1)) END ASC);
SELECT * FROM vt0, rt1 WHERE ('-1128605973') ORDER BY 0.7294404005640076, CASE WHEN ((NULL) BETWEEN (rt1.c0) AND (rt1.c1)) THEN ((NULL) BETWEEN (vt0.c0) AND (rt1.c1)) END ASC;
SELECT * FROM rt1 WHERE (((((-1.526865665E9) BETWEEN ('1256090022') AND (rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CAST(rt1.c0 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((-1.526865665E9) BETWEEN ('1256090022') AND (rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 AS TEXT) COLLATE NOCASE);
SELECT * FROM rt1 WHERE (((((-1.526865665E9) BETWEEN ('1256090022') AND (rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CAST(rt1.c0 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((-1.526865665E9) BETWEEN ('1256090022') AND (rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 AS TEXT) COLLATE NOCASE);
SELECT * FROM rt1 WHERE (((((-1.526865665E9) BETWEEN ('1256090022') AND (rt1.c2))) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c1 END) AND (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END))) ORDER BY CAST(rt1.c0 AS TEXT) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 WHERE (((INSTR(vt0.c0, 1.330862927E9)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(vt0.c0, 1.330862927E9)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((INSTR(vt0.c0, 1.330862927E9)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(vt0.c0, 1.330862927E9)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((INSTR(vt0.c0, 1.330862927E9)) NOT NULL));
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY ((((rt1.c0)AND(rt1.c1))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)AND(rt1.c1))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY ((((rt1.c0)AND(rt1.c1))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)AND(rt1.c1))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY ((((rt1.c0)AND(rt1.c1))) BETWEEN (rt1.c2 COLLATE NOCASE) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((NOT (((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0))))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST, (NOT (rt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST, (NOT (rt1.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((NOT (((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0))))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST, (NOT (rt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST, (NOT (rt1.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((NOT (((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0))))) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS REAL) ASC  NULLS LAST, (NOT (rt1.c0 COLLATE BINARY)) DESC;
SELECT ALL * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULL);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (rt1.c1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE 2120574556  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE 2120574556  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE 2120574556  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE 2120574556  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE 2120574556  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0 COLLATE BINARY)AND(rt1.c2 COLLATE RTRIM)))AND((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c2, vt0.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) ORDER BY (((+ (rt1.c1)))=(((rt1.c1)<(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(rt1.c2 COLLATE RTRIM)))AND((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c2, vt0.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((+ (rt1.c1)))==(((rt1.c1)<(rt1.c1))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0 COLLATE BINARY)AND(rt1.c2 COLLATE RTRIM)))AND((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c2, vt0.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) ORDER BY (((+ (rt1.c1)))=(((rt1.c1)<(rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(rt1.c2 COLLATE RTRIM)))AND((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c2, vt0.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((+ (rt1.c1)))==(((rt1.c1)<(rt1.c1))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0 COLLATE BINARY)AND(rt1.c2 COLLATE RTRIM)))AND((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c2, vt0.c0)) AND ((rt1.c2, vt0.c0, rt1.c2)))))) ORDER BY (((+ (rt1.c1)))=(((rt1.c1)<(rt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((- (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((- (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((- (vt0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN 0.02446889054964485 THEN -2.011076965E9 ELSE DATE(rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.02446889054964485 THEN -2.011076965E9 ELSE DATE(rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN 0.02446889054964485 THEN -2.011076965E9 ELSE DATE(rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.02446889054964485 THEN -2.011076965E9 ELSE DATE(rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN 0.02446889054964485 THEN -2.011076965E9 ELSE DATE(rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ROUND(vt0.c0, vt0.c0) THEN 0.7320464628384524 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY (+ ((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ROUND(vt0.c0, vt0.c0) THEN 0.7320464628384524 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ROUND(vt0.c0, vt0.c0) THEN 0.7320464628384524 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY (+ ((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ROUND(vt0.c0, vt0.c0) THEN 0.7320464628384524 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ROUND(vt0.c0, vt0.c0) THEN 0.7320464628384524 WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY (+ ((vt0.c0 IN (vt0.c0))));
SELECT * FROM vt0, rt1 WHERE (INSTR((vt0.c0 IN ()), rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((INSTR((vt0.c0 IN ()), rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (INSTR((vt0.c0 IN ()), rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((INSTR((vt0.c0 IN ()), rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (INSTR((vt0.c0 IN ()), rt1.c0 COLLATE RTRIM));
SELECT ALL * FROM rt1, vt0 WHERE (((~ (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((~ (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((~ (rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), ((((rt1.c2)+(rt1.c2)))>(TRIM(DISTINCT rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), ((((rt1.c2)+(rt1.c2)))>(TRIM(DISTINCT rt1.c0))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), ((((rt1.c2)+(rt1.c2)))>(TRIM(DISTINCT rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), ((((rt1.c2)+(rt1.c2)))>(TRIM(DISTINCT rt1.c0))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY (- (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), ((((rt1.c2)+(rt1.c2)))>(TRIM(DISTINCT rt1.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)IS NOT(vt0.c0))))>((vt0.c0)))) ORDER BY LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.2686964602262616), ((((NULL)GLOB(vt0.c0))) BETWEEN (((vt0.c0)+(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS NOT(vt0.c0))))>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.2686964602262616), ((((NULL)GLOB(vt0.c0))) BETWEEN (((vt0.c0)+(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)IS NOT(vt0.c0))))>((vt0.c0)))) ORDER BY LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.2686964602262616), ((((NULL)GLOB(vt0.c0))) BETWEEN (((vt0.c0)+(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS NOT(vt0.c0))))>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.2686964602262616), ((((NULL)GLOB(vt0.c0))) BETWEEN (((vt0.c0)+(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)IS NOT(vt0.c0))))>((vt0.c0)))) ORDER BY LIKELIHOOD(IFNULL(DISTINCT vt0.c0, vt0.c0), 0.2686964602262616), ((((NULL)GLOB(vt0.c0))) BETWEEN (((vt0.c0)+(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (CAST('勹季a' AS INTEGER)) ORDER BY ((((rt1.c2)AND(vt0.c0)))OR(rt1.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('勹季a' AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)AND(vt0.c0)))OR(rt1.c1)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CAST('勹季a' AS INTEGER)) ORDER BY ((((rt1.c2)AND(vt0.c0)))OR(rt1.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('勹季a' AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)AND(vt0.c0)))OR(rt1.c1)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CAST('勹季a' AS INTEGER)) ORDER BY ((((rt1.c2)AND(vt0.c0)))OR(rt1.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (CAST(('' IN (vt0.c0)) AS INTEGER)) ORDER BY json_array_length((+ (vt0.c0)), x'') DESC;
SELECT SUM(count) FROM (SELECT ((CAST(('' IN (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED ORDER BY json_array_length((+ (vt0.c0)), x'') DESC);
SELECT * FROM rt1, vt0 WHERE (CAST(('' IN (vt0.c0)) AS INTEGER)) ORDER BY json_array_length((+ (vt0.c0)), x'') DESC;
SELECT SUM(count) FROM (SELECT ((CAST(('' IN (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED ORDER BY json_array_length((+ (vt0.c0)), x'') DESC);
SELECT * FROM rt1, vt0 WHERE (CAST(('' IN (vt0.c0)) AS INTEGER)) ORDER BY json_array_length((+ (vt0.c0)), x'') DESC;
SELECT COUNT(*) FROM rt1 WHERE (-1129652190);
SELECT SUM(count) FROM (SELECT ((-1129652190) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (-1129652190);
SELECT SUM(count) FROM (SELECT ((-1129652190) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (-1129652190);
SELECT ALL * FROM vt0 WHERE (QUOTE(vt0.c0) COLLATE BINARY) ORDER BY ((((vt0.c0 IN (vt0.c0))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN (vt0.c0))))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (QUOTE(vt0.c0) COLLATE BINARY) ORDER BY ((((vt0.c0 IN (vt0.c0))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN (vt0.c0))))<>((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (QUOTE(vt0.c0) COLLATE BINARY) ORDER BY ((((vt0.c0 IN (vt0.c0))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ASC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND((+ (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((rt1.c1 COLLATE BINARY)OR(540998868)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND (('9'))))) WHERE ((((NULL))>=((CAST(rt1.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>=((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((rt1.c1 COLLATE BINARY)OR(540998868)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND (('9'))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((rt1.c1 COLLATE BINARY)OR(540998868)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND (('9'))))) WHERE ((((NULL))>=((CAST(rt1.c2 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>=((CAST(rt1.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((rt1.c1 COLLATE BINARY)OR(540998868)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND (('9'))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((rt1.c1 COLLATE BINARY)OR(540998868)))AND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND (('9'))))) WHERE ((((NULL))>=((CAST(rt1.c2 AS NUMERIC)))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((LIKE(rt1.c0, rt1.c2, '6'))) AND (('-788654543')))) ORDER BY (rt1.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((LIKE(rt1.c0, rt1.c2, '6'))) AND (('-788654543')))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((LIKE(rt1.c0, rt1.c2, '6'))) AND (('-788654543')))) ORDER BY (rt1.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((LIKE(rt1.c0, rt1.c2, '6'))) AND (('-788654543')))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((LIKE(rt1.c0, rt1.c2, '6'))) AND (('-788654543')))) ORDER BY (rt1.c0 COLLATE NOCASE IN ());
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (NOT (NULL)) THEN CAST(rt1.c1 AS NUMERIC) ELSE CASE WHEN rt1.c2 THEN rt1.c2 ELSE NULL END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (NULL)) THEN CAST(rt1.c1 AS NUMERIC) ELSE CASE WHEN rt1.c2 THEN rt1.c2 ELSE NULL END END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (NOT (NULL)) THEN CAST(rt1.c1 AS NUMERIC) ELSE CASE WHEN rt1.c2 THEN rt1.c2 ELSE NULL END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (NULL)) THEN CAST(rt1.c1 AS NUMERIC) ELSE CASE WHEN rt1.c2 THEN rt1.c2 ELSE NULL END END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (NOT (NULL)) THEN CAST(rt1.c1 AS NUMERIC) ELSE CASE WHEN rt1.c2 THEN rt1.c2 ELSE NULL END END);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((- ('-1129652190'))))<((((vt0.c0) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((- ('-1129652190'))))<((((vt0.c0) IS FALSE)))) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((- ('-1129652190'))))<((((vt0.c0) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((- ('-1129652190'))))<((((vt0.c0) IS FALSE)))) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((- ('-1129652190'))))<((((vt0.c0) IS FALSE)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CHANGES())||((rt1.c2 IN ())))) ORDER BY CAST((('2024171824') NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS TEXT) ASC, ((0.7320464628384524)!=(json_array(rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())||((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST((('2024171824') NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS TEXT) ASC, ((0.7320464628384524)<>(json_array(rt1.c1, rt1.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CHANGES())||((rt1.c2 IN ())))) ORDER BY CAST((('2024171824') NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS TEXT) ASC, ((0.7320464628384524)!=(json_array(rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())||((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST((('2024171824') NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS TEXT) ASC, ((0.7320464628384524)<>(json_array(rt1.c1, rt1.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CHANGES())||((rt1.c2 IN ())))) ORDER BY CAST((('2024171824') NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS TEXT) ASC, ((0.7320464628384524)!=(json_array(rt1.c1, rt1.c2)));
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c0) ORDER BY (NOT (((rt1.c0)LIKE(x'')))) DESC  NULLS FIRST, (((- (rt1.c1))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((rt1.c0, '-1524333637', rt1.c0))>((rt1.c0, vt0.c0, x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY (NOT (((rt1.c0)LIKE(x'')))) DESC  NULLS FIRST, (((- (rt1.c1))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((rt1.c0, '-1524333637', rt1.c0))>((rt1.c0, vt0.c0, x''))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c0) ORDER BY (NOT (((rt1.c0)LIKE(x'')))) DESC  NULLS FIRST, (((- (rt1.c1))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((rt1.c0, '-1524333637', rt1.c0))>((rt1.c0, vt0.c0, x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY (NOT (((rt1.c0)LIKE(x'')))) DESC  NULLS FIRST, (((- (rt1.c1))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((rt1.c0, '-1524333637', rt1.c0))>((rt1.c0, vt0.c0, x''))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c0) ORDER BY (NOT (((rt1.c0)LIKE(x'')))) DESC  NULLS FIRST, (((- (rt1.c1))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((rt1.c0, '-1524333637', rt1.c0))>((rt1.c0, vt0.c0, x''))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))<>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN NULL THEN x'd58fcd66' END END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN NULL THEN x'd58fcd66' END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))<>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN NULL THEN x'd58fcd66' END END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN NULL THEN x'd58fcd66' END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))<>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN NULL THEN x'd58fcd66' END END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((((((rt1.c2)AND(((rt1.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(rt1.c1 COLLATE BINARY)))AND((+ (rt1.c0)))))AND(((vt0.c0)IS(rt1.c1)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c2)AND(((rt1.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(rt1.c1 COLLATE BINARY)))AND((+ (rt1.c0)))))AND(((vt0.c0)IS(rt1.c1)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((((((rt1.c2)AND(((rt1.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(rt1.c1 COLLATE BINARY)))AND((+ (rt1.c0)))))AND(((vt0.c0)IS(rt1.c1)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c2)AND(((rt1.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(rt1.c1 COLLATE BINARY)))AND((+ (rt1.c0)))))AND(((vt0.c0)IS(rt1.c1)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((((((rt1.c2)AND(((rt1.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(rt1.c1 COLLATE BINARY)))AND((+ (rt1.c0)))))AND(((vt0.c0)IS(rt1.c1)))))AND(vt0.c0)));
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))GLOB(x''))) ORDER BY (((vt0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, CASE WHEN vt0.c0 COLLATE NOCASE THEN UNLIKELY(DISTINCT rt1.c2) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))GLOB(x''))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, CASE WHEN vt0.c0 COLLATE NOCASE THEN UNLIKELY(DISTINCT rt1.c2) END);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))GLOB(x''))) ORDER BY (((vt0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, CASE WHEN vt0.c0 COLLATE NOCASE THEN UNLIKELY(DISTINCT rt1.c2) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))GLOB(x''))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, CASE WHEN vt0.c0 COLLATE NOCASE THEN UNLIKELY(DISTINCT rt1.c2) END);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))GLOB(x''))) ORDER BY (((vt0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, CASE WHEN vt0.c0 COLLATE NOCASE THEN UNLIKELY(DISTINCT rt1.c2) END;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CASE vt0.c0  WHEN rt1.c0 THEN '-111772106' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN '-1273151547' END)OR(((rt1.c2)LIKE(rt1.c1)))))OR(CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN rt1.c0 THEN '-111772106' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN '-1273151547' END)OR(((rt1.c2)LIKE(rt1.c1)))))OR(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CASE vt0.c0  WHEN rt1.c0 THEN '-111772106' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN '-1273151547' END)OR(((rt1.c2)LIKE(rt1.c1)))))OR(CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN rt1.c0 THEN '-111772106' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN '-1273151547' END)OR(((rt1.c2)LIKE(rt1.c1)))))OR(CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CASE vt0.c0  WHEN rt1.c0 THEN '-111772106' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN '-1273151547' END)OR(((rt1.c2)LIKE(rt1.c1)))))OR(CAST(rt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (('-1224748827' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1224748827' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (('-1224748827' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1224748827' IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (('-1224748827' IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))>((vt0.c0))) COLLATE RTRIM) ORDER BY (~ (vt0.c0)), 0xffffffffa52483bb;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)), 0xffffffffa52483bb);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))>((vt0.c0))) COLLATE RTRIM) ORDER BY (~ (vt0.c0)), 0xffffffffa52483bb;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c0)), 0xffffffffa52483bb);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))>((vt0.c0))) COLLATE RTRIM) ORDER BY (~ (vt0.c0)), 0xffffffffa52483bb;
SELECT * FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN (((NOT (rt1.c2)))) AND ((CAST(rt1.c2 AS TEXT))))) ORDER BY ((((rt1.c1) NOTNULL))||((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((NOT (rt1.c2)))) AND ((CAST(rt1.c2 AS TEXT))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1) NOTNULL))||((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN (((NOT (rt1.c2)))) AND ((CAST(rt1.c2 AS TEXT))))) ORDER BY ((((rt1.c1) NOTNULL))||((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((NOT (rt1.c2)))) AND ((CAST(rt1.c2 AS TEXT))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1) NOTNULL))||((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN (((NOT (rt1.c2)))) AND ((CAST(rt1.c2 AS TEXT))))) ORDER BY ((((rt1.c1) NOTNULL))||((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((((rt1.c1)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))>>(TRIM(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c1)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))>>(TRIM(DISTINCT vt0.c0))) DESC);
SELECT ALL * FROM rt1, vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((((rt1.c1)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))>>(TRIM(DISTINCT vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c1)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))>>(TRIM(DISTINCT vt0.c0))) DESC);
SELECT ALL * FROM rt1, vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY ((((((((((rt1.c1)AND(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))>>(TRIM(DISTINCT vt0.c0))) DESC;
SELECT * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN 0.22186143194472674 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)<=(CAST(rt1.c2 AS INTEGER)))) ORDER BY CASE ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN CAST(rt1.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN 0.22186143194472674 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)<=(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY CASE ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN CAST(rt1.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN 0.22186143194472674 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)<=(CAST(rt1.c2 AS INTEGER)))) ORDER BY CASE ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN CAST(rt1.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN 0.22186143194472674 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)<=(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY CASE ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN CAST(rt1.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN 0.22186143194472674 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)<=(CAST(rt1.c2 AS INTEGER)))) ORDER BY CASE ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(vt0.c0))  WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN CAST(rt1.c0 AS TEXT) END;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((x'923f4298') BETWEEN ((- (rt1.c0))) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((x'923f4298') BETWEEN ((- (rt1.c0))) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((x'923f4298') BETWEEN ((- (rt1.c0))) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((x'923f4298') BETWEEN ((- (rt1.c0))) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((x'923f4298') BETWEEN ((- (rt1.c0))) AND (CAST(rt1.c2 AS BLOB))));
SELECT COUNT(*) FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('');
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'Ep㊳]m4' WHEN vt0.c0 THEN 0.8136936484887883 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'Ep㊳]m4' WHEN vt0.c0 THEN 0.8136936484887883 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'Ep㊳]m4' WHEN vt0.c0 THEN 0.8136936484887883 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'Ep㊳]m4' WHEN vt0.c0 THEN 0.8136936484887883 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'Ep㊳]m4' WHEN vt0.c0 THEN 0.8136936484887883 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET('-1910209010')) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>(vt0.c0)))) DESC, ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET('-1910209010')) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>(vt0.c0)))) DESC, ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET('-1910209010')) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>(vt0.c0)))) DESC, ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET('-1910209010')) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>(vt0.c0)))) DESC, ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET('-1910209010')) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>(vt0.c0)))) DESC, ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((((rt1.c2)AND(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)))AND(CAST(vt0.c0 AS REAL))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND('1476344931')));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)AND(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)))AND(CAST(vt0.c0 AS REAL))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND('1476344931'))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((((rt1.c2)AND(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)))AND(CAST(vt0.c0 AS REAL))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND('1476344931')));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)AND(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)))AND(CAST(vt0.c0 AS REAL))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND('1476344931'))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((((rt1.c2)AND(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)))AND(CAST(vt0.c0 AS REAL))))AND(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND('1476344931')));
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN ((('1080994850') BETWEEN (rt1.c1) AND (rt1.c1))) AND ((+ (rt1.c0))))) ORDER BY ((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c1 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE 0X269bacee END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN ((('1080994850') BETWEEN (rt1.c1) AND (rt1.c1))) AND ((+ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c1 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE 0X269bacee END))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN ((('1080994850') BETWEEN (rt1.c1) AND (rt1.c1))) AND ((+ (rt1.c0))))) ORDER BY ((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c1 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE 0X269bacee END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN ((('1080994850') BETWEEN (rt1.c1) AND (rt1.c1))) AND ((+ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c1 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE 0X269bacee END))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN ((('1080994850') BETWEEN (rt1.c1) AND (rt1.c1))) AND ((+ (rt1.c0))))) ORDER BY ((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c1 COLLATE NOCASE)))OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE 0X269bacee END))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN '-59016791' COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-59016791' COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN '-59016791' COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-59016791' COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN '-59016791' COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((((rt1.c2)<('1239251802')), ((rt1.c1)=(rt1.c0)), ((((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))) AND (((~ (rt1.c0)), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c2)), CAST(rt1.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((((rt1.c2)<('1239251802')), ((rt1.c1)==(rt1.c0)), ((((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))) AND (((~ (rt1.c0)), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c2)), CAST(rt1.c2 AS TEXT))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((((rt1.c2)<('1239251802')), ((rt1.c1)=(rt1.c0)), ((((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))) AND (((~ (rt1.c0)), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c2)), CAST(rt1.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((((rt1.c2)<('1239251802')), ((rt1.c1)==(rt1.c0)), ((((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))) AND (((~ (rt1.c0)), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c2)), CAST(rt1.c2 AS TEXT))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((((rt1.c2)<('1239251802')), ((rt1.c1)=(rt1.c0)), ((((((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))) AND (((~ (rt1.c0)), ((((rt1.c1)AND(rt1.c2)))AND(rt1.c2)), CAST(rt1.c2 AS TEXT)))));
SELECT ALL * FROM rt1 WHERE (CAST((rt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST((rt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST((rt1.c0 IN ()) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT NULL)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN '>G,.87<fN' END) AND ('-788654543'))  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN '>G,.87<fN' END) AND ('-788654543'))  NULLS LAST, vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT NULL)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN '>G,.87<fN' END) AND ('-788654543'))  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN '>G,.87<fN' END) AND ('-788654543'))  NULLS LAST, vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT NULL)) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN '>G,.87<fN' END) AND ('-788654543'))  NULLS LAST, vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((LOWER(vt0.c0))<>(load_extension(rt1.c1, vt0.c0)))) ORDER BY CASE WHEN ((0.6957554951046018) IS TRUE) THEN x'' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))!=(load_extension(rt1.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((0.6957554951046018) IS TRUE) THEN x'' END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((LOWER(vt0.c0))<>(load_extension(rt1.c1, vt0.c0)))) ORDER BY CASE WHEN ((0.6957554951046018) IS TRUE) THEN x'' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))!=(load_extension(rt1.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((0.6957554951046018) IS TRUE) THEN x'' END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((LOWER(vt0.c0))<>(load_extension(rt1.c1, vt0.c0)))) ORDER BY CASE WHEN ((0.6957554951046018) IS TRUE) THEN x'' END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (-706319012) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-706319012) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (-706319012) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-706319012) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (-706319012) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ()))) ASC;
SELECT * FROM vt0, rt1 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END) ISNULL)) ORDER BY (((vt0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END) ISNULL)) ORDER BY (((vt0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END) ISNULL)) ORDER BY (((vt0.c0)) BETWEEN (((rt1.c1 IN ()))) AND ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CASE '0.5992553419133584'  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN UNLIKELY(rt1.c0) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE '0.5992553419133584'  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN UNLIKELY(rt1.c0) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CASE '0.5992553419133584'  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN UNLIKELY(rt1.c0) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE '0.5992553419133584'  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN UNLIKELY(rt1.c0) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE (CASE '0.5992553419133584'  WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN UNLIKELY(rt1.c0) ELSE rt1.c2 END);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c2 IN ())))>((vt0.c0))) WHERE (((NULL) NOT BETWEEN ((rt1.c0 IN (x''))) AND (CASE WHEN 'I&' THEN vt0.c0 ELSE rt1.c0 END))) ORDER BY ((((rt1.c0)AND(rt1.c2)))AND('1+䜱y9ke[')) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((rt1.c0 IN (x''))) AND (CASE WHEN 'I&' THEN vt0.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c2 IN ())))>((vt0.c0))) ORDER BY ((((rt1.c0)AND(rt1.c2)))AND('1+䜱y9ke[')) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c2 IN ())))>((vt0.c0))) WHERE (((NULL) NOT BETWEEN ((rt1.c0 IN (x''))) AND (CASE WHEN 'I&' THEN vt0.c0 ELSE rt1.c0 END))) ORDER BY ((((rt1.c0)AND(rt1.c2)))AND('1+䜱y9ke[')) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((rt1.c0 IN (x''))) AND (CASE WHEN 'I&' THEN vt0.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c2 IN ())))>((vt0.c0))) ORDER BY ((((rt1.c0)AND(rt1.c2)))AND('1+䜱y9ke[')) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c2 IN ())))>((vt0.c0))) WHERE (((NULL) NOT BETWEEN ((rt1.c0 IN (x''))) AND (CASE WHEN 'I&' THEN vt0.c0 ELSE rt1.c0 END))) ORDER BY ((((rt1.c0)AND(rt1.c2)))AND('1+䜱y9ke[')) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)+(rt1.c0)))<=((rt1.c2 IN ())))) ORDER BY rt1.c0 ASC  NULLS LAST, ((((rt1.c0 COLLATE RTRIM)OR(CASE rt1.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND((NOT (rt1.c1)))) DESC, CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)+(rt1.c0)))<=((rt1.c2 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 ASC  NULLS LAST, ((((rt1.c0 COLLATE RTRIM)OR(CASE rt1.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND((NOT (rt1.c1)))) DESC, CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)+(rt1.c0)))<=((rt1.c2 IN ())))) ORDER BY rt1.c0 ASC  NULLS LAST, ((((rt1.c0 COLLATE RTRIM)OR(CASE rt1.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND((NOT (rt1.c1)))) DESC, CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)+(rt1.c0)))<=((rt1.c2 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 ASC  NULLS LAST, ((((rt1.c0 COLLATE RTRIM)OR(CASE rt1.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND((NOT (rt1.c1)))) DESC, CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE RTRIM ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c2)+(rt1.c0)))<=((rt1.c2 IN ())))) ORDER BY rt1.c0 ASC  NULLS LAST, ((((rt1.c0 COLLATE RTRIM)OR(CASE rt1.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)))AND((NOT (rt1.c1)))) DESC, CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END COLLATE RTRIM ASC;
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (0X5e42f188) AND (vt0.c0))) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT)  NULLS LAST, IFNULL((('')>(vt0.c0)), TYPEOF(vt0.c0))  NULLS FIRST, (((((- (vt0.c0)))AND((('M~')!=(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (0X5e42f188) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT)  NULLS LAST, IFNULL((('')>(vt0.c0)), TYPEOF(vt0.c0))  NULLS FIRST, (((((- (vt0.c0)))AND((('M~')<>(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (0X5e42f188) AND (vt0.c0))) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT)  NULLS LAST, IFNULL((('')>(vt0.c0)), TYPEOF(vt0.c0))  NULLS FIRST, (((((- (vt0.c0)))AND((('M~')!=(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (0X5e42f188) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT)  NULLS LAST, IFNULL((('')>(vt0.c0)), TYPEOF(vt0.c0))  NULLS FIRST, (((((- (vt0.c0)))AND((('M~')<>(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (0X5e42f188) AND (vt0.c0))) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT)  NULLS LAST, IFNULL((('')>(vt0.c0)), TYPEOF(vt0.c0))  NULLS FIRST, (((((- (vt0.c0)))AND((('M~')!=(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))) AND ((((rt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))) AND ((((rt1.c0) NOTNULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))) AND ((((rt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))) AND ((((rt1.c0) NOTNULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))) AND ((((rt1.c0) NOTNULL)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON 1912486225 WHERE (json_extract(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<<(rt1.c2)))) ORDER BY ((((((((((rt1.c2) NOT NULL))AND(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN 0.5211850591354931 WHEN '447799784' THEN rt1.c2 END)))OR((vt0.c0 IN (rt1.c2, vt0.c0)))))OR((~ (rt1.c2)))))AND(CAST(rt1.c2 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_extract(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<<(rt1.c2)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON 1912486225 ORDER BY ((((((((((rt1.c2) NOT NULL))AND(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN 0.5211850591354931 WHEN '447799784' THEN rt1.c2 END)))OR((vt0.c0 IN (rt1.c2, vt0.c0)))))OR((~ (rt1.c2)))))AND(CAST(rt1.c2 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON 1912486225 WHERE (json_extract(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<<(rt1.c2)))) ORDER BY ((((((((((rt1.c2) NOT NULL))AND(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN 0.5211850591354931 WHEN '447799784' THEN rt1.c2 END)))OR((vt0.c0 IN (rt1.c2, vt0.c0)))))OR((~ (rt1.c2)))))AND(CAST(rt1.c2 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_extract(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<<(rt1.c2)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON 1912486225 ORDER BY ((((((((((rt1.c2) NOT NULL))AND(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN 0.5211850591354931 WHEN '447799784' THEN rt1.c2 END)))OR((vt0.c0 IN (rt1.c2, vt0.c0)))))OR((~ (rt1.c2)))))AND(CAST(rt1.c2 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON 1912486225 WHERE (json_extract(((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), ((vt0.c0)<<(rt1.c2)))) ORDER BY ((((((((((rt1.c2) NOT NULL))AND(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN 0.5211850591354931 WHEN '447799784' THEN rt1.c2 END)))OR((vt0.c0 IN (rt1.c2, vt0.c0)))))OR((~ (rt1.c2)))))AND(CAST(rt1.c2 AS REAL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN (+ (0.5641811203393088)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END  NULLS FIRST, JULIANDAY(vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS REAL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN (+ (0.5641811203393088)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END  NULLS FIRST, JULIANDAY(vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS REAL)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN (+ (0.5641811203393088)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END  NULLS FIRST, JULIANDAY(vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS REAL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN (+ (0.5641811203393088)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END  NULLS FIRST, JULIANDAY(vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS REAL)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN (+ (0.5641811203393088)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)<=(vt0.c0)) ELSE CAST(vt0.c0 AS TEXT) END  NULLS FIRST, JULIANDAY(vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS REAL)) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY ((((rt1.c2) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND ((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND ((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY ((((rt1.c2) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND ((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND ((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY ((((rt1.c2) NOTNULL)) BETWEEN (((vt0.c0) ISNULL)) AND ((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))<(x''))) ORDER BY ((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)-(x'2304'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))<(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)-(x'2304'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))<(x''))) ORDER BY ((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)-(x'2304'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))<(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)-(x'2304'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))<(x''))) ORDER BY ((((((vt0.c0)<<(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)-(x'2304'))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2)GLOB(rt1.c0)))OR(LTRIM(rt1.c1))))OR(rt1.c1))) ORDER BY UPPER(vt0.c0 COLLATE BINARY) ASC, (CAST(0xffffffffadb1fe7a AS NUMERIC) IN (((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)), (+ (vt0.c0))))  NULLS LAST, ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)GLOB(rt1.c0)))OR(LTRIM(rt1.c1))))OR(rt1.c1))) IS TRUE)  as count FROM vt0, rt1 ORDER BY UPPER(vt0.c0 COLLATE BINARY) ASC, (CAST(0xffffffffadb1fe7a AS NUMERIC) IN (((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)), (+ (vt0.c0))))  NULLS LAST, ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2)GLOB(rt1.c0)))OR(LTRIM(rt1.c1))))OR(rt1.c1))) ORDER BY UPPER(vt0.c0 COLLATE BINARY) ASC, (CAST(0xffffffffadb1fe7a AS NUMERIC) IN (((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)), (+ (vt0.c0))))  NULLS LAST, ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)GLOB(rt1.c0)))OR(LTRIM(rt1.c1))))OR(rt1.c1))) IS TRUE)  as count FROM vt0, rt1 ORDER BY UPPER(vt0.c0 COLLATE BINARY) ASC, (CAST(0xffffffffadb1fe7a AS NUMERIC) IN (((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)), (+ (vt0.c0))))  NULLS LAST, ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2)GLOB(rt1.c0)))OR(LTRIM(rt1.c1))))OR(rt1.c1))) ORDER BY UPPER(vt0.c0 COLLATE BINARY) ASC, (CAST(0xffffffffadb1fe7a AS NUMERIC) IN (((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)), (+ (vt0.c0))))  NULLS LAST, ((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) COLLATE BINARY;
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 IN ()) IN ()));
SELECT ALL * FROM vt0, rt1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, (((((((((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))OR((NOT (rt1.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((((rt1.c0)OR(rt1.c2)))OR('2068545449')))))AND(CAST(rt1.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, (((((((((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))OR((NOT (rt1.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((((rt1.c0)OR(rt1.c2)))OR('2068545449')))))AND(CAST(rt1.c1 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, (((((((((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))OR((NOT (rt1.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((((rt1.c0)OR(rt1.c2)))OR('2068545449')))))AND(CAST(rt1.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, (((((((((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))OR((NOT (rt1.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((((rt1.c0)OR(rt1.c2)))OR('2068545449')))))AND(CAST(rt1.c1 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) ORDER BY (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)) IN ()) ASC  NULLS LAST, (((((((((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))OR((NOT (rt1.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(((((rt1.c0)OR(rt1.c2)))OR('2068545449')))))AND(CAST(rt1.c1 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END WHERE (((((((x'') IS TRUE))AND(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ())))) ORDER BY (((NULL))=((rt1.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') IS TRUE))AND(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END ORDER BY (((NULL))==((rt1.c0))) COLLATE BINARY ASC);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END WHERE (((((((x'') IS TRUE))AND(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ())))) ORDER BY (((NULL))=((rt1.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') IS TRUE))AND(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END ORDER BY (((NULL))==((rt1.c0))) COLLATE BINARY ASC);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CASE WHEN (vt0.c0 IN (rt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END WHERE (((((((x'') IS TRUE))AND(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ())))) ORDER BY (((NULL))=((rt1.c0))) COLLATE BINARY ASC;
SELECT ALL * FROM rt1 WHERE (CASE WHEN HEX('2024171824') THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX('2024171824') THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN HEX('2024171824') THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX('2024171824') THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN HEX('2024171824') THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE (+ (vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE (+ (vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE (+ (vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE (+ (vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE (+ (vt0.c0)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELY(((-470032999) IS FALSE))) ORDER BY (((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)), rt1.c0 COLLATE NOCASE, ((rt1.c2)>>(rt1.c2))))>=((rt1.c2 COLLATE BINARY, 'XE1R2(䡌', ((0Xffffffff8bebdc1c)IS NOT(rt1.c1))))), CASE WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c1) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE ((rt1.c2)<(rt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((-470032999) IS FALSE))) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)), rt1.c0 COLLATE NOCASE, ((rt1.c2)>>(rt1.c2))))>=((rt1.c2 COLLATE BINARY, 'XE1R2(䡌', ((0Xffffffff8bebdc1c)IS NOT(rt1.c1))))), CASE WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c1) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE ((rt1.c2)<(rt1.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELY(((-470032999) IS FALSE))) ORDER BY (((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)), rt1.c0 COLLATE NOCASE, ((rt1.c2)>>(rt1.c2))))>=((rt1.c2 COLLATE BINARY, 'XE1R2(䡌', ((0Xffffffff8bebdc1c)IS NOT(rt1.c1))))), CASE WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c1) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE ((rt1.c2)<(rt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((-470032999) IS FALSE))) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)), rt1.c0 COLLATE NOCASE, ((rt1.c2)>>(rt1.c2))))>=((rt1.c2 COLLATE BINARY, 'XE1R2(䡌', ((0Xffffffff8bebdc1c)IS NOT(rt1.c1))))), CASE WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c1) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE ((rt1.c2)<(rt1.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (LIKELY(((-470032999) IS FALSE))) ORDER BY (((((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)), rt1.c0 COLLATE NOCASE, ((rt1.c2)>>(rt1.c2))))>=((rt1.c2 COLLATE BINARY, 'XE1R2(䡌', ((0Xffffffff8bebdc1c)IS NOT(rt1.c1))))), CASE WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 END THEN ((rt1.c1) NOT NULL) WHEN CAST(rt1.c2 AS TEXT) THEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN ((rt1.c1)IS(rt1.c2)) THEN ((rt1.c2) ISNULL) ELSE ((rt1.c2)<(rt1.c0)) END DESC  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2)/(vt0.c0)) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) ELSE load_extension(rt1.c0, rt1.c0) END) ORDER BY rt1.c0 COLLATE RTRIM ASC, (((('勹季a')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))))OR((- (rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)/(vt0.c0)) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) ELSE load_extension(rt1.c0, rt1.c0) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 COLLATE RTRIM ASC, (((('勹季a')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))))OR((- (rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2)/(vt0.c0)) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) ELSE load_extension(rt1.c0, rt1.c0) END) ORDER BY rt1.c0 COLLATE RTRIM ASC, (((('勹季a')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))))OR((- (rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)/(vt0.c0)) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) ELSE load_extension(rt1.c0, rt1.c0) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 COLLATE RTRIM ASC, (((('勹季a')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))))OR((- (rt1.c1)))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2)/(vt0.c0)) THEN ((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) ELSE load_extension(rt1.c0, rt1.c0) END) ORDER BY rt1.c0 COLLATE RTRIM ASC, (((('勹季a')AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))))OR((- (rt1.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((('0.5992553419133584') IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('0.5992553419133584') IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((('0.5992553419133584') IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('0.5992553419133584') IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((('0.5992553419133584') IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON -1.206201248E9 WHERE (0.602013249817434) ORDER BY (~ (rt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.602013249817434) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON -1.206201248E9 ORDER BY (~ (rt1.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON -1.206201248E9 WHERE (0.602013249817434) ORDER BY (~ (rt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.602013249817434) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON -1.206201248E9 ORDER BY (~ (rt1.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON -1.206201248E9 WHERE (0.602013249817434) ORDER BY (~ (rt1.c0 COLLATE BINARY)) ASC;
SELECT * FROM vt0, rt1 WHERE ((+ (CAST(rt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ (CAST(rt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ (CAST(rt1.c1 AS INTEGER))));
SELECT * FROM rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN x'' END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c0 IN ()) THEN x'' END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN (rt1.c0 IN ()) THEN x'' END);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN '' THEN CAST(vt0.c0 AS BLOB) WHEN (vt0.c0 IN (vt0.c0)) THEN x'' WHEN NULL THEN (NOT (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN '' THEN CAST(vt0.c0 AS BLOB) WHEN (vt0.c0 IN (vt0.c0)) THEN x'' WHEN NULL THEN (NOT (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN '' THEN CAST(vt0.c0 AS BLOB) WHEN (vt0.c0 IN (vt0.c0)) THEN x'' WHEN NULL THEN (NOT (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN '' THEN CAST(vt0.c0 AS BLOB) WHEN (vt0.c0 IN (vt0.c0)) THEN x'' WHEN NULL THEN (NOT (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN '' THEN CAST(vt0.c0 AS BLOB) WHEN (vt0.c0 IN (vt0.c0)) THEN x'' WHEN NULL THEN (NOT (vt0.c0)) END;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((0.5725844586796249)|(vt0.c0)) THEN vt0.c0 WHEN '' THEN ((vt0.c0)%(vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((0.5725844586796249)|(vt0.c0)) THEN vt0.c0 WHEN '' THEN ((vt0.c0)%(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((0.5725844586796249)|(vt0.c0)) THEN vt0.c0 WHEN '' THEN ((vt0.c0)%(vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((0.5725844586796249)|(vt0.c0)) THEN vt0.c0 WHEN '' THEN ((vt0.c0)%(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((0.5725844586796249)|(vt0.c0)) THEN vt0.c0 WHEN '' THEN ((vt0.c0)%(vt0.c0)) ELSE vt0.c0 END);
SELECT COUNT(*) FROM rt1, vt0 WHERE (MIN((((rt1.c2))<((rt1.c0))), LIKELIHOOD(rt1.c2, 0.05961537213846746)));
SELECT SUM(count) FROM (SELECT ((MIN((((rt1.c2))<((rt1.c0))), LIKELIHOOD(rt1.c2, 0.05961537213846746))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (MIN((((rt1.c2))<((rt1.c0))), LIKELIHOOD(rt1.c2, 0.05961537213846746)));
SELECT SUM(count) FROM (SELECT ((MIN((((rt1.c2))<((rt1.c0))), LIKELIHOOD(rt1.c2, 0.05961537213846746))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (MIN((((rt1.c2))<((rt1.c0))), LIKELIHOOD(rt1.c2, 0.05961537213846746)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NULL))<=(((((rt1.c1))==((rt1.c2))))))) ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN (+ (rt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=(((((rt1.c1))==((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN (+ (rt1.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NULL))<=(((((rt1.c1))==((rt1.c2))))))) ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN (+ (rt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))<=(((((rt1.c1))==((rt1.c2))))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN (+ (rt1.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NULL))<=(((((rt1.c1))==((rt1.c2))))))) ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN (+ (rt1.c1)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1)GLOB(rt1.c2)) IN (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)GLOB(rt1.c2)) IN (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1)GLOB(rt1.c2)) IN (CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)GLOB(rt1.c2)) IN (CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1)GLOB(rt1.c2)) IN (CAST(rt1.c0 AS INTEGER))));
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY 'd(V'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY 'd(V'  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY 'd(V'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY 'd(V'  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY 'd(V'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY)&(NULL COLLATE NOCASE)) WHERE (CASE WHEN ((rt1.c2)*(x'')) THEN (((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)*(x'')) THEN (((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY)&(NULL COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY)&(NULL COLLATE NOCASE)) WHERE (CASE WHEN ((rt1.c2)*(x'')) THEN (((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)*(x'')) THEN (((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY)&(NULL COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((rt1.c0 COLLATE BINARY)&(NULL COLLATE NOCASE)) WHERE (CASE WHEN ((rt1.c2)*(x'')) THEN (((rt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c1, vt0.c0))) END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c2)<>(rt1.c1)) IN (rt1.c1, ((rt1.c0)GLOB(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)!=(rt1.c1)) IN (rt1.c1, ((rt1.c0)GLOB(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c2)<>(rt1.c1)) IN (rt1.c1, ((rt1.c0)GLOB(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)!=(rt1.c1)) IN (rt1.c1, ((rt1.c0)GLOB(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c2)<>(rt1.c1)) IN (rt1.c1, ((rt1.c0)GLOB(rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(vt0.c0))))==((((vt0.c0)|(vt0.c0)), SQLITE_SOURCE_ID(), (vt0.c0 IN ()))))) ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(vt0.c0))))=((((vt0.c0)|(vt0.c0)), SQLITE_SOURCE_ID(), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(vt0.c0))))==((((vt0.c0)|(vt0.c0)), SQLITE_SOURCE_ID(), (vt0.c0 IN ()))))) ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(vt0.c0))))=((((vt0.c0)|(vt0.c0)), SQLITE_SOURCE_ID(), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0)<=(vt0.c0))))==((((vt0.c0)|(vt0.c0)), SQLITE_SOURCE_ID(), (vt0.c0 IN ()))))) ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT * FROM rt1, vt0 WHERE (CAST(((((((((x'')AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)) AS BLOB)) ORDER BY ((((rt1.c2, rt1.c2, x'')) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((x'')AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2, rt1.c2, x'')) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, vt0.c0))) IN ()) ASC);
SELECT * FROM rt1, vt0 WHERE (CAST(((((((((x'')AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)) AS BLOB)) ORDER BY ((((rt1.c2, rt1.c2, x'')) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, vt0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((x'')AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2, rt1.c2, x'')) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, vt0.c0))) IN ()) ASC);
SELECT * FROM rt1, vt0 WHERE (CAST(((((((((x'')AND(rt1.c2)))OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)) AS BLOB)) ORDER BY ((((rt1.c2, rt1.c2, x'')) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c1, vt0.c0))) IN ()) ASC;
SELECT * FROM vt0 INNER JOIN rt1 ON (((~ (rt1.c0))) BETWEEN (((0.08663425635287725)GLOB(rt1.c2))) AND ((NOT (rt1.c2)))) WHERE (json_array(1224757196 COLLATE RTRIM, ((rt1.c0)<=(rt1.c0)), ((vt0.c0)>(rt1.c2)), ((rt1.c0)-(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(1224757196 COLLATE RTRIM, ((rt1.c0)<=(rt1.c0)), ((vt0.c0)>(rt1.c2)), ((rt1.c0)-(rt1.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((~ (rt1.c0))) BETWEEN (((0.08663425635287725)GLOB(rt1.c2))) AND ((NOT (rt1.c2)))));
SELECT * FROM vt0 INNER JOIN rt1 ON (((~ (rt1.c0))) BETWEEN (((0.08663425635287725)GLOB(rt1.c2))) AND ((NOT (rt1.c2)))) WHERE (json_array(1224757196 COLLATE RTRIM, ((rt1.c0)<=(rt1.c0)), ((vt0.c0)>(rt1.c2)), ((rt1.c0)-(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(1224757196 COLLATE RTRIM, ((rt1.c0)<=(rt1.c0)), ((vt0.c0)>(rt1.c2)), ((rt1.c0)-(rt1.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((~ (rt1.c0))) BETWEEN (((0.08663425635287725)GLOB(rt1.c2))) AND ((NOT (rt1.c2)))));
SELECT * FROM vt0 INNER JOIN rt1 ON (((~ (rt1.c0))) BETWEEN (((0.08663425635287725)GLOB(rt1.c2))) AND ((NOT (rt1.c2)))) WHERE (json_array(1224757196 COLLATE RTRIM, ((rt1.c0)<=(rt1.c0)), ((vt0.c0)>(rt1.c2)), ((rt1.c0)-(rt1.c1))));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1)>(rt1.c1)))<((rt1.c2 IN ()))) WHERE ((NOT (NULLIF(rt1.c1, vt0.c0)))) ORDER BY CAST(((rt1.c1)IS(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (NULLIF(rt1.c1, vt0.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1)>(rt1.c1)))<((rt1.c2 IN ()))) ORDER BY CAST(((rt1.c1)IS(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1)>(rt1.c1)))<((rt1.c2 IN ()))) WHERE ((NOT (NULLIF(rt1.c1, vt0.c0)))) ORDER BY CAST(((rt1.c1)IS(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (NULLIF(rt1.c1, vt0.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1)>(rt1.c1)))<((rt1.c2 IN ()))) ORDER BY CAST(((rt1.c1)IS(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((rt1.c1)>(rt1.c1)))<((rt1.c2 IN ()))) WHERE ((NOT (NULLIF(rt1.c1, vt0.c0)))) ORDER BY CAST(((rt1.c1)IS(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULL) ORDER BY (NOT (((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT (((NULL) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULL) ORDER BY (NOT (((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT (((NULL) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULL) ORDER BY (NOT (((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1) IS TRUE))) AND ((((rt1.c1)LIKE(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((((rt1.c1) IS TRUE))) AND ((((rt1.c1)LIKE(rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1) IS TRUE))) AND ((((rt1.c1)LIKE(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((((rt1.c1) IS TRUE))) AND ((((rt1.c1)LIKE(rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1) IS TRUE))) AND ((((rt1.c1)LIKE(rt1.c1))))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0)<<(rt1.c0)) COLLATE BINARY) ORDER BY ((json_extract(rt1.c2, rt1.c1)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<<(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((json_extract(rt1.c2, rt1.c1)) NOT NULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0)<<(rt1.c0)) COLLATE BINARY) ORDER BY ((json_extract(rt1.c2, rt1.c1)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<<(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((json_extract(rt1.c2, rt1.c1)) NOT NULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0)<<(rt1.c0)) COLLATE BINARY) ORDER BY ((json_extract(rt1.c2, rt1.c1)) NOT NULL);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELY(NULL)) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(NULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 DESC);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELY(NULL)) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(NULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 DESC);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELY(NULL)) ORDER BY rt1.c2 DESC;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (IFNULL(rt1.c2, vt0.c0))) WHERE (((((CAST(rt1.c0 AS TEXT))AND(CAST(rt1.c0 AS INTEGER))))AND((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c0 AS TEXT))AND(CAST(rt1.c0 AS INTEGER))))AND((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (IFNULL(rt1.c2, vt0.c0))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (IFNULL(rt1.c2, vt0.c0))) WHERE (((((CAST(rt1.c0 AS TEXT))AND(CAST(rt1.c0 AS INTEGER))))AND((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c0 AS TEXT))AND(CAST(rt1.c0 AS INTEGER))))AND((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (IFNULL(rt1.c2, vt0.c0))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (IFNULL(rt1.c2, vt0.c0))) WHERE (((((CAST(rt1.c0 AS TEXT))AND(CAST(rt1.c0 AS INTEGER))))AND((~ (rt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ ('0.31914093367960905'))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ ('0.31914093367960905'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((+ ('0.31914093367960905'))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ ('0.31914093367960905'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((+ ('0.31914093367960905'))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY;
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2 COLLATE BINARY)OR((- (rt1.c2)))))OR(x'')) WHERE ((((~ (rt1.c1)))OR(((rt1.c1)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c1)))OR(((rt1.c1)/(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2 COLLATE BINARY)OR((- (rt1.c2)))))OR(x'')));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2 COLLATE BINARY)OR((- (rt1.c2)))))OR(x'')) WHERE ((((~ (rt1.c1)))OR(((rt1.c1)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c1)))OR(((rt1.c1)/(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2 COLLATE BINARY)OR((- (rt1.c2)))))OR(x'')));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c2 COLLATE BINARY)OR((- (rt1.c2)))))OR(x'')) WHERE ((((~ (rt1.c1)))OR(((rt1.c1)/(vt0.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE ((- (((rt1.c2)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2)*(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((- (((rt1.c2)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c2)*(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((- (((rt1.c2)*(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((NOT (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((NOT (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((NOT (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT * FROM vt0 WHERE ((((vt0.c0))>=((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((x'')<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>=((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((x'')<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0))>=((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((x'')<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>=((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((x'')<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0))>=((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))) ORDER BY ((x'')<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((rt1.c2 IN (rt1.c2))) IS FALSE)) ORDER BY (COALESCE(rt1.c0, rt1.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (COALESCE(rt1.c0, rt1.c1) IN ())  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c2 IN (rt1.c2))) IS FALSE)) ORDER BY (COALESCE(rt1.c0, rt1.c1) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY (COALESCE(rt1.c0, rt1.c1) IN ())  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c2 IN (rt1.c2))) IS FALSE)) ORDER BY (COALESCE(rt1.c0, rt1.c1) IN ())  NULLS LAST;
SELECT * FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c2) ISNULL), rt1.c0)) ORDER BY 0X2ae21501  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt1.c2) ISNULL), rt1.c0)) IS TRUE)  as count FROM rt1 ORDER BY 0X2ae21501  NULLS LAST);
SELECT * FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c2) ISNULL), rt1.c0)) ORDER BY 0X2ae21501  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt1.c2) ISNULL), rt1.c0)) IS TRUE)  as count FROM rt1 ORDER BY 0X2ae21501  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((- (rt1.c1)) AS TEXT)) ORDER BY CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST, rt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST, rt1.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((- (rt1.c1)) AS TEXT)) ORDER BY CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST, rt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST, rt1.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((- (rt1.c1)) AS TEXT)) ORDER BY CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST, rt1.c2 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (((((vt0.c0))>=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (((((vt0.c0))>=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (((((vt0.c0))>=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (((((vt0.c0))>=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (((((vt0.c0))>=((vt0.c0)))))));
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0)) NOT BETWEEN ((0X19635b63)) AND ((rt1.c1))) COLLATE RTRIM) ORDER BY (- (((vt0.c0)||(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((0X19635b63)) AND ((rt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (((vt0.c0)||(rt1.c0)))) ASC);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0)) NOT BETWEEN ((0X19635b63)) AND ((rt1.c1))) COLLATE RTRIM) ORDER BY (- (((vt0.c0)||(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((0X19635b63)) AND ((rt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- (((vt0.c0)||(rt1.c0)))) ASC);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0)) NOT BETWEEN ((0X19635b63)) AND ((rt1.c1))) COLLATE RTRIM) ORDER BY (- (((vt0.c0)||(rt1.c0)))) ASC;
SELECT * FROM rt1, vt0 WHERE ((NOT (CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((NOT (CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((NOT (CAST(rt1.c1 AS BLOB))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((- ((((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, '-147214942')) AND ((rt1.c0, rt1.c2, rt1.c1)))))) ORDER BY NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)), IFNULL(DISTINCT rt1.c2, rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, '-147214942')) AND ((rt1.c0, rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)), IFNULL(DISTINCT rt1.c2, rt1.c2)) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((- ((((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, '-147214942')) AND ((rt1.c0, rt1.c2, rt1.c1)))))) ORDER BY NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)), IFNULL(DISTINCT rt1.c2, rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, '-147214942')) AND ((rt1.c0, rt1.c2, rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)), IFNULL(DISTINCT rt1.c2, rt1.c2)) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((- ((((NULL, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, '-147214942')) AND ((rt1.c0, rt1.c2, rt1.c1)))))) ORDER BY NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)), IFNULL(DISTINCT rt1.c2, rt1.c2)) ASC;
SELECT * FROM vt0 INNER JOIN rt1 ON ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) WHERE (rt1.c0) ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((x'c62c')) AND ((rt1.c1)))) AND (rt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((x'c62c')) AND ((rt1.c1)))) AND (rt1.c1)) DESC);
SELECT * FROM vt0 INNER JOIN rt1 ON ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) WHERE (rt1.c0) ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((x'c62c')) AND ((rt1.c1)))) AND (rt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((x'c62c')) AND ((rt1.c1)))) AND (rt1.c1)) DESC);
SELECT * FROM vt0 INNER JOIN rt1 ON ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) WHERE (rt1.c0) ORDER BY ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c1))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((x'c62c')) AND ((rt1.c1)))) AND (rt1.c1)) DESC;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOTNULL)) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1))) AND (((rt1.c1) BETWEEN ('4,f') AND (rt1.c1))))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL)) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1))) AND (((rt1.c1) BETWEEN ('4,f') AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(NULL)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOTNULL)) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1))) AND (((rt1.c1) BETWEEN ('4,f') AND (rt1.c1))))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL)) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1))) AND (((rt1.c1) BETWEEN ('4,f') AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(NULL)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0) NOTNULL)) NOT BETWEEN (((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c1))) AND (((rt1.c1) BETWEEN ('4,f') AND (rt1.c1))))) ORDER BY (((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))+(NULL));
SELECT COUNT(*) FROM vt0 WHERE (HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-112786957'))));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-112786957')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-112786957'))));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-112786957')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-112786957'))));
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON HEX((vt0.c0 IN ())) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON HEX((vt0.c0 IN ())));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON HEX((vt0.c0 IN ())) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON HEX((vt0.c0 IN ())));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON HEX((vt0.c0 IN ())) WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((NOT (rt1.c0)) IN ()) WHERE (((((x'')OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR((NOT (rt1.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN rt1 ON ((NOT (rt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((NOT (rt1.c0)) IN ()) WHERE (((((x'')OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR((NOT (rt1.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN rt1 ON ((NOT (rt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((NOT (rt1.c0)) IN ()) WHERE (((((x'')OR(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))OR((NOT (rt1.c0)))));
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0)|(vt0.c0))))<=((rt1.c0 COLLATE RTRIM))) WHERE (((((((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))>=(CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))>=(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0)|(vt0.c0))))<=((rt1.c0 COLLATE RTRIM))));
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0)|(vt0.c0))))<=((rt1.c0 COLLATE RTRIM))) WHERE (((((((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))>=(CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))>=(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0)|(vt0.c0))))<=((rt1.c0 COLLATE RTRIM))));
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0)|(vt0.c0))))<=((rt1.c0 COLLATE RTRIM))) WHERE (((((((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(vt0.c0)))OR(vt0.c0)))>=(CAST(rt1.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt1 WHERE ((- (rt1.c0))) ORDER BY CAST((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN (('', rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c2))) AS TEXT) ASC, SQLITE_VERSION()  NULLS LAST, ((rt1.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN (('', rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c2))) AS TEXT) ASC, SQLITE_VERSION()  NULLS LAST, ((rt1.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((- (rt1.c0))) ORDER BY CAST((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN (('', rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c2))) AS TEXT) ASC, SQLITE_VERSION()  NULLS LAST, ((rt1.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN (('', rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c2))) AS TEXT) ASC, SQLITE_VERSION()  NULLS LAST, ((rt1.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((- (rt1.c0))) ORDER BY CAST((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN (('', rt1.c2, rt1.c1)) AND ((rt1.c2, rt1.c0, rt1.c2))) AS TEXT) ASC, SQLITE_VERSION()  NULLS LAST, ((rt1.c0) NOT NULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c2) IS TRUE)) IS TRUE)) ORDER BY 0.20649371957222662 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY 0.20649371957222662 ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c2) IS TRUE)) IS TRUE)) ORDER BY 0.20649371957222662 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY 0.20649371957222662 ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((rt1.c2) IS TRUE)) IS TRUE)) ORDER BY 0.20649371957222662 ASC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE ((+ (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ (rt1.c2 COLLATE BINARY)));
SELECT * FROM rt1, vt0 WHERE (((rt1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS FALSE)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS FALSE)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c0) IS FALSE));
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c2 IN ())) ISNULL)) ORDER BY (((((rt1.c0))<=((rt1.c2)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) ISNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c0))<=((rt1.c2)))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c2 IN ())) ISNULL)) ORDER BY (((((rt1.c0))<=((rt1.c2)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) ISNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c0))<=((rt1.c2)))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c2 IN ())) ISNULL)) ORDER BY (((((rt1.c0))<=((rt1.c2)))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM rt1, vt0 WHERE ((('1534342027')IS(rt1.c0 COLLATE BINARY))) ORDER BY CASE ((0.7294404005640076)|(rt1.c1))  WHEN rt1.c1 THEN ((rt1.c1)>>(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((('1534342027')IS(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((0.7294404005640076)|(rt1.c1))  WHEN rt1.c1 THEN ((rt1.c1)>>(rt1.c1)) END DESC);
SELECT * FROM rt1, vt0 WHERE ((('1534342027')IS(rt1.c0 COLLATE BINARY))) ORDER BY CASE ((0.7294404005640076)|(rt1.c1))  WHEN rt1.c1 THEN ((rt1.c1)>>(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((('1534342027')IS(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((0.7294404005640076)|(rt1.c1))  WHEN rt1.c1 THEN ((rt1.c1)>>(rt1.c1)) END DESC);
SELECT * FROM rt1, vt0 WHERE ((('1534342027')IS(rt1.c0 COLLATE BINARY))) ORDER BY CASE ((0.7294404005640076)|(rt1.c1))  WHEN rt1.c1 THEN ((rt1.c1)>>(rt1.c1)) END DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0) NOT NULL) COLLATE NOCASE) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0) NOT NULL) COLLATE NOCASE) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0) NOT NULL) COLLATE NOCASE) ORDER BY (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN ()) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((('z1삜5', vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (NULL)), ((((vt0.c0)OR(vt0.c0)))OR('-1349703402')), (vt0.c0 IN (vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), LIKELY(vt0.c0), ((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((('z1삜5', vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (NULL)), ((((vt0.c0)OR(vt0.c0)))OR('-1349703402')), (vt0.c0 IN (vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), LIKELY(vt0.c0), ((vt0.c0) IS FALSE)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((('z1삜5', vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (NULL)), ((((vt0.c0)OR(vt0.c0)))OR('-1349703402')), (vt0.c0 IN (vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), LIKELY(vt0.c0), ((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((('z1삜5', vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (NULL)), ((((vt0.c0)OR(vt0.c0)))OR('-1349703402')), (vt0.c0 IN (vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), LIKELY(vt0.c0), ((vt0.c0) IS FALSE)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((('z1삜5', vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (NULL)), ((((vt0.c0)OR(vt0.c0)))OR('-1349703402')), (vt0.c0 IN (vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), LIKELY(vt0.c0), ((vt0.c0) IS FALSE))));
SELECT * FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (rt1.c0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)|(rt1.c2)))>>(((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)|(rt1.c2)))>>(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)|(rt1.c2)))>>(((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)|(rt1.c2)))>>(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)|(rt1.c2)))>>(((rt1.c2) IS FALSE))));
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('n-', vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('n-', vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('n-', vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('n-', vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('n-', vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)IS(vt0.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY (((((-1.91020901E9 IN ()))AND(((vt0.c0)LIKE(rt1.c0)))))AND(((rt1.c2)<=(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((-1.91020901E9 IN ()))AND(((vt0.c0)LIKE(rt1.c0)))))AND(((rt1.c2)<=(rt1.c1)))) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY (((((-1.91020901E9 IN ()))AND(((vt0.c0)LIKE(rt1.c0)))))AND(((rt1.c2)<=(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((-1.91020901E9 IN ()))AND(((vt0.c0)LIKE(rt1.c0)))))AND(((rt1.c2)<=(rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)&(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)&(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)&(vt0.c0)) IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (PRINTF('-706319012')) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (-1851853252)))OR((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF('-706319012')) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (-1851853252)))OR((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (PRINTF('-706319012')) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (-1851853252)))OR((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF('-706319012')) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (-1851853252)))OR((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (PRINTF('-706319012')) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (-1851853252)))OR((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST((')' IN (vt0.c0)) AS BLOB)) ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((vt0.c0, rt1.c2, rt1.c2))))GLOB(CASE rt1.c1  WHEN rt1.c1 THEN NULL END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((')' IN (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((vt0.c0, rt1.c2, rt1.c2))))GLOB(CASE rt1.c1  WHEN rt1.c1 THEN NULL END)) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST((')' IN (vt0.c0)) AS BLOB)) ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((vt0.c0, rt1.c2, rt1.c2))))GLOB(CASE rt1.c1  WHEN rt1.c1 THEN NULL END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((')' IN (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((vt0.c0, rt1.c2, rt1.c2))))GLOB(CASE rt1.c1  WHEN rt1.c1 THEN NULL END)) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST((')' IN (vt0.c0)) AS BLOB)) ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((vt0.c0, rt1.c2, rt1.c2))))GLOB(CASE rt1.c1  WHEN rt1.c1 THEN NULL END)) ASC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((rt1.c0) NOT BETWEEN (0.09677868078166307) AND (rt1.c0)) IN ((((rt1.c0, NULL, '1873495857')) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((0X11fa285a, rt1.c0, vt0.c0))), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (0.09677868078166307) AND (rt1.c0)) IN ((((rt1.c0, NULL, '1873495857')) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((0X11fa285a, rt1.c0, vt0.c0))), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((rt1.c0) NOT BETWEEN (0.09677868078166307) AND (rt1.c0)) IN ((((rt1.c0, NULL, '1873495857')) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((0X11fa285a, rt1.c0, vt0.c0))), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT BETWEEN (0.09677868078166307) AND (rt1.c0)) IN ((((rt1.c0, NULL, '1873495857')) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((0X11fa285a, rt1.c0, vt0.c0))), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((rt1.c0) NOT BETWEEN (0.09677868078166307) AND (rt1.c0)) IN ((((rt1.c0, NULL, '1873495857')) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((0X11fa285a, rt1.c0, vt0.c0))), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT ALL * FROM vt0, rt1 WHERE ((- (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL END)));
SELECT * FROM rt1 WHERE ('0.24316398730685962') ORDER BY ((rt1.c2)>>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.24316398730685962') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c2 END)) ASC);
SELECT * FROM rt1 WHERE ('0.24316398730685962') ORDER BY ((rt1.c2)>>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.24316398730685962') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c2 END)) ASC);
SELECT * FROM rt1 WHERE ('0.24316398730685962') ORDER BY ((rt1.c2)>>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c2 END)) ASC;
SELECT * FROM vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 END) NOT NULL)) ORDER BY ((((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(((0.6671367181369536) NOTNULL))))AND(((vt0.c0)IS(rt1.c1)))))OR((rt1.c1 IN ()))))OR((((vt0.c0))<((vt0.c0))))) ASC  NULLS FIRST, ((((rt1.c1) NOT NULL)) NOT BETWEEN (TRIM(rt1.c1)) AND ((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(((0.6671367181369536) NOTNULL))))AND(((vt0.c0)IS(rt1.c1)))))OR((rt1.c1 IN ()))))OR((((vt0.c0))<((vt0.c0))))) ASC  NULLS FIRST, ((((rt1.c1) NOT NULL)) NOT BETWEEN (TRIM(rt1.c1)) AND ((rt1.c2 IN ())))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 END) NOT NULL)) ORDER BY ((((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(((0.6671367181369536) NOTNULL))))AND(((vt0.c0)IS(rt1.c1)))))OR((rt1.c1 IN ()))))OR((((vt0.c0))<((vt0.c0))))) ASC  NULLS FIRST, ((((rt1.c1) NOT NULL)) NOT BETWEEN (TRIM(rt1.c1)) AND ((rt1.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(((0.6671367181369536) NOTNULL))))AND(((vt0.c0)IS(rt1.c1)))))OR((rt1.c1 IN ()))))OR((((vt0.c0))<((vt0.c0))))) ASC  NULLS FIRST, ((((rt1.c1) NOT NULL)) NOT BETWEEN (TRIM(rt1.c1)) AND ((rt1.c2 IN ())))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 END) NOT NULL)) ORDER BY ((((((((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(((0.6671367181369536) NOTNULL))))AND(((vt0.c0)IS(rt1.c1)))))OR((rt1.c1 IN ()))))OR((((vt0.c0))<((vt0.c0))))) ASC  NULLS FIRST, ((((rt1.c1) NOT NULL)) NOT BETWEEN (TRIM(rt1.c1)) AND ((rt1.c2 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (PRINTF(((x'')||(rt1.c2)))) ORDER BY json_array((~ (rt1.c0)), (~ ('-1381220043')));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((x'')||(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY json_array((~ (rt1.c0)), (~ ('-1381220043'))));
SELECT COUNT(*) FROM rt1 WHERE (PRINTF(((x'')||(rt1.c2)))) ORDER BY json_array((~ (rt1.c0)), (~ ('-1381220043')));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((x'')||(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY json_array((~ (rt1.c0)), (~ ('-1381220043'))));
SELECT COUNT(*) FROM rt1 WHERE (PRINTF(((x'')||(rt1.c2)))) ORDER BY json_array((~ (rt1.c0)), (~ ('-1381220043')));
SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (rt1.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 WHERE (((+ (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((+ (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((+ (rt1.c2)) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON x'1274193c' COLLATE RTRIM WHERE (((- (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt1.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON x'1274193c' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON x'1274193c' COLLATE RTRIM WHERE (((- (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt1.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON x'1274193c' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON x'1274193c' COLLATE RTRIM WHERE (((- (rt1.c0)) IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))))) ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN TRIM(rt1.c1) WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c2 COLLATE RTRIM WHEN NULL THEN rt1.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN TRIM(rt1.c1) WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c2 COLLATE RTRIM WHEN NULL THEN rt1.c2 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))))) ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN TRIM(rt1.c1) WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c2 COLLATE RTRIM WHEN NULL THEN rt1.c2 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN TRIM(rt1.c1) WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c2 COLLATE RTRIM WHEN NULL THEN rt1.c2 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))))) ORDER BY CASE WHEN CAST(rt1.c0 AS INTEGER) THEN TRIM(rt1.c1) WHEN CAST(rt1.c2 AS INTEGER) THEN rt1.c2 COLLATE RTRIM WHEN NULL THEN rt1.c2 COLLATE NOCASE END ASC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON PRINTF(((((rt1.c0)OR(rt1.c0)))AND(rt1.c2))) WHERE ((((vt0.c0)) NOT BETWEEN ((0.10612523470805924)) AND ((''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((0.10612523470805924)) AND (('')))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON PRINTF(((((rt1.c0)OR(rt1.c0)))AND(rt1.c2))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON PRINTF(((((rt1.c0)OR(rt1.c0)))AND(rt1.c2))) WHERE ((((vt0.c0)) NOT BETWEEN ((0.10612523470805924)) AND ((''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((0.10612523470805924)) AND (('')))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON PRINTF(((((rt1.c0)OR(rt1.c0)))AND(rt1.c2))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON PRINTF(((((rt1.c0)OR(rt1.c0)))AND(rt1.c2))) WHERE ((((vt0.c0)) NOT BETWEEN ((0.10612523470805924)) AND ((''))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN (''))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN (''))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY) ORDER BY (((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)) IN (''))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '626667261';
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '626667261');
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '626667261';
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '626667261');
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '626667261';
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON '-1327316836' WHERE ((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))*(TRIM(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))*(TRIM(rt1.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON '-1327316836');
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON '-1327316836' WHERE ((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))*(TRIM(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))*(TRIM(rt1.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON '-1327316836');
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON '-1327316836' WHERE ((((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))*(TRIM(rt1.c1))));
SELECT * FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (json_insert(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.5400803711610664, (((vt0.c0, vt0.c0, 0Xffffffff93c6548c))<>((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.5400803711610664, (((vt0.c0, vt0.c0, 0xffffffff93c6548c))<>((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (json_insert(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.5400803711610664, (((vt0.c0, vt0.c0, 0Xffffffff93c6548c))<>((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.5400803711610664, (((vt0.c0, vt0.c0, 0xffffffff93c6548c))<>((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c0, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c2)))))<((CAST(rt1.c0 AS BLOB))))) ORDER BY LOWER(DISTINCT ((rt1.c1)IS NOT(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c0, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c2)))))<((CAST(rt1.c0 AS BLOB))))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(DISTINCT ((rt1.c1)IS NOT(rt1.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c0, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c2)))))<((CAST(rt1.c0 AS BLOB))))) ORDER BY LOWER(DISTINCT ((rt1.c1)IS NOT(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c0, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c2)))))<((CAST(rt1.c0 AS BLOB))))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(DISTINCT ((rt1.c1)IS NOT(rt1.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c0, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c2)))))<((CAST(rt1.c0 AS BLOB))))) ORDER BY LOWER(DISTINCT ((rt1.c1)IS NOT(rt1.c2)));
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN x'' THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)||((((vt0.c0, rt1.c0, rt1.c1))>((vt0.c0, 0.014426055303140561, rt1.c1))))) WHERE (((CASE WHEN rt1.c1 THEN vt0.c0 END)-(((rt1.c1)>(0.4294698947615583)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN vt0.c0 END)-(((rt1.c1)>(0.4294698947615583))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN x'' THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)||((((vt0.c0, rt1.c0, rt1.c1))>((vt0.c0, 0.014426055303140561, rt1.c1))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN x'' THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)||((((vt0.c0, rt1.c0, rt1.c1))>((vt0.c0, 0.014426055303140561, rt1.c1))))) WHERE (((CASE WHEN rt1.c1 THEN vt0.c0 END)-(((rt1.c1)>(0.4294698947615583)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN vt0.c0 END)-(((rt1.c1)>(0.4294698947615583))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN x'' THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)||((((vt0.c0, rt1.c0, rt1.c1))>((vt0.c0, 0.014426055303140561, rt1.c1))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((CASE rt1.c1  WHEN x'' THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END)||((((vt0.c0, rt1.c0, rt1.c1))>((vt0.c0, 0.014426055303140561, rt1.c1))))) WHERE (((CASE WHEN rt1.c1 THEN vt0.c0 END)-(((rt1.c1)>(0.4294698947615583)))));
SELECT ALL * FROM rt1 WHERE (TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c0 END)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c0 END));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c0 END)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c0 END));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT rt1.c2)) ISNULL) WHERE (LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c0)/(x'5cd1')), '1')) ORDER BY (((((rt1.c0) BETWEEN ('gX') AND (rt1.c2))))=(((rt1.c1 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c0)/(x'5cd1')), '1')) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT rt1.c2)) ISNULL) ORDER BY (((((rt1.c0) BETWEEN ('gX') AND (rt1.c2))))==(((rt1.c1 IN (rt1.c0))))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT rt1.c2)) ISNULL) WHERE (LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c0)/(x'5cd1')), '1')) ORDER BY (((((rt1.c0) BETWEEN ('gX') AND (rt1.c2))))=(((rt1.c1 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c0)/(x'5cd1')), '1')) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT rt1.c2)) ISNULL) ORDER BY (((((rt1.c0) BETWEEN ('gX') AND (rt1.c2))))==(((rt1.c1 IN (rt1.c0))))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT rt1.c2)) ISNULL) WHERE (LIKE(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c0)), ((rt1.c0)/(x'5cd1')), '1')) ORDER BY (((((rt1.c0) BETWEEN ('gX') AND (rt1.c2))))=(((rt1.c1 IN (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2) BETWEEN (((rt1.c1)>(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) BETWEEN (((rt1.c1)>(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2) BETWEEN (((rt1.c1)>(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) BETWEEN (((rt1.c1)>(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2) BETWEEN (((rt1.c1)>(rt1.c0))) AND (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (((((+ (vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (((((+ (vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY (((((+ (vt0.c0)))OR((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0) ISNULL))IS NOT(((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(x'')))AND(rt1.c2))))) ORDER BY ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL))IS NOT(((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(x'')))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0) ISNULL))IS NOT(((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(x'')))AND(rt1.c2))))) ORDER BY ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) ISNULL))IS NOT(((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(x'')))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0) ISNULL))IS NOT(((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(x'')))AND(rt1.c2))))) ORDER BY ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))OR(vt0.c0)))OR(rt1.c2)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ('')) WHERE (CAST((((((((((((('?D')AND(rt1.c1)))OR('')))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)) AS REAL)) ORDER BY (((rt1.c0)) NOT BETWEEN (((('')*(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS FIRST, (- (CAST(rt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((((((('?D')AND(rt1.c1)))OR('')))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ('')) ORDER BY (((rt1.c0)) NOT BETWEEN (((('')*(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS FIRST, (- (CAST(rt1.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ('')) WHERE (CAST((((((((((((('?D')AND(rt1.c1)))OR('')))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)) AS REAL)) ORDER BY (((rt1.c0)) NOT BETWEEN (((('')*(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS FIRST, (- (CAST(rt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((((((('?D')AND(rt1.c1)))OR('')))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ('')) ORDER BY (((rt1.c0)) NOT BETWEEN (((('')*(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS FIRST, (- (CAST(rt1.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ('')) WHERE (CAST((((((((((((('?D')AND(rt1.c1)))OR('')))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c0)) AS REAL)) ORDER BY (((rt1.c0)) NOT BETWEEN (((('')*(vt0.c0)))) AND ((((vt0.c0) NOT NULL))))  NULLS LAST, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN CAST(rt1.c1 AS INTEGER) END DESC  NULLS FIRST, (- (CAST(rt1.c0 AS INTEGER)))  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c0 IN ()))AND(((rt1.c0) ISNULL))))OR((((vt0.c0))=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0 IN ()))AND(((rt1.c0) ISNULL))))OR((((vt0.c0))=((rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c0 IN ()))AND(((rt1.c0) ISNULL))))OR((((vt0.c0))=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0 IN ()))AND(((rt1.c0) ISNULL))))OR((((vt0.c0))=((rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c0 IN ()))AND(((rt1.c0) ISNULL))))OR((((vt0.c0))=((rt1.c2))))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (TRIM(DISTINCT 0X713abb8b));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0X713abb8b)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (TRIM(DISTINCT 0X713abb8b));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0X713abb8b)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (TRIM(DISTINCT 0X713abb8b));
SELECT COUNT(*) FROM rt1 WHERE (UNICODE(rt1.c0));
SELECT SUM(count) FROM (SELECT ((UNICODE(rt1.c0)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (UNICODE(rt1.c0));
SELECT SUM(count) FROM (SELECT ((UNICODE(rt1.c0)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (UNICODE(rt1.c0));
SELECT * FROM rt1 WHERE (CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c0)GLOB(rt1.c0)) THEN TYPEOF(DISTINCT rt1.c1) WHEN ((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c2 WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END) ORDER BY ((rt1.c1) NOT BETWEEN (((NULL)%(rt1.c2))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))  NULLS FIRST, ((((x'')OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)))AND(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c0)GLOB(rt1.c0)) THEN TYPEOF(DISTINCT rt1.c1) WHEN ((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c2 WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOT BETWEEN (((NULL)%(rt1.c2))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))  NULLS FIRST, ((((x'')OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)))AND(rt1.c2)));
SELECT * FROM rt1 WHERE (CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c0)GLOB(rt1.c0)) THEN TYPEOF(DISTINCT rt1.c1) WHEN ((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c2 WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END) ORDER BY ((rt1.c1) NOT BETWEEN (((NULL)%(rt1.c2))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))  NULLS FIRST, ((((x'')OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)))AND(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c0)GLOB(rt1.c0)) THEN TYPEOF(DISTINCT rt1.c1) WHEN ((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c2 WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOT BETWEEN (((NULL)%(rt1.c2))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))  NULLS FIRST, ((((x'')OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)))AND(rt1.c2)));
SELECT * FROM rt1 WHERE (CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c0)GLOB(rt1.c0)) THEN TYPEOF(DISTINCT rt1.c1) WHEN ((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c2 WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END) ORDER BY ((rt1.c1) NOT BETWEEN (((NULL)%(rt1.c2))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))  NULLS FIRST, ((((x'')OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)))AND(rt1.c2));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((ABS(DISTINCT rt1.c2))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((ABS(DISTINCT rt1.c2))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((ABS(DISTINCT rt1.c2))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((ABS(DISTINCT rt1.c2))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((ABS(DISTINCT rt1.c2))) AND ((rt1.c1))));
SELECT ALL * FROM vt0, rt1 WHERE (CASE ((rt1.c0) IS TRUE)  WHEN CASE NULL  WHEN '-853277317' THEN vt0.c0 END THEN CAST(rt1.c1 AS TEXT) END) ORDER BY ((NULL)==(CASE vt0.c0  WHEN vt0.c0 THEN 0.3774047500754617 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0)))  NULLS LAST, CAST((rt1.c2 IN (rt1.c2, rt1.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) IS TRUE)  WHEN CASE NULL  WHEN '-853277317' THEN vt0.c0 END THEN CAST(rt1.c1 AS TEXT) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((NULL)==(CASE vt0.c0  WHEN vt0.c0 THEN 0.3774047500754617 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0)))  NULLS LAST, CAST((rt1.c2 IN (rt1.c2, rt1.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (CASE ((rt1.c0) IS TRUE)  WHEN CASE NULL  WHEN '-853277317' THEN vt0.c0 END THEN CAST(rt1.c1 AS TEXT) END) ORDER BY ((NULL)==(CASE vt0.c0  WHEN vt0.c0 THEN 0.3774047500754617 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0)))  NULLS LAST, CAST((rt1.c2 IN (rt1.c2, rt1.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) IS TRUE)  WHEN CASE NULL  WHEN '-853277317' THEN vt0.c0 END THEN CAST(rt1.c1 AS TEXT) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((NULL)==(CASE vt0.c0  WHEN vt0.c0 THEN 0.3774047500754617 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0)))  NULLS LAST, CAST((rt1.c2 IN (rt1.c2, rt1.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (CASE ((rt1.c0) IS TRUE)  WHEN CASE NULL  WHEN '-853277317' THEN vt0.c0 END THEN CAST(rt1.c1 AS TEXT) END) ORDER BY ((NULL)==(CASE vt0.c0  WHEN vt0.c0 THEN 0.3774047500754617 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((vt0.c0)))  NULLS LAST, CAST((rt1.c2 IN (rt1.c2, rt1.c0)) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0)<=(((vt0.c0)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<=(((vt0.c0)IS(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0)<=(((vt0.c0)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<=(((vt0.c0)IS(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0)<=(((vt0.c0)IS(rt1.c0)))));
SELECT * FROM rt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (NULL COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ('o73S4K');
SELECT SUM(count) FROM (SELECT (('o73S4K') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('o73S4K');
SELECT SUM(count) FROM (SELECT (('o73S4K') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('o73S4K');
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c1)<=(rt1.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c1)<=(rt1.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c1)<=(rt1.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c1)<=(rt1.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c1)<=(rt1.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY rt1.c2;
SELECT ALL * FROM rt1, vt0 WHERE ((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'94f4' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'94f4' END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'94f4' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'94f4' END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'94f4' END IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY CAST((- (vt0.c0)) AS BLOB) ASC, (((((vt0.c0)*(vt0.c0)), CASE WHEN 0.7547649615594738 THEN x'' END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS BLOB) ASC, (((((vt0.c0)*(vt0.c0)), CASE WHEN 0.7547649615594738 THEN x'' END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY CAST((- (vt0.c0)) AS BLOB) ASC, (((((vt0.c0)*(vt0.c0)), CASE WHEN 0.7547649615594738 THEN x'' END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS BLOB) ASC, (((((vt0.c0)*(vt0.c0)), CASE WHEN 0.7547649615594738 THEN x'' END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY CAST((- (vt0.c0)) AS BLOB) ASC, (((((vt0.c0)*(vt0.c0)), CASE WHEN 0.7547649615594738 THEN x'' END, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c0)), vt0.c0)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0)>>(rt1.c2)) WHEN CAST(rt1.c0 AS REAL) THEN (((vt0.c0))<=((NULL))) WHEN (((rt1.c1))>((rt1.c2))) THEN (NOT (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0)>>(rt1.c2)) WHEN CAST(rt1.c0 AS REAL) THEN (((vt0.c0))<=((NULL))) WHEN (((rt1.c1))>((rt1.c2))) THEN (NOT (rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0)>>(rt1.c2)) WHEN CAST(rt1.c0 AS REAL) THEN (((vt0.c0))<=((NULL))) WHEN (((rt1.c1))>((rt1.c2))) THEN (NOT (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0)>>(rt1.c2)) WHEN CAST(rt1.c0 AS REAL) THEN (((vt0.c0))<=((NULL))) WHEN (((rt1.c1))>((rt1.c2))) THEN (NOT (rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0)>>(rt1.c2)) WHEN CAST(rt1.c0 AS REAL) THEN (((vt0.c0))<=((NULL))) WHEN (((rt1.c1))>((rt1.c2))) THEN (NOT (rt1.c2)) END);
SELECT * FROM rt1, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN (((((rt1.c1)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN (((((rt1.c1)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN (((((rt1.c1)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN (((((rt1.c1)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN (((((rt1.c1)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (((rt1.c2) NOTNULL)))) ORDER BY CAST(rt1.c1 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(rt1.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (((rt1.c2) NOTNULL)))) ORDER BY CAST(rt1.c1 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(rt1.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (((rt1.c2) NOTNULL)))) ORDER BY CAST(rt1.c1 AS TEXT) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2) IS TRUE))OR(CAST(0.43466820267708406 AS BLOB))))OR(((((rt1.c0)AND(rt1.c1)))AND('	x^캀+')))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) IS TRUE))OR(CAST(0.43466820267708406 AS BLOB))))OR(((((rt1.c0)AND(rt1.c1)))AND('	x^캀+'))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2) IS TRUE))OR(CAST(0.43466820267708406 AS BLOB))))OR(((((rt1.c0)AND(rt1.c1)))AND('	x^캀+')))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) IS TRUE))OR(CAST(0.43466820267708406 AS BLOB))))OR(((((rt1.c0)AND(rt1.c1)))AND('	x^캀+'))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2) IS TRUE))OR(CAST(0.43466820267708406 AS BLOB))))OR(((((rt1.c0)AND(rt1.c1)))AND('	x^캀+')))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((((rt1.c0 IN ()))OR((vt0.c0 IN ()))))AND(TRIM(rt1.c0))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE '0.8035401871813856' END)))OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c0 IN ()))OR((vt0.c0 IN ()))))AND(TRIM(rt1.c0))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE '0.8035401871813856' END)))OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((((rt1.c0 IN ()))OR((vt0.c0 IN ()))))AND(TRIM(rt1.c0))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE '0.8035401871813856' END)))OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c0 IN ()))OR((vt0.c0 IN ()))))AND(TRIM(rt1.c0))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE '0.8035401871813856' END)))OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((((rt1.c0 IN ()))OR((vt0.c0 IN ()))))AND(TRIM(rt1.c0))))OR(CASE WHEN rt1.c1 THEN rt1.c0 ELSE '0.8035401871813856' END)))OR(((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (DATETIME(rt1.c1, 'E/mʄl]', '-1526865665') COLLATE BINARY) ORDER BY rt1.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(rt1.c1, 'E/mʄl]', '-1526865665') COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY rt1.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (DATETIME(rt1.c1, 'E/mʄl]', '-1526865665') COLLATE BINARY) ORDER BY rt1.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(rt1.c1, 'E/mʄl]', '-1526865665') COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY rt1.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (DATETIME(rt1.c1, 'E/mʄl]', '-1526865665') COLLATE BINARY) ORDER BY rt1.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1 COLLATE BINARY)&(CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)&(CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1 COLLATE BINARY)&(CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)&(CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1 COLLATE BINARY)&(CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE (LOWER(((rt1.c0)IS(rt1.c2)))) ORDER BY (((+ (rt1.c0)))IS NOT(((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))) ASC  NULLS FIRST, CAST(CAST(rt1.c0 AS REAL) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c0)IS(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY (((+ (rt1.c0)))IS NOT(((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))) ASC  NULLS FIRST, CAST(CAST(rt1.c0 AS REAL) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (LOWER(((rt1.c0)IS(rt1.c2)))) ORDER BY (((+ (rt1.c0)))IS NOT(((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))) ASC  NULLS FIRST, CAST(CAST(rt1.c0 AS REAL) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt1.c0)IS(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY (((+ (rt1.c0)))IS NOT(((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))) ASC  NULLS FIRST, CAST(CAST(rt1.c0 AS REAL) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (LOWER(((rt1.c0)IS(rt1.c2)))) ORDER BY (((+ (rt1.c0)))IS NOT(((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))) ASC  NULLS FIRST, CAST(CAST(rt1.c0 AS REAL) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN '' THEN ((rt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN '' THEN ((rt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN '' THEN ((rt1.c0) NOTNULL) END);
SELECT ALL * FROM rt1 WHERE (CASE (- (rt1.c1))  WHEN ((rt1.c2)OR('1375277146')) THEN ((rt1.c2) IS TRUE) WHEN (- (NULL)) THEN (rt1.c1 IN ()) WHEN (~ (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c1)) ELSE (NOT (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c1))  WHEN ((rt1.c2)OR('1375277146')) THEN ((rt1.c2) IS TRUE) WHEN (- (NULL)) THEN (rt1.c1 IN ()) WHEN (~ (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c1)) ELSE (NOT (rt1.c2)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (- (rt1.c1))  WHEN ((rt1.c2)OR('1375277146')) THEN ((rt1.c2) IS TRUE) WHEN (- (NULL)) THEN (rt1.c1 IN ()) WHEN (~ (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c1)) ELSE (NOT (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c1))  WHEN ((rt1.c2)OR('1375277146')) THEN ((rt1.c2) IS TRUE) WHEN (- (NULL)) THEN (rt1.c1 IN ()) WHEN (~ (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c1)) ELSE (NOT (rt1.c2)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (- (rt1.c1))  WHEN ((rt1.c2)OR('1375277146')) THEN ((rt1.c2) IS TRUE) WHEN (- (NULL)) THEN (rt1.c1 IN ()) WHEN (~ (rt1.c0)) THEN ((rt1.c0)GLOB(rt1.c1)) ELSE (NOT (rt1.c2)) END);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((~ (vt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((~ (rt1.c0)) IN ((NOT (rt1.c1))))) ORDER BY ((((((rt1.c1) IS TRUE))OR(x'')))AND(rt1.c2)) DESC, (((rt1.c1) IS TRUE) IN ()) ASC  NULLS LAST, (((((x'5257'))>=((rt1.c1))))>(rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c0)) IN ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1) IS TRUE))OR(x'')))AND(rt1.c2)) DESC, (((rt1.c1) IS TRUE) IN ()) ASC  NULLS LAST, (((((x'5257'))>=((rt1.c1))))>(rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((~ (rt1.c0)) IN ((NOT (rt1.c1))))) ORDER BY ((((((rt1.c1) IS TRUE))OR(x'')))AND(rt1.c2)) DESC, (((rt1.c1) IS TRUE) IN ()) ASC  NULLS LAST, (((((x'5257'))>=((rt1.c1))))>(rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c0)) IN ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1) IS TRUE))OR(x'')))AND(rt1.c2)) DESC, (((rt1.c1) IS TRUE) IN ()) ASC  NULLS LAST, (((((x'5257'))>=((rt1.c1))))>(rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((~ (rt1.c0)) IN ((NOT (rt1.c1))))) ORDER BY ((((((rt1.c1) IS TRUE))OR(x'')))AND(rt1.c2)) DESC, (((rt1.c1) IS TRUE) IN ()) ASC  NULLS LAST, (((((x'5257'))>=((rt1.c1))))>(rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((rt1.c0)<<(rt1.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0)<<(rt1.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((rt1.c0)<<(rt1.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0)<<(rt1.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN rt1.c1 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((rt1.c0)<<(rt1.c1)) COLLATE BINARY DESC;
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), 0.9460985098311805)) ORDER BY (- (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), 0.9460985098311805)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (- (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), 0.9460985098311805)) ORDER BY (- (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), 0.9460985098311805)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (- (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)), 0.9460985098311805)) ORDER BY (- (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) ORDER BY ((((-2.011076965E9)IS NOT(rt1.c0))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND ((rt1.c0 IN ()))) DESC, ((CAST(rt1.c1 AS NUMERIC))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))), (((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2))))LIKE(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((-2.011076965E9)IS NOT(rt1.c0))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND ((rt1.c0 IN ()))) DESC, ((CAST(rt1.c1 AS NUMERIC))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))), (((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2))))LIKE(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) ORDER BY ((((-2.011076965E9)IS NOT(rt1.c0))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND ((rt1.c0 IN ()))) DESC, ((CAST(rt1.c1 AS NUMERIC))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))), (((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2))))LIKE(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((-2.011076965E9)IS NOT(rt1.c0))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND ((rt1.c0 IN ()))) DESC, ((CAST(rt1.c1 AS NUMERIC))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))), (((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2))))LIKE(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0))<=((rt1.c0))) COLLATE RTRIM) ORDER BY ((((-2.011076965E9)IS NOT(rt1.c0))) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND ((rt1.c0 IN ()))) DESC, ((CAST(rt1.c1 AS NUMERIC))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)))), (((((rt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c2))))LIKE(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0, rt1.c1, vt0.c0)) BETWEEN (((((rt1.c2))>=((rt1.c2))), CAST(rt1.c1 AS BLOB), (rt1.c0 IN ()))) AND ((0Xffffffff87dd3a9a COLLATE NOCASE, ((rt1.c1)GLOB(rt1.c1)), ((vt0.c0)IS NOT(rt1.c2)))))) ORDER BY ((((((vt0.c0)AND(x'1517')))OR(rt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c1, vt0.c0)) BETWEEN (((((rt1.c2))>=((rt1.c2))), CAST(rt1.c1 AS BLOB), (rt1.c0 IN ()))) AND ((0Xffffffff87dd3a9a COLLATE NOCASE, ((rt1.c1)GLOB(rt1.c1)), ((vt0.c0)IS NOT(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((vt0.c0)AND(x'1517')))OR(rt1.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0, rt1.c1, vt0.c0)) BETWEEN (((((rt1.c2))>=((rt1.c2))), CAST(rt1.c1 AS BLOB), (rt1.c0 IN ()))) AND ((0Xffffffff87dd3a9a COLLATE NOCASE, ((rt1.c1)GLOB(rt1.c1)), ((vt0.c0)IS NOT(rt1.c2)))))) ORDER BY ((((((vt0.c0)AND(x'1517')))OR(rt1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c1, vt0.c0)) BETWEEN (((((rt1.c2))>=((rt1.c2))), CAST(rt1.c1 AS BLOB), (rt1.c0 IN ()))) AND ((0Xffffffff87dd3a9a COLLATE NOCASE, ((rt1.c1)GLOB(rt1.c1)), ((vt0.c0)IS NOT(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((vt0.c0)AND(x'1517')))OR(rt1.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0, rt1.c1, vt0.c0)) BETWEEN (((((rt1.c2))>=((rt1.c2))), CAST(rt1.c1 AS BLOB), (rt1.c0 IN ()))) AND ((0Xffffffff87dd3a9a COLLATE NOCASE, ((rt1.c1)GLOB(rt1.c1)), ((vt0.c0)IS NOT(rt1.c2)))))) ORDER BY ((((((vt0.c0)AND(x'1517')))OR(rt1.c0))) IS FALSE) ASC;
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))<>((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))<>((- (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))<>((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))<>((- (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))<>((- (rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (0X22411d53) ORDER BY (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST, CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END  WHEN json_array_length(rt1.c1) THEN ((x'bdf59e7e')LIKE(rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0x22411d53) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST, CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END  WHEN json_array_length(rt1.c1) THEN ((x'bdf59e7e')LIKE(rt1.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (0X22411d53) ORDER BY (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST, CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END  WHEN json_array_length(rt1.c1) THEN ((x'bdf59e7e')LIKE(rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0x22411d53) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST, CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END  WHEN json_array_length(rt1.c1) THEN ((x'bdf59e7e')LIKE(rt1.c1)) END  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (0X22411d53) ORDER BY (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST, CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END  WHEN json_array_length(rt1.c1) THEN ((x'bdf59e7e')LIKE(rt1.c1)) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<>((((vt0.c0))<>((vt0.c0)))))) ORDER BY LOWER(DISTINCT ((vt0.c0)==(vt0.c0)))  NULLS LAST, ((NULL) ISNULL), CASE SQLITE_SOURCE_ID()  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<>((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT ((vt0.c0)=(vt0.c0)))  NULLS LAST, ((NULL) ISNULL), CASE SQLITE_SOURCE_ID()  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<>((((vt0.c0))<>((vt0.c0)))))) ORDER BY LOWER(DISTINCT ((vt0.c0)==(vt0.c0)))  NULLS LAST, ((NULL) ISNULL), CASE SQLITE_SOURCE_ID()  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<>((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT ((vt0.c0)=(vt0.c0)))  NULLS LAST, ((NULL) ISNULL), CASE SQLITE_SOURCE_ID()  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<>((((vt0.c0))<>((vt0.c0)))))) ORDER BY LOWER(DISTINCT ((vt0.c0)==(vt0.c0)))  NULLS LAST, ((NULL) ISNULL), CASE SQLITE_SOURCE_ID()  WHEN (+ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END;
SELECT * FROM vt0, rt1 WHERE ((~ (rt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((~ (rt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((~ (rt1.c0)));
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c2) ORDER BY (((('㿅a')<=(rt1.c1)))<=(((rt1.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((('㿅a')<=(rt1.c1)))<=(((rt1.c2) ISNULL))) ASC);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c2) ORDER BY (((('㿅a')<=(rt1.c1)))<=(((rt1.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((('㿅a')<=(rt1.c1)))<=(((rt1.c2) ISNULL))) ASC);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c2) ORDER BY (((('㿅a')<=(rt1.c1)))<=(((rt1.c2) ISNULL))) ASC;
SELECT * FROM vt0, rt1 WHERE ((('4{wo') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('4{wo') IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((('4{wo') IS TRUE));
SELECT SUM(count) FROM (SELECT (((('4{wo') IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((('4{wo') IS TRUE));
SELECT ALL * FROM vt0 WHERE ((NULL IN ())) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ((~ (vt0.c0)))) DESC, 1586690561 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ((~ (vt0.c0)))) DESC, 1586690561 ASC);
SELECT ALL * FROM vt0 WHERE ((NULL IN ())) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ((~ (vt0.c0)))) DESC, 1586690561 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ((~ (vt0.c0)))) DESC, 1586690561 ASC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (NULL);
SELECT ALL * FROM vt0, rt1 WHERE (((0.2827760775527435)*(((vt0.c0)>>(rt1.c2))))) ORDER BY ((MIN(vt0.c0, rt1.c2, rt1.c0, vt0.c0)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((0.2827760775527435)*(((vt0.c0)>>(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((MIN(vt0.c0, rt1.c2, rt1.c0, vt0.c0)) IS FALSE) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (((0.2827760775527435)*(((vt0.c0)>>(rt1.c2))))) ORDER BY ((MIN(vt0.c0, rt1.c2, rt1.c0, vt0.c0)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((0.2827760775527435)*(((vt0.c0)>>(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((MIN(vt0.c0, rt1.c2, rt1.c0, vt0.c0)) IS FALSE) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (((0.2827760775527435)*(((vt0.c0)>>(rt1.c2))))) ORDER BY ((MIN(vt0.c0, rt1.c2, rt1.c0, vt0.c0)) IS FALSE) DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((((((vt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) AND (TYPEOF(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) AND (TYPEOF(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((((((vt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) AND (TYPEOF(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) AND (TYPEOF(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((((((vt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0))) BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) AND (TYPEOF(DISTINCT rt1.c0))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)GLOB(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)GLOB(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)GLOB(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)GLOB(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((~ (vt0.c0)))<=(((vt0.c0)GLOB(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((~ (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((~ (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((~ (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT ALL * FROM vt0, rt1 WHERE ((((- (rt1.c1)))IS NOT(rt1.c2))) ORDER BY (NOT (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, (((rt1.c0) BETWEEN ('2024218822') AND (rt1.c1)) IN (RTRIM(rt1.c1), rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1)))IS NOT(rt1.c2))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (NOT (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, (((rt1.c0) BETWEEN ('2024218822') AND (rt1.c1)) IN (RTRIM(rt1.c1), rt1.c2)) ASC);
SELECT ALL * FROM vt0, rt1 WHERE ((((- (rt1.c1)))IS NOT(rt1.c2))) ORDER BY (NOT (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, (((rt1.c0) BETWEEN ('2024218822') AND (rt1.c1)) IN (RTRIM(rt1.c1), rt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1)))IS NOT(rt1.c2))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (NOT (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, (((rt1.c0) BETWEEN ('2024218822') AND (rt1.c1)) IN (RTRIM(rt1.c1), rt1.c2)) ASC);
SELECT ALL * FROM vt0, rt1 WHERE ((((- (rt1.c1)))IS NOT(rt1.c2))) ORDER BY (NOT (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))  NULLS FIRST, (((rt1.c0) BETWEEN ('2024218822') AND (rt1.c1)) IN (RTRIM(rt1.c1), rt1.c2)) ASC;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((('	_.-K*') BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('	_.-K*') BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((('	_.-K*') BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('	_.-K*') BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((('	_.-K*') BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END) AND (((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)))));
SELECT ALL * FROM vt0, rt1 WHERE (CAST((vt0.c0 IN (x'cbf6')) AS INTEGER)) ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (x'cbf6')) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (CAST((vt0.c0 IN (x'cbf6')) AS INTEGER)) ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (x'cbf6')) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (CAST((vt0.c0 IN (x'cbf6')) AS INTEGER)) ORDER BY (((vt0.c0 IN ())) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))  WHEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN LTRIM(rt1.c2) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END END) ORDER BY (((((- (rt1.c2)))AND(CAST(rt1.c0 AS TEXT))))AND((('7HI7鐔 JR^') NOT BETWEEN (rt1.c2) AND (vt0.c0)))), LIKELY(DISTINCT ((rt1.c0)/(vt0.c0))), ((((rt1.c2) BETWEEN (rt1.c1) AND (x''))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))  WHEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN LTRIM(rt1.c2) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((((- (rt1.c2)))AND(CAST(rt1.c0 AS TEXT))))AND((('7HI7鐔 JR^') NOT BETWEEN (rt1.c2) AND (vt0.c0)))), LIKELY(DISTINCT ((rt1.c0)/(vt0.c0))), ((((rt1.c2) BETWEEN (rt1.c1) AND (x''))) ISNULL) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))  WHEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN LTRIM(rt1.c2) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END END) ORDER BY (((((- (rt1.c2)))AND(CAST(rt1.c0 AS TEXT))))AND((('7HI7鐔 JR^') NOT BETWEEN (rt1.c2) AND (vt0.c0)))), LIKELY(DISTINCT ((rt1.c0)/(vt0.c0))), ((((rt1.c2) BETWEEN (rt1.c1) AND (x''))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))  WHEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN LTRIM(rt1.c2) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((((- (rt1.c2)))AND(CAST(rt1.c0 AS TEXT))))AND((('7HI7鐔 JR^') NOT BETWEEN (rt1.c2) AND (vt0.c0)))), LIKELY(DISTINCT ((rt1.c0)/(vt0.c0))), ((((rt1.c2) BETWEEN (rt1.c1) AND (x''))) ISNULL) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0))  WHEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)) THEN LTRIM(rt1.c2) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END END) ORDER BY (((((- (rt1.c2)))AND(CAST(rt1.c0 AS TEXT))))AND((('7HI7鐔 JR^') NOT BETWEEN (rt1.c2) AND (vt0.c0)))), LIKELY(DISTINCT ((rt1.c0)/(vt0.c0))), ((((rt1.c2) BETWEEN (rt1.c1) AND (x''))) ISNULL) ASC;
SELECT ALL * FROM vt0, rt1 WHERE ((((~ (vt0.c0)))*(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))*(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((~ (vt0.c0)))*(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))*(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((~ (vt0.c0)))*(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt1, vt0 WHERE ((((0.40809038929686836)) BETWEEN (((NOT (0.09344773489049052)))) AND (((rt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((0.40809038929686836)) BETWEEN (((NOT (0.09344773489049052)))) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((0.40809038929686836)) BETWEEN (((NOT (0.09344773489049052)))) AND (((rt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((0.40809038929686836)) BETWEEN (((NOT (0.09344773489049052)))) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((0.40809038929686836)) BETWEEN (((NOT (0.09344773489049052)))) AND (((rt1.c0 IN ())))));
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS REAL))  NULLS FIRST, ((((vt0.c0)-(vt0.c0))) IS FALSE), '?(瑄p6QRu' ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS REAL))  NULLS FIRST, ((((vt0.c0)-(vt0.c0))) IS FALSE), '?(瑄p6QRu' ASC);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS REAL))  NULLS FIRST, ((((vt0.c0)-(vt0.c0))) IS FALSE), '?(瑄p6QRu' ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS REAL))  NULLS FIRST, ((((vt0.c0)-(vt0.c0))) IS FALSE), '?(瑄p6QRu' ASC);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY TRIM(DISTINCT CAST(vt0.c0 AS REAL))  NULLS FIRST, ((((vt0.c0)-(vt0.c0))) IS FALSE), '?(瑄p6QRu' ASC;
SELECT ALL * FROM rt1, vt0 WHERE ((+ (((rt1.c0)<(vt0.c0))))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0)<(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((+ (((rt1.c0)<(vt0.c0))))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c0)<(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c2  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((+ (((rt1.c0)<(vt0.c0))))) ORDER BY rt1.c2  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0, vt0.c0 COLLATE BINARY, (NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0, vt0.c0 COLLATE BINARY, (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0, vt0.c0 COLLATE BINARY, (NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0, vt0.c0 COLLATE BINARY, (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0, vt0.c0 COLLATE BINARY, (NOT (vt0.c0))))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE '0.09527314513062068' END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE '0.09527314513062068' END IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE '0.09527314513062068' END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE '0.09527314513062068' END IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE '0.09527314513062068' END IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON json_array_length(((((vt0.c0)OR(rt1.c0)))AND(rt1.c2)), (vt0.c0 IN (vt0.c0))) WHERE (((((vt0.c0)IS(rt1.c1))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(rt1.c1))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON json_array_length(((((vt0.c0)OR(rt1.c0)))AND(rt1.c2)), (vt0.c0 IN (vt0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON json_array_length(((((vt0.c0)OR(rt1.c0)))AND(rt1.c2)), (vt0.c0 IN (vt0.c0))) WHERE (((((vt0.c0)IS(rt1.c1))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(rt1.c1))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON json_array_length(((((vt0.c0)OR(rt1.c0)))AND(rt1.c2)), (vt0.c0 IN (vt0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON json_array_length(((((vt0.c0)OR(rt1.c0)))AND(rt1.c2)), (vt0.c0 IN (vt0.c0))) WHERE (((((vt0.c0)IS(rt1.c1))) NOT BETWEEN ((~ (rt1.c1))) AND (((rt1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)GLOB('0.09527314513062068')))-(rtreenode(rt1.c0, rt1.c2))) WHERE (vt0.c0) ORDER BY (GLOB(rt1.c2, vt0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)GLOB('0.09527314513062068')))-(rtreenode(rt1.c0, rt1.c2))) ORDER BY (GLOB(rt1.c2, vt0.c0) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)GLOB('0.09527314513062068')))-(rtreenode(rt1.c0, rt1.c2))) WHERE (vt0.c0) ORDER BY (GLOB(rt1.c2, vt0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)GLOB('0.09527314513062068')))-(rtreenode(rt1.c0, rt1.c2))) ORDER BY (GLOB(rt1.c2, vt0.c0) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)GLOB('0.09527314513062068')))-(rtreenode(rt1.c0, rt1.c2))) WHERE (vt0.c0) ORDER BY (GLOB(rt1.c2, vt0.c0) IN ()) ASC;
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)<(rt1.c1)))IS(TRIM(rt1.c0)))) ORDER BY ((1256090022 COLLATE BINARY)<=(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<(rt1.c1)))IS(TRIM(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((1256090022 COLLATE BINARY)<=(rt1.c2)));
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)<(rt1.c1)))IS(TRIM(rt1.c0)))) ORDER BY ((1256090022 COLLATE BINARY)<=(rt1.c2));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<(rt1.c1)))IS(TRIM(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((1256090022 COLLATE BINARY)<=(rt1.c2)));
SELECT ALL * FROM rt1 WHERE (((((rt1.c1)<(rt1.c1)))IS(TRIM(rt1.c0)))) ORDER BY ((1256090022 COLLATE BINARY)<=(rt1.c2));
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS INTEGER))IS(CAST(rt1.c2 AS NUMERIC)))) ORDER BY json_insert(x'', rt1.c0, rt1.c1) DESC, highlight(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(x'')), CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END, rt1.c0, rt1.c2 COLLATE RTRIM) ASC, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER))IS(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY json_insert(x'', rt1.c0, rt1.c1) DESC, highlight(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(x'')), CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END, rt1.c0, rt1.c2 COLLATE RTRIM) ASC, rt1.c1 DESC);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS INTEGER))IS(CAST(rt1.c2 AS NUMERIC)))) ORDER BY json_insert(x'', rt1.c0, rt1.c1) DESC, highlight(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(x'')), CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END, rt1.c0, rt1.c2 COLLATE RTRIM) ASC, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER))IS(CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY json_insert(x'', rt1.c0, rt1.c1) DESC, highlight(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(x'')), CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END, rt1.c0, rt1.c2 COLLATE RTRIM) ASC, rt1.c1 DESC);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS INTEGER))IS(CAST(rt1.c2 AS NUMERIC)))) ORDER BY json_insert(x'', rt1.c0, rt1.c1) DESC, highlight(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)))OR(x'')), CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt0.c0 END, rt1.c0, rt1.c2 COLLATE RTRIM) ASC, rt1.c1 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)AND(']f')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((vt0.c0)||(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND(']f')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((vt0.c0)||(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)AND(']f')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((vt0.c0)||(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND(']f')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((vt0.c0)||(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0)AND(']f')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((vt0.c0)||(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((((vt0.c0)OR(x'')))AND(vt0.c0)))) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)AND(rt1.c1)))AND(rt1.c0))  WHEN (rt1.c1 IN ()) THEN rt1.c0 COLLATE BINARY WHEN CAST(rt1.c0 AS REAL) THEN '3&勅^.鐔' WHEN rt1.c1 COLLATE BINARY THEN (+ (vt0.c0)) END WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)AND(rt1.c1)))AND(rt1.c0))  WHEN (rt1.c1 IN ()) THEN rt1.c0 COLLATE BINARY WHEN CAST(rt1.c0 AS REAL) THEN '3&勅^.鐔' WHEN rt1.c1 COLLATE BINARY THEN (+ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)AND(rt1.c1)))AND(rt1.c0))  WHEN (rt1.c1 IN ()) THEN rt1.c0 COLLATE BINARY WHEN CAST(rt1.c0 AS REAL) THEN '3&勅^.鐔' WHEN rt1.c1 COLLATE BINARY THEN (+ (vt0.c0)) END WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)AND(rt1.c1)))AND(rt1.c0))  WHEN (rt1.c1 IN ()) THEN rt1.c0 COLLATE BINARY WHEN CAST(rt1.c0 AS REAL) THEN '3&勅^.鐔' WHEN rt1.c1 COLLATE BINARY THEN (+ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE ((((vt0.c0)AND(rt1.c1)))AND(rt1.c0))  WHEN (rt1.c1 IN ()) THEN rt1.c0 COLLATE BINARY WHEN CAST(rt1.c0 AS REAL) THEN '3&勅^.鐔' WHEN rt1.c1 COLLATE BINARY THEN (+ (vt0.c0)) END WHERE (((NOT (vt0.c0)) IN ()));
SELECT * FROM vt0, rt1 WHERE (((('', rt1.c1, (((rt1.c1, rt1.c1, rt1.c1))!=((rt1.c1, rt1.c2, rt1.c2)))))>(((rt1.c1 IN ()), ((vt0.c0)=(vt0.c0)), ((rt1.c0)IS NOT(vt0.c0)))))) ORDER BY LIKELY(((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((('', rt1.c1, (((rt1.c1, rt1.c1, rt1.c1))<>((rt1.c1, rt1.c2, rt1.c2)))))>(((rt1.c1 IN ()), ((vt0.c0)==(vt0.c0)), ((rt1.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY LIKELY(((vt0.c0) IS TRUE)));
SELECT * FROM vt0, rt1 WHERE (((('', rt1.c1, (((rt1.c1, rt1.c1, rt1.c1))!=((rt1.c1, rt1.c2, rt1.c2)))))>(((rt1.c1 IN ()), ((vt0.c0)=(vt0.c0)), ((rt1.c0)IS NOT(vt0.c0)))))) ORDER BY LIKELY(((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((('', rt1.c1, (((rt1.c1, rt1.c1, rt1.c1))<>((rt1.c1, rt1.c2, rt1.c2)))))>(((rt1.c1 IN ()), ((vt0.c0)==(vt0.c0)), ((rt1.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY LIKELY(((vt0.c0) IS TRUE)));
SELECT * FROM vt0, rt1 WHERE (((('', rt1.c1, (((rt1.c1, rt1.c1, rt1.c1))!=((rt1.c1, rt1.c2, rt1.c2)))))>(((rt1.c1 IN ()), ((vt0.c0)=(vt0.c0)), ((rt1.c0)IS NOT(vt0.c0)))))) ORDER BY LIKELY(((vt0.c0) IS TRUE));
SELECT ALL * FROM vt0 WHERE (CAST(QUOTE(vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(QUOTE(vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(QUOTE(vt0.c0) AS TEXT));
SELECT ALL * FROM rt1 WHERE (((HEX('\r/⊌5C,S12'))+(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((HEX('\r/⊌5C,S12'))+(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((HEX('\r/⊌5C,S12'))+(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((HEX('\r/⊌5C,S12'))+(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((HEX('\r/⊌5C,S12'))+(CAST(rt1.c2 AS BLOB))));
SELECT ALL * FROM vt0, rt1 WHERE (CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN ((rt1.c1)IS(vt0.c0)) THEN rt1.c2 WHEN (NOT (rt1.c0)) THEN x'' COLLATE BINARY WHEN CAST(rt1.c1 AS INTEGER) THEN rt1.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN ((rt1.c1)IS(vt0.c0)) THEN rt1.c2 WHEN (NOT (rt1.c0)) THEN x'' COLLATE BINARY WHEN CAST(rt1.c1 AS INTEGER) THEN rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN ((rt1.c1)IS(vt0.c0)) THEN rt1.c2 WHEN (NOT (rt1.c0)) THEN x'' COLLATE BINARY WHEN CAST(rt1.c1 AS INTEGER) THEN rt1.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN ((rt1.c1)IS(vt0.c0)) THEN rt1.c2 WHEN (NOT (rt1.c0)) THEN x'' COLLATE BINARY WHEN CAST(rt1.c1 AS INTEGER) THEN rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE (((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN ((rt1.c1)IS(vt0.c0)) THEN rt1.c2 WHEN (NOT (rt1.c0)) THEN x'' COLLATE BINARY WHEN CAST(rt1.c1 AS INTEGER) THEN rt1.c1 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('1581445512') AND (-1.12786957E8))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN ('1581445512') AND (-1.12786957E8))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('1581445512') AND (-1.12786957E8))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN ('1581445512') AND (-1.12786957E8))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('1581445512') AND (-1.12786957E8))) IS FALSE));
SELECT ALL * FROM rt1 WHERE (CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((('540998868', rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, NULL, rt1.c1))) ELSE NULL END) ORDER BY ((rt1.c1 COLLATE RTRIM)<<(HEX(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((('540998868', rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, NULL, rt1.c1))) ELSE NULL END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE RTRIM)<<(HEX(rt1.c0))));
SELECT ALL * FROM rt1 WHERE (CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((('540998868', rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, NULL, rt1.c1))) ELSE NULL END) ORDER BY ((rt1.c1 COLLATE RTRIM)<<(HEX(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((('540998868', rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, NULL, rt1.c1))) ELSE NULL END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE RTRIM)<<(HEX(rt1.c0))));
SELECT ALL * FROM rt1 WHERE (CASE WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((('540998868', rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c0, NULL, rt1.c1))) ELSE NULL END) ORDER BY ((rt1.c1 COLLATE RTRIM)<<(HEX(rt1.c0)));
SELECT * FROM rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN x'd7a9' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)AND(rt1.c1)))OR(rt1.c2))) ORDER BY (- ('0{X')), CASE WHEN rt1.c1 THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) ELSE NULL END;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN x'd7a9' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)AND(rt1.c1)))OR(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY (- ('0{X')), CASE WHEN rt1.c1 THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) ELSE NULL END);
SELECT * FROM rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN x'd7a9' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)AND(rt1.c1)))OR(rt1.c2))) ORDER BY (- ('0{X')), CASE WHEN rt1.c1 THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) ELSE NULL END;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN x'd7a9' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)AND(rt1.c1)))OR(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY (- ('0{X')), CASE WHEN rt1.c1 THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) ELSE NULL END);
SELECT * FROM rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN x'd7a9' WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)AND(rt1.c1)))OR(rt1.c2))) ORDER BY (- ('0{X')), CASE WHEN rt1.c1 THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) ELSE NULL END;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)AND(vt0.c0)))AND(((((x'7b23')AND(rt1.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)AND(vt0.c0)))AND(((((x'7b23')AND(rt1.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)AND(vt0.c0)))AND(((((x'7b23')AND(rt1.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)AND(vt0.c0)))AND(((((x'7b23')AND(rt1.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END)AND(vt0.c0)))AND(((((x'7b23')AND(rt1.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (RTRIM('')) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM('')) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (RTRIM('')) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM('')) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (RTRIM('')) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN (x''))) ORDER BY (- (((rt1.c0)-(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN (x''))) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c0)-(NULL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN (x''))) ORDER BY (- (((rt1.c0)-(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN (x''))) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c0)-(NULL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END IN (x''))) ORDER BY (- (((rt1.c0)-(NULL)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((NOT ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((~ (vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON json_patch(rt1.c2, TYPEOF(vt0.c0)) WHERE (vt0.c0) ORDER BY ((((rt1.c0) NOTNULL))>(((vt0.c0)&(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON json_patch(rt1.c2, TYPEOF(vt0.c0)) ORDER BY ((((rt1.c0) NOTNULL))>(((vt0.c0)&(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON json_patch(rt1.c2, TYPEOF(vt0.c0)) WHERE (vt0.c0) ORDER BY ((((rt1.c0) NOTNULL))>(((vt0.c0)&(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON json_patch(rt1.c2, TYPEOF(vt0.c0)) ORDER BY ((((rt1.c0) NOTNULL))>(((vt0.c0)&(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON json_patch(rt1.c2, TYPEOF(vt0.c0)) WHERE (vt0.c0) ORDER BY ((((rt1.c0) NOTNULL))>(((vt0.c0)&(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c2 END)OR((- (rt1.c0)))))OR(((rt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c0 THEN rt1.c2 END)OR((- (rt1.c0)))))OR(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c2 END)OR((- (rt1.c0)))))OR(((rt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c0 THEN rt1.c2 END)OR((- (rt1.c0)))))OR(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c2 END)OR((- (rt1.c0)))))OR(((rt1.c2) NOT NULL))));
SELECT COUNT(*) FROM rt1 WHERE ((+ (('snRh	e' IN ())))) ORDER BY CASE UPPER(DISTINCT rt1.c2)  WHEN CAST(rt1.c1 AS NUMERIC) THEN CAST(rt1.c2 AS BLOB) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (((rt1.c1))<=((rt1.c2))) THEN (NOT (rt1.c1)) ELSE rt1.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((+ (('snRh	e' IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CASE UPPER(DISTINCT rt1.c2)  WHEN CAST(rt1.c1 AS NUMERIC) THEN CAST(rt1.c2 AS BLOB) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (((rt1.c1))<=((rt1.c2))) THEN (NOT (rt1.c1)) ELSE rt1.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM rt1 WHERE ((+ (('snRh	e' IN ())))) ORDER BY CASE UPPER(DISTINCT rt1.c2)  WHEN CAST(rt1.c1 AS NUMERIC) THEN CAST(rt1.c2 AS BLOB) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (((rt1.c1))<=((rt1.c2))) THEN (NOT (rt1.c1)) ELSE rt1.c0 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT (((+ (('snRh	e' IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CASE UPPER(DISTINCT rt1.c2)  WHEN CAST(rt1.c1 AS NUMERIC) THEN CAST(rt1.c2 AS BLOB) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (((rt1.c1))<=((rt1.c2))) THEN (NOT (rt1.c1)) ELSE rt1.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM rt1 WHERE ((+ (('snRh	e' IN ())))) ORDER BY CASE UPPER(DISTINCT rt1.c2)  WHEN CAST(rt1.c1 AS NUMERIC) THEN CAST(rt1.c2 AS BLOB) WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN (rt1.c0 IN ()) WHEN (((rt1.c1))<=((rt1.c2))) THEN (NOT (rt1.c1)) ELSE rt1.c0 COLLATE BINARY END;
SELECT ALL * FROM vt0 WHERE (((((0.40820463566913257)<=(vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)|(vt0.c0)))<('-608647336'));
SELECT SUM(count) FROM (SELECT ALL ((((((0.40820463566913257)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)|(vt0.c0)))<('-608647336')));
SELECT ALL * FROM vt0 WHERE (((((0.40820463566913257)<=(vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)|(vt0.c0)))<('-608647336'));
SELECT SUM(count) FROM (SELECT ALL ((((((0.40820463566913257)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)|(vt0.c0)))<('-608647336')));
SELECT ALL * FROM vt0 WHERE (((((0.40820463566913257)<=(vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)|(vt0.c0)))<('-608647336'));
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (NULLIF((((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((NULL, rt1.c1, vt0.c0))), rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((NULL, rt1.c1, vt0.c0))), rt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (NULLIF((((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((NULL, rt1.c1, vt0.c0))), rt1.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((NULL, rt1.c1, vt0.c0))), rt1.c1 COLLATE NOCASE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (NULLIF((((rt1.c2, vt0.c0, rt1.c0)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((NULL, rt1.c1, vt0.c0))), rt1.c1 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))=((x'b29a')))))) ORDER BY (((vt0.c0 IN ()))<(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))AND(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))=((x'b29a')))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))<(vt0.c0)));
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))=((x'b29a')))))) ORDER BY (((vt0.c0 IN ()))<(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))AND(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))=((x'b29a')))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))<(vt0.c0)));
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOTNULL))AND(CAST(vt0.c0 AS INTEGER))))OR((((vt0.c0))=((x'b29a')))))) ORDER BY (((vt0.c0 IN ()))<(vt0.c0));
SELECT * FROM vt0, rt1 WHERE ((((0x19635b63))>=((rt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((0x19635b63))>=((rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((0x19635b63))>=((rt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((0x19635b63))>=((rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((0x19635b63))>=((rt1.c0 COLLATE BINARY))));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))>>(((vt0.c0)&(vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))>>(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))>>(((vt0.c0)&(vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))>>(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))>>(((vt0.c0)&(vt0.c0))))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY ((UPPER(DISTINCT rt1.c0))LIKE(rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((UPPER(DISTINCT rt1.c0))LIKE(rt1.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY ((UPPER(DISTINCT rt1.c0))LIKE(rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((UPPER(DISTINCT rt1.c0))LIKE(rt1.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY ((UPPER(DISTINCT rt1.c0))LIKE(rt1.c1))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((0.10816250089005419)GLOB(vt0.c0)))|((('ND')GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.10816250089005419)GLOB(vt0.c0)))|((('ND')GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((0.10816250089005419)GLOB(vt0.c0)))|((('ND')GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.10816250089005419)GLOB(vt0.c0)))|((('ND')GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((0.10816250089005419)GLOB(vt0.c0)))|((('ND')GLOB(vt0.c0)))));
SELECT * FROM vt0 WHERE (UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ORDER BY -1228622913 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY -1228622913 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ORDER BY -1228622913 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY -1228622913 DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED);
SELECT * FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED);
SELECT * FROM rt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) IN ()) WHERE (CASE WHEN rt1.c2 THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) IN ()) WHERE (CASE WHEN rt1.c2 THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) IN ()) WHERE (CASE WHEN rt1.c2 THEN vt0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM rt1 WHERE ((~ (UPPER(0.2141035434941576))));
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(0.2141035434941576)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ (UPPER(0.2141035434941576))));
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(0.2141035434941576)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ (UPPER(0.2141035434941576))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) THEN (((rt1.c0))>((rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) THEN (((rt1.c0))>((rt1.c2))) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) THEN (((rt1.c0))>((rt1.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) THEN (((rt1.c0))>((rt1.c2))) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) THEN (((rt1.c0))>((rt1.c2))) END);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE vt0.c0  WHEN rt1.c1 THEN 0x377d5a87 ELSE rt1.c0 END)/(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY CAST(rt1.c1 AS REAL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt1.c1 THEN 0X377d5a87 ELSE rt1.c0 END)/(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(rt1.c1 AS REAL) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE vt0.c0  WHEN rt1.c1 THEN 0x377d5a87 ELSE rt1.c0 END)/(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY CAST(rt1.c1 AS REAL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt1.c1 THEN 0X377d5a87 ELSE rt1.c0 END)/(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(rt1.c1 AS REAL) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE vt0.c0  WHEN rt1.c1 THEN 0x377d5a87 ELSE rt1.c0 END)/(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY CAST(rt1.c1 AS REAL) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((vt0.c0))!=((rt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))!=((rt1.c0))) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((vt0.c0))!=((rt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))!=((rt1.c0))) IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((vt0.c0))!=((rt1.c0))) IN ()));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (0xffffffffa4fde0ff);
SELECT SUM(count) FROM (SELECT ((0Xffffffffa4fde0ff) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (0xffffffffa4fde0ff);
SELECT SUM(count) FROM (SELECT ((0Xffffffffa4fde0ff) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (0xffffffffa4fde0ff);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>=(((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c0, -1e500, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c0, NULL)))) NOT BETWEEN (((vt0.c0)=(rt1.c2))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0, -1e500, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c0, NULL)))) NOT BETWEEN (((vt0.c0)==(rt1.c2))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c0, -1e500, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c0, NULL)))) NOT BETWEEN (((vt0.c0)=(rt1.c2))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0, -1e500, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c0, NULL)))) NOT BETWEEN (((vt0.c0)==(rt1.c2))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c0, -1e500, vt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c0, NULL)))) NOT BETWEEN (((vt0.c0)=(rt1.c2))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)));
SELECT * FROM vt0, rt1 WHERE (LIKELY(DISTINCT load_extension(rt1.c2))) ORDER BY (((0.007892834636992418)IS NOT(rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT load_extension(rt1.c2))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((0.007892834636992418)IS NOT(rt1.c1)) IN ())  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (LIKELY(DISTINCT load_extension(rt1.c2))) ORDER BY (((0.007892834636992418)IS NOT(rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT load_extension(rt1.c2))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((0.007892834636992418)IS NOT(rt1.c1)) IN ())  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (LIKELY(DISTINCT load_extension(rt1.c2))) ORDER BY (((0.007892834636992418)IS NOT(rt1.c1)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c2) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (- (rt1.c2))  WHEN ((rt1.c1) NOTNULL) THEN ((rt1.c2)<<(rt1.c2)) ELSE '-1273151547' END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c2))  WHEN ((rt1.c1) NOTNULL) THEN ((rt1.c2)<<(rt1.c2)) ELSE '-1273151547' END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (- (rt1.c2))  WHEN ((rt1.c1) NOTNULL) THEN ((rt1.c2)<<(rt1.c2)) ELSE '-1273151547' END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c2))  WHEN ((rt1.c1) NOTNULL) THEN ((rt1.c2)<<(rt1.c2)) ELSE '-1273151547' END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (- (rt1.c2))  WHEN ((rt1.c1) NOTNULL) THEN ((rt1.c2)<<(rt1.c2)) ELSE '-1273151547' END);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((0.9818530670580026)IS NOT(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9818530670580026)IS NOT(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((0.9818530670580026)IS NOT(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9818530670580026)IS NOT(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((0.9818530670580026)IS NOT(rt1.c1))) BETWEEN ((~ (rt1.c2))) AND (vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0) ISNULL))|(0.013748489527451557)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))|(0.013748489527451557))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0) ISNULL))|(0.013748489527451557)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))|(0.013748489527451557))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0) ISNULL))|(0.013748489527451557)));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'z^' END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'z^' END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'z^' END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'z^' END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'z^' END));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((CASE WHEN 0.5307380573287729 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END IN ())) ORDER BY ((rt1.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((CASE WHEN 0.5307380573287729 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0 IN ()) IN ()));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((CASE WHEN 0.5307380573287729 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END IN ())) ORDER BY ((rt1.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((CASE WHEN 0.5307380573287729 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0 IN ()) IN ()));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((CASE WHEN 0.5307380573287729 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END IN ())) ORDER BY ((rt1.c0 IN ()) IN ());
SELECT ALL * FROM vt0, rt1 WHERE ((MIN(rt1.c1, rt1.c0, rt1.c1, rt1.c2) IN (CAST(rt1.c0 AS NUMERIC)))) ORDER BY CASE WHEN ((rt1.c0)OR(rt1.c2)) THEN LIKELIHOOD(rt1.c0, 0.3256017252318738) ELSE ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((MIN(rt1.c1, rt1.c0, rt1.c1, rt1.c2) IN (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c0)OR(rt1.c2)) THEN LIKELIHOOD(rt1.c0, 0.3256017252318738) ELSE ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)) END ASC);
SELECT ALL * FROM vt0, rt1 WHERE ((MIN(rt1.c1, rt1.c0, rt1.c1, rt1.c2) IN (CAST(rt1.c0 AS NUMERIC)))) ORDER BY CASE WHEN ((rt1.c0)OR(rt1.c2)) THEN LIKELIHOOD(rt1.c0, 0.3256017252318738) ELSE ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((MIN(rt1.c1, rt1.c0, rt1.c1, rt1.c2) IN (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((rt1.c0)OR(rt1.c2)) THEN LIKELIHOOD(rt1.c0, 0.3256017252318738) ELSE ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)) END ASC);
SELECT ALL * FROM vt0, rt1 WHERE ((MIN(rt1.c1, rt1.c0, rt1.c1, rt1.c2) IN (CAST(rt1.c0 AS NUMERIC)))) ORDER BY CASE WHEN ((rt1.c0)OR(rt1.c2)) THEN LIKELIHOOD(rt1.c0, 0.3256017252318738) ELSE ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)) END ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((x''))!=((rt1.c0 COLLATE BINARY))) WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((x''))<>((rt1.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((x''))!=((rt1.c0 COLLATE BINARY))) WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((x''))<>((rt1.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((x''))!=((rt1.c0 COLLATE BINARY))) WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))==(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))==(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))==(((vt0.c0) IS TRUE))));
SELECT * FROM vt0, rt1 WHERE (0.5700734562794789);
SELECT SUM(count) FROM (SELECT ALL ((0.5700734562794789) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (0.5700734562794789);
SELECT SUM(count) FROM (SELECT ALL ((0.5700734562794789) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (0.5700734562794789);
SELECT * FROM rt1, vt0 WHERE (CAST(((((rt1.c1)OR(x'')))OR(rt1.c1)) AS TEXT)) ORDER BY CASE WHEN (rt1.c2 IN ()) THEN (x'' IN ()) WHEN rt1.c2 THEN rt1.c1 WHEN CAST(vt0.c0 AS INTEGER) THEN rt1.c0 ELSE (((rt1.c1))<((rt1.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c1)OR(x'')))OR(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN (rt1.c2 IN ()) THEN (x'' IN ()) WHEN rt1.c2 THEN rt1.c1 WHEN CAST(vt0.c0 AS INTEGER) THEN rt1.c0 ELSE (((rt1.c1))<((rt1.c1))) END ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (CAST(((((rt1.c1)OR(x'')))OR(rt1.c1)) AS TEXT)) ORDER BY CASE WHEN (rt1.c2 IN ()) THEN (x'' IN ()) WHEN rt1.c2 THEN rt1.c1 WHEN CAST(vt0.c0 AS INTEGER) THEN rt1.c0 ELSE (((rt1.c1))<((rt1.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c1)OR(x'')))OR(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN (rt1.c2 IN ()) THEN (x'' IN ()) WHEN rt1.c2 THEN rt1.c1 WHEN CAST(vt0.c0 AS INTEGER) THEN rt1.c0 ELSE (((rt1.c1))<((rt1.c1))) END ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (CAST(((((rt1.c1)OR(x'')))OR(rt1.c1)) AS TEXT)) ORDER BY CASE WHEN (rt1.c2 IN ()) THEN (x'' IN ()) WHEN rt1.c2 THEN rt1.c1 WHEN CAST(vt0.c0 AS INTEGER) THEN rt1.c0 ELSE (((rt1.c1))<((rt1.c1))) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c1 AS INTEGER))OR(CAST(rt1.c2 AS INTEGER))))OR(x'')) WHERE (vt0.c0) ORDER BY ((((rt1.c1)*(rt1.c1)))LIKE(x'bd15'));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c1 AS INTEGER))OR(CAST(rt1.c2 AS INTEGER))))OR(x'')) ORDER BY ((((rt1.c1)*(rt1.c1)))LIKE(x'bd15')));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c1 AS INTEGER))OR(CAST(rt1.c2 AS INTEGER))))OR(x'')) WHERE (vt0.c0) ORDER BY ((((rt1.c1)*(rt1.c1)))LIKE(x'bd15'));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c1 AS INTEGER))OR(CAST(rt1.c2 AS INTEGER))))OR(x'')) ORDER BY ((((rt1.c1)*(rt1.c1)))LIKE(x'bd15')));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c1 AS INTEGER))OR(CAST(rt1.c2 AS INTEGER))))OR(x'')) WHERE (vt0.c0) ORDER BY ((((rt1.c1)*(rt1.c1)))LIKE(x'bd15'));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))))AND(vt0.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))))AND(vt0.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))))AND(vt0.c0)));
SELECT * FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (LIKELIHOOD(rt1.c2, 0.33010584918215113)) AND (((0.09527314513062068)IS NOT(rt1.c0))))) ORDER BY (((('4[|')<<(rt1.c1))) NOT BETWEEN (((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (((rt1.c2)IS NOT(x'3057')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (LIKELIHOOD(rt1.c2, 0.33010584918215113)) AND (((0.09527314513062068)IS NOT(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((('4[|')<<(rt1.c1))) NOT BETWEEN (((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (((rt1.c2)IS NOT(x'3057')))) DESC);
SELECT * FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (LIKELIHOOD(rt1.c2, 0.33010584918215113)) AND (((0.09527314513062068)IS NOT(rt1.c0))))) ORDER BY (((('4[|')<<(rt1.c1))) NOT BETWEEN (((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (((rt1.c2)IS NOT(x'3057')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (LIKELIHOOD(rt1.c2, 0.33010584918215113)) AND (((0.09527314513062068)IS NOT(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((('4[|')<<(rt1.c1))) NOT BETWEEN (((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (((rt1.c2)IS NOT(x'3057')))) DESC);
SELECT * FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (LIKELIHOOD(rt1.c2, 0.33010584918215113)) AND (((0.09527314513062068)IS NOT(rt1.c0))))) ORDER BY (((('4[|')<<(rt1.c1))) NOT BETWEEN (((x'') NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (((rt1.c2)IS NOT(x'3057')))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'd4d596ee' AS BLOB))IS(vt0.c0))) ORDER BY load_extension(UPPER(0.31914093367960905))  NULLS LAST, (((vt0.c0 IN ()))<(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'd4d596ee' AS BLOB))IS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(UPPER(0.31914093367960905))  NULLS LAST, (((vt0.c0 IN ()))<(vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'd4d596ee' AS BLOB))IS(vt0.c0))) ORDER BY load_extension(UPPER(0.31914093367960905))  NULLS LAST, (((vt0.c0 IN ()))<(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'd4d596ee' AS BLOB))IS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(UPPER(0.31914093367960905))  NULLS LAST, (((vt0.c0 IN ()))<(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))OR(ABS(DISTINCT vt0.c0))) WHERE (((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))-(vt0.c0 COLLATE NOCASE))) ORDER BY (('-1267576071')>=('-1727623994'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))-(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))OR(ABS(DISTINCT vt0.c0))) ORDER BY (('-1267576071')>=('-1727623994'))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))OR(ABS(DISTINCT vt0.c0))) WHERE (((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))-(vt0.c0 COLLATE NOCASE))) ORDER BY (('-1267576071')>=('-1727623994'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))-(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))OR(ABS(DISTINCT vt0.c0))) ORDER BY (('-1267576071')>=('-1727623994'))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))OR(ABS(DISTINCT vt0.c0))) WHERE (((((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))-(vt0.c0 COLLATE NOCASE))) ORDER BY (('-1267576071')>=('-1727623994'))  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))<=(rt1.c1)) WHERE ((UNLIKELY(DISTINCT 0.317346683270162) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT 0.317346683270162) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))<=(rt1.c1)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))<=(rt1.c1)) WHERE ((UNLIKELY(DISTINCT 0.317346683270162) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT 0.317346683270162) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))<=(rt1.c1)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))<=(rt1.c1)) WHERE ((UNLIKELY(DISTINCT 0.317346683270162) IN ()));
SELECT * FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((+ (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)IS(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS(x'')) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((+ (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)IS(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS(x'')) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND((+ (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)IS(x'')) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(1.586690561E9 AS INTEGER)) ORDER BY (((- (vt0.c0)))>=(((vt0.c0)IS(vt0.c0)))) ASC, (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(1.586690561E9 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))>=(((vt0.c0)IS(vt0.c0)))) ASC, (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(1.586690561E9 AS INTEGER)) ORDER BY (((- (vt0.c0)))>=(((vt0.c0)IS(vt0.c0)))) ASC, (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(1.586690561E9 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))>=(((vt0.c0)IS(vt0.c0)))) ASC, (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(1.586690561E9 AS INTEGER)) ORDER BY (((- (vt0.c0)))>=(((vt0.c0)IS(vt0.c0)))) ASC, (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (NULL) ORDER BY ((rt1.c1)=(rt1.c2)) DESC, (((vt0.c0)) NOT BETWEEN ((((rt1.c1)!=(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((rt1.c1)=(rt1.c2)) DESC, (((vt0.c0)) NOT BETWEEN ((((rt1.c1)!=(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (NULL) ORDER BY ((rt1.c1)=(rt1.c2)) DESC, (((vt0.c0)) NOT BETWEEN ((((rt1.c1)!=(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((rt1.c1)=(rt1.c2)) DESC, (((vt0.c0)) NOT BETWEEN ((((rt1.c1)!=(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (NULL) ORDER BY ((rt1.c1)=(rt1.c2)) DESC, (((vt0.c0)) NOT BETWEEN ((((rt1.c1)!=(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)))AND((rt1.c2 IN ()))))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))OR(rt1.c0 COLLATE BINARY)) WHERE (((((vt0.c0 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'5d7d'))) ORDER BY (((- (rt1.c2)))|(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'5d7d'))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)))AND((rt1.c2 IN ()))))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))OR(rt1.c0 COLLATE BINARY)) ORDER BY (((- (rt1.c2)))|(NULL)) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)))AND((rt1.c2 IN ()))))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))OR(rt1.c0 COLLATE BINARY)) WHERE (((((vt0.c0 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'5d7d'))) ORDER BY (((- (rt1.c2)))|(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'5d7d'))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)))AND((rt1.c2 IN ()))))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))OR(rt1.c0 COLLATE BINARY)) ORDER BY (((- (rt1.c2)))|(NULL)) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((((((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)))AND((rt1.c2 IN ()))))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))OR(rt1.c0 COLLATE BINARY)) WHERE (((((vt0.c0 COLLATE RTRIM)AND(((rt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'5d7d'))) ORDER BY (((- (rt1.c2)))|(NULL)) ASC;
SELECT * FROM vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c2)<<(rt1.c0))  WHEN COALESCE(DISTINCT rt1.c1, '') THEN LIKELIHOOD(vt0.c0, 0.011036524710965168) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)<<(rt1.c0))  WHEN COALESCE(DISTINCT rt1.c1, '') THEN LIKELIHOOD(vt0.c0, 0.011036524710965168) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c2)<<(rt1.c0))  WHEN COALESCE(DISTINCT rt1.c1, '') THEN LIKELIHOOD(vt0.c0, 0.011036524710965168) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)<<(rt1.c0))  WHEN COALESCE(DISTINCT rt1.c1, '') THEN LIKELIHOOD(vt0.c0, 0.011036524710965168) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c2)<<(rt1.c0))  WHEN COALESCE(DISTINCT rt1.c1, '') THEN LIKELIHOOD(vt0.c0, 0.011036524710965168) END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c2)IS(rt1.c2)), ((vt0.c0)>(rt1.c0)), 0x5b74338b COLLATE NOCASE))<((CAST(rt1.c2 AS NUMERIC), UNICODE(rt1.c1), (((rt1.c2))==((rt1.c0))))))) ORDER BY UPPER(((rt1.c0) NOTNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)IS(rt1.c2)), ((vt0.c0)>(rt1.c0)), 0X5b74338b COLLATE NOCASE))<((CAST(rt1.c2 AS NUMERIC), UNICODE(rt1.c1), (((rt1.c2))==((rt1.c0))))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY UPPER(((rt1.c0) NOTNULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c2)IS(rt1.c2)), ((vt0.c0)>(rt1.c0)), 0x5b74338b COLLATE NOCASE))<((CAST(rt1.c2 AS NUMERIC), UNICODE(rt1.c1), (((rt1.c2))==((rt1.c0))))))) ORDER BY UPPER(((rt1.c0) NOTNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)IS(rt1.c2)), ((vt0.c0)>(rt1.c0)), 0X5b74338b COLLATE NOCASE))<((CAST(rt1.c2 AS NUMERIC), UNICODE(rt1.c1), (((rt1.c2))==((rt1.c0))))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY UPPER(((rt1.c0) NOTNULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c2)IS(rt1.c2)), ((vt0.c0)>(rt1.c0)), 0x5b74338b COLLATE NOCASE))<((CAST(rt1.c2 AS NUMERIC), UNICODE(rt1.c1), (((rt1.c2))==((rt1.c0))))))) ORDER BY UPPER(((rt1.c0) NOTNULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((- (rt1.c2))))) ORDER BY (+ ((rt1.c1 IN ()))), TRIM(TRIM(DISTINCT rt1.c0)) ASC  NULLS FIRST, (((NOT (rt1.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (+ ((rt1.c1 IN ()))), TRIM(TRIM(DISTINCT rt1.c0)) ASC  NULLS FIRST, (((NOT (rt1.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((- (rt1.c2))))) ORDER BY (+ ((rt1.c1 IN ()))), TRIM(TRIM(DISTINCT rt1.c0)) ASC  NULLS FIRST, (((NOT (rt1.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (+ ((rt1.c1 IN ()))), TRIM(TRIM(DISTINCT rt1.c0)) ASC  NULLS FIRST, (((NOT (rt1.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((- (rt1.c2))))) ORDER BY (+ ((rt1.c1 IN ()))), TRIM(TRIM(DISTINCT rt1.c0)) ASC  NULLS FIRST, (((NOT (rt1.c1))) IS TRUE);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1)AND((rt1.c0 IN ()))))OR((vt0.c0 IN ()))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1)AND((rt1.c0 IN ()))))OR((vt0.c0 IN ()))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1)AND((rt1.c0 IN ()))))OR((vt0.c0 IN ()))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1)AND((rt1.c0 IN ()))))OR((vt0.c0 IN ()))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c1)AND((rt1.c0 IN ()))))OR((vt0.c0 IN ()))) WHERE (NULL);
SELECT * FROM rt1, vt0 WHERE (UPPER(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))) ORDER BY ((((~ (0xffffffff9fe3b429))))=((((vt0.c0) NOT NULL)))), x'158a' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((~ (0xffffffff9fe3b429))))=((((vt0.c0) NOT NULL)))), x'158a' DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (UPPER(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))) ORDER BY ((((~ (0xffffffff9fe3b429))))=((((vt0.c0) NOT NULL)))), x'158a' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((~ (0xffffffff9fe3b429))))=((((vt0.c0) NOT NULL)))), x'158a' DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (UPPER(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))) ORDER BY ((((~ (0xffffffff9fe3b429))))=((((vt0.c0) NOT NULL)))), x'158a' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) ORDER BY TRIM('cZ') DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY TRIM('cZ') DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) ORDER BY TRIM('cZ') DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY TRIM('cZ') DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY) ORDER BY TRIM('cZ') DESC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c1 COLLATE RTRIM)OR((((rt1.c0, rt1.c2, rt1.c2))!=((rt1.c0, vt0.c0, rt1.c1))))))OR(CAST(rt1.c1 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)))OR(rt1.c0)) WHERE ((((vt0.c0 IN ()))%(vt0.c0 COLLATE NOCASE))) ORDER BY (((rt1.c1))<(('1440353856'))) COLLATE BINARY COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))%(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c1 COLLATE RTRIM)OR((((rt1.c0, rt1.c2, rt1.c2))<>((rt1.c0, vt0.c0, rt1.c1))))))OR(CAST(rt1.c1 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)))OR(rt1.c0)) ORDER BY (((rt1.c1))<(('1440353856'))) COLLATE BINARY COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c1 COLLATE RTRIM)OR((((rt1.c0, rt1.c2, rt1.c2))!=((rt1.c0, vt0.c0, rt1.c1))))))OR(CAST(rt1.c1 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)))OR(rt1.c0)) WHERE ((((vt0.c0 IN ()))%(vt0.c0 COLLATE NOCASE))) ORDER BY (((rt1.c1))<(('1440353856'))) COLLATE BINARY COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))%(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c1 COLLATE RTRIM)OR((((rt1.c0, rt1.c2, rt1.c2))<>((rt1.c0, vt0.c0, rt1.c1))))))OR(CAST(rt1.c1 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)))OR(rt1.c0)) ORDER BY (((rt1.c1))<(('1440353856'))) COLLATE BINARY COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((((((rt1.c1 COLLATE RTRIM)OR((((rt1.c0, rt1.c2, rt1.c2))!=((rt1.c0, vt0.c0, rt1.c1))))))OR(CAST(rt1.c1 AS TEXT))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)))OR(rt1.c0)) WHERE ((((vt0.c0 IN ()))%(vt0.c0 COLLATE NOCASE))) ORDER BY (((rt1.c1))<(('1440353856'))) COLLATE BINARY COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((('0.08663425635287725' COLLATE RTRIM)OR((((0x57ff3c63))>=((rt1.c2))))))OR(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((('0.08663425635287725' COLLATE RTRIM)OR((((0x57ff3c63))>=((rt1.c2))))))OR(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((('0.08663425635287725' COLLATE RTRIM)OR((((0x57ff3c63))>=((rt1.c2))))))OR(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((('0.08663425635287725' COLLATE RTRIM)OR((((0x57ff3c63))>=((rt1.c2))))))OR(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((('0.08663425635287725' COLLATE RTRIM)OR((((0x57ff3c63))>=((rt1.c2))))))OR(rt1.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt1 WHERE (0.7180568509550795) ORDER BY ((x'') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.7180568509550795) IS TRUE)  as count FROM rt1 ORDER BY ((x'') NOT NULL) DESC);
SELECT ALL * FROM rt1 WHERE (0.7180568509550795) ORDER BY ((x'') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.7180568509550795) IS TRUE)  as count FROM rt1 ORDER BY ((x'') NOT NULL) DESC);
SELECT ALL * FROM rt1 WHERE (0.7180568509550795) ORDER BY ((x'') NOT NULL) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST, ((x'')<((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST, ((x'')<((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST, ((x'')<((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST, ((x'')<((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST, ((x'')<((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(x'')) ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(x'')) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(x'')) ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(x'')) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(x'')) ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY (((rt1.c2 IN ()))-((+ (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2 IN ()))-((+ (rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY (((rt1.c2 IN ()))-((+ (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2 IN ()))-((+ (rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY (((rt1.c2 IN ()))-((+ (rt1.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0)>(NULL)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0)>(NULL)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0)>(NULL)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0)>(NULL)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0)>(NULL)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END;
SELECT ALL * FROM vt0, rt1 WHERE (((HEX(rt1.c0))GLOB(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c0))GLOB(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((HEX(rt1.c0))GLOB(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c0))GLOB(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((HEX(rt1.c0))GLOB(rt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt1 WHERE ((- ((((((((('')OR(rt1.c1)))OR('[}ICa탥Ipﳨ')))OR(rt1.c1)))OR(rt1.c1))))) ORDER BY 0.00619868272288171  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((((((('')OR(rt1.c1)))OR('[}ICa탥Ipﳨ')))OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY 0.00619868272288171  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((- ((((((((('')OR(rt1.c1)))OR('[}ICa탥Ipﳨ')))OR(rt1.c1)))OR(rt1.c1))))) ORDER BY 0.00619868272288171  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((((((('')OR(rt1.c1)))OR('[}ICa탥Ipﳨ')))OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY 0.00619868272288171  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((- ((((((((('')OR(rt1.c1)))OR('[}ICa탥Ipﳨ')))OR(rt1.c1)))OR(rt1.c1))))) ORDER BY 0.00619868272288171  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((0.013707313131495535)) AND ((LTRIM(rt1.c1, rt1.c2))))) ORDER BY ((rt1.c0) NOTNULL)  NULLS FIRST, (((((0.09344773489049052) NOT BETWEEN (rt1.c1) AND (rt1.c1))))>=((NULLIF(vt0.c0, rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((0.013707313131495535)) AND ((LTRIM(rt1.c1, rt1.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((rt1.c0) NOTNULL)  NULLS FIRST, (((((0.09344773489049052) NOT BETWEEN (rt1.c1) AND (rt1.c1))))>=((NULLIF(vt0.c0, rt1.c0)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((0.013707313131495535)) AND ((LTRIM(rt1.c1, rt1.c2))))) ORDER BY ((rt1.c0) NOTNULL)  NULLS FIRST, (((((0.09344773489049052) NOT BETWEEN (rt1.c1) AND (rt1.c1))))>=((NULLIF(vt0.c0, rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((0.013707313131495535)) AND ((LTRIM(rt1.c1, rt1.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY ((rt1.c0) NOTNULL)  NULLS FIRST, (((((0.09344773489049052) NOT BETWEEN (rt1.c1) AND (rt1.c1))))>=((NULLIF(vt0.c0, rt1.c0)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((0.013707313131495535)) AND ((LTRIM(rt1.c1, rt1.c2))))) ORDER BY ((rt1.c0) NOTNULL)  NULLS FIRST, (((((0.09344773489049052) NOT BETWEEN (rt1.c1) AND (rt1.c1))))>=((NULLIF(vt0.c0, rt1.c0))));
SELECT * FROM rt1, vt0 WHERE (((rt1.c1) NOTNULL)) ORDER BY ((((vt0.c0) IS TRUE))<=(((((((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(0.9608133724383681)))OR(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0) IS TRUE))<=(((((((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(0.9608133724383681)))OR(rt1.c0)))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((rt1.c1) NOTNULL)) ORDER BY ((((vt0.c0) IS TRUE))<=(((((((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(0.9608133724383681)))OR(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0) IS TRUE))<=(((((((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(0.9608133724383681)))OR(rt1.c0)))) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((rt1.c1) NOTNULL)) ORDER BY ((((vt0.c0) IS TRUE))<=(((((((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c2)))AND(0.9608133724383681)))OR(rt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)<<(x'4a00'))))<=(((vt0.c0 IN (vt0.c0)), 0.6559451897136307, ((('-111772106', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)<<(x'4a00'))))<=(((vt0.c0 IN (vt0.c0)), 0.6559451897136307, ((('-111772106', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)<<(x'4a00'))))<=(((vt0.c0 IN (vt0.c0)), 0.6559451897136307, ((('-111772106', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)<<(x'4a00'))))<=(((vt0.c0 IN (vt0.c0)), 0.6559451897136307, ((('-111772106', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, ((vt0.c0)<<(x'4a00'))))<=(((vt0.c0 IN (vt0.c0)), 0.6559451897136307, ((('-111772106', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM rt1, vt0 WHERE (UNICODE(NULL)) ORDER BY UPPER(rt1.c0) ASC;
SELECT SUM(count) FROM (SELECT ((UNICODE(NULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY UPPER(rt1.c0) ASC);
SELECT ALL * FROM rt1, vt0 WHERE (UNICODE(NULL)) ORDER BY UPPER(rt1.c0) ASC;
SELECT SUM(count) FROM (SELECT ((UNICODE(NULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY UPPER(rt1.c0) ASC);
SELECT ALL * FROM rt1, vt0 WHERE (UNICODE(NULL)) ORDER BY UPPER(rt1.c0) ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2 COLLATE RTRIM) BETWEEN (load_extension(vt0.c0)) AND (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) BETWEEN (load_extension(vt0.c0)) AND (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2 COLLATE RTRIM) BETWEEN (load_extension(vt0.c0)) AND (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) BETWEEN (load_extension(vt0.c0)) AND (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1 WHERE (CASE WHEN (((rt1.c0))>((1.330862927E9))) THEN CAST(rt1.c0 AS BLOB) ELSE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END END) ORDER BY -1332656052 COLLATE NOCASE DESC, ((((((rt1.c1)>(rt1.c1)))OR(((rt1.c1)LIKE(rt1.c0)))))AND((rt1.c2 IN ()))) ASC  NULLS LAST, (((CAST('-918746021' AS REAL)))=((MAX(x'', ''))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c0))>((1.330862927E9))) THEN CAST(rt1.c0 AS BLOB) ELSE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END END) IS TRUE)  as count FROM rt1 ORDER BY -1332656052 COLLATE NOCASE DESC, ((((((rt1.c1)>(rt1.c1)))OR(((rt1.c1)LIKE(rt1.c0)))))AND((rt1.c2 IN ()))) ASC  NULLS LAST, (((CAST('-918746021' AS REAL)))==((MAX(x'', '')))));
SELECT * FROM rt1 WHERE (CASE WHEN (((rt1.c0))>((1.330862927E9))) THEN CAST(rt1.c0 AS BLOB) ELSE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END END) ORDER BY -1332656052 COLLATE NOCASE DESC, ((((((rt1.c1)>(rt1.c1)))OR(((rt1.c1)LIKE(rt1.c0)))))AND((rt1.c2 IN ()))) ASC  NULLS LAST, (((CAST('-918746021' AS REAL)))=((MAX(x'', ''))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c0))>((1.330862927E9))) THEN CAST(rt1.c0 AS BLOB) ELSE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END END) IS TRUE)  as count FROM rt1 ORDER BY -1332656052 COLLATE NOCASE DESC, ((((((rt1.c1)>(rt1.c1)))OR(((rt1.c1)LIKE(rt1.c0)))))AND((rt1.c2 IN ()))) ASC  NULLS LAST, (((CAST('-918746021' AS REAL)))==((MAX(x'', '')))));
SELECT COUNT(*) FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c2)<(rt1.c0)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt1.c2)<(rt1.c0)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c2)<(rt1.c0)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt1.c2)<(rt1.c0)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (COALESCE(DISTINCT ((rt1.c2)<(rt1.c0)), ((((rt1.c2)AND(rt1.c1)))OR(rt1.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((('\iD') BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('\iD') BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((('\iD') BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('\iD') BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((('\iD') BETWEEN (rt1.c0) AND (rt1.c0))) IS TRUE));
SELECT COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 END)AND('1494520852')))OR((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c1 THEN rt1.c1 END)AND('1494520852')))OR((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 END)AND('1494520852')))OR((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt1.c1 THEN rt1.c1 END)AND('1494520852')))OR((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 END)AND('1494520852')))OR((rt1.c1 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))%(((rt1.c0)!=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))%(((rt1.c0)<>(NULL))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))%(((rt1.c0)!=(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))%(((rt1.c0)<>(NULL))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))%(((rt1.c0)!=(NULL)))));
SELECT * FROM rt1, vt0 WHERE (CAST(0Xffffffff9a89c799 AS NUMERIC) COLLATE NOCASE) ORDER BY ((((0.5833550777928154)GLOB(rt1.c1))) NOT NULL) DESC  NULLS FIRST, rt1.c0 DESC, (('Qk')AND((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0xffffffff9a89c799 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((0.5833550777928154)GLOB(rt1.c1))) NOT NULL) DESC  NULLS FIRST, rt1.c0 DESC, (('Qk')AND((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (CAST(0Xffffffff9a89c799 AS NUMERIC) COLLATE NOCASE) ORDER BY ((((0.5833550777928154)GLOB(rt1.c1))) NOT NULL) DESC  NULLS FIRST, rt1.c0 DESC, (('Qk')AND((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0xffffffff9a89c799 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((0.5833550777928154)GLOB(rt1.c1))) NOT NULL) DESC  NULLS FIRST, rt1.c0 DESC, (('Qk')AND((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (CAST(0Xffffffff9a89c799 AS NUMERIC) COLLATE NOCASE) ORDER BY ((((0.5833550777928154)GLOB(rt1.c1))) NOT NULL) DESC  NULLS FIRST, rt1.c0 DESC, (('Qk')AND((rt1.c1 IN (rt1.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS REAL)) ORDER BY ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((x'') ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS REAL)) ORDER BY ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((x'') ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS REAL)) ORDER BY ((x'') ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((TOTAL_CHANGES() IN (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((TOTAL_CHANGES() IN (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((TOTAL_CHANGES() IN (rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((TOTAL_CHANGES() IN (rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((TOTAL_CHANGES() IN (rt1.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(vt0.c0)))>=(((rt1.c2)IS(0.3895709475556405))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(vt0.c0)))>=(((rt1.c2)IS(0.3895709475556405))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(vt0.c0)))>=(((rt1.c2)IS(0.3895709475556405))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(vt0.c0)))>=(((rt1.c2)IS(0.3895709475556405))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(vt0.c0)))>=(((rt1.c2)IS(0.3895709475556405))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))>(CASE WHEN 0.6376193935434192 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))>(CASE WHEN 0.6376193935434192 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))>(CASE WHEN 0.6376193935434192 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2)))>(CASE WHEN 0.6376193935434192 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c2)))>(CASE WHEN 0.6376193935434192 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2)IS(rt1.c2)))GLOB(((rt1.c1) IS FALSE))) WHERE ((((rt1.c0 IN (rt1.c1, x'473f'))) ISNULL)) ORDER BY ((((rt1.c2)>(rt1.c1)))AND(((rt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt1.c1, x'473f'))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2)IS(rt1.c2)))GLOB(((rt1.c1) IS FALSE))) ORDER BY ((((rt1.c2)>(rt1.c1)))AND(((rt1.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2)IS(rt1.c2)))GLOB(((rt1.c1) IS FALSE))) WHERE ((((rt1.c0 IN (rt1.c1, x'473f'))) ISNULL)) ORDER BY ((((rt1.c2)>(rt1.c1)))AND(((rt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt1.c1, x'473f'))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2)IS(rt1.c2)))GLOB(((rt1.c1) IS FALSE))) ORDER BY ((((rt1.c2)>(rt1.c1)))AND(((rt1.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((rt1.c2)IS(rt1.c2)))GLOB(((rt1.c1) IS FALSE))) WHERE ((((rt1.c0 IN (rt1.c1, x'473f'))) ISNULL)) ORDER BY ((((rt1.c2)>(rt1.c1)))AND(((rt1.c0) IS TRUE))) ASC;
SELECT ALL * FROM vt0 WHERE ('-442444502') ORDER BY 0.7770741100107769  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-442444502') IS TRUE)  as count FROM vt0 ORDER BY 0.7770741100107769  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('-442444502') ORDER BY 0.7770741100107769  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-442444502') IS TRUE)  as count FROM vt0 ORDER BY 0.7770741100107769  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('-442444502') ORDER BY 0.7770741100107769  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<=(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<=(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<=(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((UPPER(rt1.c1))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0Xffffffff9fe3b429 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((UPPER(rt1.c1))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0Xffffffff9fe3b429 END)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((UPPER(rt1.c1))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0Xffffffff9fe3b429 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((UPPER(rt1.c1))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0Xffffffff9fe3b429 END)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((UPPER(rt1.c1))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0Xffffffff9fe3b429 END))));
SELECT ALL * FROM rt1, vt0 WHERE ((((NULL, (rt1.c0 IN ()), '' COLLATE NOCASE))<((((rt1.c0) IS FALSE), (NOT (0.9507135019845812)), ((rt1.c1)IS NOT(rt1.c0)))))) ORDER BY (((NULLIF(rt1.c0, rt1.c2), (rt1.c0 IN ()), ((rt1.c0)LIKE(rt1.c0))))>((CAST(vt0.c0 AS BLOB), (((0xffffffff8dea1b51))<((rt1.c0))), CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, (rt1.c0 IN ()), '' COLLATE NOCASE))<((((rt1.c0) IS FALSE), (NOT (0.9507135019845812)), ((rt1.c1)IS NOT(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((NULLIF(rt1.c0, rt1.c2), (rt1.c0 IN ()), ((rt1.c0)LIKE(rt1.c0))))>((CAST(vt0.c0 AS BLOB), (((0xffffffff8dea1b51))<((rt1.c0))), CAST(rt1.c1 AS NUMERIC)))));
SELECT ALL * FROM rt1, vt0 WHERE ((((NULL, (rt1.c0 IN ()), '' COLLATE NOCASE))<((((rt1.c0) IS FALSE), (NOT (0.9507135019845812)), ((rt1.c1)IS NOT(rt1.c0)))))) ORDER BY (((NULLIF(rt1.c0, rt1.c2), (rt1.c0 IN ()), ((rt1.c0)LIKE(rt1.c0))))>((CAST(vt0.c0 AS BLOB), (((0xffffffff8dea1b51))<((rt1.c0))), CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, (rt1.c0 IN ()), '' COLLATE NOCASE))<((((rt1.c0) IS FALSE), (NOT (0.9507135019845812)), ((rt1.c1)IS NOT(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((NULLIF(rt1.c0, rt1.c2), (rt1.c0 IN ()), ((rt1.c0)LIKE(rt1.c0))))>((CAST(vt0.c0 AS BLOB), (((0xffffffff8dea1b51))<((rt1.c0))), CAST(rt1.c1 AS NUMERIC)))));
SELECT ALL * FROM rt1, vt0 WHERE ((((NULL, (rt1.c0 IN ()), '' COLLATE NOCASE))<((((rt1.c0) IS FALSE), (NOT (0.9507135019845812)), ((rt1.c1)IS NOT(rt1.c0)))))) ORDER BY (((NULLIF(rt1.c0, rt1.c2), (rt1.c0 IN ()), ((rt1.c0)LIKE(rt1.c0))))>((CAST(vt0.c0 AS BLOB), (((0xffffffff8dea1b51))<((rt1.c0))), CAST(rt1.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0)IS(vt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((((rt1.c0)OR('9223372036854775807')))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)IS(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((((rt1.c0)OR('9223372036854775807')))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0)IS(vt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((((rt1.c0)OR('9223372036854775807')))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)IS(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((((rt1.c0)OR('9223372036854775807')))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0)IS(vt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN ((vt0.c0)<<(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((((rt1.c0)OR('9223372036854775807')))AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (LIKELIHOOD(((rt1.c2)/(rt1.c2)), 0.8622644904147714)) ORDER BY x'd29f' DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt1.c2)/(rt1.c2)), 0.8622644904147714)) IS TRUE)  as count FROM vt0, rt1 ORDER BY x'd29f' DESC);
SELECT * FROM vt0, rt1 WHERE (LIKELIHOOD(((rt1.c2)/(rt1.c2)), 0.8622644904147714)) ORDER BY x'd29f' DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt1.c2)/(rt1.c2)), 0.8622644904147714)) IS TRUE)  as count FROM vt0, rt1 ORDER BY x'd29f' DESC);
SELECT * FROM vt0, rt1 WHERE (LIKELIHOOD(((rt1.c2)/(rt1.c2)), 0.8622644904147714)) ORDER BY x'd29f' DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.030656906929836802) ORDER BY ((UNLIKELY(DISTINCT rt1.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.030656906929836802) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((UNLIKELY(DISTINCT rt1.c0)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.030656906929836802) ORDER BY ((UNLIKELY(DISTINCT rt1.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.030656906929836802) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((UNLIKELY(DISTINCT rt1.c0)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.030656906929836802) ORDER BY ((UNLIKELY(DISTINCT rt1.c0)) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1 IN ()))>>(CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>>(CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1 IN ()))>>(CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>>(CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1 IN ()))>>(CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 END)));
SELECT * FROM vt0, rt1 WHERE ((((((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR(MIN(rt1.c0, '.Odb᭑>yv', 0.6199814553087364, NULL))))OR(-1.914037423E9)))AND(rt1.c0)))OR(vt0.c0))) ORDER BY 0.3512047234366832 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR(MIN(rt1.c0, '.Odb᭑>yv', 0.6199814553087364, NULL))))OR(-1.914037423E9)))AND(rt1.c0)))OR(vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.3512047234366832 ASC);
SELECT * FROM vt0, rt1 WHERE ((((((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR(MIN(rt1.c0, '.Odb᭑>yv', 0.6199814553087364, NULL))))OR(-1.914037423E9)))AND(rt1.c0)))OR(vt0.c0))) ORDER BY 0.3512047234366832 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR(MIN(rt1.c0, '.Odb᭑>yv', 0.6199814553087364, NULL))))OR(-1.914037423E9)))AND(rt1.c0)))OR(vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.3512047234366832 ASC);
SELECT * FROM vt0, rt1 WHERE ((((((((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))OR(MIN(rt1.c0, '.Odb᭑>yv', 0.6199814553087364, NULL))))OR(-1.914037423E9)))AND(rt1.c0)))OR(vt0.c0))) ORDER BY 0.3512047234366832 ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULL) ORDER BY LTRIM(rt1.c1, ((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0 ORDER BY LTRIM(rt1.c1, ((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULL) ORDER BY LTRIM(rt1.c1, ((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0 ORDER BY LTRIM(rt1.c1, ((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULL) ORDER BY LTRIM(rt1.c1, ((vt0.c0) IS FALSE));
SELECT ALL * FROM vt0, rt1 WHERE ((NOT (CAST(x'f782' AS NUMERIC)))) ORDER BY ((rt1.c1) BETWEEN ('0.08663425635287725') AND (vt0.c0)), vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(x'f782' AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1) BETWEEN ('0.08663425635287725') AND (vt0.c0)), vt0.c0 DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((NOT (CAST(x'f782' AS NUMERIC)))) ORDER BY ((rt1.c1) BETWEEN ('0.08663425635287725') AND (vt0.c0)), vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(x'f782' AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1) BETWEEN ('0.08663425635287725') AND (vt0.c0)), vt0.c0 DESC);
SELECT ALL * FROM vt0, rt1 WHERE ((NOT (CAST(x'f782' AS NUMERIC)))) ORDER BY ((rt1.c1) BETWEEN ('0.08663425635287725') AND (vt0.c0)), vt0.c0 DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS FALSE));
SELECT ALL * FROM rt1 WHERE (((((0Xfffffffff6a3228c)OR(((rt1.c1)<(rt1.c0)))))AND((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0Xfffffffff6a3228c)OR(((rt1.c1)<(rt1.c0)))))AND((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((0Xfffffffff6a3228c)OR(((rt1.c1)<(rt1.c0)))))AND((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0Xfffffffff6a3228c)OR(((rt1.c1)<(rt1.c0)))))AND((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((0Xfffffffff6a3228c)OR(((rt1.c1)<(rt1.c0)))))AND((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c0))))));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0)!=(rt1.c0))) IS TRUE)) ORDER BY LTRIM(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)!=(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY LTRIM(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0)!=(rt1.c0))) IS TRUE)) ORDER BY LTRIM(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)!=(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY LTRIM(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0)!=(rt1.c0))) IS TRUE)) ORDER BY LTRIM(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (x'') ORDER BY (~ (((((rt1.c1)OR(rt1.c2)))AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ (((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))));
SELECT ALL * FROM rt1, vt0 WHERE (x'') ORDER BY (~ (((((rt1.c1)OR(rt1.c2)))AND(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ (((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)))));
SELECT ALL * FROM rt1, vt0 WHERE (x'') ORDER BY (~ (((((rt1.c1)OR(rt1.c2)))AND(rt1.c2))));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0)))|(rt1.c1)) WHERE ((((((((('')AND(vt0.c0)))OR(NULL)))OR(rt1.c0)))OR(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((((('')AND(vt0.c0)))OR(NULL)))OR(rt1.c0)))OR(rt1.c0))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0)))|(rt1.c1)));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0)))|(rt1.c1)) WHERE ((((((((('')AND(vt0.c0)))OR(NULL)))OR(rt1.c0)))OR(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((((('')AND(vt0.c0)))OR(NULL)))OR(rt1.c0)))OR(rt1.c0))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0)))|(rt1.c1)));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0)))|(rt1.c1)) WHERE ((((((((('')AND(vt0.c0)))OR(NULL)))OR(rt1.c0)))OR(rt1.c0)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c2) NOTNULL))AND(rt1.c1)))OR(NULL))) ORDER BY (((vt0.c0 IN ()))>(((rt1.c0)>(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) NOTNULL))AND(rt1.c1)))OR(NULL))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ()))>(((rt1.c0)>(rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c2) NOTNULL))AND(rt1.c1)))OR(NULL))) ORDER BY (((vt0.c0 IN ()))>(((rt1.c0)>(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2) NOTNULL))AND(rt1.c1)))OR(NULL))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0 IN ()))>(((rt1.c0)>(rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c2) NOTNULL))AND(rt1.c1)))OR(NULL))) ORDER BY (((vt0.c0 IN ()))>(((rt1.c0)>(rt1.c2)))) ASC;
SELECT * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0)))OR(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c0)))OR(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0)))OR(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c0)))OR(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0)))OR(((vt0.c0) NOTNULL))))AND((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))<<(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END)));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1, rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (rt1.c1, rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1, rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (rt1.c1, rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1, rt1.c0))) ISNULL));
SELECT * FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2))) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND((+ (vt0.c0)))))AND((~ (vt0.c0))))) ORDER BY '1239251802' ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))AND((+ (vt0.c0)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '1239251802' ASC);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND((+ (vt0.c0)))))AND((~ (vt0.c0))))) ORDER BY '1239251802' ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS NUMERIC))AND((+ (vt0.c0)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '1239251802' ASC);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND((+ (vt0.c0)))))AND((~ (vt0.c0))))) ORDER BY '1239251802' ASC;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END) AND (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END) AND (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END) AND (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END) AND (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END) AND (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT ALL * FROM vt0, rt1 WHERE (((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))AND(((rt1.c2) IS FALSE))))OR(((vt0.c0)+(rt1.c1))))) ORDER BY (rt1.c1 IN (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))AND(((rt1.c2) IS FALSE))))OR(((vt0.c0)+(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (rt1.c1 IN (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))AND(((rt1.c2) IS FALSE))))OR(((vt0.c0)+(rt1.c1))))) ORDER BY (rt1.c1 IN (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))AND(((rt1.c2) IS FALSE))))OR(((vt0.c0)+(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (rt1.c1 IN (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))AND(((rt1.c2) IS FALSE))))OR(((vt0.c0)+(rt1.c1))))) ORDER BY (rt1.c1 IN (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN x'' THEN UPPER(DISTINCT rt1.c1) ELSE ((NULL)AND(rt1.c0)) END) ORDER BY ((NULL)>(rt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN UPPER(DISTINCT rt1.c1) ELSE ((NULL)AND(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY ((NULL)>(rt1.c1)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN x'' THEN UPPER(DISTINCT rt1.c1) ELSE ((NULL)AND(rt1.c0)) END) ORDER BY ((NULL)>(rt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN UPPER(DISTINCT rt1.c1) ELSE ((NULL)AND(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY ((NULL)>(rt1.c1)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN x'' THEN UPPER(DISTINCT rt1.c1) ELSE ((NULL)AND(rt1.c0)) END) ORDER BY ((NULL)>(rt1.c1)) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM rt1 WHERE ((x'9672' IN ()));
SELECT SUM(count) FROM (SELECT (((x'9672' IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((x'9672' IN ()));
SELECT SUM(count) FROM (SELECT (((x'9672' IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((x'9672' IN ()));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (TRIM(vt0.c0))) WHERE ((('105830045')LIKE(('' IN ())))) ORDER BY ((rt1.c1)<>(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('105830045')LIKE(('' IN ())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (TRIM(vt0.c0))) ORDER BY ((rt1.c1)!=(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (TRIM(vt0.c0))) WHERE ((('105830045')LIKE(('' IN ())))) ORDER BY ((rt1.c1)<>(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('105830045')LIKE(('' IN ())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (TRIM(vt0.c0))) ORDER BY ((rt1.c1)!=(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (+ (TRIM(vt0.c0))) WHERE ((('105830045')LIKE(('' IN ())))) ORDER BY ((rt1.c1)<>(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')<(CASE WHEN 0xffffffffadac4135 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1947476964 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(CASE WHEN 0xffffffffadac4135 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1947476964 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')<(CASE WHEN 0xffffffffadac4135 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1947476964 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(CASE WHEN 0xffffffffadac4135 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1947476964 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')<(CASE WHEN 0xffffffffadac4135 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1947476964 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c0) ORDER BY IFNULL(DISTINCT ((rt1.c1) BETWEEN (0.7105260392051564) AND (rt1.c2)), (~ (0.7958972378799561))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY IFNULL(DISTINCT ((rt1.c1) BETWEEN (0.7105260392051564) AND (rt1.c2)), (~ (0.7958972378799561))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c0) ORDER BY IFNULL(DISTINCT ((rt1.c1) BETWEEN (0.7105260392051564) AND (rt1.c2)), (~ (0.7958972378799561))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY IFNULL(DISTINCT ((rt1.c1) BETWEEN (0.7105260392051564) AND (rt1.c2)), (~ (0.7958972378799561))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c0) ORDER BY IFNULL(DISTINCT ((rt1.c1) BETWEEN (0.7105260392051564) AND (rt1.c2)), (~ (0.7958972378799561))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) ISNULL));
SELECT ALL * FROM rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((1934029932) NOT BETWEEN (((rt1.c0)*('嬵lupf>'))) AND (((rt1.c0)OR(rt1.c0)))) ASC, (((rt1.c0)) BETWEEN ((rt1.c1)) AND (('')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt1 ORDER BY ((1934029932) NOT BETWEEN (((rt1.c0)*('嬵lupf>'))) AND (((rt1.c0)OR(rt1.c0)))) ASC, (((rt1.c0)) BETWEEN ((rt1.c1)) AND (('')))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((1934029932) NOT BETWEEN (((rt1.c0)*('嬵lupf>'))) AND (((rt1.c0)OR(rt1.c0)))) ASC, (((rt1.c0)) BETWEEN ((rt1.c1)) AND (('')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt1 ORDER BY ((1934029932) NOT BETWEEN (((rt1.c0)*('嬵lupf>'))) AND (((rt1.c0)OR(rt1.c0)))) ASC, (((rt1.c0)) BETWEEN ((rt1.c1)) AND (('')))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((1934029932) NOT BETWEEN (((rt1.c0)*('嬵lupf>'))) AND (((rt1.c0)OR(rt1.c0)))) ASC, (((rt1.c0)) BETWEEN ((rt1.c1)) AND (('')))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (LENGTH((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (LENGTH((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (LENGTH((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE) BETWEEN ((NOT (rt1.c1))) AND (json_array_length(rt1.c1)))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE) BETWEEN ((NOT (rt1.c1))) AND (json_array_length(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE) BETWEEN ((NOT (rt1.c1))) AND (json_array_length(rt1.c1)))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE) BETWEEN ((NOT (rt1.c1))) AND (json_array_length(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE NOCASE) BETWEEN ((NOT (rt1.c1))) AND (json_array_length(rt1.c1)))) ORDER BY rt1.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((((((vt0.c0)AND(NULL)))AND((rt1.c1 IN ()))))AND((vt0.c0 IN ()))))AND(rt1.c1 COLLATE RTRIM)) WHERE (((0.2827760775527435)+(rt1.c0)) COLLATE RTRIM) ORDER BY ((rt1.c1)>>(((rt1.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.2827760775527435)+(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((((((vt0.c0)AND(NULL)))AND((rt1.c1 IN ()))))AND((vt0.c0 IN ()))))AND(rt1.c1 COLLATE RTRIM)) ORDER BY ((rt1.c1)>>(((rt1.c0)<<(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((((((vt0.c0)AND(NULL)))AND((rt1.c1 IN ()))))AND((vt0.c0 IN ()))))AND(rt1.c1 COLLATE RTRIM)) WHERE (((0.2827760775527435)+(rt1.c0)) COLLATE RTRIM) ORDER BY ((rt1.c1)>>(((rt1.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.2827760775527435)+(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((((((vt0.c0)AND(NULL)))AND((rt1.c1 IN ()))))AND((vt0.c0 IN ()))))AND(rt1.c1 COLLATE RTRIM)) ORDER BY ((rt1.c1)>>(((rt1.c0)<<(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((((((vt0.c0)AND(NULL)))AND((rt1.c1 IN ()))))AND((vt0.c0 IN ()))))AND(rt1.c1 COLLATE RTRIM)) WHERE (((0.2827760775527435)+(rt1.c0)) COLLATE RTRIM) ORDER BY ((rt1.c1)>>(((rt1.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c0))==((vt0.c0)))))) ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS REAL) DESC);
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c0))==((vt0.c0)))))) ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS REAL) DESC);
SELECT ALL * FROM vt0 WHERE ((+ ((((vt0.c0))==((vt0.c0)))))) ORDER BY CAST(((vt0.c0)+(vt0.c0)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY CASE ((rt1.c1)>(rt1.c0))  WHEN SQLITE_VERSION() THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c1)>(rt1.c0))  WHEN SQLITE_VERSION() THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END END);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY CASE ((rt1.c1)>(rt1.c0))  WHEN SQLITE_VERSION() THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c1)>(rt1.c0))  WHEN SQLITE_VERSION() THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END END);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY CASE ((rt1.c1)>(rt1.c0))  WHEN SQLITE_VERSION() THEN (rt1.c0 IN ()) ELSE CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END END;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS BLOB))LIKE(((rt1.c0)=(vt0.c0))))) ORDER BY (((rt1.c0 IN (rt1.c2))) BETWEEN (((rt1.c2) IS FALSE)) AND (((vt0.c0)AND(0.731303414334002))))  NULLS FIRST, ((CAST(rt1.c2 AS TEXT))<(((rt1.c2)IS(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS BLOB))LIKE(((rt1.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0 IN (rt1.c2))) BETWEEN (((rt1.c2) IS FALSE)) AND (((vt0.c0)AND(0.731303414334002))))  NULLS FIRST, ((CAST(rt1.c2 AS TEXT))<(((rt1.c2)IS(rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS BLOB))LIKE(((rt1.c0)=(vt0.c0))))) ORDER BY (((rt1.c0 IN (rt1.c2))) BETWEEN (((rt1.c2) IS FALSE)) AND (((vt0.c0)AND(0.731303414334002))))  NULLS FIRST, ((CAST(rt1.c2 AS TEXT))<(((rt1.c2)IS(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS BLOB))LIKE(((rt1.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0 IN (rt1.c2))) BETWEEN (((rt1.c2) IS FALSE)) AND (((vt0.c0)AND(0.731303414334002))))  NULLS FIRST, ((CAST(rt1.c2 AS TEXT))<(((rt1.c2)IS(rt1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS BLOB))LIKE(((rt1.c0)=(vt0.c0))))) ORDER BY (((rt1.c0 IN (rt1.c2))) BETWEEN (((rt1.c2) IS FALSE)) AND (((vt0.c0)AND(0.731303414334002))))  NULLS FIRST, ((CAST(rt1.c2 AS TEXT))<(((rt1.c2)IS(rt1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((IFNULL(DISTINCT rt1.c2, vt0.c0)) BETWEEN (LIKE(rt1.c0, rt1.c1, 'e')) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt1.c2, vt0.c0)) BETWEEN (LIKE(rt1.c0, rt1.c1, 'e')) AND (x''))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((IFNULL(DISTINCT rt1.c2, vt0.c0)) BETWEEN (LIKE(rt1.c0, rt1.c1, 'e')) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt1.c2, vt0.c0)) BETWEEN (LIKE(rt1.c0, rt1.c1, 'e')) AND (x''))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((IFNULL(DISTINCT rt1.c2, vt0.c0)) BETWEEN (LIKE(rt1.c0, rt1.c1, 'e')) AND (x'')));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE BINARY) ORDER BY CAST((- (rt1.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST((- (rt1.c1)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE BINARY) ORDER BY CAST((- (rt1.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST((- (rt1.c1)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE BINARY) ORDER BY CAST((- (rt1.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c0 IN ()))LIKE(((vt0.c0) NOTNULL)))) ORDER BY (((vt0.c0) NOT NULL) IN ()), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))LIKE(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0) NOT NULL) IN ()), vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c0 IN ()))LIKE(((vt0.c0) NOTNULL)))) ORDER BY (((vt0.c0) NOT NULL) IN ()), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))LIKE(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0) NOT NULL) IN ()), vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c0 IN ()))LIKE(((vt0.c0) NOTNULL)))) ORDER BY (((vt0.c0) NOT NULL) IN ()), vt0.c0  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY CASE (vt0.c0 IN ())  WHEN (- (vt0.c0)) THEN rt1.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE (vt0.c0 IN ())  WHEN (- (vt0.c0)) THEN rt1.c2 END DESC);
SELECT * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY CASE (vt0.c0 IN ())  WHEN (- (vt0.c0)) THEN rt1.c2 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE (vt0.c0 IN ())  WHEN (- (vt0.c0)) THEN rt1.c2 END DESC);
SELECT * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY CASE (vt0.c0 IN ())  WHEN (- (vt0.c0)) THEN rt1.c2 END DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((+ (rt1.c2))) ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (- (rt1.c2)) ELSE (rt1.c2 IN (rt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (- (rt1.c2)) ELSE (rt1.c2 IN (rt1.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((+ (rt1.c2))) ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (- (rt1.c2)) ELSE (rt1.c2 IN (rt1.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (- (rt1.c2)) ELSE (rt1.c2 IN (rt1.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((+ (rt1.c2))) ORDER BY CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN (- (rt1.c2)) ELSE (rt1.c2 IN (rt1.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)LIKE(x'771d9903')))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)LIKE(x'771d9903')))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)LIKE(x'771d9903')))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)LIKE(x'771d9903')))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)LIKE(x'771d9903')))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'158b') ORDER BY ((((vt0.c0)<=(rt1.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(rt1.c2 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'158b') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0)<=(rt1.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(rt1.c2 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'158b') ORDER BY ((((vt0.c0)<=(rt1.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(rt1.c2 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'158b') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0)<=(rt1.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(rt1.c2 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'158b') ORDER BY ((((vt0.c0)<=(rt1.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(rt1.c2 AS TEXT))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (LOWER(DISTINCT LIKELIHOOD(rt1.c2, 0.41437302337881454)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT LIKELIHOOD(rt1.c2, 0.41437302337881454))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LOWER(DISTINCT LIKELIHOOD(rt1.c2, 0.41437302337881454)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT LIKELIHOOD(rt1.c2, 0.41437302337881454))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LOWER(DISTINCT LIKELIHOOD(rt1.c2, 0.41437302337881454)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)AND(rt1.c1)) COLLATE BINARY WHERE (0X11b9fce8) ORDER BY (~ ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((0X11b9fce8) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)AND(rt1.c1)) COLLATE BINARY ORDER BY (~ ((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)AND(rt1.c1)) COLLATE BINARY WHERE (0X11b9fce8) ORDER BY (~ ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((0X11b9fce8) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)AND(rt1.c1)) COLLATE BINARY ORDER BY (~ ((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((rt1.c0)AND(rt1.c1)) COLLATE BINARY WHERE (0X11b9fce8) ORDER BY (~ ((NOT (vt0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(SQLITE_VERSION())))OR((+ (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)&(x'1fb0c526')) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN NULL THEN (+ (vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(SQLITE_VERSION())))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)&(x'1fb0c526')) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN NULL THEN (+ (vt0.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(SQLITE_VERSION())))OR((+ (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)&(x'1fb0c526')) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN NULL THEN (+ (vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(SQLITE_VERSION())))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)&(x'1fb0c526')) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN NULL THEN (+ (vt0.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(SQLITE_VERSION())))OR((+ (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)&(x'1fb0c526')) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN NULL THEN (+ (vt0.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((CAST(-1.524333637E9 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(-1.524333637E9 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(-1.524333637E9 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(-1.524333637E9 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(-1.524333637E9 AS NUMERIC)) ISNULL));
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY (((((vt0.c0))>=((vt0.c0))))>=((~ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c0))))>=((~ (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY (((((vt0.c0))>=((vt0.c0))))>=((~ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c0))))>=((~ (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY (((((vt0.c0))>=((vt0.c0))))>=((~ (vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST('-1383775989' AS INTEGER))IS NOT((NOT (vt0.c0))))) ORDER BY 2120574556  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'7855', vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (json_remove(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-1383775989' AS INTEGER))IS NOT((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 2120574556  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'7855', vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (json_remove(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST('-1383775989' AS INTEGER))IS NOT((NOT (vt0.c0))))) ORDER BY 2120574556  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'7855', vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (json_remove(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-1383775989' AS INTEGER))IS NOT((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 2120574556  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'7855', vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (json_remove(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS REAL))-(CAST('1224757196' AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))-(CAST('1224757196' AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS REAL))-(CAST('1224757196' AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))-(CAST('1224757196' AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS REAL))-(CAST('1224757196' AS BLOB))) DESC;
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM vt0 WHERE ((- (0.12224913322495179)) COLLATE NOCASE) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((- (0.12224913322495179)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (0.12224913322495179)) COLLATE NOCASE) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((- (0.12224913322495179)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (0.12224913322495179)) COLLATE NOCASE) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) ASC;
SELECT * FROM vt0 WHERE ((((NULL IN (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0))<((0x22411d53))) COLLATE NOCASE DESC  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 1.375277146E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)AND(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0))<((0x22411d53))) COLLATE NOCASE DESC  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 1.375277146E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)AND(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC);
SELECT * FROM vt0 WHERE ((((NULL IN (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0))<((0x22411d53))) COLLATE NOCASE DESC  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 1.375277146E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)AND(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0))<((0x22411d53))) COLLATE NOCASE DESC  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 1.375277146E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)AND(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC);
SELECT * FROM vt0 WHERE ((((NULL IN (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST, (((vt0.c0))<((0x22411d53))) COLLATE NOCASE DESC  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 1.375277146E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)AND(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC;
SELECT * FROM vt0 WHERE (((((0x2c22ae97)AND(CAST(vt0.c0 AS REAL))))OR((((vt0.c0))<=((vt0.c0)))))) ORDER BY (NOT (0x40d39243))  NULLS LAST, CAST(vt0.c0 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0X2c22ae97)AND(CAST(vt0.c0 AS REAL))))OR((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0x40d39243))  NULLS LAST, CAST(vt0.c0 AS INTEGER) ASC);
SELECT * FROM vt0 WHERE (((((0x2c22ae97)AND(CAST(vt0.c0 AS REAL))))OR((((vt0.c0))<=((vt0.c0)))))) ORDER BY (NOT (0x40d39243))  NULLS LAST, CAST(vt0.c0 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0X2c22ae97)AND(CAST(vt0.c0 AS REAL))))OR((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0x40d39243))  NULLS LAST, CAST(vt0.c0 AS INTEGER) ASC);
SELECT * FROM vt0 WHERE (((((0x2c22ae97)AND(CAST(vt0.c0 AS REAL))))OR((((vt0.c0))<=((vt0.c0)))))) ORDER BY (NOT (0x40d39243))  NULLS LAST, CAST(vt0.c0 AS INTEGER) ASC;
SELECT * FROM rt1, vt0 WHERE ((((((((-36829822)AND(rt1.c0)))AND(1.934029932E9))))<=((CAST(rt1.c1 AS NUMERIC))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((-36829822)AND(rt1.c0)))AND(1.934029932E9))))<=((CAST(rt1.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((CAST('' AS NUMERIC)))));
SELECT * FROM rt1, vt0 WHERE ((((((((-36829822)AND(rt1.c0)))AND(1.934029932E9))))<=((CAST(rt1.c1 AS NUMERIC))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((-36829822)AND(rt1.c0)))AND(1.934029932E9))))<=((CAST(rt1.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((CAST('' AS NUMERIC)))));
SELECT * FROM rt1, vt0 WHERE ((((((((-36829822)AND(rt1.c0)))AND(1.934029932E9))))<=((CAST(rt1.c1 AS NUMERIC))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((CAST('' AS NUMERIC))));
SELECT * FROM vt0, rt1 WHERE ((NOT (((vt0.c0)<(x''))))) ORDER BY ((IFNULL(vt0.c0, rt1.c2))GLOB((((rt1.c0, rt1.c2, rt1.c1))!=((vt0.c0, rt1.c0, rt1.c0))))) DESC  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c0)<(rt1.c0))))) DESC  NULLS FIRST, vt0.c0, ((((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(((x'e8d6') NOT BETWEEN (rt1.c0) AND ('nx[}kN\rK')))))OR(json_type(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)<(x''))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((IFNULL(vt0.c0, rt1.c2))GLOB((((rt1.c0, rt1.c2, rt1.c1))!=((vt0.c0, rt1.c0, rt1.c0))))) DESC  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c0)<(rt1.c0))))) DESC  NULLS FIRST, vt0.c0, ((((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(((x'e8d6') NOT BETWEEN (rt1.c0) AND ('nx[}kN\rK')))))OR(json_type(vt0.c0))));
SELECT * FROM vt0, rt1 WHERE ((NOT (((vt0.c0)<(x''))))) ORDER BY ((IFNULL(vt0.c0, rt1.c2))GLOB((((rt1.c0, rt1.c2, rt1.c1))!=((vt0.c0, rt1.c0, rt1.c0))))) DESC  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c0)<(rt1.c0))))) DESC  NULLS FIRST, vt0.c0, ((((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(((x'e8d6') NOT BETWEEN (rt1.c0) AND ('nx[}kN\rK')))))OR(json_type(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)<(x''))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((IFNULL(vt0.c0, rt1.c2))GLOB((((rt1.c0, rt1.c2, rt1.c1))!=((vt0.c0, rt1.c0, rt1.c0))))) DESC  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c0)<(rt1.c0))))) DESC  NULLS FIRST, vt0.c0, ((((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(((x'e8d6') NOT BETWEEN (rt1.c0) AND ('nx[}kN\rK')))))OR(json_type(vt0.c0))));
SELECT * FROM vt0, rt1 WHERE ((NOT (((vt0.c0)<(x''))))) ORDER BY ((IFNULL(vt0.c0, rt1.c2))GLOB((((rt1.c0, rt1.c2, rt1.c1))!=((vt0.c0, rt1.c0, rt1.c0))))) DESC  NULLS LAST, (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c0)<(rt1.c0))))) DESC  NULLS FIRST, vt0.c0, ((((((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(((x'e8d6') NOT BETWEEN (rt1.c0) AND ('nx[}kN\rK')))))OR(json_type(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT NULL)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT NULL)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT NULL)) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (x'32f4')));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (x'32f4'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (x'32f4')));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (x'32f4'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (x'32f4')));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS BLOB)) ORDER BY '1921722994' DESC, (((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((((((x'')AND(rt1.c2)))OR(rt1.c2)), NULLIF(DISTINCT rt1.c2, rt1.c0), (rt1.c1 IN ()), (rt1.c0 IN ()), (((rt1.c2))=((rt1.c2))), ((rt1.c1)IS(rt1.c1)), 0.14869822559463353)) AND ((CASE WHEN rt1.c0 THEN rt1.c2 END, json_extract(rt1.c1, rt1.c2), CAST(rt1.c1 AS NUMERIC), (+ (rt1.c1)), CAST(rt1.c1 AS TEXT), ((0.10588041879103438) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY '1921722994' DESC, (((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((((((x'')AND(rt1.c2)))OR(rt1.c2)), NULLIF(DISTINCT rt1.c2, rt1.c0), (rt1.c1 IN ()), (rt1.c0 IN ()), (((rt1.c2))==((rt1.c2))), ((rt1.c1)IS(rt1.c1)), 0.14869822559463353)) AND ((CASE WHEN rt1.c0 THEN rt1.c2 END, json_extract(rt1.c1, rt1.c2), CAST(rt1.c1 AS NUMERIC), (+ (rt1.c1)), CAST(rt1.c1 AS TEXT), ((0.10588041879103438) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) NOTNULL)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS BLOB)) ORDER BY '1921722994' DESC, (((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((((((x'')AND(rt1.c2)))OR(rt1.c2)), NULLIF(DISTINCT rt1.c2, rt1.c0), (rt1.c1 IN ()), (rt1.c0 IN ()), (((rt1.c2))=((rt1.c2))), ((rt1.c1)IS(rt1.c1)), 0.14869822559463353)) AND ((CASE WHEN rt1.c0 THEN rt1.c2 END, json_extract(rt1.c1, rt1.c2), CAST(rt1.c1 AS NUMERIC), (+ (rt1.c1)), CAST(rt1.c1 AS TEXT), ((0.10588041879103438) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY '1921722994' DESC, (((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((((((x'')AND(rt1.c2)))OR(rt1.c2)), NULLIF(DISTINCT rt1.c2, rt1.c0), (rt1.c1 IN ()), (rt1.c0 IN ()), (((rt1.c2))==((rt1.c2))), ((rt1.c1)IS(rt1.c1)), 0.14869822559463353)) AND ((CASE WHEN rt1.c0 THEN rt1.c2 END, json_extract(rt1.c1, rt1.c2), CAST(rt1.c1 AS NUMERIC), (+ (rt1.c1)), CAST(rt1.c1 AS TEXT), ((0.10588041879103438) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) NOTNULL)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS BLOB)) ORDER BY '1921722994' DESC, (((rt1.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((((((x'')AND(rt1.c2)))OR(rt1.c2)), NULLIF(DISTINCT rt1.c2, rt1.c0), (rt1.c1 IN ()), (rt1.c0 IN ()), (((rt1.c2))=((rt1.c2))), ((rt1.c1)IS(rt1.c1)), 0.14869822559463353)) AND ((CASE WHEN rt1.c0 THEN rt1.c2 END, json_extract(rt1.c1, rt1.c2), CAST(rt1.c1 AS NUMERIC), (+ (rt1.c1)), CAST(rt1.c1 AS TEXT), ((0.10588041879103438) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) NOTNULL)))) ASC;
SELECT ALL * FROM rt1, vt0 WHERE (((((((rt1.c2)|(vt0.c0)))AND(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)))OR(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)|(vt0.c0)))AND(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)))OR(rt1.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((rt1.c2)|(vt0.c0)))AND(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)))OR(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)|(vt0.c0)))AND(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)))OR(rt1.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((rt1.c2)|(vt0.c0)))AND(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)))OR(rt1.c0)));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c0 THEN '1444255334' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END COLLATE RTRIM) ORDER BY LOWER(HEX(DISTINCT rt1.c2)) ASC  NULLS LAST, ((CAST(rt1.c2 AS INTEGER))+((+ (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN '1444255334' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY LOWER(HEX(DISTINCT rt1.c2)) ASC  NULLS LAST, ((CAST(rt1.c2 AS INTEGER))+((+ (rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c0 THEN '1444255334' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END COLLATE RTRIM) ORDER BY LOWER(HEX(DISTINCT rt1.c2)) ASC  NULLS LAST, ((CAST(rt1.c2 AS INTEGER))+((+ (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN '1444255334' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY LOWER(HEX(DISTINCT rt1.c2)) ASC  NULLS LAST, ((CAST(rt1.c2 AS INTEGER))+((+ (rt1.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c0 THEN '1444255334' WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END COLLATE RTRIM) ORDER BY LOWER(HEX(DISTINCT rt1.c2)) ASC  NULLS LAST, ((CAST(rt1.c2 AS INTEGER))+((+ (rt1.c1)))) DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0))<=((0.8857599165964116)))) AND (((vt0.c0)IS(vt0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0))<=((0.8857599165964116)))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0))<=((0.8857599165964116)))) AND (((vt0.c0)IS(vt0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0))<=((0.8857599165964116)))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0))<=((0.8857599165964116)))) AND (((vt0.c0)IS(vt0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) NOTNULL) WHERE (CASE WHEN ((rt1.c0)%(rt1.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY (NOT (rt1.c2)) COLLATE BINARY DESC, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)%(rt1.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) NOTNULL) ORDER BY (NOT (rt1.c2)) COLLATE BINARY DESC, rt1.c1 DESC);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) NOTNULL) WHERE (CASE WHEN ((rt1.c0)%(rt1.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY (NOT (rt1.c2)) COLLATE BINARY DESC, rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)%(rt1.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) NOTNULL) ORDER BY (NOT (rt1.c2)) COLLATE BINARY DESC, rt1.c1 DESC);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((vt0.c0)AND(rt1.c0)))AND(vt0.c0))) NOTNULL) WHERE (CASE WHEN ((rt1.c0)%(rt1.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY (NOT (rt1.c2)) COLLATE BINARY DESC, rt1.c1 DESC;
SELECT * FROM rt1 WHERE (((((((((((x'') NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(((rt1.c2) NOTNULL))))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(rt1.c0 AS INTEGER)))) ORDER BY ((x'') BETWEEN (((('1')) NOT BETWEEN ((x'')) AND ((rt1.c2)))) AND (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) DESC  NULLS FIRST, rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'') NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(((rt1.c2) NOTNULL))))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY ((x'') BETWEEN (((('1')) NOT BETWEEN ((x'')) AND ((rt1.c2)))) AND (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) DESC  NULLS FIRST, rt1.c2  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((((((x'') NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(((rt1.c2) NOTNULL))))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(rt1.c0 AS INTEGER)))) ORDER BY ((x'') BETWEEN (((('1')) NOT BETWEEN ((x'')) AND ((rt1.c2)))) AND (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) DESC  NULLS FIRST, rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'') NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(((rt1.c2) NOTNULL))))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY ((x'') BETWEEN (((('1')) NOT BETWEEN ((x'')) AND ((rt1.c2)))) AND (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) DESC  NULLS FIRST, rt1.c2  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((((((((x'') NOT BETWEEN (rt1.c2) AND (rt1.c0)))AND(((rt1.c2) NOTNULL))))OR(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END)))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(rt1.c0 AS INTEGER)))) ORDER BY ((x'') BETWEEN (((('1')) NOT BETWEEN ((x'')) AND ((rt1.c2)))) AND (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) DESC  NULLS FIRST, rt1.c2  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((NOT (((rt1.c2)<<(rt1.c0))))) ORDER BY ((rt1.c0)%(vt0.c0)) COLLATE NOCASE, ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)))=(rt1.c0)) DESC  NULLS LAST, ((CASE x'c87a4d50'  WHEN rt1.c0 THEN rt1.c1 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2)<<(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0)%(vt0.c0)) COLLATE NOCASE, ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)))=(rt1.c0)) DESC  NULLS LAST, ((CASE x'c87a4d50'  WHEN rt1.c0 THEN rt1.c1 END) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((NOT (((rt1.c2)<<(rt1.c0))))) ORDER BY ((rt1.c0)%(vt0.c0)) COLLATE NOCASE, ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)))=(rt1.c0)) DESC  NULLS LAST, ((CASE x'c87a4d50'  WHEN rt1.c0 THEN rt1.c1 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c2)<<(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0)%(vt0.c0)) COLLATE NOCASE, ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)))=(rt1.c0)) DESC  NULLS LAST, ((CASE x'c87a4d50'  WHEN rt1.c0 THEN rt1.c1 END) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((NOT (((rt1.c2)<<(rt1.c0))))) ORDER BY ((rt1.c0)%(vt0.c0)) COLLATE NOCASE, ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)))=(rt1.c0)) DESC  NULLS LAST, ((CASE x'c87a4d50'  WHEN rt1.c0 THEN rt1.c1 END) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 NOT INDEXED WHERE (x'c106acfb');
SELECT SUM(count) FROM (SELECT ALL ((x'c106acfb') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 NOT INDEXED WHERE (x'c106acfb');
SELECT SUM(count) FROM (SELECT ALL ((x'c106acfb') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 NOT INDEXED WHERE (x'c106acfb');
SELECT * FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((('-867077350')IS(vt0.c0)) IN (((rt1.c0)OR(rt1.c0)), HEX(DISTINCT rt1.c2), ((rt1.c0) ISNULL)))) ORDER BY DATETIME(NULL, (((rt1.c0))==((rt1.c2))), ((rt1.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((('-867077350')IS(vt0.c0)) IN (((rt1.c0)OR(rt1.c0)), HEX(DISTINCT rt1.c2), ((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY DATETIME(NULL, (((rt1.c0))==((rt1.c2))), ((rt1.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((('-867077350')IS(vt0.c0)) IN (((rt1.c0)OR(rt1.c0)), HEX(DISTINCT rt1.c2), ((rt1.c0) ISNULL)))) ORDER BY DATETIME(NULL, (((rt1.c0))==((rt1.c2))), ((rt1.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((('-867077350')IS(vt0.c0)) IN (((rt1.c0)OR(rt1.c0)), HEX(DISTINCT rt1.c2), ((rt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY DATETIME(NULL, (((rt1.c0))==((rt1.c2))), ((rt1.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((('-867077350')IS(vt0.c0)) IN (((rt1.c0)OR(rt1.c0)), HEX(DISTINCT rt1.c2), ((rt1.c0) ISNULL)))) ORDER BY DATETIME(NULL, (((rt1.c0))==((rt1.c2))), ((rt1.c0) NOTNULL));
