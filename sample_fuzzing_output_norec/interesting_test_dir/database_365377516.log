-- Time: 2024/06/09 09:38:56
-- Database: database16
-- Database version: 3.40.0
-- seed value: 365377516
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 5ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, languageid="lid", compress=likely, uncompress=likely); -- 2ms;
CREATE TABLE t0 (c0 BLOB , c1 INT , c2 REAL ); -- 3ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 10ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c9; -- 7ms;
UPDATE OR IGNORE t0 SET c9=x'', c9='l/'; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=10'); -- 0ms;
CREATE INDEX IF NOT EXISTS i96 ON t0(((((((((((((((c9)AND(c2)))AND(c2)))AND(c9)))AND(c2)))AND(c1)))OR(c9)))<=(UPPER(DISTINCT c1))) COLLATE RTRIM DESC,((((NULL)<<(-1612672552))) IS FALSE) ASC,((((((c9)OR(0.8962137017579426)))OR(c9))) BETWEEN (c1) AND ((NOT (c2)))) COLLATE BINARY DESC) WHERE 0xffffffffd379ece0; -- 4ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (1), (x''), (NULL); -- 6ms;
ANALYZE main; -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 16ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 37ms;
INSERT OR IGNORE INTO t0(c9) VALUES (''); -- 3ms;
INSERT OR REPLACE INTO t0(c2) VALUES ('%-~釘M'), (-746984224), ('-746984224'), ('-746984224'), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT OR IGNORE INTO t0 VALUES (0.5423388876072528, -7.46984224E8, '-1612672552'); -- 1ms;
ANALYZE i96; -- 0ms;
DROP INDEX IF EXISTS "i96"; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 3ms;
INSERT OR FAIL INTO vt0 VALUES (NULL), (NULL), (1162818); -- 4ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('1374248010'); -- 15ms;
INSERT OR IGNORE INTO vt0 VALUES ('-746984224'), (1.37424801E9), (0.5423388876072528); -- 1ms;
ALTER TABLE t0 RENAME COLUMN c9 TO c96; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1049137749); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 9ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c62; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
REINDEX; -- 0ms;
UPDATE vt1 SET c0=NULL; -- 7ms;
INSERT OR FAIL INTO vt1(c0) VALUES (''); -- 11ms;
DROP TABLE t0; -- 2ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), ('1412273203'), ('-1612672552'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO vt1(c0, lid) VALUES (0X322c8145, x''), ('kM', '841777477'), ('', ''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 2ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.7005660531231549), (x''), (0.5423388876072528); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('z䷛v|/4ma'); -- 11ms;
INSERT OR FAIL INTO vt1(lid) VALUES ('2883440'); -- 6ms;
INSERT OR IGNORE INTO vt1 VALUES (x'', NULL), (NULL, 0.11816896239039054), (NULL, '/N䫄I5'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(lid, c0) VALUES (NULL, x'efa8'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 122549475); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2075068158); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE CAST(((vt1.c0)+(vt1.lid)) AS BLOB); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('5865078240956901342T2194782099333839666T6236277834812102656 '), (0.1647474767943472), (x''); -- 9ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 13ms;
INSERT OR IGNORE INTO vt1(lid) VALUES ('2883440'), ('Dg!'''), (NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x''); -- 4ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 6ms;
UPDATE OR ABORT vt1 SET c0=NULL WHERE HEX(DISTINCT LTRIM(vt1.lid, vt1.lid)); -- 1ms;
UPDATE vt1 SET (lid, c0)=(x'', x''); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1604655991'); -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0, c0)=('1162818', 0.8962137017579426) WHERE (((vt1.lid IN ())) NOT NULL); -- 4ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA main.threads; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0, c0)=('-0.0', NULL) WHERE vt0.c0; -- 0ms;
INSERT OR IGNORE INTO vt1(c0, lid) VALUES (x'', NULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (8.41777477E8), ('mE'), ('l6Ｑ\n'); -- 6ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 3ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt1 SET (lid)=(x'9f8e') WHERE vt1.c0; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0Xffffffffde6d828c), (0.5423388876072528), ('KM'); -- 13ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 3ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1212651453); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE (((vt1.c0)IS NOT(vt1.c0)) IN ()); -- 0ms;
UPDATE OR REPLACE vt1 SET (lid)=(808900448); -- 13ms;
UPDATE OR IGNORE vt0 SET (c0)=('0.1647474767943472') WHERE 0.5244654670138527; -- 5ms;
END; -- 1ms;
ANALYZE; -- 4ms;
INSERT OR IGNORE INTO vt1(lid) VALUES (0.728436900597737), (1646871378), (x''); -- 0ms;
PRAGMA journal_mode; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0xffffffffd379ece0); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((-1604655991)) BETWEEN ((0.13759641300456604)) AND ((NULL)))  WHEN (('')OR(x'4fe3')) THEN ((-1184234647)>=(NULL)) END; -- 0ms;
REINDEX; -- 5ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 4ms;
INSERT INTO vt1(vt1) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 414059890); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '12436'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44427'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((('-563248500' COLLATE NOCASE)AND(((((vt1.c0)AND(vt1.lid)))OR(vt0.c0)))))OR(((vt1.lid)/(vt0.c0))))) ORDER BY (+ (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-563248500' COLLATE NOCASE)AND(((((vt1.c0)AND(vt1.lid)))OR(vt0.c0)))))OR(((vt1.lid)/(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY (+ (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((('-563248500' COLLATE NOCASE)AND(((((vt1.c0)AND(vt1.lid)))OR(vt0.c0)))))OR(((vt1.lid)/(vt0.c0))))) ORDER BY (+ (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-563248500' COLLATE NOCASE)AND(((((vt1.c0)AND(vt1.lid)))OR(vt0.c0)))))OR(((vt1.lid)/(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY (+ (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((('-563248500' COLLATE NOCASE)AND(((((vt1.c0)AND(vt1.lid)))OR(vt0.c0)))))OR(((vt1.lid)/(vt0.c0))))) ORDER BY (+ (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))>=(((vt1.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))>=(((vt1.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))>=(((vt1.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))>=(((vt1.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))>=(((vt1.c0)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((LOWER(vt1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((LOWER(vt1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((LOWER(vt1.c0)) IS TRUE));
SELECT * FROM vt1 WHERE ('0' COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (('0' COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE ('0' COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (('0' COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE ('0' COLLATE NOCASE) ORDER BY x'';
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.lid, vt1.lid)))) NOTNULL)) ORDER BY (+ (vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.lid, vt1.lid)))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.lid, vt1.lid)))) NOTNULL)) ORDER BY (+ (vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.lid, vt1.lid)))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.lid, vt1.lid)))) NOTNULL)) ORDER BY (+ (vt0.c0 COLLATE BINARY));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)*(vt1.c0))) NOT BETWEEN (vt0.c0) AND (0.9817009839281157)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)*(vt1.c0))) NOT BETWEEN (vt0.c0) AND (0.9817009839281157)));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)*(vt1.c0))) NOT BETWEEN (vt0.c0) AND (0.9817009839281157)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)*(vt1.c0))) NOT BETWEEN (vt0.c0) AND (0.9817009839281157)));
SELECT * FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)*(vt1.c0))) NOT BETWEEN (vt0.c0) AND (0.9817009839281157)) WHERE (vt1.c0);
SELECT * FROM vt0, vt1 WHERE (((((vt1.lid) IS FALSE))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) IS FALSE))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.lid) IS FALSE))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) IS FALSE))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt1.lid) IS FALSE))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))));
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.lid AS INTEGER))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.lid, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))))))OR((((vt1.c0, vt1.lid, vt1.c0, vt1.lid, vt1.c0))=((x'', vt1.c0, vt1.lid, vt1.lid, vt1.lid)))))) ORDER BY (CAST(vt1.c0 AS NUMERIC) IN (vt1.lid COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.lid AS INTEGER))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.lid, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))))))OR((((vt1.c0, vt1.lid, vt1.c0, vt1.lid, vt1.c0))==((x'', vt1.c0, vt1.lid, vt1.lid, vt1.lid)))))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS NUMERIC) IN (vt1.lid COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.lid AS INTEGER))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.lid, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))))))OR((((vt1.c0, vt1.lid, vt1.c0, vt1.lid, vt1.c0))=((x'', vt1.c0, vt1.lid, vt1.lid, vt1.lid)))))) ORDER BY (CAST(vt1.c0 AS NUMERIC) IN (vt1.lid COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.lid AS INTEGER))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.lid, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))))))OR((((vt1.c0, vt1.lid, vt1.c0, vt1.lid, vt1.c0))==((x'', vt1.c0, vt1.lid, vt1.lid, vt1.lid)))))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS NUMERIC) IN (vt1.lid COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.lid AS INTEGER))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.lid, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))))))OR((((vt1.c0, vt1.lid, vt1.c0, vt1.lid, vt1.c0))=((x'', vt1.c0, vt1.lid, vt1.lid, vt1.lid)))))) ORDER BY (CAST(vt1.c0 AS NUMERIC) IN (vt1.lid COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'')));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0x5d74ee6) BETWEEN ('\ng7{') AND (vt0.c0)) IN ())) ORDER BY (NOT ((('t<O') IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((0x5d74ee6) BETWEEN ('\ng7{') AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((('t<O') IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0x5d74ee6) BETWEEN ('\ng7{') AND (vt0.c0)) IN ())) ORDER BY (NOT ((('t<O') IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((0x5d74ee6) BETWEEN ('\ng7{') AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((('t<O') IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((0x5d74ee6) BETWEEN ('\ng7{') AND (vt0.c0)) IN ())) ORDER BY (NOT ((('t<O') IS FALSE)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid) BETWEEN (((vt1.lid) NOT BETWEEN (0.32779619406430993) AND (vt1.c0))) AND (((vt1.lid) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((vt1.lid) BETWEEN (((vt1.lid) NOT BETWEEN (0.32779619406430993) AND (vt1.c0))) AND (((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid) BETWEEN (((vt1.lid) NOT BETWEEN (0.32779619406430993) AND (vt1.c0))) AND (((vt1.lid) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((vt1.lid) BETWEEN (((vt1.lid) NOT BETWEEN (0.32779619406430993) AND (vt1.c0))) AND (((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid) BETWEEN (((vt1.lid) NOT BETWEEN (0.32779619406430993) AND (vt1.c0))) AND (((vt1.lid) NOTNULL))));
SELECT * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((-7.46984224E8)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((-7.46984224E8)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((-7.46984224E8)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((-7.46984224E8)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((-7.46984224E8)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt1.lid)+(vt0.c0)))AND(('1374248010' IN ()))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt1.lid)+(vt0.c0)))AND(('1374248010' IN ()))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt1.lid)+(vt0.c0)))AND(('1374248010' IN ()))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt1.lid)+(vt0.c0)))AND(('1374248010' IN ()))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((vt1.lid)+(vt0.c0)))AND(('1374248010' IN ()))) WHERE ((NULL IN ()));
SELECT * FROM vt0, vt1 WHERE ((9.7996518E7 IN (vt1.c0)) COLLATE RTRIM) ORDER BY LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.7506491378365483) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((9.7996518E7 IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.7506491378365483) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((9.7996518E7 IN (vt1.c0)) COLLATE RTRIM) ORDER BY LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.7506491378365483) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((9.7996518E7 IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.7506491378365483) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((9.7996518E7 IN (vt1.c0)) COLLATE RTRIM) ORDER BY LIKELIHOOD(DISTINCT vt0.c0 COLLATE RTRIM, 0.7506491378365483) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.lid) NOTNULL))AND((vt1.c0 IN ()))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid) NOTNULL))AND((vt1.c0 IN ()))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.lid) NOTNULL))AND((vt1.c0 IN ()))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid) NOTNULL))AND((vt1.c0 IN ()))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.lid) NOTNULL))AND((vt1.c0 IN ()))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0))+(LIKELY(vt1.lid))) WHERE (((((vt1.lid) NOTNULL))!=(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOTNULL))<>(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0))+(LIKELY(vt1.lid))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0))+(LIKELY(vt1.lid))) WHERE (((((vt1.lid) NOTNULL))!=(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOTNULL))<>(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0))+(LIKELY(vt1.lid))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((HEX(vt1.c0))+(LIKELY(vt1.lid))) WHERE (((((vt1.lid) NOTNULL))!=(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)))));
SELECT * FROM vt0, vt1 WHERE (HEX(DISTINCT ((vt0.c0)<<(vt0.c0)))) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE (HEX(DISTINCT ((vt0.c0)<<(vt0.c0)))) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE (HEX(DISTINCT ((vt0.c0)<<(vt0.c0)))) ORDER BY ((vt0.c0)|(vt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END THEN (- (vt1.c0)) ELSE vt1.lid COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END THEN (- (vt1.c0)) ELSE vt1.lid COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END THEN (- (vt1.c0)) ELSE vt1.lid COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END THEN (- (vt1.c0)) ELSE vt1.lid COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END THEN (- (vt1.c0)) ELSE vt1.lid COLLATE BINARY END);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt1.lid))<((vt1.c0))))) AND (((('2883440')>=(vt1.lid)))))) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt1.lid))<((vt1.c0))))) AND (((('2883440')>=(vt1.lid)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt1.lid))<((vt1.c0))))) AND (((('2883440')>=(vt1.lid)))))) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt1.lid))<((vt1.c0))))) AND (((('2883440')>=(vt1.lid)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt1.lid))<((vt1.c0))))) AND (((('2883440')>=(vt1.lid)))))) ORDER BY (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt1.lid)) ELSE TRIM(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt1.lid)) ELSE TRIM(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt1.lid)) ELSE TRIM(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt1.lid)) ELSE TRIM(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN (NOT (vt1.lid)) ELSE TRIM(vt1.c0) END);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)OR(json_extract(vt1.lid, 0.3019197171069661, vt1.c0, vt0.c0))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt1.lid)))OR(vt0.c0)))AND(vt1.lid))))) ORDER BY CAST((vt0.c0 IN ()) AS REAL) DESC  NULLS FIRST, ((((INSTR(vt0.c0, vt1.c0))AND(((vt0.c0)AND(vt1.lid)))))AND(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST, HEX(TOTAL_CHANGES()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(json_extract(vt1.lid, 0.3019197171069661, vt1.c0, vt0.c0))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt1.lid)))OR(vt0.c0)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((vt0.c0 IN ()) AS REAL) DESC  NULLS FIRST, ((((INSTR(vt0.c0, vt1.c0))AND(((vt0.c0)AND(vt1.lid)))))AND(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST, HEX(TOTAL_CHANGES()) DESC);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)OR(json_extract(vt1.lid, 0.3019197171069661, vt1.c0, vt0.c0))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt1.lid)))OR(vt0.c0)))AND(vt1.lid))))) ORDER BY CAST((vt0.c0 IN ()) AS REAL) DESC  NULLS FIRST, ((((INSTR(vt0.c0, vt1.c0))AND(((vt0.c0)AND(vt1.lid)))))AND(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST, HEX(TOTAL_CHANGES()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(json_extract(vt1.lid, 0.3019197171069661, vt1.c0, vt0.c0))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt1.lid)))OR(vt0.c0)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((vt0.c0 IN ()) AS REAL) DESC  NULLS FIRST, ((((INSTR(vt0.c0, vt1.c0))AND(((vt0.c0)AND(vt1.lid)))))AND(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST, HEX(TOTAL_CHANGES()) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)<=(vt1.c0)) IN (0.45475561091381345))) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt1.c0)) IN (0.45475561091381345))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)<=(vt1.c0)) IN (0.45475561091381345))) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt1.c0)) IN (0.45475561091381345))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)<=(vt1.c0)) IN (0.45475561091381345))) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt1.lid AS BLOB))) AND ((vt0.c0))) WHERE (((((-1.184234647E9)OR(((((((((vt1.lid)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.lid)))))AND(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((-1.184234647E9)OR(((((((((vt1.lid)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.lid)))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt1.lid AS BLOB))) AND ((vt0.c0))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt1.lid AS BLOB))) AND ((vt0.c0))) WHERE (((((-1.184234647E9)OR(((((((((vt1.lid)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.lid)))))AND(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((-1.184234647E9)OR(((((((((vt1.lid)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.lid)))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt1.lid AS BLOB))) AND ((vt0.c0))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CAST(vt1.lid AS BLOB))) AND ((vt0.c0))) WHERE (((((-1.184234647E9)OR(((((((((vt1.lid)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.lid)))))AND(((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ('+z鐳');
SELECT SUM(count) FROM (SELECT (('+z鐳') IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('+z鐳');
SELECT SUM(count) FROM (SELECT (('+z鐳') IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('+z鐳');
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.c0)))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY CASE WHEN vt1.lid COLLATE RTRIM THEN vt1.lid COLLATE BINARY WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt1.c0 COLLATE RTRIM WHEN CAST(NULL AS TEXT) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (0xfffffffff969af8d) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt0.c0)) END DESC, CASE ((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN ((vt0.c0)=(vt1.c0)) THEN NULL COLLATE RTRIM WHEN (vt1.lid IN ()) THEN (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN (((vt1.lid, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (('~G') BETWEEN (x'') AND (vt0.c0)) ELSE ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)) END ASC  NULLS LAST, ((CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END) BETWEEN (((vt1.lid)AND(vt1.c0))) AND ((vt1.lid IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.c0)))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt1.lid COLLATE RTRIM THEN vt1.lid COLLATE BINARY WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt1.c0 COLLATE RTRIM WHEN CAST(NULL AS TEXT) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (0xfffffffff969af8d) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt0.c0)) END DESC, CASE ((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN ((vt0.c0)=(vt1.c0)) THEN NULL COLLATE RTRIM WHEN (vt1.lid IN ()) THEN (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN (((vt1.lid, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (('~G') BETWEEN (x'') AND (vt0.c0)) ELSE ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)) END ASC  NULLS LAST, ((CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END) BETWEEN (((vt1.lid)AND(vt1.c0))) AND ((vt1.lid IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.c0)))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY CASE WHEN vt1.lid COLLATE RTRIM THEN vt1.lid COLLATE BINARY WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt1.c0 COLLATE RTRIM WHEN CAST(NULL AS TEXT) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (0xfffffffff969af8d) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt0.c0)) END DESC, CASE ((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN ((vt0.c0)=(vt1.c0)) THEN NULL COLLATE RTRIM WHEN (vt1.lid IN ()) THEN (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN (((vt1.lid, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (('~G') BETWEEN (x'') AND (vt0.c0)) ELSE ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)) END ASC  NULLS LAST, ((CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END) BETWEEN (((vt1.lid)AND(vt1.c0))) AND ((vt1.lid IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.c0)))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt1.lid COLLATE RTRIM THEN vt1.lid COLLATE BINARY WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt1.c0 COLLATE RTRIM WHEN CAST(NULL AS TEXT) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (0xfffffffff969af8d) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt0.c0)) END DESC, CASE ((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN ((vt0.c0)=(vt1.c0)) THEN NULL COLLATE RTRIM WHEN (vt1.lid IN ()) THEN (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN (((vt1.lid, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (('~G') BETWEEN (x'') AND (vt0.c0)) ELSE ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)) END ASC  NULLS LAST, ((CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END) BETWEEN (((vt1.lid)AND(vt1.c0))) AND ((vt1.lid IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.c0)))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY CASE WHEN vt1.lid COLLATE RTRIM THEN vt1.lid COLLATE BINARY WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt1.c0 COLLATE RTRIM WHEN CAST(NULL AS TEXT) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt1.c0) NOT BETWEEN (0xfffffffff969af8d) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)IS(vt0.c0)) END DESC, CASE ((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN ((vt0.c0)=(vt1.c0)) THEN NULL COLLATE RTRIM WHEN (vt1.lid IN ()) THEN (((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) WHEN (((vt1.lid, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.lid)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN (('~G') BETWEEN (x'') AND (vt0.c0)) ELSE ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)) END ASC  NULLS LAST, ((CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END) BETWEEN (((vt1.lid)AND(vt1.c0))) AND ((vt1.lid IN (vt0.c0))));
SELECT * FROM vt0 WHERE (0.8962137017579426);
SELECT SUM(count) FROM (SELECT ALL ((0.8962137017579426) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.8962137017579426);
SELECT SUM(count) FROM (SELECT ALL ((0.8962137017579426) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.8962137017579426);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (+ (((vt1.lid)<=(vt0.c0)))) WHERE (LIKELY(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY vt1.lid ASC  NULLS FIRST, (CASE 't<O'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid WHEN 8.41777477E8 THEN vt1.lid ELSE vt1.lid END IN (((vt1.lid)&(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (+ (((vt1.lid)<=(vt0.c0)))) ORDER BY vt1.lid ASC  NULLS FIRST, (CASE 't<O'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid WHEN 8.41777477E8 THEN vt1.lid ELSE vt1.lid END IN (((vt1.lid)&(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (+ (((vt1.lid)<=(vt0.c0)))) WHERE (LIKELY(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY vt1.lid ASC  NULLS FIRST, (CASE 't<O'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid WHEN 8.41777477E8 THEN vt1.lid ELSE vt1.lid END IN (((vt1.lid)&(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (+ (((vt1.lid)<=(vt0.c0)))) ORDER BY vt1.lid ASC  NULLS FIRST, (CASE 't<O'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid WHEN 8.41777477E8 THEN vt1.lid ELSE vt1.lid END IN (((vt1.lid)&(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (+ (((vt1.lid)<=(vt0.c0)))) WHERE (LIKELY(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY vt1.lid ASC  NULLS FIRST, (CASE 't<O'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid WHEN 8.41777477E8 THEN vt1.lid ELSE vt1.lid END IN (((vt1.lid)&(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ORDER BY NULLIF(DISTINCT vt1.lid, vt1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY NULLIF(DISTINCT vt1.lid, vt1.c0) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ORDER BY NULLIF(DISTINCT vt1.lid, vt1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY NULLIF(DISTINCT vt1.lid, vt1.c0) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ORDER BY NULLIF(DISTINCT vt1.lid, vt1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (-1.604655991E9) ORDER BY x'd716' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.604655991E9) IS TRUE)  as count FROM vt0 ORDER BY x'd716' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (-1.604655991E9) ORDER BY x'd716' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.604655991E9) IS TRUE)  as count FROM vt0 ORDER BY x'd716' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (-1.604655991E9) ORDER BY x'd716' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.lid)%(vt1.lid))))<((('-1166980412' IN ()))))) ORDER BY (((vt1.lid)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c0))<=((x'')))))) DESC, CAST((('1646871378') NOT BETWEEN (vt1.c0) AND (vt1.lid)) AS INTEGER), vt1.lid ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.lid)%(vt1.lid))))<((('-1166980412' IN ()))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c0))<=((x'')))))) DESC, CAST((('1646871378') NOT BETWEEN (vt1.c0) AND (vt1.lid)) AS INTEGER), vt1.lid ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.lid)%(vt1.lid))))<((('-1166980412' IN ()))))) ORDER BY (((vt1.lid)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c0))<=((x'')))))) DESC, CAST((('1646871378') NOT BETWEEN (vt1.c0) AND (vt1.lid)) AS INTEGER), vt1.lid ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.lid)%(vt1.lid))))<((('-1166980412' IN ()))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c0))<=((x'')))))) DESC, CAST((('1646871378') NOT BETWEEN (vt1.c0) AND (vt1.lid)) AS INTEGER), vt1.lid ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.lid)%(vt1.lid))))<((('-1166980412' IN ()))))) ORDER BY (((vt1.lid)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c0))<=((x'')))))) DESC, CAST((('1646871378') NOT BETWEEN (vt1.c0) AND (vt1.lid)) AS INTEGER), vt1.lid ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid)OR(((vt1.c0) NOT NULL))))OR(NULL))) ORDER BY CAST(((vt1.lid)IS(vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)OR(((vt1.c0) NOT NULL))))OR(NULL))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.lid)IS(vt1.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid)OR(((vt1.c0) NOT NULL))))OR(NULL))) ORDER BY CAST(((vt1.lid)IS(vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)OR(((vt1.c0) NOT NULL))))OR(NULL))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.lid)IS(vt1.c0)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid)OR(((vt1.c0) NOT NULL))))OR(NULL))) ORDER BY CAST(((vt1.lid)IS(vt1.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.lid);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON 0x2ef09772 WHERE ((-110514291 IN ())) ORDER BY (((vt1.lid IN ()))>>(vt0.c0)) ASC, x'' ASC, ((((CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 END)OR((NOT (x'9a3d')))))OR((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((-110514291 IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON 0x2ef09772 ORDER BY (((vt1.lid IN ()))>>(vt0.c0)) ASC, x'' ASC, ((((CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 END)OR((NOT (x'9a3d')))))OR((NOT (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON 0x2ef09772 WHERE ((-110514291 IN ())) ORDER BY (((vt1.lid IN ()))>>(vt0.c0)) ASC, x'' ASC, ((((CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 END)OR((NOT (x'9a3d')))))OR((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((-110514291 IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON 0x2ef09772 ORDER BY (((vt1.lid IN ()))>>(vt0.c0)) ASC, x'' ASC, ((((CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 END)OR((NOT (x'9a3d')))))OR((NOT (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON 0x2ef09772 WHERE ((-110514291 IN ())) ORDER BY (((vt1.lid IN ()))>>(vt0.c0)) ASC, x'' ASC, ((((CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 END)OR((NOT (x'9a3d')))))OR((NOT (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))AND(vt0.c0))) ORDER BY '-2082343368'  NULLS FIRST, ((vt0.c0)LIKE(((vt0.c0) IS FALSE))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY '-2082343368'  NULLS FIRST, ((vt0.c0)LIKE(((vt0.c0) IS FALSE))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))AND(vt0.c0))) ORDER BY '-2082343368'  NULLS FIRST, ((vt0.c0)LIKE(((vt0.c0) IS FALSE))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY '-2082343368'  NULLS FIRST, ((vt0.c0)LIKE(((vt0.c0) IS FALSE))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))AND(vt0.c0))) ORDER BY '-2082343368'  NULLS FIRST, ((vt0.c0)LIKE(((vt0.c0) IS FALSE))) ASC, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON LTRIM(vt1.lid) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON LTRIM(vt1.lid));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON LTRIM(vt1.lid) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON LTRIM(vt1.lid));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON LTRIM(vt1.lid) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((- (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST, ((((NULL)AND(LIKELIHOOD(NULL, 0.2217286945665674))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST, ((((NULL)AND(LIKELIHOOD(NULL, 0.2217286945665674))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((- (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST, ((((NULL)AND(LIKELIHOOD(NULL, 0.2217286945665674))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST, ((((NULL)AND(LIKELIHOOD(NULL, 0.2217286945665674))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((- (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST, ((((NULL)AND(LIKELIHOOD(NULL, 0.2217286945665674))))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((- (TRIM(vt1.lid, NULL))));
SELECT SUM(count) FROM (SELECT (((- (TRIM(vt1.lid, NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (TRIM(vt1.lid, NULL))));
SELECT SUM(count) FROM (SELECT (((- (TRIM(vt1.lid, NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (TRIM(vt1.lid, NULL))));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (STRFTIME(vt0.c0, vt1.c0, vt1.lid, NULL, vt1.lid) IN (NULLIF(vt1.c0, vt1.lid))) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((8.08900448E8 IN ())))) ORDER BY ((((CAST(vt1.lid AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid ELSE vt0.c0 END)))OR((((vt1.lid))=((vt1.lid))))), ((NULL)+(((vt0.c0)+(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((8.08900448E8 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (STRFTIME(vt0.c0, vt1.c0, vt1.lid, NULL, vt1.lid) IN (NULLIF(vt1.c0, vt1.lid))) ORDER BY ((((CAST(vt1.lid AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid ELSE vt0.c0 END)))OR((((vt1.lid))=((vt1.lid))))), ((NULL)+(((vt0.c0)+(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (STRFTIME(vt0.c0, vt1.c0, vt1.lid, NULL, vt1.lid) IN (NULLIF(vt1.c0, vt1.lid))) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((8.08900448E8 IN ())))) ORDER BY ((((CAST(vt1.lid AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid ELSE vt0.c0 END)))OR((((vt1.lid))=((vt1.lid))))), ((NULL)+(((vt0.c0)+(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((8.08900448E8 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (STRFTIME(vt0.c0, vt1.c0, vt1.lid, NULL, vt1.lid) IN (NULLIF(vt1.c0, vt1.lid))) ORDER BY ((((CAST(vt1.lid AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid ELSE vt0.c0 END)))OR((((vt1.lid))=((vt1.lid))))), ((NULL)+(((vt0.c0)+(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (STRFTIME(vt0.c0, vt1.c0, vt1.lid, NULL, vt1.lid) IN (NULLIF(vt1.c0, vt1.lid))) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((8.08900448E8 IN ())))) ORDER BY ((((CAST(vt1.lid AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid ELSE vt0.c0 END)))OR((((vt1.lid))=((vt1.lid))))), ((NULL)+(((vt0.c0)+(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)!=(vt1.lid)))<=((vt1.lid IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<>(vt1.lid)))<=((vt1.lid IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)!=(vt1.lid)))<=((vt1.lid IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<>(vt1.lid)))<=((vt1.lid IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)!=(vt1.lid)))<=((vt1.lid IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (x'' COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(HEX(vt0.c0))))AND(HEX(DISTINCT vt0.c0))) DESC, (NOT (x'295f' COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(HEX(vt0.c0))))AND(HEX(DISTINCT vt0.c0))) DESC, (NOT (x'295f' COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(HEX(vt0.c0))))AND(HEX(DISTINCT vt0.c0))) DESC, (NOT (x'295f' COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(HEX(vt0.c0))))AND(HEX(DISTINCT vt0.c0))) DESC, (NOT (x'295f' COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(HEX(vt0.c0))))AND(HEX(DISTINCT vt0.c0))) DESC, (NOT (x'295f' COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)OR(((((((((((((((((vt1.lid)OR('-1604655991')))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)OR(((((((((((((((((vt1.lid)OR('-1604655991')))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)OR(((((((((((((((((vt1.lid)OR('-1604655991')))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)OR(((((((((((((((((vt1.lid)OR('-1604655991')))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)OR(((((((((((((((((vt1.lid)OR('-1604655991')))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))) ORDER BY (~ ((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))) ORDER BY (~ ((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (TYPEOF(DISTINCT ((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))) ORDER BY (~ ((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))) ASC, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)IS(vt0.c0)), x'5c96')) AND (((vt0.c0 IN ()), (+ (vt0.c0)), (vt0.c0 IN (0.45475561091381345, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)IS(vt0.c0)), x'5c96')) AND (((vt0.c0 IN ()), (+ (vt0.c0)), (vt0.c0 IN (0.45475561091381345, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)IS(vt0.c0)), x'5c96')) AND (((vt0.c0 IN ()), (+ (vt0.c0)), (vt0.c0 IN (0.45475561091381345, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)IS(vt0.c0)), x'5c96')) AND (((vt0.c0 IN ()), (+ (vt0.c0)), (vt0.c0 IN (0.45475561091381345, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)IS(vt0.c0)), x'5c96')) AND (((vt0.c0 IN ()), (+ (vt0.c0)), (vt0.c0 IN (0.45475561091381345, vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)>>(vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)>>(vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((((NULL)AND(vt1.lid)))AND(vt0.c0))) AND (vt1.lid))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((((NULL)AND(vt1.lid)))AND(vt0.c0))) AND (vt1.lid))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((((NULL)AND(vt1.lid)))AND(vt0.c0))) AND (vt1.lid))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((((NULL)AND(vt1.lid)))AND(vt0.c0))) AND (vt1.lid))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((((NULL)AND(vt1.lid)))AND(vt0.c0))) AND (vt1.lid))) ORDER BY vt1.c0 DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(0.07022583136476568 AS TEXT) THEN (~ (vt0.c0)) END) ORDER BY 0.728436900597737 COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(0.07022583136476568 AS TEXT) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY 0.728436900597737 COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(0.07022583136476568 AS TEXT) THEN (~ (vt0.c0)) END) ORDER BY 0.728436900597737 COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(0.07022583136476568 AS TEXT) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY 0.728436900597737 COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(0.07022583136476568 AS TEXT) THEN (~ (vt0.c0)) END) ORDER BY 0.728436900597737 COLLATE BINARY COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)*('787519346')), NULL, vt1.lid COLLATE BINARY))>((CAST(2051997489 AS BLOB), QUOTE(vt1.c0), (((vt1.c0))>((vt1.lid)))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)*('787519346')), NULL, vt1.lid COLLATE BINARY))>((CAST(2051997489 AS BLOB), QUOTE(vt1.c0), (((vt1.c0))>((vt1.lid))))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)*('787519346')), NULL, vt1.lid COLLATE BINARY))>((CAST(2051997489 AS BLOB), QUOTE(vt1.c0), (((vt1.c0))>((vt1.lid)))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)*('787519346')), NULL, vt1.lid COLLATE BINARY))>((CAST(2051997489 AS BLOB), QUOTE(vt1.c0), (((vt1.c0))>((vt1.lid))))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)*('787519346')), NULL, vt1.lid COLLATE BINARY))>((CAST(2051997489 AS BLOB), QUOTE(vt1.c0), (((vt1.c0))>((vt1.lid)))))));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))LIKE(CAST(vt1.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))LIKE(CAST(vt1.lid AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))LIKE(CAST(vt1.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))LIKE(CAST(vt1.lid AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))LIKE(CAST(vt1.lid AS INTEGER))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)=(vt1.lid)) AS TEXT)) ORDER BY ((CAST(vt1.lid AS INTEGER))GLOB(((((vt1.lid)AND(vt1.lid)))AND(vt1.lid)))) ASC, CAST(CASE WHEN vt1.lid THEN vt1.lid END AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)=(vt1.lid)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.lid AS INTEGER))GLOB(((((vt1.lid)AND(vt1.lid)))AND(vt1.lid)))) ASC, CAST(CASE WHEN vt1.lid THEN vt1.lid END AS TEXT) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)=(vt1.lid)) AS TEXT)) ORDER BY ((CAST(vt1.lid AS INTEGER))GLOB(((((vt1.lid)AND(vt1.lid)))AND(vt1.lid)))) ASC, CAST(CASE WHEN vt1.lid THEN vt1.lid END AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)=(vt1.lid)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.lid AS INTEGER))GLOB(((((vt1.lid)AND(vt1.lid)))AND(vt1.lid)))) ASC, CAST(CASE WHEN vt1.lid THEN vt1.lid END AS TEXT) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)=(vt1.lid)) AS TEXT)) ORDER BY ((CAST(vt1.lid AS INTEGER))GLOB(((((vt1.lid)AND(vt1.lid)))AND(vt1.lid)))) ASC, CAST(CASE WHEN vt1.lid THEN vt1.lid END AS TEXT) DESC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))/(TRIM(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))/(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))/(TRIM(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))/(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))/(TRIM(DISTINCT vt0.c0)))) ORDER BY ((vt0.c0 IN ()) IN ());
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0))==((vt1.lid))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0))=((vt1.lid))) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0))==((vt1.lid))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0))=((vt1.lid))) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0))==((vt1.lid))) AS BLOB));
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)+(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)+(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)+(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)+(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)+(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ('' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ('' COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((('1&') BETWEEN (((vt1.lid)GLOB(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid END))) ORDER BY x'c714' DESC  NULLS FIRST, LIKELIHOOD(0.6787023197822043, 0.8920892919688157) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('1&') BETWEEN (((vt1.lid)GLOB(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid END))) IS TRUE)  as count FROM vt1 ORDER BY x'c714' DESC  NULLS FIRST, LIKELIHOOD(0.6787023197822043, 0.8920892919688157) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((('1&') BETWEEN (((vt1.lid)GLOB(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid END))) ORDER BY x'c714' DESC  NULLS FIRST, LIKELIHOOD(0.6787023197822043, 0.8920892919688157) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('1&') BETWEEN (((vt1.lid)GLOB(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid END))) IS TRUE)  as count FROM vt1 ORDER BY x'c714' DESC  NULLS FIRST, LIKELIHOOD(0.6787023197822043, 0.8920892919688157) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((('1&') BETWEEN (((vt1.lid)GLOB(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid END))) ORDER BY x'c714' DESC  NULLS FIRST, LIKELIHOOD(0.6787023197822043, 0.8920892919688157) DESC;
SELECT * FROM vt0 WHERE ((- (((vt0.c0)|(vt0.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT * FROM vt0 WHERE ((- (((vt0.c0)|(vt0.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT * FROM vt0 WHERE ((- (((vt0.c0)|(vt0.c0))))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (vt1.lid IN ()) WHERE (TRIM(DISTINCT (NOT (vt1.lid)), -2042734650)) ORDER BY COALESCE((((vt1.lid, vt1.c0, vt1.c0))!=((vt0.c0, vt1.lid, vt1.lid))), (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (vt1.lid)), -2042734650)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (vt1.lid IN ()) ORDER BY COALESCE((((vt1.lid, vt1.c0, vt1.c0))!=((vt0.c0, vt1.lid, vt1.lid))), (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (vt1.lid IN ()) WHERE (TRIM(DISTINCT (NOT (vt1.lid)), -2042734650)) ORDER BY COALESCE((((vt1.lid, vt1.c0, vt1.c0))!=((vt0.c0, vt1.lid, vt1.lid))), (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (vt1.lid)), -2042734650)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (vt1.lid IN ()) ORDER BY COALESCE((((vt1.lid, vt1.c0, vt1.c0))!=((vt0.c0, vt1.lid, vt1.lid))), (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (vt1.lid IN ()) WHERE (TRIM(DISTINCT (NOT (vt1.lid)), -2042734650)) ORDER BY COALESCE((((vt1.lid, vt1.c0, vt1.c0))!=((vt0.c0, vt1.lid, vt1.lid))), (vt0.c0 IN ()));
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid)%(vt0.c0))) ISNULL)) ORDER BY vt1.lid COLLATE RTRIM, TOTAL_CHANGES() ASC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)>(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)%(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.lid COLLATE RTRIM, TOTAL_CHANGES() ASC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)>(vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid)%(vt0.c0))) ISNULL)) ORDER BY vt1.lid COLLATE RTRIM, TOTAL_CHANGES() ASC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)>(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)%(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.lid COLLATE RTRIM, TOTAL_CHANGES() ASC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)>(vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid)%(vt0.c0))) ISNULL)) ORDER BY vt1.lid COLLATE RTRIM, TOTAL_CHANGES() ASC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0)>(vt0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.lid AS INTEGER)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.lid AS INTEGER)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.lid AS INTEGER)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.lid AS INTEGER)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.lid AS INTEGER)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE NOCASE;
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))%(vt0.c0 COLLATE BINARY))) ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))%(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))%(vt0.c0 COLLATE BINARY))) ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))%(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))%(vt0.c0 COLLATE BINARY))) ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE ((vt0.c0)/(vt0.c0)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (TYPEOF(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (TYPEOF(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (TYPEOF(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (0X1266faa0);
SELECT SUM(count) FROM (SELECT ((0x1266faa0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0X1266faa0);
SELECT SUM(count) FROM (SELECT ((0x1266faa0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0X1266faa0);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT (((((((('1289128603')OR(vt0.c0)))OR(0.46351653349408617)))AND(vt0.c0)))AND(vt1.lid))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT (((((((('1289128603')OR(vt0.c0)))OR(0.46351653349408617)))AND(vt0.c0)))AND(vt1.lid))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT (((((((('1289128603')OR(vt0.c0)))OR(0.46351653349408617)))AND(vt0.c0)))AND(vt1.lid))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT (((((((('1289128603')OR(vt0.c0)))OR(0.46351653349408617)))AND(vt0.c0)))AND(vt1.lid))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT (((((((('1289128603')OR(vt0.c0)))OR(0.46351653349408617)))AND(vt0.c0)))AND(vt1.lid))) WHERE (vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((((vt1.lid)OR(vt1.c0)))AND(vt1.lid)) AS REAL)) ORDER BY CAST(((vt1.lid)-(x'055b')) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.lid)OR(vt1.c0)))AND(vt1.lid)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.lid)-(x'055b')) AS TEXT) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((((vt1.lid)OR(vt1.c0)))AND(vt1.lid)) AS REAL)) ORDER BY CAST(((vt1.lid)-(x'055b')) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.lid)OR(vt1.c0)))AND(vt1.lid)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.lid)-(x'055b')) AS TEXT) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((((vt1.lid)OR(vt1.c0)))AND(vt1.lid)) AS REAL)) ORDER BY CAST(((vt1.lid)-(x'055b')) AS TEXT) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND(CAST('km' AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND(CAST('km' AS NUMERIC))) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND(CAST('km' AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND(CAST('km' AS NUMERIC))) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND(CAST('km' AS NUMERIC))) DESC;
SELECT ALL * FROM vt1 WHERE ('aL^3') ORDER BY CASE 0.030381203797998246  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))AND('1289128603')) THEN vt1.lid END DESC, (((((8.08900448E8) IS TRUE)))<((((((((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ASC, ((CAST(vt1.c0 AS REAL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (('aL^3') IS TRUE)  as count FROM vt1 ORDER BY CASE 0.030381203797998246  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))AND('1289128603')) THEN vt1.lid END DESC, (((((8.08900448E8) IS TRUE)))<((((((((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ASC, ((CAST(vt1.c0 AS REAL)) IS FALSE) ASC);
SELECT ALL * FROM vt1 WHERE ('aL^3') ORDER BY CASE 0.030381203797998246  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))AND('1289128603')) THEN vt1.lid END DESC, (((((8.08900448E8) IS TRUE)))<((((((((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ASC, ((CAST(vt1.c0 AS REAL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (('aL^3') IS TRUE)  as count FROM vt1 ORDER BY CASE 0.030381203797998246  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))AND('1289128603')) THEN vt1.lid END DESC, (((((8.08900448E8) IS TRUE)))<((((((((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ASC, ((CAST(vt1.c0 AS REAL)) IS FALSE) ASC);
SELECT ALL * FROM vt1 WHERE ('aL^3') ORDER BY CASE 0.030381203797998246  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))AND('1289128603')) THEN vt1.lid END DESC, (((((8.08900448E8) IS TRUE)))<((((((((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ASC, ((CAST(vt1.c0 AS REAL)) IS FALSE) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((((((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)))OR(NULL)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))))) ORDER BY DATE(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE x'' END, (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((((((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)))OR(NULL)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY DATE(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE x'' END, (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((((((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)))OR(NULL)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))))) ORDER BY DATE(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE x'' END, (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((((((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)))OR(NULL)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY DATE(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE x'' END, (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((((((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)))OR(NULL)))OR(vt0.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))))) ORDER BY DATE(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE x'' END, (vt1.c0 IN (vt1.c0)), vt1.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)GLOB(vt0.c0))))>((vt0.c0)))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)GLOB(vt0.c0))))>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)GLOB(vt0.c0))))>((vt0.c0)))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)GLOB(vt0.c0))))>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)GLOB(vt0.c0))))>((vt0.c0)))) ORDER BY (NULL IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((LOWER(vt0.c0) IN ())) ORDER BY GLOB(TRIM(DISTINCT vt1.lid), ((vt1.c0)GLOB(vt1.c0))) ASC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((vt0.c0 IN ())))) ASC, ((vt1.c0 IN (0.40624444051984576)) IN (((vt1.lid)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((LOWER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY GLOB(TRIM(DISTINCT vt1.lid), ((vt1.c0)GLOB(vt1.c0))) ASC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((vt0.c0 IN ())))) ASC, ((vt1.c0 IN (0.40624444051984576)) IN (((vt1.lid)*(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((LOWER(vt0.c0) IN ())) ORDER BY GLOB(TRIM(DISTINCT vt1.lid), ((vt1.c0)GLOB(vt1.c0))) ASC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((vt0.c0 IN ())))) ASC, ((vt1.c0 IN (0.40624444051984576)) IN (((vt1.lid)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((LOWER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY GLOB(TRIM(DISTINCT vt1.lid), ((vt1.c0)GLOB(vt1.c0))) ASC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((vt0.c0 IN ())))) ASC, ((vt1.c0 IN (0.40624444051984576)) IN (((vt1.lid)*(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((LOWER(vt0.c0) IN ())) ORDER BY GLOB(TRIM(DISTINCT vt1.lid), ((vt1.c0)GLOB(vt1.c0))) ASC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((vt0.c0 IN ())))) ASC, ((vt1.c0 IN (0.40624444051984576)) IN (((vt1.lid)*(vt0.c0)))) ASC;
SELECT ALL * FROM vt1 WHERE (((NULL)GLOB(json_array(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(json_array(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (((NULL)GLOB(json_array(vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(json_array(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((x'dabb')AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL)  NULLS LAST, CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN LIKE(vt0.c0, vt0.c0) ELSE CASE '1786683397'  WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((x'dabb')AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL)  NULLS LAST, CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN LIKE(vt0.c0, vt0.c0) ELSE CASE '1786683397'  WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((x'dabb')AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL)  NULLS LAST, CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN LIKE(vt0.c0, vt0.c0) ELSE CASE '1786683397'  WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((x'dabb')AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL)  NULLS LAST, CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN LIKE(vt0.c0, vt0.c0) ELSE CASE '1786683397'  WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((x'dabb')AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT NULL)  NULLS LAST, CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN LIKE(vt0.c0, vt0.c0) ELSE CASE '1786683397'  WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>>(((NULL)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))>>(((NULL)+(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>>(((NULL)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))>>(((NULL)+(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))>>(((NULL)+(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE 0.9817009839281157  WHEN CAST(vt1.lid AS BLOB) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)) ELSE CASE NULL  WHEN vt1.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.9817009839281157  WHEN CAST(vt1.lid AS BLOB) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)) ELSE CASE NULL  WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE 0.9817009839281157  WHEN CAST(vt1.lid AS BLOB) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)) ELSE CASE NULL  WHEN vt1.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.9817009839281157  WHEN CAST(vt1.lid AS BLOB) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)) ELSE CASE NULL  WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE 0.9817009839281157  WHEN CAST(vt1.lid AS BLOB) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)) ELSE CASE NULL  WHEN vt1.c0 THEN vt1.c0 END END);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((((vt1.lid, vt1.c0, vt1.c0))<=((vt1.c0, '', vt1.c0)))) AND ((- (-1883156559)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((((vt1.lid, vt1.c0, vt1.c0))<=((vt1.c0, '', vt1.c0)))) AND ((- (-1883156559)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((((vt1.lid, vt1.c0, vt1.c0))<=((vt1.c0, '', vt1.c0)))) AND ((- (-1883156559)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((((vt1.lid, vt1.c0, vt1.c0))<=((vt1.c0, '', vt1.c0)))) AND ((- (-1883156559)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((((vt1.lid, vt1.c0, vt1.c0))<=((vt1.c0, '', vt1.c0)))) AND ((- (-1883156559)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC, (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE WHERE (((CAST(vt1.c0 AS INTEGER))<=(CAST(vt1.lid AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))<=(CAST(vt1.lid AS REAL)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE WHERE (((CAST(vt1.c0 AS INTEGER))<=(CAST(vt1.lid AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))<=(CAST(vt1.lid AS REAL)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE WHERE (((CAST(vt1.c0 AS INTEGER))<=(CAST(vt1.lid AS REAL))));
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((x'') BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT ALL * FROM vt0, vt1 WHERE ((((- ('-2072657426'))) NOT BETWEEN ('787519346' COLLATE BINARY) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((- ('-2072657426'))) NOT BETWEEN ('787519346' COLLATE BINARY) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((- ('-2072657426'))) NOT BETWEEN ('787519346' COLLATE BINARY) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((- ('-2072657426'))) NOT BETWEEN ('787519346' COLLATE BINARY) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((- ('-2072657426'))) NOT BETWEEN ('787519346' COLLATE BINARY) AND (((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.lid IN ()) COLLATE RTRIM) ORDER BY ((((vt1.lid) BETWEEN (vt1.c0) AND (vt1.lid)))LIKE((~ (vt1.c0)))) ASC, ((vt1.lid)IS(vt1.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.lid END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((vt1.lid IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid) BETWEEN (vt1.c0) AND (vt1.lid)))LIKE((~ (vt1.c0)))) ASC, ((vt1.lid)IS(vt1.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.lid END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.lid IN ()) COLLATE RTRIM) ORDER BY ((((vt1.lid) BETWEEN (vt1.c0) AND (vt1.lid)))LIKE((~ (vt1.c0)))) ASC, ((vt1.lid)IS(vt1.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.lid END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((vt1.lid IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid) BETWEEN (vt1.c0) AND (vt1.lid)))LIKE((~ (vt1.c0)))) ASC, ((vt1.lid)IS(vt1.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.lid END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.lid IN ()) COLLATE RTRIM) ORDER BY ((((vt1.lid) BETWEEN (vt1.c0) AND (vt1.lid)))LIKE((~ (vt1.c0)))) ASC, ((vt1.lid)IS(vt1.c0)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN vt1.c0 THEN vt1.lid END COLLATE BINARY;
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((~ (HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (HEX(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((~ (HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (HEX(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 NOT INDEXED WHERE ((~ (HEX(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt1.lid, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, 0.27960666446060845))))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt1.lid, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, 0.27960666446060845)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt1.lid, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, 0.27960666446060845))))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt1.lid, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, 0.27960666446060845)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt1.lid, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, 0.27960666446060845))))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid) ORDER BY vt1.lid ASC;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid) ORDER BY vt1.lid ASC;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid) ORDER BY vt1.lid ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((TYPEOF(vt1.lid))*(((vt1.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TYPEOF(vt1.lid))*(((vt1.c0) NOTNULL))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((TYPEOF(vt1.lid))*(((vt1.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TYPEOF(vt1.lid))*(((vt1.c0) NOTNULL))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((TYPEOF(vt1.lid))*(((vt1.c0) NOTNULL))) DESC;
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0))<=((vt1.c0))) COLLATE NOCASE) ORDER BY (((vt1.c0, vt1.lid, 0.23303949813880698)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (NOT (vt1.lid)), CAST(x'' AS NUMERIC))) AND ((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)), ((vt0.c0) NOT BETWEEN (0.8275120967779621) AND (vt1.lid)), ((vt1.c0) IS FALSE)))) ASC, (+ (((((((((vt0.c0)AND(vt1.lid)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0, vt1.lid, 0.23303949813880698)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (NOT (vt1.lid)), CAST(x'' AS NUMERIC))) AND ((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)), ((vt0.c0) NOT BETWEEN (0.8275120967779621) AND (vt1.lid)), ((vt1.c0) IS FALSE)))) ASC, (+ (((((((((vt0.c0)AND(vt1.lid)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0))<=((vt1.c0))) COLLATE NOCASE) ORDER BY (((vt1.c0, vt1.lid, 0.23303949813880698)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (NOT (vt1.lid)), CAST(x'' AS NUMERIC))) AND ((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)), ((vt0.c0) NOT BETWEEN (0.8275120967779621) AND (vt1.lid)), ((vt1.c0) IS FALSE)))) ASC, (+ (((((((((vt0.c0)AND(vt1.lid)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0, vt1.lid, 0.23303949813880698)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (NOT (vt1.lid)), CAST(x'' AS NUMERIC))) AND ((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)), ((vt0.c0) NOT BETWEEN (0.8275120967779621) AND (vt1.lid)), ((vt1.c0) IS FALSE)))) ASC, (+ (((((((((vt0.c0)AND(vt1.lid)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0))<=((vt1.c0))) COLLATE NOCASE) ORDER BY (((vt1.c0, vt1.lid, 0.23303949813880698)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, (NOT (vt1.lid)), CAST(x'' AS NUMERIC))) AND ((((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)), ((vt0.c0) NOT BETWEEN (0.8275120967779621) AND (vt1.lid)), ((vt1.c0) IS FALSE)))) ASC, (+ (((((((((vt0.c0)AND(vt1.lid)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt1.c0, vt1.lid, NULL, '-1604655991')) NOT BETWEEN ((CAST(NULL AS TEXT), (- (vt1.lid)), (vt1.c0 IN (vt0.c0)), CAST(vt1.lid AS REAL), vt1.c0 COLLATE RTRIM)) AND (('oCTo', '戧{f	PWM', ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), '', CASE WHEN vt1.lid THEN vt1.lid END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt1.lid, NULL, '-1604655991')) NOT BETWEEN ((CAST(NULL AS TEXT), (- (vt1.lid)), (vt1.c0 IN (vt0.c0)), CAST(vt1.lid AS REAL), vt1.c0 COLLATE RTRIM)) AND (('oCTo', '戧{f	PWM', ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), '', CASE WHEN vt1.lid THEN vt1.lid END)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt1.c0, vt1.lid, NULL, '-1604655991')) NOT BETWEEN ((CAST(NULL AS TEXT), (- (vt1.lid)), (vt1.c0 IN (vt0.c0)), CAST(vt1.lid AS REAL), vt1.c0 COLLATE RTRIM)) AND (('oCTo', '戧{f	PWM', ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), '', CASE WHEN vt1.lid THEN vt1.lid END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt1.lid, NULL, '-1604655991')) NOT BETWEEN ((CAST(NULL AS TEXT), (- (vt1.lid)), (vt1.c0 IN (vt0.c0)), CAST(vt1.lid AS REAL), vt1.c0 COLLATE RTRIM)) AND (('oCTo', '戧{f	PWM', ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), '', CASE WHEN vt1.lid THEN vt1.lid END)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt1.c0, vt1.lid, NULL, '-1604655991')) NOT BETWEEN ((CAST(NULL AS TEXT), (- (vt1.lid)), (vt1.c0 IN (vt0.c0)), CAST(vt1.lid AS REAL), vt1.c0 COLLATE RTRIM)) AND (('oCTo', '戧{f	PWM', ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), '', CASE WHEN vt1.lid THEN vt1.lid END))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((x'')+(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')+(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((x'')+(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'')+(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((x'')+(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.lid AS NUMERIC)) NOT BETWEEN ((NOT (vt1.lid))) AND (((vt1.lid)<<(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.lid AS NUMERIC)) NOT BETWEEN ((NOT (vt1.lid))) AND (((vt1.lid)<<(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.lid AS NUMERIC)) NOT BETWEEN ((NOT (vt1.lid))) AND (((vt1.lid)<<(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.lid AS NUMERIC)) NOT BETWEEN ((NOT (vt1.lid))) AND (((vt1.lid)<<(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.lid AS NUMERIC)) NOT BETWEEN ((NOT (vt1.lid))) AND (((vt1.lid)<<(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ('z䷛v|/4ma');
SELECT SUM(count) FROM (SELECT (('z䷛v|/4ma') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('z䷛v|/4ma');
SELECT SUM(count) FROM (SELECT (('z䷛v|/4ma') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('z䷛v|/4ma');
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)IS(vt1.lid)))OR(((vt1.c0) NOTNULL))))OR((vt1.lid IN (vt1.lid)))))AND(vt1.lid)))OR(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)IS(vt1.lid)))OR(((vt1.c0) NOTNULL))))OR((vt1.lid IN (vt1.lid)))))AND(vt1.lid)))OR(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)IS(vt1.lid)))OR(((vt1.c0) NOTNULL))))OR((vt1.lid IN (vt1.lid)))))AND(vt1.lid)))OR(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)IS(vt1.lid)))OR(((vt1.c0) NOTNULL))))OR((vt1.lid IN (vt1.lid)))))AND(vt1.lid)))OR(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)IS(vt1.lid)))OR(((vt1.c0) NOTNULL))))OR((vt1.lid IN (vt1.lid)))))AND(vt1.lid)))OR(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (SQLITE_COMPILEOPTION_GET((NOT (vt1.lid)))) ORDER BY (~ (((vt1.lid)>=(vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((NOT (vt1.lid)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.lid)>=(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (SQLITE_COMPILEOPTION_GET((NOT (vt1.lid)))) ORDER BY (~ (((vt1.lid)>=(vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((NOT (vt1.lid)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.lid)>=(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (SQLITE_COMPILEOPTION_GET((NOT (vt1.lid)))) ORDER BY (~ (((vt1.lid)>=(vt1.lid))));
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS REAL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS REAL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS REAL)) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(')6' AS INTEGER))IS NOT((NOT (vt1.c0))))) ORDER BY ((((((vt1.lid)||(vt1.c0)))OR(((((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.lid)))OR(vt1.c0)))))AND(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(')6' AS INTEGER))IS NOT((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.lid)||(vt1.c0)))OR(((((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.lid)))OR(vt1.c0)))))AND(vt1.c0)) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(')6' AS INTEGER))IS NOT((NOT (vt1.c0))))) ORDER BY ((((((vt1.lid)||(vt1.c0)))OR(((((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.lid)))OR(vt1.c0)))))AND(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(')6' AS INTEGER))IS NOT((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.lid)||(vt1.c0)))OR(((((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.lid)))OR(vt1.c0)))))AND(vt1.c0)) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(')6' AS INTEGER))IS NOT((NOT (vt1.c0))))) ORDER BY ((((((vt1.lid)||(vt1.c0)))OR(((((((((((((vt1.lid)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.lid)))OR(vt1.c0)))))AND(vt1.c0)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(x'')))AND(vt1.lid)))AND(vt1.lid)))OR(x''))) NOT BETWEEN (vt1.c0) AND ((((vt1.lid))=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(x'')))AND(vt1.lid)))AND(vt1.lid)))OR(x''))) NOT BETWEEN (vt1.c0) AND ((((vt1.lid))==((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(x'')))AND(vt1.lid)))AND(vt1.lid)))OR(x''))) NOT BETWEEN (vt1.c0) AND ((((vt1.lid))=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(x'')))AND(vt1.lid)))AND(vt1.lid)))OR(x''))) NOT BETWEEN (vt1.c0) AND ((((vt1.lid))==((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(x'')))AND(vt1.lid)))AND(vt1.lid)))OR(x''))) NOT BETWEEN (vt1.c0) AND ((((vt1.lid))=((vt1.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE ((~ (vt1.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (vt1.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (vt1.lid COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), (('9u')&(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0) NOT NULL), (((vt0.c0))<=((vt0.c0))), ((vt0.c0) IS TRUE), ((vt0.c0)<<(vt0.c0)), (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY 0X322c8145, ((((((x'')&(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(HEX(DISTINCT vt0.c0))) DESC  NULLS FIRST, 0.5841106037043331  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), (('9u')&(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0) NOT NULL), (((vt0.c0))<=((vt0.c0))), ((vt0.c0) IS TRUE), ((vt0.c0)<<(vt0.c0)), (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY 0x322c8145, ((((((x'')&(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(HEX(DISTINCT vt0.c0))) DESC  NULLS FIRST, 0.5841106037043331  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), (('9u')&(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0) NOT NULL), (((vt0.c0))<=((vt0.c0))), ((vt0.c0) IS TRUE), ((vt0.c0)<<(vt0.c0)), (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) ORDER BY 0X322c8145, ((((((x'')&(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(HEX(DISTINCT vt0.c0))) DESC  NULLS FIRST, 0.5841106037043331  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), (('9u')&(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE NOCASE, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0) NOT NULL), (((vt0.c0))<=((vt0.c0))), ((vt0.c0) IS TRUE), ((vt0.c0)<<(vt0.c0)), (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY 0x322c8145, ((((((x'')&(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(HEX(DISTINCT vt0.c0))) DESC  NULLS FIRST, 0.5841106037043331  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0, vt1.lid, vt1.c0))<=((vt1.c0, vt1.lid, vt1.lid, vt1.lid, vt1.lid))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0, vt1.c0, vt1.c0, vt1.lid, vt1.c0))<=((vt1.c0, vt1.lid, vt1.lid, vt1.lid, vt1.lid))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0, vt1.lid, vt1.c0))<=((vt1.c0, vt1.lid, vt1.lid, vt1.lid, vt1.lid))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0, vt1.c0, vt1.c0, vt1.lid, vt1.c0))<=((vt1.c0, vt1.lid, vt1.lid, vt1.lid, vt1.lid))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0, vt1.lid, vt1.c0))<=((vt1.c0, vt1.lid, vt1.lid, vt1.lid, vt1.lid))) IN ()));
SELECT * FROM vt0 WHERE (((vt0.c0)|(x'')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|(x'')) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)|(x'')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|(x'')) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)|(x'')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((((vt0.c0)OR(vt0.c0)))AND('')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((((vt0.c0)OR(vt0.c0)))AND('')) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((((vt0.c0)OR(vt0.c0)))AND('')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((((vt0.c0)OR(vt0.c0)))AND('')) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((((vt0.c0)OR(vt0.c0)))AND('')) END);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)/(x'898a'))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)/(x'898a'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)/(x'898a'))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)/(x'898a'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)/(x'898a'))) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((x'' IN (vt1.lid, vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((x'' IN (vt1.lid, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((x'' IN (vt1.lid, vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((x'' IN (vt1.lid, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((x'' IN (vt1.lid, vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (')rS') ORDER BY (0.865167210172588 IN (vt1.lid)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((')rS') IS TRUE)  as count FROM vt1 ORDER BY (0.865167210172588 IN (vt1.lid)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (')rS') ORDER BY (0.865167210172588 IN (vt1.lid)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((')rS') IS TRUE)  as count FROM vt1 ORDER BY (0.865167210172588 IN (vt1.lid)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (')rS') ORDER BY (0.865167210172588 IN (vt1.lid)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)AND((+ (vt1.lid)))))OR(NULL))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND((+ (vt1.lid)))))OR(NULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (x''))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)AND((+ (vt1.lid)))))OR(NULL))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND((+ (vt1.lid)))))OR(NULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (x''))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)AND((+ (vt1.lid)))))OR(NULL))) ORDER BY (((~ (vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (x''))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0))))=(((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0))))==(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0))))=(((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0))))==(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0))))=(((NOT (vt0.c0))))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.lid COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.lid COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.lid COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.lid COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE vt1.lid COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.lid THEN (((vt1.c0))<>((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.lid THEN (((vt1.c0))!=((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.lid THEN (((vt1.c0))<>((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.lid THEN (((vt1.c0))!=((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.lid THEN (((vt1.c0))<>((vt0.c0))) ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY x'a20f' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY x'a20f' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY x'a20f' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY x'a20f' ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY x'a20f' ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((vt1.c0 IN ()))AND('1162818')))OR(((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))))OR('')))AND(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN ()))AND('1162818')))OR(((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))))OR('')))AND(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((vt1.c0 IN ()))AND('1162818')))OR(((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))))OR('')))AND(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN ()))AND('1162818')))OR(((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))))OR('')))AND(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((((vt1.c0 IN ()))AND('1162818')))OR(((((vt1.lid)OR(vt1.c0)))AND(vt1.c0)))))OR('')))AND(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN ('314902558') AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) BETWEEN ('314902558') AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN ('314902558') AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) BETWEEN ('314902558') AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN ('314902558') AND (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (TIME(NULL, vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TIME(NULL, vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TIME(NULL, vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TIME(NULL, vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TIME(NULL, vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END AS BLOB) WHERE ((((NULL)) BETWEEN (((vt1.lid IN ('	', vt1.c0)))) AND ((0.8275120967779621 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (((vt1.lid IN ('	', vt1.c0)))) AND ((0.8275120967779621 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END AS BLOB));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END AS BLOB) WHERE ((((NULL)) BETWEEN (((vt1.lid IN ('	', vt1.c0)))) AND ((0.8275120967779621 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (((vt1.lid IN ('	', vt1.c0)))) AND ((0.8275120967779621 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END AS BLOB));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END AS BLOB) WHERE ((((NULL)) BETWEEN (((vt1.lid IN ('	', vt1.c0)))) AND ((0.8275120967779621 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END COLLATE BINARY);
SELECT * FROM vt1 WHERE ((- (((vt1.lid)>(vt1.c0))))) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.lid)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()));
SELECT * FROM vt1 WHERE ((- (((vt1.lid)>(vt1.c0))))) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.lid)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()));
SELECT * FROM vt1 WHERE ((- (((vt1.lid)>(vt1.c0))))) ORDER BY (vt1.c0 IN ());
SELECT ALL COUNT(*) FROM vt1 WHERE ((LTRIM(vt1.c0, vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LTRIM(vt1.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((LTRIM(vt1.c0, vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LTRIM(vt1.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((LTRIM(vt1.c0, vt1.c0) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((((vt1.lid, vt0.c0, vt0.c0))<=((0.11814811477629639, vt1.c0, vt1.c0))))AND((('{\%빂0uCM~') IS FALSE))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.lid, vt0.c0, vt0.c0))<=((0.11814811477629639, vt1.c0, vt1.c0))))AND((('{\%빂0uCM~') IS FALSE))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((((vt1.lid, vt0.c0, vt0.c0))<=((0.11814811477629639, vt1.c0, vt1.c0))))AND((('{\%빂0uCM~') IS FALSE))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.lid, vt0.c0, vt0.c0))<=((0.11814811477629639, vt1.c0, vt1.c0))))AND((('{\%빂0uCM~') IS FALSE))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((((vt1.lid, vt0.c0, vt0.c0))<=((0.11814811477629639, vt1.c0, vt1.c0))))AND((('{\%빂0uCM~') IS FALSE))))OR(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt1 WHERE (vt1.lid) ORDER BY ((((vt1.c0) NOTNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL)) IS TRUE)  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.lid) ORDER BY ((((vt1.c0) NOTNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL)) IS TRUE)  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.lid) ORDER BY ((((vt1.c0) NOTNULL)) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.lid AS NUMERIC))*(vt0.c0 COLLATE NOCASE)) WHERE ((+ ((- ('')))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (''))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.lid AS NUMERIC))*(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.lid AS NUMERIC))*(vt0.c0 COLLATE NOCASE)) WHERE ((+ ((- ('')))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (''))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.lid AS NUMERIC))*(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((CAST(vt1.lid AS NUMERIC))*(vt0.c0 COLLATE NOCASE)) WHERE ((+ ((- ('')))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt1.lid AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c0)>(NULL)) THEN (~ ('dy{+Q6ꀅ')) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt1.lid AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt0.c0)>(NULL)) THEN (~ ('dy{+Q6ꀅ')) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt1.lid AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c0)>(NULL)) THEN (~ ('dy{+Q6ꀅ')) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt1.lid AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt0.c0)>(NULL)) THEN (~ ('dy{+Q6ꀅ')) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt1.lid AS NUMERIC)))) ORDER BY CASE WHEN ((vt0.c0)>(NULL)) THEN (~ ('dy{+Q6ꀅ')) END ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (json_extract(vt1.c0 COLLATE BINARY, ((vt1.lid)OR(vt1.lid)))) ORDER BY vt1.lid ASC;
SELECT SUM(count) FROM (SELECT ((json_extract(vt1.c0 COLLATE BINARY, ((vt1.lid)OR(vt1.lid)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid ASC);
SELECT * FROM vt1 WHERE (json_extract(vt1.c0 COLLATE BINARY, ((vt1.lid)OR(vt1.lid)))) ORDER BY vt1.lid ASC;
SELECT SUM(count) FROM (SELECT ((json_extract(vt1.c0 COLLATE BINARY, ((vt1.lid)OR(vt1.lid)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid ASC);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)) THEN ((((vt1.lid)OR(vt1.lid)))OR(vt0.c0)) END ASC  NULLS LAST, CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)) AS INTEGER) DESC  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)) THEN ((((vt1.lid)OR(vt1.lid)))OR(vt0.c0)) END ASC  NULLS LAST, CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)) AS INTEGER) DESC  NULLS FIRST, vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)) THEN ((((vt1.lid)OR(vt1.lid)))OR(vt0.c0)) END ASC  NULLS LAST, CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)) AS INTEGER) DESC  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)) THEN ((((vt1.lid)OR(vt1.lid)))OR(vt0.c0)) END ASC  NULLS LAST, CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)) AS INTEGER) DESC  NULLS FIRST, vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)) THEN ((((vt1.lid)OR(vt1.lid)))OR(vt0.c0)) END ASC  NULLS LAST, CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.c0)) AS INTEGER) DESC  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY ((((vt0.c0)<(vt0.c0)))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, ((rtreenode(vt0.c0, x'18ff')) BETWEEN (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0)))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, ((rtreenode(vt0.c0, x'18ff')) BETWEEN (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY ((((vt0.c0)<(vt0.c0)))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, ((rtreenode(vt0.c0, x'18ff')) BETWEEN (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0)))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, ((rtreenode(vt0.c0, x'18ff')) BETWEEN (highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.lid END THEN ((vt1.c0) NOTNULL) WHEN CAST(vt1.lid AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(0.4612588456226572)))AND(0.3019197171069661)))AND(vt1.c0)) END WHERE (TRIM(((vt0.c0) IS FALSE), CAST(vt1.lid AS TEXT))) ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) IS FALSE), CAST(vt1.lid AS TEXT))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.lid END THEN ((vt1.c0) NOTNULL) WHEN CAST(vt1.lid AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(0.4612588456226572)))AND(0.3019197171069661)))AND(vt1.c0)) END ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 END IN ())  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.lid END THEN ((vt1.c0) NOTNULL) WHEN CAST(vt1.lid AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(0.4612588456226572)))AND(0.3019197171069661)))AND(vt1.c0)) END WHERE (TRIM(((vt0.c0) IS FALSE), CAST(vt1.lid AS TEXT))) ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) IS FALSE), CAST(vt1.lid AS TEXT))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.lid END THEN ((vt1.c0) NOTNULL) WHEN CAST(vt1.lid AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(0.4612588456226572)))AND(0.3019197171069661)))AND(vt1.c0)) END ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 END IN ())  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.lid END THEN ((vt1.c0) NOTNULL) WHEN CAST(vt1.lid AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(0.4612588456226572)))AND(0.3019197171069661)))AND(vt1.c0)) END WHERE (TRIM(((vt0.c0) IS FALSE), CAST(vt1.lid AS TEXT))) ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 END IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN x'' WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((0.29307047871380065)>(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE BINARY THEN (+ (vt0.c0)) WHEN x'9dfe' THEN ((0xffffffffa1a1762a) NOT BETWEEN ('1162818') AND (vt0.c0)) END) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE), (((((((((((('787519346')OR((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)-(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(DATETIME(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('%-~釘M' COLLATE BINARY)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<>(vt0.c0)))))OR(SQLITE_COMPILEOPTION_GET(0.45475561091381345))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS REAL)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN x'' WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((0.29307047871380065)>(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE BINARY THEN (+ (vt0.c0)) WHEN x'9dfe' THEN ((0xffffffffa1a1762a) NOT BETWEEN ('1162818') AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE), (((((((((((('787519346')OR((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)-(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(DATETIME(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('%-~釘M' COLLATE BINARY)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<>(vt0.c0)))))OR(SQLITE_COMPILEOPTION_GET(0.45475561091381345))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN x'' WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((0.29307047871380065)>(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE BINARY THEN (+ (vt0.c0)) WHEN x'9dfe' THEN ((0xffffffffa1a1762a) NOT BETWEEN ('1162818') AND (vt0.c0)) END) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE), (((((((((((('787519346')OR((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)-(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(DATETIME(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('%-~釘M' COLLATE BINARY)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<>(vt0.c0)))))OR(SQLITE_COMPILEOPTION_GET(0.45475561091381345))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS REAL)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN x'' WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((0.29307047871380065)>(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE BINARY THEN (+ (vt0.c0)) WHEN x'9dfe' THEN ((0xffffffffa1a1762a) NOT BETWEEN ('1162818') AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE), (((((((((((('787519346')OR((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)-(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(DATETIME(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('%-~釘M' COLLATE BINARY)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<>(vt0.c0)))))OR(SQLITE_COMPILEOPTION_GET(0.45475561091381345))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS REAL)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN x'' WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((0.29307047871380065)>(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE BINARY THEN (+ (vt0.c0)) WHEN x'9dfe' THEN ((0xffffffffa1a1762a) NOT BETWEEN ('1162818') AND (vt0.c0)) END) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE), (((((((((((('787519346')OR((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0)-(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(DATETIME(vt0.c0, vt0.c0, vt0.c0))) DESC  NULLS LAST, ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('%-~釘M' COLLATE BINARY)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<>(vt0.c0)))))OR(SQLITE_COMPILEOPTION_GET(0.45475561091381345))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((((vt1.lid)AND(vt1.c0)))OR(vt1.lid))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.lid)AND(vt1.c0)))OR(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((((vt1.lid)AND(vt1.c0)))OR(vt1.lid))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.lid)AND(vt1.c0)))OR(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((((vt1.lid)AND(vt1.c0)))OR(vt1.lid))))) ORDER BY vt1.c0  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ('-2144239985');
SELECT SUM(count) FROM (SELECT (('-2144239985') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('-2144239985');
SELECT SUM(count) FROM (SELECT (('-2144239985') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('-2144239985');
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 END END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TRIM(DISTINCT vt1.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TRIM(DISTINCT vt1.c0));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TRIM(DISTINCT vt1.c0));
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'');
SELECT * FROM vt0, vt1 WHERE (LIKELY(NULL)) ORDER BY ((NULL)/(((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)))) DESC  NULLS FIRST, CAST(vt0.c0 AS REAL) COLLATE NOCASE DESC, ((((((((((((((vt1.c0)OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)))AND('fLg2')))AND(vt1.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL)/(((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)))) DESC  NULLS FIRST, CAST(vt0.c0 AS REAL) COLLATE NOCASE DESC, ((((((((((((((vt1.c0)OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)))AND('fLg2')))AND(vt1.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (LIKELY(NULL)) ORDER BY ((NULL)/(((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)))) DESC  NULLS FIRST, CAST(vt0.c0 AS REAL) COLLATE NOCASE DESC, ((((((((((((((vt1.c0)OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)))AND('fLg2')))AND(vt1.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULL)/(((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)))) DESC  NULLS FIRST, CAST(vt0.c0 AS REAL) COLLATE NOCASE DESC, ((((((((((((((vt1.c0)OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)))AND('fLg2')))AND(vt1.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (LIKELY(NULL)) ORDER BY ((NULL)/(((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)))) DESC  NULLS FIRST, CAST(vt0.c0 AS REAL) COLLATE NOCASE DESC, ((((((((((((((vt1.c0)OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)))AND('fLg2')))AND(vt1.c0)))AND(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)AND(0.902389833146279)))OR(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(0.902389833146279)))OR(vt0.c0)) AS TEXT));
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)AND(0.902389833146279)))OR(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(0.902389833146279)))OR(vt0.c0)) AS TEXT));
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY CAST(((((vt0.c0)AND(0.902389833146279)))OR(vt0.c0)) AS TEXT);
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.lid))&(((vt1.c0)-(vt1.c0))))) ORDER BY ((((vt1.lid)GLOB(vt1.lid)))/('-1278473169')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0, vt1.lid))&(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)GLOB(vt1.lid)))/('-1278473169')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.lid))&(((vt1.c0)-(vt1.c0))))) ORDER BY ((((vt1.lid)GLOB(vt1.lid)))/('-1278473169')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0, vt1.lid))&(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)GLOB(vt1.lid)))/('-1278473169')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.lid))&(((vt1.c0)-(vt1.c0))))) ORDER BY ((((vt1.lid)GLOB(vt1.lid)))/('-1278473169')) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CASE vt1.lid  WHEN 'sB' THEN ((vt1.c0)>=(vt1.lid)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))>=((vt1.lid))) WHEN ((vt1.c0)/(vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN 273483871 END ELSE vt1.lid END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.lid  WHEN 'sB' THEN ((vt1.c0)>=(vt1.lid)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))>=((vt1.lid))) WHEN ((vt1.c0)/(vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN 273483871 END ELSE vt1.lid END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE vt1.lid  WHEN 'sB' THEN ((vt1.c0)>=(vt1.lid)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))>=((vt1.lid))) WHEN ((vt1.c0)/(vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN 273483871 END ELSE vt1.lid END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.lid  WHEN 'sB' THEN ((vt1.c0)>=(vt1.lid)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))>=((vt1.lid))) WHEN ((vt1.c0)/(vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN 273483871 END ELSE vt1.lid END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE vt1.lid  WHEN 'sB' THEN ((vt1.c0)>=(vt1.lid)) WHEN ((vt1.c0) IS TRUE) THEN (((vt1.c0))>=((vt1.lid))) WHEN ((vt1.c0)/(vt1.c0)) THEN CASE vt1.c0  WHEN x'' THEN 273483871 END ELSE vt1.lid END);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (TRIM(((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)))) ORDER BY CASE WHEN vt1.lid THEN (vt0.c0 IN ()) WHEN CAST(vt1.lid AS INTEGER) THEN json_object(vt1.c0, vt1.c0) WHEN CAST(vt1.c0 AS TEXT) THEN ((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, 0X196f103a  NULLS LAST, (((('0lQSs\r弢t9')*(vt1.c0))) NOT BETWEEN (((vt1.lid)GLOB(NULL))) AND (CASE WHEN vt1.c0 THEN NULL WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY CASE WHEN vt1.lid THEN (vt0.c0 IN ()) WHEN CAST(vt1.lid AS INTEGER) THEN json_object(vt1.c0, vt1.c0) WHEN CAST(vt1.c0 AS TEXT) THEN ((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, 0x196f103a  NULLS LAST, (((('0lQSs\r弢t9')*(vt1.c0))) NOT BETWEEN (((vt1.lid)GLOB(NULL))) AND (CASE WHEN vt1.c0 THEN NULL WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (TRIM(((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)))) ORDER BY CASE WHEN vt1.lid THEN (vt0.c0 IN ()) WHEN CAST(vt1.lid AS INTEGER) THEN json_object(vt1.c0, vt1.c0) WHEN CAST(vt1.c0 AS TEXT) THEN ((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, 0X196f103a  NULLS LAST, (((('0lQSs\r弢t9')*(vt1.c0))) NOT BETWEEN (((vt1.lid)GLOB(NULL))) AND (CASE WHEN vt1.c0 THEN NULL WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((vt1.lid)OR(vt1.lid)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY CASE WHEN vt1.lid THEN (vt0.c0 IN ()) WHEN CAST(vt1.lid AS INTEGER) THEN json_object(vt1.c0, vt1.c0) WHEN CAST(vt1.c0 AS TEXT) THEN ((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)) END  NULLS FIRST, 0x196f103a  NULLS LAST, (((('0lQSs\r弢t9')*(vt1.c0))) NOT BETWEEN (((vt1.lid)GLOB(NULL))) AND (CASE WHEN vt1.c0 THEN NULL WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END)));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN json_array(vt1.c0, vt0.c0) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) WHEN (('*ie7\BM') IS TRUE) THEN (vt0.c0 IN ()) ELSE (NOT (vt1.lid)) END WHERE (CAST(((vt1.c0)==(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)==(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN json_array(vt1.c0, vt0.c0) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) WHEN (('*ie7\BM') IS TRUE) THEN (vt0.c0 IN ()) ELSE (NOT (vt1.lid)) END);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN json_array(vt1.c0, vt0.c0) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) WHEN (('*ie7\BM') IS TRUE) THEN (vt0.c0 IN ()) ELSE (NOT (vt1.lid)) END WHERE (CAST(((vt1.c0)==(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)==(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN json_array(vt1.c0, vt0.c0) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) WHEN (('*ie7\BM') IS TRUE) THEN (vt0.c0 IN ()) ELSE (NOT (vt1.lid)) END);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN ((vt0.c0)%(vt1.c0)) THEN json_array(vt1.c0, vt0.c0) WHEN (NOT (vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) WHEN (('*ie7\BM') IS TRUE) THEN (vt0.c0 IN ()) ELSE (NOT (vt1.lid)) END WHERE (CAST(((vt1.c0)==(vt0.c0)) AS BLOB));
SELECT * FROM vt0 WHERE ((('Z\') IS TRUE)) ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.4884839983447269)))OR('-1278473169')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('Z\') IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.4884839983447269)))OR('-1278473169')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((('Z\') IS TRUE)) ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.4884839983447269)))OR('-1278473169')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('Z\') IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.4884839983447269)))OR('-1278473169')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((('Z\') IS TRUE)) ORDER BY ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(0.4884839983447269)))OR('-1278473169')))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (0.29307047871380065);
SELECT SUM(count) FROM (SELECT ALL ((0.29307047871380065) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.29307047871380065);
SELECT SUM(count) FROM (SELECT ALL ((0.29307047871380065) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.29307047871380065);
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)LIKE(vt1.c0)))))OR(x'6b88'))) ORDER BY IFNULL(vt1.lid, vt1.lid);
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)LIKE(vt1.c0)))))OR(x'6b88'))) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(vt1.lid, vt1.lid));
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)LIKE(vt1.c0)))))OR(x'6b88'))) ORDER BY IFNULL(vt1.lid, vt1.lid);
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)LIKE(vt1.c0)))))OR(x'6b88'))) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(vt1.lid, vt1.lid));
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)LIKE(vt1.c0)))))OR(x'6b88'))) ORDER BY IFNULL(vt1.lid, vt1.lid);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))) NOT BETWEEN ((vt1.lid IN (vt0.c0))) AND ('dy{+Q6ꀅ')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))) NOT BETWEEN ((vt1.lid IN (vt0.c0))) AND ('dy{+Q6ꀅ'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))) NOT BETWEEN ((vt1.lid IN (vt0.c0))) AND ('dy{+Q6ꀅ')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))) NOT BETWEEN ((vt1.lid IN (vt0.c0))) AND ('dy{+Q6ꀅ'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))) NOT BETWEEN ((vt1.lid IN (vt0.c0))) AND ('dy{+Q6ꀅ')));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((x'')OR(vt1.lid)))OR(vt0.c0)))GLOB(((((vt1.lid)OR(vt0.c0)))AND(vt1.lid))))) ORDER BY (- (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(vt1.lid)))OR(vt0.c0)))GLOB(((((vt1.lid)OR(vt0.c0)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((x'')OR(vt1.lid)))OR(vt0.c0)))GLOB(((((vt1.lid)OR(vt0.c0)))AND(vt1.lid))))) ORDER BY (- (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')OR(vt1.lid)))OR(vt0.c0)))GLOB(((((vt1.lid)OR(vt0.c0)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((x'')OR(vt1.lid)))OR(vt0.c0)))GLOB(((((vt1.lid)OR(vt0.c0)))AND(vt1.lid))))) ORDER BY (- (''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.lid AS INTEGER))*(((vt0.c0)%(0.33383496278997504))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))-('?z')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.lid AS INTEGER))*(((vt0.c0)%(0.33383496278997504))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))-('?z')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.lid AS INTEGER))*(((vt0.c0)%(0.33383496278997504))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))-('?z')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.lid AS INTEGER))*(((vt0.c0)%(0.33383496278997504))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))-('?z')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.lid AS INTEGER))*(((vt0.c0)%(0.33383496278997504))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))-('?z')) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0, vt1 WHERE (((('\J')) BETWEEN (((~ (vt1.lid)))) AND (((vt1.lid IN ()))))) ORDER BY x'd189' ASC, ((CAST(vt1.lid AS REAL))LIKE(CAST(vt0.c0 AS BLOB)))  NULLS FIRST, ((((NULL) IS TRUE))<(CHAR(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('\J')) BETWEEN (((~ (vt1.lid)))) AND (((vt1.lid IN ()))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'd189' ASC, ((CAST(vt1.lid AS REAL))LIKE(CAST(vt0.c0 AS BLOB)))  NULLS FIRST, ((((NULL) IS TRUE))<(CHAR(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((('\J')) BETWEEN (((~ (vt1.lid)))) AND (((vt1.lid IN ()))))) ORDER BY x'd189' ASC, ((CAST(vt1.lid AS REAL))LIKE(CAST(vt0.c0 AS BLOB)))  NULLS FIRST, ((((NULL) IS TRUE))<(CHAR(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('\J')) BETWEEN (((~ (vt1.lid)))) AND (((vt1.lid IN ()))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'd189' ASC, ((CAST(vt1.lid AS REAL))LIKE(CAST(vt0.c0 AS BLOB)))  NULLS FIRST, ((((NULL) IS TRUE))<(CHAR(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((('\J')) BETWEEN (((~ (vt1.lid)))) AND (((vt1.lid IN ()))))) ORDER BY x'd189' ASC, ((CAST(vt1.lid AS REAL))LIKE(CAST(vt0.c0 AS BLOB)))  NULLS FIRST, ((((NULL) IS TRUE))<(CHAR(vt0.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.lid) IS TRUE) COLLATE RTRIM) ORDER BY ((((((vt1.lid) NOTNULL))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(vt1.lid COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((vt1.lid) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.lid) NOTNULL))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(vt1.lid COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.lid) IS TRUE) COLLATE RTRIM) ORDER BY ((((((vt1.lid) NOTNULL))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(vt1.lid COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((vt1.lid) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.lid) NOTNULL))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(vt1.lid COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.lid) IS TRUE) COLLATE RTRIM) ORDER BY ((((((vt1.lid) NOTNULL))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(vt1.lid COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.lid THEN vt1.c0 END)%(INSTR(x'', vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.lid THEN vt1.c0 END)%(INSTR(x'', vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.lid THEN vt1.c0 END)%(INSTR(x'', vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.lid THEN vt1.c0 END)%(INSTR(x'', vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.lid THEN vt1.c0 END)%(INSTR(x'', vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (CASE (+ (vt1.lid))  WHEN TRIM(vt1.c0) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt1.lid))  WHEN TRIM(vt1.c0) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE (+ (vt1.lid))  WHEN TRIM(vt1.c0) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt1.lid))  WHEN TRIM(vt1.c0) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE (+ (vt1.lid))  WHEN TRIM(vt1.c0) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON x'' WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON x'');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON x'' WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON x'');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON x'' WHERE (vt1.lid);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULLIF(((('', vt1.lid, NULL))>((vt1.c0, vt0.c0, vt1.lid))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid END)) ORDER BY vt1.lid DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((('', vt1.lid, NULL))>((vt1.c0, vt0.c0, vt1.lid))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid END)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULLIF(((('', vt1.lid, NULL))>((vt1.c0, vt0.c0, vt1.lid))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid END)) ORDER BY vt1.lid DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((('', vt1.lid, NULL))>((vt1.c0, vt0.c0, vt1.lid))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid END)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULLIF(((('', vt1.lid, NULL))>((vt1.c0, vt0.c0, vt1.lid))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid END)) ORDER BY vt1.lid DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (('')+(CAST(vt0.c0 AS BLOB))), (NOT ('-1612672552')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (('')+(CAST(vt0.c0 AS BLOB))), (NOT ('-1612672552')) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (('')+(CAST(vt0.c0 AS BLOB))), (NOT ('-1612672552')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (('')+(CAST(vt0.c0 AS BLOB))), (NOT ('-1612672552')) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (('')+(CAST(vt0.c0 AS BLOB))), (NOT ('-1612672552')) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid)))||(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY '>' ASC  NULLS FIRST, (((((0.24257392254776533)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN ('-2144239985') AND ((+ (vt1.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid)))||(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY '>' ASC  NULLS FIRST, (((((0.24257392254776533)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN ('-2144239985') AND ((+ (vt1.lid)))) ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid)))||(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY '>' ASC  NULLS FIRST, (((((0.24257392254776533)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN ('-2144239985') AND ((+ (vt1.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid)))||(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY '>' ASC  NULLS FIRST, (((((0.24257392254776533)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN ('-2144239985') AND ((+ (vt1.lid)))) ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid)))||(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY '>' ASC  NULLS FIRST, (((((0.24257392254776533)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN ('-2144239985') AND ((+ (vt1.lid)))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CHANGES())OR((0.5204329663137893 IN (NULL, vt0.c0)))))AND(TRIM(vt0.c0, vt1.lid)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN 0x7a4eff31 WHEN x'' THEN vt1.lid WHEN (NOT (vt1.lid)) THEN (- (vt1.c0)) ELSE CASE vt0.c0  WHEN vt1.c0 THEN 'Z+' END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CHANGES())OR((0.5204329663137893 IN (NULL, vt0.c0)))))AND(TRIM(vt0.c0, vt1.lid)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN 0x7a4eff31 WHEN x'' THEN vt1.lid WHEN (NOT (vt1.lid)) THEN (- (vt1.c0)) ELSE CASE vt0.c0  WHEN vt1.c0 THEN 'Z+' END END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CHANGES())OR((0.5204329663137893 IN (NULL, vt0.c0)))))AND(TRIM(vt0.c0, vt1.lid)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN 0x7a4eff31 WHEN x'' THEN vt1.lid WHEN (NOT (vt1.lid)) THEN (- (vt1.c0)) ELSE CASE vt0.c0  WHEN vt1.c0 THEN 'Z+' END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CHANGES())OR((0.5204329663137893 IN (NULL, vt0.c0)))))AND(TRIM(vt0.c0, vt1.lid)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN 0x7a4eff31 WHEN x'' THEN vt1.lid WHEN (NOT (vt1.lid)) THEN (- (vt1.c0)) ELSE CASE vt0.c0  WHEN vt1.c0 THEN 'Z+' END END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CHANGES())OR((0.5204329663137893 IN (NULL, vt0.c0)))))AND(TRIM(vt0.c0, vt1.lid)))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN 0x7a4eff31 WHEN x'' THEN vt1.lid WHEN (NOT (vt1.lid)) THEN (- (vt1.c0)) ELSE CASE vt0.c0  WHEN vt1.c0 THEN 'Z+' END END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.lid)!=(vt1.lid)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.lid)!=(vt1.lid)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.lid)!=(vt1.lid)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.lid)!=(vt1.lid)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.lid)!=(vt1.lid)) AS INTEGER));
SELECT * FROM vt1 WHERE ((NULL IN (json(vt1.c0), vt1.c0))) ORDER BY '-1629967608' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN (json(vt1.c0), vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY '-1629967608' ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((NULL IN (json(vt1.c0), vt1.c0))) ORDER BY '-1629967608' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NULL IN (json(vt1.c0), vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY '-1629967608' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt1.lid, vt1.c0, '2051997489')) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt1.lid)))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt0.c0, vt0.c0))) THEN (- (NULL)) ELSE vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.lid, vt1.c0, '2051997489')) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt1.lid)))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt0.c0, vt0.c0))) THEN (- (NULL)) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt1.lid, vt1.c0, '2051997489')) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt1.lid)))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt0.c0, vt0.c0))) THEN (- (NULL)) ELSE vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.lid, vt1.c0, '2051997489')) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt1.lid)))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt0.c0, vt0.c0))) THEN (- (NULL)) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt1.lid, vt1.c0, '2051997489')) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((vt0.c0, vt1.c0, vt1.lid)))  WHEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt0.c0, vt0.c0))) THEN (- (NULL)) ELSE vt1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOT NULL)) AND ((('-2129334709')>(1661673230))))) ORDER BY ((vt1.lid) NOT NULL)  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOT NULL)) AND ((('-2129334709')>(1661673230))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.lid) NOT NULL)  NULLS FIRST, NULL ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOT NULL)) AND ((('-2129334709')>(1661673230))))) ORDER BY ((vt1.lid) NOT NULL)  NULLS FIRST, NULL ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOT NULL)) AND ((('-2129334709')>(1661673230))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.lid) NOT NULL)  NULLS FIRST, NULL ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOT NULL)) AND ((('-2129334709')>(1661673230))))) ORDER BY ((vt1.lid) NOT NULL)  NULLS FIRST, NULL ASC;
SELECT ALL * FROM vt1 WHERE ((((vt1.lid IN ())) NOT BETWEEN ('97996518') AND (((vt1.lid)>(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN ())) NOT BETWEEN ('97996518') AND (((vt1.lid)>(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid IN ())) NOT BETWEEN ('97996518') AND (((vt1.lid)>(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN ())) NOT BETWEEN ('97996518') AND (((vt1.lid)>(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid IN ())) NOT BETWEEN ('97996518') AND (((vt1.lid)>(vt1.lid)))));
SELECT ALL * FROM vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (NULL)));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) ORDER BY (((vt0.c0, x'6b77', vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)OR(0.04840702484089665)), (NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS LAST, ((0.6159974302449168) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, x'6b77', vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)OR(0.04840702484089665)), (NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS LAST, ((0.6159974302449168) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) ORDER BY (((vt0.c0, x'6b77', vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)OR(0.04840702484089665)), (NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS LAST, ((0.6159974302449168) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, x'6b77', vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)OR(0.04840702484089665)), (NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS LAST, ((0.6159974302449168) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) ORDER BY (((vt0.c0, x'6b77', vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)OR(0.04840702484089665)), (NOT (vt0.c0)), ((vt0.c0)IS(vt0.c0))))) DESC  NULLS LAST, ((0.6159974302449168) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE CAST(vt1.lid AS INTEGER)  WHEN (((vt1.c0))<=((vt1.lid))) THEN vt1.lid COLLATE BINARY ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.lid AS INTEGER)  WHEN (((vt1.c0))<=((vt1.lid))) THEN vt1.lid COLLATE BINARY ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE (CASE CAST(vt1.lid AS INTEGER)  WHEN (((vt1.c0))<=((vt1.lid))) THEN vt1.lid COLLATE BINARY ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.lid AS INTEGER)  WHEN (((vt1.c0))<=((vt1.lid))) THEN vt1.lid COLLATE BINARY ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE (CASE CAST(vt1.lid AS INTEGER)  WHEN (((vt1.c0))<=((vt1.lid))) THEN vt1.lid COLLATE BINARY ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))) END) ORDER BY vt1.c0;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END AS INTEGER), LENGTH(CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END AS INTEGER), LENGTH(CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END AS INTEGER), LENGTH(CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END AS INTEGER), LENGTH(CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) ORDER BY CAST(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END AS INTEGER), LENGTH(CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)&(vt1.lid)))IS(CAST(vt0.c0 AS BLOB)))) ORDER BY (((vt1.lid IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt1.lid)))IS(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.lid IN ())) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)&(vt1.lid)))IS(CAST(vt0.c0 AS BLOB)))) ORDER BY (((vt1.lid IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt1.lid)))IS(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.lid IN ())) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)&(vt1.lid)))IS(CAST(vt0.c0 AS BLOB)))) ORDER BY (((vt1.lid IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid) ISNULL))+(((vt1.lid)>(vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UPPER(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) ISNULL))+(((vt1.lid)>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UPPER(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid) ISNULL))+(((vt1.lid)>(vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UPPER(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) ISNULL))+(((vt1.lid)>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UPPER(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid) ISNULL))+(((vt1.lid)>(vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((UPPER(vt0.c0))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (HEX(vt1.lid)) ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.lid IN ()))) DESC  NULLS FIRST, CASE WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END WHEN ((x'')IS NOT(vt1.c0)) THEN ((vt1.lid)AND(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CASE WHEN vt1.c0 THEN '1794475883' END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt1.lid)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.lid IN ()))) DESC  NULLS FIRST, CASE WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END WHEN ((x'')IS NOT(vt1.c0)) THEN ((vt1.lid)AND(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CASE WHEN vt1.c0 THEN '1794475883' END END ASC);
SELECT * FROM vt1, vt0 WHERE (HEX(vt1.lid)) ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.lid IN ()))) DESC  NULLS FIRST, CASE WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END WHEN ((x'')IS NOT(vt1.c0)) THEN ((vt1.lid)AND(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CASE WHEN vt1.c0 THEN '1794475883' END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt1.lid)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.lid IN ()))) DESC  NULLS FIRST, CASE WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END WHEN ((x'')IS NOT(vt1.c0)) THEN ((vt1.lid)AND(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CASE WHEN vt1.c0 THEN '1794475883' END END ASC);
SELECT * FROM vt1, vt0 WHERE (HEX(vt1.lid)) ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.lid IN ()))) DESC  NULLS FIRST, CASE WHEN vt1.c0 THEN CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END WHEN ((x'')IS NOT(vt1.c0)) THEN ((vt1.lid)AND(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN CASE WHEN vt1.c0 THEN '1794475883' END END ASC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE BINARY)=('rᚽwiW9o' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt1.lid COLLATE BINARY)=('rᚽwiW9o' COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE BINARY)=('rᚽwiW9o' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt1.lid COLLATE BINARY)=('rᚽwiW9o' COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE BINARY)=('rᚽwiW9o' COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) NOT BETWEEN (RTRIM(vt0.c0)) AND (vt0.c0))) ORDER BY NULL  NULLS FIRST, CASE NULL  WHEN vt0.c0 THEN '483021740' ELSE IFNULL(vt0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (RTRIM(vt0.c0)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, CASE NULL  WHEN vt0.c0 THEN '483021740' ELSE IFNULL(vt0.c0, vt0.c0) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) NOT BETWEEN (RTRIM(vt0.c0)) AND (vt0.c0))) ORDER BY NULL  NULLS FIRST, CASE NULL  WHEN vt0.c0 THEN '483021740' ELSE IFNULL(vt0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (RTRIM(vt0.c0)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST, CASE NULL  WHEN vt0.c0 THEN '483021740' ELSE IFNULL(vt0.c0, vt0.c0) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) NOT BETWEEN (RTRIM(vt0.c0)) AND (vt0.c0))) ORDER BY NULL  NULLS FIRST, CASE NULL  WHEN vt0.c0 THEN '483021740' ELSE IFNULL(vt0.c0, vt0.c0) END;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.lid, vt1.lid, vt0.c0)) NOT BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt1.c0, vt0.c0)))))) ORDER BY CASE WHEN (((vt0.c0, vt1.c0, vt1.c0))!=((vt1.lid, vt1.lid, vt0.c0))) THEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)) ELSE vt1.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.lid, vt1.lid, vt0.c0)) NOT BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (((vt0.c0, vt1.c0, vt1.c0))!=((vt1.lid, vt1.lid, vt0.c0))) THEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)) ELSE vt1.c0 END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.lid, vt1.lid, vt0.c0)) NOT BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt1.c0, vt0.c0)))))) ORDER BY CASE WHEN (((vt0.c0, vt1.c0, vt1.c0))!=((vt1.lid, vt1.lid, vt0.c0))) THEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)) ELSE vt1.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.lid, vt1.lid, vt0.c0)) NOT BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (((vt0.c0, vt1.c0, vt1.c0))!=((vt1.lid, vt1.lid, vt0.c0))) THEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)) ELSE vt1.c0 END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND((((vt1.lid, vt1.lid, vt0.c0)) NOT BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.lid, vt1.c0, vt0.c0)))))) ORDER BY CASE WHEN (((vt0.c0, vt1.c0, vt1.c0))!=((vt1.lid, vt1.lid, vt0.c0))) THEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.c0)) ELSE vt1.c0 END ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))OR((+ (vt1.lid)))))AND(NULL));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))OR((+ (vt1.lid)))))AND(NULL)));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))OR((+ (vt1.lid)))))AND(NULL));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))OR((+ (vt1.lid)))))AND(NULL)));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))))OR((+ (vt1.lid)))))AND(NULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((-8.49348614E8)<(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((-8.49348614E8)<(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((-8.49348614E8)<(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((-8.49348614E8)<(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((-8.49348614E8)<(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('');
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL)) ORDER BY (~ (((vt0.c0)-(x'8f88')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)-(x'8f88')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL)) ORDER BY (~ (((vt0.c0)-(x'8f88')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)-(x'8f88')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL)) ORDER BY (~ (((vt0.c0)-(x'8f88')))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((~ (UPPER(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((~ (UPPER(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((~ (UPPER(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((~ (UPPER(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((~ (UPPER(vt1.c0))));
SELECT ALL * FROM vt0 WHERE ((((((((('1\rh[6*Ho')AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((('1\rh[6*Ho')AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((('1\rh[6*Ho')AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((('1\rh[6*Ho')AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((('1\rh[6*Ho')AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))>=((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)%(vt0.c0))))>=((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))>=((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)%(vt0.c0))))>=((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))>=((vt0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (x'') AND (vt0.c0)), (NOT ('rᚽwiw9o')), vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '0.29307047871380065')) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0)) BETWEEN ((0.3764634973265716)) AND ((vt0.c0))), (NOT (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (x'') AND (vt0.c0)), (NOT ('rᚽwiw9o')), vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '0.29307047871380065')) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0)) BETWEEN ((0.3764634973265716)) AND ((vt0.c0))), (NOT (vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (x'') AND (vt0.c0)), (NOT ('rᚽwiw9o')), vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '0.29307047871380065')) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0)) BETWEEN ((0.3764634973265716)) AND ((vt0.c0))), (NOT (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (x'') AND (vt0.c0)), (NOT ('rᚽwiw9o')), vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '0.29307047871380065')) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0)) BETWEEN ((0.3764634973265716)) AND ((vt0.c0))), (NOT (vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (x'') AND (vt0.c0)), (NOT ('rᚽwiw9o')), vt0.c0)) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '0.29307047871380065')) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0)) BETWEEN ((0.3764634973265716)) AND ((vt0.c0))), (NOT (vt0.c0))))) DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN '),' THEN INSTR('3A\m*Fl', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '),' THEN INSTR('3A\m*Fl', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN '),' THEN INSTR('3A\m*Fl', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '),' THEN INSTR('3A\m*Fl', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN '),' THEN INSTR('3A\m*Fl', vt0.c0) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT * FROM vt0 WHERE (NULLIF((~ (vt0.c0)), (- (vt0.c0)))) ORDER BY COALESCE(LENGTH(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ (vt0.c0)), (- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(LENGTH(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULLIF((~ (vt0.c0)), (- (vt0.c0)))) ORDER BY COALESCE(LENGTH(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ (vt0.c0)), (- (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(LENGTH(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULLIF((~ (vt0.c0)), (- (vt0.c0)))) ORDER BY COALESCE(LENGTH(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((('273483871') BETWEEN (vt0.c0) AND (vt1.c0)))>((~ (vt1.lid)))) WHERE (((('ⶹ쫐o', ((vt1.lid)&(vt1.c0)), load_extension(vt1.c0)))=(((((vt1.c0))<((0.5452290591747967))), ((vt1.lid)+(vt1.lid)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((('ⶹ쫐o', ((vt1.lid)&(vt1.c0)), load_extension(vt1.c0)))=(((((vt1.c0))<((0.5452290591747967))), ((vt1.lid)+(vt1.lid)), vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((('273483871') BETWEEN (vt0.c0) AND (vt1.c0)))>((~ (vt1.lid)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((('273483871') BETWEEN (vt0.c0) AND (vt1.c0)))>((~ (vt1.lid)))) WHERE (((('ⶹ쫐o', ((vt1.lid)&(vt1.c0)), load_extension(vt1.c0)))=(((((vt1.c0))<((0.5452290591747967))), ((vt1.lid)+(vt1.lid)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((('ⶹ쫐o', ((vt1.lid)&(vt1.c0)), load_extension(vt1.c0)))=(((((vt1.c0))<((0.5452290591747967))), ((vt1.lid)+(vt1.lid)), vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((('273483871') BETWEEN (vt0.c0) AND (vt1.c0)))>((~ (vt1.lid)))));
SELECT * FROM vt1 WHERE (((vt1.lid)&(vt1.lid)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.lid)&(vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.lid)&(vt1.lid)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.lid)&(vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.lid)&(vt1.lid)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON vt1.lid WHERE ((((~ (vt1.lid))) IS TRUE)) ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt0.c0)=(vt1.lid)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.lid))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON vt1.lid ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt0.c0)=(vt1.lid)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON vt1.lid WHERE ((((~ (vt1.lid))) IS TRUE)) ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt0.c0)=(vt1.lid)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.lid))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON vt1.lid ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt0.c0)=(vt1.lid)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON vt1.lid WHERE ((((~ (vt1.lid))) IS TRUE)) ORDER BY ((COALESCE(DISTINCT vt1.lid, vt1.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt0.c0)=(vt1.lid)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.lid) NOTNULL) THEN ((vt1.lid) NOTNULL) END) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(COALESCE(DISTINCT vt1.c0, vt1.c0))))AND(((vt1.c0)OR(vt1.lid)))))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.lid) NOTNULL) THEN ((vt1.lid) NOTNULL) END) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(COALESCE(DISTINCT vt1.c0, vt1.c0))))AND(((vt1.c0)OR(vt1.lid)))))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.lid) NOTNULL) THEN ((vt1.lid) NOTNULL) END) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(COALESCE(DISTINCT vt1.c0, vt1.c0))))AND(((vt1.c0)OR(vt1.lid)))))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.lid) NOTNULL) THEN ((vt1.lid) NOTNULL) END) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(COALESCE(DISTINCT vt1.c0, vt1.c0))))AND(((vt1.c0)OR(vt1.lid)))))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.lid) NOTNULL) THEN ((vt1.lid) NOTNULL) END) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(COALESCE(DISTINCT vt1.c0, vt1.c0))))AND(((vt1.c0)OR(vt1.lid)))))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT * FROM vt1 WHERE (((0.3697923435342644 IN (0.8275120967779621, vt1.lid)) IN ()));
SELECT SUM(count) FROM (SELECT ((((0.3697923435342644 IN (0.8275120967779621, vt1.lid)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE (((0.3697923435342644 IN (0.8275120967779621, vt1.lid)) IN ()));
SELECT SUM(count) FROM (SELECT ((((0.3697923435342644 IN (0.8275120967779621, vt1.lid)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE (((0.3697923435342644 IN (0.8275120967779621, vt1.lid)) IN ()));
SELECT * FROM vt1, vt0 NOT INDEXED WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt1.c0) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt1.c0) AND (vt0.c0)));
SELECT * FROM vt1, vt0 NOT INDEXED WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt1.c0) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt1.c0) AND (vt0.c0)));
SELECT * FROM vt1, vt0 NOT INDEXED WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (vt1.c0) AND (vt0.c0));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt1.c0, vt1.c0, '0.33383496278997504', vt1.lid)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.lid)), ((vt0.c0) NOTNULL), json_extract(vt0.c0, vt1.c0), vt0.c0, CAST(vt1.c0 AS BLOB))) AND ((((vt1.lid)<=(vt1.lid)), vt1.lid COLLATE RTRIM, (vt0.c0 IN ()), ((vt1.c0)IS(vt1.lid)), ((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (((NULL COLLATE RTRIM)||(((vt1.lid)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM)||(((vt1.lid)==(vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt1.c0, vt1.c0, '0.33383496278997504', vt1.lid)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.lid)), ((vt0.c0) NOTNULL), json_extract(vt0.c0, vt1.c0), vt0.c0, CAST(vt1.c0 AS BLOB))) AND ((((vt1.lid)<=(vt1.lid)), vt1.lid COLLATE RTRIM, (vt0.c0 IN ()), ((vt1.c0)IS(vt1.lid)), ((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt1.c0, vt1.c0, '0.33383496278997504', vt1.lid)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.lid)), ((vt0.c0) NOTNULL), json_extract(vt0.c0, vt1.c0), vt0.c0, CAST(vt1.c0 AS BLOB))) AND ((((vt1.lid)<=(vt1.lid)), vt1.lid COLLATE RTRIM, (vt0.c0 IN ()), ((vt1.c0)IS(vt1.lid)), ((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (((NULL COLLATE RTRIM)||(((vt1.lid)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM)||(((vt1.lid)==(vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt1.c0, vt1.c0, '0.33383496278997504', vt1.lid)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.lid)), ((vt0.c0) NOTNULL), json_extract(vt0.c0, vt1.c0), vt0.c0, CAST(vt1.c0 AS BLOB))) AND ((((vt1.lid)<=(vt1.lid)), vt1.lid COLLATE RTRIM, (vt0.c0 IN ()), ((vt1.c0)IS(vt1.lid)), ((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c0, vt1.c0, vt1.c0, '0.33383496278997504', vt1.lid)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.lid)), ((vt0.c0) NOTNULL), json_extract(vt0.c0, vt1.c0), vt0.c0, CAST(vt1.c0 AS BLOB))) AND ((((vt1.lid)<=(vt1.lid)), vt1.lid COLLATE RTRIM, (vt0.c0 IN ()), ((vt1.c0)IS(vt1.lid)), ((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) WHERE (((NULL COLLATE RTRIM)||(((vt1.lid)==(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN ())) ORDER BY (- (CAST(vt1.lid AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (- (CAST(vt1.lid AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN ())) ORDER BY (- (CAST(vt1.lid AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (- (CAST(vt1.lid AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN ())) ORDER BY (- (CAST(vt1.lid AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)>(('787519346' IN ()))) WHERE (0.05059749471244801) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS BLOB))), ((((vt0.c0)<=(vt0.c0)))LIKE(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.05059749471244801) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)>(('787519346' IN ()))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS BLOB))), ((((vt0.c0)<=(vt0.c0)))LIKE(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)>(('787519346' IN ()))) WHERE (0.05059749471244801) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS BLOB))), ((((vt0.c0)<=(vt0.c0)))LIKE(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.05059749471244801) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)>(('787519346' IN ()))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS BLOB))), ((((vt0.c0)<=(vt0.c0)))LIKE(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt1.c0 COLLATE BINARY)>(('787519346' IN ()))) WHERE (0.05059749471244801) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS BLOB))), ((((vt0.c0)<=(vt0.c0)))LIKE(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (vt1.lid) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (vt1.lid) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (vt1.lid) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((NULL)<>(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)<>(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((NULL)<>(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((+ (((NULL)<>(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((NULL)<>(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((0.09867256953051684)AND(vt1.c0)))AND(vt1.lid)))>=(((vt1.c0)>(vt0.c0))))) ORDER BY CASE WHEN (('')<=(vt1.lid)) THEN ((vt0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.09867256953051684)AND(vt1.c0)))AND(vt1.lid)))>=(((vt1.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (('')<=(vt1.lid)) THEN ((vt0.c0) IS TRUE) END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((0.09867256953051684)AND(vt1.c0)))AND(vt1.lid)))>=(((vt1.c0)>(vt0.c0))))) ORDER BY CASE WHEN (('')<=(vt1.lid)) THEN ((vt0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.09867256953051684)AND(vt1.c0)))AND(vt1.lid)))>=(((vt1.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (('')<=(vt1.lid)) THEN ((vt0.c0) IS TRUE) END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((0.09867256953051684)AND(vt1.c0)))AND(vt1.lid)))>=(((vt1.c0)>(vt0.c0))))) ORDER BY CASE WHEN (('')<=(vt1.lid)) THEN ((vt0.c0) IS TRUE) END ASC;
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))!=(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END))) ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))<=((x'a5e5' IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))<=((x'a5e5' IN ())))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))!=(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END))) ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))<=((x'a5e5' IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))<=((x'a5e5' IN ())))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))!=(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END))) ORDER BY (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))<=((x'a5e5' IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST('743327279' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST('743327279' AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST('743327279' AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST('743327279' AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST('743327279' AS NUMERIC) IN ()));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON 7.87519346E8 WHERE ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON 7.87519346E8);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON 7.87519346E8 WHERE ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON 7.87519346E8);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON 7.87519346E8 WHERE ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.lid)) NOT BETWEEN (('1941219799', vt1.c0, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0)))) NOT NULL)) ORDER BY ((('Wg,')) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.lid)) NOT BETWEEN (('1941219799', vt1.c0, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((('Wg,')) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.lid)) NOT BETWEEN (('1941219799', vt1.c0, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0)))) NOT NULL)) ORDER BY ((('Wg,')) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.lid)) NOT BETWEEN (('1941219799', vt1.c0, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((('Wg,')) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.lid)) NOT BETWEEN (('1941219799', vt1.c0, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0)))) NOT NULL)) ORDER BY ((('Wg,')) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((+ (vt1.lid)), (- (vt1.lid)), (vt0.c0 IN (vt0.c0))))>=((CAST(vt1.lid AS REAL), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0)))))) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((+ (vt1.lid)), (- (vt1.lid)), (vt0.c0 IN (vt0.c0))))>=((CAST(vt1.lid AS REAL), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((+ (vt1.lid)), (- (vt1.lid)), (vt0.c0 IN (vt0.c0))))>=((CAST(vt1.lid AS REAL), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0)))))) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((+ (vt1.lid)), (- (vt1.lid)), (vt0.c0 IN (vt0.c0))))>=((CAST(vt1.lid AS REAL), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((+ (vt1.lid)), (- (vt1.lid)), (vt0.c0 IN (vt0.c0))))>=((CAST(vt1.lid AS REAL), (~ (vt0.c0)), ((vt0.c0)&(vt0.c0)))))) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ('1829999351');
SELECT SUM(count) FROM (SELECT ALL (('1829999351') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('1829999351');
SELECT SUM(count) FROM (SELECT ALL (('1829999351') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('1829999351');
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ('Co') AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ('Co') AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ('Co') AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ('Co') AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ('Co') AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE '1403061583'  WHEN json_quote(vt0.c0) THEN vt1.lid COLLATE RTRIM ELSE (((x''))<=((x''))) END) ORDER BY 0.06993488367156309 DESC;
SELECT SUM(count) FROM (SELECT ((CASE '1403061583'  WHEN json_quote(vt0.c0) THEN vt1.lid COLLATE RTRIM ELSE (((x''))<=((x''))) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.06993488367156309 DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE '1403061583'  WHEN json_quote(vt0.c0) THEN vt1.lid COLLATE RTRIM ELSE (((x''))<=((x''))) END) ORDER BY 0.06993488367156309 DESC;
SELECT SUM(count) FROM (SELECT ((CASE '1403061583'  WHEN json_quote(vt0.c0) THEN vt1.lid COLLATE RTRIM ELSE (((x''))<=((x''))) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.06993488367156309 DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE '1403061583'  WHEN json_quote(vt0.c0) THEN vt1.lid COLLATE RTRIM ELSE (((x''))<=((x''))) END) ORDER BY 0.06993488367156309 DESC;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.lid)-(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.lid)-(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.lid)-(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.lid)-(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.lid)-(vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END) ORDER BY CASE WHEN vt0.c0 THEN ((-1.182591299E9) NOT BETWEEN (vt0.c0) AND (x'ab4e')) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((-1.182591299E9) NOT BETWEEN (vt0.c0) AND (x'ab4e')) END DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END) ORDER BY CASE WHEN vt0.c0 THEN ((-1.182591299E9) NOT BETWEEN (vt0.c0) AND (x'ab4e')) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((-1.182591299E9) NOT BETWEEN (vt0.c0) AND (x'ab4e')) END DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END) ORDER BY CASE WHEN vt0.c0 THEN ((-1.182591299E9) NOT BETWEEN (vt0.c0) AND (x'ab4e')) END DESC;
SELECT * FROM vt0 WHERE (load_extension((~ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((~ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (load_extension((~ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((~ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt1 WHERE (((UPPER(vt1.c0))&(((vt1.lid)||(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt1.c0))&(((vt1.lid)||(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((UPPER(vt1.c0))&(((vt1.lid)||(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt1.c0))&(((vt1.lid)||(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((UPPER(vt1.c0))&(((vt1.lid)||(vt1.lid)))));
SELECT * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))||(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))||(json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))||(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))||(json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))||(json_valid(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((('8u^c') NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (((vt1.c0)||(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((('8u^c') NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (((vt1.c0)||(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('8u^c') NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (((vt1.c0)||(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((('8u^c') NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (((vt1.c0)||(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('8u^c') NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (((vt1.c0)||(vt1.lid)))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.lid) NOTNULL)))  NULLS FIRST, CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.lid) NOTNULL)))  NULLS FIRST, CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.lid) NOTNULL)))  NULLS FIRST, CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.lid) NOTNULL)))  NULLS FIRST, CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.lid) NOTNULL)))  NULLS FIRST, CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0))))/(NULL)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))=((vt0.c0))))/(NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0))))/(NULL)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))=((vt0.c0))))/(NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0))))/(NULL)));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY LOWER(((vt0.c0)%(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY LOWER(((vt0.c0)%(vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY LOWER(((vt0.c0)%(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY LOWER(((vt0.c0)%(vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY LOWER(((vt0.c0)%(vt0.c0)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((CAST(x'' AS REAL))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('1412273203')))OR(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(NULL)))AND(x'f971' COLLATE BINARY))) ORDER BY UPPER((vt0.c0 IN (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(x'' AS REAL))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('1412273203')))OR(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(NULL)))AND(x'f971' COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY UPPER((vt0.c0 IN (vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((CAST(x'' AS REAL))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('1412273203')))OR(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(NULL)))AND(x'f971' COLLATE BINARY))) ORDER BY UPPER((vt0.c0 IN (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(x'' AS REAL))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('1412273203')))OR(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(NULL)))AND(x'f971' COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY UPPER((vt0.c0 IN (vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((CAST(x'' AS REAL))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('1412273203')))OR(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(NULL)))AND(x'f971' COLLATE BINARY))) ORDER BY UPPER((vt0.c0 IN (vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY '鰉EIC'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY '鰉EIC'  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY '鰉EIC'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY '鰉EIC'  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ())) ORDER BY '鰉EIC'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(DISTINCT CAST(vt1.c0 AS REAL), LIKELIHOOD(vt1.c0, 0.056934526930836005)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(vt1.c0 AS REAL), LIKELIHOOD(vt1.c0, 0.056934526930836005))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(DISTINCT CAST(vt1.c0 AS REAL), LIKELIHOOD(vt1.c0, 0.056934526930836005)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(vt1.c0 AS REAL), LIKELIHOOD(vt1.c0, 0.056934526930836005))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (COALESCE(DISTINCT CAST(vt1.c0 AS REAL), LIKELIHOOD(vt1.c0, 0.056934526930836005)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt1 WHERE (((vt1.lid) BETWEEN ('-321308352') AND (((vt1.c0) NOT BETWEEN (2883440.0) AND (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.lid IN ())) AND (vt1.lid COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid) BETWEEN ('-321308352') AND (((vt1.c0) NOT BETWEEN (2883440.0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.lid IN ())) AND (vt1.lid COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.lid) BETWEEN ('-321308352') AND (((vt1.c0) NOT BETWEEN (2883440.0) AND (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.lid IN ())) AND (vt1.lid COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid) BETWEEN ('-321308352') AND (((vt1.c0) NOT BETWEEN (2883440.0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.lid IN ())) AND (vt1.lid COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.lid) BETWEEN ('-321308352') AND (((vt1.c0) NOT BETWEEN (2883440.0) AND (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.lid IN ())) AND (vt1.lid COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE ''  WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE ''  WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE ''  WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE ''  WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE ''  WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END AS REAL));
SELECT ALL * FROM vt1 WHERE (((x'456c' COLLATE RTRIM)||(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((x'456c' COLLATE RTRIM)||(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((x'456c' COLLATE RTRIM)||(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((x'456c' COLLATE RTRIM)||(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((x'456c' COLLATE RTRIM)||(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1 WHERE (((((-412265864)==(vt1.lid)))<=((((((((('1646871378')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((ABS(DISTINCT vt1.lid))OR(((vt1.c0)+(vt1.lid)))))AND(x''));
SELECT SUM(count) FROM (SELECT ((((((-412265864)=(vt1.lid)))<=((((((((('1646871378')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((ABS(DISTINCT vt1.lid))OR(((vt1.c0)+(vt1.lid)))))AND(x'')));
SELECT ALL * FROM vt1 WHERE (((((-412265864)==(vt1.lid)))<=((((((((('1646871378')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((ABS(DISTINCT vt1.lid))OR(((vt1.c0)+(vt1.lid)))))AND(x''));
SELECT SUM(count) FROM (SELECT ((((((-412265864)=(vt1.lid)))<=((((((((('1646871378')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((ABS(DISTINCT vt1.lid))OR(((vt1.c0)+(vt1.lid)))))AND(x'')));
SELECT ALL * FROM vt1 WHERE (((((-412265864)==(vt1.lid)))<=((((((((('1646871378')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((ABS(DISTINCT vt1.lid))OR(((vt1.c0)+(vt1.lid)))))AND(x''));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0) NOTNULL))OR((NOT (vt1.lid)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(0.23436658607105132)))AND((- (vt1.lid)))) WHERE (((vt1.c0)%(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)%(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0) NOTNULL))OR((NOT (vt1.lid)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(0.23436658607105132)))AND((- (vt1.lid)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0) NOTNULL))OR((NOT (vt1.lid)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(0.23436658607105132)))AND((- (vt1.lid)))) WHERE (((vt1.c0)%(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)%(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0) NOTNULL))OR((NOT (vt1.lid)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(0.23436658607105132)))AND((- (vt1.lid)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((vt1.c0) NOTNULL))OR((NOT (vt1.lid)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))))AND(0.23436658607105132)))AND((- (vt1.lid)))) WHERE (((vt1.c0)%(vt1.c0)) COLLATE RTRIM);
SELECT * FROM vt1, vt0 WHERE ((((vt1.lid)>>(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)>>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.lid)>>(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)>>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.lid)>>(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)=(vt1.c0)) IN ()), (+ (CAST(vt1.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)=(vt1.c0)) IN ()), (+ (CAST(vt1.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)=(vt1.c0)) IN ()), (+ (CAST(vt1.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)=(vt1.c0)) IN ()), (+ (CAST(vt1.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)=(vt1.c0)) IN ()), (+ (CAST(vt1.c0 AS TEXT)))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((((((((((((NULL)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((((((NULL)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((((((NULL)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.lid COLLATE NOCASE)))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN ('n2|%G}%') AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN ('n2|%G}%') AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN ('n2|%G}%') AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN ('n2|%G}%') AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN ('n2|%G}%') AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.lid)|(vt0.c0)))>(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)|(vt0.c0)))>(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.lid)|(vt0.c0)))>(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)|(vt0.c0)))>(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.lid)|(vt0.c0)))>(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'c363')|(vt1.c0))) NOT BETWEEN (vt1.lid) AND (((vt1.lid)&(vt1.c0))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((x'c363')|(vt1.c0))) NOT BETWEEN (vt1.lid) AND (((vt1.lid)&(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'c363')|(vt1.c0))) NOT BETWEEN (vt1.lid) AND (((vt1.lid)&(vt1.c0))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((x'c363')|(vt1.c0))) NOT BETWEEN (vt1.lid) AND (((vt1.lid)&(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'c363')|(vt1.c0))) NOT BETWEEN (vt1.lid) AND (((vt1.lid)&(vt1.c0))))) ORDER BY x'' DESC;
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN CASE WHEN x'44f4' THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN (vt1.c0, vt1.lid)) WHEN vt1.lid COLLATE RTRIM THEN NULL WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.lid IN ()) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN x'44f4' THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN (vt1.c0, vt1.lid)) WHEN vt1.lid COLLATE RTRIM THEN NULL WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.lid IN ()) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN CASE WHEN x'44f4' THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN (vt1.c0, vt1.lid)) WHEN vt1.lid COLLATE RTRIM THEN NULL WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.lid IN ()) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN x'44f4' THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN (vt1.c0, vt1.lid)) WHEN vt1.lid COLLATE RTRIM THEN NULL WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.lid IN ()) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN CASE WHEN x'44f4' THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN (vt1.c0, vt1.lid)) WHEN vt1.lid COLLATE RTRIM THEN NULL WHEN CASE WHEN vt0.c0 THEN vt1.c0 END THEN (vt1.lid IN ()) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)) AS BLOB)) ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0xfffffffff349ed0f);
SELECT SUM(count) FROM (SELECT ALL ((0Xfffffffff349ed0f) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0xfffffffff349ed0f);
SELECT SUM(count) FROM (SELECT ALL ((0Xfffffffff349ed0f) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0xfffffffff349ed0f);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT x'')) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) NOT NULL)  NULLS FIRST, (((((((((vt1.lid IN ()))AND((vt1.c0 IN (vt1.c0, vt1.lid)))))AND(vt0.c0 COLLATE BINARY)))OR(TRIM(vt1.lid))))OR((((vt0.c0))==((vt1.lid)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT x'')) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) NOT NULL)  NULLS FIRST, (((((((((vt1.lid IN ()))AND((vt1.c0 IN (vt1.c0, vt1.lid)))))AND(vt0.c0 COLLATE BINARY)))OR(TRIM(vt1.lid))))OR((((vt0.c0))=((vt1.lid)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT x'')) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) NOT NULL)  NULLS FIRST, (((((((((vt1.lid IN ()))AND((vt1.c0 IN (vt1.c0, vt1.lid)))))AND(vt0.c0 COLLATE BINARY)))OR(TRIM(vt1.lid))))OR((((vt0.c0))==((vt1.lid)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT x'')) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) NOT NULL)  NULLS FIRST, (((((((((vt1.lid IN ()))AND((vt1.c0 IN (vt1.c0, vt1.lid)))))AND(vt0.c0 COLLATE BINARY)))OR(TRIM(vt1.lid))))OR((((vt0.c0))=((vt1.lid)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT x'')) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) NOT NULL)  NULLS FIRST, (((((((((vt1.lid IN ()))AND((vt1.c0 IN (vt1.c0, vt1.lid)))))AND(vt0.c0 COLLATE BINARY)))OR(TRIM(vt1.lid))))OR((((vt0.c0))==((vt1.lid)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY (((((vt0.c0)<=(vt1.lid))))<=((((vt0.c0) NOT BETWEEN (vt1.lid) AND (0.6787023197822043)))))  NULLS LAST, LIKE(CAST(vt1.c0 AS REAL), ((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)<=(vt1.lid))))<=((((vt0.c0) NOT BETWEEN (vt1.lid) AND (0.6787023197822043)))))  NULLS LAST, LIKE(CAST(vt1.c0 AS REAL), ((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY (((((vt0.c0)<=(vt1.lid))))<=((((vt0.c0) NOT BETWEEN (vt1.lid) AND (0.6787023197822043)))))  NULLS LAST, LIKE(CAST(vt1.c0 AS REAL), ((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)<=(vt1.lid))))<=((((vt0.c0) NOT BETWEEN (vt1.lid) AND (0.6787023197822043)))))  NULLS LAST, LIKE(CAST(vt1.c0 AS REAL), ((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) ORDER BY (((((vt0.c0)<=(vt1.lid))))<=((((vt0.c0) NOT BETWEEN (vt1.lid) AND (0.6787023197822043)))))  NULLS LAST, LIKE(CAST(vt1.c0 AS REAL), ((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0))) ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON 0X2fe124d5 WHERE ('E');
SELECT SUM(count) FROM (SELECT ALL (('E') IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON 0X2fe124d5);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON 0X2fe124d5 WHERE ('E');
SELECT SUM(count) FROM (SELECT ALL (('E') IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON 0X2fe124d5);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON 0X2fe124d5 WHERE ('E');
SELECT ALL COUNT(*) FROM vt1 WHERE (GLOB(x'', (vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ((GLOB(x'', (vt1.lid IN ()))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE (GLOB(x'', (vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ((GLOB(x'', (vt1.lid IN ()))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE (GLOB(x'', (vt1.lid IN ())));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.lid)))AND(vt1.lid))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN ((x'34f7')AND(vt0.c0)) THEN (((vt1.c0, '', vt0.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN CASE WHEN vt1.lid THEN vt1.c0 ELSE vt0.c0 END END, ((x'')AND(CAST(vt1.lid AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.lid)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN ((x'34f7')AND(vt0.c0)) THEN (((vt1.c0, '', vt0.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN CASE WHEN vt1.lid THEN vt1.c0 ELSE vt0.c0 END END, ((x'')AND(CAST(vt1.lid AS REAL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.lid)))AND(vt1.lid))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN ((x'34f7')AND(vt0.c0)) THEN (((vt1.c0, '', vt0.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN CASE WHEN vt1.lid THEN vt1.c0 ELSE vt0.c0 END END, ((x'')AND(CAST(vt1.lid AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.lid)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN ((x'34f7')AND(vt0.c0)) THEN (((vt1.c0, '', vt0.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN CASE WHEN vt1.lid THEN vt1.c0 ELSE vt0.c0 END END, ((x'')AND(CAST(vt1.lid AS REAL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(NULL)))OR(vt1.lid)))AND(vt1.lid))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)) WHEN ((x'34f7')AND(vt0.c0)) THEN (((vt1.c0, '', vt0.c0))>=((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)) THEN CASE WHEN vt1.lid THEN vt1.c0 ELSE vt0.c0 END END, ((x'')AND(CAST(vt1.lid AS REAL)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE ((+ (JULIANDAY(vt1.lid, vt0.c0, vt1.c0, x'', vt0.c0)))) ORDER BY ((((vt1.c0)+(vt1.c0))) IS FALSE)  NULLS LAST, ((((((vt1.lid)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))))AND((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (JULIANDAY(vt1.lid, vt0.c0, vt1.c0, x'', vt0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt0.c0 ORDER BY ((((vt1.c0)+(vt1.c0))) IS FALSE)  NULLS LAST, ((((((vt1.lid)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))))AND((NOT (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE ((+ (JULIANDAY(vt1.lid, vt0.c0, vt1.c0, x'', vt0.c0)))) ORDER BY ((((vt1.c0)+(vt1.c0))) IS FALSE)  NULLS LAST, ((((((vt1.lid)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))))AND((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (JULIANDAY(vt1.lid, vt0.c0, vt1.c0, x'', vt0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt0.c0 ORDER BY ((((vt1.c0)+(vt1.c0))) IS FALSE)  NULLS LAST, ((((((vt1.lid)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))))AND((NOT (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE ((+ (JULIANDAY(vt1.lid, vt0.c0, vt1.c0, x'', vt0.c0)))) ORDER BY ((((vt1.c0)+(vt1.c0))) IS FALSE)  NULLS LAST, ((((((vt1.lid)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))))AND((NOT (vt0.c0)))) ASC;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)>(0.7883020286284703)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>(0.7883020286284703)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)>(0.7883020286284703)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>(0.7883020286284703)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)>(0.7883020286284703)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt1.lid, vt0.c0)) BETWEEN (((((vt1.lid))<((NULL))), ((((vt1.lid)OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0)) NOT BETWEEN (('qUvByP&䗳i')) AND ((vt0.c0))))) AND (((+ (vt1.lid)), vt1.lid, ((vt1.c0)||(vt1.lid)))))) ORDER BY (- (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.lid, vt0.c0)) BETWEEN (((((vt1.lid))<((NULL))), ((((vt1.lid)OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0)) NOT BETWEEN (('qUvByP&䗳i')) AND ((vt0.c0))))) AND (((+ (vt1.lid)), vt1.lid, ((vt1.c0)||(vt1.lid)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt1.lid, vt0.c0)) BETWEEN (((((vt1.lid))<((NULL))), ((((vt1.lid)OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0)) NOT BETWEEN (('qUvByP&䗳i')) AND ((vt0.c0))))) AND (((+ (vt1.lid)), vt1.lid, ((vt1.c0)||(vt1.lid)))))) ORDER BY (- (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.lid, vt0.c0)) BETWEEN (((((vt1.lid))<((NULL))), ((((vt1.lid)OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0)) NOT BETWEEN (('qUvByP&䗳i')) AND ((vt0.c0))))) AND (((+ (vt1.lid)), vt1.lid, ((vt1.c0)||(vt1.lid)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt1.lid, vt0.c0)) BETWEEN (((((vt1.lid))<((NULL))), ((((vt1.lid)OR(vt0.c0)))OR(vt0.c0)), (((vt0.c0)) NOT BETWEEN (('qUvByP&䗳i')) AND ((vt0.c0))))) AND (((+ (vt1.lid)), vt1.lid, ((vt1.c0)||(vt1.lid)))))) ORDER BY (- (((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((~ (NULL)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND((~ (NULL)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((~ (NULL)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND((~ (NULL)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((~ (NULL)))))AND((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)&(vt0.c0)))>(((vt1.lid) IS FALSE)))) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<>(vt0.c0)), (NOT ((vt1.lid IN ()))) ASC  NULLS FIRST, 1162818.0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))>(((vt1.lid) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<>(vt0.c0)), (NOT ((vt1.lid IN ()))) ASC  NULLS FIRST, 1162818.0  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)&(vt0.c0)))>(((vt1.lid) IS FALSE)))) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<>(vt0.c0)), (NOT ((vt1.lid IN ()))) ASC  NULLS FIRST, 1162818.0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0)))>(((vt1.lid) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<>(vt0.c0)), (NOT ((vt1.lid IN ()))) ASC  NULLS FIRST, 1162818.0  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)&(vt0.c0)))>(((vt1.lid) IS FALSE)))) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<>(vt0.c0)), (NOT ((vt1.lid IN ()))) ASC  NULLS FIRST, 1162818.0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) END) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((-677114247)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((-677114247)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((-677114247)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((-677114247)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((-677114247)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))) AND ((vt0.c0))));
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((-1477431413) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((-1477431413) NOT NULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((-1477431413) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((-1477431413) NOT NULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((-1477431413) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM) ORDER BY HEX(((vt0.c0) NOTNULL)), (LIKE(vt0.c0, vt0.c0, '0') IN (((vt0.c0)>(vt0.c0)), CHAR(vt0.c0))) ASC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY HEX(((vt0.c0) NOTNULL)), (LIKE(vt0.c0, vt0.c0, '0') IN (((vt0.c0)>(vt0.c0)), CHAR(vt0.c0))) ASC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM) ORDER BY HEX(((vt0.c0) NOTNULL)), (LIKE(vt0.c0, vt0.c0, '0') IN (((vt0.c0)>(vt0.c0)), CHAR(vt0.c0))) ASC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY HEX(((vt0.c0) NOTNULL)), (LIKE(vt0.c0, vt0.c0, '0') IN (((vt0.c0)>(vt0.c0)), CHAR(vt0.c0))) ASC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (x'')) COLLATE RTRIM) ORDER BY HEX(((vt0.c0) NOTNULL)), (LIKE(vt0.c0, vt0.c0, '0') IN (((vt0.c0)>(vt0.c0)), CHAR(vt0.c0))) ASC, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.lid)-(vt1.c0)) THEN IFNULL(vt1.lid, 2078683077) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, NULL, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.c0))) WHEN (((NULL, vt1.lid, vt1.lid, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.lid))) THEN (vt1.lid IN ()) ELSE (~ (vt1.c0)) END) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid)))) AND (((vt1.c0)IS NOT(vt0.c0)))) DESC, ((((NOT (vt1.lid)), (- (vt1.lid)), CAST(vt1.lid AS INTEGER)))!=((vt1.c0 COLLATE BINARY, vt1.lid, ((((((((vt0.c0)OR(vt1.lid)))AND(vt0.c0)))OR(vt0.c0)))OR('R%b鷰WF*x')))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.lid)-(vt1.c0)) THEN IFNULL(vt1.lid, 2078683077) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, NULL, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.c0))) WHEN (((NULL, vt1.lid, vt1.lid, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.lid))) THEN (vt1.lid IN ()) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid)))) AND (((vt1.c0)IS NOT(vt0.c0)))) DESC, ((((NOT (vt1.lid)), (- (vt1.lid)), CAST(vt1.lid AS INTEGER)))!=((vt1.c0 COLLATE BINARY, vt1.lid, ((((((((vt0.c0)OR(vt1.lid)))AND(vt0.c0)))OR(vt0.c0)))OR('R%b鷰WF*x'))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.lid)-(vt1.c0)) THEN IFNULL(vt1.lid, 2078683077) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, NULL, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.c0))) WHEN (((NULL, vt1.lid, vt1.lid, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.lid))) THEN (vt1.lid IN ()) ELSE (~ (vt1.c0)) END) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid)))) AND (((vt1.c0)IS NOT(vt0.c0)))) DESC, ((((NOT (vt1.lid)), (- (vt1.lid)), CAST(vt1.lid AS INTEGER)))!=((vt1.c0 COLLATE BINARY, vt1.lid, ((((((((vt0.c0)OR(vt1.lid)))AND(vt0.c0)))OR(vt0.c0)))OR('R%b鷰WF*x')))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.lid)-(vt1.c0)) THEN IFNULL(vt1.lid, 2078683077) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, NULL, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.c0))) WHEN (((NULL, vt1.lid, vt1.lid, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.lid))) THEN (vt1.lid IN ()) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid)))) AND (((vt1.c0)IS NOT(vt0.c0)))) DESC, ((((NOT (vt1.lid)), (- (vt1.lid)), CAST(vt1.lid AS INTEGER)))!=((vt1.c0 COLLATE BINARY, vt1.lid, ((((((((vt0.c0)OR(vt1.lid)))AND(vt0.c0)))OR(vt0.c0)))OR('R%b鷰WF*x'))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.lid)-(vt1.c0)) THEN IFNULL(vt1.lid, 2078683077) WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt1.lid, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, NULL, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.c0))) WHEN (((NULL, vt1.lid, vt1.lid, vt1.c0, vt0.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.lid))) THEN (vt1.lid IN ()) ELSE (~ (vt1.c0)) END) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid)))) AND (((vt1.c0)IS NOT(vt0.c0)))) DESC, ((((NOT (vt1.lid)), (- (vt1.lid)), CAST(vt1.lid AS INTEGER)))!=((vt1.c0 COLLATE BINARY, vt1.lid, ((((((((vt0.c0)OR(vt1.lid)))AND(vt0.c0)))OR(vt0.c0)))OR('R%b鷰WF*x')))));
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt1.lid))) NOTNULL) WHERE ((NOT (CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt1.lid))) NOTNULL) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid))) NOTNULL) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt1.lid))) NOTNULL) WHERE ((NOT (CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt1.lid))) NOTNULL) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid))) NOTNULL) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)OR(vt1.lid))) NOTNULL) WHERE ((NOT (CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid))) NOTNULL) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((TYPEOF(DISTINCT vt1.lid) IN (((vt1.lid)==(vt1.c0))))) ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(DISTINCT vt1.lid) IN (((vt1.lid)==(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE ((TYPEOF(DISTINCT vt1.lid) IN (((vt1.lid)==(vt1.c0))))) ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(DISTINCT vt1.lid) IN (((vt1.lid)==(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE ((TYPEOF(DISTINCT vt1.lid) IN (((vt1.lid)==(vt1.c0))))) ORDER BY (- (vt1.c0)) COLLATE NOCASE ASC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.lid)))*(CHAR(vt1.c0)))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.lid)))*(CHAR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.lid)))*(CHAR(vt1.c0)))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.lid)))*(CHAR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.lid)))*(CHAR(vt1.c0)))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE UNICODE(vt1.c0)  WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.lid)>=(vt1.lid)) ELSE IFNULL(DISTINCT vt1.c0, vt1.c0) END) ORDER BY x'1157' DESC  NULLS LAST, ((((NOT (vt1.lid))))<((vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE UNICODE(vt1.c0)  WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.lid)>=(vt1.lid)) ELSE IFNULL(DISTINCT vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY x'1157' DESC  NULLS LAST, ((((NOT (vt1.lid))))<((vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE UNICODE(vt1.c0)  WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.lid)>=(vt1.lid)) ELSE IFNULL(DISTINCT vt1.c0, vt1.c0) END) ORDER BY x'1157' DESC  NULLS LAST, ((((NOT (vt1.lid))))<((vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE UNICODE(vt1.c0)  WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.lid)>=(vt1.lid)) ELSE IFNULL(DISTINCT vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY x'1157' DESC  NULLS LAST, ((((NOT (vt1.lid))))<((vt1.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE UNICODE(vt1.c0)  WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.lid)>=(vt1.lid)) ELSE IFNULL(DISTINCT vt1.c0, vt1.c0) END) ORDER BY x'1157' DESC  NULLS LAST, ((((NOT (vt1.lid))))<((vt1.c0))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (ABS(((vt1.lid) IS TRUE))) ORDER BY ((TRIM(vt1.c0, vt1.lid))/(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.lid) IS TRUE))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(vt1.c0, vt1.lid))/(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (ABS(((vt1.lid) IS TRUE))) ORDER BY ((TRIM(vt1.c0, vt1.lid))/(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.lid) IS TRUE))) IS TRUE)  as count FROM vt1 ORDER BY ((TRIM(vt1.c0, vt1.lid))/(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (ABS(((vt1.lid) IS TRUE))) ORDER BY ((TRIM(vt1.c0, vt1.lid))/(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY NULLIF(HEX(DISTINCT vt0.c0), ((vt0.c0)&(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(HEX(DISTINCT vt0.c0), ((vt0.c0)&(vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY NULLIF(HEX(DISTINCT vt0.c0), ((vt0.c0)&(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(HEX(DISTINCT vt0.c0), ((vt0.c0)&(vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY NULLIF(HEX(DISTINCT vt0.c0), ((vt0.c0)&(vt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.lid)IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((vt1.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((vt1.lid IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.lid)IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((vt1.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((vt1.lid IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.lid)IS NOT(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((vt1.lid IN ()))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL) WHERE (((((((0.3026091222610676)|(vt1.c0)))OR(((vt1.lid)AND(vt1.c0)))))AND(((vt1.lid) NOTNULL)))) ORDER BY json_array_length(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), NULL);
SELECT SUM(count) FROM (SELECT ((((((((0.3026091222610676)|(vt1.c0)))OR(((vt1.lid)AND(vt1.c0)))))AND(((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL) ORDER BY json_array_length(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), NULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL) WHERE (((((((0.3026091222610676)|(vt1.c0)))OR(((vt1.lid)AND(vt1.c0)))))AND(((vt1.lid) NOTNULL)))) ORDER BY json_array_length(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), NULL);
SELECT SUM(count) FROM (SELECT ((((((((0.3026091222610676)|(vt1.c0)))OR(((vt1.lid)AND(vt1.c0)))))AND(((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL) ORDER BY json_array_length(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), NULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL) WHERE (((((((0.3026091222610676)|(vt1.c0)))OR(((vt1.lid)AND(vt1.c0)))))AND(((vt1.lid) NOTNULL)))) ORDER BY json_array_length(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), NULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.lid) ORDER BY ((UPPER(vt0.c0))&(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((UPPER(vt0.c0))&(((vt0.c0)<=(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.lid) ORDER BY ((UPPER(vt0.c0))&(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((UPPER(vt0.c0))&(((vt0.c0)<=(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.lid) ORDER BY ((UPPER(vt0.c0))&(((vt0.c0)<=(vt0.c0))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)<(vt1.c0))) IS FALSE)) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) IN ())  NULLS FIRST, CASE ((vt1.lid)%(vt0.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) IN ())  NULLS FIRST, CASE ((vt1.lid)%(vt0.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt1.c0 END  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)<(vt1.c0))) IS FALSE)) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) IN ())  NULLS FIRST, CASE ((vt1.lid)%(vt0.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) IN ())  NULLS FIRST, CASE ((vt1.lid)%(vt0.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt1.c0 END  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)<(vt1.c0))) IS FALSE)) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) IN ())  NULLS FIRST, CASE ((vt1.lid)%(vt0.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE vt1.c0 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('-557129097')AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY ((TYPEOF(vt0.c0)) IS TRUE) DESC, x'aa5e'  NULLS LAST, (- ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-557129097')AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0)) IS TRUE) DESC, x'aa5e'  NULLS LAST, (- ((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('-557129097')AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY ((TYPEOF(vt0.c0)) IS TRUE) DESC, x'aa5e'  NULLS LAST, (- ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-557129097')AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0)) IS TRUE) DESC, x'aa5e'  NULLS LAST, (- ((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('-557129097')AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY ((TYPEOF(vt0.c0)) IS TRUE) DESC, x'aa5e'  NULLS LAST, (- ((+ (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.lid)&(vt1.c0)) IN ())) ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, HEX(vt0.c0), (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt1.lid, CAST(vt1.lid AS REAL), vt1.c0 COLLATE BINARY))) ASC, CAST(((vt1.lid)LIKE(vt1.lid)) AS INTEGER)  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, HEX(vt0.c0), (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt1.lid, CAST(vt1.lid AS REAL), vt1.c0 COLLATE BINARY))) ASC, CAST(((vt1.lid)LIKE(vt1.lid)) AS INTEGER)  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.lid)&(vt1.c0)) IN ())) ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, HEX(vt0.c0), (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt1.lid, CAST(vt1.lid AS REAL), vt1.c0 COLLATE BINARY))) ASC, CAST(((vt1.lid)LIKE(vt1.lid)) AS INTEGER)  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, HEX(vt0.c0), (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt1.lid, CAST(vt1.lid AS REAL), vt1.c0 COLLATE BINARY))) ASC, CAST(((vt1.lid)LIKE(vt1.lid)) AS INTEGER)  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.lid)&(vt1.c0)) IN ())) ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, HEX(vt0.c0), (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt1.lid, CAST(vt1.lid AS REAL), vt1.c0 COLLATE BINARY))) ASC, CAST(((vt1.lid)LIKE(vt1.lid)) AS INTEGER)  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)) COLLATE NOCASE DESC, CASE WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) END ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((('1335991836') NOT BETWEEN (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0))) AND (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((('1335991836') NOT BETWEEN (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((('1335991836') NOT BETWEEN (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0))) AND (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((('1335991836') NOT BETWEEN (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((('1335991836') NOT BETWEEN (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0))) AND (CAST(vt1.c0 AS REAL))));
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.lid)|((vt1.lid IN ())))) ORDER BY vt1.lid DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)|((vt1.lid IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.lid DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.lid)|((vt1.lid IN ())))) ORDER BY vt1.lid DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)|((vt1.lid IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.lid DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.lid)|((vt1.lid IN ())))) ORDER BY vt1.lid DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))AND(((vt0.c0)<=(vt0.c0)))) WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))AND(((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))AND(((vt0.c0)<=(vt0.c0)))) WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))AND(((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))AND(((vt0.c0)<=(vt0.c0)))) WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (vt1.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (vt1.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (vt1.lid COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (vt1.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (vt1.lid COLLATE NOCASE)));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON '114660427' WHERE ((((vt1.lid)LIKE(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)LIKE(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON '114660427');
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON '114660427' WHERE ((((vt1.lid)LIKE(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)LIKE(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON '114660427');
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON '114660427' WHERE ((((vt1.lid)LIKE(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.lid) IS TRUE))) AND ((((1.403061583E9) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.lid) IS TRUE))) AND ((((1.403061583E9) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.lid) IS TRUE))) AND ((((1.403061583E9) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.lid) IS TRUE))) AND ((((1.403061583E9) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.lid) IS TRUE))) AND ((((1.403061583E9) NOT BETWEEN (vt1.lid) AND (vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(vt1.lid AS INTEGER) THEN ((vt1.lid) IS TRUE) WHEN ((((((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN '-792221777' THEN (((vt1.lid))>((vt1.c0))) WHEN ((vt1.c0)LIKE(x'')) THEN ((vt1.lid) NOT NULL) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END THEN vt1.lid END) ORDER BY ((((vt1.lid)IS(vt1.lid))) IS FALSE) ASC, ((-578998745 COLLATE NOCASE) NOT BETWEEN (((vt1.lid) IS FALSE)) AND ((- (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.lid AS INTEGER) THEN ((vt1.lid) IS TRUE) WHEN ((((((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN '-792221777' THEN (((vt1.lid))>((vt1.c0))) WHEN ((vt1.c0)LIKE(x'')) THEN ((vt1.lid) NOT NULL) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END THEN vt1.lid END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)IS(vt1.lid))) IS FALSE) ASC, ((-578998745 COLLATE NOCASE) NOT BETWEEN (((vt1.lid) IS FALSE)) AND ((- (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(vt1.lid AS INTEGER) THEN ((vt1.lid) IS TRUE) WHEN ((((((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN '-792221777' THEN (((vt1.lid))>((vt1.c0))) WHEN ((vt1.c0)LIKE(x'')) THEN ((vt1.lid) NOT NULL) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END THEN vt1.lid END) ORDER BY ((((vt1.lid)IS(vt1.lid))) IS FALSE) ASC, ((-578998745 COLLATE NOCASE) NOT BETWEEN (((vt1.lid) IS FALSE)) AND ((- (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.lid AS INTEGER) THEN ((vt1.lid) IS TRUE) WHEN ((((((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN '-792221777' THEN (((vt1.lid))>((vt1.c0))) WHEN ((vt1.c0)LIKE(x'')) THEN ((vt1.lid) NOT NULL) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END THEN vt1.lid END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid)IS(vt1.lid))) IS FALSE) ASC, ((-578998745 COLLATE NOCASE) NOT BETWEEN (((vt1.lid) IS FALSE)) AND ((- (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(vt1.lid AS INTEGER) THEN ((vt1.lid) IS TRUE) WHEN ((((((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)))OR(vt1.lid)))AND(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN '-792221777' THEN (((vt1.lid))>((vt1.c0))) WHEN ((vt1.c0)LIKE(x'')) THEN ((vt1.lid) NOT NULL) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END THEN vt1.lid END) ORDER BY ((((vt1.lid)IS(vt1.lid))) IS FALSE) ASC, ((-578998745 COLLATE NOCASE) NOT BETWEEN (((vt1.lid) IS FALSE)) AND ((- (vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid IN ()))&((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN ()))&((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid IN ()))&((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN ()))&((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.lid IN ()))&((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT * FROM vt0 WHERE ((((0.9319694950273167 IN ()))<>((- (vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.9319694950273167 IN ()))!=((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((0.9319694950273167 IN ()))<>((- (vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.9319694950273167 IN ()))!=((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((0.9319694950273167 IN ()))<>((- (vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN ()))AND(CASE WHEN vt1.lid THEN vt1.lid END)))OR(((vt1.c0)<=(vt1.lid)))))AND((NOT (vt1.c0)))))OR('-475670056'))) ORDER BY ((COALESCE(DISTINCT vt1.c0, vt1.lid, vt1.lid, vt1.lid)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND(CASE WHEN vt1.lid THEN vt1.lid END)))OR(((vt1.c0)<=(vt1.lid)))))AND((NOT (vt1.c0)))))OR('-475670056'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((COALESCE(DISTINCT vt1.c0, vt1.lid, vt1.lid, vt1.lid)) NOT NULL));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN ()))AND(CASE WHEN vt1.lid THEN vt1.lid END)))OR(((vt1.c0)<=(vt1.lid)))))AND((NOT (vt1.c0)))))OR('-475670056'))) ORDER BY ((COALESCE(DISTINCT vt1.c0, vt1.lid, vt1.lid, vt1.lid)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND(CASE WHEN vt1.lid THEN vt1.lid END)))OR(((vt1.c0)<=(vt1.lid)))))AND((NOT (vt1.c0)))))OR('-475670056'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((COALESCE(DISTINCT vt1.c0, vt1.lid, vt1.lid, vt1.lid)) NOT NULL));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN ()))AND(CASE WHEN vt1.lid THEN vt1.lid END)))OR(((vt1.c0)<=(vt1.lid)))))AND((NOT (vt1.c0)))))OR('-475670056'))) ORDER BY ((COALESCE(DISTINCT vt1.c0, vt1.lid, vt1.lid, vt1.lid)) NOT NULL);
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0 COLLATE NOCASE))) ORDER BY 0.5204329663137893, CAST(((0.31643283212905615)%('0.45475561091381345')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY 0.5204329663137893, CAST(((0.31643283212905615)%('0.45475561091381345')) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0 COLLATE NOCASE))) ORDER BY 0.5204329663137893, CAST(((0.31643283212905615)%('0.45475561091381345')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY 0.5204329663137893, CAST(((0.31643283212905615)%('0.45475561091381345')) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0 COLLATE NOCASE))) ORDER BY 0.5204329663137893, CAST(((0.31643283212905615)%('0.45475561091381345')) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.lid, vt1.lid, vt1.lid)) BETWEEN (((vt1.lid IN ()), vt1.c0 COLLATE BINARY, ((vt1.lid)/(vt1.lid)))) AND ((vt1.lid COLLATE BINARY, (('') NOT NULL), (('-213258993') NOT BETWEEN (vt1.lid) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid, vt1.lid, vt1.lid)) BETWEEN (((vt1.lid IN ()), vt1.c0 COLLATE BINARY, ((vt1.lid)/(vt1.lid)))) AND ((vt1.lid COLLATE BINARY, (('') NOT NULL), (('-213258993') NOT BETWEEN (vt1.lid) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.lid, vt1.lid, vt1.lid)) BETWEEN (((vt1.lid IN ()), vt1.c0 COLLATE BINARY, ((vt1.lid)/(vt1.lid)))) AND ((vt1.lid COLLATE BINARY, (('') NOT NULL), (('-213258993') NOT BETWEEN (vt1.lid) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid, vt1.lid, vt1.lid)) BETWEEN (((vt1.lid IN ()), vt1.c0 COLLATE BINARY, ((vt1.lid)/(vt1.lid)))) AND ((vt1.lid COLLATE BINARY, (('') NOT NULL), (('-213258993') NOT BETWEEN (vt1.lid) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.lid, vt1.lid, vt1.lid)) BETWEEN (((vt1.lid IN ()), vt1.c0 COLLATE BINARY, ((vt1.lid)/(vt1.lid)))) AND ((vt1.lid COLLATE BINARY, (('') NOT NULL), (('-213258993') NOT BETWEEN (vt1.lid) AND (vt1.c0))))));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN (vt0.c0 IN (vt0.c0, 't6yYW')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)<(0.40624444051984576)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN (vt0.c0 IN (vt0.c0, 't6yYW')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)<(0.40624444051984576)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN (vt0.c0 IN (vt0.c0, 't6yYW')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)<(0.40624444051984576)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN (vt0.c0 IN (vt0.c0, 't6yYW')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)<(0.40624444051984576)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN (vt0.c0 IN (vt0.c0, 't6yYW')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)<(0.40624444051984576)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.lid))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.lid IN ())))) ORDER BY ABS(vt1.c0) COLLATE RTRIM  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid))) NOT NULL) DESC  NULLS LAST, (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))>((('1335991836')<(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.lid))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.lid IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ABS(vt1.c0) COLLATE RTRIM  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid))) NOT NULL) DESC  NULLS LAST, (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))>((('1335991836')<(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.lid))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.lid IN ())))) ORDER BY ABS(vt1.c0) COLLATE RTRIM  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid))) NOT NULL) DESC  NULLS LAST, (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))>((('1335991836')<(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.lid))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.lid IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ABS(vt1.c0) COLLATE RTRIM  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid))) NOT NULL) DESC  NULLS LAST, (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))>((('1335991836')<(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.lid))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((vt1.lid IN ())))) ORDER BY ABS(vt1.c0) COLLATE RTRIM  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))OR(vt1.lid))) NOT NULL) DESC  NULLS LAST, (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))>((('1335991836')<(vt1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY NULL ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY NULL ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY NULL ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c0)&(vt0.c0)) AS TEXT)) ORDER BY CAST(((((vt1.lid)AND(vt1.lid)))AND(vt0.c0)) AS TEXT) ASC, CAST(DATE(vt1.c0, vt1.lid, vt1.c0) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)&(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((((vt1.lid)AND(vt1.lid)))AND(vt0.c0)) AS TEXT) ASC, CAST(DATE(vt1.c0, vt1.lid, vt1.c0) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c0)&(vt0.c0)) AS TEXT)) ORDER BY CAST(((((vt1.lid)AND(vt1.lid)))AND(vt0.c0)) AS TEXT) ASC, CAST(DATE(vt1.c0, vt1.lid, vt1.c0) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)&(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((((vt1.lid)AND(vt1.lid)))AND(vt0.c0)) AS TEXT) ASC, CAST(DATE(vt1.c0, vt1.lid, vt1.c0) AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c0)&(vt0.c0)) AS TEXT)) ORDER BY CAST(((((vt1.lid)AND(vt1.lid)))AND(vt0.c0)) AS TEXT) ASC, CAST(DATE(vt1.c0, vt1.lid, vt1.c0) AS BLOB) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (-411581377)))IS(((vt1.c0)%(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOT BETWEEN (vt1.lid) AND (-411581377)))IS(((vt1.c0)%(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (-411581377)))IS(((vt1.c0)%(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOT BETWEEN (vt1.lid) AND (-411581377)))IS(((vt1.c0)%(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (-411581377)))IS(((vt1.c0)%(vt1.lid)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))) WHERE (0.9319694950273167) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9319694950273167) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN vt0 ON (CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))) WHERE (0.9319694950273167) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9319694950273167) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN vt0 ON (CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))) WHERE (0.9319694950273167) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY LIKELY(vt1.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(vt1.c0) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY LIKELY(vt1.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(vt1.c0) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY LIKELY(vt1.c0) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)<<(vt1.lid)) IN (vt1.c0 COLLATE BINARY))) ORDER BY ((((vt1.c0)-(vt1.c0)))*(vt1.lid));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<<(vt1.lid)) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)-(vt1.c0)))*(vt1.lid)));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)<<(vt1.lid)) IN (vt1.c0 COLLATE BINARY))) ORDER BY ((((vt1.c0)-(vt1.c0)))*(vt1.lid));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<<(vt1.lid)) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)-(vt1.c0)))*(vt1.lid)));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)<<(vt1.lid)) IN (vt1.c0 COLLATE BINARY))) ORDER BY ((((vt1.c0)-(vt1.c0)))*(vt1.lid));
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY)>(0xffffffffb3cc0c2f))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.c0) AND ('')))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)>(0Xffffffffb3cc0c2f))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.c0) AND ('')))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END)))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY)>(0xffffffffb3cc0c2f))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.c0) AND ('')))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)>(0Xffffffffb3cc0c2f))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.c0) AND ('')))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END)))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY)>(0xffffffffb3cc0c2f))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt1.lid) BETWEEN (vt1.c0) AND ('')))) AND ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END)))  NULLS FIRST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0))<>((vt1.lid))) COLLATE BINARY WHERE ((- (CAST(vt1.c0 AS NUMERIC)))) ORDER BY CASE WHEN MIN(vt1.lid, vt1.c0) THEN ('1161568615' IN ()) WHEN LTRIM(vt0.c0, vt1.c0) THEN vt1.lid COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0))!=((vt1.lid))) COLLATE BINARY ORDER BY CASE WHEN MIN(vt1.lid, vt1.c0) THEN ('1161568615' IN ()) WHEN LTRIM(vt0.c0, vt1.c0) THEN vt1.lid COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0))<>((vt1.lid))) COLLATE BINARY WHERE ((- (CAST(vt1.c0 AS NUMERIC)))) ORDER BY CASE WHEN MIN(vt1.lid, vt1.c0) THEN ('1161568615' IN ()) WHEN LTRIM(vt0.c0, vt1.c0) THEN vt1.lid COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0))!=((vt1.lid))) COLLATE BINARY ORDER BY CASE WHEN MIN(vt1.lid, vt1.c0) THEN ('1161568615' IN ()) WHEN LTRIM(vt0.c0, vt1.c0) THEN vt1.lid COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0))<>((vt1.lid))) COLLATE BINARY WHERE ((- (CAST(vt1.c0 AS NUMERIC)))) ORDER BY CASE WHEN MIN(vt1.lid, vt1.c0) THEN ('1161568615' IN ()) WHEN LTRIM(vt0.c0, vt1.c0) THEN vt1.lid COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) END;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0)))LIKE(((vt1.c0)AND(vt1.c0))))) ORDER BY (((((NULL) NOTNULL)))!=((NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt1.c0)))LIKE(((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((NULL) NOTNULL)))!=((NULL))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0)))LIKE(((vt1.c0)AND(vt1.c0))))) ORDER BY (((((NULL) NOTNULL)))!=((NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt1.c0)))LIKE(((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((NULL) NOTNULL)))!=((NULL))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)LIKE(vt1.c0)))LIKE(((vt1.c0)AND(vt1.c0))))) ORDER BY (((((NULL) NOTNULL)))!=((NULL)));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND (''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND (''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND ('')));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.lid)&(NULL)) COLLATE NOCASE) ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))AND((((vt1.lid)) BETWEEN ((NULL)) AND ((vt1.lid)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.lid)&(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))AND((((vt1.lid)) BETWEEN ((NULL)) AND ((vt1.lid)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.lid)&(NULL)) COLLATE NOCASE) ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))AND((((vt1.lid)) BETWEEN ((NULL)) AND ((vt1.lid)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.lid)&(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))AND((((vt1.lid)) BETWEEN ((NULL)) AND ((vt1.lid)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.lid)&(NULL)) COLLATE NOCASE) ORDER BY ((((((((CAST(vt1.c0 AS BLOB))AND(((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))AND((((vt1.lid)) BETWEEN ((NULL)) AND ((vt1.lid)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE 'H|OQ' COLLATE BINARY  WHEN vt1.lid THEN vt1.c0 END WHERE ('1090793080');
SELECT SUM(count) FROM (SELECT ALL (('1090793080') IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE 'H|OQ' COLLATE BINARY  WHEN vt1.lid THEN vt1.c0 END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE 'H|OQ' COLLATE BINARY  WHEN vt1.lid THEN vt1.c0 END WHERE ('1090793080');
SELECT SUM(count) FROM (SELECT ALL (('1090793080') IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE 'H|OQ' COLLATE BINARY  WHEN vt1.lid THEN vt1.c0 END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE 'H|OQ' COLLATE BINARY  WHEN vt1.lid THEN vt1.c0 END WHERE ('1090793080');
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((x'71cb')))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((x'71cb')))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((x'71cb')))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((x'71cb')))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((x'71cb')))) ISNULL));
SELECT * FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid END)IS(vt1.lid))) ORDER BY CAST((- (vt1.lid)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid END)IS(vt1.lid))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((- (vt1.lid)) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid END)IS(vt1.lid))) ORDER BY CAST((- (vt1.lid)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid END)IS(vt1.lid))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((- (vt1.lid)) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid END)IS(vt1.lid))) ORDER BY CAST((- (vt1.lid)) AS INTEGER)  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 147245170 WHERE (CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN HEX(vt1.c0) THEN CAST(vt1.c0 AS REAL) WHEN 0.540990965963898 THEN ((vt1.c0)<<(vt1.lid)) WHEN CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END THEN vt1.c0 COLLATE RTRIM WHEN ('' IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END ELSE ((vt1.lid)&(vt1.lid)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN HEX(vt1.c0) THEN CAST(vt1.c0 AS REAL) WHEN 0.540990965963898 THEN ((vt1.c0)<<(vt1.lid)) WHEN CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END THEN vt1.c0 COLLATE RTRIM WHEN ('' IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END ELSE ((vt1.lid)&(vt1.lid)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON 147245170);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 147245170 WHERE (CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN HEX(vt1.c0) THEN CAST(vt1.c0 AS REAL) WHEN 0.540990965963898 THEN ((vt1.c0)<<(vt1.lid)) WHEN CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END THEN vt1.c0 COLLATE RTRIM WHEN ('' IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END ELSE ((vt1.lid)&(vt1.lid)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN HEX(vt1.c0) THEN CAST(vt1.c0 AS REAL) WHEN 0.540990965963898 THEN ((vt1.c0)<<(vt1.lid)) WHEN CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END THEN vt1.c0 COLLATE RTRIM WHEN ('' IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END ELSE ((vt1.lid)&(vt1.lid)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON 147245170);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 147245170 WHERE (CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN HEX(vt1.c0) THEN CAST(vt1.c0 AS REAL) WHEN 0.540990965963898 THEN ((vt1.c0)<<(vt1.lid)) WHEN CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END THEN vt1.c0 COLLATE RTRIM WHEN ('' IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END ELSE ((vt1.lid)&(vt1.lid)) END);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (NULL);
SELECT * FROM vt1 WHERE ((~ ('w ')));
SELECT SUM(count) FROM (SELECT (((~ ('w '))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ ('w ')));
SELECT SUM(count) FROM (SELECT (((~ ('w '))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ ('w ')));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)AND(vt1.c0)))>=('0.3026091222610676'))) ORDER BY PRINTF(vt1.lid COLLATE RTRIM, (vt1.lid IN ()), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)))) AND ((vt1.lid)))  NULLS FIRST, (NOT (vt1.lid)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt1.c0)))>=('0.3026091222610676'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY PRINTF(vt1.lid COLLATE RTRIM, (vt1.lid IN ()), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)))) AND ((vt1.lid)))  NULLS FIRST, (NOT (vt1.lid)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)AND(vt1.c0)))>=('0.3026091222610676'))) ORDER BY PRINTF(vt1.lid COLLATE RTRIM, (vt1.lid IN ()), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)))) AND ((vt1.lid)))  NULLS FIRST, (NOT (vt1.lid)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt1.c0)))>=('0.3026091222610676'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY PRINTF(vt1.lid COLLATE RTRIM, (vt1.lid IN ()), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)))) AND ((vt1.lid)))  NULLS FIRST, (NOT (vt1.lid)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)AND(vt1.c0)))>=('0.3026091222610676'))) ORDER BY PRINTF(vt1.lid COLLATE RTRIM, (vt1.lid IN ()), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)))) AND ((vt1.lid)))  NULLS FIRST, (NOT (vt1.lid)) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((~ (vt1.lid)))-(NULLIF(DISTINCT vt1.c0, vt1.lid))) WHERE (json_patch(((vt1.lid)<(vt1.c0)), ((vt1.c0)GLOB(vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((vt1.lid)<(vt1.c0)), ((vt1.c0)GLOB(vt1.lid)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((~ (vt1.lid)))-(NULLIF(DISTINCT vt1.c0, vt1.lid))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((~ (vt1.lid)))-(NULLIF(DISTINCT vt1.c0, vt1.lid))) WHERE (json_patch(((vt1.lid)<(vt1.c0)), ((vt1.c0)GLOB(vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((vt1.lid)<(vt1.c0)), ((vt1.c0)GLOB(vt1.lid)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((~ (vt1.lid)))-(NULLIF(DISTINCT vt1.c0, vt1.lid))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((~ (vt1.lid)))-(NULLIF(DISTINCT vt1.c0, vt1.lid))) WHERE (json_patch(((vt1.lid)<(vt1.c0)), ((vt1.c0)GLOB(vt1.lid))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0)))OR(json_remove(vt0.c0, vt1.lid, vt0.c0, vt1.c0))))AND((+ (vt1.c0))))) ORDER BY (((NOT (vt1.lid)))>(LOWER(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0)))OR(json_remove(vt0.c0, vt1.lid, vt0.c0, vt1.c0))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt1.lid)))>(LOWER(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0)))OR(json_remove(vt0.c0, vt1.lid, vt0.c0, vt1.c0))))AND((+ (vt1.c0))))) ORDER BY (((NOT (vt1.lid)))>(LOWER(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0)))OR(json_remove(vt0.c0, vt1.lid, vt0.c0, vt1.c0))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt1.lid)))>(LOWER(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt1.lid)))AND(-849348614)) COLLATE NOCASE COLLATE BINARY) ORDER BY NULL COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.lid)))AND(-849348614)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt1.lid)))AND(-849348614)) COLLATE NOCASE COLLATE BINARY) ORDER BY NULL COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.lid)))AND(-849348614)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL COLLATE NOCASE);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt1.lid)))AND(-849348614)) COLLATE NOCASE COLLATE BINARY) ORDER BY NULL COLLATE NOCASE;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c0) ISNULL))AND(CAST(vt1.lid AS REAL))))OR(((vt1.lid)|(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) ISNULL))AND(CAST(vt1.lid AS REAL))))OR(((vt1.lid)|(vt1.lid))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c0) ISNULL))AND(CAST(vt1.lid AS REAL))))OR(((vt1.lid)|(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) ISNULL))AND(CAST(vt1.lid AS REAL))))OR(((vt1.lid)|(vt1.lid))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c0) ISNULL))AND(CAST(vt1.lid AS REAL))))OR(((vt1.lid)|(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((NOT (vt1.lid))))) ORDER BY (vt1.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((NOT (vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((NOT (vt1.lid))))) ORDER BY (vt1.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((NOT (vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid))) BETWEEN ((vt1.c0 IN ())) AND ((NOT (vt1.lid))))) ORDER BY (vt1.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS NOT((('Cd誛Y')>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS NOT((('Cd誛Y')>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS NOT((('Cd誛Y')>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS NOT((('Cd誛Y')>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS NOT((('Cd誛Y')>>(vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.lid);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (x'c549'))) ORDER BY (((('-1619727831' IN ()), (((vt1.c0))<=((vt1.c0))), ((vt1.c0)<(vt1.c0))))<=(('-735465292', ((vt1.c0) ISNULL), x'fc3a' COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (x'c549'))) IS TRUE)  as count FROM vt1 ORDER BY (((('-1619727831' IN ()), (((vt1.c0))<=((vt1.c0))), ((vt1.c0)<(vt1.c0))))<=(('-735465292', ((vt1.c0) ISNULL), x'fc3a' COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (x'c549'))) ORDER BY (((('-1619727831' IN ()), (((vt1.c0))<=((vt1.c0))), ((vt1.c0)<(vt1.c0))))<=(('-735465292', ((vt1.c0) ISNULL), x'fc3a' COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (x'c549'))) IS TRUE)  as count FROM vt1 ORDER BY (((('-1619727831' IN ()), (((vt1.c0))<=((vt1.c0))), ((vt1.c0)<(vt1.c0))))<=(('-735465292', ((vt1.c0) ISNULL), x'fc3a' COLLATE RTRIM))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (x'c549'))) ORDER BY (((('-1619727831' IN ()), (((vt1.c0))<=((vt1.c0))), ((vt1.c0)<(vt1.c0))))<=(('-735465292', ((vt1.c0) ISNULL), x'fc3a' COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.lid IN ())) IS FALSE)) ORDER BY (((vt1.lid IN ()))*(LIKELY(x''))) DESC  NULLS FIRST, vt1.c0, vt1.lid ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid IN ())) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid IN ()))*(LIKELY(x''))) DESC  NULLS FIRST, vt1.c0, vt1.lid ASC);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid IN ())) IS FALSE)) ORDER BY (((vt1.lid IN ()))*(LIKELY(x''))) DESC  NULLS FIRST, vt1.c0, vt1.lid ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid IN ())) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid IN ()))*(LIKELY(x''))) DESC  NULLS FIRST, vt1.c0, vt1.lid ASC);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid IN ())) IS FALSE)) ORDER BY (((vt1.lid IN ()))*(LIKELY(x''))) DESC  NULLS FIRST, vt1.c0, vt1.lid ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.c0)) THEN NULLIF(DISTINCT vt0.c0, vt1.c0) ELSE UPPER(DISTINCT vt0.c0) END) ORDER BY ((((((vt1.lid)<(vt1.lid)))AND(((vt1.lid) IS FALSE))))AND(json_patch(vt0.c0, vt1.lid)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.c0)) THEN NULLIF(DISTINCT vt0.c0, vt1.c0) ELSE UPPER(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.lid)<(vt1.lid)))AND(((vt1.lid) IS FALSE))))AND(json_patch(vt0.c0, vt1.lid)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.c0)) THEN NULLIF(DISTINCT vt0.c0, vt1.c0) ELSE UPPER(DISTINCT vt0.c0) END) ORDER BY ((((((vt1.lid)<(vt1.lid)))AND(((vt1.lid) IS FALSE))))AND(json_patch(vt0.c0, vt1.lid)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.c0)) THEN NULLIF(DISTINCT vt0.c0, vt1.c0) ELSE UPPER(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.lid)<(vt1.lid)))AND(((vt1.lid) IS FALSE))))AND(json_patch(vt0.c0, vt1.lid)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt1.lid)OR(vt1.c0)))OR(vt1.lid)))AND(vt1.lid)))OR(vt1.c0)) THEN NULLIF(DISTINCT vt0.c0, vt1.c0) ELSE UPPER(DISTINCT vt0.c0) END) ORDER BY ((((((vt1.lid)<(vt1.lid)))AND(((vt1.lid) IS FALSE))))AND(json_patch(vt0.c0, vt1.lid)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)<=(vt1.lid)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(vt1.lid))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)<=(vt1.lid)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(vt1.lid))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)<=(vt1.lid)));
SELECT COUNT(*) FROM vt1 WHERE (((((('-1626788423') NOT NULL), CASE WHEN vt1.c0 THEN vt1.c0 END, ''))<>((((NULL)>(vt1.c0)), 1435786527, CAST(vt1.lid AS INTEGER))))) ORDER BY CASE (~ (vt1.lid))  WHEN '' THEN MAX(vt1.c0, vt1.lid) WHEN (((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) THEN TYPEOF(vt1.lid) WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((('-1626788423') NOT NULL), CASE WHEN vt1.c0 THEN vt1.c0 END, ''))<>((((NULL)>(vt1.c0)), 1435786527, CAST(vt1.lid AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY CASE (~ (vt1.lid))  WHEN '' THEN MAX(vt1.c0, vt1.lid) WHEN (((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) THEN TYPEOF(vt1.lid) WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (((((('-1626788423') NOT NULL), CASE WHEN vt1.c0 THEN vt1.c0 END, ''))<>((((NULL)>(vt1.c0)), 1435786527, CAST(vt1.lid AS INTEGER))))) ORDER BY CASE (~ (vt1.lid))  WHEN '' THEN MAX(vt1.c0, vt1.lid) WHEN (((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) THEN TYPEOF(vt1.lid) WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((('-1626788423') NOT NULL), CASE WHEN vt1.c0 THEN vt1.c0 END, ''))<>((((NULL)>(vt1.c0)), 1435786527, CAST(vt1.lid AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY CASE (~ (vt1.lid))  WHEN '' THEN MAX(vt1.c0, vt1.lid) WHEN (((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) THEN TYPEOF(vt1.lid) WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (((((('-1626788423') NOT NULL), CASE WHEN vt1.c0 THEN vt1.c0 END, ''))<>((((NULL)>(vt1.c0)), 1435786527, CAST(vt1.lid AS INTEGER))))) ORDER BY CASE (~ (vt1.lid))  WHEN '' THEN MAX(vt1.c0, vt1.lid) WHEN (((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) THEN TYPEOF(vt1.lid) WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN (+ (vt1.c0)) END;
SELECT * FROM vt1 WHERE ((- (((vt1.lid)<(vt1.lid))))) ORDER BY vt1.c0 DESC  NULLS FIRST, 0.4884839983447269 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.lid)<(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, 0.4884839983447269 DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((- (((vt1.lid)<(vt1.lid))))) ORDER BY vt1.c0 DESC  NULLS FIRST, 0.4884839983447269 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.lid)<(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST, 0.4884839983447269 DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((- (((vt1.lid)<(vt1.lid))))) ORDER BY vt1.c0 DESC  NULLS FIRST, 0.4884839983447269 DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)<(vt1.c0))  WHEN (vt1.lid IN (vt1.c0)) THEN ((vt1.c0)|(vt1.lid)) WHEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)) THEN LIKELIHOOD(vt1.lid, 0.6274689815783542) WHEN vt1.lid THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)) END) ORDER BY CAST(x'' AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<(vt1.c0))  WHEN (vt1.lid IN (vt1.c0)) THEN ((vt1.c0)|(vt1.lid)) WHEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)) THEN LIKELIHOOD(vt1.lid, 0.6274689815783542) WHEN vt1.lid THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(x'' AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)<(vt1.c0))  WHEN (vt1.lid IN (vt1.c0)) THEN ((vt1.c0)|(vt1.lid)) WHEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)) THEN LIKELIHOOD(vt1.lid, 0.6274689815783542) WHEN vt1.lid THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)) END) ORDER BY CAST(x'' AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)<(vt1.c0))  WHEN (vt1.lid IN (vt1.c0)) THEN ((vt1.c0)|(vt1.lid)) WHEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)) THEN LIKELIHOOD(vt1.lid, 0.6274689815783542) WHEN vt1.lid THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(x'' AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)<(vt1.c0))  WHEN (vt1.lid IN (vt1.c0)) THEN ((vt1.c0)|(vt1.lid)) WHEN ((((vt1.c0)OR(vt1.lid)))OR(vt1.lid)) THEN LIKELIHOOD(vt1.lid, 0.6274689815783542) WHEN vt1.lid THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)) END) ORDER BY CAST(x'' AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0)/(vt1.lid)) THEN ((vt1.lid)!=(vt1.lid)) WHEN ((vt1.lid)OR(vt1.lid)) THEN CAST(vt1.c0 AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.3254447266582453) THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE UPPER(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt1.c0)/(vt1.lid)) THEN ((vt1.lid)!=(vt1.lid)) WHEN ((vt1.lid)OR(vt1.lid)) THEN CAST(vt1.c0 AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.3254447266582453) THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE UPPER(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0)/(vt1.lid)) THEN ((vt1.lid)!=(vt1.lid)) WHEN ((vt1.lid)OR(vt1.lid)) THEN CAST(vt1.c0 AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.3254447266582453) THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE UPPER(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN ((vt1.c0)/(vt1.lid)) THEN ((vt1.lid)!=(vt1.lid)) WHEN ((vt1.lid)OR(vt1.lid)) THEN CAST(vt1.c0 AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.3254447266582453) THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE UPPER(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((vt1.c0)/(vt1.lid)) THEN ((vt1.lid)!=(vt1.lid)) WHEN ((vt1.lid)OR(vt1.lid)) THEN CAST(vt1.c0 AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.3254447266582453) THEN CASE WHEN vt1.lid THEN vt1.c0 END ELSE UPPER(vt1.c0) END);
SELECT ALL * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (NULL);
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (1e500 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (1e500 IN ())  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (1e500 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (1e500 IN ())  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (1e500 IN ())  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (0xffffffffd489246a) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0Xffffffffd489246a) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0xffffffffd489246a) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0Xffffffffd489246a) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0xffffffffd489246a) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (2071399534);
SELECT SUM(count) FROM (SELECT ALL ((2071399534) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (2071399534);
SELECT SUM(count) FROM (SELECT ALL ((2071399534) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (2071399534);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE ((x'')|(vt1.lid))  WHEN (((((((('\J')OR(vt0.c0)))AND(0X770e221a)))AND(vt1.c0)))AND(vt0.c0)) THEN '0.902389833146279' ELSE (((vt1.c0))<((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'')|(vt1.lid))  WHEN (((((((('\J')OR(vt0.c0)))AND(0x770e221a)))AND(vt1.c0)))AND(vt0.c0)) THEN '0.902389833146279' ELSE (((vt1.c0))<((vt0.c0))) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE ((x'')|(vt1.lid))  WHEN (((((((('\J')OR(vt0.c0)))AND(0X770e221a)))AND(vt1.c0)))AND(vt0.c0)) THEN '0.902389833146279' ELSE (((vt1.c0))<((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'')|(vt1.lid))  WHEN (((((((('\J')OR(vt0.c0)))AND(0x770e221a)))AND(vt1.c0)))AND(vt0.c0)) THEN '0.902389833146279' ELSE (((vt1.c0))<((vt0.c0))) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE ((x'')|(vt1.lid))  WHEN (((((((('\J')OR(vt0.c0)))AND(0X770e221a)))AND(vt1.c0)))AND(vt0.c0)) THEN '0.902389833146279' ELSE (((vt1.c0))<((vt0.c0))) END);
SELECT ALL * FROM vt1 WHERE (((((((x'')) BETWEEN ((vt1.lid)) AND ((vt1.lid)))))>=((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid)))))) ORDER BY (((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0))))<(((((vt1.c0, vt1.c0, vt1.lid))>=((vt1.c0, vt1.lid, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')) BETWEEN ((vt1.lid)) AND ((vt1.lid)))))>=((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0))))<(((((vt1.c0, vt1.c0, vt1.lid))>=((vt1.c0, vt1.lid, vt1.c0)))))));
SELECT ALL * FROM vt1 WHERE (((((((x'')) BETWEEN ((vt1.lid)) AND ((vt1.lid)))))>=((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid)))))) ORDER BY (((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0))))<(((((vt1.c0, vt1.c0, vt1.lid))>=((vt1.c0, vt1.lid, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')) BETWEEN ((vt1.lid)) AND ((vt1.lid)))))>=((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0))))<(((((vt1.c0, vt1.c0, vt1.lid))>=((vt1.c0, vt1.lid, vt1.c0)))))));
SELECT ALL * FROM vt1 WHERE (((((((x'')) BETWEEN ((vt1.lid)) AND ((vt1.lid)))))>=((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid)))))) ORDER BY (((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0))))<(((((vt1.c0, vt1.c0, vt1.lid))>=((vt1.c0, vt1.lid, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((x'')<=(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'')<=(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((x'')<=(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'')<=(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((x'')<=(vt1.lid)))));
SELECT * FROM vt0, vt1 WHERE (1463180126);
SELECT SUM(count) FROM (SELECT ALL ((1463180126) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (1463180126);
SELECT SUM(count) FROM (SELECT ALL ((1463180126) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (1463180126);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.lid AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.lid AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.lid AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.lid AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.lid AS TEXT));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((NULL) BETWEEN (vt1.lid) AND (vt1.lid)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) BETWEEN (vt1.lid) AND (vt1.lid)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((NULL) BETWEEN (vt1.lid) AND (vt1.lid)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) BETWEEN (vt1.lid) AND (vt1.lid)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((NULL) BETWEEN (vt1.lid) AND (vt1.lid)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT ((vt0.c0)<<(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE BINARY))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(0x5bd35968)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(0X5bd35968)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE BINARY))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(0x5bd35968)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(0X5bd35968)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))|(vt0.c0 COLLATE BINARY))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(0x5bd35968)) DESC;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END) NOT NULL));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NULL IN ()), 1258308857 DESC  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))/(((((0.35090259746971275)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ()), 1258308857 DESC  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))/(((((0.35090259746971275)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (NULL IN ()), 1258308857 DESC  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))/(((((0.35090259746971275)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ()), 1258308857 DESC  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))/(((((0.35090259746971275)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)+(vt1.c0)) THEN HEX(DISTINCT vt0.c0) ELSE CAST(vt0.c0 AS BLOB) END WHERE (((('-677114247')) NOT BETWEEN (((~ (vt1.c0)))) AND (((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-677114247')) NOT BETWEEN (((~ (vt1.c0)))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)+(vt1.c0)) THEN HEX(DISTINCT vt0.c0) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)+(vt1.c0)) THEN HEX(DISTINCT vt0.c0) ELSE CAST(vt0.c0 AS BLOB) END WHERE (((('-677114247')) NOT BETWEEN (((~ (vt1.c0)))) AND (((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-677114247')) NOT BETWEEN (((~ (vt1.c0)))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)+(vt1.c0)) THEN HEX(DISTINCT vt0.c0) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)+(vt1.c0)) THEN HEX(DISTINCT vt0.c0) ELSE CAST(vt0.c0 AS BLOB) END WHERE (((('-677114247')) NOT BETWEEN (((~ (vt1.c0)))) AND (((NOT (vt0.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE (((((0xffffffff8e73dc6c) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ('-2063721292') AND (((((vt0.c0)OR(vt1.lid)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffff8e73dc6c) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ('-2063721292') AND (((((vt0.c0)OR(vt1.lid)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((0xffffffff8e73dc6c) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ('-2063721292') AND (((((vt0.c0)OR(vt1.lid)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffff8e73dc6c) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ('-2063721292') AND (((((vt0.c0)OR(vt1.lid)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((0xffffffff8e73dc6c) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN ('-2063721292') AND (((((vt0.c0)OR(vt1.lid)))AND(vt1.c0)))));
SELECT * FROM vt1 WHERE (((((((vt1.lid)AND(vt1.lid)))AND(vt1.lid))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid)AND(vt1.lid)))AND(vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.lid)AND(vt1.lid)))AND(vt1.lid))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt1.lid)AND(vt1.lid)))AND(vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.lid)AND(vt1.lid)))AND(vt1.lid))) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.lid))!=((vt1.lid))) AS INTEGER)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.lid))!=((vt1.lid))) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.lid))!=((vt1.lid))) AS INTEGER)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.lid))!=((vt1.lid))) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.lid))!=((vt1.lid))) AS INTEGER)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC;
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid)<>(vt1.c0)))|(vt1.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)!=(vt1.c0)))|(vt1.lid))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid)<>(vt1.c0)))|(vt1.lid)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)!=(vt1.c0)))|(vt1.lid))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid)<>(vt1.c0)))|(vt1.lid)));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((x'') IS FALSE));
SELECT * FROM vt0, vt1 WHERE ((- ((((('1335991836')OR(vt1.lid)))AND(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((- ((((('1335991836')OR(vt1.lid)))AND(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((- ((((('1335991836')OR(vt1.lid)))AND(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((- ((((('1335991836')OR(vt1.lid)))AND(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((- ((((('1335991836')OR(vt1.lid)))AND(vt1.lid)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON CHAR(json_array_length(NULL)) WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CHAR(json_array_length(NULL)));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON CHAR(json_array_length(NULL)) WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CHAR(json_array_length(NULL)));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON CHAR(json_array_length(NULL)) WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)) COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)||(vt1.lid))) BETWEEN ((((vt1.lid))=((vt1.c0)))) AND (CAST(vt1.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.lid))) BETWEEN ((((vt1.lid))=((vt1.c0)))) AND (CAST(vt1.lid AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)||(vt1.lid))) BETWEEN ((((vt1.lid))=((vt1.c0)))) AND (CAST(vt1.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.lid))) BETWEEN ((((vt1.lid))=((vt1.c0)))) AND (CAST(vt1.lid AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)||(vt1.lid))) BETWEEN ((((vt1.lid))=((vt1.c0)))) AND (CAST(vt1.lid AS INTEGER))));
SELECT ALL * FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.lid);
SELECT ALL * FROM vt0, vt1 WHERE (PRINTF(((0.818170184153899)<(vt1.lid)), '0.6159974302449168' COLLATE BINARY, ((vt1.c0) NOTNULL))) ORDER BY (((((vt1.lid))>=((vt1.c0))))IS(((((vt1.c0)AND(vt1.lid)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((0.818170184153899)<(vt1.lid)), '0.6159974302449168' COLLATE BINARY, ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.lid))>=((vt1.c0))))IS(((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (PRINTF(((0.818170184153899)<(vt1.lid)), '0.6159974302449168' COLLATE BINARY, ((vt1.c0) NOTNULL))) ORDER BY (((((vt1.lid))>=((vt1.c0))))IS(((((vt1.c0)AND(vt1.lid)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((0.818170184153899)<(vt1.lid)), '0.6159974302449168' COLLATE BINARY, ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.lid))>=((vt1.c0))))IS(((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (PRINTF(((0.818170184153899)<(vt1.lid)), '0.6159974302449168' COLLATE BINARY, ((vt1.c0) NOTNULL))) ORDER BY (((((vt1.lid))>=((vt1.c0))))IS(((((vt1.c0)AND(vt1.lid)))AND(vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOTNULL)) ORDER BY 'uT', (vt1.lid COLLATE RTRIM IN ()), STRFTIME(((vt1.c0) NOTNULL), ((vt1.lid)|(vt1.c0)), 'sXm|f1UO') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY 'uT', (vt1.lid COLLATE RTRIM IN ()), STRFTIME(((vt1.c0) NOTNULL), ((vt1.lid)|(vt1.c0)), 'sXm|f1UO') ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOTNULL)) ORDER BY 'uT', (vt1.lid COLLATE RTRIM IN ()), STRFTIME(((vt1.c0) NOTNULL), ((vt1.lid)|(vt1.c0)), 'sXm|f1UO') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY 'uT', (vt1.lid COLLATE RTRIM IN ()), STRFTIME(((vt1.c0) NOTNULL), ((vt1.lid)|(vt1.c0)), 'sXm|f1UO') ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOTNULL)) ORDER BY 'uT', (vt1.lid COLLATE RTRIM IN ()), STRFTIME(((vt1.c0) NOTNULL), ((vt1.lid)|(vt1.c0)), 'sXm|f1UO') ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(vt1.lid) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt1.lid) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(vt1.lid) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt1.lid) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(vt1.lid) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.lid);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY ((UNLIKELY(x'')) BETWEEN (CASE NULL  WHEN 0.24139015191152868 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.lid)) DESC  NULLS FIRST, (((vt1.lid) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(x'')) BETWEEN (CASE NULL  WHEN 0.24139015191152868 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.lid)) DESC  NULLS FIRST, (((vt1.lid) IS FALSE) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY ((UNLIKELY(x'')) BETWEEN (CASE NULL  WHEN 0.24139015191152868 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.lid)) DESC  NULLS FIRST, (((vt1.lid) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(x'')) BETWEEN (CASE NULL  WHEN 0.24139015191152868 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.lid)) DESC  NULLS FIRST, (((vt1.lid) IS FALSE) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY ((UNLIKELY(x'')) BETWEEN (CASE NULL  WHEN 0.24139015191152868 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (vt1.lid)) DESC  NULLS FIRST, (((vt1.lid) IS FALSE) IN ()) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY (((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY (((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY (((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)) IN ());
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (- ((+ (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (- ((+ (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))!=((vt0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (- ((+ (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (- ((+ (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))!=((vt0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END END) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (- ((+ (vt0.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((((vt0.c0))<>((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.lid IN (vt0.c0)))<(vt1.lid COLLATE NOCASE))) ORDER BY ((x'')<=(((vt1.c0)>=(vt1.lid))))  NULLS FIRST, CAST(((vt0.c0)GLOB(vt1.lid)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid IN (vt0.c0)))<(vt1.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((x'')<=(((vt1.c0)>=(vt1.lid))))  NULLS FIRST, CAST(((vt0.c0)GLOB(vt1.lid)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.lid IN (vt0.c0)))<(vt1.lid COLLATE NOCASE))) ORDER BY ((x'')<=(((vt1.c0)>=(vt1.lid))))  NULLS FIRST, CAST(((vt0.c0)GLOB(vt1.lid)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid IN (vt0.c0)))<(vt1.lid COLLATE NOCASE))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((x'')<=(((vt1.c0)>=(vt1.lid))))  NULLS FIRST, CAST(((vt0.c0)GLOB(vt1.lid)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.lid IN (vt0.c0)))<(vt1.lid COLLATE NOCASE))) ORDER BY ((x'')<=(((vt1.c0)>=(vt1.lid))))  NULLS FIRST, CAST(((vt0.c0)GLOB(vt1.lid)) AS REAL);
SELECT * FROM vt0, vt1 WHERE ((CAST(vt1.lid AS BLOB) IN (((1703365065) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.lid AS BLOB) IN (((1703365065) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((CAST(vt1.lid AS BLOB) IN (((1703365065) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.lid AS BLOB) IN (((1703365065) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((CAST(vt1.lid AS BLOB) IN (((1703365065) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((vt0.c0)AND(vt0.c0))) ISNULL)  NULLS LAST, ((NOT (vt0.c0)) IN (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0))) ISNULL)  NULLS LAST, ((NOT (vt0.c0)) IN (CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((vt0.c0)AND(vt0.c0))) ISNULL)  NULLS LAST, ((NOT (vt0.c0)) IN (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0))) ISNULL)  NULLS LAST, ((NOT (vt0.c0)) IN (CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((vt0.c0)AND(vt0.c0))) ISNULL)  NULLS LAST, ((NOT (vt0.c0)) IN (CAST(vt0.c0 AS BLOB)));
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)))AND(((vt1.c0)==(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY)|((((vt1.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, '-2072657426', vt1.lid))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)))AND(((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY)|((((vt1.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, '-2072657426', vt1.lid))))) DESC);
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)))AND(((vt1.c0)==(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY)|((((vt1.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, '-2072657426', vt1.lid))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)))AND(((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY)|((((vt1.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, '-2072657426', vt1.lid))))) DESC);
SELECT * FROM vt1, vt0 WHERE (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)))AND(((vt1.c0)==(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY)|((((vt1.c0, vt0.c0, vt1.lid)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, '-2072657426', vt1.lid))))) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN ())) ORDER BY (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((0.546725411226607 IN (((((((((((((vt1.lid)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))OR(vt1.lid)), CASE vt0.c0  WHEN vt1.lid THEN vt1.lid ELSE 0xbfc59e0 END))) ORDER BY ((0.8112665075208455) BETWEEN (((vt1.c0) IS FALSE)) AND (CAST(vt1.lid AS NUMERIC))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0)) BETWEEN (vt1.c0) AND (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))) DESC;
SELECT SUM(count) FROM (SELECT (((0.546725411226607 IN (((((((((((((vt1.lid)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))OR(vt1.lid)), CASE vt0.c0  WHEN vt1.lid THEN vt1.lid ELSE 0xbfc59e0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((0.8112665075208455) BETWEEN (((vt1.c0) IS FALSE)) AND (CAST(vt1.lid AS NUMERIC))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0)) BETWEEN (vt1.c0) AND (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((0.546725411226607 IN (((((((((((((vt1.lid)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))OR(vt1.lid)), CASE vt0.c0  WHEN vt1.lid THEN vt1.lid ELSE 0xbfc59e0 END))) ORDER BY ((0.8112665075208455) BETWEEN (((vt1.c0) IS FALSE)) AND (CAST(vt1.lid AS NUMERIC))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0)) BETWEEN (vt1.c0) AND (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))) DESC;
SELECT SUM(count) FROM (SELECT (((0.546725411226607 IN (((((((((((((vt1.lid)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))OR(vt1.lid)), CASE vt0.c0  WHEN vt1.lid THEN vt1.lid ELSE 0xbfc59e0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((0.8112665075208455) BETWEEN (((vt1.c0) IS FALSE)) AND (CAST(vt1.lid AS NUMERIC))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0)) BETWEEN (vt1.c0) AND (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((0.546725411226607 IN (((((((((((((vt1.lid)OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'')))OR(vt1.lid)), CASE vt0.c0  WHEN vt1.lid THEN vt1.lid ELSE 0xbfc59e0 END))) ORDER BY ((0.8112665075208455) BETWEEN (((vt1.c0) IS FALSE)) AND (CAST(vt1.lid AS NUMERIC))) ASC  NULLS FIRST, ((TYPEOF(DISTINCT vt0.c0)) BETWEEN (vt1.c0) AND (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)==(vt1.lid)) THEN vt1.c0 COLLATE NOCASE ELSE (vt1.lid IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)==(vt1.lid)) THEN vt1.c0 COLLATE NOCASE ELSE (vt1.lid IN ()) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)==(vt1.lid)) THEN vt1.c0 COLLATE NOCASE ELSE (vt1.lid IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)==(vt1.lid)) THEN vt1.c0 COLLATE NOCASE ELSE (vt1.lid IN ()) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)==(vt1.lid)) THEN vt1.c0 COLLATE NOCASE ELSE (vt1.lid IN ()) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0))) AND (((- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0))) AND (((- (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0))) AND (((- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0))) AND (((- (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0))) AND (((- (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (NULL) AND (((vt1.lid)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT BETWEEN (NULL) AND (((vt1.lid)==(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (NULL) AND (((vt1.lid)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) NOT BETWEEN (NULL) AND (((vt1.lid)==(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (NULL) AND (((vt1.lid)==(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt0.c0)), ((vt1.c0) ISNULL), NULL)) AND ((((vt1.lid)-(vt1.lid)), (((vt0.c0, '', vt1.c0, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.lid, vt1.c0, vt1.lid))), (~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt0.c0)), ((vt1.c0) ISNULL), NULL)) AND ((((vt1.lid)-(vt1.lid)), (((vt0.c0, '', vt1.c0, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.lid, vt1.c0, vt1.lid))), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt0.c0)), ((vt1.c0) ISNULL), NULL)) AND ((((vt1.lid)-(vt1.lid)), (((vt0.c0, '', vt1.c0, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.lid, vt1.c0, vt1.lid))), (~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt0.c0)), ((vt1.c0) ISNULL), NULL)) AND ((((vt1.lid)-(vt1.lid)), (((vt0.c0, '', vt1.c0, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.lid, vt1.c0, vt1.lid))), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt0.c0)), ((vt1.c0) ISNULL), NULL)) AND ((((vt1.lid)-(vt1.lid)), (((vt0.c0, '', vt1.c0, vt0.c0, vt1.lid)) BETWEEN ((vt0.c0, vt1.lid, vt1.lid, vt1.lid, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.lid, vt1.c0, vt1.lid))), (~ (vt0.c0))))));
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c0)OR(vt1.c0)))AND(0Xffffffff9bab6e49)))AND((((vt0.c0))=((vt0.c0))))))OR(((vt1.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOT NULL))|(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt1.c0)))AND(0Xffffffff9bab6e49)))AND((((vt0.c0))=((vt0.c0))))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT NULL))|(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c0)OR(vt1.c0)))AND(0Xffffffff9bab6e49)))AND((((vt0.c0))=((vt0.c0))))))OR(((vt1.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOT NULL))|(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt1.c0)))AND(0Xffffffff9bab6e49)))AND((((vt0.c0))=((vt0.c0))))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT NULL))|(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c0)OR(vt1.c0)))AND(0Xffffffff9bab6e49)))AND((((vt0.c0))=((vt0.c0))))))OR(((vt1.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOT NULL))|(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.lid)) BETWEEN ((JULIANDAY(vt0.c0, vt1.lid, vt0.c0))) AND ((0x1b84bbe0 COLLATE BINARY)))) ORDER BY MIN(CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END, UPPER(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)) BETWEEN ((JULIANDAY(vt0.c0, vt1.lid, vt0.c0))) AND ((0x1b84bbe0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY MIN(CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END, UPPER(vt0.c0)));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.lid)) BETWEEN ((JULIANDAY(vt0.c0, vt1.lid, vt0.c0))) AND ((0x1b84bbe0 COLLATE BINARY)))) ORDER BY MIN(CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END, UPPER(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)) BETWEEN ((JULIANDAY(vt0.c0, vt1.lid, vt0.c0))) AND ((0x1b84bbe0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY MIN(CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END, UPPER(vt0.c0)));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.lid)) BETWEEN ((JULIANDAY(vt0.c0, vt1.lid, vt0.c0))) AND ((0x1b84bbe0 COLLATE BINARY)))) ORDER BY MIN(CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END, UPPER(vt0.c0));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.lid)))AND(((vt1.lid)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.lid)))AND(((vt1.lid)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.lid)))AND(((vt1.lid)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.lid)))AND(((vt1.lid)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))OR(vt1.lid)))AND(((vt1.lid)%(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))>(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (vt1.c0 IN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))))  NULLS LAST, json_patch(CAST(vt1.lid AS NUMERIC), (vt1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0)))>(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))))  NULLS LAST, json_patch(CAST(vt1.lid AS NUMERIC), (vt1.c0 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))>(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (vt1.c0 IN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))))  NULLS LAST, json_patch(CAST(vt1.lid AS NUMERIC), (vt1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0)))>(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))))  NULLS LAST, json_patch(CAST(vt1.lid AS NUMERIC), (vt1.c0 IN ()))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))>(CAST(vt1.c0 AS NUMERIC)))) ORDER BY (vt1.c0 IN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.lid))))  NULLS LAST, json_patch(CAST(vt1.lid AS NUMERIC), (vt1.c0 IN ()))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) ISNULL)))) ORDER BY (((~ (vt1.lid)))GLOB(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.lid)))GLOB(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) ISNULL)))) ORDER BY (((~ (vt1.lid)))GLOB(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.lid)))GLOB(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) ISNULL)))) ORDER BY (((~ (vt1.lid)))GLOB(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((json_object(vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_object(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((json_object(vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_object(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((json_object(vt0.c0, vt0.c0) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ('0.31643283212905615') AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ('0.31643283212905615') AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ('0.31643283212905615') AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ('0.31643283212905615') AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ('0.31643283212905615') AND ((~ (vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((-1388381594) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (RTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((-1388381594) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (RTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-1388381594) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (RTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((-1388381594) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (RTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-1388381594) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (RTRIM(vt0.c0))));
SELECT * FROM vt0, vt1 WHERE ('0.6787023197822043') ORDER BY (- ((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT (('0.6787023197822043') IS TRUE)  as count FROM vt0, vt1 ORDER BY (- ((~ (vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE ('0.6787023197822043') ORDER BY (- ((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT (('0.6787023197822043') IS TRUE)  as count FROM vt0, vt1 ORDER BY (- ((~ (vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE ('0.6787023197822043') ORDER BY (- ((~ (vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (0.20189931164977337) ORDER BY (((vt1.c0) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((0.20189931164977337) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) ISNULL) IN ()) DESC);
SELECT * FROM vt0, vt1 WHERE (0.20189931164977337) ORDER BY (((vt1.c0) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((0.20189931164977337) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) ISNULL) IN ()) DESC);
SELECT * FROM vt0, vt1 WHERE (0.20189931164977337) ORDER BY (((vt1.c0) ISNULL) IN ()) DESC;
SELECT * FROM vt1 WHERE (((((vt1.lid)IS NOT(vt1.c0)))/(CAST(vt1.lid AS NUMERIC)))) ORDER BY (+ (json_array_length(vt1.lid))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)IS NOT(vt1.c0)))/(CAST(vt1.lid AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (json_array_length(vt1.lid))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.lid)IS NOT(vt1.c0)))/(CAST(vt1.lid AS NUMERIC)))) ORDER BY (+ (json_array_length(vt1.lid))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)IS NOT(vt1.c0)))/(CAST(vt1.lid AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (json_array_length(vt1.lid))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.lid)IS NOT(vt1.c0)))/(CAST(vt1.lid AS NUMERIC)))) ORDER BY (+ (json_array_length(vt1.lid))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.lid IN ()) THEN ((vt1.c0) NOT NULL) ELSE CAST(vt1.lid AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.lid IN ()) THEN ((vt1.c0) NOT NULL) ELSE CAST(vt1.lid AS REAL) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.lid IN ()) THEN ((vt1.c0) NOT NULL) ELSE CAST(vt1.lid AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.lid IN ()) THEN ((vt1.c0) NOT NULL) ELSE CAST(vt1.lid AS REAL) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN (vt1.lid IN ()) THEN ((vt1.c0) NOT NULL) ELSE CAST(vt1.lid AS REAL) END);
SELECT * FROM vt0, vt1 WHERE ((((vt1.lid COLLATE BINARY))>=((((vt1.c0) IS FALSE))))) ORDER BY 0.6041558266124804;
SELECT SUM(count) FROM (SELECT (((((vt1.lid COLLATE BINARY))>=((((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.6041558266124804);
SELECT * FROM vt0, vt1 WHERE ((((vt1.lid COLLATE BINARY))>=((((vt1.c0) IS FALSE))))) ORDER BY 0.6041558266124804;
SELECT SUM(count) FROM (SELECT (((((vt1.lid COLLATE BINARY))>=((((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.6041558266124804);
SELECT * FROM vt0, vt1 WHERE ((((vt1.lid COLLATE BINARY))>=((((vt1.c0) IS FALSE))))) ORDER BY 0.6041558266124804;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL) DESC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL) DESC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL) DESC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL) DESC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL) DESC  NULLS FIRST, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT * FROM vt0 WHERE (((ABS(vt0.c0)) IS FALSE)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((ABS(vt0.c0)) IS FALSE)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((ABS(vt0.c0)) IS FALSE)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((vt0.c0, vt1.lid, '')) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.lid))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))OR(CASE WHEN 1344367676 THEN x'' WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.lid END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, vt1.lid, '')) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.lid))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))OR(CASE WHEN 1344367676 THEN x'' WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.lid END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((vt0.c0, vt1.lid, '')) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.lid))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))OR(CASE WHEN 1344367676 THEN x'' WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.lid END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0, vt1.lid, '')) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.lid))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))OR(CASE WHEN 1344367676 THEN x'' WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.lid END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((vt0.c0, vt1.lid, '')) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.lid))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))))OR(CASE WHEN 1344367676 THEN x'' WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.lid END)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB('+8bo炻'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB('+8bo炻'))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB('+8bo炻'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB('+8bo炻'))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB('+8bo炻'))) IS FALSE));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY '-1945558608' ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY '-1945558608' ASC);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY '-1945558608' ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY '-1945558608' ASC);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY '-1945558608' ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0 IN ()))AND((- (vt1.lid)))))AND('')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND((- (vt1.lid)))))AND(''))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0 IN ()))AND((- (vt1.lid)))))AND('')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND((- (vt1.lid)))))AND(''))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0 IN ()))AND((- (vt1.lid)))))AND('')));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (+ (CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (+ (CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (+ (CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE RTRIM) BETWEEN (((((vt1.lid)OR(vt1.c0)))AND(vt1.lid))) AND ((vt1.lid IN (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE RTRIM) BETWEEN (((((vt1.lid)OR(vt1.c0)))AND(vt1.lid))) AND ((vt1.lid IN (vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE RTRIM) BETWEEN (((((vt1.lid)OR(vt1.c0)))AND(vt1.lid))) AND ((vt1.lid IN (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE RTRIM) BETWEEN (((((vt1.lid)OR(vt1.c0)))AND(vt1.lid))) AND ((vt1.lid IN (vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE RTRIM) BETWEEN (((((vt1.lid)OR(vt1.c0)))AND(vt1.lid))) AND ((vt1.lid IN (vt1.lid)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT * FROM vt0 INNER JOIN vt1 ON CASE WHEN ((0.018956506026021835)>=(vt1.lid)) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)) END WHERE (((vt1.lid IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid IN ()) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE WHEN ((0.018956506026021835)>=(vt1.lid)) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)) END);
SELECT * FROM vt0 INNER JOIN vt1 ON CASE WHEN ((0.018956506026021835)>=(vt1.lid)) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)) END WHERE (((vt1.lid IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid IN ()) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE WHEN ((0.018956506026021835)>=(vt1.lid)) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)) END);
SELECT * FROM vt0 INNER JOIN vt1 ON CASE WHEN ((0.018956506026021835)>=(vt1.lid)) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt0.c0)) END WHERE (((vt1.lid IN ()) IN ()));
SELECT * FROM vt0 WHERE (('^N촽~oD|' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('^N촽~oD|' IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (('^N촽~oD|' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('^N촽~oD|' IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (('^N촽~oD|' IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ()));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOT BETWEEN (('' IN ())) AND (CAST(vt1.lid AS TEXT)))) ORDER BY ((vt1.c0) NOT NULL) COLLATE NOCASE DESC, (((((vt1.lid IN (vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.lid) NOT NULL))), CASE vt1.lid COLLATE RTRIM  WHEN (- (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.lid, vt1.c0, vt1.c0))<((vt1.c0, vt1.lid, vt1.lid, NULL, vt1.lid))) WHEN CAST(vt1.lid AS REAL) THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) WHEN ((('bb⌃zK', vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.lid, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0))) THEN ((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (('' IN ())) AND (CAST(vt1.lid AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) COLLATE NOCASE DESC, (((((vt1.lid IN (vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.lid) NOT NULL))), CASE vt1.lid COLLATE RTRIM  WHEN (- (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.lid, vt1.c0, vt1.c0))<((vt1.c0, vt1.lid, vt1.lid, NULL, vt1.lid))) WHEN CAST(vt1.lid AS REAL) THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) WHEN ((('bb⌃zK', vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.lid, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0))) THEN ((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOT BETWEEN (('' IN ())) AND (CAST(vt1.lid AS TEXT)))) ORDER BY ((vt1.c0) NOT NULL) COLLATE NOCASE DESC, (((((vt1.lid IN (vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.lid) NOT NULL))), CASE vt1.lid COLLATE RTRIM  WHEN (- (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.lid, vt1.c0, vt1.c0))<((vt1.c0, vt1.lid, vt1.lid, NULL, vt1.lid))) WHEN CAST(vt1.lid AS REAL) THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) WHEN ((('bb⌃zK', vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.lid, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0))) THEN ((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (('' IN ())) AND (CAST(vt1.lid AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) COLLATE NOCASE DESC, (((((vt1.lid IN (vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.lid) NOT NULL))), CASE vt1.lid COLLATE RTRIM  WHEN (- (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.lid, vt1.c0, vt1.c0))<((vt1.c0, vt1.lid, vt1.lid, NULL, vt1.lid))) WHEN CAST(vt1.lid AS REAL) THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) WHEN ((('bb⌃zK', vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.lid, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0))) THEN ((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOT BETWEEN (('' IN ())) AND (CAST(vt1.lid AS TEXT)))) ORDER BY ((vt1.c0) NOT NULL) COLLATE NOCASE DESC, (((((vt1.lid IN (vt1.c0)))OR(((vt1.c0) IS TRUE))))OR(((vt1.lid) NOT NULL))), CASE vt1.lid COLLATE RTRIM  WHEN (- (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.lid, vt1.c0, vt1.c0))<((vt1.c0, vt1.lid, vt1.lid, NULL, vt1.lid))) WHEN CAST(vt1.lid AS REAL) THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) WHEN ((('bb⌃zK', vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.lid, vt1.c0)) AND ((vt1.lid, vt1.lid, vt1.c0))) THEN ((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('2883440') ORDER BY ((((((((((1.687542859E9)%(vt0.c0)))AND(vt0.c0)))OR(((((((((0.30136153687768696)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))OR(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('2883440') IS TRUE)  as count FROM vt0 ORDER BY ((((((((((1.687542859E9)%(vt0.c0)))AND(vt0.c0)))OR(((((((((0.30136153687768696)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))OR(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ('2883440') ORDER BY ((((((((((1.687542859E9)%(vt0.c0)))AND(vt0.c0)))OR(((((((((0.30136153687768696)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))OR(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('2883440') IS TRUE)  as count FROM vt0 ORDER BY ((((((((((1.687542859E9)%(vt0.c0)))AND(vt0.c0)))OR(((((((((0.30136153687768696)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))OR(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ('2883440') ORDER BY ((((((((((1.687542859E9)%(vt0.c0)))AND(vt0.c0)))OR(((((((((0.30136153687768696)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))OR(IFNULL(DISTINCT vt0.c0, vt0.c0))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((((vt1.lid)<(vt1.lid)))OR((+ (vt1.c0)))))OR(x'')))OR(CAST(vt0.c0 AS NUMERIC))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND((('1941099294') ISNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt1.lid)) AND ((NULL)))))) ORDER BY (- (CAST(vt1.lid AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.lid)<(vt1.lid)))OR((+ (vt1.c0)))))OR(x'')))OR(CAST(vt0.c0 AS NUMERIC))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND((('1941099294') ISNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt1.lid)) AND ((NULL)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (CAST(vt1.lid AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((((vt1.lid)<(vt1.lid)))OR((+ (vt1.c0)))))OR(x'')))OR(CAST(vt0.c0 AS NUMERIC))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND((('1941099294') ISNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt1.lid)) AND ((NULL)))))) ORDER BY (- (CAST(vt1.lid AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.lid)<(vt1.lid)))OR((+ (vt1.c0)))))OR(x'')))OR(CAST(vt0.c0 AS NUMERIC))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND((('1941099294') ISNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt1.lid)) AND ((NULL)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (CAST(vt1.lid AS NUMERIC)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((((vt1.lid)<(vt1.lid)))OR((+ (vt1.c0)))))OR(x'')))OR(CAST(vt0.c0 AS NUMERIC))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND((('1941099294') ISNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt1.lid)) AND ((NULL)))))) ORDER BY (- (CAST(vt1.lid AS NUMERIC)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)IS NOT(vt0.c0)))))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT ALL * FROM vt1 WHERE (((HEX(vt1.lid)) NOT BETWEEN (((vt1.lid)!=(vt1.c0))) AND ((NOT (vt1.c0))))) ORDER BY CAST('-1596273347' AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt1.lid)) NOT BETWEEN (((vt1.lid)!=(vt1.c0))) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST('-1596273347' AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((HEX(vt1.lid)) NOT BETWEEN (((vt1.lid)!=(vt1.c0))) AND ((NOT (vt1.c0))))) ORDER BY CAST('-1596273347' AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt1.lid)) NOT BETWEEN (((vt1.lid)!=(vt1.c0))) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST('-1596273347' AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((HEX(vt1.lid)) NOT BETWEEN (((vt1.lid)!=(vt1.c0))) AND ((NOT (vt1.c0))))) ORDER BY CAST('-1596273347' AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD('', 0.3270858453351615));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('', 0.3270858453351615)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD('', 0.3270858453351615));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('', 0.3270858453351615)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD('', 0.3270858453351615));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (NOT (CAST(vt0.c0 AS TEXT))) WHERE (CASE ((vt0.c0)<=(vt0.c0))  WHEN ((((vt0.c0)OR(vt1.lid)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.lid END THEN ((vt1.lid)IS NOT(',n')) WHEN NULL THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.lid END END) ORDER BY ((NOT ('j?''Pl1M')) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<=(vt0.c0))  WHEN ((((vt0.c0)OR(vt1.lid)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.lid END THEN ((vt1.lid)IS NOT(',n')) WHEN NULL THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.lid END END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (CAST(vt0.c0 AS TEXT))) ORDER BY ((NOT ('j?''Pl1M')) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (NOT (CAST(vt0.c0 AS TEXT))) WHERE (CASE ((vt0.c0)<=(vt0.c0))  WHEN ((((vt0.c0)OR(vt1.lid)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.lid END THEN ((vt1.lid)IS NOT(',n')) WHEN NULL THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.lid END END) ORDER BY ((NOT ('j?''Pl1M')) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)<=(vt0.c0))  WHEN ((((vt0.c0)OR(vt1.lid)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.lid END THEN ((vt1.lid)IS NOT(',n')) WHEN NULL THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.lid END END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (CAST(vt0.c0 AS TEXT))) ORDER BY ((NOT ('j?''Pl1M')) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (NOT (CAST(vt0.c0 AS TEXT))) WHERE (CASE ((vt0.c0)<=(vt0.c0))  WHEN ((((vt0.c0)OR(vt1.lid)))OR(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.lid END THEN ((vt1.lid)IS NOT(',n')) WHEN NULL THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.lid END END) ORDER BY ((NOT ('j?''Pl1M')) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)<(vt1.lid)) COLLATE RTRIM) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)<(vt1.lid)) COLLATE RTRIM) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)<(vt1.lid)) COLLATE RTRIM) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))>=((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0))>=((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(x'' AS BLOB))));
SELECT * FROM vt1, vt0 WHERE (-1819049122 COLLATE BINARY) ORDER BY HEX(((vt1.c0)>=(vt1.lid))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1819049122 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY HEX(((vt1.c0)>=(vt1.lid))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (-1819049122 COLLATE BINARY) ORDER BY HEX(((vt1.c0)>=(vt1.lid))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1819049122 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY HEX(((vt1.c0)>=(vt1.lid))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (-1819049122 COLLATE BINARY) ORDER BY HEX(((vt1.c0)>=(vt1.lid))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ('0.24257392254776533') ORDER BY 1469331431 DESC;
SELECT SUM(count) FROM (SELECT ALL (('0.24257392254776533') IS TRUE)  as count FROM vt1, vt0 ORDER BY 1469331431 DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('0.24257392254776533') ORDER BY 1469331431 DESC;
SELECT SUM(count) FROM (SELECT ALL (('0.24257392254776533') IS TRUE)  as count FROM vt1, vt0 ORDER BY 1469331431 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR((NOT ('鸜')))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR((NOT ('鸜')))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR((NOT ('鸜')))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR((NOT ('鸜')))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR((NOT ('鸜')))))AND(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY CHAR(CASE WHEN vt0.c0 THEN vt1.lid ELSE NULL END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY CHAR(CASE WHEN vt0.c0 THEN vt1.lid ELSE NULL END) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY CHAR(CASE WHEN vt0.c0 THEN vt1.lid ELSE NULL END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY CHAR(CASE WHEN vt0.c0 THEN vt1.lid ELSE NULL END) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY CHAR(CASE WHEN vt0.c0 THEN vt1.lid ELSE NULL END) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid))) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND('1090793080')))OR(0.6526992080316555))) AND (((vt1.lid)OR(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid))) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND('1090793080')))OR(0.6526992080316555))) AND (((vt1.lid)OR(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid))) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND('1090793080')))OR(0.6526992080316555))) AND (((vt1.lid)OR(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid))) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND('1090793080')))OR(0.6526992080316555))) AND (((vt1.lid)OR(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.lid))) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND('1090793080')))OR(0.6526992080316555))) AND (((vt1.lid)OR(vt1.lid)))));
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((x'f3ac')/((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'f3ac')/((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((x'f3ac')/((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'f3ac')/((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((x'f3ac')/((+ (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE RTRIM)&(TRIM(vt1.lid, vt1.lid)))) ORDER BY (((+ (vt1.lid)))<((NOT (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE RTRIM)&(TRIM(vt1.lid, vt1.lid)))) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.lid)))<((NOT (vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE RTRIM)&(TRIM(vt1.lid, vt1.lid)))) ORDER BY (((+ (vt1.lid)))<((NOT (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE RTRIM)&(TRIM(vt1.lid, vt1.lid)))) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.lid)))<((NOT (vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE RTRIM)&(TRIM(vt1.lid, vt1.lid)))) ORDER BY (((+ (vt1.lid)))<((NOT (vt1.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))OR((((vt0.c0))<=((vt0.c0))))))AND(0x102f9c09))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))<>((+ (0.0603115562057045)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS FALSE))OR((((vt0.c0))<=((vt0.c0))))))AND(0X102f9c09))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))<>((+ (0.0603115562057045)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))OR((((vt0.c0))<=((vt0.c0))))))AND(0x102f9c09))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))<>((+ (0.0603115562057045)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS FALSE))OR((((vt0.c0))<=((vt0.c0))))))AND(0X102f9c09))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))<>((+ (0.0603115562057045)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))OR((((vt0.c0))<=((vt0.c0))))))AND(0x102f9c09))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))<>((+ (0.0603115562057045)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END IN ())) ORDER BY ((((vt1.c0)<>(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<>(vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END IN ())) ORDER BY ((((vt1.c0)<>(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<>(vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END IN ())) ORDER BY ((((vt1.c0)<>(vt1.c0))) IS FALSE);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((+ (vt1.c0)))-(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))-(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((+ (vt1.c0)))-(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))-(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((+ (vt1.c0)))-(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((('-839443852') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-839443852') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('-839443852') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-839443852') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('-839443852') NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) ISNULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(json_remove(vt1.c0, vt1.lid) AS BLOB)) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((vt1.lid))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_remove(vt1.c0, vt1.lid) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((vt1.lid))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(json_remove(vt1.c0, vt1.lid) AS BLOB)) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((vt1.lid))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_remove(vt1.c0, vt1.lid) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((vt1.lid))) ASC);
SELECT ALL * FROM vt0 WHERE (((((TYPEOF(DISTINCT 0.6097359444393478))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT 0.6097359444393478))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((TYPEOF(DISTINCT 0.6097359444393478))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT 0.6097359444393478))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((TYPEOF(DISTINCT 0.6097359444393478))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((vt0.c0, NULL COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))<>((vt0.c0, ((vt0.c0) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))))) ORDER BY ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE RTRIM DESC, COALESCE(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('R.⑪<')))AND(vt0.c0)), (vt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))<>((vt0.c0, ((vt0.c0) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE RTRIM DESC, COALESCE(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('R.⑪<')))AND(vt0.c0)), (vt0.c0 IN ())) DESC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((vt0.c0, NULL COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))<>((vt0.c0, ((vt0.c0) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))))) ORDER BY ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE RTRIM DESC, COALESCE(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('R.⑪<')))AND(vt0.c0)), (vt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))<>((vt0.c0, ((vt0.c0) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE RTRIM DESC, COALESCE(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('R.⑪<')))AND(vt0.c0)), (vt0.c0 IN ())) DESC);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((vt0.c0, NULL COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))<>((vt0.c0, ((vt0.c0) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))))) ORDER BY ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE COLLATE RTRIM DESC, COALESCE(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('R.⑪<')))AND(vt0.c0)), (vt0.c0 IN ())) DESC;
SELECT * FROM vt1, vt0 WHERE (((+ (vt1.lid)) IN ())) ORDER BY x'1b56';
SELECT SUM(count) FROM (SELECT ((((+ (vt1.lid)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'1b56');
SELECT * FROM vt1, vt0 WHERE (((+ (vt1.lid)) IN ())) ORDER BY x'1b56';
SELECT SUM(count) FROM (SELECT ((((+ (vt1.lid)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'1b56');
SELECT * FROM vt1, vt0 WHERE (((+ (vt1.lid)) IN ())) ORDER BY x'1b56';
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((~ (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((~ (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((~ (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((~ (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((~ (vt1.c0)))) AND ((vt1.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT vt0.c0) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR((~ (vt0.c0)))))AND((~ (vt0.c0)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((722638221))>(('6298181')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR((~ (vt0.c0)))))AND((~ (vt0.c0)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((722638221))>(('6298181')))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT vt0.c0) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR((~ (vt0.c0)))))AND((~ (vt0.c0)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((722638221))>(('6298181')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR((~ (vt0.c0)))))AND((~ (vt0.c0)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((722638221))>(('6298181')))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT vt0.c0) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)IS NOT(vt0.c0)))OR((~ (vt0.c0)))))AND((~ (vt0.c0)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((722638221))>(('6298181')))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.lid) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.lid) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.lid) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (NULLIF((+ (vt0.c0)), ((vt0.c0) NOT NULL))) ORDER BY ((((((vt0.c0)=(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (vt0.c0)), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)==(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0 WHERE (NULLIF((+ (vt0.c0)), ((vt0.c0) NOT NULL))) ORDER BY ((((((vt0.c0)=(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (vt0.c0)), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)==(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt0 WHERE (NULLIF((+ (vt0.c0)), ((vt0.c0) NOT NULL))) ORDER BY ((((((vt0.c0)=(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC;
SELECT ALL * FROM vt1 WHERE (((CASE x''  WHEN vt1.c0 THEN vt1.lid END) IS TRUE)) ORDER BY (((vt1.lid))<((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt1.c0 THEN vt1.lid END) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid))<((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (((CASE x''  WHEN vt1.c0 THEN vt1.lid END) IS TRUE)) ORDER BY (((vt1.lid))<((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt1.c0 THEN vt1.lid END) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid))<((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (((CASE x''  WHEN vt1.c0 THEN vt1.lid END) IS TRUE)) ORDER BY (((vt1.lid))<((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LOWER('0.11816896239039054')) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((LOWER('0.11816896239039054')) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LOWER('0.11816896239039054')) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((LOWER('0.11816896239039054')) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LOWER('0.11816896239039054')) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(HEX(DISTINCT '-1861959218'))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ABS(((vt0.c0) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND(HEX(DISTINCT '-1861959218'))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(((vt0.c0) IS TRUE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(HEX(DISTINCT '-1861959218'))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ABS(((vt0.c0) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND(HEX(DISTINCT '-1861959218'))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(((vt0.c0) IS TRUE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(HEX(DISTINCT '-1861959218'))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ABS(((vt0.c0) IS TRUE))  NULLS FIRST;
SELECT * FROM vt0 WHERE (0.8400354920200516) ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8400354920200516) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c0) NOTNULL))) ASC);
SELECT * FROM vt0 WHERE (0.8400354920200516) ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8400354920200516) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c0) NOTNULL))) ASC);
SELECT * FROM vt0 WHERE (0.8400354920200516) ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c0) NOTNULL))) ASC;
SELECT * FROM vt0 WHERE (((((- (vt0.c0)), vt0.c0, (NOT (-623060058))))==(((~ (vt0.c0)), ((vt0.c0)&(vt0.c0)), (+ ('-1773034119'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0)), vt0.c0, (NOT (-623060058))))==(((~ (vt0.c0)), ((vt0.c0)&(vt0.c0)), (+ ('-1773034119')))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((- (vt0.c0)), vt0.c0, (NOT (-623060058))))==(((~ (vt0.c0)), ((vt0.c0)&(vt0.c0)), (+ ('-1773034119'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0)), vt0.c0, (NOT (-623060058))))==(((~ (vt0.c0)), ((vt0.c0)&(vt0.c0)), (+ ('-1773034119')))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((- (vt0.c0)), vt0.c0, (NOT (-623060058))))==(((~ (vt0.c0)), ((vt0.c0)&(vt0.c0)), (+ ('-1773034119'))))));
SELECT * FROM vt1 WHERE (CASE vt1.lid  WHEN (vt1.lid IN ()) THEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) END) ORDER BY ((CAST(vt1.lid AS TEXT))>=(((vt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.lid  WHEN (vt1.lid IN ()) THEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.lid AS TEXT))>=(((vt1.c0) NOT NULL))) DESC);
SELECT * FROM vt1 WHERE (CASE vt1.lid  WHEN (vt1.lid IN ()) THEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) END) ORDER BY ((CAST(vt1.lid AS TEXT))>=(((vt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.lid  WHEN (vt1.lid IN ()) THEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.lid AS TEXT))>=(((vt1.c0) NOT NULL))) DESC);
SELECT * FROM vt1 WHERE (CASE vt1.lid  WHEN (vt1.lid IN ()) THEN ((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) END) ORDER BY ((CAST(vt1.lid AS TEXT))>=(((vt1.c0) NOT NULL))) DESC;
SELECT * FROM vt0, vt1 WHERE (json(((0.5447783571052051) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)) IN (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X	yX鱻,>臍[' THEN vt1.lid END, vt0.c0)) DESC  NULLS FIRST, CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB), NULL;
SELECT SUM(count) FROM (SELECT ALL ((json(((0.5447783571052051) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)) IN (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X	yX鱻,>臍[' THEN vt1.lid END, vt0.c0)) DESC  NULLS FIRST, CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB), NULL);
SELECT * FROM vt0, vt1 WHERE (json(((0.5447783571052051) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)) IN (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X	yX鱻,>臍[' THEN vt1.lid END, vt0.c0)) DESC  NULLS FIRST, CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB), NULL;
SELECT SUM(count) FROM (SELECT ALL ((json(((0.5447783571052051) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)) IN (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X	yX鱻,>臍[' THEN vt1.lid END, vt0.c0)) DESC  NULLS FIRST, CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB), NULL);
SELECT * FROM vt0, vt1 WHERE (json(((0.5447783571052051) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)) IN (CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X	yX鱻,>臍[' THEN vt1.lid END, vt0.c0)) DESC  NULLS FIRST, CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB), NULL;
SELECT * FROM vt1 WHERE (CAST((- (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((- (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((- (vt1.c0)) AS NUMERIC));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) ORDER BY (- ((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((COALESCE(DISTINCT vt0.c0, vt1.lid, vt1.lid, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))OR((vt1.lid IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(LENGTH(vt1.c0))) WHERE (PRINTF(((vt0.c0)/(vt1.lid)), ((vt0.c0)>=(vt1.lid)), LIKELIHOOD(vt1.c0, 0.006943451861096794)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((vt0.c0)/(vt1.lid)), ((vt0.c0)>=(vt1.lid)), LIKELIHOOD(vt1.c0, 0.006943451861096794))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((COALESCE(DISTINCT vt0.c0, vt1.lid, vt1.lid, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))OR((vt1.lid IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(LENGTH(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((COALESCE(DISTINCT vt0.c0, vt1.lid, vt1.lid, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))OR((vt1.lid IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(LENGTH(vt1.c0))) WHERE (PRINTF(((vt0.c0)/(vt1.lid)), ((vt0.c0)>=(vt1.lid)), LIKELIHOOD(vt1.c0, 0.006943451861096794)));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(((vt0.c0)/(vt1.lid)), ((vt0.c0)>=(vt1.lid)), LIKELIHOOD(vt1.c0, 0.006943451861096794))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((COALESCE(DISTINCT vt0.c0, vt1.lid, vt1.lid, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))OR((vt1.lid IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(LENGTH(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((COALESCE(DISTINCT vt0.c0, vt1.lid, vt1.lid, vt0.c0))OR(CAST(vt0.c0 AS BLOB))))OR((vt1.lid IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(LENGTH(vt1.c0))) WHERE (PRINTF(((vt0.c0)/(vt1.lid)), ((vt0.c0)>=(vt1.lid)), LIKELIHOOD(vt1.c0, 0.006943451861096794)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid)OR(vt1.lid)))OR(vt1.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)OR(vt1.lid)))OR(vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid)OR(vt1.lid)))OR(vt1.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)OR(vt1.lid)))OR(vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid)OR(vt1.lid)))OR(vt1.lid)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))<=(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT NULL)))<=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))<=(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT NULL)))<=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0) NOT NULL)))<=(((+ (vt0.c0))))));
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (((json_object(vt0.c0, 0.39183816260167526)) BETWEEN (((vt0.c0)>(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) ORDER BY ((0.5093722391896051)-((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt0.c0, 0.39183816260167526)) BETWEEN (((vt0.c0)>(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY ((0.5093722391896051)-((NOT (vt0.c0)))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((json_object(vt0.c0, 0.39183816260167526)) BETWEEN (((vt0.c0)>(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) ORDER BY ((0.5093722391896051)-((NOT (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt0.c0, 0.39183816260167526)) BETWEEN (((vt0.c0)>(vt1.c0))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY ((0.5093722391896051)-((NOT (vt0.c0)))) DESC);
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'f289') NOT NULL) COLLATE BINARY) ORDER BY TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'f289') NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'f289') NOT NULL) COLLATE BINARY) ORDER BY TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'f289') NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'f289') NOT NULL) COLLATE BINARY) ORDER BY TRIM((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)OR(vt1.lid)))AND(vt1.lid))) IS FALSE)) ORDER BY (((vt1.lid, vt0.c0, vt1.c0)) BETWEEN ((((vt1.lid) ISNULL), CAST(vt0.c0 AS REAL), (- (vt0.c0)))) AND ((((vt1.c0)<(vt1.c0)), 0.3697923435342644, (((vt1.c0))!=((vt1.lid))))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.lid)))AND(vt1.lid))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.lid, vt0.c0, vt1.c0)) BETWEEN ((((vt1.lid) ISNULL), CAST(vt0.c0 AS REAL), (- (vt0.c0)))) AND ((((vt1.c0)<(vt1.c0)), 0.3697923435342644, (((vt1.c0))<>((vt1.lid)))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)OR(vt1.lid)))AND(vt1.lid))) IS FALSE)) ORDER BY (((vt1.lid, vt0.c0, vt1.c0)) BETWEEN ((((vt1.lid) ISNULL), CAST(vt0.c0 AS REAL), (- (vt0.c0)))) AND ((((vt1.c0)<(vt1.c0)), 0.3697923435342644, (((vt1.c0))!=((vt1.lid))))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.lid)))AND(vt1.lid))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.lid, vt0.c0, vt1.c0)) BETWEEN ((((vt1.lid) ISNULL), CAST(vt0.c0 AS REAL), (- (vt0.c0)))) AND ((((vt1.c0)<(vt1.c0)), 0.3697923435342644, (((vt1.c0))<>((vt1.lid)))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0)OR(vt1.lid)))AND(vt1.lid))) IS FALSE)) ORDER BY (((vt1.lid, vt0.c0, vt1.c0)) BETWEEN ((((vt1.lid) ISNULL), CAST(vt0.c0 AS REAL), (- (vt0.c0)))) AND ((((vt1.c0)<(vt1.c0)), 0.3697923435342644, (((vt1.c0))!=((vt1.lid))))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOTNULL)))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS LAST, CAST(vt0.c0 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS LAST, CAST(vt0.c0 AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOTNULL)))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS LAST, CAST(vt0.c0 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS LAST, CAST(vt0.c0 AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOTNULL)))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER))))  NULLS LAST, CAST(vt0.c0 AS BLOB) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END THEN (('0.3019197171069661') NOT BETWEEN (x'') AND (vt1.c0)) WHEN (((0.29307047871380065)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((vt1.lid, vt0.c0, vt0.c0, vt1.c0, vt1.lid))<=((vt1.c0, x'', vt1.lid, vt1.c0, vt1.c0))) THEN (((('')OR(vt1.lid)))OR(vt0.c0)) END) ORDER BY CASE WHEN (((vt1.c0))<>((vt0.c0))) THEN (- (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END DESC  NULLS FIRST, ((((vt1.lid) ISNULL)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt1.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END THEN (('0.3019197171069661') NOT BETWEEN (x'') AND (vt1.c0)) WHEN (((0.29307047871380065)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((vt1.lid, vt0.c0, vt0.c0, vt1.c0, vt1.lid))<=((vt1.c0, x'', vt1.lid, vt1.c0, vt1.c0))) THEN (((('')OR(vt1.lid)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (((vt1.c0))!=((vt0.c0))) THEN (- (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END DESC  NULLS FIRST, ((((vt1.lid) ISNULL)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt1.c0 IN (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END THEN (('0.3019197171069661') NOT BETWEEN (x'') AND (vt1.c0)) WHEN (((0.29307047871380065)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((vt1.lid, vt0.c0, vt0.c0, vt1.c0, vt1.lid))<=((vt1.c0, x'', vt1.lid, vt1.c0, vt1.c0))) THEN (((('')OR(vt1.lid)))OR(vt0.c0)) END) ORDER BY CASE WHEN (((vt1.c0))<>((vt0.c0))) THEN (- (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END DESC  NULLS FIRST, ((((vt1.lid) ISNULL)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt1.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END THEN (('0.3019197171069661') NOT BETWEEN (x'') AND (vt1.c0)) WHEN (((0.29307047871380065)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((vt1.lid, vt0.c0, vt0.c0, vt1.c0, vt1.lid))<=((vt1.c0, x'', vt1.lid, vt1.c0, vt1.c0))) THEN (((('')OR(vt1.lid)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (((vt1.c0))!=((vt0.c0))) THEN (- (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END DESC  NULLS FIRST, ((((vt1.lid) ISNULL)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt1.c0 IN (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END THEN (('0.3019197171069661') NOT BETWEEN (x'') AND (vt1.c0)) WHEN (((0.29307047871380065)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (((vt1.lid, vt0.c0, vt0.c0, vt1.c0, vt1.lid))<=((vt1.c0, x'', vt1.lid, vt1.c0, vt1.c0))) THEN (((('')OR(vt1.lid)))OR(vt0.c0)) END) ORDER BY CASE WHEN (((vt1.c0))<>((vt0.c0))) THEN (- (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END DESC  NULLS FIRST, ((((vt1.lid) ISNULL)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt1.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((0.44143152854233025)GLOB(vt1.c0))) BETWEEN ((((('U嫫[x]')AND(vt1.c0)))AND(vt1.lid))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.44143152854233025)GLOB(vt1.c0))) BETWEEN ((((('U嫫[x]')AND(vt1.c0)))AND(vt1.lid))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((0.44143152854233025)GLOB(vt1.c0))) BETWEEN ((((('U嫫[x]')AND(vt1.c0)))AND(vt1.lid))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((0.44143152854233025)GLOB(vt1.c0))) BETWEEN ((((('U嫫[x]')AND(vt1.c0)))AND(vt1.lid))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((0.44143152854233025)GLOB(vt1.c0))) BETWEEN ((((('U嫫[x]')AND(vt1.c0)))AND(vt1.lid))) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))OR(vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE ((((((~ (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt1.lid)-(vt1.lid))))) ORDER BY NULL ASC  NULLS LAST, ((-1.875747038E9)<>(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt1.lid)-(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL ASC  NULLS LAST, ((-1.875747038E9)!=(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((((~ (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt1.lid)-(vt1.lid))))) ORDER BY NULL ASC  NULLS LAST, ((-1.875747038E9)<>(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt1.lid)-(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL ASC  NULLS LAST, ((-1.875747038E9)!=(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((((~ (vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt1.lid)-(vt1.lid))))) ORDER BY NULL ASC  NULLS LAST, ((-1.875747038E9)<>(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (0.9036586758760354 COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.9036586758760354 COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0.9036586758760354 COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.9036586758760354 COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0.9036586758760354 COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)&(((vt0.c0)&(NULL))))) ORDER BY (vt1.c0 IN ()) COLLATE BINARY DESC  NULLS LAST, (- (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END)&(((vt0.c0)&(NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ()) COLLATE BINARY DESC  NULLS LAST, (- (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)&(((vt0.c0)&(NULL))))) ORDER BY (vt1.c0 IN ()) COLLATE BINARY DESC  NULLS LAST, (- (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END)&(((vt0.c0)&(NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 IN ()) COLLATE BINARY DESC  NULLS LAST, (- (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)&(((vt0.c0)&(NULL))))) ORDER BY (vt1.c0 IN ()) COLLATE BINARY DESC  NULLS LAST, (- (vt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM vt1 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((x'') NOTNULL));
SELECT * FROM vt0 WHERE ((+ ((+ ('Ĭ9#Tㅾ30'))))) ORDER BY 'n钰[ࠞ''?' DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ ('Ĭ9#Tㅾ30'))))) IS TRUE)  as count FROM vt0 ORDER BY 'n钰[ࠞ''?' DESC);
SELECT * FROM vt0 WHERE ((+ ((+ ('Ĭ9#Tㅾ30'))))) ORDER BY 'n钰[ࠞ''?' DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ ('Ĭ9#Tㅾ30'))))) IS TRUE)  as count FROM vt0 ORDER BY 'n钰[ࠞ''?' DESC);
SELECT * FROM vt0 WHERE ((+ ((+ ('Ĭ9#Tㅾ30'))))) ORDER BY 'n钰[ࠞ''?' DESC;
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((-1.477431413E9)OR(((((((((vt1.lid)OR(vt0.c0)))AND(vt1.lid)))AND(vt0.c0)))OR(vt1.c0)))))AND(0x4cd81e08)) DESC, ((CAST('-681845357' AS NUMERIC))GLOB(vt0.c0 COLLATE NOCASE)) ASC, ((((((vt1.lid) IS FALSE))AND((vt1.c0 IN ()))))OR(((vt1.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((-1.477431413E9)OR(((((((((vt1.lid)OR(vt0.c0)))AND(vt1.lid)))AND(vt0.c0)))OR(vt1.c0)))))AND(0X4cd81e08)) DESC, ((CAST('-681845357' AS NUMERIC))GLOB(vt0.c0 COLLATE NOCASE)) ASC, ((((((vt1.lid) IS FALSE))AND((vt1.c0 IN ()))))OR(((vt1.c0)IS(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((-1.477431413E9)OR(((((((((vt1.lid)OR(vt0.c0)))AND(vt1.lid)))AND(vt0.c0)))OR(vt1.c0)))))AND(0x4cd81e08)) DESC, ((CAST('-681845357' AS NUMERIC))GLOB(vt0.c0 COLLATE NOCASE)) ASC, ((((((vt1.lid) IS FALSE))AND((vt1.c0 IN ()))))OR(((vt1.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((-1.477431413E9)OR(((((((((vt1.lid)OR(vt0.c0)))AND(vt1.lid)))AND(vt0.c0)))OR(vt1.c0)))))AND(0X4cd81e08)) DESC, ((CAST('-681845357' AS NUMERIC))GLOB(vt0.c0 COLLATE NOCASE)) ASC, ((((((vt1.lid) IS FALSE))AND((vt1.c0 IN ()))))OR(((vt1.c0)IS(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((-1.477431413E9)OR(((((((((vt1.lid)OR(vt0.c0)))AND(vt1.lid)))AND(vt0.c0)))OR(vt1.c0)))))AND(0x4cd81e08)) DESC, ((CAST('-681845357' AS NUMERIC))GLOB(vt0.c0 COLLATE NOCASE)) ASC, ((((((vt1.lid) IS FALSE))AND((vt1.c0 IN ()))))OR(((vt1.c0)IS(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)AND('')))AND(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND('')))AND(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)AND('')))AND(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND('')))AND(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)AND('')))AND(vt0.c0)) COLLATE RTRIM;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)))|((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((- (x'cb932a01')))<>((vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c0)))|((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (x'cb932a01')))<>((vt1.lid IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)))|((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((- (x'cb932a01')))<>((vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c0)))|((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (x'cb932a01')))<>((vt1.lid IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0)))|((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((- (x'cb932a01')))<>((vt1.lid IN ())));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.lid)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.lid)>>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.lid)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.lid)>>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.lid)>>(vt1.c0)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN '-110514291' WHEN vt1.c0 THEN vt1.lid END  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt0.c0)=(vt1.lid)) THEN ((vt0.c0)/(vt1.c0)) WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END WHEN (NOT (vt0.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0)-(vt1.lid)) THEN ((vt1.c0)IS(vt1.c0)) WHEN LOWER(DISTINCT vt1.lid) THEN ((0.6128920276901436) BETWEEN (vt1.lid) AND (vt0.c0)) WHEN vt1.lid THEN ((vt1.lid)<>(vt0.c0)) END WHERE ((vt1.lid COLLATE NOCASE IN ())) ORDER BY ((((vt0.c0) NOTNULL))<<(((vt1.c0)%(vt1.lid)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.lid COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN '-110514291' WHEN vt1.c0 THEN vt1.lid END  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt0.c0)=(vt1.lid)) THEN ((vt0.c0)/(vt1.c0)) WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END WHEN (NOT (vt0.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0)-(vt1.lid)) THEN ((vt1.c0)IS(vt1.c0)) WHEN LOWER(DISTINCT vt1.lid) THEN ((0.6128920276901436) BETWEEN (vt1.lid) AND (vt0.c0)) WHEN vt1.lid THEN ((vt1.lid)<>(vt0.c0)) END ORDER BY ((((vt0.c0) NOTNULL))<<(((vt1.c0)%(vt1.lid)))) DESC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN '-110514291' WHEN vt1.c0 THEN vt1.lid END  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt0.c0)=(vt1.lid)) THEN ((vt0.c0)/(vt1.c0)) WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END WHEN (NOT (vt0.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0)-(vt1.lid)) THEN ((vt1.c0)IS(vt1.c0)) WHEN LOWER(DISTINCT vt1.lid) THEN ((0.6128920276901436) BETWEEN (vt1.lid) AND (vt0.c0)) WHEN vt1.lid THEN ((vt1.lid)<>(vt0.c0)) END WHERE ((vt1.lid COLLATE NOCASE IN ())) ORDER BY ((((vt0.c0) NOTNULL))<<(((vt1.c0)%(vt1.lid)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.lid COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN '-110514291' WHEN vt1.c0 THEN vt1.lid END  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt0.c0)=(vt1.lid)) THEN ((vt0.c0)/(vt1.c0)) WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END WHEN (NOT (vt0.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0)-(vt1.lid)) THEN ((vt1.c0)IS(vt1.c0)) WHEN LOWER(DISTINCT vt1.lid) THEN ((0.6128920276901436) BETWEEN (vt1.lid) AND (vt0.c0)) WHEN vt1.lid THEN ((vt1.lid)<>(vt0.c0)) END ORDER BY ((((vt0.c0) NOTNULL))<<(((vt1.c0)%(vt1.lid)))) DESC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE CASE vt1.c0  WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN '-110514291' WHEN vt1.c0 THEN vt1.lid END  WHEN vt1.c0 THEN vt1.c0 WHEN ((vt0.c0)=(vt1.lid)) THEN ((vt0.c0)/(vt1.c0)) WHEN ((vt1.c0)IS NOT(vt0.c0)) THEN CASE WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END WHEN (NOT (vt0.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0)-(vt1.lid)) THEN ((vt1.c0)IS(vt1.c0)) WHEN LOWER(DISTINCT vt1.lid) THEN ((0.6128920276901436) BETWEEN (vt1.lid) AND (vt0.c0)) WHEN vt1.lid THEN ((vt1.lid)<>(vt0.c0)) END WHERE ((vt1.lid COLLATE NOCASE IN ())) ORDER BY ((((vt0.c0) NOTNULL))<<(((vt1.c0)%(vt1.lid)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (0.8260277053233979) ORDER BY CASE '-68694282'  WHEN NULL THEN (~ (vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8260277053233979) IS TRUE)  as count FROM vt1 ORDER BY CASE '-68694282'  WHEN NULL THEN (~ (vt1.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.8260277053233979) ORDER BY CASE '-68694282'  WHEN NULL THEN (~ (vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8260277053233979) IS TRUE)  as count FROM vt1 ORDER BY CASE '-68694282'  WHEN NULL THEN (~ (vt1.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.8260277053233979) ORDER BY CASE '-68694282'  WHEN NULL THEN (~ (vt1.c0)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(TYPEOF(DISTINCT vt0.c0))))OR(vt1.c0))) ORDER BY ((('Cd誛Y')) BETWEEN (((vt1.lid IN ()))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))))), vt1.lid;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(TYPEOF(DISTINCT vt0.c0))))OR(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((('Cd誛Y')) BETWEEN (((vt1.lid IN ()))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))))), vt1.lid);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(TYPEOF(DISTINCT vt0.c0))))OR(vt1.c0))) ORDER BY ((('Cd誛Y')) BETWEEN (((vt1.lid IN ()))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))))), vt1.lid;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(TYPEOF(DISTINCT vt0.c0))))OR(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((('Cd誛Y')) BETWEEN (((vt1.lid IN ()))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))))), vt1.lid);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))OR(TYPEOF(DISTINCT vt0.c0))))OR(vt1.c0))) ORDER BY ((('Cd誛Y')) BETWEEN (((vt1.lid IN ()))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))))), vt1.lid;
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(0.005090466774504532))) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(0.005090466774504532))) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(0.005090466774504532))) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(0.005090466774504532))) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) BETWEEN (((vt0.c0)IS NOT(0.005090466774504532))) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(-1990936439)))OR(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(-1990936439)))OR(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(-1990936439)))OR(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(-1990936439)))OR(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(-1990936439)))OR(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)-(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((vt1.lid)>(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)-(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.lid)>(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)-(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((vt1.lid)>(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)-(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.lid)>(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0)-(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY ((vt1.lid)>(vt1.c0)) COLLATE BINARY;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0)<(vt1.lid)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt1.lid)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0)<(vt1.lid)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt1.lid)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c0)<(vt1.lid)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE ((('645818801')-(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('645818801')-(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('645818801')-(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('645818801')-(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('645818801')-(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))))AND((- (vt1.lid))))) ORDER BY 0.9803696085028846;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))AND(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))))AND((- (vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.9803696085028846);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))))AND((- (vt1.lid))))) ORDER BY 0.9803696085028846;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))AND(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))))AND((- (vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.9803696085028846);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))))AND((- (vt1.lid))))) ORDER BY 0.9803696085028846;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.lid) NOT NULL) IN (vt0.c0, (+ (vt1.lid)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.lid) NOT NULL) IN (vt0.c0, (+ (vt1.lid)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.lid) NOT NULL) IN (vt0.c0, (+ (vt1.lid)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.lid) NOT NULL) IN (vt0.c0, (+ (vt1.lid)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.lid) NOT NULL) IN (vt0.c0, (+ (vt1.lid)))) WHERE (NULL);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt1.lid, vt1.lid)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((0x2fc4cbc3, '', vt1.c0)))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt1.lid, vt1.lid)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((0x2fc4cbc3, '', vt1.c0)))) AND (x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt1.lid, vt1.lid)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((0x2fc4cbc3, '', vt1.c0)))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt1.lid, vt1.lid)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((0x2fc4cbc3, '', vt1.c0)))) AND (x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0, vt1.lid, vt1.lid)) BETWEEN ((vt1.c0, vt1.lid, vt0.c0)) AND ((0x2fc4cbc3, '', vt1.c0)))) AND (x'')));
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE RTRIM) ORDER BY (((((vt0.c0))<>((vt1.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY (((((vt0.c0))<>((vt1.c0)))) NOTNULL) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE RTRIM) ORDER BY (((((vt0.c0))<>((vt1.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY (((((vt0.c0))<>((vt1.c0)))) NOTNULL) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE RTRIM) ORDER BY (((((vt0.c0))<>((vt1.c0)))) NOTNULL) DESC;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (((vt1.c0)/(x'')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)/(x'')) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (((vt1.c0)/(x'')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)/(x'')) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (((vt1.c0)/(x'')) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (INSTR(x'4861e452', NULL));
SELECT SUM(count) FROM (SELECT ((INSTR(x'4861e452', NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (INSTR(x'4861e452', NULL));
SELECT SUM(count) FROM (SELECT ((INSTR(x'4861e452', NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (INSTR(x'4861e452', NULL));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.lid)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.lid)%(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.lid)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.lid)%(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.lid)%(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(LOWER(vt0.c0)))) ORDER BY (((((vt0.c0 IN (vt1.lid)))AND(((0Xffffffff90325f22) ISNULL))))AND(((vt1.lid)AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0 IN (vt1.lid)))AND(((0Xffffffff90325f22) ISNULL))))AND(((vt1.lid)AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(LOWER(vt0.c0)))) ORDER BY (((((vt0.c0 IN (vt1.lid)))AND(((0Xffffffff90325f22) ISNULL))))AND(((vt1.lid)AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0 IN (vt1.lid)))AND(((0Xffffffff90325f22) ISNULL))))AND(((vt1.lid)AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(LOWER(vt0.c0)))) ORDER BY (((((vt0.c0 IN (vt1.lid)))AND(((0Xffffffff90325f22) ISNULL))))AND(((vt1.lid)AND(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) IS FALSE)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) IS FALSE)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS FALSE)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) IS FALSE)) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT))*((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))*((x'' IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT))*((x'' IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))*((x'' IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT))*((x'' IN ()))));
SELECT * FROM vt0 WHERE (((((json(vt0.c0))OR((vt0.c0 IN ()))))OR(NULL))) ORDER BY -695761635  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((json(vt0.c0))OR((vt0.c0 IN ()))))OR(NULL))) IS TRUE)  as count FROM vt0 ORDER BY -695761635  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((json(vt0.c0))OR((vt0.c0 IN ()))))OR(NULL))) ORDER BY -695761635  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((json(vt0.c0))OR((vt0.c0 IN ()))))OR(NULL))) IS TRUE)  as count FROM vt0 ORDER BY -695761635  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST('831897134' AS REAL)) ORDER BY UPPER(((vt0.c0) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('831897134' AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY UPPER(((vt0.c0) NOT NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST('831897134' AS REAL)) ORDER BY UPPER(((vt0.c0) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('831897134' AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY UPPER(((vt0.c0) NOT NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST('831897134' AS REAL)) ORDER BY UPPER(((vt0.c0) NOT NULL)) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((((x'')OR((x'' IN ()))))OR(CASE WHEN vt0.c0 THEN vt1.lid END))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (TYPEOF(vt1.c0)) AND (((vt0.c0)LIKE(vt1.lid)))) DESC  NULLS LAST, CAST((+ (vt1.lid)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((x'')OR((x'' IN ()))))OR(CASE WHEN vt0.c0 THEN vt1.lid END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (TYPEOF(vt1.c0)) AND (((vt0.c0)LIKE(vt1.lid)))) DESC  NULLS LAST, CAST((+ (vt1.lid)) AS BLOB));
SELECT ALL * FROM vt0, vt1 WHERE (((((x'')OR((x'' IN ()))))OR(CASE WHEN vt0.c0 THEN vt1.lid END))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (TYPEOF(vt1.c0)) AND (((vt0.c0)LIKE(vt1.lid)))) DESC  NULLS LAST, CAST((+ (vt1.lid)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((x'')OR((x'' IN ()))))OR(CASE WHEN vt0.c0 THEN vt1.lid END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (TYPEOF(vt1.c0)) AND (((vt0.c0)LIKE(vt1.lid)))) DESC  NULLS LAST, CAST((+ (vt1.lid)) AS BLOB));
SELECT ALL * FROM vt0, vt1 WHERE (((((x'')OR((x'' IN ()))))OR(CASE WHEN vt0.c0 THEN vt1.lid END))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (TYPEOF(vt1.c0)) AND (((vt0.c0)LIKE(vt1.lid)))) DESC  NULLS LAST, CAST((+ (vt1.lid)) AS BLOB);
SELECT * FROM vt1 WHERE ((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN (((((vt1.lid))!=((vt1.lid))), '1699334300', (((((((('0.30136153687768696')OR(0x6376be1b)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))) AND ((((vt1.lid) NOT BETWEEN (NULL) AND (vt1.lid)), vt1.c0, (((vt1.c0, vt1.c0, vt1.lid))<((vt1.lid, vt1.lid, vt1.lid))))))) ORDER BY (vt1.lid IN ()) ASC  NULLS FIRST, (- (0.1155045933391694))  NULLS FIRST, (((((((((+ (vt1.c0)))OR((((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.lid, NULL, vt1.lid)) AND (('-321308352', '1421468188', vt1.lid))))))OR((('9X))''\nEl4')OR(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN (((((vt1.lid))<>((vt1.lid))), '1699334300', (((((((('0.30136153687768696')OR(0x6376be1b)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))) AND ((((vt1.lid) NOT BETWEEN (NULL) AND (vt1.lid)), vt1.c0, (((vt1.c0, vt1.c0, vt1.lid))<((vt1.lid, vt1.lid, vt1.lid))))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.lid IN ()) ASC  NULLS FIRST, (- (0.1155045933391694))  NULLS FIRST, (((((((((+ (vt1.c0)))OR((((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.lid, NULL, vt1.lid)) AND (('-321308352', '1421468188', vt1.lid))))))OR((('9X))''\nEl4')OR(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 END)) ASC);
SELECT * FROM vt1 WHERE ((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN (((((vt1.lid))!=((vt1.lid))), '1699334300', (((((((('0.30136153687768696')OR(0x6376be1b)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))) AND ((((vt1.lid) NOT BETWEEN (NULL) AND (vt1.lid)), vt1.c0, (((vt1.c0, vt1.c0, vt1.lid))<((vt1.lid, vt1.lid, vt1.lid))))))) ORDER BY (vt1.lid IN ()) ASC  NULLS FIRST, (- (0.1155045933391694))  NULLS FIRST, (((((((((+ (vt1.c0)))OR((((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.lid, NULL, vt1.lid)) AND (('-321308352', '1421468188', vt1.lid))))))OR((('9X))''\nEl4')OR(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN (((((vt1.lid))<>((vt1.lid))), '1699334300', (((((((('0.30136153687768696')OR(0x6376be1b)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))) AND ((((vt1.lid) NOT BETWEEN (NULL) AND (vt1.lid)), vt1.c0, (((vt1.c0, vt1.c0, vt1.lid))<((vt1.lid, vt1.lid, vt1.lid))))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.lid IN ()) ASC  NULLS FIRST, (- (0.1155045933391694))  NULLS FIRST, (((((((((+ (vt1.c0)))OR((((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.lid, NULL, vt1.lid)) AND (('-321308352', '1421468188', vt1.lid))))))OR((('9X))''\nEl4')OR(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 END)) ASC);
SELECT * FROM vt1 WHERE ((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN (((((vt1.lid))!=((vt1.lid))), '1699334300', (((((((('0.30136153687768696')OR(0x6376be1b)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))) AND ((((vt1.lid) NOT BETWEEN (NULL) AND (vt1.lid)), vt1.c0, (((vt1.c0, vt1.c0, vt1.lid))<((vt1.lid, vt1.lid, vt1.lid))))))) ORDER BY (vt1.lid IN ()) ASC  NULLS FIRST, (- (0.1155045933391694))  NULLS FIRST, (((((((((+ (vt1.c0)))OR((((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.lid, NULL, vt1.lid)) AND (('-321308352', '1421468188', vt1.lid))))))OR((('9X))''\nEl4')OR(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 END)) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))>(((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0Xffffffffa05ae489, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT)))>(((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0xffffffffa05ae489, vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))>(((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0Xffffffffa05ae489, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT)))>(((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0xffffffffa05ae489, vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))>(((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0Xffffffffa05ae489, vt0.c0)))))));
SELECT * FROM vt0 WHERE (CASE (((vt0.c0))!=((vt0.c0)))  WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<>((vt0.c0)))  WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (NULL)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0))!=((vt0.c0)))  WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<>((vt0.c0)))  WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (NULL)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0))!=((vt0.c0)))  WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (NULL)) END);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid)IS(vt1.lid)) IN (HEX(DISTINCT vt1.lid)))) ORDER BY vt1.lid COLLATE NOCASE DESC, x'' COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((vt1.lid)IS(vt1.lid)) IN (HEX(DISTINCT vt1.lid)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid COLLATE NOCASE DESC, x'' COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid)IS(vt1.lid)) IN (HEX(DISTINCT vt1.lid)))) ORDER BY vt1.lid COLLATE NOCASE DESC, x'' COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((vt1.lid)IS(vt1.lid)) IN (HEX(DISTINCT vt1.lid)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid COLLATE NOCASE DESC, x'' COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid)IS(vt1.lid)) IN (HEX(DISTINCT vt1.lid)))) ORDER BY vt1.lid COLLATE NOCASE DESC, x'' COLLATE NOCASE COLLATE NOCASE;
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TYPEOF(vt0.c0)))) ORDER BY ((((vt0.c0))>=((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))>=((vt0.c0))) IN ()));
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TYPEOF(vt0.c0)))) ORDER BY ((((vt0.c0))>=((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))>=((vt0.c0))) IN ()));
SELECT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(TYPEOF(vt0.c0)))) ORDER BY ((((vt0.c0))>=((vt0.c0))) IN ());
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN -1351301122 THEN ((vt0.c0)>(vt0.c0)) WHEN (('1090793080') IS FALSE) THEN ((vt0.c0)%('-2063721292')) WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '308738720' END) ORDER BY CAST(-1512175609 AS REAL), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS FALSE)  WHEN -1351301122 THEN ((vt0.c0)>(vt0.c0)) WHEN (('1090793080') IS FALSE) THEN ((vt0.c0)%('-2063721292')) WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '308738720' END) IS TRUE)  as count FROM vt0 ORDER BY CAST(-1512175609 AS REAL), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN -1351301122 THEN ((vt0.c0)>(vt0.c0)) WHEN (('1090793080') IS FALSE) THEN ((vt0.c0)%('-2063721292')) WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '308738720' END) ORDER BY CAST(-1512175609 AS REAL), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS FALSE)  WHEN -1351301122 THEN ((vt0.c0)>(vt0.c0)) WHEN (('1090793080') IS FALSE) THEN ((vt0.c0)%('-2063721292')) WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '308738720' END) IS TRUE)  as count FROM vt0 ORDER BY CAST(-1512175609 AS REAL), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN -1351301122 THEN ((vt0.c0)>(vt0.c0)) WHEN (('1090793080') IS FALSE) THEN ((vt0.c0)%('-2063721292')) WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '308738720' END) ORDER BY CAST(-1512175609 AS REAL), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>=(vt1.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>=(vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>=(vt1.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>=(vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)>=(vt1.lid)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (x'8386') ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN NULL THEN vt0.c0 END, ((vt0.c0)<(0Xffffffffabd353f1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC, (((((((((((((- (x'')))AND(CHANGES())))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0)GLOB('-1166980412')))))OR(vt0.c0)))OR((vt0.c0 IN ()))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'8386') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN NULL THEN vt0.c0 END, ((vt0.c0)<(0xffffffffabd353f1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC, (((((((((((((- (x'')))AND(CHANGES())))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0)GLOB('-1166980412')))))OR(vt0.c0)))OR((vt0.c0 IN ()))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'8386') ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN NULL THEN vt0.c0 END, ((vt0.c0)<(0Xffffffffabd353f1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC, (((((((((((((- (x'')))AND(CHANGES())))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0)GLOB('-1166980412')))))OR(vt0.c0)))OR((vt0.c0 IN ()))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'8386') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN NULL THEN vt0.c0 END, ((vt0.c0)<(0xffffffffabd353f1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC, (((((((((((((- (x'')))AND(CHANGES())))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0)GLOB('-1166980412')))))OR(vt0.c0)))OR((vt0.c0 IN ()))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'8386') ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN NULL THEN vt0.c0 END, ((vt0.c0)<(0Xffffffffabd353f1)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ASC, (((((((((((((- (x'')))AND(CHANGES())))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0)GLOB('-1166980412')))))OR(vt0.c0)))OR((vt0.c0 IN ()))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID());
SELECT * FROM vt1, vt0 WHERE (UNLIKELY(CASE WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (UNLIKELY(CASE WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CASE WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (UNLIKELY(CASE WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid END));
SELECT * FROM vt1 WHERE (((vt1.lid)>=(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.lid)>=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.lid)>=(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.lid)>=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.lid)>=(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.728436900597737) ORDER BY CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.lid AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.2018005455177342) THEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) WHEN MIN(vt1.c0, -1.307685413E9, vt1.lid, vt1.lid) THEN ((vt1.lid)!=(vt1.c0)) END, (NOT ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((0.728436900597737) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.lid AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.2018005455177342) THEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) WHEN MIN(vt1.c0, -1.307685413E9, vt1.lid, vt1.lid) THEN ((vt1.lid)<>(vt1.c0)) END, (NOT ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (0.728436900597737) ORDER BY CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.lid AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.2018005455177342) THEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) WHEN MIN(vt1.c0, -1.307685413E9, vt1.lid, vt1.lid) THEN ((vt1.lid)!=(vt1.c0)) END, (NOT ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((0.728436900597737) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.lid AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.2018005455177342) THEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) WHEN MIN(vt1.c0, -1.307685413E9, vt1.lid, vt1.lid) THEN ((vt1.lid)<>(vt1.c0)) END, (NOT ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (0.728436900597737) ORDER BY CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.lid AS INTEGER) WHEN LIKELIHOOD(DISTINCT vt1.lid, 0.2018005455177342) THEN ((((vt1.lid)AND(vt1.c0)))OR(vt1.lid)) WHEN MIN(vt1.c0, -1.307685413E9, vt1.lid, vt1.lid) THEN ((vt1.lid)!=(vt1.c0)) END, (NOT ((vt1.c0 IN ())));
SELECT ALL * FROM vt1 WHERE ((- (0.47481578055725004)));
SELECT SUM(count) FROM (SELECT (((- (0.47481578055725004))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (0.47481578055725004)));
SELECT SUM(count) FROM (SELECT (((- (0.47481578055725004))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (0.47481578055725004)));
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) ISNULL)) ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.6142336626101907, vt0.c0, vt0.c0))) END, (- (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.6142336626101907, vt0.c0, vt0.c0))) END, (- (NULL)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) ISNULL)) ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.6142336626101907, vt0.c0, vt0.c0))) END, (- (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.6142336626101907, vt0.c0, vt0.c0))) END, (- (NULL)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))) ISNULL)) ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.6142336626101907, vt0.c0, vt0.c0))) END, (- (NULL)) DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ()));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE((('1526485641') ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE((('1526485641') ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE((('1526485641') ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE((('1526485641') ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE((('1526485641') ISNULL))));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))AND(vt0.c0)))OR(x'19cd')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(vt0.c0)))AND(vt0.c0)))OR(x'19cd'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))AND(vt0.c0)))OR(x'19cd')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(vt0.c0)))AND(vt0.c0)))OR(x'19cd'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))AND(vt0.c0)))OR(x'19cd')));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0))) AND (((vt1.c0 IN (vt0.c0))))) WHERE (CAST(((vt0.c0)=(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)=(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0))) AND (((vt1.c0 IN (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0))) AND (((vt1.c0 IN (vt0.c0))))) WHERE (CAST(((vt0.c0)=(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)=(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0))) AND (((vt1.c0 IN (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED INNER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt0.c0))) AND (((vt1.c0 IN (vt0.c0))))) WHERE (CAST(((vt0.c0)=(vt1.c0)) AS NUMERIC));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.lid WHERE (((((vt1.c0)+(vt1.lid)))<<(TYPEOF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(vt1.lid)))<<(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.lid);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.lid WHERE (((((vt1.c0)+(vt1.lid)))<<(TYPEOF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(vt1.lid)))<<(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.lid);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt1.lid WHERE (((((vt1.c0)+(vt1.lid)))<<(TYPEOF(vt1.c0))));
SELECT * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))%(CAST(vt1.lid AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))%(CAST(vt1.lid AS BLOB)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))%(CAST(vt1.lid AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))%(CAST(vt1.lid AS BLOB)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))%(CAST(vt1.lid AS BLOB))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid) BETWEEN (vt1.lid) AND ('z.萴TY')))IS NOT(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) BETWEEN (vt1.lid) AND ('z.萴TY')))IS NOT(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid) BETWEEN (vt1.lid) AND ('z.萴TY')))IS NOT(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) BETWEEN (vt1.lid) AND ('z.萴TY')))IS NOT(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.lid) BETWEEN (vt1.lid) AND ('z.萴TY')))IS NOT(vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0) IS TRUE))>>((((vt1.lid, vt1.lid, vt1.c0))>=((vt0.c0, vt0.c0, vt1.lid))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))>>((((vt1.lid, vt1.lid, vt1.c0))>=((vt0.c0, vt0.c0, vt1.lid)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0) IS TRUE))>>((((vt1.lid, vt1.lid, vt1.c0))>=((vt0.c0, vt0.c0, vt1.lid))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))>>((((vt1.lid, vt1.lid, vt1.c0))>=((vt0.c0, vt0.c0, vt1.lid)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0) IS TRUE))>>((((vt1.lid, vt1.lid, vt1.c0))>=((vt0.c0, vt0.c0, vt1.lid))))));
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY ((((vt1.c0) NOTNULL))+(((vt1.c0)/(vt1.lid))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))+(((vt1.c0)/(vt1.lid)))));
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY ((((vt1.c0) NOTNULL))+(((vt1.c0)/(vt1.lid))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))+(((vt1.c0)/(vt1.lid)))));
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY ((((vt1.c0) NOTNULL))+(((vt1.c0)/(vt1.lid))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))+((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'c52f')))))) ORDER BY ((((vt0.c0)<=(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))+((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'c52f')))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))+((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'c52f')))))) ORDER BY ((((vt0.c0)<=(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))+((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'c52f')))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))+((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, x'c52f')))))) ORDER BY ((((vt0.c0)<=(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (((((vt0.c0)OR(vt1.lid)))AND(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)OR(vt1.lid)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (((((vt0.c0)OR(vt1.lid)))AND(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt0.c0)OR(vt1.lid)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (((((vt0.c0)OR(vt1.lid)))AND(vt1.lid)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN json(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN json(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOTNULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN json(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN json(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOTNULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN json(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOTNULL) ASC;
