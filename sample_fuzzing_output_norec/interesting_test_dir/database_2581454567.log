-- Time: 2024/06/09 04:59:41
-- Database: database67
-- Database version: 3.40.0
-- seed value: 2581454567
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 0ms;
PRAGMA temp.mmap_size = 1939495369723025368; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES ('', NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55168'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22017'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER  CHECK ( (((x'') BETWEEN (c0) AND (c0)) IN ((((c0)) BETWEEN ((c0)) AND ((c0))))))); -- 15ms;
INSERT OR FAIL INTO vt0 VALUES (x'3d98', NULL); -- 7ms;
ANALYZE; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, ''), (0.9452586347232101, 0.41105008087231265), (561096487, 0.5850488821578063); -- 2ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR ROLLBACK t1 SET c0='' WHERE (- ((t1.c0 IN (t1.c0)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 18ms;
CREATE INDEX i37 ON t1(UNLIKELY(DISTINCT ((((((((((((c0)OR(c0)))OR('pWJ䀲')))AND(c0)))OR(x'')))OR(c0)))OR(c0))) COLLATE RTRIM); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 17ms;
REINDEX NOCASE; -- 0ms;
PRAGMA temp.cache_spill = false; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE t1 SET (c0, c0, c0, c0)=('pWJ䀲', '4b+Hv', NULL, 124403762); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2); -- 0ms;
INSERT OR FAIL INTO vt1(c2, c1, c0) VALUES (x'', 0.8063610521751872, 0.5850488821578063); -- 0ms;
PRAGMA temp.busy_timeout = 0; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE t1 SET (c0)=(1.24403762E8) WHERE CASE WHEN x'286c' THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END ELSE NULL END; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('-475899785'); -- 0ms;
PRAGMA cache_size; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
END; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (0.006331245636589933), (5.61096487E8), ('蠝-'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1, c0) VALUES ('', CAST((('124403762')<>('124403762')) AS INTEGER)); -- 21ms;
PRAGMA main.stats; -- 1ms;
REINDEX; -- 5ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 3ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES (NULL, x''), (1690151768, 0.9452586347232101), (x'', NULL); -- 14ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL TOTAL(CAST(vt1.c0 AS REAL)) FROM t1, vt1, vt0 WHERE ((((((0.37028999863589807) IS TRUE)))<((((x'') NOT NULL))))); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (0.37028999863589807, NULL, NULL); -- 0ms;
REINDEX i37; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('9_V'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES ('1690151768', x'85af'), (x'', '1419039733'), (x'e76ec21e', 0.22121283936596048); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (1.419039733E9, 0.821460569127512); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=1'); -- 3ms;
DELETE FROM t1; -- 1ms;
REINDEX; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c2) VALUES (0.36397458665799176, 124403762); -- 0ms;
REINDEX; -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 4ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 sz=324545286'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (0.5850488821578063, NULL); -- 17ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (((((((((((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))OR(vt0.c1)))OR(((NULL) NOT NULL))))OR(((((t1.c0)OR(vt0.c1)))AND(v0.c0)))))OR((vt0.c1 IN ()))))AND(((v0.c0)=(0.36267232956410755)))))OR(((((t1.c0)OR(v0.c0)))AND(vt0.c1)))) FULL OUTER JOIN t1 ON CAST(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(t1.c0)) AS REAL) WHERE (((0.006331245636589933)GLOB(TOTAL_CHANGES()))) ORDER BY (((NOT (vt0.c0)))>>((((v0.c0))>=((vt0.c0))))) ASC, CASE WHEN vt0.c0 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))OR(v0.c0)) END ASC, ((((('-415860963')) BETWEEN ((v0.c0)) AND ((t1.c0))))+(((vt0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.006331245636589933)GLOB(TOTAL_CHANGES()))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((((((((((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))OR(vt0.c1)))OR(((NULL) NOT NULL))))OR(((((t1.c0)OR(vt0.c1)))AND(v0.c0)))))OR((vt0.c1 IN ()))))AND(((v0.c0)=(0.36267232956410755)))))OR(((((t1.c0)OR(v0.c0)))AND(vt0.c1)))) FULL OUTER JOIN t1 ON CAST(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(t1.c0)) AS REAL) ORDER BY (((NOT (vt0.c0)))>>((((v0.c0))>=((vt0.c0))))) ASC, CASE WHEN vt0.c0 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))OR(v0.c0)) END ASC, ((((('-415860963')) BETWEEN ((v0.c0)) AND ((t1.c0))))+(((vt0.c1) IS TRUE))) ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (((((((((((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))OR(vt0.c1)))OR(((NULL) NOT NULL))))OR(((((t1.c0)OR(vt0.c1)))AND(v0.c0)))))OR((vt0.c1 IN ()))))AND(((v0.c0)=(0.36267232956410755)))))OR(((((t1.c0)OR(v0.c0)))AND(vt0.c1)))) FULL OUTER JOIN t1 ON CAST(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(t1.c0)) AS REAL) WHERE (((0.006331245636589933)GLOB(TOTAL_CHANGES()))) ORDER BY (((NOT (vt0.c0)))>>((((v0.c0))>=((vt0.c0))))) ASC, CASE WHEN vt0.c0 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))OR(v0.c0)) END ASC, ((((('-415860963')) BETWEEN ((v0.c0)) AND ((t1.c0))))+(((vt0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.006331245636589933)GLOB(TOTAL_CHANGES()))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((((((((((((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))OR(vt0.c1)))OR(((NULL) NOT NULL))))OR(((((t1.c0)OR(vt0.c1)))AND(v0.c0)))))OR((vt0.c1 IN ()))))AND(((v0.c0)=(0.36267232956410755)))))OR(((((t1.c0)OR(v0.c0)))AND(vt0.c1)))) FULL OUTER JOIN t1 ON CAST(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(t1.c0)) AS REAL) ORDER BY (((NOT (vt0.c0)))>>((((v0.c0))>=((vt0.c0))))) ASC, CASE WHEN vt0.c0 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))OR(v0.c0)) END ASC, ((((('-415860963')) BETWEEN ((v0.c0)) AND ((t1.c0))))+(((vt0.c1) IS TRUE))) ASC);
SELECT ALL * FROM vt1, t1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))));
SELECT COUNT(*) FROM vt1, t1 FULL OUTER JOIN v0 ON ((vt1.c0)*(vt1.c2)) COLLATE RTRIM WHERE (((((((((((((t1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(TYPEOF(vt1.c0))))AND(x'')))OR((((t1.c0))>=((t1.c0))))))OR((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(TYPEOF(vt1.c0))))AND(x'')))OR((((t1.c0))>=((t1.c0))))))OR((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, t1 FULL OUTER JOIN v0 ON ((vt1.c0)*(vt1.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, t1 FULL OUTER JOIN v0 ON ((vt1.c0)*(vt1.c2)) COLLATE RTRIM WHERE (((((((((((((t1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(TYPEOF(vt1.c0))))AND(x'')))OR((((t1.c0))>=((t1.c0))))))OR((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(TYPEOF(vt1.c0))))AND(x'')))OR((((t1.c0))>=((t1.c0))))))OR((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, t1 FULL OUTER JOIN v0 ON ((vt1.c0)*(vt1.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, t1 FULL OUTER JOIN v0 ON ((vt1.c0)*(vt1.c2)) COLLATE RTRIM WHERE (((((((((((((t1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(TYPEOF(vt1.c0))))AND(x'')))OR((((t1.c0))>=((t1.c0))))))OR((~ (vt1.c0)))));
SELECT ALL * FROM t1 WHERE (((-1337060457) IS FALSE) COLLATE NOCASE COLLATE BINARY) ORDER BY (((t1.c0) ISNULL) IN (t1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-1337060457) IS FALSE) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) ISNULL) IN (t1.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM t1 WHERE (((-1337060457) IS FALSE) COLLATE NOCASE COLLATE BINARY) ORDER BY (((t1.c0) ISNULL) IN (t1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-1337060457) IS FALSE) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) ISNULL) IN (t1.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM t1 WHERE (((-1337060457) IS FALSE) COLLATE NOCASE COLLATE BINARY) ORDER BY (((t1.c0) ISNULL) IN (t1.c0 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((((((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (json_array_length(vt0.c0))) WHERE ((((((((((- (vt0.c1)))OR((t1.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c1)IS NOT(t1.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c1)))OR((t1.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c1)IS NOT(t1.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (json_array_length(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((((((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (json_array_length(vt0.c0))) WHERE ((((((((((- (vt0.c1)))OR((t1.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c1)IS NOT(t1.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c1)))OR((t1.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c1)IS NOT(t1.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (json_array_length(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((((((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (json_array_length(vt0.c0))) WHERE ((((((((((- (vt0.c1)))OR((t1.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt0.c1)IS NOT(t1.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END)));
SELECT * FROM v0, t1, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM v0, t1, vt0);
SELECT * FROM v0, t1, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM v0, t1, vt0);
SELECT * FROM v0, t1, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()));
SELECT ALL * FROM vt0, t1, v0, vt1 WHERE ((((((v0.c0))<((v0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<((v0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, v0, vt1);
SELECT ALL * FROM vt0, t1, v0, vt1 WHERE ((((((v0.c0))<((v0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<((v0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, v0, vt1);
SELECT ALL * FROM vt0, t1, v0, vt1 WHERE ((((((v0.c0))<((v0.c0)))) NOT NULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)/(vt0.c1))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c2))))) ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((vt0.c1)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)/(vt0.c1))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((vt0.c1)))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)/(vt0.c1))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c2))))) ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((vt0.c1)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)/(vt0.c1))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((vt0.c1)))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)/(vt0.c1))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c2))))) ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((vt0.c1)))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((TYPEOF(0.9775865717653304)) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN x'321b7c16' ELSE x'' END))) ORDER BY ((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))>>(((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(0.9775865717653304)) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN x'321b7c16' ELSE x'' END))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))>>(((v0.c0) ISNULL))));
SELECT COUNT(*) FROM v0 WHERE (((TYPEOF(0.9775865717653304)) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN x'321b7c16' ELSE x'' END))) ORDER BY ((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))>>(((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(0.9775865717653304)) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN x'321b7c16' ELSE x'' END))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))>>(((v0.c0) ISNULL))));
SELECT COUNT(*) FROM v0 WHERE (((TYPEOF(0.9775865717653304)) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN v0.c0 THEN x'321b7c16' ELSE x'' END))) ORDER BY ((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))>>(((v0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (vt1.c1)) COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c0) ISNULL) THEN ((t1.c0)+(0.6931574625925186)) END) ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (x'') AND ((+ (t1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) ISNULL) THEN ((t1.c0)+(0.6931574625925186)) END) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (x'') AND ((+ (t1.c0)))));
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c0) ISNULL) THEN ((t1.c0)+(0.6931574625925186)) END) ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (x'') AND ((+ (t1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) ISNULL) THEN ((t1.c0)+(0.6931574625925186)) END) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (x'') AND ((+ (t1.c0)))));
SELECT ALL * FROM t1 WHERE (CASE WHEN ((t1.c0) ISNULL) THEN ((t1.c0)+(0.6931574625925186)) END) ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (x'') AND ((+ (t1.c0))));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((LOWER(DISTINCT vt1.c0))<=((vt0.c1 IN (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt1.c0))<=((vt0.c1 IN (vt1.c2))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((LOWER(DISTINCT vt1.c0))<=((vt0.c1 IN (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt1.c0))<=((vt0.c1 IN (vt1.c2))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (((LOWER(DISTINCT vt1.c0))<=((vt0.c1 IN (vt1.c2)))));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN ((vt1.c0)/(vt1.c0)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2)OR(vt0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)/(vt1.c0)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2)OR(vt0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN ((vt1.c0)/(vt1.c0)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2)OR(vt0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)/(vt1.c0)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2)OR(vt0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN ((vt1.c0)/(vt1.c0)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c2)OR(vt0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) END);
SELECT * FROM vt1 WHERE (((((((x'a833')AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0))) ORDER BY (((((vt1.c1)) BETWEEN ((0.8226876986215683)) AND ((vt1.c2)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'a833')AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1)) BETWEEN ((0.8226876986215683)) AND ((vt1.c2)))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((x'a833')AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0))) ORDER BY (((((vt1.c1)) BETWEEN ((0.8226876986215683)) AND ((vt1.c2)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'a833')AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1)) BETWEEN ((0.8226876986215683)) AND ((vt1.c2)))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((x'a833')AND(vt1.c0)))OR(vt1.c0)))/(vt1.c0))) ORDER BY (((((vt1.c1)) BETWEEN ((0.8226876986215683)) AND ((vt1.c2)))) IS FALSE)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1)AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)AND(vt0.c1)) COLLATE RTRIM);
SELECT * FROM vt1, vt0, t1 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY (((((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c1))))=((CAST(vt0.c1 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c1))))=((CAST(vt0.c1 AS BLOB)))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY (((((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c1))))=((CAST(vt0.c1 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c1))))=((CAST(vt0.c1 AS BLOB)))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY (((((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c1))))=((CAST(vt0.c1 AS BLOB)))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0)<(t1.c0))))) ORDER BY (((((((t1.c0)AND(t1.c0)))OR(t1.c0))))>((t1.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0)<(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c0)AND(t1.c0)))OR(t1.c0))))>((t1.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0)<(t1.c0))))) ORDER BY (((((((t1.c0)AND(t1.c0)))OR(t1.c0))))>((t1.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0)<(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c0)AND(t1.c0)))OR(t1.c0))))>((t1.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))AND(((t1.c0)<(t1.c0))))) ORDER BY (((((((t1.c0)AND(t1.c0)))OR(t1.c0))))>((t1.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN v0 ON (((UNLIKELY(t1.c0)))>=(((~ (vt0.c0))))) FULL OUTER JOIN vt1 ON (CASE NULL  WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END IN ()) WHERE (CASE ((NULL)+(t1.c0))  WHEN ((((v0.c0)AND(t1.c0)))OR(vt1.c0)) THEN ((vt1.c1)-(vt0.c0)) END) ORDER BY ROUND(((0.6375898122180769) IS FALSE), (((vt1.c2, v0.c0, vt1.c0)) BETWEEN ((t1.c0, v0.c0, NULL)) AND ((t1.c0, vt1.c1, vt1.c1))))  NULLS FIRST, ((((((((((((vt0.c0)AND((+ (vt1.c2)))))OR(CAST(vt1.c2 AS TEXT))))OR(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END)))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(((vt0.c1)<<(vt1.c0)))))AND((('yG폵w|9	') NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)+(t1.c0))  WHEN ((((v0.c0)AND(t1.c0)))OR(vt1.c0)) THEN ((vt1.c1)-(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN v0 ON (((UNLIKELY(t1.c0)))>=(((~ (vt0.c0))))) FULL OUTER JOIN vt1 ON (CASE NULL  WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END IN ()) ORDER BY ROUND(((0.6375898122180769) IS FALSE), (((vt1.c2, v0.c0, vt1.c0)) BETWEEN ((t1.c0, v0.c0, NULL)) AND ((t1.c0, vt1.c1, vt1.c1))))  NULLS FIRST, ((((((((((((vt0.c0)AND((+ (vt1.c2)))))OR(CAST(vt1.c2 AS TEXT))))OR(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END)))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(((vt0.c1)<<(vt1.c0)))))AND((('yG폵w|9	') NOT NULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN v0 ON (((UNLIKELY(t1.c0)))>=(((~ (vt0.c0))))) FULL OUTER JOIN vt1 ON (CASE NULL  WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END IN ()) WHERE (CASE ((NULL)+(t1.c0))  WHEN ((((v0.c0)AND(t1.c0)))OR(vt1.c0)) THEN ((vt1.c1)-(vt0.c0)) END) ORDER BY ROUND(((0.6375898122180769) IS FALSE), (((vt1.c2, v0.c0, vt1.c0)) BETWEEN ((t1.c0, v0.c0, NULL)) AND ((t1.c0, vt1.c1, vt1.c1))))  NULLS FIRST, ((((((((((((vt0.c0)AND((+ (vt1.c2)))))OR(CAST(vt1.c2 AS TEXT))))OR(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END)))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(((vt0.c1)<<(vt1.c0)))))AND((('yG폵w|9	') NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)+(t1.c0))  WHEN ((((v0.c0)AND(t1.c0)))OR(vt1.c0)) THEN ((vt1.c1)-(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN v0 ON (((UNLIKELY(t1.c0)))>=(((~ (vt0.c0))))) FULL OUTER JOIN vt1 ON (CASE NULL  WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END IN ()) ORDER BY ROUND(((0.6375898122180769) IS FALSE), (((vt1.c2, v0.c0, vt1.c0)) BETWEEN ((t1.c0, v0.c0, NULL)) AND ((t1.c0, vt1.c1, vt1.c1))))  NULLS FIRST, ((((((((((((vt0.c0)AND((+ (vt1.c2)))))OR(CAST(vt1.c2 AS TEXT))))OR(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END)))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(((vt0.c1)<<(vt1.c0)))))AND((('yG폵w|9	') NOT NULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN v0 ON (((UNLIKELY(t1.c0)))>=(((~ (vt0.c0))))) FULL OUTER JOIN vt1 ON (CASE NULL  WHEN vt1.c0 THEN vt1.c1 ELSE v0.c0 END IN ()) WHERE (CASE ((NULL)+(t1.c0))  WHEN ((((v0.c0)AND(t1.c0)))OR(vt1.c0)) THEN ((vt1.c1)-(vt0.c0)) END) ORDER BY ROUND(((0.6375898122180769) IS FALSE), (((vt1.c2, v0.c0, vt1.c0)) BETWEEN ((t1.c0, v0.c0, NULL)) AND ((t1.c0, vt1.c1, vt1.c1))))  NULLS FIRST, ((((((((((((vt0.c0)AND((+ (vt1.c2)))))OR(CAST(vt1.c2 AS TEXT))))OR(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END)))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))AND(((vt0.c1)<<(vt1.c0)))))AND((('yG폵w|9	') NOT NULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, v0);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, v0);
SELECT ALL COUNT(*) FROM t1, vt0, v0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (json_array(((((t1.c0)AND(t1.c0)))OR(t1.c0)), (((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_array(((((t1.c0)AND(t1.c0)))OR(t1.c0)), (((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (json_array(((((t1.c0)AND(t1.c0)))OR(t1.c0)), (((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_array(((((t1.c0)AND(t1.c0)))OR(t1.c0)), (((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (json_array(((((t1.c0)AND(t1.c0)))OR(t1.c0)), (((t1.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0)))));
SELECT * FROM t1, v0, vt1, vt0 WHERE ((((CASE vt1.c1  WHEN v0.c0 THEN vt1.c2 ELSE vt0.c1 END, ((((((((vt1.c2)AND(vt1.c2)))AND(vt0.c1)))AND(v0.c0)))AND(vt1.c2)), (+ (vt1.c0))))>=((vt0.c0, CASE WHEN v0.c0 THEN vt1.c2 ELSE vt1.c2 END, (+ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c1  WHEN v0.c0 THEN vt1.c2 ELSE vt0.c1 END, ((((((((vt1.c2)AND(vt1.c2)))AND(vt0.c1)))AND(v0.c0)))AND(vt1.c2)), (+ (vt1.c0))))>=((vt0.c0, CASE WHEN v0.c0 THEN vt1.c2 ELSE vt1.c2 END, (+ (vt0.c1)))))) IS TRUE)  as count FROM t1, v0, vt1, vt0);
SELECT * FROM t1, v0, vt1, vt0 WHERE ((((CASE vt1.c1  WHEN v0.c0 THEN vt1.c2 ELSE vt0.c1 END, ((((((((vt1.c2)AND(vt1.c2)))AND(vt0.c1)))AND(v0.c0)))AND(vt1.c2)), (+ (vt1.c0))))>=((vt0.c0, CASE WHEN v0.c0 THEN vt1.c2 ELSE vt1.c2 END, (+ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c1  WHEN v0.c0 THEN vt1.c2 ELSE vt0.c1 END, ((((((((vt1.c2)AND(vt1.c2)))AND(vt0.c1)))AND(v0.c0)))AND(vt1.c2)), (+ (vt1.c0))))>=((vt0.c0, CASE WHEN v0.c0 THEN vt1.c2 ELSE vt1.c2 END, (+ (vt0.c1)))))) IS TRUE)  as count FROM t1, v0, vt1, vt0);
SELECT * FROM t1, v0, vt1, vt0 WHERE ((((CASE vt1.c1  WHEN v0.c0 THEN vt1.c2 ELSE vt0.c1 END, ((((((((vt1.c2)AND(vt1.c2)))AND(vt0.c1)))AND(v0.c0)))AND(vt1.c2)), (+ (vt1.c0))))>=((vt0.c0, CASE WHEN v0.c0 THEN vt1.c2 ELSE vt1.c2 END, (+ (vt0.c1))))));
SELECT * FROM vt1, v0 WHERE ((((vt1.c1 IN (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((vt1.c1 IN (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((vt1.c1 IN (v0.c0))) NOT NULL));
SELECT * FROM t1, vt0 NATURAL JOIN vt1 WHERE ((NOT (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c1))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN vt1);
SELECT * FROM t1, vt0 NATURAL JOIN vt1 WHERE ((NOT (vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c1))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN vt1);
SELECT * FROM t1, vt0 NATURAL JOIN vt1 WHERE ((NOT (vt1.c1)));
SELECT ALL COUNT(*) FROM t1, vt1 INDEXED BY i37, vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM)>(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)>(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1 INDEXED BY i37, vt0, v0);
SELECT ALL COUNT(*) FROM t1, vt1 INDEXED BY i37, vt0, v0 WHERE (((vt0.c0 COLLATE RTRIM)>(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)>(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1 INDEXED BY i37, vt0, v0);
SELECT * FROM t1 WHERE (((t1.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c0) NOT NULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c2))==((t1.c0 COLLATE NOCASE))) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c2))=((t1.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM vt0, vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c2))==((t1.c0 COLLATE NOCASE))) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c2))=((t1.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM vt0, vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c2))==((t1.c0 COLLATE NOCASE))) WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT NULL));
SELECT COUNT(*) FROM t1, v0 WHERE (CASE (NOT (t1.c0))  WHEN (v0.c0 IN ()) THEN (('0.8063610521751872') NOTNULL) END) ORDER BY ((((((((v0.c0)AND(CASE t1.c0  WHEN t1.c0 THEN v0.c0 END)))AND(((v0.c0)<=(t1.c0)))))AND(CASE t1.c0  WHEN v0.c0 THEN x'' ELSE t1.c0 END)))OR(((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t1.c0))  WHEN (v0.c0 IN ()) THEN (('0.8063610521751872') NOTNULL) END) IS TRUE)  as count FROM t1, v0 ORDER BY ((((((((v0.c0)AND(CASE t1.c0  WHEN t1.c0 THEN v0.c0 END)))AND(((v0.c0)<=(t1.c0)))))AND(CASE t1.c0  WHEN v0.c0 THEN x'' ELSE t1.c0 END)))OR(((v0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM t1, v0 WHERE (CASE (NOT (t1.c0))  WHEN (v0.c0 IN ()) THEN (('0.8063610521751872') NOTNULL) END) ORDER BY ((((((((v0.c0)AND(CASE t1.c0  WHEN t1.c0 THEN v0.c0 END)))AND(((v0.c0)<=(t1.c0)))))AND(CASE t1.c0  WHEN v0.c0 THEN x'' ELSE t1.c0 END)))OR(((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t1.c0))  WHEN (v0.c0 IN ()) THEN (('0.8063610521751872') NOTNULL) END) IS TRUE)  as count FROM t1, v0 ORDER BY ((((((((v0.c0)AND(CASE t1.c0  WHEN t1.c0 THEN v0.c0 END)))AND(((v0.c0)<=(t1.c0)))))AND(CASE t1.c0  WHEN v0.c0 THEN x'' ELSE t1.c0 END)))OR(((v0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM t1, v0 WHERE (CASE (NOT (t1.c0))  WHEN (v0.c0 IN ()) THEN (('0.8063610521751872') NOTNULL) END) ORDER BY ((((((((v0.c0)AND(CASE t1.c0  WHEN t1.c0 THEN v0.c0 END)))AND(((v0.c0)<=(t1.c0)))))AND(CASE t1.c0  WHEN v0.c0 THEN x'' ELSE t1.c0 END)))OR(((v0.c0) NOT NULL))) ASC;
SELECT ALL * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=((((v0.c0)+(v0.c0)))))) ORDER BY (NOT (((v0.c0) ISNULL))) ASC, IFNULL(DISTINCT ((v0.c0) BETWEEN (x'') AND (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=((((v0.c0)+(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) ISNULL))) ASC, IFNULL(DISTINCT ((v0.c0) BETWEEN (x'') AND (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=((((v0.c0)+(v0.c0)))))) ORDER BY (NOT (((v0.c0) ISNULL))) ASC, IFNULL(DISTINCT ((v0.c0) BETWEEN (x'') AND (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=((((v0.c0)+(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) ISNULL))) ASC, IFNULL(DISTINCT ((v0.c0) BETWEEN (x'') AND (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))<=((((v0.c0)+(v0.c0)))))) ORDER BY (NOT (((v0.c0) ISNULL))) ASC, IFNULL(DISTINCT ((v0.c0) BETWEEN (x'') AND (v0.c0)), (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (((((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(CASE WHEN 5.61096487E8 THEN vt0.c1 END))) ORDER BY (((+ (vt0.c1)))/(CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(CASE WHEN 5.61096487E8 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY (((+ (vt0.c1)))/(CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (((((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(CASE WHEN 5.61096487E8 THEN vt0.c1 END))) ORDER BY (((+ (vt0.c1)))/(CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(CASE WHEN 5.61096487E8 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY (((+ (vt0.c1)))/(CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (((((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))<<(CASE WHEN 5.61096487E8 THEN vt0.c1 END))) ORDER BY (((+ (vt0.c1)))/(CAST(vt0.c1 AS TEXT)));
SELECT * FROM t1, v0, vt1 WHERE (((((vt1.c2) NOTNULL)) NOT BETWEEN (((vt1.c1)>(t1.c0))) AND (CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(((t1.c0)LIKE(v0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) NOTNULL)) NOT BETWEEN (((vt1.c1)>(t1.c0))) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY CAST(((t1.c0)LIKE(v0.c0)) AS REAL) DESC);
SELECT * FROM t1, v0, vt1 WHERE (((((vt1.c2) NOTNULL)) NOT BETWEEN (((vt1.c1)>(t1.c0))) AND (CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(((t1.c0)LIKE(v0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) NOTNULL)) NOT BETWEEN (((vt1.c1)>(t1.c0))) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY CAST(((t1.c0)LIKE(v0.c0)) AS REAL) DESC);
SELECT * FROM t1, v0, vt1 WHERE (((((vt1.c2) NOTNULL)) NOT BETWEEN (((vt1.c1)>(t1.c0))) AND (CAST(vt1.c0 AS NUMERIC)))) ORDER BY CAST(((t1.c0)LIKE(v0.c0)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON ((vt1.c0)=(vt1.c0)) COLLATE NOCASE WHERE (v0.c0) ORDER BY ((((vt0.c1)AND(vt0.c1)))GLOB(((vt1.c0)||(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON ((vt1.c0)==(vt1.c0)) COLLATE NOCASE ORDER BY ((((vt0.c1)AND(vt0.c1)))GLOB(((vt1.c0)||(vt1.c2)))));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON ((vt1.c0)=(vt1.c0)) COLLATE NOCASE WHERE (v0.c0) ORDER BY ((((vt0.c1)AND(vt0.c1)))GLOB(((vt1.c0)||(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON ((vt1.c0)==(vt1.c0)) COLLATE NOCASE ORDER BY ((((vt0.c1)AND(vt0.c1)))GLOB(((vt1.c0)||(vt1.c2)))));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON ((vt1.c0)=(vt1.c0)) COLLATE NOCASE WHERE (v0.c0) ORDER BY ((((vt0.c1)AND(vt0.c1)))GLOB(((vt1.c0)||(vt1.c2))));
SELECT ALL * FROM vt1, v0 WHERE ((((((vt1.c0)OR('50542905')))AND(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR('50542905')))AND(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((((vt1.c0)OR('50542905')))AND(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR('50542905')))AND(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((((((vt1.c0)OR('50542905')))AND(vt1.c1)) IN ()));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)OR(vt1.c2)) IN (CASE vt1.c0  WHEN t1.c0 THEN vt1.c2 END)) LEFT OUTER JOIN t1 ON (vt1.c2 COLLATE NOCASE IN ()) WHERE (((vt1.c2 COLLATE RTRIM)<=((((vt1.c1, 0.2715680783845773, vt1.c1))!=((v0.c0, x'', x''))))));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE RTRIM)<=((((vt1.c1, 0.2715680783845773, vt1.c1))!=((v0.c0, x'', x'')))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)OR(vt1.c2)) IN (CASE vt1.c0  WHEN t1.c0 THEN vt1.c2 END)) LEFT OUTER JOIN t1 ON (vt1.c2 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)OR(vt1.c2)) IN (CASE vt1.c0  WHEN t1.c0 THEN vt1.c2 END)) LEFT OUTER JOIN t1 ON (vt1.c2 COLLATE NOCASE IN ()) WHERE (((vt1.c2 COLLATE RTRIM)<=((((vt1.c1, 0.2715680783845773, vt1.c1))!=((v0.c0, x'', x''))))));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE RTRIM)<=((((vt1.c1, 0.2715680783845773, vt1.c1))!=((v0.c0, x'', x'')))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)OR(vt1.c2)) IN (CASE vt1.c0  WHEN t1.c0 THEN vt1.c2 END)) LEFT OUTER JOIN t1 ON (vt1.c2 COLLATE NOCASE IN ()));
SELECT * FROM t1 NATURAL JOIN v0 WHERE ('d>\bF![') ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('d>\bF![') IS TRUE)  as count FROM t1 NATURAL JOIN v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM t1 NATURAL JOIN v0 WHERE ('d>\bF![') ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('d>\bF![') IS TRUE)  as count FROM t1 NATURAL JOIN v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT * FROM t1 NATURAL JOIN v0 WHERE ('d>\bF![') ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)>>(vt0.c1)) IN ()) WHERE (((((((x'9b1f') BETWEEN (vt0.c1) AND (vt1.c1)))AND(LIKELY(DISTINCT vt1.c0))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((x'9b1f') BETWEEN (vt0.c1) AND (vt1.c1)))AND(LIKELY(DISTINCT vt1.c0))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)>>(vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)>>(vt0.c1)) IN ()) WHERE (((((((x'9b1f') BETWEEN (vt0.c1) AND (vt1.c1)))AND(LIKELY(DISTINCT vt1.c0))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((x'9b1f') BETWEEN (vt0.c1) AND (vt1.c1)))AND(LIKELY(DISTINCT vt1.c0))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)>>(vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)>>(vt0.c1)) IN ()) WHERE (((((((x'9b1f') BETWEEN (vt0.c1) AND (vt1.c1)))AND(LIKELY(DISTINCT vt1.c0))))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c1))==((vt0.c1))))OR(CAST(vt0.c0 AS REAL))))AND((~ (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1))==((vt0.c1))))OR(CAST(vt0.c0 AS REAL))))AND((~ (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c1))==((vt0.c1))))OR(CAST(vt0.c0 AS REAL))))AND((~ (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1))==((vt0.c1))))OR(CAST(vt0.c0 AS REAL))))AND((~ (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c1))==((vt0.c1))))OR(CAST(vt0.c0 AS REAL))))AND((~ (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR(CAST(vt0.c1 AS REAL))));
SELECT COUNT(*) FROM vt1, t1 WHERE ((NOT (t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE ((NOT (t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE ((NOT (t1.c0)) COLLATE BINARY);
SELECT * FROM v0, vt0, t1, vt1 WHERE ((~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))))) ORDER BY (((((((((((((((vt0.c1))>=((v0.c0))))AND(vt0.c1)))OR(v0.c0 COLLATE BINARY)))OR(((((((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))AND(vt0.c0)))))OR(CASE v0.c0  WHEN 0.7721445616061826 THEN vt0.c0 END)))AND(((v0.c0)/(vt1.c2)))))OR(NULLIF(vt0.c0, vt0.c1))) DESC  NULLS LAST, (TIME(vt1.c0, t1.c0, NULL, t1.c0, vt1.c2) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t1, vt1 ORDER BY (((((((((((((((vt0.c1))>=((v0.c0))))AND(vt0.c1)))OR(v0.c0 COLLATE BINARY)))OR(((((((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))AND(vt0.c0)))))OR(CASE v0.c0  WHEN 0.7721445616061826 THEN vt0.c0 END)))AND(((v0.c0)/(vt1.c2)))))OR(NULLIF(vt0.c0, vt0.c1))) DESC  NULLS LAST, (TIME(vt1.c0, t1.c0, NULL, t1.c0, vt1.c2) IN ()) ASC);
SELECT * FROM v0, vt0, t1, vt1 WHERE ((~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))))) ORDER BY (((((((((((((((vt0.c1))>=((v0.c0))))AND(vt0.c1)))OR(v0.c0 COLLATE BINARY)))OR(((((((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))AND(vt0.c0)))))OR(CASE v0.c0  WHEN 0.7721445616061826 THEN vt0.c0 END)))AND(((v0.c0)/(vt1.c2)))))OR(NULLIF(vt0.c0, vt0.c1))) DESC  NULLS LAST, (TIME(vt1.c0, t1.c0, NULL, t1.c0, vt1.c2) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t1, vt1 ORDER BY (((((((((((((((vt0.c1))>=((v0.c0))))AND(vt0.c1)))OR(v0.c0 COLLATE BINARY)))OR(((((((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))AND(vt0.c0)))))OR(CASE v0.c0  WHEN 0.7721445616061826 THEN vt0.c0 END)))AND(((v0.c0)/(vt1.c2)))))OR(NULLIF(vt0.c0, vt0.c1))) DESC  NULLS LAST, (TIME(vt1.c0, t1.c0, NULL, t1.c0, vt1.c2) IN ()) ASC);
SELECT * FROM v0, vt0, t1, vt1 WHERE ((~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))))) ORDER BY (((((((((((((((vt0.c1))>=((v0.c0))))AND(vt0.c1)))OR(v0.c0 COLLATE BINARY)))OR(((((((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(t1.c0)))AND(vt0.c0)))))OR(CASE v0.c0  WHEN 0.7721445616061826 THEN vt0.c0 END)))AND(((v0.c0)/(vt1.c2)))))OR(NULLIF(vt0.c0, vt0.c1))) DESC  NULLS LAST, (TIME(vt1.c0, t1.c0, NULL, t1.c0, vt1.c2) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) IN ())) ORDER BY ((((v0.c0) IS TRUE))!=(v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((v0.c0) IS TRUE))<>(v0.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) IN ())) ORDER BY ((((v0.c0) IS TRUE))!=(v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((v0.c0) IS TRUE))<>(v0.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) IN ())) ORDER BY ((((v0.c0) IS TRUE))!=(v0.c0)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c0)<>(v0.c0))) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c0)!=(v0.c0))) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c0)<>(v0.c0))) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c0)!=(v0.c0))) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS TEXT)) BETWEEN (((v0.c0)<>(v0.c0))) AND ((- (v0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END))<>(((vt1.c1 IN (vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END))!=(((vt1.c1 IN (vt1.c2)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END))<>(((vt1.c1 IN (vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END))!=(((vt1.c1 IN (vt1.c2)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END))<>(((vt1.c1 IN (vt1.c2))))));
SELECT * FROM vt1 WHERE ((((vt1.c2 IN ()))>(INSTR(vt1.c0, 1143359839)))) ORDER BY (CAST(vt1.c2 AS INTEGER) IN (((vt1.c1) NOT NULL), CAST(vt1.c1 AS INTEGER))) ASC, ((vt1.c0 COLLATE BINARY)/(vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))>(INSTR(vt1.c0, 1143359839)))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c2 AS INTEGER) IN (((vt1.c1) NOT NULL), CAST(vt1.c1 AS INTEGER))) ASC, ((vt1.c0 COLLATE BINARY)/(vt1.c1)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c2 IN ()))>(INSTR(vt1.c0, 1143359839)))) ORDER BY (CAST(vt1.c2 AS INTEGER) IN (((vt1.c1) NOT NULL), CAST(vt1.c1 AS INTEGER))) ASC, ((vt1.c0 COLLATE BINARY)/(vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))>(INSTR(vt1.c0, 1143359839)))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c2 AS INTEGER) IN (((vt1.c1) NOT NULL), CAST(vt1.c1 AS INTEGER))) ASC, ((vt1.c0 COLLATE BINARY)/(vt1.c1)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c2 IN ()))>(INSTR(vt1.c0, 1143359839)))) ORDER BY (CAST(vt1.c2 AS INTEGER) IN (((vt1.c1) NOT NULL), CAST(vt1.c1 AS INTEGER))) ASC, ((vt1.c0 COLLATE BINARY)/(vt1.c1)) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (x'c9e3');
SELECT SUM(count) FROM (SELECT ((x'c9e3') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'c9e3');
SELECT SUM(count) FROM (SELECT ((x'c9e3') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'c9e3');
SELECT * FROM vt0, v0 WHERE (json_extract(LTRIM(vt0.c1), vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json_extract(LTRIM(vt0.c1), vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (json_extract(LTRIM(vt0.c1), vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json_extract(LTRIM(vt0.c1), vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0))))<((vt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0))))<((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0))))<((vt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt0.c0))))<((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NOT (vt0.c0))))<((vt0.c1 COLLATE NOCASE))));
SELECT * FROM vt0, t1, v0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0, t1, v0);
SELECT * FROM vt0, t1, v0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0, t1, v0);
SELECT * FROM vt0, t1, v0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (+ (t1.c0)) WHERE (HEX(((((((((((((vt0.c0)OR(t1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0))) AND (TRIM(0.3263894288606811))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((((((((((((vt0.c0)OR(t1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (+ (t1.c0)) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0))) AND (TRIM(0.3263894288606811))) DESC);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (+ (t1.c0)) WHERE (HEX(((((((((((((vt0.c0)OR(t1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0))) AND (TRIM(0.3263894288606811))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((((((((((((vt0.c0)OR(t1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (+ (t1.c0)) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0))) AND (TRIM(0.3263894288606811))) DESC);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (+ (t1.c0)) WHERE (HEX(((((((((((((vt0.c0)OR(t1.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(t1.c0)))AND(vt0.c0)))) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c0))) AND (TRIM(0.3263894288606811))) DESC;
SELECT * FROM t1, vt0, v0 WHERE (((v0.c0)LIKE(x''))) ORDER BY (((t1.c0)) NOT BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE(x''))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (((t1.c0)) NOT BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t1.c0)))))) ASC);
SELECT * FROM t1, vt0, v0 WHERE (((v0.c0)LIKE(x''))) ORDER BY (((t1.c0)) NOT BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)LIKE(x''))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (((t1.c0)) NOT BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t1.c0)))))) ASC);
SELECT * FROM t1, vt0, v0 WHERE (((v0.c0)LIKE(x''))) ORDER BY (((t1.c0)) NOT BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t1.c0)))))) ASC;
SELECT * FROM t1, vt0, vt1, v0 WHERE (((('50542905' IN (v0.c0)))&(((t1.c0)/(0x64bdab58)))));
SELECT SUM(count) FROM (SELECT ALL ((((('50542905' IN (v0.c0)))&(((t1.c0)/(0x64bdab58))))) IS TRUE)  as count FROM t1, vt0, vt1, v0);
SELECT * FROM t1, vt0, vt1, v0 WHERE (((('50542905' IN (v0.c0)))&(((t1.c0)/(0x64bdab58)))));
SELECT SUM(count) FROM (SELECT ALL ((((('50542905' IN (v0.c0)))&(((t1.c0)/(0x64bdab58))))) IS TRUE)  as count FROM t1, vt0, vt1, v0);
SELECT * FROM t1, vt0, vt1, v0 WHERE (((('50542905' IN (v0.c0)))&(((t1.c0)/(0x64bdab58)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON vt1.c1 CROSS JOIN t1 ON CASE WHEN ((vt0.c0)>=(vt1.c1)) THEN ((v0.c0)<<(v0.c0)) END FULL OUTER JOIN vt0 ON COALESCE(IFNULL(DISTINCT vt0.c0, vt1.c2), CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 ELSE t1.c0 END, vt1.c2 COLLATE NOCASE, NULL) WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)IS(((x'')<<(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)IS(((x'')<<(vt1.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON vt1.c1 CROSS JOIN t1 ON CASE WHEN ((vt0.c0)>=(vt1.c1)) THEN ((v0.c0)<<(v0.c0)) END FULL OUTER JOIN vt0 ON COALESCE(IFNULL(DISTINCT vt0.c0, vt1.c2), CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 ELSE t1.c0 END, vt1.c2 COLLATE NOCASE, NULL));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON vt1.c1 CROSS JOIN t1 ON CASE WHEN ((vt0.c0)>=(vt1.c1)) THEN ((v0.c0)<<(v0.c0)) END FULL OUTER JOIN vt0 ON COALESCE(IFNULL(DISTINCT vt0.c0, vt1.c2), CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 ELSE t1.c0 END, vt1.c2 COLLATE NOCASE, NULL) WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)IS(((x'')<<(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)IS(((x'')<<(vt1.c2))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON vt1.c1 CROSS JOIN t1 ON CASE WHEN ((vt0.c0)>=(vt1.c1)) THEN ((v0.c0)<<(v0.c0)) END FULL OUTER JOIN vt0 ON COALESCE(IFNULL(DISTINCT vt0.c0, vt1.c2), CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 ELSE t1.c0 END, vt1.c2 COLLATE NOCASE, NULL));
SELECT * FROM vt1 WHERE (TRIM(((-1216209840)<<(vt1.c2)), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c2 END)) ORDER BY ((vt1.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((-1216209840)<<(vt1.c2)), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c2 END)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST);
SELECT * FROM vt1 WHERE (TRIM(((-1216209840)<<(vt1.c2)), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c2 END)) ORDER BY ((vt1.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((-1216209840)<<(vt1.c2)), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c2 END)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST);
SELECT * FROM vt1 WHERE (TRIM(((-1216209840)<<(vt1.c2)), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c2 END)) ORDER BY ((vt1.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM t1, v0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))<=(CAST(vt0.c0 AS TEXT))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t1, v0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))<=(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM t1, v0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))<=(CAST(vt0.c0 AS TEXT))) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t1, v0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))<=(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM t1, v0 LEFT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER))<=(CAST(vt0.c0 AS TEXT))) WHERE (v0.c0);
SELECT * FROM vt1 WHERE (COALESCE(CAST(vt1.c2 AS BLOB), ((vt1.c0)|(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(vt1.c2 AS BLOB), ((vt1.c0)|(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(CAST(vt1.c2 AS BLOB), ((vt1.c0)|(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(vt1.c2 AS BLOB), ((vt1.c0)|(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(CAST(vt1.c2 AS BLOB), ((vt1.c0)|(vt1.c1))));
SELECT * FROM vt1, vt0, v0, t1 WHERE (((((vt1.c2) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, v0, t1);
SELECT * FROM vt1, vt0, v0, t1 WHERE (((((vt1.c2) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, v0, t1);
SELECT * FROM vt1, vt0, v0, t1 WHERE (((((vt1.c2) NOT BETWEEN (vt1.c0) AND (v0.c0))) NOT NULL));
SELECT ALL * FROM vt0, t1, v0, vt1 WHERE (((((v0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1))) BETWEEN (((('324545286')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(v0.c0 AS BLOB)))) ORDER BY vt1.c2 ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN ((v0.c0 IN (vt0.c1, vt0.c1))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1))) BETWEEN (((('324545286')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t1, v0, vt1 ORDER BY vt1.c2 ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN ((v0.c0 IN (vt0.c1, vt0.c1))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t1, v0, vt1 WHERE (((((v0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1))) BETWEEN (((('324545286')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(v0.c0 AS BLOB)))) ORDER BY vt1.c2 ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN ((v0.c0 IN (vt0.c1, vt0.c1))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1))) BETWEEN (((('324545286')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t1, v0, vt1 ORDER BY vt1.c2 ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN ((v0.c0 IN (vt0.c1, vt0.c1))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t1, v0, vt1 WHERE (((((v0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1))) BETWEEN (((('324545286')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CAST(v0.c0 AS BLOB)))) ORDER BY vt1.c2 ASC, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) BETWEEN ((v0.c0 IN (vt0.c1, vt0.c1))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0, vt0, t1 WHERE (x'') ORDER BY ((((vt1.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND ((vt1.c2 IN (vt0.c1, v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY ((((vt1.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND ((vt1.c2 IN (vt0.c1, v0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, v0, vt0, t1 WHERE (x'') ORDER BY ((((vt1.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND ((vt1.c2 IN (vt0.c1, v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY ((((vt1.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND ((vt1.c2 IN (vt0.c1, v0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, v0, vt0, t1 WHERE (x'') ORDER BY ((((vt1.c0) IS TRUE)) NOT BETWEEN (vt0.c0) AND ((vt1.c2 IN (vt0.c1, v0.c0)))) DESC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOT NULL))IS NOT(((vt1.c0)<=(vt1.c2))))) ORDER BY (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL))IS NOT(((vt1.c0)<=(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOT NULL))IS NOT(((vt1.c0)<=(vt1.c2))))) ORDER BY (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL))IS NOT(((vt1.c0)<=(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOT NULL))IS NOT(((vt1.c0)<=(vt1.c2))))) ORDER BY (- ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON vt1.c2 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (v0.c0 IN ()), ((((v0.c0)AND(vt1.c0)))OR(vt1.c1)))) AND ((((vt1.c1)%(v0.c0)), UNLIKELY(vt1.c0), (('50542905')AND(v0.c0))))) CROSS JOIN vt0 ON ((((((((CAST(vt1.c0 AS REAL))OR(((v0.c0)>(t1.c0)))))OR(((((vt0.c0)AND(x'')))AND(vt0.c1)))))AND(((vt1.c1)&(vt1.c1)))))OR((((vt0.c1, vt1.c1, NULL))=((t1.c0, x'', vt0.c1))))) WHERE (((((vt0.c1)OR(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND((~ (t1.c0))))) ORDER BY 0.17894511870904972 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND((~ (t1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON vt1.c2 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (v0.c0 IN ()), ((((v0.c0)AND(vt1.c0)))OR(vt1.c1)))) AND ((((vt1.c1)%(v0.c0)), UNLIKELY(vt1.c0), (('50542905')AND(v0.c0))))) CROSS JOIN vt0 ON ((((((((CAST(vt1.c0 AS REAL))OR(((v0.c0)>(t1.c0)))))OR(((((vt0.c0)AND(x'')))AND(vt0.c1)))))AND(((vt1.c1)&(vt1.c1)))))OR((((vt0.c1, vt1.c1, NULL))==((t1.c0, x'', vt0.c1))))) ORDER BY 0.17894511870904972 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON vt1.c2 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (v0.c0 IN ()), ((((v0.c0)AND(vt1.c0)))OR(vt1.c1)))) AND ((((vt1.c1)%(v0.c0)), UNLIKELY(vt1.c0), (('50542905')AND(v0.c0))))) CROSS JOIN vt0 ON ((((((((CAST(vt1.c0 AS REAL))OR(((v0.c0)>(t1.c0)))))OR(((((vt0.c0)AND(x'')))AND(vt0.c1)))))AND(((vt1.c1)&(vt1.c1)))))OR((((vt0.c1, vt1.c1, NULL))=((t1.c0, x'', vt0.c1))))) WHERE (((((vt0.c1)OR(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND((~ (t1.c0))))) ORDER BY 0.17894511870904972 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND((~ (t1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON vt1.c2 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, x'')) NOT BETWEEN ((CAST(v0.c0 AS TEXT), (v0.c0 IN ()), ((((v0.c0)AND(vt1.c0)))OR(vt1.c1)))) AND ((((vt1.c1)%(v0.c0)), UNLIKELY(vt1.c0), (('50542905')AND(v0.c0))))) CROSS JOIN vt0 ON ((((((((CAST(vt1.c0 AS REAL))OR(((v0.c0)>(t1.c0)))))OR(((((vt0.c0)AND(x'')))AND(vt0.c1)))))AND(((vt1.c1)&(vt1.c1)))))OR((((vt0.c1, vt1.c1, NULL))==((t1.c0, x'', vt0.c1))))) ORDER BY 0.17894511870904972 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ((x'' IN ()), ((vt0.c1)LIKE(vt1.c1)))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ((x'' IN ()), ((vt0.c1)LIKE(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ((x'' IN ()), ((vt0.c1)LIKE(vt1.c1)))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ((x'' IN ()), ((vt0.c1)LIKE(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, v0 INNER JOIN vt0 ON (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ((x'' IN ()), ((vt0.c1)LIKE(vt1.c1)))) WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 NATURAL JOIN t1 WHERE (((vt0.c0) NOT BETWEEN ((('-1337060457') NOT BETWEEN (vt0.c0) AND (t1.c0))) AND ((((vt0.c0))<=((vt1.c2)))))) ORDER BY TRIM(vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((('-1337060457') NOT BETWEEN (vt0.c0) AND (t1.c0))) AND ((((vt0.c0))<=((vt1.c2)))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t1 ORDER BY TRIM(vt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, vt1 NATURAL JOIN t1 WHERE (((vt0.c0) NOT BETWEEN ((('-1337060457') NOT BETWEEN (vt0.c0) AND (t1.c0))) AND ((((vt0.c0))<=((vt1.c2)))))) ORDER BY TRIM(vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN ((('-1337060457') NOT BETWEEN (vt0.c0) AND (t1.c0))) AND ((((vt0.c0))<=((vt1.c2)))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t1 ORDER BY TRIM(vt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, vt1 NATURAL JOIN t1 WHERE (((vt0.c0) NOT BETWEEN ((('-1337060457') NOT BETWEEN (vt0.c0) AND (t1.c0))) AND ((((vt0.c0))<=((vt1.c2)))))) ORDER BY TRIM(vt1.c0 COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((((0xffffffffe736771d)+(vt0.c1))) BETWEEN (CAST('1690151768' AS INTEGER)) AND ((~ (vt0.c1))))) ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffe736771d)+(vt0.c1))) BETWEEN (CAST('1690151768' AS INTEGER)) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((0xffffffffe736771d)+(vt0.c1))) BETWEEN (CAST('1690151768' AS INTEGER)) AND ((~ (vt0.c1))))) ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffe736771d)+(vt0.c1))) BETWEEN (CAST('1690151768' AS INTEGER)) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((0xffffffffe736771d)+(vt0.c1))) BETWEEN (CAST('1690151768' AS INTEGER)) AND ((~ (vt0.c1))))) ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY CASE t1.c0  WHEN NULL COLLATE RTRIM THEN ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE ((t1.c0) NOT BETWEEN (0Xffffffff8b14ebcd) AND (t1.c0)) END, '-1520913013' ASC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c0  WHEN NULL COLLATE RTRIM THEN ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE ((t1.c0) NOT BETWEEN (0Xffffffff8b14ebcd) AND (t1.c0)) END, '-1520913013' ASC);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY CASE t1.c0  WHEN NULL COLLATE RTRIM THEN ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE ((t1.c0) NOT BETWEEN (0Xffffffff8b14ebcd) AND (t1.c0)) END, '-1520913013' ASC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY CASE t1.c0  WHEN NULL COLLATE RTRIM THEN ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE ((t1.c0) NOT BETWEEN (0Xffffffff8b14ebcd) AND (t1.c0)) END, '-1520913013' ASC);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY CASE t1.c0  WHEN NULL COLLATE RTRIM THEN ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(t1.c0)) ELSE ((t1.c0) NOT BETWEEN (0Xffffffff8b14ebcd) AND (t1.c0)) END, '-1520913013' ASC;
SELECT * FROM vt0, v0, t1 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY ((((vt0.c1)-(v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY ((((vt0.c1)-(v0.c0))) ISNULL));
SELECT * FROM vt0, v0, t1 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY ((((vt0.c1)-(v0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY ((((vt0.c1)-(v0.c0))) ISNULL));
SELECT * FROM vt0, v0, t1 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY ((((vt0.c1)-(v0.c0))) ISNULL);
SELECT * FROM vt1 CROSS JOIN v0 ON ((((((((vt1.c0)OR(vt1.c1)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))AND(((vt1.c1)-(vt1.c0)))) WHERE (COALESCE(((vt1.c1)=(vt1.c0)), (((v0.c0))<((v0.c0))), (((vt1.c2, vt1.c2, vt1.c0)) BETWEEN ((vt1.c2, '2121994523', vt1.c1)) AND ((vt1.c2, vt1.c1, v0.c0))), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)))) ORDER BY ((((((((((v0.c0)|(3.24545286E8)))OR(v0.c0)))AND(v0.c0)))OR(((vt1.c2)IS(v0.c0)))))AND(((((vt1.c1)AND('')))AND(vt1.c0)))) DESC  NULLS LAST, ((NULL) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt1.c1)==(vt1.c0)), (((v0.c0))<((v0.c0))), (((vt1.c2, vt1.c2, vt1.c0)) BETWEEN ((vt1.c2, '2121994523', vt1.c1)) AND ((vt1.c2, vt1.c1, v0.c0))), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((((((((vt1.c0)OR(vt1.c1)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))AND(((vt1.c1)-(vt1.c0)))) ORDER BY ((((((((((v0.c0)|(3.24545286E8)))OR(v0.c0)))AND(v0.c0)))OR(((vt1.c2)IS(v0.c0)))))AND(((((vt1.c1)AND('')))AND(vt1.c0)))) DESC  NULLS LAST, ((NULL) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN v0 ON ((((((((vt1.c0)OR(vt1.c1)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))AND(((vt1.c1)-(vt1.c0)))) WHERE (COALESCE(((vt1.c1)=(vt1.c0)), (((v0.c0))<((v0.c0))), (((vt1.c2, vt1.c2, vt1.c0)) BETWEEN ((vt1.c2, '2121994523', vt1.c1)) AND ((vt1.c2, vt1.c1, v0.c0))), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)))) ORDER BY ((((((((((v0.c0)|(3.24545286E8)))OR(v0.c0)))AND(v0.c0)))OR(((vt1.c2)IS(v0.c0)))))AND(((((vt1.c1)AND('')))AND(vt1.c0)))) DESC  NULLS LAST, ((NULL) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt1.c1)==(vt1.c0)), (((v0.c0))<((v0.c0))), (((vt1.c2, vt1.c2, vt1.c0)) BETWEEN ((vt1.c2, '2121994523', vt1.c1)) AND ((vt1.c2, vt1.c1, v0.c0))), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((((((((vt1.c0)OR(vt1.c1)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))AND(((vt1.c1)-(vt1.c0)))) ORDER BY ((((((((((v0.c0)|(3.24545286E8)))OR(v0.c0)))AND(v0.c0)))OR(((vt1.c2)IS(v0.c0)))))AND(((((vt1.c1)AND('')))AND(vt1.c0)))) DESC  NULLS LAST, ((NULL) ISNULL) DESC  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN v0 ON ((((((((vt1.c0)OR(vt1.c1)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))AND(((vt1.c1)-(vt1.c0)))) WHERE (COALESCE(((vt1.c1)=(vt1.c0)), (((v0.c0))<((v0.c0))), (((vt1.c2, vt1.c2, vt1.c0)) BETWEEN ((vt1.c2, '2121994523', vt1.c1)) AND ((vt1.c2, vt1.c1, v0.c0))), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)))) ORDER BY ((((((((((v0.c0)|(3.24545286E8)))OR(v0.c0)))AND(v0.c0)))OR(((vt1.c2)IS(v0.c0)))))AND(((((vt1.c1)AND('')))AND(vt1.c0)))) DESC  NULLS LAST, ((NULL) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN v0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN (NULL))) AND ('')) WHERE ((+ ((~ (v0.c0))))) ORDER BY ((((vt1.c2)%(v0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (v0.c0))))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN v0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN (NULL))) AND ('')) ORDER BY ((((vt1.c2)%(v0.c0))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN v0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN (NULL))) AND ('')) WHERE ((+ ((~ (v0.c0))))) ORDER BY ((((vt1.c2)%(v0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (v0.c0))))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN v0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN (NULL))) AND ('')) ORDER BY ((((vt1.c2)%(v0.c0))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN v0 ON ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN (NULL))) AND ('')) WHERE ((+ ((~ (v0.c0))))) ORDER BY ((((vt1.c2)%(v0.c0))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt1, t1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 END) NOTNULL)) ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST, (((NULL)) NOT BETWEEN ((((x'af5e') BETWEEN (t1.c0) AND (vt1.c2)))) AND (((NOT (t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c2 THEN vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST, (((NULL)) NOT BETWEEN ((((x'af5e') BETWEEN (t1.c0) AND (vt1.c2)))) AND (((NOT (t1.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 END) NOTNULL)) ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST, (((NULL)) NOT BETWEEN ((((x'af5e') BETWEEN (t1.c0) AND (vt1.c2)))) AND (((NOT (t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c2 THEN vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST, (((NULL)) NOT BETWEEN ((((x'af5e') BETWEEN (t1.c0) AND (vt1.c2)))) AND (((NOT (t1.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c0 END) NOTNULL)) ORDER BY CAST(t1.c0 AS BLOB) COLLATE NOCASE ASC  NULLS LAST, (((NULL)) NOT BETWEEN ((((x'af5e') BETWEEN (t1.c0) AND (vt1.c2)))) AND (((NOT (t1.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1, vt0, v0 WHERE (NULL) ORDER BY ((vt0.c1)|(CASE WHEN vt1.c2 THEN vt0.c0 ELSE t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t1, vt0, v0 ORDER BY ((vt0.c1)|(CASE WHEN vt1.c2 THEN vt0.c0 ELSE t1.c0 END)));
SELECT COUNT(*) FROM vt1, t1, vt0, v0 WHERE (NULL) ORDER BY ((vt0.c1)|(CASE WHEN vt1.c2 THEN vt0.c0 ELSE t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t1, vt0, v0 ORDER BY ((vt0.c1)|(CASE WHEN vt1.c2 THEN vt0.c0 ELSE t1.c0 END)));
SELECT COUNT(*) FROM vt1, t1, vt0, v0 WHERE (NULL) ORDER BY ((vt0.c1)|(CASE WHEN vt1.c2 THEN vt0.c0 ELSE t1.c0 END));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0) NOTNULL) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1 COLLATE NOCASE)/(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)/(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1 COLLATE NOCASE)/(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)/(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1 COLLATE NOCASE)/(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)+(((vt0.c1)OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)+(((vt0.c1)OR(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)+(((vt0.c1)OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)+(((vt0.c1)OR(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1 COLLATE BINARY)+(((vt0.c1)OR(vt1.c1)))));
SELECT ALL * FROM v0 CROSS JOIN t1 ON (((v0.c0) NOT NULL) IN ()) INNER JOIN vt0 ON ((vt0.c0)>=(CAST(v0.c0 AS BLOB))) WHERE ('-1082282034');
SELECT SUM(count) FROM (SELECT (('-1082282034') IS TRUE)  as count FROM v0 CROSS JOIN t1 ON (((v0.c0) NOT NULL) IN ()) INNER JOIN vt0 ON ((vt0.c0)>=(CAST(v0.c0 AS BLOB))));
SELECT ALL * FROM v0 CROSS JOIN t1 ON (((v0.c0) NOT NULL) IN ()) INNER JOIN vt0 ON ((vt0.c0)>=(CAST(v0.c0 AS BLOB))) WHERE ('-1082282034');
SELECT SUM(count) FROM (SELECT (('-1082282034') IS TRUE)  as count FROM v0 CROSS JOIN t1 ON (((v0.c0) NOT NULL) IN ()) INNER JOIN vt0 ON ((vt0.c0)>=(CAST(v0.c0 AS BLOB))));
SELECT ALL * FROM v0 CROSS JOIN t1 ON (((v0.c0) NOT NULL) IN ()) INNER JOIN vt0 ON ((vt0.c0)>=(CAST(v0.c0 AS BLOB))) WHERE ('-1082282034');
SELECT * FROM vt1, vt0, v0 WHERE (CASE WHEN CAST(vt1.c2 AS BLOB) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY CASE WHEN vt1.c1 THEN x'5e19' ELSE vt1.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c2 AS BLOB) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CASE WHEN vt1.c1 THEN x'5e19' ELSE vt1.c0 END COLLATE BINARY DESC);
SELECT * FROM vt1, vt0, v0 WHERE (CASE WHEN CAST(vt1.c2 AS BLOB) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY CASE WHEN vt1.c1 THEN x'5e19' ELSE vt1.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c2 AS BLOB) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CASE WHEN vt1.c1 THEN x'5e19' ELSE vt1.c0 END COLLATE BINARY DESC);
SELECT * FROM vt1, vt0, v0 WHERE (CASE WHEN CAST(vt1.c2 AS BLOB) THEN CAST(vt0.c0 AS NUMERIC) END) ORDER BY CASE WHEN vt1.c1 THEN x'5e19' ELSE vt1.c0 END COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (~ (vt0.c0)) COLLATE NOCASE WHERE (TYPEOF((((vt0.c0))=((x''))))) ORDER BY '1699225931' ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c0))=((x''))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (~ (vt0.c0)) COLLATE NOCASE ORDER BY '1699225931' ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (~ (vt0.c0)) COLLATE NOCASE WHERE (TYPEOF((((vt0.c0))=((x''))))) ORDER BY '1699225931' ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((vt0.c0))=((x''))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (~ (vt0.c0)) COLLATE NOCASE ORDER BY '1699225931' ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (~ (vt0.c0)) COLLATE NOCASE WHERE (TYPEOF((((vt0.c0))=((x''))))) ORDER BY '1699225931' ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((CAST('124403762' AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST('124403762' AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST('124403762' AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST('124403762' AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST('124403762' AS INTEGER)) IS FALSE));
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))<=(((((((((t1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)))AND(vt1.c1)))) CROSS JOIN vt0 ON ((((((((vt1.c2)AND((NOT ('358703706')))))OR((((0.33310415674424765))>=((vt0.c0))))))OR(CASE WHEN '-475899785' THEN 0.3806246470662614 END)))OR(vt1.c2)) CROSS JOIN t1 ON (~ (CAST(vt1.c2 AS TEXT))) WHERE ((((((~ ('50542905')))AND(((((']ft#U}*d')OR(v0.c0)))AND(vt0.c1)))))AND(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ ('50542905')))AND(((((']ft#U}*d')OR(v0.c0)))AND(vt0.c1)))))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))<=(((((((((t1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)))AND(vt1.c1)))) CROSS JOIN vt0 ON ((((((((vt1.c2)AND((NOT ('358703706')))))OR((((0.33310415674424765))>=((vt0.c0))))))OR(CASE WHEN '-475899785' THEN 0.3806246470662614 END)))OR(vt1.c2)) CROSS JOIN t1 ON (~ (CAST(vt1.c2 AS TEXT))));
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))<=(((((((((t1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)))AND(vt1.c1)))) CROSS JOIN vt0 ON ((((((((vt1.c2)AND((NOT ('358703706')))))OR((((0.33310415674424765))>=((vt0.c0))))))OR(CASE WHEN '-475899785' THEN 0.3806246470662614 END)))OR(vt1.c2)) CROSS JOIN t1 ON (~ (CAST(vt1.c2 AS TEXT))) WHERE ((((((~ ('50542905')))AND(((((']ft#U}*d')OR(v0.c0)))AND(vt0.c1)))))AND(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ ('50542905')))AND(((((']ft#U}*d')OR(v0.c0)))AND(vt0.c1)))))AND(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))<=(((((((((t1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)))AND(vt1.c1)))) CROSS JOIN vt0 ON ((((((((vt1.c2)AND((NOT ('358703706')))))OR((((0.33310415674424765))>=((vt0.c0))))))OR(CASE WHEN '-475899785' THEN 0.3806246470662614 END)))OR(vt1.c2)) CROSS JOIN t1 ON (~ (CAST(vt1.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, vt1, v0, t1 WHERE (((((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, v0, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, t1 WHERE (((((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, v0, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, t1 WHERE (((((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('1143359839')))) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ('1419039733') AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('1143359839')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ('1419039733') AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('1143359839')))) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ('1419039733') AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('1143359839')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ('1419039733') AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (('1143359839')))) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN ('1419039733') AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c2 WHEN t1.c0 THEN '-1216209840' WHEN vt1.c1 THEN t1.c0 ELSE vt1.c2 END)|(0.6730725973557833))) ORDER BY (CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 ELSE vt1.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c2 WHEN t1.c0 THEN '-1216209840' WHEN vt1.c1 THEN t1.c0 ELSE vt1.c2 END)|(0.6730725973557833))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1 ORDER BY (CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 ELSE vt1.c2 END IN ()) ASC);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c2 WHEN t1.c0 THEN '-1216209840' WHEN vt1.c1 THEN t1.c0 ELSE vt1.c2 END)|(0.6730725973557833))) ORDER BY (CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 ELSE vt1.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c2 WHEN t1.c0 THEN '-1216209840' WHEN vt1.c1 THEN t1.c0 ELSE vt1.c2 END)|(0.6730725973557833))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1 ORDER BY (CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 ELSE vt1.c2 END IN ()) ASC);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c2 WHEN t1.c0 THEN '-1216209840' WHEN vt1.c1 THEN t1.c0 ELSE vt1.c2 END)|(0.6730725973557833))) ORDER BY (CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 ELSE vt1.c2 END IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE WHEN x'' THEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE WHEN x'' THEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE WHEN x'' THEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0, vt1, t1 WHERE ((((((vt1.c1))!=((vt1.c0))))>>(vt1.c1 COLLATE NOCASE))) ORDER BY (((t1.c0 IN ()))&(((v0.c0) IS FALSE))) ASC, (((+ (vt1.c1)))=(t1.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))<>((vt1.c0))))>>(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, t1 ORDER BY (((t1.c0 IN ()))&(((v0.c0) IS FALSE))) ASC, (((+ (vt1.c1)))==(t1.c0)) DESC);
SELECT ALL COUNT(*) FROM v0, vt1, t1 WHERE ((((((vt1.c1))!=((vt1.c0))))>>(vt1.c1 COLLATE NOCASE))) ORDER BY (((t1.c0 IN ()))&(((v0.c0) IS FALSE))) ASC, (((+ (vt1.c1)))=(t1.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))<>((vt1.c0))))>>(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, t1 ORDER BY (((t1.c0 IN ()))&(((v0.c0) IS FALSE))) ASC, (((+ (vt1.c1)))==(t1.c0)) DESC);
SELECT ALL COUNT(*) FROM v0, vt1, t1 WHERE ((((((vt1.c1))!=((vt1.c0))))>>(vt1.c1 COLLATE NOCASE))) ORDER BY (((t1.c0 IN ()))&(((v0.c0) IS FALSE))) ASC, (((+ (vt1.c1)))=(t1.c0)) DESC;
SELECT ALL * FROM vt1, v0 RIGHT OUTER JOIN t1 ON CAST(v0.c0 COLLATE RTRIM AS REAL) INNER JOIN vt0 ON ((0.4575832400206229) IS FALSE) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN t1 ON CAST(v0.c0 COLLATE RTRIM AS REAL) INNER JOIN vt0 ON ((0.4575832400206229) IS FALSE));
SELECT ALL * FROM vt1, v0 RIGHT OUTER JOIN t1 ON CAST(v0.c0 COLLATE RTRIM AS REAL) INNER JOIN vt0 ON ((0.4575832400206229) IS FALSE) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN t1 ON CAST(v0.c0 COLLATE RTRIM AS REAL) INNER JOIN vt0 ON ((0.4575832400206229) IS FALSE));
SELECT ALL * FROM vt1, v0 RIGHT OUTER JOIN t1 ON CAST(v0.c0 COLLATE RTRIM AS REAL) INNER JOIN vt0 ON ((0.4575832400206229) IS FALSE) WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((vt1.c1))<=((vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1))<=((vt1.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((vt1.c1))<=((vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1))<=((vt1.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'') ORDER BY (((vt1.c1))<=((vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)>(t1.c0))) NOT BETWEEN ((- (t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c0))) NOT BETWEEN ((- (t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)>(t1.c0))) NOT BETWEEN ((- (t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c0))) NOT BETWEEN ((- (t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)>(t1.c0))) NOT BETWEEN ((- (t1.c0))) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)));
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN vt1 WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN vt0.c0 ELSE (vt1.c1 IN (vt0.c1, vt0.c0)) END) ORDER BY ((((((((',w}p]#\柾t')AND(x'' COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN vt0.c1 END)))AND(SQLITE_VERSION())))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))) DESC  NULLS LAST, ((vt1.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOTNULL) THEN vt0.c0 ELSE (vt1.c1 IN (vt0.c1, vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1 ORDER BY ((((((((',w}p]#\柾t')AND(x'' COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN vt0.c1 END)))AND(SQLITE_VERSION())))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))) DESC  NULLS LAST, ((vt1.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN vt1 WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN vt0.c0 ELSE (vt1.c1 IN (vt0.c1, vt0.c0)) END) ORDER BY ((((((((',w}p]#\柾t')AND(x'' COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN vt0.c1 END)))AND(SQLITE_VERSION())))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))) DESC  NULLS LAST, ((vt1.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOTNULL) THEN vt0.c0 ELSE (vt1.c1 IN (vt0.c1, vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1 ORDER BY ((((((((',w}p]#\柾t')AND(x'' COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN vt0.c1 END)))AND(SQLITE_VERSION())))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))) DESC  NULLS LAST, ((vt1.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN vt1 WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN vt0.c0 ELSE (vt1.c1 IN (vt0.c1, vt0.c0)) END) ORDER BY ((((((((',w}p]#\柾t')AND(x'' COLLATE BINARY)))OR(CASE WHEN v0.c0 THEN vt0.c1 END)))AND(SQLITE_VERSION())))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))) DESC  NULLS LAST, ((vt1.c1 IN ()) IN ());
SELECT COUNT(*) FROM t1, v0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c1 AS TEXT))LIKE(((v0.c0)!=(v0.c0))))) ORDER BY (((v0.c0)>(v0.c0)) IN (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))LIKE(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM t1, v0 NATURAL JOIN vt0 ORDER BY (((v0.c0)>(v0.c0)) IN (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1, v0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c1 AS TEXT))LIKE(((v0.c0)!=(v0.c0))))) ORDER BY (((v0.c0)>(v0.c0)) IN (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))LIKE(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM t1, v0 NATURAL JOIN vt0 ORDER BY (((v0.c0)>(v0.c0)) IN (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1, v0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c1 AS TEXT))LIKE(((v0.c0)!=(v0.c0))))) ORDER BY (((v0.c0)>(v0.c0)) IN (vt0.c0 COLLATE NOCASE));
SELECT * FROM vt0 WHERE ('_1');
SELECT SUM(count) FROM (SELECT ALL (('_1') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('_1');
SELECT SUM(count) FROM (SELECT ALL (('_1') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('_1');
SELECT ALL * FROM vt1 NOT INDEXED, t1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1 NOT INDEXED, t1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1 NOT INDEXED, t1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t1, vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt1.c1)GLOB(vt0.c1)) COLLATE BINARY WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1, vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt1.c1)GLOB(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt1.c1)GLOB(vt0.c1)) COLLATE BINARY WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1, vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt1.c1)GLOB(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, vt1, v0 RIGHT OUTER JOIN vt0 ON ((vt1.c1)GLOB(vt0.c1)) COLLATE BINARY WHERE (((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0, v0, t1 WHERE ((((t1.c0, vt0.c1, NULL)) BETWEEN ((((vt0.c1)<=(vt0.c1)), (+ (v0.c0)), x'')) AND ((((vt0.c0) IS FALSE), CASE vt0.c1  WHEN x'' THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((((vt0.c0)AND(0.17305437690836556)))OR(v0.c0)))))) ORDER BY 0.7695808505701811  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0, vt0.c1, NULL)) BETWEEN ((((vt0.c1)<=(vt0.c1)), (+ (v0.c0)), x'')) AND ((((vt0.c0) IS FALSE), CASE vt0.c1  WHEN x'' THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((((vt0.c0)AND(0.17305437690836556)))OR(v0.c0)))))) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY 0.7695808505701811  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t1 WHERE ((((t1.c0, vt0.c1, NULL)) BETWEEN ((((vt0.c1)<=(vt0.c1)), (+ (v0.c0)), x'')) AND ((((vt0.c0) IS FALSE), CASE vt0.c1  WHEN x'' THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((((vt0.c0)AND(0.17305437690836556)))OR(v0.c0)))))) ORDER BY 0.7695808505701811  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0, vt0.c1, NULL)) BETWEEN ((((vt0.c1)<=(vt0.c1)), (+ (v0.c0)), x'')) AND ((((vt0.c0) IS FALSE), CASE vt0.c1  WHEN x'' THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((((vt0.c0)AND(0.17305437690836556)))OR(v0.c0)))))) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY 0.7695808505701811  NULLS FIRST);
SELECT ALL * FROM vt0, v0, t1 WHERE ((((t1.c0, vt0.c1, NULL)) BETWEEN ((((vt0.c1)<=(vt0.c1)), (+ (v0.c0)), x'')) AND ((((vt0.c0) IS FALSE), CASE vt0.c1  WHEN x'' THEN t1.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, ((((vt0.c0)AND(0.17305437690836556)))OR(v0.c0)))))) ORDER BY 0.7695808505701811  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)==(t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)=(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)==(t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)=(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0)==(t1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t1 WHERE (((t1.c0)+(CAST(v0.c0 AS NUMERIC)))) ORDER BY HEX(json_patch(vt1.c1, vt1.c1))  NULLS LAST, 0.5734578381119503 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)+(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, vt1, t1 ORDER BY HEX(json_patch(vt1.c1, vt1.c1))  NULLS LAST, 0.5734578381119503 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t1 WHERE (((t1.c0)+(CAST(v0.c0 AS NUMERIC)))) ORDER BY HEX(json_patch(vt1.c1, vt1.c1))  NULLS LAST, 0.5734578381119503 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)+(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, vt1, t1 ORDER BY HEX(json_patch(vt1.c1, vt1.c1))  NULLS LAST, 0.5734578381119503 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t1 WHERE (((t1.c0)+(CAST(v0.c0 AS NUMERIC)))) ORDER BY HEX(json_patch(vt1.c1, vt1.c1))  NULLS LAST, 0.5734578381119503 ASC  NULLS LAST;
SELECT * FROM v0, vt1 WHERE (((- (vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c2)) IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((- (vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c2)) IN ())) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((- (vt1.c2)) IN ()));
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))==(v0.c0 COLLATE RTRIM))) ORDER BY IFNULL(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))==(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))==(v0.c0 COLLATE RTRIM))) ORDER BY IFNULL(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))==(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY IFNULL(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))==(v0.c0 COLLATE RTRIM))) ORDER BY IFNULL(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE (((CASE ''  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) NOT NULL)) ORDER BY ((NULL) ISNULL), ((((((t1.c0)OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE ''  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((NULL) ISNULL), ((((((t1.c0)OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST);
SELECT * FROM t1 WHERE (((CASE ''  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) NOT NULL)) ORDER BY ((NULL) ISNULL), ((((((t1.c0)OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE ''  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((NULL) ISNULL), ((((((t1.c0)OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST);
SELECT * FROM t1 WHERE (((CASE ''  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) NOT NULL)) ORDER BY ((NULL) ISNULL), ((((((t1.c0)OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND (CASE WHEN t1.c0 THEN t1.c0 END))  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c1)IS(vt0.c0)))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0))))))OR(IFNULL(DISTINCT vt0.c1, vt1.c1))) INNER JOIN v0 ON (((CASE NULL  WHEN vt1.c1 THEN vt0.c1 END))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2))))) RIGHT OUTER JOIN t1 ON CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((((vt0.c0)AND(t1.c0)))OR(t1.c0)) END WHERE ((((((((((NOT (vt1.c1)))AND(CAST(t1.c0 AS BLOB))))AND((v0.c0 IN (vt0.c0)))))AND(((vt1.c1)LIKE(vt0.c0)))))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('')))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)IS NOT(t1.c0))) AND (vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt1.c1)))AND(CAST(t1.c0 AS BLOB))))AND((v0.c0 IN (vt0.c0)))))AND(((vt1.c1)LIKE(vt0.c0)))))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('')))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c1)IS(vt0.c0)))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0))))))OR(IFNULL(DISTINCT vt0.c1, vt1.c1))) INNER JOIN v0 ON (((CASE NULL  WHEN vt1.c1 THEN vt0.c1 END))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2))))) RIGHT OUTER JOIN t1 ON CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((((vt0.c0)AND(t1.c0)))OR(t1.c0)) END ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)IS NOT(t1.c0))) AND (vt1.c0)) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c1)IS(vt0.c0)))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0))))))OR(IFNULL(DISTINCT vt0.c1, vt1.c1))) INNER JOIN v0 ON (((CASE NULL  WHEN vt1.c1 THEN vt0.c1 END))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2))))) RIGHT OUTER JOIN t1 ON CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((((vt0.c0)AND(t1.c0)))OR(t1.c0)) END WHERE ((((((((((NOT (vt1.c1)))AND(CAST(t1.c0 AS BLOB))))AND((v0.c0 IN (vt0.c0)))))AND(((vt1.c1)LIKE(vt0.c0)))))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('')))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)IS NOT(t1.c0))) AND (vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt1.c1)))AND(CAST(t1.c0 AS BLOB))))AND((v0.c0 IN (vt0.c0)))))AND(((vt1.c1)LIKE(vt0.c0)))))OR((((t1.c0)) NOT BETWEEN ((t1.c0)) AND (('')))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((vt1.c1)IS(vt0.c0)))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0))))))OR(IFNULL(DISTINCT vt0.c1, vt1.c1))) INNER JOIN v0 ON (((CASE NULL  WHEN vt1.c1 THEN vt0.c1 END))>=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2))))) RIGHT OUTER JOIN t1 ON CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((((vt0.c0)AND(t1.c0)))OR(t1.c0)) END ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)IS NOT(t1.c0))) AND (vt1.c0)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (LENGTH(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LENGTH(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LENGTH(((vt0.c1) NOT NULL)));
SELECT * FROM t1 FULL OUTER JOIN vt1 ON '1777327750' FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))>=(((((vt1.c2)OR(vt1.c0)))AND(t1.c0)))) CROSS JOIN v0 ON (+ (vt1.c0 COLLATE RTRIM)) WHERE (((((vt0.c0)IS(vt1.c0)))|(298223645)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(vt1.c0)))|(298223645))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON '1777327750' FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))>=(((((vt1.c2)OR(vt1.c0)))AND(t1.c0)))) CROSS JOIN v0 ON (+ (vt1.c0 COLLATE RTRIM)));
SELECT * FROM t1 FULL OUTER JOIN vt1 ON '1777327750' FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))>=(((((vt1.c2)OR(vt1.c0)))AND(t1.c0)))) CROSS JOIN v0 ON (+ (vt1.c0 COLLATE RTRIM)) WHERE (((((vt0.c0)IS(vt1.c0)))|(298223645)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(vt1.c0)))|(298223645))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON '1777327750' FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))>=(((((vt1.c2)OR(vt1.c0)))AND(t1.c0)))) CROSS JOIN v0 ON (+ (vt1.c0 COLLATE RTRIM)));
SELECT * FROM vt0, vt1, t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END IN ())) ORDER BY (((((((t1.c0)AND(NULL)))AND(vt1.c1))))<((((0.027538421256992462) IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((((((t1.c0)AND(NULL)))AND(vt1.c1))))<((((0.027538421256992462) IS FALSE))))  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END IN ())) ORDER BY (((((((t1.c0)AND(NULL)))AND(vt1.c1))))<((((0.027538421256992462) IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((((((t1.c0)AND(NULL)))AND(vt1.c1))))<((((0.027538421256992462) IS FALSE))))  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE ((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END IN ())) ORDER BY (((((((t1.c0)AND(NULL)))AND(vt1.c1))))<((((0.027538421256992462) IS FALSE))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (TYPEOF(DISTINCT ((vt1.c0)OR(t1.c0)))) ORDER BY (((((vt1.c2))<=((vt1.c2)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (('' IN ()))), ((vt0.c0)<<(((vt1.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt1.c0)OR(t1.c0)))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((((vt1.c2))<=((vt1.c2)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (('' IN ()))), ((vt0.c0)<<(((vt1.c0) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (TYPEOF(DISTINCT ((vt1.c0)OR(t1.c0)))) ORDER BY (((((vt1.c2))<=((vt1.c2)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (('' IN ()))), ((vt0.c0)<<(((vt1.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt1.c0)OR(t1.c0)))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((((vt1.c2))<=((vt1.c2)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (('' IN ()))), ((vt0.c0)<<(((vt1.c0) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (TYPEOF(DISTINCT ((vt1.c0)OR(t1.c0)))) ORDER BY (((((vt1.c2))<=((vt1.c2)))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (('' IN ()))), ((vt0.c0)<<(((vt1.c0) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (((NULL COLLATE RTRIM) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c1) NOT NULL)))) ORDER BY (- (((-744345354) BETWEEN (t1.c0) AND (vt0.c0)))) DESC  NULLS LAST, UNICODE(x'');
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY (- (((-744345354) BETWEEN (t1.c0) AND (vt0.c0)))) DESC  NULLS LAST, UNICODE(x''));
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (((NULL COLLATE RTRIM) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c1) NOT NULL)))) ORDER BY (- (((-744345354) BETWEEN (t1.c0) AND (vt0.c0)))) DESC  NULLS LAST, UNICODE(x'');
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY (- (((-744345354) BETWEEN (t1.c0) AND (vt0.c0)))) DESC  NULLS LAST, UNICODE(x''));
SELECT COUNT(*) FROM t1, v0, vt0 WHERE (((NULL COLLATE RTRIM) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c1) NOT NULL)))) ORDER BY (- (((-744345354) BETWEEN (t1.c0) AND (vt0.c0)))) DESC  NULLS LAST, UNICODE(x'');
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) AND ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))) THEN x'' WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (('1419039733')/(vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN vt0.c1 COLLATE RTRIM ELSE 0.2512713894859838 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))) THEN x'' WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (('1419039733')/(vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN vt0.c1 COLLATE RTRIM ELSE 0.2512713894859838 END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))) THEN x'' WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (('1419039733')/(vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN vt0.c1 COLLATE RTRIM ELSE 0.2512713894859838 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))) THEN x'' WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (('1419039733')/(vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN vt0.c1 COLLATE RTRIM ELSE 0.2512713894859838 END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))) THEN x'' WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (('1419039733')/(vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN vt0.c1 COLLATE RTRIM ELSE 0.2512713894859838 END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) BETWEEN ((NOT (v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND ('0.37028999863589807')))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) BETWEEN ((NOT (v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND ('0.37028999863589807'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) BETWEEN ((NOT (v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND ('0.37028999863589807')))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) BETWEEN ((NOT (v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND ('0.37028999863589807'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) BETWEEN ((NOT (v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND ('0.37028999863589807')))));
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE (vt0.c1) ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c1))) NOTNULL), CAST(((vt1.c1)AND(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c1))) NOTNULL), CAST(((vt1.c1)AND(vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE (vt0.c1) ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c1))) NOTNULL), CAST(((vt1.c1)AND(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c1))) NOTNULL), CAST(((vt1.c1)AND(vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE (vt0.c1) ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c1))) NOTNULL), CAST(((vt1.c1)AND(vt1.c0)) AS INTEGER);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (NULL) ORDER BY 0.26369064409039633 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t1 ORDER BY 0.26369064409039633 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (NULL) ORDER BY 0.26369064409039633 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t1 ORDER BY 0.26369064409039633 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (NULL) ORDER BY 0.26369064409039633 ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT COUNT(*) FROM v0 CROSS JOIN t1 ON NULL WHERE ((((((((((~ (t1.c0)))AND(((t1.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))AND(((v0.c0)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t1.c0)))AND(((t1.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))AND(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON NULL);
SELECT COUNT(*) FROM v0 CROSS JOIN t1 ON NULL WHERE ((((((((((~ (t1.c0)))AND(((t1.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))AND(((v0.c0)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t1.c0)))AND(((t1.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))AND(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON NULL);
SELECT COUNT(*) FROM v0 CROSS JOIN t1 ON NULL WHERE ((((((((((~ (t1.c0)))AND(((t1.c0)>=(v0.c0)))))OR(CAST(v0.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))AND(((v0.c0)>=(v0.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)LIKE(((t1.c0) ISNULL)))) ORDER BY (~ (((t1.c0)%(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY (~ (((t1.c0)%(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)LIKE(((t1.c0) ISNULL)))) ORDER BY (~ (((t1.c0)%(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY (~ (((t1.c0)%(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)LIKE(((t1.c0) ISNULL)))) ORDER BY (~ (((t1.c0)%(t1.c0)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0, (((((vt1.c0, 0.8409965014377498, vt1.c1)) BETWEEN ((vt1.c2, vt1.c1, 0.043103058771826075)) AND ((vt1.c0, vt1.c1, vt1.c0))))==(((vt1.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((((vt1.c0, 0.8409965014377498, vt1.c1)) BETWEEN ((vt1.c2, vt1.c1, 0.043103058771826075)) AND ((vt1.c0, vt1.c1, vt1.c0))))==(((vt1.c0)IS NOT(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0, (((((vt1.c0, 0.8409965014377498, vt1.c1)) BETWEEN ((vt1.c2, vt1.c1, 0.043103058771826075)) AND ((vt1.c0, vt1.c1, vt1.c0))))==(((vt1.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, (((((vt1.c0, 0.8409965014377498, vt1.c1)) BETWEEN ((vt1.c2, vt1.c1, 0.043103058771826075)) AND ((vt1.c0, vt1.c1, vt1.c0))))==(((vt1.c0)IS NOT(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0, (((((vt1.c0, 0.8409965014377498, vt1.c1)) BETWEEN ((vt1.c2, vt1.c1, 0.043103058771826075)) AND ((vt1.c0, vt1.c1, vt1.c0))))==(((vt1.c0)IS NOT(vt1.c0))));
SELECT ALL * FROM v0, t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY CAST(((v0.c0) IS FALSE) AS REAL), (((('-2049279951')) BETWEEN ((v0.c0)) AND ((t1.c0))) IN (0Xffffffff9293444b));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, t1 ORDER BY CAST(((v0.c0) IS FALSE) AS REAL), (((('-2049279951')) BETWEEN ((v0.c0)) AND ((t1.c0))) IN (0xffffffff9293444b)));
SELECT ALL * FROM v0, t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY CAST(((v0.c0) IS FALSE) AS REAL), (((('-2049279951')) BETWEEN ((v0.c0)) AND ((t1.c0))) IN (0Xffffffff9293444b));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0, t1 ORDER BY CAST(((v0.c0) IS FALSE) AS REAL), (((('-2049279951')) BETWEEN ((v0.c0)) AND ((t1.c0))) IN (0xffffffff9293444b)));
SELECT ALL * FROM v0, t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY CAST(((v0.c0) IS FALSE) AS REAL), (((('-2049279951')) BETWEEN ((v0.c0)) AND ((t1.c0))) IN (0Xffffffff9293444b));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 END))) ORDER BY (((((((((vt1.c2 IN ()))AND(vt1.c0)))AND(((0.5943444955332017)LIKE(vt1.c2)))))AND(((vt1.c0) NOT NULL))))AND(vt1.c1)) DESC  NULLS LAST, CAST(vt1.c1 COLLATE BINARY AS INTEGER)  NULLS FIRST, (((vt1.c1)<<(x'')) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c2 IN ()))AND(vt1.c0)))AND(((0.5943444955332017)LIKE(vt1.c2)))))AND(((vt1.c0) NOT NULL))))AND(vt1.c1)) DESC  NULLS LAST, CAST(vt1.c1 COLLATE BINARY AS INTEGER)  NULLS FIRST, (((vt1.c1)<<(x'')) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 END))) ORDER BY (((((((((vt1.c2 IN ()))AND(vt1.c0)))AND(((0.5943444955332017)LIKE(vt1.c2)))))AND(((vt1.c0) NOT NULL))))AND(vt1.c1)) DESC  NULLS LAST, CAST(vt1.c1 COLLATE BINARY AS INTEGER)  NULLS FIRST, (((vt1.c1)<<(x'')) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c2 IN ()))AND(vt1.c0)))AND(((0.5943444955332017)LIKE(vt1.c2)))))AND(((vt1.c0) NOT NULL))))AND(vt1.c1)) DESC  NULLS LAST, CAST(vt1.c1 COLLATE BINARY AS INTEGER)  NULLS FIRST, (((vt1.c1)<<(x'')) IN ())  NULLS LAST);
SELECT * FROM t1, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN v0.c0 END) ORDER BY t1.c0  NULLS FIRST, ((((((t1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((CAST(t1.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN v0.c0 END) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c0  NULLS FIRST, ((((((t1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((CAST(t1.c0 AS NUMERIC)))) ASC);
SELECT * FROM t1, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN v0.c0 END) ORDER BY t1.c0  NULLS FIRST, ((((((t1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((CAST(t1.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN v0.c0 END) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c0  NULLS FIRST, ((((((t1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((CAST(t1.c0 AS NUMERIC)))) ASC);
SELECT * FROM t1, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN v0.c0 END) ORDER BY t1.c0  NULLS FIRST, ((((((t1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<((CAST(t1.c0 AS NUMERIC)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE ('2039939616' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('2039939616' COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('2039939616' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('2039939616' COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('2039939616' COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN (vt1.c1, vt1.c2)))<=(((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (vt1.c1, vt1.c2)))<=(((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN (vt1.c1, vt1.c2)))<=(((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (vt1.c1, vt1.c2)))<=(((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN (vt1.c1, vt1.c2)))<=(((vt1.c2) NOTNULL))));
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, v0);
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (CASE WHEN vt0.c0 THEN v0.c0 END)) WHERE (load_extension(((vt0.c1)IS NOT(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((vt0.c1)IS NOT(v0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (+ (CASE WHEN vt0.c0 THEN v0.c0 END)));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (CASE WHEN vt0.c0 THEN v0.c0 END)) WHERE (load_extension(((vt0.c1)IS NOT(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((vt0.c1)IS NOT(v0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (+ (CASE WHEN vt0.c0 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM v0 INDEXED BY i37 WHERE (((v0.c0)>(v0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(TRIM(DISTINCT v0.c0, v0.c0) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>(v0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0 INDEXED BY i37 ORDER BY CAST(TRIM(DISTINCT v0.c0, v0.c0) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i37 WHERE (((v0.c0)>(v0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(TRIM(DISTINCT v0.c0, v0.c0) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>(v0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0 INDEXED BY i37 ORDER BY CAST(TRIM(DISTINCT v0.c0, v0.c0) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((~ (UPPER(v0.c0)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY NULL ASC);
SELECT ALL * FROM v0 WHERE ((~ (UPPER(v0.c0)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY NULL ASC);
SELECT ALL * FROM v0 WHERE ((~ (UPPER(v0.c0)))) ORDER BY NULL ASC;
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON (((vt1.c2) IS FALSE) IN ((((v0.c0, vt1.c1, vt1.c1, t1.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c2, vt0.c0, v0.c0, vt0.c1, vt0.c1, vt1.c2)) AND ((vt0.c0, vt1.c1, vt0.c1, vt1.c0, t1.c0, vt0.c0, vt1.c2))))) CROSS JOIN t1 ON 0.8831567023323637 WHERE (((((t1.c0) BETWEEN (0.5943444955332017) AND (vt0.c1)))IS NOT((- (vt0.c1))))) ORDER BY (((((v0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, 0.8063610521751872, t1.c0)) AND ((v0.c0, vt1.c2, v0.c0)))) BETWEEN (((((t1.c0)OR(vt0.c0)))AND(t1.c0))) AND (((0.2494020368446772) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (0.5943444955332017) AND (vt0.c1)))IS NOT((- (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON (((vt1.c2) IS FALSE) IN ((((v0.c0, vt1.c1, vt1.c1, t1.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c2, vt0.c0, v0.c0, vt0.c1, vt0.c1, vt1.c2)) AND ((vt0.c0, vt1.c1, vt0.c1, vt1.c0, t1.c0, vt0.c0, vt1.c2))))) CROSS JOIN t1 ON 0.8831567023323637 ORDER BY (((((v0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, 0.8063610521751872, t1.c0)) AND ((v0.c0, vt1.c2, v0.c0)))) BETWEEN (((((t1.c0)OR(vt0.c0)))AND(t1.c0))) AND (((0.2494020368446772) NOT NULL))) DESC);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON (((vt1.c2) IS FALSE) IN ((((v0.c0, vt1.c1, vt1.c1, t1.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c2, vt0.c0, v0.c0, vt0.c1, vt0.c1, vt1.c2)) AND ((vt0.c0, vt1.c1, vt0.c1, vt1.c0, t1.c0, vt0.c0, vt1.c2))))) CROSS JOIN t1 ON 0.8831567023323637 WHERE (((((t1.c0) BETWEEN (0.5943444955332017) AND (vt0.c1)))IS NOT((- (vt0.c1))))) ORDER BY (((((v0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, 0.8063610521751872, t1.c0)) AND ((v0.c0, vt1.c2, v0.c0)))) BETWEEN (((((t1.c0)OR(vt0.c0)))AND(t1.c0))) AND (((0.2494020368446772) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (0.5943444955332017) AND (vt0.c1)))IS NOT((- (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON (((vt1.c2) IS FALSE) IN ((((v0.c0, vt1.c1, vt1.c1, t1.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c2, vt0.c0, v0.c0, vt0.c1, vt0.c1, vt1.c2)) AND ((vt0.c0, vt1.c1, vt0.c1, vt1.c0, t1.c0, vt0.c0, vt1.c2))))) CROSS JOIN t1 ON 0.8831567023323637 ORDER BY (((((v0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, 0.8063610521751872, t1.c0)) AND ((v0.c0, vt1.c2, v0.c0)))) BETWEEN (((((t1.c0)OR(vt0.c0)))AND(t1.c0))) AND (((0.2494020368446772) NOT NULL))) DESC);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON (((vt1.c2) IS FALSE) IN ((((v0.c0, vt1.c1, vt1.c1, t1.c0, vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c2, vt0.c0, v0.c0, vt0.c1, vt0.c1, vt1.c2)) AND ((vt0.c0, vt1.c1, vt0.c1, vt1.c0, t1.c0, vt0.c0, vt1.c2))))) CROSS JOIN t1 ON 0.8831567023323637 WHERE (((((t1.c0) BETWEEN (0.5943444955332017) AND (vt0.c1)))IS NOT((- (vt0.c1))))) ORDER BY (((((v0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, 0.8063610521751872, t1.c0)) AND ((v0.c0, vt1.c2, v0.c0)))) BETWEEN (((((t1.c0)OR(vt0.c0)))AND(t1.c0))) AND (((0.2494020368446772) NOT NULL))) DESC;
SELECT * FROM vt0, t1 WHERE ((((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '' END, CAST(t1.c0 AS TEXT), (vt0.c0 IN ())))!=((0.6287104589157758, CAST(vt0.c0 AS INTEGER), ((vt0.c0)&(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '' END, CAST(t1.c0 AS TEXT), (vt0.c0 IN ())))!=((0.6287104589157758, CAST(vt0.c0 AS INTEGER), ((vt0.c0)&(t1.c0)))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '' END, CAST(t1.c0 AS TEXT), (vt0.c0 IN ())))!=((0.6287104589157758, CAST(vt0.c0 AS INTEGER), ((vt0.c0)&(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '' END, CAST(t1.c0 AS TEXT), (vt0.c0 IN ())))!=((0.6287104589157758, CAST(vt0.c0 AS INTEGER), ((vt0.c0)&(t1.c0)))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '' END, CAST(t1.c0 AS TEXT), (vt0.c0 IN ())))!=((0.6287104589157758, CAST(vt0.c0 AS INTEGER), ((vt0.c0)&(t1.c0))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('nF3', vt0.c0, vt0.c1)))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('nF3', vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('nF3', vt0.c0, vt0.c1)))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('nF3', vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('nF3', vt0.c0, vt0.c1)))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((('nK_]' IN ()))AND(((t1.c0) ISNULL))))OR((((t1.c0))>=((t1.c0))))))OR(CAST(t1.c0 AS REAL))))AND((t1.c0 IN ())))) ORDER BY ((0x4426495f) NOT BETWEEN (0.32540749201241803) AND (t1.c0)) COLLATE NOCASE ASC, (((NULL, t1.c0, t1.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT x'7e99', 0.6941266442920554), (t1.c0 IN (t1.c0, t1.c0)), ((t1.c0)<<(t1.c0)))) AND ((((t1.c0)>>(t1.c0)), LIKELIHOOD(DISTINCT t1.c0, 0.9780910299945363), ((t1.c0) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((('nK_]' IN ()))AND(((t1.c0) ISNULL))))OR((((t1.c0))>=((t1.c0))))))OR(CAST(t1.c0 AS REAL))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((0X4426495f) NOT BETWEEN (0.32540749201241803) AND (t1.c0)) COLLATE NOCASE ASC, (((NULL, t1.c0, t1.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT x'7e99', 0.6941266442920554), (t1.c0 IN (t1.c0, t1.c0)), ((t1.c0)<<(t1.c0)))) AND ((((t1.c0)>>(t1.c0)), LIKELIHOOD(DISTINCT t1.c0, 0.9780910299945363), ((t1.c0) IS TRUE)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((('nK_]' IN ()))AND(((t1.c0) ISNULL))))OR((((t1.c0))>=((t1.c0))))))OR(CAST(t1.c0 AS REAL))))AND((t1.c0 IN ())))) ORDER BY ((0x4426495f) NOT BETWEEN (0.32540749201241803) AND (t1.c0)) COLLATE NOCASE ASC, (((NULL, t1.c0, t1.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT x'7e99', 0.6941266442920554), (t1.c0 IN (t1.c0, t1.c0)), ((t1.c0)<<(t1.c0)))) AND ((((t1.c0)>>(t1.c0)), LIKELIHOOD(DISTINCT t1.c0, 0.9780910299945363), ((t1.c0) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((('nK_]' IN ()))AND(((t1.c0) ISNULL))))OR((((t1.c0))>=((t1.c0))))))OR(CAST(t1.c0 AS REAL))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((0X4426495f) NOT BETWEEN (0.32540749201241803) AND (t1.c0)) COLLATE NOCASE ASC, (((NULL, t1.c0, t1.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT x'7e99', 0.6941266442920554), (t1.c0 IN (t1.c0, t1.c0)), ((t1.c0)<<(t1.c0)))) AND ((((t1.c0)>>(t1.c0)), LIKELIHOOD(DISTINCT t1.c0, 0.9780910299945363), ((t1.c0) IS TRUE)))) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((('nK_]' IN ()))AND(((t1.c0) ISNULL))))OR((((t1.c0))>=((t1.c0))))))OR(CAST(t1.c0 AS REAL))))AND((t1.c0 IN ())))) ORDER BY ((0x4426495f) NOT BETWEEN (0.32540749201241803) AND (t1.c0)) COLLATE NOCASE ASC, (((NULL, t1.c0, t1.c0)) NOT BETWEEN ((LIKELIHOOD(DISTINCT x'7e99', 0.6941266442920554), (t1.c0 IN (t1.c0, t1.c0)), ((t1.c0)<<(t1.c0)))) AND ((((t1.c0)>>(t1.c0)), LIKELIHOOD(DISTINCT t1.c0, 0.9780910299945363), ((t1.c0) IS TRUE)))) DESC;
SELECT ALL COUNT(*) FROM v0, t1 RIGHT OUTER JOIN vt1 ON (((((vt1.c1))>((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt1.c2))) AND (((vt1.c0)|(vt1.c2)))) WHERE (((vt1.c2 COLLATE BINARY)||(vt1.c2)));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE BINARY)||(vt1.c2))) IS TRUE)  as count FROM v0, t1 RIGHT OUTER JOIN vt1 ON (((((vt1.c1))>((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt1.c2))) AND (((vt1.c0)|(vt1.c2)))));
SELECT ALL COUNT(*) FROM v0, t1 RIGHT OUTER JOIN vt1 ON (((((vt1.c1))>((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt1.c2))) AND (((vt1.c0)|(vt1.c2)))) WHERE (((vt1.c2 COLLATE BINARY)||(vt1.c2)));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE BINARY)||(vt1.c2))) IS TRUE)  as count FROM v0, t1 RIGHT OUTER JOIN vt1 ON (((((vt1.c1))>((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt1.c2))) AND (((vt1.c0)|(vt1.c2)))));
SELECT ALL COUNT(*) FROM v0, t1 RIGHT OUTER JOIN vt1 ON (((((vt1.c1))>((v0.c0)))) BETWEEN (((((v0.c0)OR(v0.c0)))AND(vt1.c2))) AND (((vt1.c0)|(vt1.c2)))) WHERE (((vt1.c2 COLLATE BINARY)||(vt1.c2)));
SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN vt0 ON ((((((((((((vt1.c2)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(0x18df7406)))AND(((vt1.c2) IS FALSE))))AND(CAST(vt1.c1 AS INTEGER))) RIGHT OUTER JOIN vt1 ON (~ (((t1.c0) NOT NULL))) WHERE (((((((((((((((vt1.c0)OR(t1.c0)))AND(t1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.c0)OR(t1.c0)))AND(t1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(NULL))) IS FALSE)) IS TRUE)  as count FROM v0, t1 CROSS JOIN vt0 ON ((((((((((((vt1.c2)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(0x18df7406)))AND(((vt1.c2) IS FALSE))))AND(CAST(vt1.c1 AS INTEGER))) RIGHT OUTER JOIN vt1 ON (~ (((t1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM v0, t1 CROSS JOIN vt0 ON ((((((((((((vt1.c2)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(0x18df7406)))AND(((vt1.c2) IS FALSE))))AND(CAST(vt1.c1 AS INTEGER))) RIGHT OUTER JOIN vt1 ON (~ (((t1.c0) NOT NULL))) WHERE (((((((((((((((vt1.c0)OR(t1.c0)))AND(t1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt1.c0)OR(t1.c0)))AND(t1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(NULL))) IS FALSE)) IS TRUE)  as count FROM v0, t1 CROSS JOIN vt0 ON ((((((((((((vt1.c2)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(0x18df7406)))AND(((vt1.c2) IS FALSE))))AND(CAST(vt1.c1 AS INTEGER))) RIGHT OUTER JOIN vt1 ON (~ (((t1.c0) NOT NULL))));
SELECT * FROM v0, vt0, t1 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.4977777771713904 WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN (vt0.c1, vt0.c0)) WHEN v0.c0 COLLATE BINARY THEN INSTR(v0.c0, t1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.4977777771713904 WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN (vt0.c1, vt0.c0)) WHEN v0.c0 COLLATE BINARY THEN INSTR(v0.c0, t1.c0) END) IS TRUE)  as count FROM v0, vt0, t1);
SELECT * FROM v0, vt0, t1 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.4977777771713904 WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN (vt0.c1, vt0.c0)) WHEN v0.c0 COLLATE BINARY THEN INSTR(v0.c0, t1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.4977777771713904 WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN (vt0.c1, vt0.c0)) WHEN v0.c0 COLLATE BINARY THEN INSTR(v0.c0, t1.c0) END) IS TRUE)  as count FROM v0, vt0, t1);
SELECT * FROM v0, vt0, t1 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN 0.4977777771713904 WHEN ((v0.c0)<(v0.c0)) THEN (v0.c0 IN (vt0.c1, vt0.c0)) WHEN v0.c0 COLLATE BINARY THEN INSTR(v0.c0, t1.c0) END);
SELECT COUNT(*) FROM vt0 WHERE ((((('-463801591' IN ())))!=((((vt0.c0) ISNULL))))) ORDER BY (((('1699225931')<<(vt0.c1)))*(vt0.c1 COLLATE NOCASE)), (((vt0.c1, vt0.c1, vt0.c0))>((vt0.c1, vt0.c1, vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((('-463801591' IN ())))<>((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (((('1699225931')<<(vt0.c1)))*(vt0.c1 COLLATE NOCASE)), (((vt0.c1, vt0.c1, vt0.c0))>((vt0.c1, vt0.c1, vt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((('-463801591' IN ())))!=((((vt0.c0) ISNULL))))) ORDER BY (((('1699225931')<<(vt0.c1)))*(vt0.c1 COLLATE NOCASE)), (((vt0.c1, vt0.c1, vt0.c0))>((vt0.c1, vt0.c1, vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((('-463801591' IN ())))<>((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY (((('1699225931')<<(vt0.c1)))*(vt0.c1 COLLATE NOCASE)), (((vt0.c1, vt0.c1, vt0.c0))>((vt0.c1, vt0.c1, vt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((('-463801591' IN ())))!=((((vt0.c0) ISNULL))))) ORDER BY (((('1699225931')<<(vt0.c1)))*(vt0.c1 COLLATE NOCASE)), (((vt0.c1, vt0.c1, vt0.c0))>((vt0.c1, vt0.c1, vt0.c0))) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0, t1, vt1 WHERE ((NOT (CAST(-837053385 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(-837053385 AS INTEGER)))) IS TRUE)  as count FROM v0, t1, vt1);
SELECT ALL COUNT(*) FROM v0, t1, vt1 WHERE ((NOT (CAST(-837053385 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(-837053385 AS INTEGER)))) IS TRUE)  as count FROM v0, t1, vt1);
SELECT ALL COUNT(*) FROM v0, t1, vt1 WHERE ((NOT (CAST(-837053385 AS INTEGER))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((+ (vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((+ (vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((+ (vt0.c1))) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY ((((CAST(t1.c0 AS BLOB))OR(NULL COLLATE NOCASE)))OR(((vt0.c0)<=(-4.75899785E8))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((CAST(t1.c0 AS BLOB))OR(NULL COLLATE NOCASE)))OR(((vt0.c0)<=(-4.75899785E8))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY ((((CAST(t1.c0 AS BLOB))OR(NULL COLLATE NOCASE)))OR(((vt0.c0)<=(-4.75899785E8))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((CAST(t1.c0 AS BLOB))OR(NULL COLLATE NOCASE)))OR(((vt0.c0)<=(-4.75899785E8))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((vt1.c0)GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY ((((CAST(t1.c0 AS BLOB))OR(NULL COLLATE NOCASE)))OR(((vt0.c0)<=(-4.75899785E8))))  NULLS FIRST;
SELECT ALL * FROM vt0, t1, vt1, v0 WHERE (((((0Xffffffffddf8d5d2)<>(vt1.c1)))<=(vt1.c1))) ORDER BY (((((((vt1.c2)AND(vt0.c0)))OR(vt1.c1)), ((vt0.c0)!=(vt1.c0)), CAST(vt0.c1 AS INTEGER)))>=((vt1.c2 COLLATE NOCASE, vt1.c2, vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffddf8d5d2)<>(vt1.c1)))<=(vt1.c1))) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY (((((((vt1.c2)AND(vt0.c0)))OR(vt1.c1)), ((vt0.c0)!=(vt1.c0)), CAST(vt0.c1 AS INTEGER)))>=((vt1.c2 COLLATE NOCASE, vt1.c2, vt1.c2))));
SELECT ALL * FROM vt0, t1, vt1, v0 WHERE (((((0Xffffffffddf8d5d2)<>(vt1.c1)))<=(vt1.c1))) ORDER BY (((((((vt1.c2)AND(vt0.c0)))OR(vt1.c1)), ((vt0.c0)!=(vt1.c0)), CAST(vt0.c1 AS INTEGER)))>=((vt1.c2 COLLATE NOCASE, vt1.c2, vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffddf8d5d2)<>(vt1.c1)))<=(vt1.c1))) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY (((((((vt1.c2)AND(vt0.c0)))OR(vt1.c1)), ((vt0.c0)!=(vt1.c0)), CAST(vt0.c1 AS INTEGER)))>=((vt1.c2 COLLATE NOCASE, vt1.c2, vt1.c2))));
SELECT ALL * FROM vt0, t1, vt1, v0 WHERE (((((0Xffffffffddf8d5d2)<>(vt1.c1)))<=(vt1.c1))) ORDER BY (((((((vt1.c2)AND(vt0.c0)))OR(vt1.c1)), ((vt0.c0)!=(vt1.c0)), CAST(vt0.c1 AS INTEGER)))>=((vt1.c2 COLLATE NOCASE, vt1.c2, vt1.c2)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 END AS REAL));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (vt1.c1 COLLATE NOCASE))) ORDER BY CAST(CAST(vt1.c2 AS NUMERIC) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CAST(CAST(vt1.c2 AS NUMERIC) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (vt1.c1 COLLATE NOCASE))) ORDER BY CAST(CAST(vt1.c2 AS NUMERIC) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CAST(CAST(vt1.c2 AS NUMERIC) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (vt1.c1 COLLATE NOCASE))) ORDER BY CAST(CAST(vt1.c2 AS NUMERIC) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON vt0.c1 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt1.c1)))AND(vt1.c2)))+(vt1.c2)) LEFT OUTER JOIN vt1 ON ((((((vt1.c2)AND(vt1.c1)))OR(vt1.c0)))*((NOT (vt0.c0)))) WHERE (((((((vt1.c1) ISNULL))AND((vt1.c2 IN ()))))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (vt1.c1))))) ORDER BY (NOT (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) ISNULL))AND((vt1.c2 IN ()))))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON vt0.c1 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt1.c1)))AND(vt1.c2)))+(vt1.c2)) LEFT OUTER JOIN vt1 ON ((((((vt1.c2)AND(vt1.c1)))OR(vt1.c0)))*((NOT (vt0.c0)))) ORDER BY (NOT (vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON vt0.c1 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt1.c1)))AND(vt1.c2)))+(vt1.c2)) LEFT OUTER JOIN vt1 ON ((((((vt1.c2)AND(vt1.c1)))OR(vt1.c0)))*((NOT (vt0.c0)))) WHERE (((((((vt1.c1) ISNULL))AND((vt1.c2 IN ()))))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (vt1.c1))))) ORDER BY (NOT (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) ISNULL))AND((vt1.c2 IN ()))))OR(((v0.c0) NOT BETWEEN (t1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON vt0.c1 FULL OUTER JOIN vt0 ON ((((((vt0.c1)AND(vt1.c1)))AND(vt1.c2)))+(vt1.c2)) LEFT OUTER JOIN vt1 ON ((((((vt1.c2)AND(vt1.c1)))OR(vt1.c0)))*((NOT (vt0.c0)))) ORDER BY (NOT (vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt1, v0, t1 WHERE (CAST(((vt1.c1) IS FALSE) AS TEXT)) ORDER BY (NOT ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt1, v0, t1 ORDER BY (NOT ((vt1.c0 IN ()))));
SELECT ALL * FROM vt1, v0, t1 WHERE (CAST(((vt1.c1) IS FALSE) AS TEXT)) ORDER BY (NOT ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt1, v0, t1 ORDER BY (NOT ((vt1.c0 IN ()))));
SELECT ALL * FROM vt1, v0, t1 WHERE (CAST(((vt1.c1) IS FALSE) AS TEXT)) ORDER BY (NOT ((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CAST(vt1.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CAST(vt1.c1 AS BLOB))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CAST(vt1.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CAST(vt1.c1 AS BLOB))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CAST(vt1.c1 AS BLOB)))));
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(0.9967268132007178))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(0.9967268132007178)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(0.9967268132007178))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(0.9967268132007178)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c0)))AND(0.9967268132007178))))));
SELECT * FROM vt1, v0 WHERE ((NOT (vt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((NOT (vt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((NOT (vt1.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, t1, vt1, vt0 WHERE ((((vt0.c1, v0.c0, vt1.c1, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.c1, TYPEOF(vt1.c2), ((v0.c0) NOT NULL), (((vt1.c0))<((vt1.c0))), ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)))) AND ((vt1.c2, ((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)), ((((0.4977777771713904)OR(vt0.c0)))AND(t1.c0)), ((((((((vt0.c0)AND(vt1.c2)))AND(vt1.c1)))OR('>4/mx9B')))AND(t1.c0)), ((((((((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt1.c1)))AND(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, v0.c0, vt1.c1, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.c1, TYPEOF(vt1.c2), ((v0.c0) NOT NULL), (((vt1.c0))<((vt1.c0))), ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)))) AND ((vt1.c2, ((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)), ((((0.4977777771713904)OR(vt0.c0)))AND(t1.c0)), ((((((((vt0.c0)AND(vt1.c2)))AND(vt1.c1)))OR('>4/mx9B')))AND(t1.c0)), ((((((((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt1.c1)))AND(t1.c0)))))) IS TRUE)  as count FROM v0, t1, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, t1, vt1, vt0 WHERE ((((vt0.c1, v0.c0, vt1.c1, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.c1, TYPEOF(vt1.c2), ((v0.c0) NOT NULL), (((vt1.c0))<((vt1.c0))), ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)))) AND ((vt1.c2, ((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)), ((((0.4977777771713904)OR(vt0.c0)))AND(t1.c0)), ((((((((vt0.c0)AND(vt1.c2)))AND(vt1.c1)))OR('>4/mx9B')))AND(t1.c0)), ((((((((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt1.c1)))AND(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, v0.c0, vt1.c1, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.c1, TYPEOF(vt1.c2), ((v0.c0) NOT NULL), (((vt1.c0))<((vt1.c0))), ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)))) AND ((vt1.c2, ((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)), ((((0.4977777771713904)OR(vt0.c0)))AND(t1.c0)), ((((((((vt0.c0)AND(vt1.c2)))AND(vt1.c1)))OR('>4/mx9B')))AND(t1.c0)), ((((((((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt1.c1)))AND(t1.c0)))))) IS TRUE)  as count FROM v0, t1, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, t1, vt1, vt0 WHERE ((((vt0.c1, v0.c0, vt1.c1, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.c1, TYPEOF(vt1.c2), ((v0.c0) NOT NULL), (((vt1.c0))<((vt1.c0))), ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)))) AND ((vt1.c2, ((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)), ((((0.4977777771713904)OR(vt0.c0)))AND(t1.c0)), ((((((((vt0.c0)AND(vt1.c2)))AND(vt1.c1)))OR('>4/mx9B')))AND(t1.c0)), ((((((((((((vt1.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt1.c1)))AND(t1.c0))))));
SELECT * FROM vt1 WHERE ((((NOT (vt1.c2))) BETWEEN (vt1.c2 COLLATE RTRIM) AND (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 END))) ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((vt1.c0 IN ())))==((CAST(vt1.c0 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c2))) BETWEEN (vt1.c2 COLLATE RTRIM) AND (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((vt1.c0 IN ())))=((CAST(vt1.c0 AS REAL)))) DESC);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c2))) BETWEEN (vt1.c2 COLLATE RTRIM) AND (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 END))) ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((vt1.c0 IN ())))==((CAST(vt1.c0 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c2))) BETWEEN (vt1.c2 COLLATE RTRIM) AND (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((vt1.c0 IN ())))=((CAST(vt1.c0 AS REAL)))) DESC);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c2))) BETWEEN (vt1.c2 COLLATE RTRIM) AND (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 END))) ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((vt1.c0 IN ())))==((CAST(vt1.c0 AS REAL)))) DESC;
SELECT COUNT(*) FROM t1, vt1, v0, vt0 WHERE ((vt0.c1 COLLATE NOCASE IN (vt1.c2))) ORDER BY (~ (((vt1.c1)OR(vt1.c2)))), x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE NOCASE IN (vt1.c2))) IS TRUE)  as count FROM t1, vt1, v0, vt0 ORDER BY (~ (((vt1.c1)OR(vt1.c2)))), x''  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1, v0, vt0 WHERE ((vt0.c1 COLLATE NOCASE IN (vt1.c2))) ORDER BY (~ (((vt1.c1)OR(vt1.c2)))), x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE NOCASE IN (vt1.c2))) IS TRUE)  as count FROM t1, vt1, v0, vt0 ORDER BY (~ (((vt1.c1)OR(vt1.c2)))), x''  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1, v0, vt0 WHERE ((vt0.c1 COLLATE NOCASE IN (vt1.c2))) ORDER BY (~ (((vt1.c1)OR(vt1.c2)))), x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c0)<<(t1.c0)) THEN -1041735101 WHEN ((vt0.c0)+(vt0.c0)) THEN 0.9229451496287283 WHEN (vt0.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY (((((- (t1.c0)))AND(INSTR(vt0.c1, x''))))AND(UPPER(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c0)<<(t1.c0)) THEN -1041735101 WHEN ((vt0.c0)+(vt0.c0)) THEN 0.9229451496287283 WHEN (vt0.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((- (t1.c0)))AND(INSTR(vt0.c1, x''))))AND(UPPER(vt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c0)<<(t1.c0)) THEN -1041735101 WHEN ((vt0.c0)+(vt0.c0)) THEN 0.9229451496287283 WHEN (vt0.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY (((((- (t1.c0)))AND(INSTR(vt0.c1, x''))))AND(UPPER(vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c0)<<(t1.c0)) THEN -1041735101 WHEN ((vt0.c0)+(vt0.c0)) THEN 0.9229451496287283 WHEN (vt0.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((- (t1.c0)))AND(INSTR(vt0.c1, x''))))AND(UPPER(vt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE ((vt0.c1) NOT NULL)  WHEN ((vt0.c0)<<(t1.c0)) THEN -1041735101 WHEN ((vt0.c0)+(vt0.c0)) THEN 0.9229451496287283 WHEN (vt0.c0 IN ()) THEN t1.c0 COLLATE NOCASE ELSE CAST(vt0.c0 AS NUMERIC) END) ORDER BY (((((- (t1.c0)))AND(INSTR(vt0.c1, x''))))AND(UPPER(vt0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (0.6537803506521268))) ISNULL)) ORDER BY (((((('NK_]')AND(vt0.c1)))OR(vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (0.6537803506521268))) ISNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((('NK_]')AND(vt0.c1)))OR(vt0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (0.6537803506521268))) ISNULL)) ORDER BY (((((('NK_]')AND(vt0.c1)))OR(vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (0.6537803506521268))) ISNULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((('NK_]')AND(vt0.c1)))OR(vt0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (0.6537803506521268))) ISNULL)) ORDER BY (((((('NK_]')AND(vt0.c1)))OR(vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t1, v0 WHERE ((CASE v0.c0  WHEN vt1.c2 THEN vt1.c0 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN vt1.c2 THEN vt1.c0 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM vt1, t1, v0);
SELECT ALL * FROM vt1, t1, v0 WHERE ((CASE v0.c0  WHEN vt1.c2 THEN vt1.c0 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE v0.c0  WHEN vt1.c2 THEN vt1.c0 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM vt1, t1, v0);
SELECT ALL * FROM vt1, t1, v0 WHERE ((CASE v0.c0  WHEN vt1.c2 THEN vt1.c0 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END IN ()));
SELECT COUNT(*) FROM vt1, vt0, t1, v0 WHERE (((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((((x'', vt1.c2, vt1.c1))>=((vt1.c0, vt0.c1, vt1.c2)))) AND (vt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((((x'', vt1.c2, vt1.c1))>=((vt1.c0, vt0.c1, vt1.c2)))) AND (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, t1, v0);
SELECT COUNT(*) FROM vt1, vt0, t1, v0 WHERE (((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((((x'', vt1.c2, vt1.c1))>=((vt1.c0, vt0.c1, vt1.c2)))) AND (vt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((((x'', vt1.c2, vt1.c1))>=((vt1.c0, vt0.c1, vt1.c2)))) AND (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, t1, v0);
SELECT COUNT(*) FROM vt1, vt0, t1, v0 WHERE (((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((((x'', vt1.c2, vt1.c1))>=((vt1.c0, vt0.c1, vt1.c2)))) AND (vt1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE ((((t1.c0, t1.c0, vt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, vt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, vt1, v0);
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE ((((t1.c0, t1.c0, vt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, vt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, vt1, v0);
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE ((((t1.c0, t1.c0, vt1.c0)) BETWEEN ((vt0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY (~ (vt1.c1))  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1, v0, t1, vt0 ORDER BY (~ (vt1.c1))  NULLS FIRST, NULL  NULLS LAST);
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY (~ (vt1.c1))  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1, v0, t1, vt0 ORDER BY (~ (vt1.c1))  NULLS FIRST, NULL  NULLS LAST);
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY (~ (vt1.c1))  NULLS FIRST, NULL  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, v0, vt1 WHERE (((2.98223645E8) ISNULL));
SELECT SUM(count) FROM (SELECT ((((2.98223645E8) ISNULL)) IS TRUE)  as count FROM t1, vt0, v0, vt1);
SELECT COUNT(*) FROM t1, vt0, v0, vt1 WHERE (((2.98223645E8) ISNULL));
SELECT SUM(count) FROM (SELECT ((((2.98223645E8) ISNULL)) IS TRUE)  as count FROM t1, vt0, v0, vt1);
SELECT COUNT(*) FROM t1, vt0, v0, vt1 WHERE (((2.98223645E8) ISNULL));
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((((vt0.c0)>=(v0.c0)))|((((vt0.c0, vt0.c1, v0.c0, t1.c0, v0.c0))<=((t1.c0, vt0.c1, vt0.c0, vt0.c1, t1.c0)))))) ORDER BY ((((+ (vt0.c1))))>=((vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(v0.c0)))|((((vt0.c0, vt0.c1, v0.c0, t1.c0, v0.c0))<=((t1.c0, vt0.c1, vt0.c0, vt0.c1, t1.c0)))))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY ((((+ (vt0.c1))))>=((vt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((((vt0.c0)>=(v0.c0)))|((((vt0.c0, vt0.c1, v0.c0, t1.c0, v0.c0))<=((t1.c0, vt0.c1, vt0.c0, vt0.c1, t1.c0)))))) ORDER BY ((((+ (vt0.c1))))>=((vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(v0.c0)))|((((vt0.c0, vt0.c1, v0.c0, t1.c0, v0.c0))<=((t1.c0, vt0.c1, vt0.c0, vt0.c1, t1.c0)))))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY ((((+ (vt0.c1))))>=((vt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM v0, vt0, t1 WHERE (((((vt0.c0)>=(v0.c0)))|((((vt0.c0, vt0.c1, v0.c0, t1.c0, v0.c0))<=((t1.c0, vt0.c1, vt0.c0, vt0.c1, t1.c0)))))) ORDER BY ((((+ (vt0.c1))))>=((vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE BINARY)) WHERE (CAST(CASE vt1.c2  WHEN x'' THEN vt1.c0 END AS INTEGER)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c2  WHEN x'' THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE BINARY)) ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE BINARY)) WHERE (CAST(CASE vt1.c2  WHEN x'' THEN vt1.c0 END AS INTEGER)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c2  WHEN x'' THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE BINARY)) ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE BINARY)) WHERE (CAST(CASE vt1.c2  WHEN x'' THEN vt1.c0 END AS INTEGER)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, t1 WHERE ((CASE WHEN 0.7366651803929265 THEN v0.c0 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN 0.7366651803929265 THEN v0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, v0, t1);
SELECT ALL * FROM vt0, v0, t1 WHERE ((CASE WHEN 0.7366651803929265 THEN v0.c0 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN 0.7366651803929265 THEN v0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, v0, t1);
SELECT ALL * FROM vt0, v0, t1 WHERE ((CASE WHEN 0.7366651803929265 THEN v0.c0 ELSE vt0.c0 END IN ()));
SELECT COUNT(*) FROM v0 WHERE (UPPER((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((NOT (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (UPPER((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((NOT (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (UPPER((NOT (v0.c0))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((('-415860963')-(vt0.c0))) NOT BETWEEN (t1.c0) AND ((((t1.c0))=((v0.c0))))) FULL OUTER JOIN t1 ON (('-1e500')+(CASE t1.c0  WHEN t1.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((CAST(v0.c0 AS NUMERIC))+(((t1.c0)<(0x2c2e9679))))) ORDER BY (+ (NULL)) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN (((NOT (v0.c0)))) AND (((((vt0.c1)) BETWEEN ((t1.c0)) AND ((v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))+(((t1.c0)<(0X2c2e9679))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((('-415860963')-(vt0.c0))) NOT BETWEEN (t1.c0) AND ((((t1.c0))==((v0.c0))))) FULL OUTER JOIN t1 ON (('-1e500')+(CASE t1.c0  WHEN t1.c0 THEN v0.c0 ELSE vt0.c0 END)) ORDER BY (+ (NULL)) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN (((NOT (v0.c0)))) AND (((((vt0.c1)) BETWEEN ((t1.c0)) AND ((v0.c0)))))) ASC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((('-415860963')-(vt0.c0))) NOT BETWEEN (t1.c0) AND ((((t1.c0))=((v0.c0))))) FULL OUTER JOIN t1 ON (('-1e500')+(CASE t1.c0  WHEN t1.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((CAST(v0.c0 AS NUMERIC))+(((t1.c0)<(0x2c2e9679))))) ORDER BY (+ (NULL)) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN (((NOT (v0.c0)))) AND (((((vt0.c1)) BETWEEN ((t1.c0)) AND ((v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))+(((t1.c0)<(0X2c2e9679))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((('-415860963')-(vt0.c0))) NOT BETWEEN (t1.c0) AND ((((t1.c0))==((v0.c0))))) FULL OUTER JOIN t1 ON (('-1e500')+(CASE t1.c0  WHEN t1.c0 THEN v0.c0 ELSE vt0.c0 END)) ORDER BY (+ (NULL)) DESC  NULLS FIRST, (((vt0.c0)) BETWEEN (((NOT (v0.c0)))) AND (((((vt0.c1)) BETWEEN ((t1.c0)) AND ((v0.c0)))))) ASC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON CASE ((((vt1.c2)AND(v0.c0)))AND(vt1.c2))  WHEN 0.3335505129595544 THEN (NOT ('-r')) ELSE ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)) END WHERE (((v0.c0) NOTNULL) COLLATE BINARY) ORDER BY CAST(((vt1.c2) NOT BETWEEN (v0.c0) AND (vt1.c2)) AS BLOB), LIKELIHOOD('', 0.32594132366935535);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON CASE ((((vt1.c2)AND(v0.c0)))AND(vt1.c2))  WHEN 0.3335505129595544 THEN (NOT ('-r')) ELSE ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)) END ORDER BY CAST(((vt1.c2) NOT BETWEEN (v0.c0) AND (vt1.c2)) AS BLOB), LIKELIHOOD('', 0.32594132366935535));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON CASE ((((vt1.c2)AND(v0.c0)))AND(vt1.c2))  WHEN 0.3335505129595544 THEN (NOT ('-r')) ELSE ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)) END WHERE (((v0.c0) NOTNULL) COLLATE BINARY) ORDER BY CAST(((vt1.c2) NOT BETWEEN (v0.c0) AND (vt1.c2)) AS BLOB), LIKELIHOOD('', 0.32594132366935535);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON CASE ((((vt1.c2)AND(v0.c0)))AND(vt1.c2))  WHEN 0.3335505129595544 THEN (NOT ('-r')) ELSE ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)) END ORDER BY CAST(((vt1.c2) NOT BETWEEN (v0.c0) AND (vt1.c2)) AS BLOB), LIKELIHOOD('', 0.32594132366935535));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON CASE ((((vt1.c2)AND(v0.c0)))AND(vt1.c2))  WHEN 0.3335505129595544 THEN (NOT ('-r')) ELSE ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)) END WHERE (((v0.c0) NOTNULL) COLLATE BINARY) ORDER BY CAST(((vt1.c2) NOT BETWEEN (v0.c0) AND (vt1.c2)) AS BLOB), LIKELIHOOD('', 0.32594132366935535);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(v0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN t1 ON GLOB(vt1.c1 COLLATE RTRIM, t1.c0 COLLATE RTRIM) FULL OUTER JOIN vt1 ON vt1.c2 WHERE ((('2039939616') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('2039939616') ISNULL)) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t1 ON GLOB(vt1.c1 COLLATE RTRIM, t1.c0 COLLATE RTRIM) FULL OUTER JOIN vt1 ON vt1.c2);
SELECT ALL COUNT(*) FROM vt0, v0 CROSS JOIN t1 ON GLOB(vt1.c1 COLLATE RTRIM, t1.c0 COLLATE RTRIM) FULL OUTER JOIN vt1 ON vt1.c2 WHERE ((('2039939616') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('2039939616') ISNULL)) IS TRUE)  as count FROM vt0, v0 CROSS JOIN t1 ON GLOB(vt1.c1 COLLATE RTRIM, t1.c0 COLLATE RTRIM) FULL OUTER JOIN vt1 ON vt1.c2);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((LTRIM(t1.c0))GLOB(CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON 0.764207812993951 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((LTRIM(t1.c0))GLOB(CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON 0.764207812993951);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((LTRIM(t1.c0))GLOB(CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON 0.764207812993951 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((LTRIM(t1.c0))GLOB(CAST(t1.c0 AS INTEGER))) INNER JOIN t1 ON 0.764207812993951);
SELECT ALL * FROM vt1, t1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (vt1.c1);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))) AND ((CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))) AND ((CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))) AND ((CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))) AND ((CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))) AND ((CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt0.c0 END))));
SELECT * FROM t1, v0 WHERE (((v0.c0 COLLATE BINARY)+((t1.c0 IN ())))) ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)+((t1.c0 IN ())))) IS TRUE)  as count FROM t1, v0 ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))));
SELECT * FROM t1, v0 WHERE (((v0.c0 COLLATE BINARY)+((t1.c0 IN ())))) ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)+((t1.c0 IN ())))) IS TRUE)  as count FROM t1, v0 ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))));
SELECT * FROM t1, v0 WHERE (((v0.c0 COLLATE BINARY)+((t1.c0 IN ())))) ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0))));
SELECT ALL * FROM t1, vt0 NATURAL JOIN vt1 WHERE (((vt0.c1)/((((t1.c0, NULL, NULL))<=((vt0.c0, vt1.c1, t1.c0)))))) ORDER BY CASE ((vt1.c2) BETWEEN (vt1.c1) AND (vt0.c0))  WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END THEN (~ (vt1.c1)) WHEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c0 END THEN (vt1.c0 IN (vt1.c1, vt1.c1)) WHEN (+ (t1.c0)) THEN ((vt0.c1)IS NOT(vt0.c0)) ELSE CAST(vt1.c2 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)/((((t1.c0, NULL, NULL))<=((vt0.c0, vt1.c1, t1.c0)))))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN vt1 ORDER BY CASE ((vt1.c2) BETWEEN (vt1.c1) AND (vt0.c0))  WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END THEN (~ (vt1.c1)) WHEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c0 END THEN (vt1.c0 IN (vt1.c1, vt1.c1)) WHEN (+ (t1.c0)) THEN ((vt0.c1)IS NOT(vt0.c0)) ELSE CAST(vt1.c2 AS TEXT) END);
SELECT ALL * FROM t1, vt0 NATURAL JOIN vt1 WHERE (((vt0.c1)/((((t1.c0, NULL, NULL))<=((vt0.c0, vt1.c1, t1.c0)))))) ORDER BY CASE ((vt1.c2) BETWEEN (vt1.c1) AND (vt0.c0))  WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END THEN (~ (vt1.c1)) WHEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c0 END THEN (vt1.c0 IN (vt1.c1, vt1.c1)) WHEN (+ (t1.c0)) THEN ((vt0.c1)IS NOT(vt0.c0)) ELSE CAST(vt1.c2 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)/((((t1.c0, NULL, NULL))<=((vt0.c0, vt1.c1, t1.c0)))))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN vt1 ORDER BY CASE ((vt1.c2) BETWEEN (vt1.c1) AND (vt0.c0))  WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END THEN (~ (vt1.c1)) WHEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c0 END THEN (vt1.c0 IN (vt1.c1, vt1.c1)) WHEN (+ (t1.c0)) THEN ((vt0.c1)IS NOT(vt0.c0)) ELSE CAST(vt1.c2 AS TEXT) END);
SELECT ALL * FROM t1, vt0 NATURAL JOIN vt1 WHERE (((vt0.c1)/((((t1.c0, NULL, NULL))<=((vt0.c0, vt1.c1, t1.c0)))))) ORDER BY CASE ((vt1.c2) BETWEEN (vt1.c1) AND (vt0.c0))  WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END THEN (~ (vt1.c1)) WHEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c0 END THEN (vt1.c0 IN (vt1.c1, vt1.c1)) WHEN (+ (t1.c0)) THEN ((vt0.c1)IS NOT(vt0.c0)) ELSE CAST(vt1.c2 AS TEXT) END;
SELECT * FROM t1, vt1, v0 WHERE (((vt1.c1 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t1, vt1, v0);
SELECT * FROM t1, vt1, v0 WHERE (((vt1.c1 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM t1, vt1, v0);
SELECT * FROM t1, vt1, v0 WHERE (((vt1.c1 COLLATE RTRIM) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, v0 NOT INDEXED WHERE (((vt1.c0)OR(vt1.c0)) COLLATE RTRIM) ORDER BY (((((vt1.c1 IN ()))OR(vt1.c0 COLLATE NOCASE)))OR(vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((vt1.c1 IN ()))OR(vt1.c0 COLLATE NOCASE)))OR(vt1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 NOT INDEXED WHERE (((vt1.c0)OR(vt1.c0)) COLLATE RTRIM) ORDER BY (((((vt1.c1 IN ()))OR(vt1.c0 COLLATE NOCASE)))OR(vt1.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((vt1.c1 IN ()))OR(vt1.c0 COLLATE NOCASE)))OR(vt1.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 NOT INDEXED WHERE (((vt1.c0)OR(vt1.c0)) COLLATE RTRIM) ORDER BY (((((vt1.c1 IN ()))OR(vt1.c0 COLLATE NOCASE)))OR(vt1.c1)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM v0, vt0 WHERE (((vt0.c1) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0.7966421326926276)))) AND (UNLIKELY(vt0.c1)))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7366651803929265 WHEN vt0.c1 THEN vt0.c0 END)==(((vt0.c1)<=(x'')))) DESC  NULLS LAST, ((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('417297414')))AND(v0.c0)))AND(v0.c0)))AND(0.3489914830758498))) NOT BETWEEN (CASE 0X4cd4056  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0.7966421326926276)))) AND (UNLIKELY(vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7366651803929265 WHEN vt0.c1 THEN vt0.c0 END)==(((vt0.c1)<=(x'')))) DESC  NULLS LAST, ((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('417297414')))AND(v0.c0)))AND(v0.c0)))AND(0.3489914830758498))) NOT BETWEEN (CASE 0x4cd4056  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (v0.c0)));
SELECT * FROM v0, vt0 WHERE (((vt0.c1) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0.7966421326926276)))) AND (UNLIKELY(vt0.c1)))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7366651803929265 WHEN vt0.c1 THEN vt0.c0 END)==(((vt0.c1)<=(x'')))) DESC  NULLS LAST, ((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('417297414')))AND(v0.c0)))AND(v0.c0)))AND(0.3489914830758498))) NOT BETWEEN (CASE 0X4cd4056  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0.7966421326926276)))) AND (UNLIKELY(vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7366651803929265 WHEN vt0.c1 THEN vt0.c0 END)==(((vt0.c1)<=(x'')))) DESC  NULLS LAST, ((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('417297414')))AND(v0.c0)))AND(v0.c0)))AND(0.3489914830758498))) NOT BETWEEN (CASE 0x4cd4056  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (v0.c0)));
SELECT * FROM v0, vt0 WHERE (((vt0.c1) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((0.7966421326926276)))) AND (UNLIKELY(vt0.c1)))) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7366651803929265 WHEN vt0.c1 THEN vt0.c0 END)==(((vt0.c1)<=(x'')))) DESC  NULLS LAST, ((((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('417297414')))AND(v0.c0)))AND(v0.c0)))AND(0.3489914830758498))) NOT BETWEEN (CASE 0X4cd4056  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (v0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1096052838');
SELECT SUM(count) FROM (SELECT (('-1096052838') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1096052838');
SELECT SUM(count) FROM (SELECT (('-1096052838') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1096052838');
SELECT ALL COUNT(*) FROM vt1, t1, v0, vt0 WHERE (((']ft#U}*d') NOT NULL));
SELECT SUM(count) FROM (SELECT ((((']ft#U}*d') NOT NULL)) IS TRUE)  as count FROM vt1, t1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, v0, vt0 WHERE (((']ft#U}*d') NOT NULL));
SELECT SUM(count) FROM (SELECT ((((']ft#U}*d') NOT NULL)) IS TRUE)  as count FROM vt1, t1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, v0, vt0 WHERE (((']ft#U}*d') NOT NULL));
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE ((((((((((~ (v0.c0)))AND('')))AND(vt0.c1)))OR(UPPER(v0.c0))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (v0.c0)))AND('')))AND(vt0.c1)))OR(UPPER(v0.c0))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE ((((((((((~ (v0.c0)))AND('')))AND(vt0.c1)))OR(UPPER(v0.c0))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (v0.c0)))AND('')))AND(vt0.c1)))OR(UPPER(v0.c0))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE ((((((((((~ (v0.c0)))AND('')))AND(vt0.c1)))OR(UPPER(v0.c0))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))));
SELECT COUNT(*) FROM v0, t1 WHERE ((((v0.c0, 387756400, t1.c0)) NOT BETWEEN ((v0.c0, (+ (t1.c0)), (v0.c0 IN ()))) AND ((t1.c0 COLLATE RTRIM, CASE WHEN t1.c0 THEN v0.c0 END, t1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, 387756400, t1.c0)) NOT BETWEEN ((v0.c0, (+ (t1.c0)), (v0.c0 IN ()))) AND ((t1.c0 COLLATE RTRIM, CASE WHEN t1.c0 THEN v0.c0 END, t1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE ((((v0.c0, 387756400, t1.c0)) NOT BETWEEN ((v0.c0, (+ (t1.c0)), (v0.c0 IN ()))) AND ((t1.c0 COLLATE RTRIM, CASE WHEN t1.c0 THEN v0.c0 END, t1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, 387756400, t1.c0)) NOT BETWEEN ((v0.c0, (+ (t1.c0)), (v0.c0 IN ()))) AND ((t1.c0 COLLATE RTRIM, CASE WHEN t1.c0 THEN v0.c0 END, t1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE ((((v0.c0, 387756400, t1.c0)) NOT BETWEEN ((v0.c0, (+ (t1.c0)), (v0.c0 IN ()))) AND ((t1.c0 COLLATE RTRIM, CASE WHEN t1.c0 THEN v0.c0 END, t1.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM v0, t1, vt0 NOT INDEXED WHERE (((((t1.c0)||(vt0.c1))) IS TRUE)) ORDER BY ((((- (t1.c0))))<((((v0.c0)==(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)||(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY ((((- (t1.c0))))<((((v0.c0)=(vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1, vt0 NOT INDEXED WHERE (((((t1.c0)||(vt0.c1))) IS TRUE)) ORDER BY ((((- (t1.c0))))<((((v0.c0)==(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)||(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY ((((- (t1.c0))))<((((v0.c0)=(vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t1, vt0 NOT INDEXED WHERE (((((t1.c0)||(vt0.c1))) IS TRUE)) ORDER BY ((((- (t1.c0))))<((((v0.c0)==(vt0.c0)))))  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN v0 ON (- (((v0.c0)||(vt1.c2)))) WHERE (((((vt1.c0) ISNULL))>((vt1.c0 IN ())))) ORDER BY CAST((((0.6653689563434081)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON (- (((v0.c0)||(vt1.c2)))) ORDER BY CAST((((0.6653689563434081)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) AS REAL)  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN v0 ON (- (((v0.c0)||(vt1.c2)))) WHERE (((((vt1.c0) ISNULL))>((vt1.c0 IN ())))) ORDER BY CAST((((0.6653689563434081)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON (- (((v0.c0)||(vt1.c2)))) ORDER BY CAST((((0.6653689563434081)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) AS REAL)  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN v0 ON (- (((v0.c0)||(vt1.c2)))) WHERE (((((vt1.c0) ISNULL))>((vt1.c0 IN ())))) ORDER BY CAST((((0.6653689563434081)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) AS REAL)  NULLS FIRST;
SELECT ALL * FROM v0, vt1, vt0 WHERE (CHAR(CASE WHEN v0.c0 THEN '0.22121283936596048' WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c2 WHEN v0.c0 THEN vt0.c1 WHEN vt1.c2 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (+ (((v0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHAR(CASE WHEN v0.c0 THEN '0.22121283936596048' WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c2 WHEN v0.c0 THEN vt0.c1 WHEN vt1.c2 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (+ (((v0.c0) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (CHAR(CASE WHEN v0.c0 THEN '0.22121283936596048' WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c2 WHEN v0.c0 THEN vt0.c1 WHEN vt1.c2 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (+ (((v0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHAR(CASE WHEN v0.c0 THEN '0.22121283936596048' WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c2 WHEN v0.c0 THEN vt0.c1 WHEN vt1.c2 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (+ (((v0.c0) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (CHAR(CASE WHEN v0.c0 THEN '0.22121283936596048' WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c2 WHEN v0.c0 THEN vt0.c1 WHEN vt1.c2 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (+ (((v0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((0.28162970488786654 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.28162970488786654 IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((0.28162970488786654 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.28162970488786654 IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((0.28162970488786654 IN ()));
SELECT * FROM v0 WHERE (((json_array(v0.c0, v0.c0))LIKE(v0.c0 COLLATE BINARY))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(v0.c0, v0.c0))LIKE(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT * FROM v0 WHERE (((json_array(v0.c0, v0.c0))LIKE(v0.c0 COLLATE BINARY))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(v0.c0, v0.c0))LIKE(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY x'' DESC);
SELECT * FROM v0 WHERE (((json_array(v0.c0, v0.c0))LIKE(v0.c0 COLLATE BINARY))) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 END)OR(((t1.c0)IS NOT(v0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t1.c0 THEN t1.c0 END)OR(((t1.c0)IS NOT(v0.c0)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 END)OR(((t1.c0)IS NOT(v0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t1.c0 THEN t1.c0 END)OR(((t1.c0)IS NOT(v0.c0)))))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 END)OR(((t1.c0)IS NOT(v0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt1 WHERE (NULLIF(CAST(vt1.c1 AS BLOB), ((vt1.c1)||(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(vt1.c1 AS BLOB), ((vt1.c1)||(vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (NULLIF(CAST(vt1.c1 AS BLOB), ((vt1.c1)||(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CAST(vt1.c1 AS BLOB), ((vt1.c1)||(vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (NULLIF(CAST(vt1.c1 AS BLOB), ((vt1.c1)||(vt1.c0))));
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE (((((~ (x''))))<((v0.c0 COLLATE NOCASE)))) ORDER BY ((-570894894) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((~ (x''))))<((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY ((-570894894) IS TRUE));
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE (((((~ (x''))))<((v0.c0 COLLATE NOCASE)))) ORDER BY ((-570894894) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((~ (x''))))<((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY ((-570894894) IS TRUE));
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE (((((~ (x''))))<((v0.c0 COLLATE NOCASE)))) ORDER BY ((-570894894) IS TRUE);
SELECT ALL * FROM v0 WHERE (INSTR(CASE WHEN v0.c0 THEN x'' END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CASE WHEN v0.c0 THEN x'' END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (INSTR(CASE WHEN v0.c0 THEN x'' END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CASE WHEN v0.c0 THEN x'' END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (INSTR(CASE WHEN v0.c0 THEN x'' END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c2)), LIKE(vt1.c0, vt1.c0, '砱'), CAST(vt1.c0 AS BLOB)))=((LIKELY(vt1.c1), ((0Xffffffffb01d98a1)GLOB(vt1.c0)), CAST(vt1.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c2)), LIKE(vt1.c0, vt1.c0, '砱'), CAST(vt1.c0 AS BLOB)))=((LIKELY(vt1.c1), ((0xffffffffb01d98a1)GLOB(vt1.c0)), CAST(vt1.c1 AS BLOB))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c2)), LIKE(vt1.c0, vt1.c0, '砱'), CAST(vt1.c0 AS BLOB)))=((LIKELY(vt1.c1), ((0Xffffffffb01d98a1)GLOB(vt1.c0)), CAST(vt1.c1 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c2)), LIKE(vt1.c0, vt1.c0, '砱'), CAST(vt1.c0 AS BLOB)))=((LIKELY(vt1.c1), ((0xffffffffb01d98a1)GLOB(vt1.c0)), CAST(vt1.c1 AS BLOB))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c2)), LIKE(vt1.c0, vt1.c0, '砱'), CAST(vt1.c0 AS BLOB)))=((LIKELY(vt1.c1), ((0Xffffffffb01d98a1)GLOB(vt1.c0)), CAST(vt1.c1 AS BLOB)))));
SELECT ALL * FROM t1, vt0, vt1 WHERE ((((((((vt0.c1)OR(vt0.c1)))OR(x''))))<=((((vt1.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)OR(vt0.c1)))OR(x''))))<=((((vt1.c2) IS FALSE))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE ((((((((vt0.c1)OR(vt0.c1)))OR(x''))))<=((((vt1.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)OR(vt0.c1)))OR(x''))))<=((((vt1.c2) IS FALSE))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE ((((((((vt0.c1)OR(vt0.c1)))OR(x''))))<=((((vt1.c2) IS FALSE)))));
SELECT * FROM vt1, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((0.21108930142824156)>=(((vt1.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((0.21108930142824156)>=(((vt1.c1) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((0.21108930142824156)>=(((vt1.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((0.21108930142824156)>=(((vt1.c1) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((0.21108930142824156)>=(((vt1.c1) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON NULL COLLATE BINARY LEFT OUTER JOIN v0 ON json_type(CHAR(-1547644705)) WHERE (((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(t1.c0)))OR(t1.c0)))IS NOT(CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(t1.c0)))OR(t1.c0)))IS NOT(CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON NULL COLLATE BINARY LEFT OUTER JOIN v0 ON json_type(CHAR(-1547644705)));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON NULL COLLATE BINARY LEFT OUTER JOIN v0 ON json_type(CHAR(-1547644705)) WHERE (((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(t1.c0)))OR(t1.c0)))IS NOT(CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(t1.c0)))OR(t1.c0)))IS NOT(CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON NULL COLLATE BINARY LEFT OUTER JOIN v0 ON json_type(CHAR(-1547644705)));
SELECT * FROM v0 INNER JOIN vt0 ON ((vt0.c0)>=(NULL)) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((vt0.c0)>=(NULL)));
SELECT * FROM v0 INNER JOIN vt0 ON ((vt0.c0)>=(NULL)) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((vt0.c0)>=(NULL)));
SELECT * FROM v0 INNER JOIN vt0 ON ((vt0.c0)>=(NULL)) WHERE (vt0.c1);
SELECT * FROM t1, v0, vt0, vt1 WHERE ((((vt0.c1)=(vt1.c2)) IN ())) ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, LOWER(CAST(vt0.c1 AS REAL))  NULLS FIRST, (((x''))<=((CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)=(vt1.c2)) IN ())) IS TRUE)  as count FROM t1, v0, vt0 NOT INDEXED, vt1 ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, LOWER(CAST(vt0.c1 AS REAL))  NULLS FIRST, (((x''))<=((CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 END)))  NULLS FIRST);
SELECT * FROM t1, v0, vt0, vt1 WHERE ((((vt0.c1)=(vt1.c2)) IN ())) ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, LOWER(CAST(vt0.c1 AS REAL))  NULLS FIRST, (((x''))<=((CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)=(vt1.c2)) IN ())) IS TRUE)  as count FROM t1, v0, vt0 NOT INDEXED, vt1 ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, LOWER(CAST(vt0.c1 AS REAL))  NULLS FIRST, (((x''))<=((CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 END)))  NULLS FIRST);
SELECT * FROM t1, v0, vt0, vt1 WHERE ((((vt0.c1)=(vt1.c2)) IN ())) ORDER BY CAST(v0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST, LOWER(CAST(vt0.c1 AS REAL))  NULLS FIRST, (((x''))<=((CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 END)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((0.5582410497827867)IS('561096487')));
SELECT SUM(count) FROM (SELECT ((((0.5582410497827867)IS('561096487'))) IS TRUE)  as count FROM vt0, vt1, t1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((0.5582410497827867)IS('561096487')));
SELECT SUM(count) FROM (SELECT ((((0.5582410497827867)IS('561096487'))) IS TRUE)  as count FROM vt0, vt1, t1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((0.5582410497827867)IS('561096487')));
SELECT * FROM vt1, vt0, v0 WHERE (((NULLIF(vt1.c1, vt1.c1)) NOT BETWEEN (((vt1.c1)AND(v0.c0))) AND ((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c1, vt1.c1)) NOT BETWEEN (((vt1.c1)AND(v0.c0))) AND ((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((NULLIF(vt1.c1, vt1.c1)) NOT BETWEEN (((vt1.c1)AND(v0.c0))) AND ((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c1, vt1.c1)) NOT BETWEEN (((vt1.c1)AND(v0.c0))) AND ((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((NULLIF(vt1.c1, vt1.c1)) NOT BETWEEN (((vt1.c1)AND(v0.c0))) AND ((vt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((('124403762') IS FALSE) AS TEXT)) ORDER BY ((CAST(vt1.c1 AS INTEGER))==(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('124403762') IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS INTEGER))=(NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((('124403762') IS FALSE) AS TEXT)) ORDER BY ((CAST(vt1.c1 AS INTEGER))==(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('124403762') IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS INTEGER))=(NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((('124403762') IS FALSE) AS TEXT)) ORDER BY ((CAST(vt1.c1 AS INTEGER))==(NULL))  NULLS FIRST;
SELECT * FROM vt1, t1 WHERE (CAST(((vt1.c1)&(vt1.c2)) AS NUMERIC)) ORDER BY ((((t1.c0)OR(x'')))AND(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)&(vt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((t1.c0)OR(x'')))AND(NULL)) DESC  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (CAST(((vt1.c1)&(vt1.c2)) AS NUMERIC)) ORDER BY ((((t1.c0)OR(x'')))AND(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)&(vt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((t1.c0)OR(x'')))AND(NULL)) DESC  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (CAST(((vt1.c1)&(vt1.c2)) AS NUMERIC)) ORDER BY ((((t1.c0)OR(x'')))AND(NULL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN t1 ON CASE WHEN v0.c0 THEN ((((((((((((t1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c2)))OR(t1.c0)))OR(t1.c0)))OR(v0.c0)) WHEN 0.3852280176431988 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) WHEN (((vt1.c0, vt1.c1, 'F|FD', vt0.c0, vt0.c1))>((vt1.c1, vt1.c2, vt0.c0, vt1.c0, vt0.c1))) THEN vt1.c2 COLLATE BINARY END CROSS JOIN vt0 ON ((((0.41894852011412353, vt1.c1, vt0.c0)) BETWEEN ((0.7184581184124325, vt1.c1, vt1.c2)) AND ((vt1.c1, vt1.c0, vt0.c0))) IN (((vt1.c1) BETWEEN (vt0.c0) AND (v0.c0)), vt1.c1 COLLATE BINARY)) WHERE ('1107806450') ORDER BY ((((((vt1.c2))!=((vt1.c0)))))==(('-1009990250'))), x'9743795c' DESC, CASE ((vt0.c1)AND(vt1.c2))  WHEN ((((vt0.c1)AND(v0.c0)))OR(vt1.c0)) THEN (((v0.c0, 0.5467424300128366, v0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((v0.c0, vt1.c2, t1.c0))) WHEN LIKELY(DISTINCT vt1.c2) THEN (vt1.c1 IN (vt1.c2, vt1.c1, vt1.c2)) WHEN CAST(vt1.c0 AS TEXT) THEN LOWER(t1.c0) ELSE ((((vt0.c0)OR(vt1.c1)))OR(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1107806450') IS TRUE)  as count FROM v0, vt1 INNER JOIN t1 ON CASE WHEN v0.c0 THEN ((((((((((((t1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c2)))OR(t1.c0)))OR(t1.c0)))OR(v0.c0)) WHEN 0.3852280176431988 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) WHEN (((vt1.c0, vt1.c1, 'F|FD', vt0.c0, vt0.c1))>((vt1.c1, vt1.c2, vt0.c0, vt1.c0, vt0.c1))) THEN vt1.c2 COLLATE BINARY END CROSS JOIN vt0 ON ((((0.41894852011412353, vt1.c1, vt0.c0)) BETWEEN ((0.7184581184124325, vt1.c1, vt1.c2)) AND ((vt1.c1, vt1.c0, vt0.c0))) IN (((vt1.c1) BETWEEN (vt0.c0) AND (v0.c0)), vt1.c1 COLLATE BINARY)) ORDER BY ((((((vt1.c2))<>((vt1.c0)))))=(('-1009990250'))), x'9743795c' DESC, CASE ((vt0.c1)AND(vt1.c2))  WHEN ((((vt0.c1)AND(v0.c0)))OR(vt1.c0)) THEN (((v0.c0, 0.5467424300128366, v0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((v0.c0, vt1.c2, t1.c0))) WHEN LIKELY(DISTINCT vt1.c2) THEN (vt1.c1 IN (vt1.c2, vt1.c1, vt1.c2)) WHEN CAST(vt1.c0 AS TEXT) THEN LOWER(t1.c0) ELSE ((((vt0.c0)OR(vt1.c1)))OR(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN t1 ON CASE WHEN v0.c0 THEN ((((((((((((t1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c2)))OR(t1.c0)))OR(t1.c0)))OR(v0.c0)) WHEN 0.3852280176431988 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) WHEN (((vt1.c0, vt1.c1, 'F|FD', vt0.c0, vt0.c1))>((vt1.c1, vt1.c2, vt0.c0, vt1.c0, vt0.c1))) THEN vt1.c2 COLLATE BINARY END CROSS JOIN vt0 ON ((((0.41894852011412353, vt1.c1, vt0.c0)) BETWEEN ((0.7184581184124325, vt1.c1, vt1.c2)) AND ((vt1.c1, vt1.c0, vt0.c0))) IN (((vt1.c1) BETWEEN (vt0.c0) AND (v0.c0)), vt1.c1 COLLATE BINARY)) WHERE ('1107806450') ORDER BY ((((((vt1.c2))!=((vt1.c0)))))==(('-1009990250'))), x'9743795c' DESC, CASE ((vt0.c1)AND(vt1.c2))  WHEN ((((vt0.c1)AND(v0.c0)))OR(vt1.c0)) THEN (((v0.c0, 0.5467424300128366, v0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((v0.c0, vt1.c2, t1.c0))) WHEN LIKELY(DISTINCT vt1.c2) THEN (vt1.c1 IN (vt1.c2, vt1.c1, vt1.c2)) WHEN CAST(vt1.c0 AS TEXT) THEN LOWER(t1.c0) ELSE ((((vt0.c0)OR(vt1.c1)))OR(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1107806450') IS TRUE)  as count FROM v0, vt1 INNER JOIN t1 ON CASE WHEN v0.c0 THEN ((((((((((((t1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c2)))OR(t1.c0)))OR(t1.c0)))OR(v0.c0)) WHEN 0.3852280176431988 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) WHEN (((vt1.c0, vt1.c1, 'F|FD', vt0.c0, vt0.c1))>((vt1.c1, vt1.c2, vt0.c0, vt1.c0, vt0.c1))) THEN vt1.c2 COLLATE BINARY END CROSS JOIN vt0 ON ((((0.41894852011412353, vt1.c1, vt0.c0)) BETWEEN ((0.7184581184124325, vt1.c1, vt1.c2)) AND ((vt1.c1, vt1.c0, vt0.c0))) IN (((vt1.c1) BETWEEN (vt0.c0) AND (v0.c0)), vt1.c1 COLLATE BINARY)) ORDER BY ((((((vt1.c2))<>((vt1.c0)))))=(('-1009990250'))), x'9743795c' DESC, CASE ((vt0.c1)AND(vt1.c2))  WHEN ((((vt0.c1)AND(v0.c0)))OR(vt1.c0)) THEN (((v0.c0, 0.5467424300128366, v0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((v0.c0, vt1.c2, t1.c0))) WHEN LIKELY(DISTINCT vt1.c2) THEN (vt1.c1 IN (vt1.c2, vt1.c1, vt1.c2)) WHEN CAST(vt1.c0 AS TEXT) THEN LOWER(t1.c0) ELSE ((((vt0.c0)OR(vt1.c1)))OR(v0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN t1 ON CASE WHEN v0.c0 THEN ((((((((((((t1.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt1.c2)))OR(t1.c0)))OR(t1.c0)))OR(v0.c0)) WHEN 0.3852280176431988 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) WHEN (((vt1.c0, vt1.c1, 'F|FD', vt0.c0, vt0.c1))>((vt1.c1, vt1.c2, vt0.c0, vt1.c0, vt0.c1))) THEN vt1.c2 COLLATE BINARY END CROSS JOIN vt0 ON ((((0.41894852011412353, vt1.c1, vt0.c0)) BETWEEN ((0.7184581184124325, vt1.c1, vt1.c2)) AND ((vt1.c1, vt1.c0, vt0.c0))) IN (((vt1.c1) BETWEEN (vt0.c0) AND (v0.c0)), vt1.c1 COLLATE BINARY)) WHERE ('1107806450') ORDER BY ((((((vt1.c2))!=((vt1.c0)))))==(('-1009990250'))), x'9743795c' DESC, CASE ((vt0.c1)AND(vt1.c2))  WHEN ((((vt0.c1)AND(v0.c0)))OR(vt1.c0)) THEN (((v0.c0, 0.5467424300128366, v0.c0)) NOT BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((v0.c0, vt1.c2, t1.c0))) WHEN LIKELY(DISTINCT vt1.c2) THEN (vt1.c1 IN (vt1.c2, vt1.c1, vt1.c2)) WHEN CAST(vt1.c0 AS TEXT) THEN LOWER(t1.c0) ELSE ((((vt0.c0)OR(vt1.c1)))OR(v0.c0)) END  NULLS LAST;
SELECT * FROM v0 INNER JOIN vt1 ON QUOTE(v0.c0) RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c1))) NOT BETWEEN (v0.c0) AND (0X193d26f6)) WHERE (CASE x''  WHEN PRINTF(vt1.c0) THEN CASE WHEN vt0.c0 THEN vt1.c2 ELSE v0.c0 END END) ORDER BY CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN PRINTF(vt1.c0) THEN CASE WHEN vt0.c0 THEN vt1.c2 ELSE v0.c0 END END) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON QUOTE(v0.c0) RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c1))) NOT BETWEEN (v0.c0) AND (0X193d26f6)) ORDER BY CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE);
SELECT * FROM v0 INNER JOIN vt1 ON QUOTE(v0.c0) RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c1))) NOT BETWEEN (v0.c0) AND (0X193d26f6)) WHERE (CASE x''  WHEN PRINTF(vt1.c0) THEN CASE WHEN vt0.c0 THEN vt1.c2 ELSE v0.c0 END END) ORDER BY CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN PRINTF(vt1.c0) THEN CASE WHEN vt0.c0 THEN vt1.c2 ELSE v0.c0 END END) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON QUOTE(v0.c0) RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c1))) NOT BETWEEN (v0.c0) AND (0X193d26f6)) ORDER BY CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE);
SELECT * FROM v0 INNER JOIN vt1 ON QUOTE(v0.c0) RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c1))) NOT BETWEEN (v0.c0) AND (0X193d26f6)) WHERE (CASE x''  WHEN PRINTF(vt1.c0) THEN CASE WHEN vt0.c0 THEN vt1.c2 ELSE v0.c0 END END) ORDER BY CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE;
SELECT ALL * FROM vt1, t1 WHERE ((- (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE ((- (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE ((- (vt1.c1 COLLATE BINARY)));
SELECT * FROM vt1, t1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (vt1.c1);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt1.c0) NOTNULL)) AND (LTRIM(vt1.c2, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt1.c0) NOTNULL)) AND (LTRIM(vt1.c2, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt1.c0) NOTNULL)) AND (LTRIM(vt1.c2, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt1.c0) NOTNULL)) AND (LTRIM(vt1.c2, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt1.c0) NOTNULL)) AND (LTRIM(vt1.c2, vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c2))<(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt1.c0, vt1.c2))<(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c2))<(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt1.c0, vt1.c2))<(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT vt1.c0, vt1.c2))<(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY x'' DESC;
SELECT ALL * FROM vt1 WHERE (((LIKELIHOOD(x'', 0.6804110823623256)) IS TRUE)) ORDER BY vt1.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(x'', 0.6804110823623256)) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE (((LIKELIHOOD(x'', 0.6804110823623256)) IS TRUE)) ORDER BY vt1.c0 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(x'', 0.6804110823623256)) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE (((LIKELIHOOD(x'', 0.6804110823623256)) IS TRUE)) ORDER BY vt1.c0 COLLATE RTRIM ASC;
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)AND(v0.c0)))AND(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(x'8b6ba883')))AND(v0.c0))) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(x'8b6ba883')))AND(v0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)AND(v0.c0)))AND(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(x'8b6ba883')))AND(v0.c0))) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(x'8b6ba883')))AND(v0.c0))) AND (vt0.c1))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)AND(v0.c0)))AND(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(x'8b6ba883')))AND(v0.c0))) AND (vt0.c1)));
SELECT * FROM vt0, vt1, t1, v0 WHERE (LIKELIHOOD(DISTINCT ((((((((v0.c0)AND(t1.c0)))OR(v0.c0)))OR(t1.c0)))AND(x'')), 0.4556574821262872)) ORDER BY ((x'')IS NOT(((0.5655828383977742)>(vt0.c0)))) DESC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)AND((vt1.c1 IN ()))))AND(((vt1.c1)*(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((((((v0.c0)AND(t1.c0)))OR(v0.c0)))OR(t1.c0)))AND(x'')), 0.4556574821262872)) IS TRUE)  as count FROM vt0, vt1, t1, v0 ORDER BY ((x'')IS NOT(((0.5655828383977742)>(vt0.c0)))) DESC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)AND((vt1.c1 IN ()))))AND(((vt1.c1)*(vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t1, v0 WHERE (LIKELIHOOD(DISTINCT ((((((((v0.c0)AND(t1.c0)))OR(v0.c0)))OR(t1.c0)))AND(x'')), 0.4556574821262872)) ORDER BY ((x'')IS NOT(((0.5655828383977742)>(vt0.c0)))) DESC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)AND((vt1.c1 IN ()))))AND(((vt1.c1)*(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((((((((v0.c0)AND(t1.c0)))OR(v0.c0)))OR(t1.c0)))AND(x'')), 0.4556574821262872)) IS TRUE)  as count FROM vt0, vt1, t1, v0 ORDER BY ((x'')IS NOT(((0.5655828383977742)>(vt0.c0)))) DESC  NULLS FIRST, ((((CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)AND((vt1.c1 IN ()))))AND(((vt1.c1)*(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, vt1, vt0 WHERE (((CAST(vt1.c1 AS REAL)) IS FALSE)) ORDER BY ((((vt0.c0) NOTNULL))OR(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM t1, v0, vt1, vt0 ORDER BY ((((vt0.c0) NOTNULL))OR(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, vt1, vt0 WHERE (((CAST(vt1.c1 AS REAL)) IS FALSE)) ORDER BY ((((vt0.c0) NOTNULL))OR(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM t1, v0, vt1, vt0 ORDER BY ((((vt0.c0) NOTNULL))OR(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, vt1, vt0 WHERE (((CAST(vt1.c1 AS REAL)) IS FALSE)) ORDER BY ((((vt0.c0) NOTNULL))OR(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, t1 WHERE ((((t1.c0 IN (t1.c0, t1.c0)))%(((((t1.c0)OR(t1.c0)))AND(v0.c0))))) ORDER BY (((v0.c0) ISNULL) IN ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) ASC  NULLS LAST, (((t1.c0 IN ()))|(((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN (t1.c0, t1.c0)))%(((((t1.c0)OR(t1.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, t1 ORDER BY (((v0.c0) ISNULL) IN ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) ASC  NULLS LAST, (((t1.c0 IN ()))|(((t1.c0) NOTNULL))));
SELECT ALL * FROM v0, t1 WHERE ((((t1.c0 IN (t1.c0, t1.c0)))%(((((t1.c0)OR(t1.c0)))AND(v0.c0))))) ORDER BY (((v0.c0) ISNULL) IN ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) ASC  NULLS LAST, (((t1.c0 IN ()))|(((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN (t1.c0, t1.c0)))%(((((t1.c0)OR(t1.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, t1 ORDER BY (((v0.c0) ISNULL) IN ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) ASC  NULLS LAST, (((t1.c0 IN ()))|(((t1.c0) NOTNULL))));
SELECT ALL * FROM v0, t1 WHERE ((((t1.c0 IN (t1.c0, t1.c0)))%(((((t1.c0)OR(t1.c0)))AND(v0.c0))))) ORDER BY (((v0.c0) ISNULL) IN ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) ASC  NULLS LAST, (((t1.c0 IN ()))|(((t1.c0) NOTNULL)));
SELECT * FROM vt1, v0, vt0, t1 WHERE (TRIM(((((vt1.c0)AND(vt1.c2)))AND(0x7e1ffbe8)), ABS(v0.c0))) ORDER BY ((highlight(vt1.c2, vt0.c1, vt0.c1, vt1.c2))AND(((((((((((((t1.c0)OR(vt1.c0)))OR(vt0.c0)))OR('蠝-')))AND(v0.c0)))OR(t1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((vt1.c0)AND(vt1.c2)))AND(0x7e1ffbe8)), ABS(v0.c0))) IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY ((highlight(vt1.c2, vt0.c1, vt0.c1, vt1.c2))AND(((((((((((((t1.c0)OR(vt1.c0)))OR(vt0.c0)))OR('蠝-')))AND(v0.c0)))OR(t1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, v0, vt0, t1 WHERE (TRIM(((((vt1.c0)AND(vt1.c2)))AND(0x7e1ffbe8)), ABS(v0.c0))) ORDER BY ((highlight(vt1.c2, vt0.c1, vt0.c1, vt1.c2))AND(((((((((((((t1.c0)OR(vt1.c0)))OR(vt0.c0)))OR('蠝-')))AND(v0.c0)))OR(t1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((vt1.c0)AND(vt1.c2)))AND(0x7e1ffbe8)), ABS(v0.c0))) IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY ((highlight(vt1.c2, vt0.c1, vt0.c1, vt1.c2))AND(((((((((((((t1.c0)OR(vt1.c0)))OR(vt0.c0)))OR('蠝-')))AND(v0.c0)))OR(t1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1, v0, vt0, t1 WHERE (TRIM(((((vt1.c0)AND(vt1.c2)))AND(0x7e1ffbe8)), ABS(v0.c0))) ORDER BY ((highlight(vt1.c2, vt0.c1, vt0.c1, vt1.c2))AND(((((((((((((t1.c0)OR(vt1.c0)))OR(vt0.c0)))OR('蠝-')))AND(v0.c0)))OR(t1.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, v0, vt0, vt1 WHERE ((((t1.c0)<>(v0.c0)) IN ())) ORDER BY CAST(v0.c0 AS REAL);
SELECT SUM(count) FROM (SELECT (((((t1.c0)!=(v0.c0)) IN ())) IS TRUE)  as count FROM t1, v0, vt0, vt1 ORDER BY CAST(v0.c0 AS REAL));
SELECT COUNT(*) FROM t1, v0, vt0, vt1 WHERE ((((t1.c0)<>(v0.c0)) IN ())) ORDER BY CAST(v0.c0 AS REAL);
SELECT SUM(count) FROM (SELECT (((((t1.c0)!=(v0.c0)) IN ())) IS TRUE)  as count FROM t1, v0, vt0, vt1 ORDER BY CAST(v0.c0 AS REAL));
SELECT COUNT(*) FROM t1, v0, vt0, vt1 WHERE ((((t1.c0)<>(v0.c0)) IN ())) ORDER BY CAST(v0.c0 AS REAL);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, v0 WHERE (LIKELY(CASE WHEN v0.c0 THEN t1.c0 END)) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN x'7da9' THEN vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(CASE WHEN v0.c0 THEN t1.c0 END)) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN x'7da9' THEN vt0.c0 END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, v0 WHERE (LIKELY(CASE WHEN v0.c0 THEN t1.c0 END)) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN x'7da9' THEN vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(CASE WHEN v0.c0 THEN t1.c0 END)) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN x'7da9' THEN vt0.c0 END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, v0 WHERE (LIKELY(CASE WHEN v0.c0 THEN t1.c0 END)) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN x'7da9' THEN vt0.c0 END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE 515751093 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE 515751093 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE 515751093 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE 515751093 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE WHEN vt0.c1 THEN vt0.c0 ELSE 515751093 END)));
SELECT COUNT(*) FROM v0, t1, vt1 WHERE (((((vt1.c0)|(vt1.c1))) ISNULL)) ORDER BY ((CASE WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c2 ELSE t1.c0 END) AND (json_patch(vt1.c1, vt1.c0))) DESC, IFNULL(DISTINCT v0.c0 COLLATE RTRIM, ((vt1.c2)||(vt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt1.c1))) ISNULL)) IS TRUE)  as count FROM v0, t1, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c2 ELSE t1.c0 END) AND (json_patch(vt1.c1, vt1.c0))) DESC, IFNULL(DISTINCT v0.c0 COLLATE RTRIM, ((vt1.c2)||(vt1.c2)))  NULLS LAST);
SELECT COUNT(*) FROM v0, t1, vt1 WHERE (((((vt1.c0)|(vt1.c1))) ISNULL)) ORDER BY ((CASE WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c2 ELSE t1.c0 END) AND (json_patch(vt1.c1, vt1.c0))) DESC, IFNULL(DISTINCT v0.c0 COLLATE RTRIM, ((vt1.c2)||(vt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt1.c1))) ISNULL)) IS TRUE)  as count FROM v0, t1, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c2 ELSE t1.c0 END) AND (json_patch(vt1.c1, vt1.c0))) DESC, IFNULL(DISTINCT v0.c0 COLLATE RTRIM, ((vt1.c2)||(vt1.c2)))  NULLS LAST);
SELECT COUNT(*) FROM v0, t1, vt1 WHERE (((((vt1.c0)|(vt1.c1))) ISNULL)) ORDER BY ((CASE WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c2 ELSE t1.c0 END) AND (json_patch(vt1.c1, vt1.c0))) DESC, IFNULL(DISTINCT v0.c0 COLLATE RTRIM, ((vt1.c2)||(vt1.c2)))  NULLS LAST;
SELECT * FROM v0, t1 WHERE (PRINTF(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY CAST((((v0.c0))>((v0.c0))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM v0, t1 ORDER BY CAST((((v0.c0))>((v0.c0))) AS TEXT) ASC  NULLS LAST);
SELECT * FROM v0, t1 WHERE (PRINTF(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY CAST((((v0.c0))>((v0.c0))) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM v0, t1 ORDER BY CAST((((v0.c0))>((v0.c0))) AS TEXT) ASC  NULLS LAST);
SELECT * FROM v0, t1 WHERE (PRINTF(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY CAST((((v0.c0))>((v0.c0))) AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)&(vt0.c0))) IS FALSE) WHERE ((- (x''))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOTNULL), ((((((v0.c0) ISNULL))AND(((vt1.c1)<<(t1.c0)))))OR(NULL));
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt1, vt0, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)&(vt0.c0))) IS FALSE) ORDER BY ((vt0.c1 COLLATE RTRIM) NOTNULL), ((((((v0.c0) ISNULL))AND(((vt1.c1)<<(t1.c0)))))OR(NULL)));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)&(vt0.c0))) IS FALSE) WHERE ((- (x''))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOTNULL), ((((((v0.c0) ISNULL))AND(((vt1.c1)<<(t1.c0)))))OR(NULL));
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM vt1, vt0, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)&(vt0.c0))) IS FALSE) ORDER BY ((vt0.c1 COLLATE RTRIM) NOTNULL), ((((((v0.c0) ISNULL))AND(((vt1.c1)<<(t1.c0)))))OR(NULL)));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)&(vt0.c0))) IS FALSE) WHERE ((- (x''))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOTNULL), ((((((v0.c0) ISNULL))AND(((vt1.c1)<<(t1.c0)))))OR(NULL));
SELECT ALL * FROM v0, vt0 NATURAL JOIN vt1 WHERE (((((vt0.c1, v0.c0, vt1.c0))<>((v0.c0, vt0.c0, x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, v0.c0, vt1.c0))!=((v0.c0, vt0.c0, x''))) IN ())) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM v0, vt0 NATURAL JOIN vt1 WHERE (((((vt0.c1, v0.c0, vt1.c0))<>((v0.c0, vt0.c0, x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, v0.c0, vt1.c0))!=((v0.c0, vt0.c0, x''))) IN ())) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM v0, vt0 NATURAL JOIN vt1 WHERE (((((vt0.c1, v0.c0, vt1.c0))<>((v0.c0, vt0.c0, x''))) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(PRINTF(NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(PRINTF(NULL) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(PRINTF(NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(PRINTF(NULL) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(PRINTF(NULL) AS TEXT));
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE ((~ (((t1.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t1.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt1, v0, t1, vt0);
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE ((~ (((t1.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t1.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt1, v0, t1, vt0);
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE ((~ (((t1.c0)&(vt0.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN (t1.c0) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN (t1.c0) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) NOT BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) NOT BETWEEN (t1.c0) AND (t1.c0)));
SELECT ALL * FROM v0, t1 RIGHT OUTER JOIN vt0 ON v0.c0 CROSS JOIN vt1 ON ((((((((LAST_INSERT_ROWID())OR(NULL)))OR('1107806450')))AND((+ (vt0.c1)))))AND(((t1.c0)>>(vt1.c1)))) WHERE (RTRIM((NOT (x'')))) ORDER BY ((((((((((vt1.c0)>(t1.c0)))OR(((vt1.c0)<<(vt1.c1)))))OR(((((vt0.c1)OR(vt1.c1)))AND(v0.c0)))))AND(0X6d5b8909)))OR(((vt1.c0)=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((NOT (x'')))) IS TRUE)  as count FROM v0, t1 RIGHT OUTER JOIN vt0 ON v0.c0 CROSS JOIN vt1 ON ((((((((LAST_INSERT_ROWID())OR(NULL)))OR('1107806450')))AND((+ (vt0.c1)))))AND(((t1.c0)>>(vt1.c1)))) ORDER BY ((((((((((vt1.c0)>(t1.c0)))OR(((vt1.c0)<<(vt1.c1)))))OR(((((vt0.c1)OR(vt1.c1)))AND(v0.c0)))))AND(0X6d5b8909)))OR(((vt1.c0)==(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, t1 RIGHT OUTER JOIN vt0 ON v0.c0 CROSS JOIN vt1 ON ((((((((LAST_INSERT_ROWID())OR(NULL)))OR('1107806450')))AND((+ (vt0.c1)))))AND(((t1.c0)>>(vt1.c1)))) WHERE (RTRIM((NOT (x'')))) ORDER BY ((((((((((vt1.c0)>(t1.c0)))OR(((vt1.c0)<<(vt1.c1)))))OR(((((vt0.c1)OR(vt1.c1)))AND(v0.c0)))))AND(0X6d5b8909)))OR(((vt1.c0)=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((NOT (x'')))) IS TRUE)  as count FROM v0, t1 RIGHT OUTER JOIN vt0 ON v0.c0 CROSS JOIN vt1 ON ((((((((LAST_INSERT_ROWID())OR(NULL)))OR('1107806450')))AND((+ (vt0.c1)))))AND(((t1.c0)>>(vt1.c1)))) ORDER BY ((((((((((vt1.c0)>(t1.c0)))OR(((vt1.c0)<<(vt1.c1)))))OR(((((vt0.c1)OR(vt1.c1)))AND(v0.c0)))))AND(0X6d5b8909)))OR(((vt1.c0)==(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, t1 RIGHT OUTER JOIN vt0 ON v0.c0 CROSS JOIN vt1 ON ((((((((LAST_INSERT_ROWID())OR(NULL)))OR('1107806450')))AND((+ (vt0.c1)))))AND(((t1.c0)>>(vt1.c1)))) WHERE (RTRIM((NOT (x'')))) ORDER BY ((((((((((vt1.c0)>(t1.c0)))OR(((vt1.c0)<<(vt1.c1)))))OR(((((vt0.c1)OR(vt1.c1)))AND(v0.c0)))))AND(0X6d5b8909)))OR(((vt1.c0)=(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1, v0, t1 WHERE (0.4391082521681625) ORDER BY ((vt0.c0)=(t1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.4391082521681625) IS TRUE)  as count FROM vt0, vt1, v0, t1 ORDER BY ((vt0.c0)=(t1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0, vt1, v0, t1 WHERE (0.4391082521681625) ORDER BY ((vt0.c0)=(t1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.4391082521681625) IS TRUE)  as count FROM vt0, vt1, v0, t1 ORDER BY ((vt0.c0)=(t1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt0, vt1, v0, t1 WHERE (0.4391082521681625) ORDER BY ((vt0.c0)=(t1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((((((((vt1.c0))<((vt0.c1))))AND(((((vt1.c1)OR(vt0.c1)))AND(vt0.c0)))))AND((((vt1.c1, vt1.c2, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c1))))))AND(((vt1.c2)||(vt1.c0)))))OR(x'7146'));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((vt1.c0))<((vt0.c1))))AND(((((vt1.c1)OR(vt0.c1)))AND(vt0.c0)))))AND((((vt1.c1, vt1.c2, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c1))))))AND(((vt1.c2)||(vt1.c0)))))OR(x'7146')));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((((((((vt1.c0))<((vt0.c1))))AND(((((vt1.c1)OR(vt0.c1)))AND(vt0.c0)))))AND((((vt1.c1, vt1.c2, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c1))))))AND(((vt1.c2)||(vt1.c0)))))OR(x'7146'));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((vt1.c0))<((vt0.c1))))AND(((((vt1.c1)OR(vt0.c1)))AND(vt0.c0)))))AND((((vt1.c1, vt1.c2, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c1))))))AND(((vt1.c2)||(vt1.c0)))))OR(x'7146')));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((((((((vt1.c0))<((vt0.c1))))AND(((((vt1.c1)OR(vt0.c1)))AND(vt0.c0)))))AND((((vt1.c1, vt1.c2, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c1, vt1.c1))))))AND(((vt1.c2)||(vt1.c0)))))OR(x'7146'));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS INTEGER)) ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST, v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS INTEGER)) ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST, v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS INTEGER)) ORDER BY (((v0.c0) NOTNULL) IN ())  NULLS FIRST, v0.c0 ASC;
SELECT * FROM vt0, v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))!=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))!=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))!=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))!=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))!=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN v0 ON ((((CASE vt0.c1  WHEN vt1.c2 THEN vt0.c1 END)AND((vt1.c0 IN (v0.c0)))))OR(CASE WHEN vt1.c1 THEN v0.c0 END)) FULL OUTER JOIN vt0 ON ((t1.c0)-(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((((v0.c0) NOTNULL)) NOTNULL) WHERE (((((((vt1.c1)>>(v0.c0)))OR(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((vt1.c1) NOT BETWEEN (json_object(v0.c0, v0.c0, vt0.c0, v0.c0, t1.c0, vt1.c0)) AND (((t1.c0)|(v0.c0)))) ASC, ((((vt1.c1) NOT BETWEEN (vt1.c2) AND ('V[')))IS(((((vt0.c1)OR(t1.c0)))OR(v0.c0)))) DESC, (((((vt0.c1 IN ()))OR(NULL)))OR(CAST(NULL AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)>>(v0.c0)))OR(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((((CASE vt0.c1  WHEN vt1.c2 THEN vt0.c1 END)AND((vt1.c0 IN (v0.c0)))))OR(CASE WHEN vt1.c1 THEN v0.c0 END)) FULL OUTER JOIN vt0 ON ((t1.c0)-(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((((v0.c0) NOTNULL)) NOTNULL) ORDER BY ((vt1.c1) NOT BETWEEN (json_object(v0.c0, v0.c0, vt0.c0, v0.c0, t1.c0, vt1.c0)) AND (((t1.c0)|(v0.c0)))) ASC, ((((vt1.c1) NOT BETWEEN (vt1.c2) AND ('V[')))IS(((((vt0.c1)OR(t1.c0)))OR(v0.c0)))) DESC, (((((vt0.c1 IN ()))OR(NULL)))OR(CAST(NULL AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN v0 ON ((((CASE vt0.c1  WHEN vt1.c2 THEN vt0.c1 END)AND((vt1.c0 IN (v0.c0)))))OR(CASE WHEN vt1.c1 THEN v0.c0 END)) FULL OUTER JOIN vt0 ON ((t1.c0)-(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((((v0.c0) NOTNULL)) NOTNULL) WHERE (((((((vt1.c1)>>(v0.c0)))OR(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((vt1.c1) NOT BETWEEN (json_object(v0.c0, v0.c0, vt0.c0, v0.c0, t1.c0, vt1.c0)) AND (((t1.c0)|(v0.c0)))) ASC, ((((vt1.c1) NOT BETWEEN (vt1.c2) AND ('V[')))IS(((((vt0.c1)OR(t1.c0)))OR(v0.c0)))) DESC, (((((vt0.c1 IN ()))OR(NULL)))OR(CAST(NULL AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)>>(v0.c0)))OR(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON ((((CASE vt0.c1  WHEN vt1.c2 THEN vt0.c1 END)AND((vt1.c0 IN (v0.c0)))))OR(CASE WHEN vt1.c1 THEN v0.c0 END)) FULL OUTER JOIN vt0 ON ((t1.c0)-(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((((v0.c0) NOTNULL)) NOTNULL) ORDER BY ((vt1.c1) NOT BETWEEN (json_object(v0.c0, v0.c0, vt0.c0, v0.c0, t1.c0, vt1.c0)) AND (((t1.c0)|(v0.c0)))) ASC, ((((vt1.c1) NOT BETWEEN (vt1.c2) AND ('V[')))IS(((((vt0.c1)OR(t1.c0)))OR(v0.c0)))) DESC, (((((vt0.c1 IN ()))OR(NULL)))OR(CAST(NULL AS REAL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)-(0.7070700995149376)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)-(0.7070700995149376))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)-(0.7070700995149376)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)-(0.7070700995149376))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c0)-(0.7070700995149376)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT ((~ (vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT ((~ (vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT ((~ (vt1.c2)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON CASE (~ (v0.c0))  WHEN ((((((((vt1.c1)OR(v0.c0)))AND(vt1.c1)))AND(1530292222)))OR('')) THEN ((NULL) BETWEEN (t1.c0) AND (vt1.c2)) END INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (0x3033939)) IN ()) CROSS JOIN v0 ON vt0.c1 WHERE (CASE WHEN ((vt1.c1)|(v0.c0)) THEN CAST(t1.c0 AS BLOB) WHEN ((5.15751093E8) NOT BETWEEN (vt1.c2) AND ('Yl')) THEN CASE WHEN v0.c0 THEN NULL END WHEN ((t1.c0) IS TRUE) THEN vt1.c0 COLLATE NOCASE ELSE (+ (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)|(v0.c0)) THEN CAST(t1.c0 AS BLOB) WHEN ((5.15751093E8) NOT BETWEEN (vt1.c2) AND ('Yl')) THEN CASE WHEN v0.c0 THEN NULL END WHEN ((t1.c0) IS TRUE) THEN vt1.c0 COLLATE NOCASE ELSE (+ (vt1.c1)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON CASE (~ (v0.c0))  WHEN ((((((((vt1.c1)OR(v0.c0)))AND(vt1.c1)))AND(1530292222)))OR('')) THEN ((NULL) BETWEEN (t1.c0) AND (vt1.c2)) END INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (0x3033939)) IN ()) CROSS JOIN v0 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON CASE (~ (v0.c0))  WHEN ((((((((vt1.c1)OR(v0.c0)))AND(vt1.c1)))AND(1530292222)))OR('')) THEN ((NULL) BETWEEN (t1.c0) AND (vt1.c2)) END INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (0x3033939)) IN ()) CROSS JOIN v0 ON vt0.c1 WHERE (CASE WHEN ((vt1.c1)|(v0.c0)) THEN CAST(t1.c0 AS BLOB) WHEN ((5.15751093E8) NOT BETWEEN (vt1.c2) AND ('Yl')) THEN CASE WHEN v0.c0 THEN NULL END WHEN ((t1.c0) IS TRUE) THEN vt1.c0 COLLATE NOCASE ELSE (+ (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)|(v0.c0)) THEN CAST(t1.c0 AS BLOB) WHEN ((5.15751093E8) NOT BETWEEN (vt1.c2) AND ('Yl')) THEN CASE WHEN v0.c0 THEN NULL END WHEN ((t1.c0) IS TRUE) THEN vt1.c0 COLLATE NOCASE ELSE (+ (vt1.c1)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON CASE (~ (v0.c0))  WHEN ((((((((vt1.c1)OR(v0.c0)))AND(vt1.c1)))AND(1530292222)))OR('')) THEN ((NULL) BETWEEN (t1.c0) AND (vt1.c2)) END INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (0x3033939)) IN ()) CROSS JOIN v0 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON CASE (~ (v0.c0))  WHEN ((((((((vt1.c1)OR(v0.c0)))AND(vt1.c1)))AND(1530292222)))OR('')) THEN ((NULL) BETWEEN (t1.c0) AND (vt1.c2)) END INNER JOIN vt0 ON (((vt0.c0) BETWEEN (v0.c0) AND (0x3033939)) IN ()) CROSS JOIN v0 ON vt0.c1 WHERE (CASE WHEN ((vt1.c1)|(v0.c0)) THEN CAST(t1.c0 AS BLOB) WHEN ((5.15751093E8) NOT BETWEEN (vt1.c2) AND ('Yl')) THEN CASE WHEN v0.c0 THEN NULL END WHEN ((t1.c0) IS TRUE) THEN vt1.c0 COLLATE NOCASE ELSE (+ (vt1.c1)) END);
SELECT * FROM vt1, t1, v0 WHERE (((0.9589628270083669)%(((t1.c0)IS(v0.c0))))) ORDER BY ((vt1.c1)<=(((v0.c0)/(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.9589628270083669)%(((t1.c0)IS(v0.c0))))) IS TRUE)  as count FROM vt1, t1, v0 ORDER BY ((vt1.c1)<=(((v0.c0)/(t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, t1, v0 WHERE (((0.9589628270083669)%(((t1.c0)IS(v0.c0))))) ORDER BY ((vt1.c1)<=(((v0.c0)/(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.9589628270083669)%(((t1.c0)IS(v0.c0))))) IS TRUE)  as count FROM vt1, t1, v0 ORDER BY ((vt1.c1)<=(((v0.c0)/(t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, t1, v0 WHERE (((0.9589628270083669)%(((t1.c0)IS(v0.c0))))) ORDER BY ((vt1.c1)<=(((v0.c0)/(t1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) ORDER BY CASE WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) THEN t1.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) THEN t1.c0 COLLATE RTRIM END);
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) ORDER BY CASE WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) THEN t1.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) THEN t1.c0 COLLATE RTRIM END);
SELECT ALL * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END COLLATE RTRIM) ORDER BY CASE WHEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) THEN t1.c0 COLLATE RTRIM END;
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED, t1, vt1 WHERE (((NULL)IS NOT(((((((((vt1.c2)OR(NULL)))AND(t1.c0)))AND(v0.c0)))OR(vt0.c0))))) ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((((((((vt1.c2)OR(NULL)))AND(t1.c0)))AND(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t1, vt1 ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED, t1, vt1 WHERE (((NULL)IS NOT(((((((((vt1.c2)OR(NULL)))AND(t1.c0)))AND(v0.c0)))OR(vt0.c0))))) ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((((((((vt1.c2)OR(NULL)))AND(t1.c0)))AND(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t1, vt1 ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED, t1, vt1 WHERE (((NULL)IS NOT(((((((((vt1.c2)OR(NULL)))AND(t1.c0)))AND(v0.c0)))OR(vt0.c0))))) ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS INTEGER);
SELECT COUNT(*) FROM t1, vt0 WHERE (IFNULL(x'', t1.c0) COLLATE BINARY) ORDER BY CAST(((t1.c0) BETWEEN (vt0.c0) AND (x'')) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(x'', t1.c0) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(((t1.c0) BETWEEN (vt0.c0) AND (x'')) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (IFNULL(x'', t1.c0) COLLATE BINARY) ORDER BY CAST(((t1.c0) BETWEEN (vt0.c0) AND (x'')) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(x'', t1.c0) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(((t1.c0) BETWEEN (vt0.c0) AND (x'')) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (IFNULL(x'', t1.c0) COLLATE BINARY) ORDER BY CAST(((t1.c0) BETWEEN (vt0.c0) AND (x'')) AS BLOB) DESC  NULLS LAST;
SELECT * FROM v0, t1, vt0, vt1 WHERE (vt1.c2) ORDER BY ((((((vt1.c2) BETWEEN (vt1.c1) AND (v0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))OR((v0.c0 IN (vt1.c2))));
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM v0, t1, vt0 NOT INDEXED, vt1 ORDER BY ((((((vt1.c2) BETWEEN (vt1.c1) AND (v0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))OR((v0.c0 IN (vt1.c2)))));
SELECT * FROM v0, t1, vt0, vt1 WHERE (vt1.c2) ORDER BY ((((((vt1.c2) BETWEEN (vt1.c1) AND (v0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))OR((v0.c0 IN (vt1.c2))));
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM v0, t1, vt0 NOT INDEXED, vt1 ORDER BY ((((((vt1.c2) BETWEEN (vt1.c1) AND (v0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))OR((v0.c0 IN (vt1.c2)))));
SELECT * FROM v0, t1, vt0, vt1 WHERE (vt1.c2) ORDER BY ((((((vt1.c2) BETWEEN (vt1.c1) AND (v0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))OR((v0.c0 IN (vt1.c2))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)=(vt1.c2)) COLLATE NOCASE) ORDER BY (NOT (((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)==(vt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)=(vt1.c2)) COLLATE NOCASE) ORDER BY (NOT (((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)==(vt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) ISNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)=(vt1.c2)) COLLATE NOCASE) ORDER BY (NOT (((vt1.c0) ISNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((ABS(vt1.c1))|(((vt1.c2)*(t1.c0)))) LEFT OUTER JOIN v0 ON ((((vt1.c0)-(vt1.c2)))GLOB(CAST(t1.c0 AS TEXT))) FULL OUTER JOIN vt1 ON NULL WHERE (t1.c0) ORDER BY '(WS0' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((ABS(vt1.c1))|(((vt1.c2)*(t1.c0)))) LEFT OUTER JOIN v0 ON ((((vt1.c0)-(vt1.c2)))GLOB(CAST(t1.c0 AS TEXT))) FULL OUTER JOIN vt1 ON NULL ORDER BY '(WS0' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((ABS(vt1.c1))|(((vt1.c2)*(t1.c0)))) LEFT OUTER JOIN v0 ON ((((vt1.c0)-(vt1.c2)))GLOB(CAST(t1.c0 AS TEXT))) FULL OUTER JOIN vt1 ON NULL WHERE (t1.c0) ORDER BY '(WS0' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((ABS(vt1.c1))|(((vt1.c2)*(t1.c0)))) LEFT OUTER JOIN v0 ON ((((vt1.c0)-(vt1.c2)))GLOB(CAST(t1.c0 AS TEXT))) FULL OUTER JOIN vt1 ON NULL ORDER BY '(WS0' DESC  NULLS FIRST);
SELECT ALL * FROM vt1, v0 NOT INDEXED, vt0, t1 WHERE (vt1.c2) ORDER BY ((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY ((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt1, v0 NOT INDEXED, vt0, t1 WHERE (vt1.c2) ORDER BY ((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY ((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt1, v0 NOT INDEXED, vt0, t1 WHERE (vt1.c2) ORDER BY ((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<<(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND (vt0.c1 COLLATE NOCASE)), (((NOT (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<<(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND (vt0.c1 COLLATE NOCASE)), (((NOT (vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<<(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND (vt0.c1 COLLATE NOCASE)), (((NOT (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<<(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND (vt0.c1 COLLATE NOCASE)), (((NOT (vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<<(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST, ((((vt0.c1)<=(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND (vt0.c1 COLLATE NOCASE)), (((NOT (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (CAST(CASE vt0.c0  WHEN t1.c0 THEN t1.c0 END AS BLOB)) ORDER BY ((vt0.c0 COLLATE RTRIM)<=(((vt0.c0)/(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN t1.c0 THEN t1.c0 END AS BLOB)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 COLLATE RTRIM)<=(((vt0.c0)/(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (CAST(CASE vt0.c0  WHEN t1.c0 THEN t1.c0 END AS BLOB)) ORDER BY ((vt0.c0 COLLATE RTRIM)<=(((vt0.c0)/(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN t1.c0 THEN t1.c0 END AS BLOB)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 COLLATE RTRIM)<=(((vt0.c0)/(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (CAST(CASE vt0.c0  WHEN t1.c0 THEN t1.c0 END AS BLOB)) ORDER BY ((vt0.c0 COLLATE RTRIM)<=(((vt0.c0)/(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0))<=(('761353676')))))<((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY COALESCE(CAST(v0.c0 AS REAL), ((v0.c0)<>(v0.c0)))  NULLS LAST, CAST(HEX(DISTINCT v0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))<=(('761353676')))))<((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY COALESCE(CAST(v0.c0 AS REAL), ((v0.c0)!=(v0.c0)))  NULLS LAST, CAST(HEX(DISTINCT v0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0))<=(('761353676')))))<((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY COALESCE(CAST(v0.c0 AS REAL), ((v0.c0)<>(v0.c0)))  NULLS LAST, CAST(HEX(DISTINCT v0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))<=(('761353676')))))<((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY COALESCE(CAST(v0.c0 AS REAL), ((v0.c0)!=(v0.c0)))  NULLS LAST, CAST(HEX(DISTINCT v0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0))<=(('761353676')))))<((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY COALESCE(CAST(v0.c0 AS REAL), ((v0.c0)<>(v0.c0)))  NULLS LAST, CAST(HEX(DISTINCT v0.c0) AS NUMERIC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt1.c1) AND ('Ki톈,,')) THEN ('0.3489914830758498' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (vt1.c1) AND ('Ki톈,,')) THEN ('0.3489914830758498' IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt1.c1) AND ('Ki톈,,')) THEN ('0.3489914830758498' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (vt1.c1) AND ('Ki톈,,')) THEN ('0.3489914830758498' IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt1.c1) AND ('Ki톈,,')) THEN ('0.3489914830758498' IN ()) END);
SELECT * FROM vt1, t1, vt0 WHERE ((((vt0.c0 IN ()))<((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY NULLIF(CAST(t1.c0 AS INTEGER), ((vt0.c0) IS TRUE))  NULLS LAST, (((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY NULLIF(CAST(t1.c0 AS INTEGER), ((vt0.c0) IS TRUE))  NULLS LAST, (((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(vt1.c0)));
SELECT * FROM vt1, t1, vt0 WHERE ((((vt0.c0 IN ()))<((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY NULLIF(CAST(t1.c0 AS INTEGER), ((vt0.c0) IS TRUE))  NULLS LAST, (((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY NULLIF(CAST(t1.c0 AS INTEGER), ((vt0.c0) IS TRUE))  NULLS LAST, (((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(vt1.c0)));
SELECT * FROM vt1, t1, vt0 WHERE ((((vt0.c0 IN ()))<((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY NULLIF(CAST(t1.c0 AS INTEGER), ((vt0.c0) IS TRUE))  NULLS LAST, (((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((((((((vt0.c1)AND(t1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))))AND(vt1.c0));
SELECT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) IS FALSE)) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c0)||(t1.c0))) AND ((t1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c0)||(t1.c0))) AND ((t1.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) IS FALSE)) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c0)||(t1.c0))) AND ((t1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c0)||(t1.c0))) AND ((t1.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0))) IS FALSE)) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c0)||(t1.c0))) AND ((t1.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((((0.6986286467195739)||(vt0.c1)))))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((((0.6986286467195739)||(vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY TOTAL_CHANGES() ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((((0.6986286467195739)||(vt0.c1)))))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((((0.6986286467195739)||(vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY TOTAL_CHANGES() ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((((0.6986286467195739)||(vt0.c1)))))) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON TRIM(NULL, NULL) RIGHT OUTER JOIN t1 ON CAST(-1753194818 AS TEXT) CROSS JOIN vt0 ON (((TRIM(t1.c0)))<=(((vt1.c1 IN ())))) WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON TRIM(NULL, NULL) RIGHT OUTER JOIN t1 ON CAST(-1753194818 AS TEXT) CROSS JOIN vt0 ON (((TRIM(t1.c0)))<=(((vt1.c1 IN ())))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON TRIM(NULL, NULL) RIGHT OUTER JOIN t1 ON CAST(-1753194818 AS TEXT) CROSS JOIN vt0 ON (((TRIM(t1.c0)))<=(((vt1.c1 IN ())))) WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON TRIM(NULL, NULL) RIGHT OUTER JOIN t1 ON CAST(-1753194818 AS TEXT) CROSS JOIN vt0 ON (((TRIM(t1.c0)))<=(((vt1.c1 IN ())))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON TRIM(NULL, NULL) RIGHT OUTER JOIN t1 ON CAST(-1753194818 AS TEXT) CROSS JOIN vt0 ON (((TRIM(t1.c0)))<=(((vt1.c1 IN ())))) WHERE (CAST(x'' AS TEXT));
SELECT ALL COUNT(*) FROM vt0, vt1, t1 NATURAL JOIN v0 WHERE ((((('324545286') NOT BETWEEN (vt1.c1) AND (0Xffffffff8b14ebcd))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('324545286') NOT BETWEEN (vt1.c1) AND (0Xffffffff8b14ebcd))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, t1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 NATURAL JOIN v0 WHERE ((((('324545286') NOT BETWEEN (vt1.c1) AND (0Xffffffff8b14ebcd))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('324545286') NOT BETWEEN (vt1.c1) AND (0Xffffffff8b14ebcd))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, t1 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 NATURAL JOIN v0 WHERE ((((('324545286') NOT BETWEEN (vt1.c1) AND (0Xffffffff8b14ebcd))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (UPPER(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (UPPER(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (UPPER(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM v0, vt1, t1, vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt1, t1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, t1, vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt1, t1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, t1, vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) ORDER BY ((((t1.c0)OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR('es'''));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c0  WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR('es''')));
SELECT ALL * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) ORDER BY ((((t1.c0)OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR('es'''));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c0  WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR('es''')));
SELECT ALL * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END AS REAL)) ORDER BY ((((t1.c0)OR(((((t1.c0)AND(t1.c0)))OR(t1.c0)))))OR('es'''));
SELECT COUNT(*) FROM vt1, vt0 INNER JOIN t1 ON (~ (((((0.7130937244335523)AND(vt1.c0)))OR(NULL)))) WHERE (((vt1.c2)OR(vt0.c0)) COLLATE BINARY) ORDER BY t1.c0 DESC, (vt1.c2 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((vt1.c2)OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON (~ (((((0.7130937244335523)AND(vt1.c0)))OR(NULL)))) ORDER BY t1.c0 DESC, (vt1.c2 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt1, vt0 INNER JOIN t1 ON (~ (((((0.7130937244335523)AND(vt1.c0)))OR(NULL)))) WHERE (((vt1.c2)OR(vt0.c0)) COLLATE BINARY) ORDER BY t1.c0 DESC, (vt1.c2 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((vt1.c2)OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON (~ (((((0.7130937244335523)AND(vt1.c0)))OR(NULL)))) ORDER BY t1.c0 DESC, (vt1.c2 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt1, vt0 INNER JOIN t1 ON (~ (((((0.7130937244335523)AND(vt1.c0)))OR(NULL)))) WHERE (((vt1.c2)OR(vt0.c0)) COLLATE BINARY) ORDER BY t1.c0 DESC, (vt1.c2 COLLATE RTRIM IN ());
SELECT * FROM v0 WHERE ((v0.c0 IN ())) ORDER BY 0.4683905628398539 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY 0.4683905628398539 DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((v0.c0 IN ())) ORDER BY 0.4683905628398539 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY 0.4683905628398539 DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((v0.c0 IN ())) ORDER BY 0.4683905628398539 DESC  NULLS FIRST;
SELECT * FROM t1, v0, vt0, vt1 WHERE (((((v0.c0)*(v0.c0)))>=(((v0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c0)))>=(((v0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM t1, v0, vt0, vt1);
SELECT * FROM t1, v0, vt0, vt1 WHERE (((((v0.c0)*(v0.c0)))>=(((v0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c0)))>=(((v0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM t1, v0, vt0, vt1);
SELECT * FROM t1, v0, vt0, vt1 WHERE (((((v0.c0)*(v0.c0)))>=(((v0.c0)>=(vt0.c0)))));
SELECT * FROM vt1, vt0, v0, t1 WHERE (((0.09598036018487155)>>((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))) ORDER BY CASE (vt0.c1 IN ())  WHEN (x'd21c' IN ()) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) END  NULLS LAST, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.09598036018487155)>>((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0, v0, t1 ORDER BY CASE (vt0.c1 IN ())  WHEN (x'd21c' IN ()) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) END  NULLS LAST, vt0.c1  NULLS LAST);
SELECT * FROM vt1, vt0, v0, t1 WHERE (((0.09598036018487155)>>((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))) ORDER BY CASE (vt0.c1 IN ())  WHEN (x'd21c' IN ()) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) END  NULLS LAST, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.09598036018487155)>>((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0, v0, t1 ORDER BY CASE (vt0.c1 IN ())  WHEN (x'd21c' IN ()) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) END  NULLS LAST, vt0.c1  NULLS LAST);
SELECT * FROM vt1, vt0, v0, t1 WHERE (((0.09598036018487155)>>((((v0.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c1)))))) ORDER BY CASE (vt0.c1 IN ())  WHEN (x'd21c' IN ()) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) END  NULLS LAST, vt0.c1  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (x'' COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'' COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'' COLLATE NOCASE COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c1 COLLATE NOCASE))<=(('Ki톈,,'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE NOCASE))<=(('Ki톈,,')))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c1 COLLATE NOCASE))<=(('Ki톈,,'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE NOCASE))<=(('Ki톈,,')))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c1 COLLATE NOCASE))<=(('Ki톈,,'))));
SELECT ALL * FROM v0, t1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0, t1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0, t1, vt0 WHERE (vt0.c0);
SELECT * FROM vt0, vt1, v0 WHERE ((+ (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE ((+ (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE ((+ (CAST(vt0.c1 AS REAL))));
SELECT ALL * FROM t1, v0 WHERE ((((NOT (v0.c0))) NOTNULL)) ORDER BY (((t1.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((t1.c0)>=(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t1, v0 ORDER BY (((t1.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((t1.c0)>=(v0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t1, v0 WHERE ((((NOT (v0.c0))) NOTNULL)) ORDER BY (((t1.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((t1.c0)>=(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t1, v0 ORDER BY (((t1.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((t1.c0)>=(v0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t1, v0 WHERE ((((NOT (v0.c0))) NOTNULL)) ORDER BY (((t1.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((t1.c0)>=(v0.c0))))) ASC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON vt1.c1 LEFT OUTER JOIN t1 ON ((((NULL) BETWEEN (vt1.c0) AND (v0.c0)))*(CAST(vt0.c0 AS INTEGER))) CROSS JOIN vt1 ON ((((t1.c0) IS TRUE))-((- (vt1.c2)))) WHERE ((~ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON vt1.c1 LEFT OUTER JOIN t1 ON ((((NULL) BETWEEN (vt1.c0) AND (v0.c0)))*(CAST(vt0.c0 AS INTEGER))) CROSS JOIN vt1 ON ((((t1.c0) IS TRUE))-((- (vt1.c2)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON vt1.c1 LEFT OUTER JOIN t1 ON ((((NULL) BETWEEN (vt1.c0) AND (v0.c0)))*(CAST(vt0.c0 AS INTEGER))) CROSS JOIN vt1 ON ((((t1.c0) IS TRUE))-((- (vt1.c2)))) WHERE ((~ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON vt1.c1 LEFT OUTER JOIN t1 ON ((((NULL) BETWEEN (vt1.c0) AND (v0.c0)))*(CAST(vt0.c0 AS INTEGER))) CROSS JOIN vt1 ON ((((t1.c0) IS TRUE))-((- (vt1.c2)))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((t1.c0) NOT NULL))<(CAST('-2117819889' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL))<(CAST('-2117819889' AS INTEGER)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((t1.c0) NOT NULL))<(CAST('-2117819889' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL))<(CAST('-2117819889' AS INTEGER)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((t1.c0) NOT NULL))<(CAST('-2117819889' AS INTEGER))));
SELECT * FROM t1, vt0 WHERE (((((((((NULL COLLATE BINARY)AND(((((NULL)AND(vt0.c0)))AND(vt0.c1)))))OR(vt0.c1)))OR(CAST(NULL AS NUMERIC))))OR(((((t1.c0)AND(vt0.c1)))AND(vt0.c1))))) ORDER BY json_array_length(LIKELIHOOD(t1.c0, 0.5847087767484104), CASE WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN '1359855799' WHEN vt0.c0 THEN vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE BINARY)AND(((((NULL)AND(vt0.c0)))AND(vt0.c1)))))OR(vt0.c1)))OR(CAST(NULL AS NUMERIC))))OR(((((t1.c0)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM t1, vt0 ORDER BY json_array_length(LIKELIHOOD(t1.c0, 0.5847087767484104), CASE WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN '1359855799' WHEN vt0.c0 THEN vt0.c0 END)  NULLS LAST);
SELECT * FROM t1, vt0 WHERE (((((((((NULL COLLATE BINARY)AND(((((NULL)AND(vt0.c0)))AND(vt0.c1)))))OR(vt0.c1)))OR(CAST(NULL AS NUMERIC))))OR(((((t1.c0)AND(vt0.c1)))AND(vt0.c1))))) ORDER BY json_array_length(LIKELIHOOD(t1.c0, 0.5847087767484104), CASE WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN '1359855799' WHEN vt0.c0 THEN vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL COLLATE BINARY)AND(((((NULL)AND(vt0.c0)))AND(vt0.c1)))))OR(vt0.c1)))OR(CAST(NULL AS NUMERIC))))OR(((((t1.c0)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM t1, vt0 ORDER BY json_array_length(LIKELIHOOD(t1.c0, 0.5847087767484104), CASE WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN '1359855799' WHEN vt0.c0 THEN vt0.c0 END)  NULLS LAST);
SELECT * FROM t1, vt0 WHERE (((((((((NULL COLLATE BINARY)AND(((((NULL)AND(vt0.c0)))AND(vt0.c1)))))OR(vt0.c1)))OR(CAST(NULL AS NUMERIC))))OR(((((t1.c0)AND(vt0.c1)))AND(vt0.c1))))) ORDER BY json_array_length(LIKELIHOOD(t1.c0, 0.5847087767484104), CASE WHEN x'' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN '1359855799' WHEN vt0.c0 THEN vt0.c0 END)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((((vt0.c0))<((vt0.c0)))) BETWEEN ('_1') AND (UPPER(vt0.c1))) WHERE ((((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, vt0.c1))))OR(CAST(vt0.c1 AS INTEGER))))AND(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, vt0.c1))))OR(CAST(vt0.c1 AS INTEGER))))AND(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((((vt0.c0))<((vt0.c0)))) BETWEEN ('_1') AND (UPPER(vt0.c1))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((((vt0.c0))<((vt0.c0)))) BETWEEN ('_1') AND (UPPER(vt0.c1))) WHERE ((((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, vt0.c1))))OR(CAST(vt0.c1 AS INTEGER))))AND(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, vt0.c1))))OR(CAST(vt0.c1 AS INTEGER))))AND(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((((vt0.c0))<((vt0.c0)))) BETWEEN ('_1') AND (UPPER(vt0.c1))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((((vt0.c0))<((vt0.c0)))) BETWEEN ('_1') AND (UPPER(vt0.c1))) WHERE ((((((((v0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, vt0.c1))))OR(CAST(vt0.c1 AS INTEGER))))AND(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((((vt0.c1 IN ()))AND(0.2873736705518517 COLLATE NOCASE)))OR(((v0.c0)>(vt0.c1)))) WHERE ((NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON (((((vt0.c1 IN ()))AND(0.2873736705518517 COLLATE NOCASE)))OR(((v0.c0)>(vt0.c1)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((((vt0.c1 IN ()))AND(0.2873736705518517 COLLATE NOCASE)))OR(((v0.c0)>(vt0.c1)))) WHERE ((NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON (((((vt0.c1 IN ()))AND(0.2873736705518517 COLLATE NOCASE)))OR(((v0.c0)>(vt0.c1)))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((((vt0.c1 IN ()))AND(0.2873736705518517 COLLATE NOCASE)))OR(((v0.c0)>(vt0.c1)))) WHERE ((NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON '-286645004' WHERE (CASE WHEN 1.24403762E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (0.1562899007408024)) WHEN (vt1.c0 IN ()) THEN (~ (t1.c0)) WHEN ((t1.c0)<(vt1.c1)) THEN CAST(vt1.c2 AS BLOB) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 1.24403762E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (0.1562899007408024)) WHEN (vt1.c0 IN ()) THEN (~ (t1.c0)) WHEN ((t1.c0)<(vt1.c1)) THEN CAST(vt1.c2 AS BLOB) ELSE CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON '-286645004');
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON '-286645004' WHERE (CASE WHEN 1.24403762E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (0.1562899007408024)) WHEN (vt1.c0 IN ()) THEN (~ (t1.c0)) WHEN ((t1.c0)<(vt1.c1)) THEN CAST(vt1.c2 AS BLOB) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 1.24403762E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (0.1562899007408024)) WHEN (vt1.c0 IN ()) THEN (~ (t1.c0)) WHEN ((t1.c0)<(vt1.c1)) THEN CAST(vt1.c2 AS BLOB) ELSE CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON '-286645004');
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON '-286645004' WHERE (CASE WHEN 1.24403762E8 THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (0.1562899007408024)) WHEN (vt1.c0 IN ()) THEN (~ (t1.c0)) WHEN ((t1.c0)<(vt1.c1)) THEN CAST(vt1.c2 AS BLOB) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t1 ON (('A#	h嗭?g') IS FALSE) CROSS JOIN vt1 ON (((t1.c0)IS(vt1.c2)) IN ()) CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS NUMERIC))OR(CASE WHEN vt0.c1 THEN t1.c0 END)))OR(((t1.c0)&(vt0.c0)))) WHERE (((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) COLLATE NOCASE) ORDER BY (((vt1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((vt0.c0)LIKE(vt1.c2))))) ASC  NULLS LAST, (((((vt1.c2)!=(vt0.c1))))<=((((vt0.c1)OR(vt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON (('A#	h嗭?g') IS FALSE) CROSS JOIN vt1 ON (((t1.c0)IS(vt1.c2)) IN ()) CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS NUMERIC))OR(CASE WHEN vt0.c1 THEN t1.c0 END)))OR(((t1.c0)&(vt0.c0)))) ORDER BY (((vt1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((vt0.c0)LIKE(vt1.c2))))) ASC  NULLS LAST, (((((vt1.c2)!=(vt0.c1))))<=((((vt0.c1)OR(vt1.c2))))) DESC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t1 ON (('A#	h嗭?g') IS FALSE) CROSS JOIN vt1 ON (((t1.c0)IS(vt1.c2)) IN ()) CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS NUMERIC))OR(CASE WHEN vt0.c1 THEN t1.c0 END)))OR(((t1.c0)&(vt0.c0)))) WHERE (((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) COLLATE NOCASE) ORDER BY (((vt1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((vt0.c0)LIKE(vt1.c2))))) ASC  NULLS LAST, (((((vt1.c2)!=(vt0.c1))))<=((((vt0.c1)OR(vt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON (('A#	h嗭?g') IS FALSE) CROSS JOIN vt1 ON (((t1.c0)IS(vt1.c2)) IN ()) CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS NUMERIC))OR(CASE WHEN vt0.c1 THEN t1.c0 END)))OR(((t1.c0)&(vt0.c0)))) ORDER BY (((vt1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((vt0.c0)LIKE(vt1.c2))))) ASC  NULLS LAST, (((((vt1.c2)!=(vt0.c1))))<=((((vt0.c1)OR(vt1.c2))))) DESC);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t1 ON (('A#	h嗭?g') IS FALSE) CROSS JOIN vt1 ON (((t1.c0)IS(vt1.c2)) IN ()) CROSS JOIN vt0 ON ((((CAST(vt0.c1 AS NUMERIC))OR(CASE WHEN vt0.c1 THEN t1.c0 END)))OR(((t1.c0)&(vt0.c0)))) WHERE (((vt0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) COLLATE NOCASE) ORDER BY (((vt1.c2)) BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((vt0.c0)LIKE(vt1.c2))))) ASC  NULLS LAST, (((((vt1.c2)!=(vt0.c1))))<=((((vt0.c1)OR(vt1.c2))))) DESC;
SELECT ALL * FROM t1, v0, vt0, vt1 WHERE (CAST((((vt0.c0))<=((x''))) AS INTEGER)) ORDER BY ((((((((((((((((t1.c0)OR(v0.c0)))OR(vt1.c2)))AND(vt0.c1)))OR(x'c124')))OR(vt1.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END)))OR((((('V鐷%&	Al')OR(t1.c0)))AND(x'')))) ASC  NULLS LAST, (- (UPPER(DISTINCT t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((x''))) AS INTEGER)) IS TRUE)  as count FROM t1, v0, vt0, vt1 ORDER BY ((((((((((((((((t1.c0)OR(v0.c0)))OR(vt1.c2)))AND(vt0.c1)))OR(x'c124')))OR(vt1.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END)))OR((((('V鐷%&	Al')OR(t1.c0)))AND(x'')))) ASC  NULLS LAST, (- (UPPER(DISTINCT t1.c0))) DESC);
SELECT ALL * FROM t1, v0, vt0, vt1 WHERE (CAST((((vt0.c0))<=((x''))) AS INTEGER)) ORDER BY ((((((((((((((((t1.c0)OR(v0.c0)))OR(vt1.c2)))AND(vt0.c1)))OR(x'c124')))OR(vt1.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END)))OR((((('V鐷%&	Al')OR(t1.c0)))AND(x'')))) ASC  NULLS LAST, (- (UPPER(DISTINCT t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))<=((x''))) AS INTEGER)) IS TRUE)  as count FROM t1, v0, vt0, vt1 ORDER BY ((((((((((((((((t1.c0)OR(v0.c0)))OR(vt1.c2)))AND(vt0.c1)))OR(x'c124')))OR(vt1.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END)))OR((((('V鐷%&	Al')OR(t1.c0)))AND(x'')))) ASC  NULLS LAST, (- (UPPER(DISTINCT t1.c0))) DESC);
SELECT ALL * FROM t1, v0, vt0, vt1 WHERE (CAST((((vt0.c0))<=((x''))) AS INTEGER)) ORDER BY ((((((((((((((((t1.c0)OR(v0.c0)))OR(vt1.c2)))AND(vt0.c1)))OR(x'c124')))OR(vt1.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END)))OR((((('V鐷%&	Al')OR(t1.c0)))AND(x'')))) ASC  NULLS LAST, (- (UPPER(DISTINCT t1.c0))) DESC;
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE (json_insert((NOT (vt0.c1)), CASE WHEN t1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c2 THEN v0.c0 END, ((vt0.c1) NOTNULL))) ORDER BY UNLIKELY((((vt1.c2))==((t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((NOT (vt0.c1)), CASE WHEN t1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c2 THEN v0.c0 END, ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY UNLIKELY((((vt1.c2))==((t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE (json_insert((NOT (vt0.c1)), CASE WHEN t1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c2 THEN v0.c0 END, ((vt0.c1) NOTNULL))) ORDER BY UNLIKELY((((vt1.c2))==((t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert((NOT (vt0.c1)), CASE WHEN t1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c2 THEN v0.c0 END, ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY UNLIKELY((((vt1.c2))==((t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE (json_insert((NOT (vt0.c1)), CASE WHEN t1.c0 THEN vt1.c1 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c2 THEN v0.c0 END, ((vt0.c1) NOTNULL))) ORDER BY UNLIKELY((((vt1.c2))==((t1.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)<=(vt0.c1)))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))AND((((vt0.c0))<((vt0.c0)))))) ORDER BY (((vt0.c0 IN ()))+(((((vt0.c1)AND(vt0.c0)))AND(-56588801))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)<=(vt0.c1)))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))AND((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))+(((((vt0.c1)AND(vt0.c0)))AND(-56588801))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)<=(vt0.c1)))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))AND((((vt0.c0))<((vt0.c0)))))) ORDER BY (((vt0.c0 IN ()))+(((((vt0.c1)AND(vt0.c0)))AND(-56588801))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)<=(vt0.c1)))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))AND((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))+(((((vt0.c1)AND(vt0.c0)))AND(-56588801))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)<=(vt0.c1)))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))AND((((vt0.c0))<((vt0.c0)))))) ORDER BY (((vt0.c0 IN ()))+(((((vt0.c1)AND(vt0.c0)))AND(-56588801))))  NULLS LAST;
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (UPPER(t1.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(t1.c0)) IS TRUE)  as count FROM v0, t1, vt0);
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (UPPER(t1.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(t1.c0)) IS TRUE)  as count FROM v0, t1, vt0);
SELECT COUNT(*) FROM v0, t1, vt0 WHERE (UPPER(t1.c0));
SELECT COUNT(*) FROM t1, vt1 LEFT OUTER JOIN vt0 ON vt1.c2 COLLATE RTRIM RIGHT OUTER JOIN v0 ON (~ (v0.c0)) WHERE (CASE (vt1.c0 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))OR(t1.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt1.c0)LIKE(vt0.c1)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(vt1.c0)) THEN TRIM(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))OR(t1.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt1.c0)LIKE(vt0.c1)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(vt1.c0)) THEN TRIM(vt1.c0) END) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN vt0 ON vt1.c2 COLLATE RTRIM RIGHT OUTER JOIN v0 ON (~ (v0.c0)));
SELECT COUNT(*) FROM t1, vt1 LEFT OUTER JOIN vt0 ON vt1.c2 COLLATE RTRIM RIGHT OUTER JOIN v0 ON (~ (v0.c0)) WHERE (CASE (vt1.c0 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))OR(t1.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt1.c0)LIKE(vt0.c1)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(vt1.c0)) THEN TRIM(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))OR(t1.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt1.c0)LIKE(vt0.c1)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(vt1.c0)) THEN TRIM(vt1.c0) END) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN vt0 ON vt1.c2 COLLATE RTRIM RIGHT OUTER JOIN v0 ON (~ (v0.c0)));
SELECT COUNT(*) FROM t1, vt1 LEFT OUTER JOIN vt0 ON vt1.c2 COLLATE RTRIM RIGHT OUTER JOIN v0 ON (~ (v0.c0)) WHERE (CASE (vt1.c0 IN ())  WHEN ((((vt0.c1)OR(vt0.c0)))OR(t1.c0)) THEN CAST(vt0.c1 AS INTEGER) WHEN ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt1.c0)LIKE(vt0.c1)) WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(t1.c0)))OR(t1.c0)))AND(vt1.c0)) THEN TRIM(vt1.c0) END);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LTRIM(0.5695829381290852 COLLATE BINARY, ((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c2))) WHERE (vt1.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LTRIM(0.5695829381290852 COLLATE BINARY, ((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c2))));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LTRIM(0.5695829381290852 COLLATE BINARY, ((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c2))) WHERE (vt1.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LTRIM(0.5695829381290852 COLLATE BINARY, ((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c2))));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON LTRIM(0.5695829381290852 COLLATE BINARY, ((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c2))) WHERE (vt1.c2 COLLATE BINARY);
SELECT ALL * FROM vt1, t1, v0 WHERE ((((v0.c0)) BETWEEN ((((vt1.c0)OR(v0.c0)))) AND ((CASE WHEN 1777898799 THEN vt1.c0 END)))) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CASE t1.c0  WHEN vt1.c2 THEN vt1.c2 END)))OR(((vt1.c1) BETWEEN (vt1.c2) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((vt1.c0)OR(v0.c0)))) AND ((CASE WHEN 1777898799 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1, t1, v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CASE t1.c0  WHEN vt1.c2 THEN vt1.c2 END)))OR(((vt1.c1) BETWEEN (vt1.c2) AND (v0.c0)))));
SELECT ALL * FROM vt1, t1, v0 WHERE ((((v0.c0)) BETWEEN ((((vt1.c0)OR(v0.c0)))) AND ((CASE WHEN 1777898799 THEN vt1.c0 END)))) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CASE t1.c0  WHEN vt1.c2 THEN vt1.c2 END)))OR(((vt1.c1) BETWEEN (vt1.c2) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((((vt1.c0)OR(v0.c0)))) AND ((CASE WHEN 1777898799 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1, t1, v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CASE t1.c0  WHEN vt1.c2 THEN vt1.c2 END)))OR(((vt1.c1) BETWEEN (vt1.c2) AND (v0.c0)))));
SELECT ALL * FROM vt1, t1, v0 WHERE ((((v0.c0)) BETWEEN ((((vt1.c0)OR(v0.c0)))) AND ((CASE WHEN 1777898799 THEN vt1.c0 END)))) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CASE t1.c0  WHEN vt1.c2 THEN vt1.c2 END)))OR(((vt1.c1) BETWEEN (vt1.c2) AND (v0.c0))));
SELECT COUNT(*) FROM vt1, v0 WHERE (((NULL)>('!\r\r'))) ORDER BY '1777327750' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>('!\r\r'))) IS TRUE)  as count FROM vt1, v0 ORDER BY '1777327750' DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE (((NULL)>('!\r\r'))) ORDER BY '1777327750' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>('!\r\r'))) IS TRUE)  as count FROM vt1, v0 ORDER BY '1777327750' DESC);
SELECT COUNT(*) FROM vt1, v0 WHERE (((NULL)>('!\r\r'))) ORDER BY '1777327750' DESC;
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE (CAST(vt1.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS BLOB)) IS TRUE)  as count FROM vt1, v0, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE (CAST(vt1.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS BLOB)) IS TRUE)  as count FROM vt1, v0, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE (CAST(vt1.c1 AS BLOB));
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((vt0.c1)/(vt0.c0))) IS FALSE)) ORDER BY CAST(v0.c0 COLLATE RTRIM AS INTEGER), CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM, -837053385;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)/(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CAST(v0.c0 COLLATE RTRIM AS INTEGER), CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM, -837053385);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((vt0.c1)/(vt0.c0))) IS FALSE)) ORDER BY CAST(v0.c0 COLLATE RTRIM AS INTEGER), CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM, -837053385;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)/(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CAST(v0.c0 COLLATE RTRIM AS INTEGER), CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM, -837053385);
SELECT * FROM v0 WHERE (x'390d') ORDER BY (((((((v0.c0)) BETWEEN ((2.98223645E8)) AND ((v0.c0))))OR(x'')))AND((+ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'390d') IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0)) BETWEEN ((2.98223645E8)) AND ((v0.c0))))OR(x'')))AND((+ (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (x'390d') ORDER BY (((((((v0.c0)) BETWEEN ((2.98223645E8)) AND ((v0.c0))))OR(x'')))AND((+ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'390d') IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0)) BETWEEN ((2.98223645E8)) AND ((v0.c0))))OR(x'')))AND((+ (v0.c0)))) DESC);
SELECT * FROM v0 WHERE (x'390d') ORDER BY (((((((v0.c0)) BETWEEN ((2.98223645E8)) AND ((v0.c0))))OR(x'')))AND((+ (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((v0.c0))==((vt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c0))==((vt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((v0.c0))==((vt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c0))==((vt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((v0.c0))==((vt1.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON CASE (~ (v0.c0))  WHEN v0.c0 COLLATE NOCASE THEN NULL ELSE CAST(vt1.c0 AS BLOB) END FULL OUTER JOIN v0 ON ((NULL)%(vt1.c0 COLLATE NOCASE)) WHERE (CASE WHEN (((v0.c0, vt1.c0, vt1.c2))<((v0.c0, t1.c0, vt1.c0))) THEN ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c2 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN vt1.c2 WHEN -1908274292 THEN t1.c0 ELSE t1.c0 END THEN (((t1.c0))>=((''))) WHEN vt1.c0 THEN (('2116025320') BETWEEN ('-1216209840') AND (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, vt1.c0, vt1.c2))<((v0.c0, t1.c0, vt1.c0))) THEN ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c2 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN vt1.c2 WHEN -1908274292 THEN t1.c0 ELSE t1.c0 END THEN (((t1.c0))>=((''))) WHEN vt1.c0 THEN (('2116025320') BETWEEN ('-1216209840') AND (vt1.c1)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON CASE (~ (v0.c0))  WHEN v0.c0 COLLATE NOCASE THEN NULL ELSE CAST(vt1.c0 AS BLOB) END FULL OUTER JOIN v0 ON ((NULL)%(vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON CASE (~ (v0.c0))  WHEN v0.c0 COLLATE NOCASE THEN NULL ELSE CAST(vt1.c0 AS BLOB) END FULL OUTER JOIN v0 ON ((NULL)%(vt1.c0 COLLATE NOCASE)) WHERE (CASE WHEN (((v0.c0, vt1.c0, vt1.c2))<((v0.c0, t1.c0, vt1.c0))) THEN ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c2 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN vt1.c2 WHEN -1908274292 THEN t1.c0 ELSE t1.c0 END THEN (((t1.c0))>=((''))) WHEN vt1.c0 THEN (('2116025320') BETWEEN ('-1216209840') AND (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0, vt1.c0, vt1.c2))<((v0.c0, t1.c0, vt1.c0))) THEN ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c2 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t1.c0 THEN NULL WHEN t1.c0 THEN vt1.c2 WHEN -1908274292 THEN t1.c0 ELSE t1.c0 END THEN (((t1.c0))>=((''))) WHEN vt1.c0 THEN (('2116025320') BETWEEN ('-1216209840') AND (vt1.c1)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON CASE (~ (v0.c0))  WHEN v0.c0 COLLATE NOCASE THEN NULL ELSE CAST(vt1.c0 AS BLOB) END FULL OUTER JOIN v0 ON ((NULL)%(vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (CASE ((vt0.c0)%(v0.c0))  WHEN ']ft#U}*d' THEN v0.c0 COLLATE RTRIM END) ORDER BY (((v0.c0 IN ()))&(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%(v0.c0))  WHEN ']ft#U}*d' THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY (((v0.c0 IN ()))&(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (CASE ((vt0.c0)%(v0.c0))  WHEN ']ft#U}*d' THEN v0.c0 COLLATE RTRIM END) ORDER BY (((v0.c0 IN ()))&(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%(v0.c0))  WHEN ']ft#U}*d' THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY (((v0.c0 IN ()))&(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (CASE ((vt0.c0)%(v0.c0))  WHEN ']ft#U}*d' THEN v0.c0 COLLATE RTRIM END) ORDER BY (((v0.c0 IN ()))&(CAST(vt0.c1 AS NUMERIC)));
SELECT ALL * FROM vt0 INDEXED BY i37, vt1 NATURAL JOIN v0 WHERE (vt1.c2) ORDER BY ((((((((((((vt1.c1)AND(vt1.c1)))OR(0.5694302551364793)))OR(((vt1.c0) IS TRUE))))OR(((vt1.c1)<=(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c1)))))AND(((vt1.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt0 INDEXED BY i37, vt1 NATURAL JOIN v0 ORDER BY ((((((((((((vt1.c1)AND(vt1.c1)))OR(0.5694302551364793)))OR(((vt1.c0) IS TRUE))))OR(((vt1.c1)<=(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c1)))))AND(((vt1.c2) IS FALSE))));
SELECT ALL * FROM vt0 INDEXED BY i37, vt1 NATURAL JOIN v0 WHERE (vt1.c2) ORDER BY ((((((((((((vt1.c1)AND(vt1.c1)))OR(0.5694302551364793)))OR(((vt1.c0) IS TRUE))))OR(((vt1.c1)<=(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c1)))))AND(((vt1.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt0 INDEXED BY i37, vt1 NATURAL JOIN v0 ORDER BY ((((((((((((vt1.c1)AND(vt1.c1)))OR(0.5694302551364793)))OR(((vt1.c0) IS TRUE))))OR(((vt1.c1)<=(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c1)))))AND(((vt1.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1, v0 NATURAL JOIN t1 WHERE (((((vt1.c1) IS FALSE))*((t1.c0 IN (vt1.c1, vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS FALSE))*((t1.c0 IN (vt1.c1, vt1.c1))))) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt1, v0 NATURAL JOIN t1 WHERE (((((vt1.c1) IS FALSE))*((t1.c0 IN (vt1.c1, vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS FALSE))*((t1.c0 IN (vt1.c1, vt1.c1))))) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt1, v0 NATURAL JOIN t1 WHERE (((((vt1.c1) IS FALSE))*((t1.c0 IN (vt1.c1, vt1.c1)))));
SELECT ALL * FROM vt1, t1 WHERE (COALESCE(((((0xffffffff81c4a20f)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c2)||(t1.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((0Xffffffff81c4a20f)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c2)||(t1.c0)))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (COALESCE(((((0xffffffff81c4a20f)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c2)||(t1.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((0Xffffffff81c4a20f)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c2)||(t1.c0)))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (COALESCE(((((0xffffffff81c4a20f)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c2)||(t1.c0))));
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt1 WHERE (HEX(DISTINCT UNLIKELY(DISTINCT vt1.c1))) ORDER BY 0.8065230883309841, 1.143359839E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT UNLIKELY(DISTINCT vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY 0.8065230883309841, 1.143359839E9  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (HEX(DISTINCT UNLIKELY(DISTINCT vt1.c1))) ORDER BY 0.8065230883309841, 1.143359839E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT UNLIKELY(DISTINCT vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY 0.8065230883309841, 1.143359839E9  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (HEX(DISTINCT UNLIKELY(DISTINCT vt1.c1))) ORDER BY 0.8065230883309841, 1.143359839E9  NULLS FIRST;
SELECT COUNT(*) FROM t1, v0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL)OR(vt1.c2)))AND(vt1.c2)))AND(v0.c0)))AND(t1.c0))) NOTNULL) WHERE ((((vt1.c0, v0.c0, vt1.c1, vt1.c1, vt1.c2, 401950964, v0.c0)) NOT BETWEEN ((vt1.c2, t1.c0, t1.c0, t1.c0, vt1.c0, '-1239132455', t1.c0)) AND ((v0.c0, vt1.c2, v0.c0, vt1.c0, vt1.c1, vt1.c0, t1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, v0.c0, vt1.c1, vt1.c1, vt1.c2, 401950964, v0.c0)) NOT BETWEEN ((vt1.c2, t1.c0, t1.c0, t1.c0, vt1.c0, '-1239132455', t1.c0)) AND ((v0.c0, vt1.c2, v0.c0, vt1.c0, vt1.c1, vt1.c0, t1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1, v0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL)OR(vt1.c2)))AND(vt1.c2)))AND(v0.c0)))AND(t1.c0))) NOTNULL));
SELECT COUNT(*) FROM t1, v0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL)OR(vt1.c2)))AND(vt1.c2)))AND(v0.c0)))AND(t1.c0))) NOTNULL) WHERE ((((vt1.c0, v0.c0, vt1.c1, vt1.c1, vt1.c2, 401950964, v0.c0)) NOT BETWEEN ((vt1.c2, t1.c0, t1.c0, t1.c0, vt1.c0, '-1239132455', t1.c0)) AND ((v0.c0, vt1.c2, v0.c0, vt1.c0, vt1.c1, vt1.c0, t1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, v0.c0, vt1.c1, vt1.c1, vt1.c2, 401950964, v0.c0)) NOT BETWEEN ((vt1.c2, t1.c0, t1.c0, t1.c0, vt1.c0, '-1239132455', t1.c0)) AND ((v0.c0, vt1.c2, v0.c0, vt1.c0, vt1.c1, vt1.c0, t1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1, v0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL)OR(vt1.c2)))AND(vt1.c2)))AND(v0.c0)))AND(t1.c0))) NOTNULL));
SELECT COUNT(*) FROM t1, v0 RIGHT OUTER JOIN vt1 ON ((((((((((NULL)OR(vt1.c2)))AND(vt1.c2)))AND(v0.c0)))AND(t1.c0))) NOTNULL) WHERE ((((vt1.c0, v0.c0, vt1.c1, vt1.c1, vt1.c2, 401950964, v0.c0)) NOT BETWEEN ((vt1.c2, t1.c0, t1.c0, t1.c0, vt1.c0, '-1239132455', t1.c0)) AND ((v0.c0, vt1.c2, v0.c0, vt1.c0, vt1.c1, vt1.c0, t1.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt0.c1)-(vt0.c0)))>>((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt0.c0)))>>((NOT (v0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt0.c1)-(vt0.c0)))>>((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt0.c0)))>>((NOT (v0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((((vt0.c1)-(vt0.c0)))>>((NOT (v0.c0)))));
SELECT ALL * FROM t1 WHERE (((((t1.c0)&(t1.c0))) IS FALSE)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)&(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT ALL * FROM t1 WHERE (((((t1.c0)&(t1.c0))) IS FALSE)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)&(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT ALL * FROM t1 WHERE (((((t1.c0)&(t1.c0))) IS FALSE)) ORDER BY t1.c0;
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.4439848486682566 IN (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((0.4439848486682566 IN (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.4439848486682566 IN (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((0.4439848486682566 IN (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.4439848486682566 IN (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0 DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt0.c1 AS REAL)  WHEN CASE WHEN 0.593944081634849 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c1 THEN NULL END THEN vt0.c1 ELSE CASE vt0.c0  WHEN vt1.c1 THEN NULL ELSE vt0.c0 END END) ORDER BY ((((((((CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)AND(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(NULL)))AND(CAST(vt1.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS REAL)  WHEN CASE WHEN 0.593944081634849 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c1 THEN NULL END THEN vt0.c1 ELSE CASE vt0.c0  WHEN vt1.c1 THEN NULL ELSE vt0.c0 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)AND(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(NULL)))AND(CAST(vt1.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt0.c1 AS REAL)  WHEN CASE WHEN 0.593944081634849 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c1 THEN NULL END THEN vt0.c1 ELSE CASE vt0.c0  WHEN vt1.c1 THEN NULL ELSE vt0.c0 END END) ORDER BY ((((((((CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)AND(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(NULL)))AND(CAST(vt1.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS REAL)  WHEN CASE WHEN 0.593944081634849 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c1 THEN NULL END THEN vt0.c1 ELSE CASE vt0.c0  WHEN vt1.c1 THEN NULL ELSE vt0.c0 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)AND(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(NULL)))AND(CAST(vt1.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt0.c1 AS REAL)  WHEN CASE WHEN 0.593944081634849 THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN vt1.c1 THEN NULL END THEN vt0.c1 ELSE CASE vt0.c0  WHEN vt1.c1 THEN NULL ELSE vt0.c0 END END) ORDER BY ((((((((CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)AND(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(NULL)))AND(CAST(vt1.c2 AS TEXT)));
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((CASE WHEN v0.c0 THEN NULL END)-(((0.34531922144128047) NOT BETWEEN (v0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN NULL END)-(((0.34531922144128047) NOT BETWEEN (v0.c0) AND (t1.c0))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((CASE WHEN v0.c0 THEN NULL END)-(((0.34531922144128047) NOT BETWEEN (v0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN NULL END)-(((0.34531922144128047) NOT BETWEEN (v0.c0) AND (t1.c0))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((CASE WHEN v0.c0 THEN NULL END)-(((0.34531922144128047) NOT BETWEEN (v0.c0) AND (t1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (COALESCE(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)LIKE(vt1.c2)))) ORDER BY ((vt1.c2)<(CASE WHEN vt1.c2 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)LIKE(vt1.c2)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c2)<(CASE WHEN vt1.c2 THEN vt1.c0 END)) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (COALESCE(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)LIKE(vt1.c2)))) ORDER BY ((vt1.c2)<(CASE WHEN vt1.c2 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)LIKE(vt1.c2)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c2)<(CASE WHEN vt1.c2 THEN vt1.c0 END)) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (COALESCE(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)LIKE(vt1.c2)))) ORDER BY ((vt1.c2)<(CASE WHEN vt1.c2 THEN vt1.c0 END)) DESC;
SELECT ALL * FROM v0, vt0, t1 WHERE ((((((v0.c0 IN ()))OR(NULL)))AND(((vt0.c0)&('0.41105008087231265'))))) ORDER BY CAST(CASE WHEN x'4d2f' THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(NULL)))AND(((vt0.c0)&('0.41105008087231265'))))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY CAST(CASE WHEN x'4d2f' THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t1 WHERE ((((((v0.c0 IN ()))OR(NULL)))AND(((vt0.c0)&('0.41105008087231265'))))) ORDER BY CAST(CASE WHEN x'4d2f' THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(NULL)))AND(((vt0.c0)&('0.41105008087231265'))))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY CAST(CASE WHEN x'4d2f' THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM v0, vt0, t1 WHERE ((((((v0.c0 IN ()))OR(NULL)))AND(((vt0.c0)&('0.41105008087231265'))))) ORDER BY CAST(CASE WHEN x'4d2f' THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((json(t1.c0))OR(CAST(t1.c0 AS TEXT)))) ORDER BY ((((((vt0.c0)<(t1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))))OR(vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((((json(t1.c0))OR(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c0)<(t1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))))OR(vt0.c1)) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((json(t1.c0))OR(CAST(t1.c0 AS TEXT)))) ORDER BY ((((((vt0.c0)<(t1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))))OR(vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((((json(t1.c0))OR(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c0)<(t1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))))OR(vt0.c1)) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((json(t1.c0))OR(CAST(t1.c0 AS TEXT)))) ORDER BY ((((((vt0.c0)<(t1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))))OR(vt0.c1)) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN v0 ON CASE CASE WHEN vt1.c2 THEN v0.c0 END  WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN 1.777898799E9 END RIGHT OUTER JOIN t1 ON ((vt0.c1) IS FALSE) WHERE (t1.c0) ORDER BY ((CAST('1175244976' AS TEXT)) NOT BETWEEN (((vt0.c0)IS NOT(v0.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c1))*(((((vt1.c2)AND(vt1.c1)))OR(t1.c0))))  NULLS LAST, MAX((+ (t1.c0)), ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c2)))OR(t1.c0)))AND(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN v0 ON CASE CASE WHEN vt1.c2 THEN v0.c0 END  WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN 1.777898799E9 END RIGHT OUTER JOIN t1 ON ((vt0.c1) IS FALSE) ORDER BY ((CAST('1175244976' AS TEXT)) NOT BETWEEN (((vt0.c0)IS NOT(v0.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c1))*(((((vt1.c2)AND(vt1.c1)))OR(t1.c0))))  NULLS LAST, MAX((+ (t1.c0)), ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c2)))OR(t1.c0)))AND(v0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN v0 ON CASE CASE WHEN vt1.c2 THEN v0.c0 END  WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN 1.777898799E9 END RIGHT OUTER JOIN t1 ON ((vt0.c1) IS FALSE) WHERE (t1.c0) ORDER BY ((CAST('1175244976' AS TEXT)) NOT BETWEEN (((vt0.c0)IS NOT(v0.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c1))*(((((vt1.c2)AND(vt1.c1)))OR(t1.c0))))  NULLS LAST, MAX((+ (t1.c0)), ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c2)))OR(t1.c0)))AND(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN v0 ON CASE CASE WHEN vt1.c2 THEN v0.c0 END  WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN 1.777898799E9 END RIGHT OUTER JOIN t1 ON ((vt0.c1) IS FALSE) ORDER BY ((CAST('1175244976' AS TEXT)) NOT BETWEEN (((vt0.c0)IS NOT(v0.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c1))*(((((vt1.c2)AND(vt1.c1)))OR(t1.c0))))  NULLS LAST, MAX((+ (t1.c0)), ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c2)))OR(t1.c0)))AND(v0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN v0 ON CASE CASE WHEN vt1.c2 THEN v0.c0 END  WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN 1.777898799E9 END RIGHT OUTER JOIN t1 ON ((vt0.c1) IS FALSE) WHERE (t1.c0) ORDER BY ((CAST('1175244976' AS TEXT)) NOT BETWEEN (((vt0.c0)IS NOT(v0.c0))) AND ((t1.c0 IN ()))) DESC  NULLS FIRST, ((NULLIF(vt0.c0, vt1.c1))*(((((vt1.c2)AND(vt1.c1)))OR(t1.c0))))  NULLS LAST, MAX((+ (t1.c0)), ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c2)))OR(t1.c0)))AND(v0.c0))) ASC;
SELECT COUNT(*) FROM v0, vt1, t1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((vt1.c2 IN ())) AND ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((vt1.c2 IN ())) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, t1);
SELECT COUNT(*) FROM v0, vt1, t1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((vt1.c2 IN ())) AND ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((vt1.c2 IN ())) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, t1);
SELECT COUNT(*) FROM v0, vt1, t1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) NOT BETWEEN ((vt1.c2 IN ())) AND ((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0, v0, t1 NOT INDEXED WHERE ('k\');
SELECT SUM(count) FROM (SELECT (('k\') IS TRUE)  as count FROM vt1, vt0, v0, t1);
SELECT COUNT(*) FROM vt1, vt0, v0, t1 NOT INDEXED WHERE ('k\');
SELECT SUM(count) FROM (SELECT (('k\') IS TRUE)  as count FROM vt1, vt0, v0, t1);
SELECT COUNT(*) FROM vt1, vt0, v0, t1 NOT INDEXED WHERE ('k\');
SELECT * FROM t1, vt1, vt0, v0 WHERE (vt1.c1) ORDER BY ABS(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY ABS(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)  NULLS LAST);
SELECT * FROM t1, vt1, vt0, v0 WHERE (vt1.c1) ORDER BY ABS(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY ABS(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)  NULLS LAST);
SELECT * FROM t1, vt1, vt0, v0 WHERE (vt1.c1) ORDER BY ABS(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, vt1, t1 WHERE (((x'')*(((vt1.c1) BETWEEN (t1.c0) AND (vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, t1.c0, v0.c0, vt0.c0)) BETWEEN ((((((((((vt1.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c2)))OR(t1.c0)), ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)), CASE WHEN v0.c0 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((vt1.c1))))) AND ((vt1.c1 COLLATE NOCASE, ((0.8409965014377498) IS TRUE), (('131590421')LIKE(vt0.c1)), (((vt1.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (vt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')*(((vt1.c1) BETWEEN (t1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, t1 ORDER BY (((vt0.c1, vt0.c1, t1.c0, v0.c0, vt0.c0)) BETWEEN ((((((((((vt1.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c2)))OR(t1.c0)), ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)), CASE WHEN v0.c0 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((vt1.c1))))) AND ((vt1.c1 COLLATE NOCASE, ((0.8409965014377498) IS TRUE), (('131590421')LIKE(vt0.c1)), (((vt1.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (vt1.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1, t1 WHERE (((x'')*(((vt1.c1) BETWEEN (t1.c0) AND (vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, t1.c0, v0.c0, vt0.c0)) BETWEEN ((((((((((vt1.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c2)))OR(t1.c0)), ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)), CASE WHEN v0.c0 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((vt1.c1))))) AND ((vt1.c1 COLLATE NOCASE, ((0.8409965014377498) IS TRUE), (('131590421')LIKE(vt0.c1)), (((vt1.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (vt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')*(((vt1.c1) BETWEEN (t1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1, t1 ORDER BY (((vt0.c1, vt0.c1, t1.c0, v0.c0, vt0.c0)) BETWEEN ((((((((((vt1.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c2)))OR(t1.c0)), ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)), CASE WHEN v0.c0 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((vt1.c1))))) AND ((vt1.c1 COLLATE NOCASE, ((0.8409965014377498) IS TRUE), (('131590421')LIKE(vt0.c1)), (((vt1.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (vt1.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1, t1 WHERE (((x'')*(((vt1.c1) BETWEEN (t1.c0) AND (vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, t1.c0, v0.c0, vt0.c0)) BETWEEN ((((((((((vt1.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c2)))OR(t1.c0)), ((vt1.c1) NOT BETWEEN (v0.c0) AND (vt1.c0)), CASE WHEN v0.c0 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((vt1.c1))))) AND ((vt1.c1 COLLATE NOCASE, ((0.8409965014377498) IS TRUE), (('131590421')LIKE(vt0.c1)), (((vt1.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (vt1.c1))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((LIKE(vt1.c2, vt1.c0, '0'))) AND ((CAST(vt1.c1 AS INTEGER))))) ORDER BY ((((vt1.c0) BETWEEN (0.10910907818768856) AND (vt1.c0))) IS TRUE)  NULLS LAST, CAST(HEX(vt1.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) NOT BETWEEN ((LIKE(vt1.c2, vt1.c0, '0'))) AND ((CAST(vt1.c1 AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (0.10910907818768856) AND (vt1.c0))) IS TRUE)  NULLS LAST, CAST(HEX(vt1.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((LIKE(vt1.c2, vt1.c0, '0'))) AND ((CAST(vt1.c1 AS INTEGER))))) ORDER BY ((((vt1.c0) BETWEEN (0.10910907818768856) AND (vt1.c0))) IS TRUE)  NULLS LAST, CAST(HEX(vt1.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) NOT BETWEEN ((LIKE(vt1.c2, vt1.c0, '0'))) AND ((CAST(vt1.c1 AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (0.10910907818768856) AND (vt1.c0))) IS TRUE)  NULLS LAST, CAST(HEX(vt1.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((LIKE(vt1.c2, vt1.c0, '0'))) AND ((CAST(vt1.c1 AS INTEGER))))) ORDER BY ((((vt1.c0) BETWEEN (0.10910907818768856) AND (vt1.c0))) IS TRUE)  NULLS LAST, CAST(HEX(vt1.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, v0, t1 WHERE (CASE 2.121994523E9  WHEN x'' COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE 2.121994523E9  WHEN x'' COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, vt1, v0, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, t1 WHERE (CASE 2.121994523E9  WHEN x'' COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE 2.121994523E9  WHEN x'' COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, vt1, v0, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, t1 WHERE (CASE 2.121994523E9  WHEN x'' COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) END);
SELECT * FROM t1, v0, vt1 WHERE (((json_valid(v0.c0)) NOT BETWEEN ((vt1.c2 IN (t1.c0, v0.c0))) AND ((((vt1.c1))<>((vt1.c1)))))) ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(v0.c0)) NOT BETWEEN ((vt1.c2 IN (t1.c0, v0.c0))) AND ((((vt1.c1))!=((vt1.c1)))))) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE);
SELECT * FROM t1, v0, vt1 WHERE (((json_valid(v0.c0)) NOT BETWEEN ((vt1.c2 IN (t1.c0, v0.c0))) AND ((((vt1.c1))<>((vt1.c1)))))) ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(v0.c0)) NOT BETWEEN ((vt1.c2 IN (t1.c0, v0.c0))) AND ((((vt1.c1))!=((vt1.c1)))))) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE);
SELECT * FROM t1, v0, vt1 WHERE (((json_valid(v0.c0)) NOT BETWEEN ((vt1.c2 IN (t1.c0, v0.c0))) AND ((((vt1.c1))<>((vt1.c1)))))) ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE;
SELECT * FROM t1, vt0, v0, vt1 WHERE ((((CASE vt0.c1  WHEN vt1.c2 THEN 0.09459967377207756 END))<=(((x'' IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c1  WHEN vt1.c2 THEN 0.09459967377207756 END))<=(((x'' IN (vt1.c0)))))) IS TRUE)  as count FROM t1, vt0, v0, vt1);
SELECT * FROM t1, vt0, v0, vt1 WHERE ((((CASE vt0.c1  WHEN vt1.c2 THEN 0.09459967377207756 END))<=(((x'' IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c1  WHEN vt1.c2 THEN 0.09459967377207756 END))<=(((x'' IN (vt1.c0)))))) IS TRUE)  as count FROM t1, vt0, v0, vt1);
SELECT * FROM t1, vt0, v0, vt1 WHERE ((((CASE vt0.c1  WHEN vt1.c2 THEN 0.09459967377207756 END))<=(((x'' IN (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN v0 ON vt1.c2 WHERE ((((vt1.c1)>=(v0.c0)) IN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c2)))))) ORDER BY ((LIKELY(v0.c0)) BETWEEN (vt1.c0) AND ((+ (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)>=(v0.c0)) IN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c2)))))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN v0 ON vt1.c2 ORDER BY ((LIKELY(v0.c0)) BETWEEN (vt1.c0) AND ((+ (t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN v0 ON vt1.c2 WHERE ((((vt1.c1)>=(v0.c0)) IN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c2)))))) ORDER BY ((LIKELY(v0.c0)) BETWEEN (vt1.c0) AND ((+ (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)>=(v0.c0)) IN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c2)))))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN v0 ON vt1.c2 ORDER BY ((LIKELY(v0.c0)) BETWEEN (vt1.c0) AND ((+ (t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN v0 ON vt1.c2 WHERE ((((vt1.c1)>=(v0.c0)) IN ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c2)))))) ORDER BY ((LIKELY(v0.c0)) BETWEEN (vt1.c0) AND ((+ (t1.c0)))) ASC;
SELECT ALL COUNT(*) FROM t1, vt1 NOT INDEXED, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1 NOT INDEXED, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1 NOT INDEXED, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM t1, vt1, v0 WHERE (x'59d1');
SELECT SUM(count) FROM (SELECT ((x'59d1') IS TRUE)  as count FROM t1, vt1, v0);
SELECT ALL COUNT(*) FROM t1, vt1, v0 WHERE (x'59d1');
SELECT SUM(count) FROM (SELECT ((x'59d1') IS TRUE)  as count FROM t1, vt1, v0);
SELECT ALL COUNT(*) FROM t1, vt1, v0 WHERE (x'59d1');
SELECT * FROM t1, v0, vt1, vt0 WHERE (((CASE t1.c0  WHEN vt0.c1 THEN vt1.c2 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 END)=(((vt1.c0)/(vt1.c2))))) ORDER BY ((CAST(vt1.c0 AS INTEGER)) BETWEEN (CAST(5.61096487E8 AS BLOB)) AND (((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(t1.c0)))) ASC  NULLS LAST, LIKELIHOOD(DISTINCT ((v0.c0) NOT BETWEEN (vt1.c2) AND ('\n桚')), 0.30928636856514236), CAST(CAST(vt1.c0 AS TEXT) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN vt0.c1 THEN vt1.c2 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 END)=(((vt1.c0)/(vt1.c2))))) IS TRUE)  as count FROM t1, v0, vt1, vt0 ORDER BY ((CAST(vt1.c0 AS INTEGER)) BETWEEN (CAST(5.61096487E8 AS BLOB)) AND (((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(t1.c0)))) ASC  NULLS LAST, LIKELIHOOD(DISTINCT ((v0.c0) NOT BETWEEN (vt1.c2) AND ('\n桚')), 0.30928636856514236), CAST(CAST(vt1.c0 AS TEXT) AS BLOB)  NULLS LAST);
SELECT * FROM t1, v0, vt1, vt0 WHERE (((CASE t1.c0  WHEN vt0.c1 THEN vt1.c2 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 END)=(((vt1.c0)/(vt1.c2))))) ORDER BY ((CAST(vt1.c0 AS INTEGER)) BETWEEN (CAST(5.61096487E8 AS BLOB)) AND (((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(t1.c0)))) ASC  NULLS LAST, LIKELIHOOD(DISTINCT ((v0.c0) NOT BETWEEN (vt1.c2) AND ('\n桚')), 0.30928636856514236), CAST(CAST(vt1.c0 AS TEXT) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN vt0.c1 THEN vt1.c2 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 END)=(((vt1.c0)/(vt1.c2))))) IS TRUE)  as count FROM t1, v0, vt1, vt0 ORDER BY ((CAST(vt1.c0 AS INTEGER)) BETWEEN (CAST(5.61096487E8 AS BLOB)) AND (((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(t1.c0)))) ASC  NULLS LAST, LIKELIHOOD(DISTINCT ((v0.c0) NOT BETWEEN (vt1.c2) AND ('\n桚')), 0.30928636856514236), CAST(CAST(vt1.c0 AS TEXT) AS BLOB)  NULLS LAST);
SELECT * FROM t1, v0, vt1, vt0 WHERE (((CASE t1.c0  WHEN vt0.c1 THEN vt1.c2 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 END)=(((vt1.c0)/(vt1.c2))))) ORDER BY ((CAST(vt1.c0 AS INTEGER)) BETWEEN (CAST(5.61096487E8 AS BLOB)) AND (((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1)))OR(t1.c0)))) ASC  NULLS LAST, LIKELIHOOD(DISTINCT ((v0.c0) NOT BETWEEN (vt1.c2) AND ('\n桚')), 0.30928636856514236), CAST(CAST(vt1.c0 AS TEXT) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (~ ((vt1.c0 IN ()))) CROSS JOIN v0 ON CAST(((((t1.c0)AND(vt0.c1)))AND(vt0.c0)) AS REAL) LEFT OUTER JOIN t1 ON ((((v0.c0) ISNULL))&(vt0.c0 COLLATE BINARY)) WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 ELSE vt1.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c0 THEN t1.c0 ELSE vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (~ ((vt1.c0 IN ()))) CROSS JOIN v0 ON CAST(((((t1.c0)AND(vt0.c1)))AND(vt0.c0)) AS REAL) LEFT OUTER JOIN t1 ON ((((v0.c0) ISNULL))&(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (~ ((vt1.c0 IN ()))) CROSS JOIN v0 ON CAST(((((t1.c0)AND(vt0.c1)))AND(vt0.c0)) AS REAL) LEFT OUTER JOIN t1 ON ((((v0.c0) ISNULL))&(vt0.c0 COLLATE BINARY)) WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 ELSE vt1.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c0 THEN t1.c0 ELSE vt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (~ ((vt1.c0 IN ()))) CROSS JOIN v0 ON CAST(((((t1.c0)AND(vt0.c1)))AND(vt0.c0)) AS REAL) LEFT OUTER JOIN t1 ON ((((v0.c0) ISNULL))&(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE (vt0.c1) ORDER BY (+ (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, v0, t1, vt0 ORDER BY (+ (vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE (vt0.c1) ORDER BY (+ (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, v0, t1, vt0 ORDER BY (+ (vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE (vt0.c1) ORDER BY (+ (vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, t1 WHERE ((((((vt0.c0))!=((vt0.c1))))-(CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c0 END))) ORDER BY CASE WHEN (- (t1.c0)) THEN (vt0.c0 IN ()) WHEN (- (vt0.c1)) THEN LIKELY(t1.c0) WHEN ((t1.c0)%(vt0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)/('-1908274292')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c1))))-(CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY CASE WHEN (- (t1.c0)) THEN (vt0.c0 IN ()) WHEN (- (vt0.c1)) THEN LIKELY(t1.c0) WHEN ((t1.c0)%(vt0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)/('-1908274292')) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t1 WHERE ((((((vt0.c0))!=((vt0.c1))))-(CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c0 END))) ORDER BY CASE WHEN (- (t1.c0)) THEN (vt0.c0 IN ()) WHEN (- (vt0.c1)) THEN LIKELY(t1.c0) WHEN ((t1.c0)%(vt0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)/('-1908274292')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c1))))-(CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY CASE WHEN (- (t1.c0)) THEN (vt0.c0 IN ()) WHEN (- (vt0.c1)) THEN LIKELY(t1.c0) WHEN ((t1.c0)%(vt0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)/('-1908274292')) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, t1 WHERE ((((((vt0.c0))!=((vt0.c1))))-(CASE vt0.c1  WHEN t1.c0 THEN vt0.c1 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN vt0.c0 END))) ORDER BY CASE WHEN (- (t1.c0)) THEN (vt0.c0 IN ()) WHEN (- (vt0.c1)) THEN LIKELY(t1.c0) WHEN ((t1.c0)%(vt0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)/('-1908274292')) END DESC  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (CASE WHEN vt0.c0 THEN (+ (0.6835832305595975)) WHEN CHAR(vt0.c0) THEN ((((NULL)AND(t1.c0)))AND(vt0.c1)) WHEN 0.24115161287267806 THEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (+ (0.6835832305595975)) WHEN CHAR(vt0.c0) THEN ((((NULL)AND(t1.c0)))AND(vt0.c1)) WHEN 0.24115161287267806 THEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE WHEN vt0.c0 THEN (+ (0.6835832305595975)) WHEN CHAR(vt0.c0) THEN ((((NULL)AND(t1.c0)))AND(vt0.c1)) WHEN 0.24115161287267806 THEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (+ (0.6835832305595975)) WHEN CHAR(vt0.c0) THEN ((((NULL)AND(t1.c0)))AND(vt0.c1)) WHEN 0.24115161287267806 THEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE WHEN vt0.c0 THEN (+ (0.6835832305595975)) WHEN CHAR(vt0.c0) THEN ((((NULL)AND(t1.c0)))AND(vt0.c1)) WHEN 0.24115161287267806 THEN ((((vt0.c0)OR(t1.c0)))AND(vt0.c0)) END);
SELECT * FROM vt0, vt1, t1 WHERE (LENGTH((vt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((vt1.c2 IN ()))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE (LENGTH((vt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((vt1.c2 IN ()))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE (LENGTH((vt1.c2 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN ('') AND (vt0.c1))) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN ('') AND (vt0.c1))) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN ('') AND (vt0.c1))) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN ('') AND (vt0.c1))) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN ('') AND (vt0.c1))) BETWEEN (((vt0.c1) IS FALSE)) AND (((vt0.c1)<<(vt0.c0)))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT TRIM(vt1.c2, vt1.c1), ((vt0.c1) IS FALSE)) INNER JOIN t1 ON (((LENGTH(vt1.c0)))>(((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) WHERE ((NOT (vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT TRIM(vt1.c2, vt1.c1), ((vt0.c1) IS FALSE)) INNER JOIN t1 ON (((LENGTH(vt1.c0)))>(((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT TRIM(vt1.c2, vt1.c1), ((vt0.c1) IS FALSE)) INNER JOIN t1 ON (((LENGTH(vt1.c0)))>(((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) WHERE ((NOT (vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT TRIM(vt1.c2, vt1.c1), ((vt0.c1) IS FALSE)) INNER JOIN t1 ON (((LENGTH(vt1.c0)))>(((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT TRIM(vt1.c2, vt1.c1), ((vt0.c1) IS FALSE)) INNER JOIN t1 ON (((LENGTH(vt1.c0)))>(((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) WHERE ((NOT (vt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 CROSS JOIN t1 ON v0.c0 WHERE ((NOT (x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (x'' COLLATE RTRIM))) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON v0.c0);
SELECT COUNT(*) FROM v0 CROSS JOIN t1 ON v0.c0 WHERE ((NOT (x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (x'' COLLATE RTRIM))) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON v0.c0);
SELECT COUNT(*) FROM v0 CROSS JOIN t1 ON v0.c0 WHERE ((NOT (x'' COLLATE RTRIM)));
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND((((vt1.c0))>=((vt1.c1))))))AND(UNLIKELY(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND((((vt1.c0))>=((vt1.c1))))))AND(UNLIKELY(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND((((vt1.c0))>=((vt1.c1))))))AND(UNLIKELY(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND((((vt1.c0))>=((vt1.c1))))))AND(UNLIKELY(vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))AND((((vt1.c0))>=((vt1.c1))))))AND(UNLIKELY(vt1.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1 WHERE (((((0.14344888915487974)&(vt1.c1)))%((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.14344888915487974)&(vt1.c1)))%((- (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((0.14344888915487974)&(vt1.c1)))%((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.14344888915487974)&(vt1.c1)))%((- (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((0.14344888915487974)&(vt1.c1)))%((- (vt1.c1)))));
SELECT COUNT(*) FROM v0, t1, vt1 WHERE (((((t1.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0, t1, vt1);
SELECT COUNT(*) FROM v0, t1, vt1 WHERE (((((t1.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM v0, t1, vt1);
SELECT COUNT(*) FROM v0, t1, vt1 WHERE (((((t1.c0) NOTNULL)) ISNULL));
SELECT ALL COUNT(*) FROM v0, t1, vt0, vt1 WHERE (x'') ORDER BY CASE WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(vt0.c0 AS TEXT) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t1, vt0, vt1 ORDER BY CASE WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(vt0.c0 AS TEXT) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, vt0, vt1 WHERE (x'') ORDER BY CASE WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(vt0.c0 AS TEXT) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t1, vt0, vt1 ORDER BY CASE WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(vt0.c0 AS TEXT) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, vt0, vt1 WHERE (x'') ORDER BY CASE WHEN ((vt1.c1) BETWEEN (v0.c0) AND (vt1.c1)) THEN CAST(vt0.c0 AS TEXT) END ASC  NULLS FIRST;
SELECT * FROM vt1, v0, t1, vt0 WHERE ((NOT ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, v0, t1, vt0);
SELECT * FROM vt1, v0, t1, vt0 WHERE ((NOT ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, v0, t1, vt0);
SELECT * FROM vt1, v0, t1, vt0 WHERE ((NOT ((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((- (t1.c0)) COLLATE NOCASE) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), (((vt0.c0))<>((vt0.c1)))))<(((~ (t1.c0)), 0.37028999863589807 COLLATE NOCASE, NULLIF(t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT (((- (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST((vt0.c0 IN ()) AS BLOB) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), (((vt0.c0))<>((vt0.c1)))))<(((~ (t1.c0)), 0.37028999863589807 COLLATE NOCASE, NULLIF(t1.c0, t1.c0)))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((- (t1.c0)) COLLATE NOCASE) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), (((vt0.c0))<>((vt0.c1)))))<(((~ (t1.c0)), 0.37028999863589807 COLLATE NOCASE, NULLIF(t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT (((- (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST((vt0.c0 IN ()) AS BLOB) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), (((vt0.c0))<>((vt0.c1)))))<(((~ (t1.c0)), 0.37028999863589807 COLLATE NOCASE, NULLIF(t1.c0, t1.c0)))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((- (t1.c0)) COLLATE NOCASE) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) DESC  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), (((vt0.c0))<>((vt0.c1)))))<(((~ (t1.c0)), 0.37028999863589807 COLLATE NOCASE, NULLIF(t1.c0, t1.c0))));
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON LIKELY(DISTINCT CAST(v0.c0 AS TEXT)) FULL OUTER JOIN vt0 ON vt1.c2 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN (t1.c0, vt1.c0)))IS(((vt1.c0) IS TRUE))) WHERE (CAST(((vt1.c2) IS TRUE) AS TEXT)) ORDER BY (((t1.c0 IN (vt1.c1, t1.c0))) ISNULL), CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN ()) WHEN 0.8293857641290605 THEN vt1.c0 COLLATE NOCASE WHEN (+ (vt1.c0)) THEN vt1.c2 COLLATE RTRIM ELSE ((vt0.c1) IS FALSE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON LIKELY(DISTINCT CAST(v0.c0 AS TEXT)) FULL OUTER JOIN vt0 ON vt1.c2 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN (t1.c0, vt1.c0)))IS(((vt1.c0) IS TRUE))) ORDER BY (((t1.c0 IN (vt1.c1, t1.c0))) ISNULL), CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN ()) WHEN 0.8293857641290605 THEN vt1.c0 COLLATE NOCASE WHEN (+ (vt1.c0)) THEN vt1.c2 COLLATE RTRIM ELSE ((vt0.c1) IS FALSE) END ASC  NULLS FIRST);
SELECT ALL * FROM t1 FULL OUTER JOIN v0 ON LIKELY(DISTINCT CAST(v0.c0 AS TEXT)) FULL OUTER JOIN vt0 ON vt1.c2 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN (t1.c0, vt1.c0)))IS(((vt1.c0) IS TRUE))) WHERE (CAST(((vt1.c2) IS TRUE) AS TEXT)) ORDER BY (((t1.c0 IN (vt1.c1, t1.c0))) ISNULL), CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN ()) WHEN 0.8293857641290605 THEN vt1.c0 COLLATE NOCASE WHEN (+ (vt1.c0)) THEN vt1.c2 COLLATE RTRIM ELSE ((vt0.c1) IS FALSE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN v0 ON LIKELY(DISTINCT CAST(v0.c0 AS TEXT)) FULL OUTER JOIN vt0 ON vt1.c2 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN (t1.c0, vt1.c0)))IS(((vt1.c0) IS TRUE))) ORDER BY (((t1.c0 IN (vt1.c1, t1.c0))) ISNULL), CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c1 IN ()) WHEN 0.8293857641290605 THEN vt1.c0 COLLATE NOCASE WHEN (+ (vt1.c0)) THEN vt1.c2 COLLATE RTRIM ELSE ((vt0.c1) IS FALSE) END ASC  NULLS FIRST);
SELECT * FROM vt0, v0 LEFT OUTER JOIN t1 ON '' WHERE (((json_object(vt0.c0, v0.c0)) NOT BETWEEN (x'98a8') AND ((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt0.c0, v0.c0)) NOT BETWEEN (x'98a8') AND ((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t1 ON '');
SELECT * FROM vt0, v0 LEFT OUTER JOIN t1 ON '' WHERE (((json_object(vt0.c0, v0.c0)) NOT BETWEEN (x'98a8') AND ((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt0.c0, v0.c0)) NOT BETWEEN (x'98a8') AND ((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t1 ON '');
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||(CASE vt0.c0  WHEN 2.039939616E9 THEN vt0.c1 END)), vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||(CASE vt0.c0  WHEN 2.039939616E9 THEN vt0.c1 END)), vt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||(CASE vt0.c0  WHEN 2.039939616E9 THEN vt0.c1 END)), vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||(CASE vt0.c0  WHEN 2.039939616E9 THEN vt0.c1 END)), vt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||(CASE vt0.c0  WHEN 2.039939616E9 THEN vt0.c1 END)), vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t1 WHERE (((((((((((vt0.c1) NOT NULL))AND('(s v')))AND(((((v0.c0)OR(t1.c0)))AND(vt0.c0)))))AND(' 0z9')))OR((((v0.c0))=((vt0.c1)))))) ORDER BY (((t1.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND (((NULL IN ()))))  NULLS FIRST, ((t1.c0 COLLATE BINARY)GLOB((((vt0.c1, t1.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c1, vt0.c1)) AND ((t1.c0, 0X4cd4056, NULL))))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))<=(CASE WHEN vt0.c0 THEN NULL END));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOT NULL))AND('(s v')))AND(((((v0.c0)OR(t1.c0)))AND(vt0.c0)))))AND(' 0z9')))OR((((v0.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY (((t1.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND (((NULL IN ()))))  NULLS FIRST, ((t1.c0 COLLATE BINARY)GLOB((((vt0.c1, t1.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c1, vt0.c1)) AND ((t1.c0, 0X4cd4056, NULL))))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))<=(CASE WHEN vt0.c0 THEN NULL END)));
SELECT ALL * FROM vt0, v0, t1 WHERE (((((((((((vt0.c1) NOT NULL))AND('(s v')))AND(((((v0.c0)OR(t1.c0)))AND(vt0.c0)))))AND(' 0z9')))OR((((v0.c0))=((vt0.c1)))))) ORDER BY (((t1.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND (((NULL IN ()))))  NULLS FIRST, ((t1.c0 COLLATE BINARY)GLOB((((vt0.c1, t1.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c1, vt0.c1)) AND ((t1.c0, 0X4cd4056, NULL))))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))<=(CASE WHEN vt0.c0 THEN NULL END));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOT NULL))AND('(s v')))AND(((((v0.c0)OR(t1.c0)))AND(vt0.c0)))))AND(' 0z9')))OR((((v0.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY (((t1.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND (((NULL IN ()))))  NULLS FIRST, ((t1.c0 COLLATE BINARY)GLOB((((vt0.c1, t1.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c1, vt0.c1)) AND ((t1.c0, 0X4cd4056, NULL))))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))<=(CASE WHEN vt0.c0 THEN NULL END)));
SELECT ALL * FROM vt0, v0, t1 WHERE (((((((((((vt0.c1) NOT NULL))AND('(s v')))AND(((((v0.c0)OR(t1.c0)))AND(vt0.c0)))))AND(' 0z9')))OR((((v0.c0))=((vt0.c1)))))) ORDER BY (((t1.c0)) BETWEEN ((((v0.c0)|(v0.c0)))) AND (((NULL IN ()))))  NULLS FIRST, ((t1.c0 COLLATE BINARY)GLOB((((vt0.c1, t1.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c1, vt0.c1)) AND ((t1.c0, 0X4cd4056, NULL))))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))<=(CASE WHEN vt0.c0 THEN NULL END));
SELECT COUNT(*) FROM vt0 NOT INDEXED, t1, vt1, v0 WHERE (CASE CAST(vt1.c0 AS TEXT)  WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt1.c2 AS TEXT) WHEN x'' THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT vt1.c2, 0.4139112207286272) END) ORDER BY ((NULL)IS NOT((~ (vt1.c0))))  NULLS LAST, ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c0 END) NOT NULL) DESC  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS TEXT)  WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt1.c2 AS TEXT) WHEN x'' THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT vt1.c2, 0.4139112207286272) END) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY ((NULL)IS NOT((~ (vt1.c0))))  NULLS LAST, ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c0 END) NOT NULL) DESC  NULLS FIRST, v0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t1, vt1, v0 WHERE (CASE CAST(vt1.c0 AS TEXT)  WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt1.c2 AS TEXT) WHEN x'' THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT vt1.c2, 0.4139112207286272) END) ORDER BY ((NULL)IS NOT((~ (vt1.c0))))  NULLS LAST, ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c0 END) NOT NULL) DESC  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS TEXT)  WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt1.c2 AS TEXT) WHEN x'' THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT vt1.c2, 0.4139112207286272) END) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY ((NULL)IS NOT((~ (vt1.c0))))  NULLS LAST, ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c0 END) NOT NULL) DESC  NULLS FIRST, v0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t1, vt1, v0 WHERE (CASE CAST(vt1.c0 AS TEXT)  WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt1.c2 AS TEXT) WHEN x'' THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT vt1.c2, 0.4139112207286272) END) ORDER BY ((NULL)IS NOT((~ (vt1.c0))))  NULLS LAST, ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c0 END) NOT NULL) DESC  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE ((CASE WHEN vt0.c0 THEN v0.c0 END IN (CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN v0.c0 END IN (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE ((CASE WHEN vt0.c0 THEN v0.c0 END IN (CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN v0.c0 END IN (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE ((CASE WHEN vt0.c0 THEN v0.c0 END IN (CAST(vt0.c1 AS BLOB))));
SELECT COUNT(*) FROM t1, vt1, vt0, v0 WHERE (NULL) ORDER BY ((NULL)+((+ (vt0.c1)))) ASC  NULLS FIRST, (((((((((vt1.c1 IN (5.0542905E7)))OR(((vt1.c1) NOT BETWEEN (vt1.c2) AND (0.9587109413765328)))))AND((vt0.c0 IN ()))))AND(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(v0.c0));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY ((NULL)+((+ (vt0.c1)))) ASC  NULLS FIRST, (((((((((vt1.c1 IN (5.0542905E7)))OR(((vt1.c1) NOT BETWEEN (vt1.c2) AND (0.9587109413765328)))))AND((vt0.c0 IN ()))))AND(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(v0.c0)));
SELECT COUNT(*) FROM t1, vt1, vt0, v0 WHERE (NULL) ORDER BY ((NULL)+((+ (vt0.c1)))) ASC  NULLS FIRST, (((((((((vt1.c1 IN (5.0542905E7)))OR(((vt1.c1) NOT BETWEEN (vt1.c2) AND (0.9587109413765328)))))AND((vt0.c0 IN ()))))AND(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(v0.c0));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY ((NULL)+((+ (vt0.c1)))) ASC  NULLS FIRST, (((((((((vt1.c1 IN (5.0542905E7)))OR(((vt1.c1) NOT BETWEEN (vt1.c2) AND (0.9587109413765328)))))AND((vt0.c0 IN ()))))AND(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(v0.c0)));
SELECT COUNT(*) FROM t1, vt1, vt0, v0 WHERE (NULL) ORDER BY ((NULL)+((+ (vt0.c1)))) ASC  NULLS FIRST, (((((((((vt1.c1 IN (5.0542905E7)))OR(((vt1.c1) NOT BETWEEN (vt1.c2) AND (0.9587109413765328)))))AND((vt0.c0 IN ()))))AND(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(v0.c0));
SELECT COUNT(*) FROM vt1, t1 INNER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 END)) AND ((((vt0.c0) IS FALSE)))) LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (CAST(x'8ea60d3a' AS TEXT)) AND ((NOT (vt1.c0)))) WHERE ((((vt0.c1, vt1.c1, vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt1.c1)), UPPER(v0.c0), UPPER(DISTINCT v0.c0))) AND ((((vt1.c1)<(vt1.c0)), -1.041735101E9, CASE ''  WHEN vt1.c2 THEN t1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt1.c1, vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt1.c1)), UPPER(v0.c0), UPPER(DISTINCT v0.c0))) AND ((((vt1.c1)<(vt1.c0)), -1.041735101E9, CASE ''  WHEN vt1.c2 THEN t1.c0 END)))) IS TRUE)  as count FROM vt1, t1 INNER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 END)) AND ((((vt0.c0) IS FALSE)))) LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (CAST(x'8ea60d3a' AS TEXT)) AND ((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt1, t1 INNER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 END)) AND ((((vt0.c0) IS FALSE)))) LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (CAST(x'8ea60d3a' AS TEXT)) AND ((NOT (vt1.c0)))) WHERE ((((vt0.c1, vt1.c1, vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt1.c1)), UPPER(v0.c0), UPPER(DISTINCT v0.c0))) AND ((((vt1.c1)<(vt1.c0)), -1.041735101E9, CASE ''  WHEN vt1.c2 THEN t1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt1.c1, vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt1.c1)), UPPER(v0.c0), UPPER(DISTINCT v0.c0))) AND ((((vt1.c1)<(vt1.c0)), -1.041735101E9, CASE ''  WHEN vt1.c2 THEN t1.c0 END)))) IS TRUE)  as count FROM vt1, t1 INNER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 END)) AND ((((vt0.c0) IS FALSE)))) LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (CAST(x'8ea60d3a' AS TEXT)) AND ((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt1, t1 INNER JOIN v0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c2 END)) AND ((((vt0.c0) IS FALSE)))) LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (CAST(x'8ea60d3a' AS TEXT)) AND ((NOT (vt1.c0)))) WHERE ((((vt0.c1, vt1.c1, vt0.c0)) BETWEEN ((((vt0.c0)GLOB(vt1.c1)), UPPER(v0.c0), UPPER(DISTINCT v0.c0))) AND ((((vt1.c1)<(vt1.c0)), -1.041735101E9, CASE ''  WHEN vt1.c2 THEN t1.c0 END))));
SELECT * FROM t1 WHERE (CAST(((t1.c0)*(t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)*(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0)*(t1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)*(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0)*(t1.c0)) AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c0)AND(vt1.c1)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))&((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt1.c1)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))&((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c0)AND(vt1.c1)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))&((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt1.c1)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))&((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c0)AND(vt1.c1)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))&((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))));
SELECT * FROM t1, vt1, v0 WHERE (vt1.c0) ORDER BY '|W' ASC, (NOT ((((v0.c0))>((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt1, v0 NOT INDEXED ORDER BY '|W' ASC, (NOT ((((v0.c0))>((vt1.c0))))) ASC  NULLS FIRST);
SELECT * FROM t1, vt1, v0 WHERE (vt1.c0) ORDER BY '|W' ASC, (NOT ((((v0.c0))>((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt1, v0 NOT INDEXED ORDER BY '|W' ASC, (NOT ((((v0.c0))>((vt1.c0))))) ASC  NULLS FIRST);
SELECT * FROM t1, vt1, v0 WHERE (vt1.c0) ORDER BY '|W' ASC, (NOT ((((v0.c0))>((vt1.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1, vt1 NATURAL JOIN v0 WHERE ((+ (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ORDER BY (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 NATURAL JOIN v0 ORDER BY (+ (vt0.c0)));
SELECT * FROM vt0, t1, vt1 NATURAL JOIN v0 WHERE ((+ (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ORDER BY (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 NATURAL JOIN v0 ORDER BY (+ (vt0.c0)));
SELECT * FROM vt0, t1, vt1 NATURAL JOIN v0 WHERE ((+ (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ORDER BY (+ (vt0.c0));
SELECT COUNT(*) FROM t1 NOT INDEXED NATURAL JOIN vt1 WHERE ((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c2)))) BETWEEN (((vt1.c1)*(vt1.c2))) AND ((vt1.c2 IN (x'dbdec96bddec', t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c2)))) BETWEEN (((vt1.c1)*(vt1.c2))) AND ((vt1.c2 IN (x'dbdec96bddec', t1.c0))))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t1 NOT INDEXED NATURAL JOIN vt1 WHERE ((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c2)))) BETWEEN (((vt1.c1)*(vt1.c2))) AND ((vt1.c2 IN (x'dbdec96bddec', t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c2)))) BETWEEN (((vt1.c1)*(vt1.c2))) AND ((vt1.c2 IN (x'dbdec96bddec', t1.c0))))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t1 NOT INDEXED NATURAL JOIN vt1 WHERE ((((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c2)))) BETWEEN (((vt1.c1)*(vt1.c2))) AND ((vt1.c2 IN (x'dbdec96bddec', t1.c0)))));
SELECT * FROM t1, vt1 NATURAL JOIN v0 WHERE (((LIKELIHOOD(DISTINCT t1.c0, 0.4710205898703038)) BETWEEN (((((v0.c0)OR(NULL)))OR(t1.c0))) AND (v0.c0))) ORDER BY ((((981865179)AND(CASE WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 END)))OR((((v0.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c0, vt1.c2, t1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT t1.c0, 0.4710205898703038)) BETWEEN (((((v0.c0)OR(NULL)))OR(t1.c0))) AND (v0.c0))) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN v0 ORDER BY ((((981865179)AND(CASE WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 END)))OR((((v0.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c0, vt1.c2, t1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM t1, vt1 NATURAL JOIN v0 WHERE (((LIKELIHOOD(DISTINCT t1.c0, 0.4710205898703038)) BETWEEN (((((v0.c0)OR(NULL)))OR(t1.c0))) AND (v0.c0))) ORDER BY ((((981865179)AND(CASE WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 END)))OR((((v0.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c0, vt1.c2, t1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT t1.c0, 0.4710205898703038)) BETWEEN (((((v0.c0)OR(NULL)))OR(t1.c0))) AND (v0.c0))) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN v0 ORDER BY ((((981865179)AND(CASE WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 END)))OR((((v0.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c0, vt1.c2, t1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM t1, vt1 NATURAL JOIN v0 WHERE (((LIKELIHOOD(DISTINCT t1.c0, 0.4710205898703038)) BETWEEN (((((v0.c0)OR(NULL)))OR(t1.c0))) AND (v0.c0))) ORDER BY ((((981865179)AND(CASE WHEN vt1.c0 THEN t1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 END)))OR((((v0.c0, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c0, vt1.c2, t1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt1, v0);
SELECT ALL COUNT(*) FROM t1, vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt1, v0);
SELECT ALL COUNT(*) FROM t1, vt1, v0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c2 THEN NULL END, COALESCE(vt1.c1, '', vt0.c1, vt0.c0), 1699225931)) AND ((((vt0.c0) ISNULL), v0.c0, (~ (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c2 THEN NULL END, COALESCE(vt1.c1, '', vt0.c1, vt0.c0), 1699225931)) AND ((((vt0.c0) ISNULL), v0.c0, (~ (vt1.c1)))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c2 THEN NULL END, COALESCE(vt1.c1, '', vt0.c1, vt0.c0), 1699225931)) AND ((((vt0.c0) ISNULL), v0.c0, (~ (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c2 THEN NULL END, COALESCE(vt1.c1, '', vt0.c1, vt0.c0), 1699225931)) AND ((((vt0.c0) ISNULL), v0.c0, (~ (vt1.c1)))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c2 THEN NULL END, COALESCE(vt1.c1, '', vt0.c1, vt0.c0), 1699225931)) AND ((((vt0.c0) ISNULL), v0.c0, (~ (vt1.c1))))));
SELECT ALL * FROM t1, vt1 WHERE ((((vt1.c0)>>(vt1.c0)) IN (CAST('640875707' AS REAL)))) ORDER BY CASE WHEN 0.5531109388369011 THEN vt1.c2 END;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>>(vt1.c0)) IN (CAST('640875707' AS REAL)))) IS TRUE)  as count FROM t1, vt1 ORDER BY CASE WHEN 0.5531109388369011 THEN vt1.c2 END);
SELECT ALL * FROM t1, vt1 WHERE ((((vt1.c0)>>(vt1.c0)) IN (CAST('640875707' AS REAL)))) ORDER BY CASE WHEN 0.5531109388369011 THEN vt1.c2 END;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>>(vt1.c0)) IN (CAST('640875707' AS REAL)))) IS TRUE)  as count FROM t1, vt1 ORDER BY CASE WHEN 0.5531109388369011 THEN vt1.c2 END);
SELECT ALL * FROM t1, vt1 WHERE ((((vt1.c0)>>(vt1.c0)) IN (CAST('640875707' AS REAL)))) ORDER BY CASE WHEN 0.5531109388369011 THEN vt1.c2 END;
SELECT ALL COUNT(*) FROM t1 INDEXED BY i37, vt1 WHERE (COALESCE(DISTINCT (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), (NOT (vt1.c0)), ((t1.c0)-(t1.c0)), (vt1.c0 IN ()), TYPEOF(DISTINCT t1.c0), ((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (~ ((~ (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), (NOT (vt1.c0)), ((t1.c0)-(t1.c0)), (vt1.c0 IN ()), TYPEOF(DISTINCT t1.c0), ((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM t1 INDEXED BY i37, vt1 ORDER BY (~ ((~ (t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i37, vt1 WHERE (COALESCE(DISTINCT (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), (NOT (vt1.c0)), ((t1.c0)-(t1.c0)), (vt1.c0 IN ()), TYPEOF(DISTINCT t1.c0), ((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (~ ((~ (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), (NOT (vt1.c0)), ((t1.c0)-(t1.c0)), (vt1.c0 IN ()), TYPEOF(DISTINCT t1.c0), ((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM t1 INDEXED BY i37, vt1 ORDER BY (~ ((~ (t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i37, vt1 WHERE (COALESCE(DISTINCT (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), (NOT (vt1.c0)), ((t1.c0)-(t1.c0)), (vt1.c0 IN ()), TYPEOF(DISTINCT t1.c0), ((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (~ ((~ (t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE)) IS FALSE)) ORDER BY ((((vt1.c2)<=(vt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c2)<=(vt0.c1))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE)) IS FALSE)) ORDER BY ((((vt1.c2)<=(vt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c2)<=(vt0.c1))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) IS FALSE)) IS FALSE)) ORDER BY ((((vt1.c2)<=(vt0.c1))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)LIKE(vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt1.c1)LIKE(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)LIKE(vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt1.c1)LIKE(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)LIKE(vt1.c1 COLLATE BINARY)));
SELECT ALL * FROM vt1, t1 WHERE ((CAST(vt1.c0 AS INTEGER) IN (TIME(vt1.c1, vt1.c1, t1.c0)))) ORDER BY (NOT ((vt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN (TIME(vt1.c1, vt1.c1, t1.c0)))) IS TRUE)  as count FROM vt1, t1 ORDER BY (NOT ((vt1.c1 IN ()))) DESC);
SELECT ALL * FROM vt1, t1 WHERE ((CAST(vt1.c0 AS INTEGER) IN (TIME(vt1.c1, vt1.c1, t1.c0)))) ORDER BY (NOT ((vt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN (TIME(vt1.c1, vt1.c1, t1.c0)))) IS TRUE)  as count FROM vt1, t1 ORDER BY (NOT ((vt1.c1 IN ()))) DESC);
SELECT ALL * FROM vt1, t1 WHERE ((CAST(vt1.c0 AS INTEGER) IN (TIME(vt1.c1, vt1.c1, t1.c0)))) ORDER BY (NOT ((vt1.c1 IN ()))) DESC;
SELECT * FROM vt1, vt0, t1 WHERE (CASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN 'kwB''A' END THEN (((t1.c0))==((vt0.c1))) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN 'kwB''A' END THEN (((t1.c0))=((vt0.c1))) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (CASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN 'kwB''A' END THEN (((t1.c0))==((vt0.c1))) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN 'kwB''A' END THEN (((t1.c0))=((vt0.c1))) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (CASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN 'kwB''A' END THEN (((t1.c0))==((vt0.c1))) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END);
SELECT * FROM vt1, v0 WHERE ((((v0.c0) NOTNULL) IN (vt1.c0 COLLATE NOCASE, (((vt1.c0))<=((vt1.c2)))))) ORDER BY ((((((vt1.c1) IS TRUE))AND(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c2)))))OR(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN (vt1.c0 COLLATE NOCASE, (((vt1.c0))<=((vt1.c2)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((vt1.c1) IS TRUE))AND(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c2)))))OR(v0.c0 COLLATE RTRIM)) ASC);
SELECT * FROM vt1, v0 WHERE ((((v0.c0) NOTNULL) IN (vt1.c0 COLLATE NOCASE, (((vt1.c0))<=((vt1.c2)))))) ORDER BY ((((((vt1.c1) IS TRUE))AND(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c2)))))OR(v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN (vt1.c0 COLLATE NOCASE, (((vt1.c0))<=((vt1.c2)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((vt1.c1) IS TRUE))AND(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c2)))))OR(v0.c0 COLLATE RTRIM)) ASC);
SELECT * FROM vt1, v0 WHERE ((((v0.c0) NOTNULL) IN (vt1.c0 COLLATE NOCASE, (((vt1.c0))<=((vt1.c2)))))) ORDER BY ((((((vt1.c1) IS TRUE))AND(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c2)))))OR(v0.c0 COLLATE RTRIM)) ASC;
SELECT ALL * FROM v0, vt0, t1, vt1 WHERE (MIN(NULL, CAST(v0.c0 AS REAL), TRIM('0.764207812993951'), TYPEOF(vt0.c1), x'', vt1.c0)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((MIN(NULL, CAST(v0.c0 AS REAL), TRIM('0.764207812993951'), TYPEOF(vt0.c1), x'', vt1.c0)) IS TRUE)  as count FROM v0, vt0, t1, vt1 ORDER BY vt1.c0);
SELECT ALL * FROM v0, vt0, t1, vt1 WHERE (MIN(NULL, CAST(v0.c0 AS REAL), TRIM('0.764207812993951'), TYPEOF(vt0.c1), x'', vt1.c0)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((MIN(NULL, CAST(v0.c0 AS REAL), TRIM('0.764207812993951'), TYPEOF(vt0.c1), x'', vt1.c0)) IS TRUE)  as count FROM v0, vt0, t1, vt1 ORDER BY vt1.c0);
SELECT ALL * FROM v0, vt0, t1, vt1 WHERE (MIN(NULL, CAST(v0.c0 AS REAL), TRIM('0.764207812993951'), TYPEOF(vt0.c1), x'', vt1.c0)) ORDER BY vt1.c0;
SELECT COUNT(*) FROM vt0, t1 WHERE (IFNULL(DISTINCT ((vt0.c1) BETWEEN (t1.c0) AND (t1.c0)), (('-355424196') NOT BETWEEN (t1.c0) AND (vt0.c1)))) ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c1) BETWEEN (t1.c0) AND (t1.c0)), (('-355424196') NOT BETWEEN (t1.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE (IFNULL(DISTINCT ((vt0.c1) BETWEEN (t1.c0) AND (t1.c0)), (('-355424196') NOT BETWEEN (t1.c0) AND (vt0.c1)))) ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c1) BETWEEN (t1.c0) AND (t1.c0)), (('-355424196') NOT BETWEEN (t1.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE (IFNULL(DISTINCT ((vt0.c1) BETWEEN (t1.c0) AND (t1.c0)), (('-355424196') NOT BETWEEN (t1.c0) AND (vt0.c1)))) ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON ((v0.c0)<<(v0.c0)) WHERE (((v0.c0) BETWEEN (v0.c0) AND (0.8226876986215683)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0) AND (0.8226876986215683)) COLLATE BINARY) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON ((v0.c0)<<(v0.c0)));
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON ((v0.c0)<<(v0.c0)) WHERE (((v0.c0) BETWEEN (v0.c0) AND (0.8226876986215683)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0) AND (0.8226876986215683)) COLLATE BINARY) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON ((v0.c0)<<(v0.c0)));
SELECT * FROM t1 RIGHT OUTER JOIN v0 ON ((v0.c0)<<(v0.c0)) WHERE (((v0.c0) BETWEEN (v0.c0) AND (0.8226876986215683)) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((+ (v0.c0)) AS BLOB));
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON v0.c0 RIGHT OUTER JOIN vt1 ON (((t1.c0 IN ())) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((v0.c0 IN (t1.c0)))) WHERE (((((vt1.c2)AND(((vt1.c1)=(x'')))))AND(0.7725614044101313)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)AND(((vt1.c1)==(x'')))))AND(0.7725614044101313))) IS TRUE)  as count FROM v0 INNER JOIN t1 ON v0.c0 RIGHT OUTER JOIN vt1 ON (((t1.c0 IN ())) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((v0.c0 IN (t1.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON v0.c0 RIGHT OUTER JOIN vt1 ON (((t1.c0 IN ())) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((v0.c0 IN (t1.c0)))) WHERE (((((vt1.c2)AND(((vt1.c1)=(x'')))))AND(0.7725614044101313)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)AND(((vt1.c1)==(x'')))))AND(0.7725614044101313))) IS TRUE)  as count FROM v0 INNER JOIN t1 ON v0.c0 RIGHT OUTER JOIN vt1 ON (((t1.c0 IN ())) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((v0.c0 IN (t1.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON v0.c0 RIGHT OUTER JOIN vt1 ON (((t1.c0 IN ())) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((v0.c0 IN (t1.c0)))) WHERE (((((vt1.c2)AND(((vt1.c1)=(x'')))))AND(0.7725614044101313)));
SELECT COUNT(*) FROM t1, vt0, v0, vt1 WHERE ((((vt0.c1)||(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)||(v0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0, v0, vt1);
SELECT COUNT(*) FROM t1, vt0, v0, vt1 WHERE ((((vt0.c1)||(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)||(v0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0, v0, vt1);
SELECT COUNT(*) FROM t1, vt0, v0, vt1 WHERE ((((vt0.c1)||(v0.c0)) IN ()));
SELECT ALL * FROM t1 WHERE ((((t1.c0))>((NULL))));
SELECT SUM(count) FROM (SELECT (((((t1.c0))>((NULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0))>((NULL))));
SELECT SUM(count) FROM (SELECT (((((t1.c0))>((NULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0))>((NULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (-1076852478) ORDER BY (((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))IS(CASE WHEN vt0.c1 THEN vt1.c2 ELSE vt1.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1076852478) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))IS(CASE WHEN vt0.c1 THEN vt1.c2 ELSE vt1.c2 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (-1076852478) ORDER BY (((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))IS(CASE WHEN vt0.c1 THEN vt1.c2 ELSE vt1.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1076852478) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))IS(CASE WHEN vt0.c1 THEN vt1.c2 ELSE vt1.c2 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (-1076852478) ORDER BY (((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))IS(CASE WHEN vt0.c1 THEN vt1.c2 ELSE vt1.c2 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((- (vt1.c0))))>=((CASE WHEN vt1.c2 THEN 'GE긶锯P嫙C *' END)))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt1.c0))))>=((CASE WHEN vt1.c2 THEN 'GE긶锯P嫙C *' END)))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((- (vt1.c0))))>=((CASE WHEN vt1.c2 THEN 'GE긶锯P嫙C *' END)))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt1.c0))))>=((CASE WHEN vt1.c2 THEN 'GE긶锯P嫙C *' END)))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((- (vt1.c0))))>=((CASE WHEN vt1.c2 THEN 'GE긶锯P嫙C *' END)))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt1, v0 WHERE (CAST(((vt1.c2)+(t1.c0)) AS BLOB)) ORDER BY (((((t1.c0))=((vt1.c2)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)+(t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1, vt1, v0 ORDER BY (((((t1.c0))==((vt1.c2)))) NOTNULL));
SELECT ALL * FROM t1, vt1, v0 WHERE (CAST(((vt1.c2)+(t1.c0)) AS BLOB)) ORDER BY (((((t1.c0))=((vt1.c2)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)+(t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1, vt1, v0 ORDER BY (((((t1.c0))==((vt1.c2)))) NOTNULL));
SELECT ALL * FROM t1, vt1, v0 WHERE (CAST(((vt1.c2)+(t1.c0)) AS BLOB)) ORDER BY (((((t1.c0))=((vt1.c2)))) NOTNULL);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS REAL));
SELECT * FROM v0 WHERE ((((((- (v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((- (v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((- (v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((- (v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((- (v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) ISNULL))));
SELECT ALL * FROM v0 CROSS JOIN t1 ON CASE CASE WHEN t1.c0 THEN t1.c0 END  WHEN CASE WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t1.c0 ELSE t1.c0 END THEN ((v0.c0)&(v0.c0)) ELSE CASE v0.c0  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN '' WHEN v0.c0 THEN v0.c0 END END WHERE (((((((t1.c0) ISNULL))OR(0X4207c8f2)))OR((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0) ISNULL))OR(0x4207c8f2)))OR((t1.c0 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON CASE CASE WHEN t1.c0 THEN t1.c0 END  WHEN CASE WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t1.c0 ELSE t1.c0 END THEN ((v0.c0)&(v0.c0)) ELSE CASE v0.c0  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN '' WHEN v0.c0 THEN v0.c0 END END);
SELECT ALL * FROM v0 CROSS JOIN t1 ON CASE CASE WHEN t1.c0 THEN t1.c0 END  WHEN CASE WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t1.c0 ELSE t1.c0 END THEN ((v0.c0)&(v0.c0)) ELSE CASE v0.c0  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN '' WHEN v0.c0 THEN v0.c0 END END WHERE (((((((t1.c0) ISNULL))OR(0X4207c8f2)))OR((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0) ISNULL))OR(0x4207c8f2)))OR((t1.c0 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON CASE CASE WHEN t1.c0 THEN t1.c0 END  WHEN CASE WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t1.c0 ELSE t1.c0 END THEN ((v0.c0)&(v0.c0)) ELSE CASE v0.c0  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN '' WHEN v0.c0 THEN v0.c0 END END);
SELECT ALL * FROM v0 CROSS JOIN t1 ON CASE CASE WHEN t1.c0 THEN t1.c0 END  WHEN CASE WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t1.c0 ELSE t1.c0 END THEN ((v0.c0)&(v0.c0)) ELSE CASE v0.c0  WHEN t1.c0 THEN t1.c0 WHEN x'' THEN '' WHEN v0.c0 THEN v0.c0 END END WHERE (((((((t1.c0) ISNULL))OR(0X4207c8f2)))OR((t1.c0 IN ()))));
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((vt1.c0)LIKE(vt1.c2)))AND(0.3335505129595544 COLLATE BINARY)))AND(4.17297414E8))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)LIKE(vt1.c2)))AND(0.3335505129595544 COLLATE BINARY)))AND(4.17297414E8))) IS TRUE)  as count FROM vt1, v0 ORDER BY x'');
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((vt1.c0)LIKE(vt1.c2)))AND(0.3335505129595544 COLLATE BINARY)))AND(4.17297414E8))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)LIKE(vt1.c2)))AND(0.3335505129595544 COLLATE BINARY)))AND(4.17297414E8))) IS TRUE)  as count FROM vt1, v0 ORDER BY x'');
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((vt1.c0)LIKE(vt1.c2)))AND(0.3335505129595544 COLLATE BINARY)))AND(4.17297414E8))) ORDER BY x'';
SELECT COUNT(*) FROM t1, vt1, v0 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM t1, vt1, v0);
SELECT COUNT(*) FROM t1, vt1, v0 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM t1, vt1, v0);
SELECT COUNT(*) FROM t1, vt1, v0 WHERE (((vt1.c0 IN ()) IN ()));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c1 AS BLOB))!=(vt0.c1));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))!=(vt0.c1)));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c1 AS BLOB))!=(vt0.c1));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))!=(vt0.c1)));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c1 AS BLOB))!=(vt0.c1));
SELECT * FROM t1, vt0, v0, vt1 WHERE (((NULL) ISNULL)) ORDER BY (((vt1.c1)>=(vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t1, vt0, v0, vt1 ORDER BY (((vt1.c1)>=(vt0.c1)) IN ())  NULLS LAST);
SELECT * FROM t1, vt0, v0, vt1 WHERE (((NULL) ISNULL)) ORDER BY (((vt1.c1)>=(vt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t1, vt0, v0, vt1 ORDER BY (((vt1.c1)>=(vt0.c1)) IN ())  NULLS LAST);
SELECT * FROM t1, vt0, v0, vt1 WHERE (((NULL) ISNULL)) ORDER BY (((vt1.c1)>=(vt0.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON (((vt1.c0)>=(vt1.c2)) IN ()) WHERE (((x'')<=(CASE 0.13805577956523352  WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<=(CASE 0.13805577956523352  WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON (((vt1.c0)>=(vt1.c2)) IN ()));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON (((vt1.c0)>=(vt1.c2)) IN ()) WHERE (((x'')<=(CASE 0.13805577956523352  WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')<=(CASE 0.13805577956523352  WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON (((vt1.c0)>=(vt1.c2)) IN ()));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON (((vt1.c0)>=(vt1.c2)) IN ()) WHERE (((x'')<=(CASE 0.13805577956523352  WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END)));
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1)*(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (vt0.c1 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)*(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1)*(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (vt0.c1 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)*(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1)*(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (vt0.c1 IN (vt0.c1)))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (NOT ((((vt0.c1)) BETWEEN (('-1357401464')) AND ((t1.c0))))) WHERE (0.38712151389988325) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) AND (CAST('Infinity' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.38712151389988325) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (NOT ((((vt0.c1)) BETWEEN (('-1357401464')) AND ((t1.c0))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) AND (CAST('Infinity' AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (NOT ((((vt0.c1)) BETWEEN (('-1357401464')) AND ((t1.c0))))) WHERE (0.38712151389988325) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) AND (CAST('Infinity' AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.38712151389988325) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (NOT ((((vt0.c1)) BETWEEN (('-1357401464')) AND ((t1.c0))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) AND (CAST('Infinity' AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (NOT ((((vt0.c1)) BETWEEN (('-1357401464')) AND ((t1.c0))))) WHERE (0.38712151389988325) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(t1.c0)))OR(vt0.c0))) AND (CAST('Infinity' AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))) AND (((- (vt1.c1))))) WHERE (((((((t1.c0) NOT NULL))OR(((((v0.c0)OR(vt1.c2)))OR(t1.c0)))))AND((((vt1.c0, v0.c0, vt1.c1))<>((t1.c0, vt1.c1, vt1.c0)))))) ORDER BY CASE WHEN vt1.c2 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) NOT NULL))OR(((((v0.c0)OR(vt1.c2)))OR(t1.c0)))))AND((((vt1.c0, v0.c0, vt1.c1))<>((t1.c0, vt1.c1, vt1.c0)))))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))) AND (((- (vt1.c1))))) ORDER BY CASE WHEN vt1.c2 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))) AND (((- (vt1.c1))))) WHERE (((((((t1.c0) NOT NULL))OR(((((v0.c0)OR(vt1.c2)))OR(t1.c0)))))AND((((vt1.c0, v0.c0, vt1.c1))<>((t1.c0, vt1.c1, vt1.c0)))))) ORDER BY CASE WHEN vt1.c2 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) NOT NULL))OR(((((v0.c0)OR(vt1.c2)))OR(t1.c0)))))AND((((vt1.c0, v0.c0, vt1.c1))<>((t1.c0, vt1.c1, vt1.c0)))))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))) AND (((- (vt1.c1))))) ORDER BY CASE WHEN vt1.c2 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 LEFT OUTER JOIN v0 ON (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))) AND (((- (vt1.c1))))) WHERE (((((((t1.c0) NOT NULL))OR(((((v0.c0)OR(vt1.c2)))OR(t1.c0)))))AND((((vt1.c0, v0.c0, vt1.c1))<>((t1.c0, vt1.c1, vt1.c0)))))) ORDER BY CASE WHEN vt1.c2 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1, t1 WHERE ((CASE vt1.c1  WHEN 0.027538421256992462 THEN vt1.c0 END IN ((- (NULL)), vt1.c0, CAST(t1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c1  WHEN 0.027538421256992462 THEN vt1.c0 END IN ((- (NULL)), vt1.c0, CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt1, t1);
SELECT ALL COUNT(*) FROM v0, vt1, t1 WHERE ((CASE vt1.c1  WHEN 0.027538421256992462 THEN vt1.c0 END IN ((- (NULL)), vt1.c0, CAST(t1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c1  WHEN 0.027538421256992462 THEN vt1.c0 END IN ((- (NULL)), vt1.c0, CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt1, t1);
SELECT ALL COUNT(*) FROM v0, vt1, t1 WHERE ((CASE vt1.c1  WHEN 0.027538421256992462 THEN vt1.c0 END IN ((- (NULL)), vt1.c0, CAST(t1.c0 AS REAL))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON json_insert(CASE vt1.c1  WHEN vt1.c0 THEN 0.8831567023323637 ELSE -1009990250 END, vt0.c0 COLLATE NOCASE, (- (vt1.c1)), CAST(vt0.c1 AS BLOB), CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END) WHERE (CASE ((((vt1.c1)OR(vt0.c0)))OR(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE '1520973718' END THEN ((vt1.c2) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt1.c2)))AND(vt1.c0)) THEN (((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN ((((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(0.760848949366477)))AND(vt1.c2)))AND(vt0.c1)))AND(vt1.c0)) WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END THEN (vt1.c2 IN ()) WHEN '' COLLATE BINARY THEN (vt0.c1 IN (vt1.c2)) ELSE vt0.c0 END) ORDER BY CASE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c2)))  WHEN HEX(vt0.c0) THEN (vt1.c1 IN (vt1.c1, x'')) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c1)OR(vt0.c0)))OR(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE '1520973718' END THEN ((vt1.c2) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt1.c2)))AND(vt1.c0)) THEN (((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN ((((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(0.760848949366477)))AND(vt1.c2)))AND(vt0.c1)))AND(vt1.c0)) WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END THEN (vt1.c2 IN ()) WHEN '' COLLATE BINARY THEN (vt0.c1 IN (vt1.c2)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_insert(CASE vt1.c1  WHEN vt1.c0 THEN 0.8831567023323637 ELSE -1009990250 END, vt0.c0 COLLATE NOCASE, (- (vt1.c1)), CAST(vt0.c1 AS BLOB), CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END) ORDER BY CASE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c2)))  WHEN HEX(vt0.c0) THEN (vt1.c1 IN (vt1.c1, x'')) END DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON json_insert(CASE vt1.c1  WHEN vt1.c0 THEN 0.8831567023323637 ELSE -1009990250 END, vt0.c0 COLLATE NOCASE, (- (vt1.c1)), CAST(vt0.c1 AS BLOB), CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END) WHERE (CASE ((((vt1.c1)OR(vt0.c0)))OR(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE '1520973718' END THEN ((vt1.c2) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt1.c2)))AND(vt1.c0)) THEN (((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN ((((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(0.760848949366477)))AND(vt1.c2)))AND(vt0.c1)))AND(vt1.c0)) WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END THEN (vt1.c2 IN ()) WHEN '' COLLATE BINARY THEN (vt0.c1 IN (vt1.c2)) ELSE vt0.c0 END) ORDER BY CASE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c2)))  WHEN HEX(vt0.c0) THEN (vt1.c1 IN (vt1.c1, x'')) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c1)OR(vt0.c0)))OR(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE '1520973718' END THEN ((vt1.c2) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt1.c2)))AND(vt1.c0)) THEN (((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) WHEN CAST(vt0.c1 AS BLOB) THEN ((((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(0.760848949366477)))AND(vt1.c2)))AND(vt0.c1)))AND(vt1.c0)) WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END THEN (vt1.c2 IN ()) WHEN '' COLLATE BINARY THEN (vt0.c1 IN (vt1.c2)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_insert(CASE vt1.c1  WHEN vt1.c0 THEN 0.8831567023323637 ELSE -1009990250 END, vt0.c0 COLLATE NOCASE, (- (vt1.c1)), CAST(vt0.c1 AS BLOB), CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END) ORDER BY CASE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c2)))  WHEN HEX(vt0.c0) THEN (vt1.c1 IN (vt1.c1, x'')) END DESC);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((((((((vt1.c1)OR(t1.c0)))AND('')))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) ORDER BY (((vt0.c0)<(vt1.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)OR(t1.c0)))AND('')))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((vt0.c0)<(vt1.c2)) IN ()) DESC);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((((((((vt1.c1)OR(t1.c0)))AND('')))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) ORDER BY (((vt0.c0)<(vt1.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)OR(t1.c0)))AND('')))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((vt0.c0)<(vt1.c2)) IN ()) DESC);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((((((((vt1.c1)OR(t1.c0)))AND('')))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) ORDER BY (((vt0.c0)<(vt1.c2)) IN ()) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) ORDER BY (+ ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (+ ((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) ORDER BY (+ ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (+ ((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) ORDER BY (+ ((~ (v0.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END)*(((((t1.c0)AND(t1.c0)))AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t1.c0 END)*(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END)*(((((t1.c0)AND(t1.c0)))AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN t1.c0 END)*(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END)*(((((t1.c0)AND(t1.c0)))AND(t1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((+ (vt1.c0)))+(0.8226876986215683)) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0)))+(0.8226876986215683)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((+ (vt1.c0)))+(0.8226876986215683)) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0)))+(0.8226876986215683)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((+ (vt1.c0)))+(0.8226876986215683)) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))+((((vt1.c2, vt0.c0, vt1.c2))<((vt1.c0, vt1.c2, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))+((((vt1.c2, vt0.c0, vt1.c2))<((vt1.c0, vt1.c2, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))+((((vt1.c2, vt0.c0, vt1.c2))<((vt1.c0, vt1.c2, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))+((((vt1.c2, vt0.c0, vt1.c2))<((vt1.c0, vt1.c2, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))+((((vt1.c2, vt0.c0, vt1.c2))<((vt1.c0, vt1.c2, vt0.c1))))));
SELECT * FROM t1, vt1, vt0, v0 WHERE ((((((vt0.c1)==(vt1.c1))))>((((v0.c0)LIKE(t1.c0)))))) ORDER BY ((x'd510')>(((x'') BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)=(vt1.c1))))>((((v0.c0)LIKE(t1.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY ((x'd510')>(((x'') BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST);
SELECT * FROM t1, vt1, vt0, v0 WHERE ((((((vt0.c1)==(vt1.c1))))>((((v0.c0)LIKE(t1.c0)))))) ORDER BY ((x'd510')>(((x'') BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)=(vt1.c1))))>((((v0.c0)LIKE(t1.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY ((x'd510')>(((x'') BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST);
SELECT * FROM t1, vt1, vt0, v0 WHERE ((((((vt0.c1)==(vt1.c1))))>((((v0.c0)LIKE(t1.c0)))))) ORDER BY ((x'd510')>(((x'') BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((v0.c0))>((((((vt1.c2)AND(vt1.c2)))OR(vt1.c0)))))) ORDER BY (((0.5825967674107653 COLLATE BINARY, v0.c0 COLLATE RTRIM, (- (vt1.c2))))<((((vt1.c2) BETWEEN (vt1.c1) AND (NULL)), ((v0.c0) IS TRUE), COALESCE(vt1.c1, v0.c0))))  NULLS FIRST, ((vt1.c1 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>((((((vt1.c2)AND(vt1.c2)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((0.5825967674107653 COLLATE BINARY, v0.c0 COLLATE RTRIM, (- (vt1.c2))))<((((vt1.c2) BETWEEN (vt1.c1) AND (NULL)), ((v0.c0) IS TRUE), COALESCE(vt1.c1, v0.c0))))  NULLS FIRST, ((vt1.c1 COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((v0.c0))>((((((vt1.c2)AND(vt1.c2)))OR(vt1.c0)))))) ORDER BY (((0.5825967674107653 COLLATE BINARY, v0.c0 COLLATE RTRIM, (- (vt1.c2))))<((((vt1.c2) BETWEEN (vt1.c1) AND (NULL)), ((v0.c0) IS TRUE), COALESCE(vt1.c1, v0.c0))))  NULLS FIRST, ((vt1.c1 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))>((((((vt1.c2)AND(vt1.c2)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((0.5825967674107653 COLLATE BINARY, v0.c0 COLLATE RTRIM, (- (vt1.c2))))<((((vt1.c2) BETWEEN (vt1.c1) AND (NULL)), ((v0.c0) IS TRUE), COALESCE(vt1.c1, v0.c0))))  NULLS FIRST, ((vt1.c1 COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((v0.c0))>((((((vt1.c2)AND(vt1.c2)))OR(vt1.c0)))))) ORDER BY (((0.5825967674107653 COLLATE BINARY, v0.c0 COLLATE RTRIM, (- (vt1.c2))))<((((vt1.c2) BETWEEN (vt1.c1) AND (NULL)), ((v0.c0) IS TRUE), COALESCE(vt1.c1, v0.c0))))  NULLS FIRST, ((vt1.c1 COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t1 ON (((vt0.c0))!=((NULL))) LEFT OUTER JOIN v0 ON CASE WHEN (((('2039939616')OR(vt0.c0)))OR(t1.c0)) THEN LOWER(DISTINCT vt0.c0) WHEN ((t1.c0) ISNULL) THEN CASE vt1.c1  WHEN vt1.c2 THEN t1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 ELSE t1.c0 END WHEN 0xffffffff944e685a THEN CAST(vt0.c1 AS INTEGER) END WHERE ((((((((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c2, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c2, vt1.c2))))OR('77025107')))OR(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(CAST(NULL AS REAL))))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c2, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c2, vt1.c2))))OR('77025107')))OR(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(CAST(NULL AS REAL))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON (((vt0.c0))!=((NULL))) LEFT OUTER JOIN v0 ON CASE WHEN (((('2039939616')OR(vt0.c0)))OR(t1.c0)) THEN LOWER(DISTINCT vt0.c0) WHEN ((t1.c0) ISNULL) THEN CASE vt1.c1  WHEN vt1.c2 THEN t1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 ELSE t1.c0 END WHEN 0xffffffff944e685a THEN CAST(vt0.c1 AS INTEGER) END);
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t1 ON (((vt0.c0))!=((NULL))) LEFT OUTER JOIN v0 ON CASE WHEN (((('2039939616')OR(vt0.c0)))OR(t1.c0)) THEN LOWER(DISTINCT vt0.c0) WHEN ((t1.c0) ISNULL) THEN CASE vt1.c1  WHEN vt1.c2 THEN t1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 ELSE t1.c0 END WHEN 0xffffffff944e685a THEN CAST(vt0.c1 AS INTEGER) END WHERE ((((((((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c2, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c2, vt1.c2))))OR('77025107')))OR(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(CAST(NULL AS REAL))))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c2, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c2, vt1.c2))))OR('77025107')))OR(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(CAST(NULL AS REAL))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON (((vt0.c0))!=((NULL))) LEFT OUTER JOIN v0 ON CASE WHEN (((('2039939616')OR(vt0.c0)))OR(t1.c0)) THEN LOWER(DISTINCT vt0.c0) WHEN ((t1.c0) ISNULL) THEN CASE vt1.c1  WHEN vt1.c2 THEN t1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 ELSE t1.c0 END WHEN 0xffffffff944e685a THEN CAST(vt0.c1 AS INTEGER) END);
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t1 ON (((vt0.c0))!=((NULL))) LEFT OUTER JOIN v0 ON CASE WHEN (((('2039939616')OR(vt0.c0)))OR(t1.c0)) THEN LOWER(DISTINCT vt0.c0) WHEN ((t1.c0) ISNULL) THEN CASE vt1.c1  WHEN vt1.c2 THEN t1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c1 ELSE t1.c0 END WHEN 0xffffffff944e685a THEN CAST(vt0.c1 AS INTEGER) END WHERE ((((((((((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c2, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c2, vt1.c2))))OR('77025107')))OR(CASE WHEN vt1.c1 THEN v0.c0 END)))OR(CAST(NULL AS REAL))))AND((t1.c0 IN ()))));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)>(vt1.c0)))&(json_patch(vt1.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))&(json_patch(vt1.c2, vt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)>(vt1.c0)))&(json_patch(vt1.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))&(json_patch(vt1.c2, vt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0, v0, t1 WHERE (((((vt0.c1)=(t1.c0)))<=(((v0.c0)<<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)=(t1.c0)))<=(((v0.c0)<<(t1.c0))))) IS TRUE)  as count FROM vt0, v0, t1);
SELECT * FROM vt0, v0, t1 WHERE (((((vt0.c1)=(t1.c0)))<=(((v0.c0)<<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)=(t1.c0)))<=(((v0.c0)<<(t1.c0))))) IS TRUE)  as count FROM vt0, v0, t1);
SELECT * FROM vt0, v0, t1 WHERE (((((vt0.c1)=(t1.c0)))<=(((v0.c0)<<(t1.c0)))));
SELECT * FROM v0, t1, vt0, vt1 WHERE ((((t1.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((vt1.c1 IN (v0.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((vt1.c1 IN (v0.c0, vt1.c0)))))) IS TRUE)  as count FROM v0, t1, vt0, vt1);
SELECT * FROM v0, t1, vt0, vt1 WHERE ((((t1.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((vt1.c1 IN (v0.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((vt1.c1 IN (v0.c0, vt1.c0)))))) IS TRUE)  as count FROM v0, t1, vt0, vt1);
SELECT * FROM v0, t1, vt0, vt1 WHERE ((((t1.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((vt1.c1 IN (v0.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((((HEX(DISTINCT t1.c0))OR(CAST(vt0.c1 AS INTEGER))))OR(t1.c0)) INNER JOIN vt1 ON t1.c0 WHERE (CAST(CAST(vt1.c2 AS TEXT) AS NUMERIC)) ORDER BY ((t1.c0)OR((vt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c2 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((((HEX(DISTINCT t1.c0))OR(CAST(vt0.c1 AS INTEGER))))OR(t1.c0)) INNER JOIN vt1 ON t1.c0 ORDER BY ((t1.c0)OR((vt0.c1 IN ()))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((((HEX(DISTINCT t1.c0))OR(CAST(vt0.c1 AS INTEGER))))OR(t1.c0)) INNER JOIN vt1 ON t1.c0 WHERE (CAST(CAST(vt1.c2 AS TEXT) AS NUMERIC)) ORDER BY ((t1.c0)OR((vt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c2 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((((HEX(DISTINCT t1.c0))OR(CAST(vt0.c1 AS INTEGER))))OR(t1.c0)) INNER JOIN vt1 ON t1.c0 ORDER BY ((t1.c0)OR((vt0.c1 IN ()))) DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((((HEX(DISTINCT t1.c0))OR(CAST(vt0.c1 AS INTEGER))))OR(t1.c0)) INNER JOIN vt1 ON t1.c0 WHERE (CAST(CAST(vt1.c2 AS TEXT) AS NUMERIC)) ORDER BY ((t1.c0)OR((vt0.c1 IN ()))) DESC;
SELECT COUNT(*) FROM vt0, vt1, v0, t1 WHERE (((((t1.c0)<(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<(v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, v0, t1);
SELECT COUNT(*) FROM vt0, vt1, v0, t1 WHERE (((((t1.c0)<(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<(v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, v0, t1);
SELECT COUNT(*) FROM vt0, vt1, v0, t1 WHERE (((((t1.c0)<(v0.c0))) IS TRUE));
SELECT ALL * FROM vt1 WHERE (((0xfffffffff6d1df1a) NOTNULL)) ORDER BY UNLIKELY(DISTINCT ((vt1.c0)>(vt1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0xfffffffff6d1df1a) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT ((vt1.c0)>(vt1.c1))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((0xfffffffff6d1df1a) NOTNULL)) ORDER BY UNLIKELY(DISTINCT ((vt1.c0)>(vt1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0xfffffffff6d1df1a) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY UNLIKELY(DISTINCT ((vt1.c0)>(vt1.c1))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((0xfffffffff6d1df1a) NOTNULL)) ORDER BY UNLIKELY(DISTINCT ((vt1.c0)>(vt1.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t1 ON (((NOT (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) IS FALSE))) WHERE ((((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END, ((((((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)), (((vt0.c0))>=((vt1.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END, CASE vt1.c2  WHEN vt1.c1 THEN t1.c0 END, CAST(vt1.c2 AS INTEGER))))) ORDER BY (((vt1.c2)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END, ((((((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)), (((vt0.c0))>=((vt1.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END, CASE vt1.c2  WHEN vt1.c1 THEN t1.c0 END, CAST(vt1.c2 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t1 ON (((NOT (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) IS FALSE))) ORDER BY (((vt1.c2)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t1 ON (((NOT (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) IS FALSE))) WHERE ((((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END, ((((((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)), (((vt0.c0))>=((vt1.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END, CASE vt1.c2  WHEN vt1.c1 THEN t1.c0 END, CAST(vt1.c2 AS INTEGER))))) ORDER BY (((vt1.c2)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END, ((((((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)), (((vt0.c0))>=((vt1.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END, CASE vt1.c2  WHEN vt1.c1 THEN t1.c0 END, CAST(vt1.c2 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t1 ON (((NOT (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) IS FALSE))) ORDER BY (((vt1.c2)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t1 ON (((NOT (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) IS FALSE))) WHERE ((((vt0.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END, ((((((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)), (((vt0.c0))>=((vt1.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END, CASE vt1.c2  WHEN vt1.c1 THEN t1.c0 END, CAST(vt1.c2 AS INTEGER))))) ORDER BY (((vt1.c2)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt0.c0) NOT NULL)))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ('358703706') ORDER BY -267450262  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('358703706') IS TRUE)  as count FROM v0 ORDER BY -267450262  NULLS LAST);
SELECT * FROM v0 WHERE ('358703706') ORDER BY -267450262  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('358703706') IS TRUE)  as count FROM v0 ORDER BY -267450262  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOT BETWEEN ('-1961563187') AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0))) NOT BETWEEN ('-1961563187') AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOT BETWEEN ('-1961563187') AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0))) NOT BETWEEN ('-1961563187') AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) NOT BETWEEN ('-1961563187') AND (((vt0.c0) NOT NULL))));
SELECT * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN (((t1.c0)>>(t1.c0)), '-1785286050'))) ORDER BY (((t1.c0))>=((((t1.c0)==(t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN (((t1.c0)>>(t1.c0)), '-1785286050'))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0))>=((((t1.c0)=(t1.c0))))) DESC);
SELECT * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN (((t1.c0)>>(t1.c0)), '-1785286050'))) ORDER BY (((t1.c0))>=((((t1.c0)==(t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN (((t1.c0)>>(t1.c0)), '-1785286050'))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0))>=((((t1.c0)=(t1.c0))))) DESC);
SELECT * FROM t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) IN (((t1.c0)>>(t1.c0)), '-1785286050'))) ORDER BY (((t1.c0))>=((((t1.c0)==(t1.c0))))) DESC;
SELECT * FROM vt0, vt1, v0, t1 INDEXED BY i37 WHERE ((CASE WHEN vt0.c0 THEN vt1.c2 WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c2 END IN (((vt1.c1) NOT BETWEEN (0.4641806551913442) AND (v0.c0))))) ORDER BY 240791413, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt1.c2 WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c2 END IN (((vt1.c1) NOT BETWEEN (0.4641806551913442) AND (v0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0, t1 INDEXED BY i37 ORDER BY 240791413, vt1.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, v0, t1 INDEXED BY i37 WHERE ((CASE WHEN vt0.c0 THEN vt1.c2 WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c2 END IN (((vt1.c1) NOT BETWEEN (0.4641806551913442) AND (v0.c0))))) ORDER BY 240791413, vt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt1.c2 WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c2 END IN (((vt1.c1) NOT BETWEEN (0.4641806551913442) AND (v0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0, t1 INDEXED BY i37 ORDER BY 240791413, vt1.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON (~ (vt0.c0 COLLATE BINARY)) WHERE (CAST(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON (~ (vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON (~ (vt0.c0 COLLATE BINARY)) WHERE (CAST(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON (~ (vt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, vt1 FULL OUTER JOIN v0 ON (~ (vt0.c0 COLLATE BINARY)) WHERE (CAST(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0, v0, t1 WHERE ((ABS(DISTINCT v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((ABS(DISTINCT v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0, t1);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE ((ABS(DISTINCT v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((ABS(DISTINCT v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0, t1);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE ((ABS(DISTINCT v0.c0) IN ()));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(vt1.c2 COLLATE BINARY AS REAL)) ORDER BY (((vt1.c0 IN ()))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))), CAST(vt1.c2 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((vt1.c0 IN ()))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))), CAST(vt1.c2 AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(vt1.c2 COLLATE BINARY AS REAL)) ORDER BY (((vt1.c0 IN ()))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))), CAST(vt1.c2 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((vt1.c0 IN ()))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))), CAST(vt1.c2 AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(vt1.c2 COLLATE BINARY AS REAL)) ORDER BY (((vt1.c0 IN ()))>=(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))), CAST(vt1.c2 AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY CASE ((((((((vt0.c1)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((vt1.c1)AND('蠝-')))OR(v0.c0)) THEN LTRIM(vt0.c1, '423438070') ELSE ((((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(v0.c0)))OR(vt1.c2)))OR(vt1.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CASE ((((((((vt0.c1)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((vt1.c1)AND('蠝-')))OR(v0.c0)) THEN LTRIM(vt0.c1, '423438070') ELSE ((((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(v0.c0)))OR(vt1.c2)))OR(vt1.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY CASE ((((((((vt0.c1)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((vt1.c1)AND('蠝-')))OR(v0.c0)) THEN LTRIM(vt0.c1, '423438070') ELSE ((((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(v0.c0)))OR(vt1.c2)))OR(vt1.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY CASE ((((((((vt0.c1)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((vt1.c1)AND('蠝-')))OR(v0.c0)) THEN LTRIM(vt0.c1, '423438070') ELSE ((((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(v0.c0)))OR(vt1.c2)))OR(vt1.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY CASE ((((((((vt0.c1)OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0))  WHEN ((((vt1.c1)AND('蠝-')))OR(v0.c0)) THEN LTRIM(vt0.c1, '423438070') ELSE ((((((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(v0.c0)))OR(vt1.c2)))OR(vt1.c2)) END DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(x''))) ORDER BY ((((v0.c0)AND(CAST(v0.c0 AS BLOB))))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)OR(v0.c0)))), ((ABS('}嗌lB-VW1'))&((~ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(x''))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(CAST(v0.c0 AS BLOB))))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)OR(v0.c0)))), ((ABS('}嗌lB-VW1'))&((~ (v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(x''))) ORDER BY ((((v0.c0)AND(CAST(v0.c0 AS BLOB))))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)OR(v0.c0)))), ((ABS('}嗌lB-VW1'))&((~ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(x''))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(CAST(v0.c0 AS BLOB))))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)OR(v0.c0)))), ((ABS('}嗌lB-VW1'))&((~ (v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(x''))) ORDER BY ((((v0.c0)AND(CAST(v0.c0 AS BLOB))))OR(v0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 END)<=(((v0.c0)OR(v0.c0)))), ((ABS('}嗌lB-VW1'))&((~ (v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c2);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON IFNULL(((vt1.c2) IS FALSE), ((vt1.c0)<<(vt1.c1))) WHERE ((((vt1.c1) NOTNULL) IN ())) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON IFNULL(((vt1.c2) IS FALSE), ((vt1.c0)<<(vt1.c1))) ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON IFNULL(((vt1.c2) IS FALSE), ((vt1.c0)<<(vt1.c1))) WHERE ((((vt1.c1) NOTNULL) IN ())) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON IFNULL(((vt1.c2) IS FALSE), ((vt1.c0)<<(vt1.c1))) ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON IFNULL(((vt1.c2) IS FALSE), ((vt1.c0)<<(vt1.c1))) WHERE ((((vt1.c1) NOTNULL) IN ())) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1 WHERE (load_extension(0.9592744355160262)) ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c0) AND (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((load_extension(0.9592744355160262)) IS TRUE)  as count FROM t1, vt1 ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c0) AND (t1.c0)))) DESC);
SELECT COUNT(*) FROM t1, vt1 WHERE (load_extension(0.9592744355160262)) ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c0) AND (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((load_extension(0.9592744355160262)) IS TRUE)  as count FROM t1, vt1 ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c0) AND (t1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (((v0.c0)IS NOT(vt0.c1)) COLLATE NOCASE) ORDER BY ((NULL)|((~ (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY ((NULL)|((~ (t1.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (((v0.c0)IS NOT(vt0.c1)) COLLATE NOCASE) ORDER BY ((NULL)|((~ (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)IS NOT(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY ((NULL)|((~ (t1.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, t1 WHERE (((v0.c0)IS NOT(vt0.c1)) COLLATE NOCASE) ORDER BY ((NULL)|((~ (t1.c0))));
SELECT COUNT(*) FROM t1, v0, vt1, vt0 WHERE ((vt1.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t1, v0, vt1, vt0);
SELECT COUNT(*) FROM t1, v0, vt1, vt0 WHERE ((vt1.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t1, v0, vt1, vt0);
SELECT COUNT(*) FROM t1, v0, vt1, vt0 WHERE ((vt1.c2 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM t1, vt1 WHERE (CASE WHEN (('-56588801') NOT NULL) THEN ((((((((vt1.c2)OR(x'')))AND(vt1.c2)))AND(vt1.c2)))AND(t1.c0)) WHEN NULL THEN ((NULL) NOT NULL) WHEN JULIANDAY(vt1.c0, vt1.c2, NULL) THEN ((vt1.c1)>(vt1.c0)) END) ORDER BY CASE WHEN ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1) NOT NULL) WHEN ((vt1.c0) IS TRUE) THEN x'' WHEN NULL THEN CAST(vt1.c2 AS INTEGER) ELSE ((((0X5f455ed)AND(0.9845692806335518)))AND(t1.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-56588801') NOT NULL) THEN ((((((((vt1.c2)OR(x'')))AND(vt1.c2)))AND(vt1.c2)))AND(t1.c0)) WHEN NULL THEN ((NULL) NOT NULL) WHEN JULIANDAY(vt1.c0, vt1.c2, NULL) THEN ((vt1.c1)>(vt1.c0)) END) IS TRUE)  as count FROM t1, vt1 ORDER BY CASE WHEN ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1) NOT NULL) WHEN ((vt1.c0) IS TRUE) THEN x'' WHEN NULL THEN CAST(vt1.c2 AS INTEGER) ELSE ((((0X5f455ed)AND(0.9845692806335518)))AND(t1.c0)) END);
SELECT COUNT(*) FROM t1, vt1 WHERE (CASE WHEN (('-56588801') NOT NULL) THEN ((((((((vt1.c2)OR(x'')))AND(vt1.c2)))AND(vt1.c2)))AND(t1.c0)) WHEN NULL THEN ((NULL) NOT NULL) WHEN JULIANDAY(vt1.c0, vt1.c2, NULL) THEN ((vt1.c1)>(vt1.c0)) END) ORDER BY CASE WHEN ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1) NOT NULL) WHEN ((vt1.c0) IS TRUE) THEN x'' WHEN NULL THEN CAST(vt1.c2 AS INTEGER) ELSE ((((0X5f455ed)AND(0.9845692806335518)))AND(t1.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-56588801') NOT NULL) THEN ((((((((vt1.c2)OR(x'')))AND(vt1.c2)))AND(vt1.c2)))AND(t1.c0)) WHEN NULL THEN ((NULL) NOT NULL) WHEN JULIANDAY(vt1.c0, vt1.c2, NULL) THEN ((vt1.c1)>(vt1.c0)) END) IS TRUE)  as count FROM t1, vt1 ORDER BY CASE WHEN ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1) NOT NULL) WHEN ((vt1.c0) IS TRUE) THEN x'' WHEN NULL THEN CAST(vt1.c2 AS INTEGER) ELSE ((((0X5f455ed)AND(0.9845692806335518)))AND(t1.c0)) END);
SELECT COUNT(*) FROM t1, vt1 WHERE (CASE WHEN (('-56588801') NOT NULL) THEN ((((((((vt1.c2)OR(x'')))AND(vt1.c2)))AND(vt1.c2)))AND(t1.c0)) WHEN NULL THEN ((NULL) NOT NULL) WHEN JULIANDAY(vt1.c0, vt1.c2, NULL) THEN ((vt1.c1)>(vt1.c0)) END) ORDER BY CASE WHEN ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c2)) THEN ((vt1.c1) NOT NULL) WHEN ((vt1.c0) IS TRUE) THEN x'' WHEN NULL THEN CAST(vt1.c2 AS INTEGER) ELSE ((((0X5f455ed)AND(0.9845692806335518)))AND(t1.c0)) END;
SELECT ALL * FROM vt1, v0, vt0 WHERE (((0.06304346178915654) ISNULL)) ORDER BY ((COALESCE(vt1.c2, v0.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((((((((((((((((vt1.c2)AND(vt0.c0)))OR(v0.c0)))OR(vt1.c2)))OR(vt0.c1)))AND(v0.c0)))OR(vt1.c2)))OR(vt1.c0)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.06304346178915654) ISNULL)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((COALESCE(vt1.c2, v0.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((((((((((((((((vt1.c2)AND(vt0.c0)))OR(v0.c0)))OR(vt1.c2)))OR(vt0.c1)))AND(v0.c0)))OR(vt1.c2)))OR(vt1.c0)))AND(v0.c0)))) DESC);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((0.06304346178915654) ISNULL)) ORDER BY ((COALESCE(vt1.c2, v0.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((((((((((((((((vt1.c2)AND(vt0.c0)))OR(v0.c0)))OR(vt1.c2)))OR(vt0.c1)))AND(v0.c0)))OR(vt1.c2)))OR(vt1.c0)))AND(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.06304346178915654) ISNULL)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((COALESCE(vt1.c2, v0.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((((((((((((((((vt1.c2)AND(vt0.c0)))OR(v0.c0)))OR(vt1.c2)))OR(vt0.c1)))AND(v0.c0)))OR(vt1.c2)))OR(vt1.c0)))AND(v0.c0)))) DESC);
SELECT ALL * FROM vt1, v0, vt0 WHERE (((0.06304346178915654) ISNULL)) ORDER BY ((COALESCE(vt1.c2, v0.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((((((((((((((((vt1.c2)AND(vt0.c0)))OR(v0.c0)))OR(vt1.c2)))OR(vt0.c1)))AND(v0.c0)))OR(vt1.c2)))OR(vt1.c0)))AND(v0.c0)))) DESC;
SELECT COUNT(*) FROM v0, t1, vt1, vt0 WHERE (v0.c0) ORDER BY (((((vt0.c0))<>((v0.c0))))LIKE((vt1.c2 IN (v0.c0, vt1.c0)))) ASC  NULLS LAST, ((CAST(vt1.c1 AS INTEGER)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t1, vt1, vt0 ORDER BY (((((vt0.c0))!=((v0.c0))))LIKE((vt1.c2 IN (v0.c0, vt1.c0)))) ASC  NULLS LAST, ((CAST(vt1.c1 AS INTEGER)) NOT NULL) DESC);
SELECT COUNT(*) FROM v0, t1, vt1, vt0 WHERE (v0.c0) ORDER BY (((((vt0.c0))<>((v0.c0))))LIKE((vt1.c2 IN (v0.c0, vt1.c0)))) ASC  NULLS LAST, ((CAST(vt1.c1 AS INTEGER)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t1, vt1, vt0 ORDER BY (((((vt0.c0))!=((v0.c0))))LIKE((vt1.c2 IN (v0.c0, vt1.c0)))) ASC  NULLS LAST, ((CAST(vt1.c1 AS INTEGER)) NOT NULL) DESC);
SELECT COUNT(*) FROM v0, t1, vt1, vt0 WHERE (v0.c0) ORDER BY (((((vt0.c0))<>((v0.c0))))LIKE((vt1.c2 IN (v0.c0, vt1.c0)))) ASC  NULLS LAST, ((CAST(vt1.c1 AS INTEGER)) NOT NULL) DESC;
SELECT * FROM vt0, t1, vt1, v0 WHERE (((((((t1.c0) NOTNULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '1265610513' END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt1.c2 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0) NOTNULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '1265610513' END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt1.c2 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t1, vt1, v0);
SELECT * FROM vt0, t1, vt1, v0 WHERE (((((((t1.c0) NOTNULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '1265610513' END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt1.c2 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0) NOTNULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '1265610513' END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt1.c2 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, t1, vt1, v0);
SELECT * FROM vt0, t1, vt1, v0 WHERE (((((((t1.c0) NOTNULL))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '1265610513' END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN vt1.c2 THEN t1.c0 END)));
SELECT * FROM vt1, vt0, t1 WHERE ((('-1076852478') IS FALSE)) ORDER BY ((CAST(vt1.c2 AS REAL))>(NULL))  NULLS LAST, t1.c0 ASC  NULLS LAST, ((vt0.c1)>=(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-1076852478') IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CAST(vt1.c2 AS REAL))>(NULL))  NULLS LAST, t1.c0 ASC  NULLS LAST, ((vt0.c1)>=(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE ((('-1076852478') IS FALSE)) ORDER BY ((CAST(vt1.c2 AS REAL))>(NULL))  NULLS LAST, t1.c0 ASC  NULLS LAST, ((vt0.c1)>=(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-1076852478') IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CAST(vt1.c2 AS REAL))>(NULL))  NULLS LAST, t1.c0 ASC  NULLS LAST, ((vt0.c1)>=(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE ((('-1076852478') IS FALSE)) ORDER BY ((CAST(vt1.c2 AS REAL))>(NULL))  NULLS LAST, t1.c0 ASC  NULLS LAST, ((vt0.c1)>=(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE (CAST((~ (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE (CAST((~ (vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE (CAST((~ (vt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ORDER BY (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, x'e2b1')) AND ((v0.c0, v0.c0, 0.5036535849720989))))AND(((v0.c0)AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, x'e2b1')) AND ((v0.c0, v0.c0, 0.5036535849720989))))AND(((v0.c0)AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ORDER BY (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, x'e2b1')) AND ((v0.c0, v0.c0, 0.5036535849720989))))AND(((v0.c0)AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, x'e2b1')) AND ((v0.c0, v0.c0, 0.5036535849720989))))AND(((v0.c0)AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ORDER BY (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, x'e2b1')) AND ((v0.c0, v0.c0, 0.5036535849720989))))AND(((v0.c0)AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t1 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt1.c2)LIKE(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt1.c2)LIKE(vt1.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t1 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt1.c2)LIKE(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt1.c2)LIKE(vt1.c0)))))) IS TRUE)  as count FROM vt0, v0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t1 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt1.c2)LIKE(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY ((NOT (vt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((NOT (vt1.c1)) IN ()) ASC);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY ((NOT (vt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((NOT (vt1.c1)) IN ()) ASC);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY ((NOT (vt1.c1)) IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (NOT ((('-355424196')>>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((('-355424196')>>(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (NOT ((('-355424196')>>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((('-355424196')>>(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (NOT ((('-355424196')>>(vt0.c0)))) ASC;
SELECT ALL * FROM t1, vt0, vt1, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM t1, vt0, vt1, v0);
SELECT ALL * FROM t1, vt0, vt1, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM t1, vt0, vt1, v0);
SELECT ALL * FROM t1, vt0, vt1, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((((((((((NULL)<<(0.42643076540276836)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(LOWER(DISTINCT vt1.c2))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)<<(0.42643076540276836)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(LOWER(DISTINCT vt1.c2))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((((((((((NULL)<<(0.42643076540276836)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(LOWER(DISTINCT vt1.c2))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)<<(0.42643076540276836)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(LOWER(DISTINCT vt1.c2))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (((((((((((NULL)<<(0.42643076540276836)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(LOWER(DISTINCT vt1.c2))))OR(v0.c0 COLLATE NOCASE)))AND(CAST(vt1.c1 AS INTEGER))));
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)IS(t1.c0))) IS FALSE) FULL OUTER JOIN vt0 ON ((vt1.c1)GLOB(((((vt0.c0)AND(t1.c0)))AND(vt1.c2)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)IS(t1.c0))) IS FALSE) FULL OUTER JOIN vt0 ON ((vt1.c1)GLOB(((((vt0.c0)AND(t1.c0)))AND(vt1.c2)))));
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)IS(t1.c0))) IS FALSE) FULL OUTER JOIN vt0 ON ((vt1.c1)GLOB(((((vt0.c0)AND(t1.c0)))AND(vt1.c2)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)IS(t1.c0))) IS FALSE) FULL OUTER JOIN vt0 ON ((vt1.c1)GLOB(((((vt0.c0)AND(t1.c0)))AND(vt1.c2)))));
SELECT COUNT(*) FROM vt1, v0 LEFT OUTER JOIN t1 ON ((((vt1.c1)IS(t1.c0))) IS FALSE) FULL OUTER JOIN vt0 ON ((vt1.c1)GLOB(((((vt0.c0)AND(t1.c0)))AND(vt1.c2)))) WHERE (x'');
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))==(((((v0.c0)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))=(((((v0.c0)AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))==(((((v0.c0)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))=(((((v0.c0)AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM v0, vt1 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))==(((((v0.c0)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY vt1.c0 ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((('423438070')AND(vt1.c0)))AND(vt1.c0)) IN ((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((('423438070')AND(vt1.c0)))AND(vt1.c0)) IN ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((('423438070')AND(vt1.c0)))AND(vt1.c0)) IN ((vt1.c0 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((('423438070')AND(vt1.c0)))AND(vt1.c0)) IN ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((('423438070')AND(vt1.c0)))AND(vt1.c0)) IN ((vt1.c0 IN (vt1.c0)))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON 0X2eab2c69 INNER JOIN v0 ON t1.c0 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY (((((((((-1.675273511E9 IN ()))OR(((((v0.c0)OR(vt1.c1)))AND(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)))OR(NULL COLLATE BINARY)))AND((((t1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS INTEGER)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON 0x2eab2c69 INNER JOIN v0 ON t1.c0 ORDER BY (((((((((-1.675273511E9 IN ()))OR(((((v0.c0)OR(vt1.c1)))AND(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)))OR(NULL COLLATE BINARY)))AND((((t1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON 0X2eab2c69 INNER JOIN v0 ON t1.c0 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY (((((((((-1.675273511E9 IN ()))OR(((((v0.c0)OR(vt1.c1)))AND(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)))OR(NULL COLLATE BINARY)))AND((((t1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS INTEGER)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON 0x2eab2c69 INNER JOIN v0 ON t1.c0 ORDER BY (((((((((-1.675273511E9 IN ()))OR(((((v0.c0)OR(vt1.c1)))AND(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)))OR(NULL COLLATE BINARY)))AND((((t1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON 0X2eab2c69 INNER JOIN v0 ON t1.c0 WHERE (CAST(t1.c0 AS INTEGER)) ORDER BY (((((((((-1.675273511E9 IN ()))OR(((((v0.c0)OR(vt1.c1)))AND(vt1.c0)))))AND(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END)))OR(NULL COLLATE BINARY)))AND((((t1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))));
SELECT * FROM vt0, t1, vt1 WHERE ((NOT (0Xffffffffe3cfdd47)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0Xffffffffe3cfdd47))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE ((NOT (0Xffffffffe3cfdd47)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0Xffffffffe3cfdd47))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE ((NOT (0Xffffffffe3cfdd47)));
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))&((NOT (v0.c0))))) ORDER BY CASE WHEN v0.c0 THEN ((((-1041735101)OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0)%(v0.c0)) THEN x'e83f' WHEN LIKELIHOOD(v0.c0, 0.7652770441966213) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN '1359855799' THEN ('1359855799' IN ()) WHEN ((v0.c0)<<(v0.c0)) THEN NULL COLLATE RTRIM ELSE v0.c0 COLLATE NOCASE END DESC, (((v0.c0 IN ()))&(CAST(v0.c0 AS NUMERIC)))  NULLS LAST, (NOT ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))&((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((((-1041735101)OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0)%(v0.c0)) THEN x'e83f' WHEN LIKELIHOOD(v0.c0, 0.7652770441966213) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN '1359855799' THEN ('1359855799' IN ()) WHEN ((v0.c0)<<(v0.c0)) THEN NULL COLLATE RTRIM ELSE v0.c0 COLLATE NOCASE END DESC, (((v0.c0 IN ()))&(CAST(v0.c0 AS NUMERIC)))  NULLS LAST, (NOT ((v0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))&((NOT (v0.c0))))) ORDER BY CASE WHEN v0.c0 THEN ((((-1041735101)OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0)%(v0.c0)) THEN x'e83f' WHEN LIKELIHOOD(v0.c0, 0.7652770441966213) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN '1359855799' THEN ('1359855799' IN ()) WHEN ((v0.c0)<<(v0.c0)) THEN NULL COLLATE RTRIM ELSE v0.c0 COLLATE NOCASE END DESC, (((v0.c0 IN ()))&(CAST(v0.c0 AS NUMERIC)))  NULLS LAST, (NOT ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))&((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((((-1041735101)OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0)%(v0.c0)) THEN x'e83f' WHEN LIKELIHOOD(v0.c0, 0.7652770441966213) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN '1359855799' THEN ('1359855799' IN ()) WHEN ((v0.c0)<<(v0.c0)) THEN NULL COLLATE RTRIM ELSE v0.c0 COLLATE NOCASE END DESC, (((v0.c0 IN ()))&(CAST(v0.c0 AS NUMERIC)))  NULLS LAST, (NOT ((v0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))&((NOT (v0.c0))))) ORDER BY CASE WHEN v0.c0 THEN ((((-1041735101)OR(v0.c0)))OR(v0.c0)) WHEN ((v0.c0)%(v0.c0)) THEN x'e83f' WHEN LIKELIHOOD(v0.c0, 0.7652770441966213) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN '1359855799' THEN ('1359855799' IN ()) WHEN ((v0.c0)<<(v0.c0)) THEN NULL COLLATE RTRIM ELSE v0.c0 COLLATE NOCASE END DESC, (((v0.c0 IN ()))&(CAST(v0.c0 AS NUMERIC)))  NULLS LAST, (NOT ((v0.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 INDEXED BY i37 LEFT OUTER JOIN t1 ON ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))>>(CAST(vt0.c1 AS REAL))) WHERE (((+ (vt0.c1)) IN ())) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM v0, vt0 INDEXED BY i37 LEFT OUTER JOIN t1 ON ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))>>(CAST(vt0.c1 AS REAL))) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 INDEXED BY i37 LEFT OUTER JOIN t1 ON ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))>>(CAST(vt0.c1 AS REAL))) WHERE (((+ (vt0.c1)) IN ())) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM v0, vt0 INDEXED BY i37 LEFT OUTER JOIN t1 ON ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))>>(CAST(vt0.c1 AS REAL))) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CAST((+ (vt1.c0)) AS INTEGER) RIGHT OUTER JOIN t1 ON (((((((('')OR(vt0.c1)))AND(vt1.c1)))OR(x'')))AND(('-605636982' IN (vt1.c1, vt1.c2)))) CROSS JOIN vt1 ON (((v0.c0 IN (vt1.c1, vt0.c1))) IS FALSE) WHERE ((((+ (0Xffffffffacf057c7)))LIKE((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0Xffffffffacf057c7)))LIKE((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST((+ (vt1.c0)) AS INTEGER) RIGHT OUTER JOIN t1 ON (((((((('')OR(vt0.c1)))AND(vt1.c1)))OR(x'')))AND(('-605636982' IN (vt1.c1, vt1.c2)))) CROSS JOIN vt1 ON (((v0.c0 IN (vt1.c1, vt0.c1))) IS FALSE));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CAST((+ (vt1.c0)) AS INTEGER) RIGHT OUTER JOIN t1 ON (((((((('')OR(vt0.c1)))AND(vt1.c1)))OR(x'')))AND(('-605636982' IN (vt1.c1, vt1.c2)))) CROSS JOIN vt1 ON (((v0.c0 IN (vt1.c1, vt0.c1))) IS FALSE) WHERE ((((+ (0Xffffffffacf057c7)))LIKE((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0Xffffffffacf057c7)))LIKE((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST((+ (vt1.c0)) AS INTEGER) RIGHT OUTER JOIN t1 ON (((((((('')OR(vt0.c1)))AND(vt1.c1)))OR(x'')))AND(('-605636982' IN (vt1.c1, vt1.c2)))) CROSS JOIN vt1 ON (((v0.c0 IN (vt1.c1, vt0.c1))) IS FALSE));
SELECT ALL * FROM t1, vt0, vt1 WHERE (((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 WHEN t1.c0 THEN '!\r\r' WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c2 END)OR(((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 WHEN t1.c0 THEN '!\r\r' WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c2 END)OR(((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE (((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 WHEN t1.c0 THEN '!\r\r' WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c2 END)OR(((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 WHEN t1.c0 THEN '!\r\r' WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c2 END)OR(((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE (((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 WHEN t1.c0 THEN '!\r\r' WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c2 END)OR(((vt1.c1) BETWEEN (t1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM v0, t1 WHERE (CASE NULL  WHEN v0.c0 THEN t1.c0 END COLLATE RTRIM) ORDER BY CAST(JULIANDAY(t1.c0, t1.c0, 2.039939616E9) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN v0.c0 THEN t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, t1 ORDER BY CAST(JULIANDAY(t1.c0, t1.c0, 2.039939616E9) AS BLOB) DESC);
SELECT COUNT(*) FROM v0, t1 WHERE (CASE NULL  WHEN v0.c0 THEN t1.c0 END COLLATE RTRIM) ORDER BY CAST(JULIANDAY(t1.c0, t1.c0, 2.039939616E9) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN v0.c0 THEN t1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, t1 ORDER BY CAST(JULIANDAY(t1.c0, t1.c0, 2.039939616E9) AS BLOB) DESC);
SELECT COUNT(*) FROM v0, t1 WHERE (CASE NULL  WHEN v0.c0 THEN t1.c0 END COLLATE RTRIM) ORDER BY CAST(JULIANDAY(t1.c0, t1.c0, 2.039939616E9) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM vt1, t1, v0 WHERE ((((- (vt1.c0)))GLOB(v0.c0))) ORDER BY NULL  NULLS LAST, ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND((v0.c0 IN (t1.c0)))))AND((vt1.c0 IN (vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))GLOB(v0.c0))) IS TRUE)  as count FROM vt1, t1, v0 ORDER BY NULL  NULLS LAST, ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND((v0.c0 IN (t1.c0)))))AND((vt1.c0 IN (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, t1, v0 WHERE ((((- (vt1.c0)))GLOB(v0.c0))) ORDER BY NULL  NULLS LAST, ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND((v0.c0 IN (t1.c0)))))AND((vt1.c0 IN (vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))GLOB(v0.c0))) IS TRUE)  as count FROM vt1, t1, v0 ORDER BY NULL  NULLS LAST, ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND((v0.c0 IN (t1.c0)))))AND((vt1.c0 IN (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, t1, v0 WHERE ((((- (vt1.c0)))GLOB(v0.c0))) ORDER BY NULL  NULLS LAST, ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND((v0.c0 IN (t1.c0)))))AND((vt1.c0 IN (vt1.c1))));
SELECT * FROM vt1, v0, vt0, t1 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, vt0, t1);
SELECT * FROM vt1, v0, vt0, t1 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, vt0, t1);
SELECT * FROM vt1, v0, vt0, t1 WHERE (CAST(x'' AS NUMERIC));
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c2)) COLLATE RTRIM) ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)  NULLS LAST, (NOT (((vt1.c2)>>(vt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, t1 NOT INDEXED, vt0 ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)  NULLS LAST, (NOT (((vt1.c2)>>(vt1.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c2)) COLLATE RTRIM) ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)  NULLS LAST, (NOT (((vt1.c2)>>(vt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, v0, t1 NOT INDEXED, vt0 ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)  NULLS LAST, (NOT (((vt1.c2)>>(vt1.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, v0, t1, vt0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c2)) COLLATE RTRIM) ORDER BY ((((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)  NULLS LAST, (NOT (((vt1.c2)>>(vt1.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1 WHERE (ABS(DISTINCT t1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT t1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (ABS(DISTINCT t1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT t1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (ABS(DISTINCT t1.c0) COLLATE BINARY);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((('A#	h嗭?g') BETWEEN (vt0.c1) AND (vt1.c1)) COLLATE NOCASE) ORDER BY NULLIF(((vt0.c1) IS FALSE), vt0.c1 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('A#	h嗭?g') BETWEEN (vt0.c1) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY NULLIF(((vt0.c1) IS FALSE), vt0.c1 COLLATE BINARY) ASC);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((('A#	h嗭?g') BETWEEN (vt0.c1) AND (vt1.c1)) COLLATE NOCASE) ORDER BY NULLIF(((vt0.c1) IS FALSE), vt0.c1 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('A#	h嗭?g') BETWEEN (vt0.c1) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY NULLIF(((vt0.c1) IS FALSE), vt0.c1 COLLATE BINARY) ASC);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((('A#	h嗭?g') BETWEEN (vt0.c1) AND (vt1.c1)) COLLATE NOCASE) ORDER BY NULLIF(((vt0.c1) IS FALSE), vt0.c1 COLLATE BINARY) ASC;
SELECT * FROM v0, vt0, vt1 WHERE (((((((vt0.c0)AND(vt1.c2)))AND(vt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt1.c2)))AND(vt1.c2))) NOTNULL)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE (((((((vt0.c0)AND(vt1.c2)))AND(vt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt1.c2)))AND(vt1.c2))) NOTNULL)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE (((((((vt0.c0)AND(vt1.c2)))AND(vt1.c2))) NOTNULL));
SELECT ALL * FROM t1, vt1, vt0, v0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c2))  WHEN vt0.c1 THEN ((t1.c0) NOT BETWEEN (t1.c0) AND ('')) WHEN ((('-633638686')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND ('-1216209840')) THEN CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 ELSE vt1.c2 END END) ORDER BY (NOT (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c2))  WHEN vt0.c1 THEN ((t1.c0) NOT BETWEEN (t1.c0) AND ('')) WHEN ((('-633638686')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND ('-1216209840')) THEN CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 ELSE vt1.c2 END END) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY (NOT (v0.c0))  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0, v0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c2))  WHEN vt0.c1 THEN ((t1.c0) NOT BETWEEN (t1.c0) AND ('')) WHEN ((('-633638686')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND ('-1216209840')) THEN CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 ELSE vt1.c2 END END) ORDER BY (NOT (v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c2))  WHEN vt0.c1 THEN ((t1.c0) NOT BETWEEN (t1.c0) AND ('')) WHEN ((('-633638686')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND ('-1216209840')) THEN CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 ELSE vt1.c2 END END) IS TRUE)  as count FROM t1, vt1, vt0, v0 ORDER BY (NOT (v0.c0))  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0, v0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c2))  WHEN vt0.c1 THEN ((t1.c0) NOT BETWEEN (t1.c0) AND ('')) WHEN ((('-633638686')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS BLOB) WHEN ((vt1.c0) NOT BETWEEN (v0.c0) AND ('-1216209840')) THEN CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 ELSE vt1.c2 END END) ORDER BY (NOT (v0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1, vt0, v0 WHERE (((vt1.c2) BETWEEN ((~ (t1.c0))) AND ((((0.973413356801067)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) BETWEEN ((~ (t1.c0))) AND ((((0.973413356801067)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM t1, vt1, vt0, v0);
SELECT COUNT(*) FROM t1, vt1, vt0, v0 WHERE (((vt1.c2) BETWEEN ((~ (t1.c0))) AND ((((0.973413356801067)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) BETWEEN ((~ (t1.c0))) AND ((((0.973413356801067)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM t1, vt1, vt0, v0);
SELECT COUNT(*) FROM t1, vt1, vt0, v0 WHERE (((vt1.c2) BETWEEN ((~ (t1.c0))) AND ((((0.973413356801067)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT * FROM t1, vt0, v0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0) BETWEEN ('-267450262') AND (vt0.c0))) AND (CAST(t1.c0 AS BLOB)))) ORDER BY ((+ (vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0) BETWEEN ('-267450262') AND (vt0.c0))) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY ((+ (vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT * FROM t1, vt0, v0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0) BETWEEN ('-267450262') AND (vt0.c0))) AND (CAST(t1.c0 AS BLOB)))) ORDER BY ((+ (vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0) BETWEEN ('-267450262') AND (vt0.c0))) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY ((+ (vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT * FROM t1, vt0, v0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0) BETWEEN ('-267450262') AND (vt0.c0))) AND (CAST(t1.c0 AS BLOB)))) ORDER BY ((+ (vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT * FROM vt1 NOT INDEXED, vt0, v0, t1 WHERE (CASE ((((t1.c0)OR(vt1.c2)))AND(vt1.c1))  WHEN vt1.c1 THEN ((((v0.c0)OR(vt1.c0)))OR(x'')) END) ORDER BY json_quote(CASE WHEN -1775522496 THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c2 THEN vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t1.c0)OR(vt1.c2)))AND(vt1.c1))  WHEN vt1.c1 THEN ((((v0.c0)OR(vt1.c0)))OR(x'')) END) IS TRUE)  as count FROM vt1, vt0, v0, t1 ORDER BY json_quote(CASE WHEN -1775522496 THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c2 THEN vt0.c0 END) DESC);
SELECT * FROM vt1 NOT INDEXED, vt0, v0, t1 WHERE (CASE ((((t1.c0)OR(vt1.c2)))AND(vt1.c1))  WHEN vt1.c1 THEN ((((v0.c0)OR(vt1.c0)))OR(x'')) END) ORDER BY json_quote(CASE WHEN -1775522496 THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c2 THEN vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t1.c0)OR(vt1.c2)))AND(vt1.c1))  WHEN vt1.c1 THEN ((((v0.c0)OR(vt1.c0)))OR(x'')) END) IS TRUE)  as count FROM vt1, vt0, v0, t1 ORDER BY json_quote(CASE WHEN -1775522496 THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c2 THEN vt0.c0 END) DESC);
SELECT * FROM vt1 NOT INDEXED, vt0, v0, t1 WHERE (CASE ((((t1.c0)OR(vt1.c2)))AND(vt1.c1))  WHEN vt1.c1 THEN ((((v0.c0)OR(vt1.c0)))OR(x'')) END) ORDER BY json_quote(CASE WHEN -1775522496 THEN NULL WHEN x'' THEN vt1.c0 WHEN vt1.c2 THEN vt0.c0 END) DESC;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST(((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) AS TEXT) WHERE (CAST(((vt0.c1) IS FALSE) AS BLOB)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) AS TEXT) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST(((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) AS TEXT) WHERE (CAST(((vt0.c1) IS FALSE) AS BLOB)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) AS TEXT) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST(((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)) AS TEXT) WHERE (CAST(((vt0.c1) IS FALSE) AS BLOB)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR('-1183468776'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR('-1183468776'))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR('-1183468776'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR('-1183468776'))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR('-1183468776'))) IS FALSE));
SELECT * FROM t1 WHERE (((((((t1.c0)GLOB(t1.c0)))AND((+ (t1.c0)))))OR(((t1.c0)||(t1.c0))))) ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>>(CASE t1.c0  WHEN 0.6282876775815479 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)GLOB(t1.c0)))AND((+ (t1.c0)))))OR(((t1.c0)||(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>>(CASE t1.c0  WHEN 0.6282876775815479 THEN t1.c0 END)));
SELECT * FROM t1 WHERE (((((((t1.c0)GLOB(t1.c0)))AND((+ (t1.c0)))))OR(((t1.c0)||(t1.c0))))) ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>>(CASE t1.c0  WHEN 0.6282876775815479 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)GLOB(t1.c0)))AND((+ (t1.c0)))))OR(((t1.c0)||(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>>(CASE t1.c0  WHEN 0.6282876775815479 THEN t1.c0 END)));
SELECT * FROM t1 WHERE (((((((t1.c0)GLOB(t1.c0)))AND((+ (t1.c0)))))OR(((t1.c0)||(t1.c0))))) ORDER BY (((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c0))))>>(CASE t1.c0  WHEN 0.6282876775815479 THEN t1.c0 END));
SELECT ALL COUNT(*) FROM vt1 WHERE (json_remove(vt1.c1 COLLATE RTRIM, CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((json_remove(vt1.c1 COLLATE RTRIM, CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (json_remove(vt1.c1 COLLATE RTRIM, CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((json_remove(vt1.c1 COLLATE RTRIM, CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT * FROM t1, vt1, v0, vt0 WHERE (TRIM(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END, ((0.32718940205427427)!=(t1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END, ((0.32718940205427427)!=(t1.c0)))) IS TRUE)  as count FROM t1, vt1, v0, vt0);
SELECT * FROM t1, vt1, v0, vt0 WHERE (TRIM(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END, ((0.32718940205427427)!=(t1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END, ((0.32718940205427427)!=(t1.c0)))) IS TRUE)  as count FROM t1, vt1, v0, vt0);
SELECT * FROM t1, vt1, v0, vt0 WHERE (TRIM(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END, ((0.32718940205427427)!=(t1.c0))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((vt1.c2)AND(x'')))AND(vt1.c2)) IN ())) ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)AND(x'')))AND(vt1.c2)) IN ())) IS TRUE)  as count FROM vt1, v0 ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((vt1.c2)AND(x'')))AND(vt1.c2)) IN ())) ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)AND(x'')))AND(vt1.c2)) IN ())) IS TRUE)  as count FROM vt1, v0 ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((((vt1.c2)AND(x'')))AND(vt1.c2)) IN ())) ORDER BY (v0.c0 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c1)*(vt1.c1)) AS BLOB) CROSS JOIN t1 ON ((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)) COLLATE NOCASE WHERE (t1.c0) ORDER BY ((((((vt1.c2)OR(vt0.c1)))AND(vt1.c2)))AND(((vt1.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c1)*(vt1.c1)) AS BLOB) CROSS JOIN t1 ON ((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)) COLLATE NOCASE ORDER BY ((((((vt1.c2)OR(vt0.c1)))AND(vt1.c2)))AND(((vt1.c0) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c1)*(vt1.c1)) AS BLOB) CROSS JOIN t1 ON ((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)) COLLATE NOCASE WHERE (t1.c0) ORDER BY ((((((vt1.c2)OR(vt0.c1)))AND(vt1.c2)))AND(((vt1.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c1)*(vt1.c1)) AS BLOB) CROSS JOIN t1 ON ((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)) COLLATE NOCASE ORDER BY ((((((vt1.c2)OR(vt0.c1)))AND(vt1.c2)))AND(((vt1.c0) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c1)*(vt1.c1)) AS BLOB) CROSS JOIN t1 ON ((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)) COLLATE NOCASE WHERE (t1.c0) ORDER BY ((((((vt1.c2)OR(vt0.c1)))AND(vt1.c2)))AND(((vt1.c0) IS FALSE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, v0, vt1, vt0 WHERE (t1.c0) ORDER BY ((((t1.c0)<>(vt1.c0))) BETWEEN ((('-1753194818') IS FALSE)) AND (((vt1.c2)<=(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, v0, vt1, vt0 ORDER BY ((((t1.c0)<>(vt1.c0))) BETWEEN ((('-1753194818') IS FALSE)) AND (((vt1.c2)<=(vt0.c1)))));
SELECT COUNT(*) FROM t1, v0, vt1, vt0 WHERE (t1.c0) ORDER BY ((((t1.c0)<>(vt1.c0))) BETWEEN ((('-1753194818') IS FALSE)) AND (((vt1.c2)<=(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, v0, vt1, vt0 ORDER BY ((((t1.c0)<>(vt1.c0))) BETWEEN ((('-1753194818') IS FALSE)) AND (((vt1.c2)<=(vt0.c1)))));
SELECT COUNT(*) FROM t1, v0, vt1, vt0 WHERE (t1.c0) ORDER BY ((((t1.c0)<>(vt1.c0))) BETWEEN ((('-1753194818') IS FALSE)) AND (((vt1.c2)<=(vt0.c1))));
SELECT ALL * FROM vt1, v0, t1 WHERE (t1.c0) ORDER BY CASE (- (vt1.c2))  WHEN TYPEOF(DISTINCT v0.c0) THEN (NOT (t1.c0)) WHEN (((v0.c0)) NOT BETWEEN ((0.20968384404013263)) AND ((vt1.c0))) THEN ((((vt1.c2)OR(v0.c0)))OR(vt1.c1)) WHEN ((vt1.c2) ISNULL) THEN load_extension(vt1.c1, vt1.c1) ELSE ((((t1.c0)AND(vt1.c2)))AND(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, v0, t1 NOT INDEXED ORDER BY CASE (- (vt1.c2))  WHEN TYPEOF(DISTINCT v0.c0) THEN (NOT (t1.c0)) WHEN (((v0.c0)) NOT BETWEEN ((0.20968384404013263)) AND ((vt1.c0))) THEN ((((vt1.c2)OR(v0.c0)))OR(vt1.c1)) WHEN ((vt1.c2) ISNULL) THEN load_extension(vt1.c1, vt1.c1) ELSE ((((t1.c0)AND(vt1.c2)))AND(v0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt1, v0, t1 WHERE (t1.c0) ORDER BY CASE (- (vt1.c2))  WHEN TYPEOF(DISTINCT v0.c0) THEN (NOT (t1.c0)) WHEN (((v0.c0)) NOT BETWEEN ((0.20968384404013263)) AND ((vt1.c0))) THEN ((((vt1.c2)OR(v0.c0)))OR(vt1.c1)) WHEN ((vt1.c2) ISNULL) THEN load_extension(vt1.c1, vt1.c1) ELSE ((((t1.c0)AND(vt1.c2)))AND(v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, v0, t1 NOT INDEXED ORDER BY CASE (- (vt1.c2))  WHEN TYPEOF(DISTINCT v0.c0) THEN (NOT (t1.c0)) WHEN (((v0.c0)) NOT BETWEEN ((0.20968384404013263)) AND ((vt1.c0))) THEN ((((vt1.c2)OR(v0.c0)))OR(vt1.c1)) WHEN ((vt1.c2) ISNULL) THEN load_extension(vt1.c1, vt1.c1) ELSE ((((t1.c0)AND(vt1.c2)))AND(v0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt1, v0, t1 WHERE (t1.c0) ORDER BY CASE (- (vt1.c2))  WHEN TYPEOF(DISTINCT v0.c0) THEN (NOT (t1.c0)) WHEN (((v0.c0)) NOT BETWEEN ((0.20968384404013263)) AND ((vt1.c0))) THEN ((((vt1.c2)OR(v0.c0)))OR(vt1.c1)) WHEN ((vt1.c2) ISNULL) THEN load_extension(vt1.c1, vt1.c1) ELSE ((((t1.c0)AND(vt1.c2)))AND(v0.c0)) END  NULLS LAST;
SELECT ALL * FROM vt1, t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE BINARY) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE BINARY) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (((t1.c0 COLLATE BINARY) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1, vt0, v0, t1 WHERE (((((((((((((vt1.c2)AND((+ (t1.c0)))))AND(vt1.c2)))AND(((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((((vt1.c2)OR(vt0.c1)))AND(vt1.c0)))))OR(ABS(t1.c0))))OR((~ (vt0.c0))))) ORDER BY (x'' IN (CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c2)AND((+ (t1.c0)))))AND(vt1.c2)))AND(((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((((vt1.c2)OR(vt0.c1)))AND(vt1.c0)))))OR(ABS(t1.c0))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0, t1 ORDER BY (x'' IN (CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, v0, t1 WHERE (((((((((((((vt1.c2)AND((+ (t1.c0)))))AND(vt1.c2)))AND(((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((((vt1.c2)OR(vt0.c1)))AND(vt1.c0)))))OR(ABS(t1.c0))))OR((~ (vt0.c0))))) ORDER BY (x'' IN (CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c2)AND((+ (t1.c0)))))AND(vt1.c2)))AND(((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((((vt1.c2)OR(vt0.c1)))AND(vt1.c0)))))OR(ABS(t1.c0))))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0, t1 ORDER BY (x'' IN (CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, v0, t1 WHERE (((((((((((((vt1.c2)AND((+ (t1.c0)))))AND(vt1.c2)))AND(((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((((vt1.c2)OR(vt0.c1)))AND(vt1.c0)))))OR(ABS(t1.c0))))OR((~ (vt0.c0))))) ORDER BY (x'' IN (CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM vt1, vt0, v0 WHERE ((+ (CASE vt0.c1  WHEN vt1.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c1  WHEN vt1.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE ((+ (CASE vt0.c1  WHEN vt1.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c1  WHEN vt1.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE ((+ (CASE vt0.c1  WHEN vt1.c1 THEN vt0.c1 END)));
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON (((NULL)) BETWEEN ((CAST(NULL AS NUMERIC))) AND ((0.155298844469401))) WHERE ((- ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((NULL)) BETWEEN ((CAST(NULL AS NUMERIC))) AND ((0.155298844469401))));
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON (((NULL)) BETWEEN ((CAST(NULL AS NUMERIC))) AND ((0.155298844469401))) WHERE ((- ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((NULL)) BETWEEN ((CAST(NULL AS NUMERIC))) AND ((0.155298844469401))));
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON (((NULL)) BETWEEN ((CAST(NULL AS NUMERIC))) AND ((0.155298844469401))) WHERE ((- ((t1.c0 IN ()))));
SELECT * FROM vt1 CROSS JOIN t1 ON UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END) INNER JOIN vt0 ON CAST(((((-633638686)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC) WHERE (STRFTIME(((vt0.c0) NOTNULL), t1.c0 COLLATE RTRIM, ((NULL)|(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0) NOTNULL), t1.c0 COLLATE RTRIM, ((NULL)|(t1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END) INNER JOIN vt0 ON CAST(((((-633638686)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT * FROM vt1 CROSS JOIN t1 ON UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END) INNER JOIN vt0 ON CAST(((((-633638686)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC) WHERE (STRFTIME(((vt0.c0) NOTNULL), t1.c0 COLLATE RTRIM, ((NULL)|(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0) NOTNULL), t1.c0 COLLATE RTRIM, ((NULL)|(t1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END) INNER JOIN vt0 ON CAST(((((-633638686)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT * FROM vt1 CROSS JOIN t1 ON UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END) INNER JOIN vt0 ON CAST(((((-633638686)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC) WHERE (STRFTIME(((vt0.c0) NOTNULL), t1.c0 COLLATE RTRIM, ((NULL)|(t1.c0))));
SELECT * FROM vt1, v0 WHERE (((('VtQ_#!~N', v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((('VtQ_#!~N', v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((('VtQ_#!~N', v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((('VtQ_#!~N', v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((('VtQ_#!~N', v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((v0.c0, v0.c0, vt1.c1))) COLLATE BINARY);
SELECT COUNT(*) FROM v0, t1, vt1 WHERE (CAST(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2)) AS INTEGER)) ORDER BY ((t1.c0)!=((((t1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((t1.c0, v0.c0, NULL)) AND ((vt1.c2, t1.c0, vt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2)) AS INTEGER)) IS TRUE)  as count FROM v0, t1, vt1 ORDER BY ((t1.c0)!=((((t1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((t1.c0, v0.c0, NULL)) AND ((vt1.c2, t1.c0, vt1.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t1, vt1 WHERE (CAST(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2)) AS INTEGER)) ORDER BY ((t1.c0)!=((((t1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((t1.c0, v0.c0, NULL)) AND ((vt1.c2, t1.c0, vt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2)) AS INTEGER)) IS TRUE)  as count FROM v0, t1, vt1 ORDER BY ((t1.c0)!=((((t1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((t1.c0, v0.c0, NULL)) AND ((vt1.c2, t1.c0, vt1.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, t1, vt1 WHERE (CAST(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c2)) AS INTEGER)) ORDER BY ((t1.c0)!=((((t1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((t1.c0, v0.c0, NULL)) AND ((vt1.c2, t1.c0, vt1.c2)))))  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t1, v0 WHERE (((((((((vt1.c1)AND(2001845313)))AND(((((((((NULL)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))OR(vt1.c0)))))OR(0.6459432267004144)))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(2001845313)))AND(((((((((NULL)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))OR(vt1.c0)))))OR(0.6459432267004144)))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, t1, v0);
SELECT ALL * FROM vt1, vt0, t1, v0 WHERE (((((((((vt1.c1)AND(2001845313)))AND(((((((((NULL)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))OR(vt1.c0)))))OR(0.6459432267004144)))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(2001845313)))AND(((((((((NULL)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))OR(vt1.c0)))))OR(0.6459432267004144)))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, t1, v0);
SELECT ALL * FROM vt1, vt0, t1, v0 WHERE (((((((((vt1.c1)AND(2001845313)))AND(((((((((NULL)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c2)))OR(vt1.c0)))))OR(0.6459432267004144)))AND(v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0, t1 NOT INDEXED, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0, t1 NOT INDEXED, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL * FROM v0, t1 NOT INDEXED, vt0 WHERE ('');
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c2))))OR(CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c2))))OR(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c2))))OR(CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c2))))OR(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c2))))OR(CAST(vt1.c1 AS NUMERIC))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND ((vt0.c0 IN ()))) WHERE ((((((v0.c0) NOT NULL)))<((((vt0.c1) IS FALSE))))) ORDER BY STRFTIME(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE 0.8871965306068582 END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT NULL)))<((((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND ((vt0.c0 IN ()))) ORDER BY STRFTIME(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE 0.8871965306068582 END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND ((vt0.c0 IN ()))) WHERE ((((((v0.c0) NOT NULL)))<((((vt0.c1) IS FALSE))))) ORDER BY STRFTIME(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE 0.8871965306068582 END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT NULL)))<((((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND ((vt0.c0 IN ()))) ORDER BY STRFTIME(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE 0.8871965306068582 END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ())) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND ((vt0.c0 IN ()))) WHERE ((((((v0.c0) NOT NULL)))<((((vt0.c1) IS FALSE))))) ORDER BY STRFTIME(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE 0.8871965306068582 END, ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) RIGHT OUTER JOIN t1 ON (((- (t1.c0)))&(NULL)) WHERE (((CAST(vt1.c2 AS BLOB))IS(CAST(vt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS BLOB))IS(CAST(vt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) RIGHT OUTER JOIN t1 ON (((- (t1.c0)))&(NULL)));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) RIGHT OUTER JOIN t1 ON (((- (t1.c0)))&(NULL)) WHERE (((CAST(vt1.c2 AS BLOB))IS(CAST(vt1.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS BLOB))IS(CAST(vt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) RIGHT OUTER JOIN t1 ON (((- (t1.c0)))&(NULL)));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) RIGHT OUTER JOIN t1 ON (((- (t1.c0)))&(NULL)) WHERE (((CAST(vt1.c2 AS BLOB))IS(CAST(vt1.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((x'') NOT BETWEEN (((vt1.c1) IS FALSE)) AND ('-1340237663' COLLATE BINARY))) ORDER BY ((((ABS(DISTINCT vt1.c0))OR(x'd9da')))OR('2039939616')) ASC, CAST(CASE vt1.c0  WHEN vt1.c2 THEN t1.c0 ELSE vt1.c0 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (((vt1.c1) IS FALSE)) AND ('-1340237663' COLLATE BINARY))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((ABS(DISTINCT vt1.c0))OR(x'd9da')))OR('2039939616')) ASC, CAST(CASE vt1.c0  WHEN vt1.c2 THEN t1.c0 ELSE vt1.c0 END AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((x'') NOT BETWEEN (((vt1.c1) IS FALSE)) AND ('-1340237663' COLLATE BINARY))) ORDER BY ((((ABS(DISTINCT vt1.c0))OR(x'd9da')))OR('2039939616')) ASC, CAST(CASE vt1.c0  WHEN vt1.c2 THEN t1.c0 ELSE vt1.c0 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (((vt1.c1) IS FALSE)) AND ('-1340237663' COLLATE BINARY))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((ABS(DISTINCT vt1.c0))OR(x'd9da')))OR('2039939616')) ASC, CAST(CASE vt1.c0  WHEN vt1.c2 THEN t1.c0 ELSE vt1.c0 END AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((x'') NOT BETWEEN (((vt1.c1) IS FALSE)) AND ('-1340237663' COLLATE BINARY))) ORDER BY ((((ABS(DISTINCT vt1.c0))OR(x'd9da')))OR('2039939616')) ASC, CAST(CASE vt1.c0  WHEN vt1.c2 THEN t1.c0 ELSE vt1.c0 END AS INTEGER) DESC;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (('1419039733')<>((((v0.c0))>=((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (('1419039733')!=((((v0.c0))>=((v0.c0))))) DESC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (('1419039733')<>((((v0.c0))>=((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (('1419039733')!=((((v0.c0))>=((v0.c0))))) DESC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (('1419039733')<>((((v0.c0))>=((v0.c0))))) DESC;
SELECT COUNT(*) FROM vt0, t1, v0, vt1 WHERE (((vt1.c0)AND(NULL)) COLLATE RTRIM) ORDER BY ((PRINTF(v0.c0)) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c0 ELSE v0.c0 END) AND (((vt1.c2) NOT NULL))), CAST(v0.c0 COLLATE NOCASE AS TEXT) DESC, ((((((((vt0.c1)OR(CAST(vt1.c2 AS NUMERIC))))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND((((t1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0))))))OR((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1, v0, vt1 ORDER BY ((PRINTF(v0.c0)) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c0 ELSE v0.c0 END) AND (((vt1.c2) NOT NULL))), CAST(v0.c0 COLLATE NOCASE AS TEXT) DESC, ((((((((vt0.c1)OR(CAST(vt1.c2 AS NUMERIC))))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND((((t1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0))))))OR((NOT (v0.c0)))));
SELECT COUNT(*) FROM vt0, t1, v0, vt1 WHERE (((vt1.c0)AND(NULL)) COLLATE RTRIM) ORDER BY ((PRINTF(v0.c0)) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c0 ELSE v0.c0 END) AND (((vt1.c2) NOT NULL))), CAST(v0.c0 COLLATE NOCASE AS TEXT) DESC, ((((((((vt0.c1)OR(CAST(vt1.c2 AS NUMERIC))))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND((((t1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0))))))OR((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1, v0, vt1 ORDER BY ((PRINTF(v0.c0)) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c0 ELSE v0.c0 END) AND (((vt1.c2) NOT NULL))), CAST(v0.c0 COLLATE NOCASE AS TEXT) DESC, ((((((((vt0.c1)OR(CAST(vt1.c2 AS NUMERIC))))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND((((t1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0))))))OR((NOT (v0.c0)))));
SELECT COUNT(*) FROM vt0, t1, v0, vt1 WHERE (((vt1.c0)AND(NULL)) COLLATE RTRIM) ORDER BY ((PRINTF(v0.c0)) NOT BETWEEN (CASE WHEN t1.c0 THEN vt1.c0 ELSE v0.c0 END) AND (((vt1.c2) NOT NULL))), CAST(v0.c0 COLLATE NOCASE AS TEXT) DESC, ((((((((vt0.c1)OR(CAST(vt1.c2 AS NUMERIC))))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND((((t1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0))))))OR((NOT (v0.c0))));
SELECT ALL * FROM t1 WHERE (((((t1.c0))!=((t1.c0))) IN ())) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))<>((t1.c0))) IN ())) IS TRUE)  as count FROM t1 ORDER BY x'' DESC);
SELECT ALL * FROM t1 WHERE (((((t1.c0))!=((t1.c0))) IN ())) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))<>((t1.c0))) IN ())) IS TRUE)  as count FROM t1 ORDER BY x'' DESC);
SELECT ALL * FROM t1 WHERE (((((t1.c0))!=((t1.c0))) IN ())) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE ('') ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE ('') ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, v0, vt0, t1 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, t1 WHERE ('') ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(t1.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN v0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))=((vt0.c1, v0.c0, v0.c0, vt0.c0, t1.c0))) COLLATE RTRIM WHERE (x'') ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (LAST_INSERT_ROWID())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST(t1.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN v0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))==((vt0.c1, v0.c0, v0.c0, vt0.c0, t1.c0))) COLLATE RTRIM ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (LAST_INSERT_ROWID())) ASC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(t1.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN v0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))=((vt0.c1, v0.c0, v0.c0, vt0.c0, t1.c0))) COLLATE RTRIM WHERE (x'') ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (LAST_INSERT_ROWID())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST(t1.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN v0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))==((vt0.c1, v0.c0, v0.c0, vt0.c0, t1.c0))) COLLATE RTRIM ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (LAST_INSERT_ROWID())) ASC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(t1.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM LEFT OUTER JOIN v0 ON (((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))=((vt0.c1, v0.c0, v0.c0, vt0.c0, t1.c0))) COLLATE RTRIM WHERE (x'') ORDER BY ((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (LAST_INSERT_ROWID())) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1) IS TRUE)))==((CAST(vt0.c1 AS INTEGER))))) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1) BETWEEN (NULL) AND ('Qp%GG r糡')) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0)&(x'')) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)>(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) IS TRUE)))=((CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1) BETWEEN (NULL) AND ('Qp%GG r糡')) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0)&(x'')) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)>(vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1) IS TRUE)))==((CAST(vt0.c1 AS INTEGER))))) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1) BETWEEN (NULL) AND ('Qp%GG r糡')) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0)&(x'')) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)>(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) IS TRUE)))=((CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1) BETWEEN (NULL) AND ('Qp%GG r糡')) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0)&(x'')) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)>(vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1) IS TRUE)))==((CAST(vt0.c1 AS INTEGER))))) ORDER BY CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1) BETWEEN (NULL) AND ('Qp%GG r糡')) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0)&(x'')) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)>(vt0.c0)) END ASC;
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE ((NOT (CAST(vt0.c1 AS BLOB)))) ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF('0.5850488821578063', t1.c0))) AND (((((vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((vt1.c2, vt0.c1, vt0.c1))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF('0.5850488821578063', t1.c0))) AND (((((vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((vt1.c2, vt0.c1, vt0.c1))))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE ((NOT (CAST(vt0.c1 AS BLOB)))) ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF('0.5850488821578063', t1.c0))) AND (((((vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((vt1.c2, vt0.c1, vt0.c1))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t1, vt1, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF('0.5850488821578063', t1.c0))) AND (((((vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((vt1.c2, vt0.c1, vt0.c1))))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE ((NOT (CAST(vt0.c1 AS BLOB)))) ORDER BY (((v0.c0)) NOT BETWEEN ((NULLIF('0.5850488821578063', t1.c0))) AND (((((vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((vt1.c2, vt0.c1, vt0.c1))))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((TYPEOF(DISTINCT vt1.c2))-(((vt1.c1)==(vt1.c2))))) ORDER BY (((vt1.c2 IN (vt1.c1)))*(TRIM(vt1.c0))), x'';
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt1.c2))-(((vt1.c1)=(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2 IN (vt1.c1)))*(TRIM(vt1.c0))), x'');
SELECT COUNT(*) FROM vt1 WHERE (((TYPEOF(DISTINCT vt1.c2))-(((vt1.c1)==(vt1.c2))))) ORDER BY (((vt1.c2 IN (vt1.c1)))*(TRIM(vt1.c0))), x'';
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt1.c2))-(((vt1.c1)=(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2 IN (vt1.c1)))*(TRIM(vt1.c0))), x'');
SELECT COUNT(*) FROM vt1 WHERE (((TYPEOF(DISTINCT vt1.c2))-(((vt1.c1)==(vt1.c2))))) ORDER BY (((vt1.c2 IN (vt1.c1)))*(TRIM(vt1.c0))), x'';
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE ROUND(v0.c0, NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE ROUND(v0.c0, NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE ROUND(v0.c0, NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE ROUND(v0.c0, NULL) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN ((v0.c0) NOTNULL) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE ROUND(v0.c0, NULL) END ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((x'6f2d') ISNULL))*(((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'6f2d') ISNULL))*(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((x'6f2d') ISNULL))*(((t1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'6f2d') ISNULL))*(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((x'6f2d') ISNULL))*(((t1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0, vt1 INDEXED BY i37, t1 WHERE ((((vt1.c1))>=((x'')))) ORDER BY (((vt1.c1)) BETWEEN (('' COLLATE BINARY)) AND (((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1))>=((x'')))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i37, t1 ORDER BY (((vt1.c1)) BETWEEN (('' COLLATE BINARY)) AND (((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 INDEXED BY i37, t1 WHERE ((((vt1.c1))>=((x'')))) ORDER BY (((vt1.c1)) BETWEEN (('' COLLATE BINARY)) AND (((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1))>=((x'')))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i37, t1 ORDER BY (((vt1.c1)) BETWEEN (('' COLLATE BINARY)) AND (((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))))  NULLS LAST);
SELECT COUNT(*) FROM t1, v0, vt1 WHERE (CAST(((t1.c0) ISNULL) AS BLOB)) ORDER BY ABS(TRIM(DISTINCT vt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY ABS(TRIM(DISTINCT vt1.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0, vt1 WHERE (CAST(((t1.c0) ISNULL) AS BLOB)) ORDER BY ABS(TRIM(DISTINCT vt1.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM t1, v0, vt1 ORDER BY ABS(TRIM(DISTINCT vt1.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0, vt1 WHERE (CAST(((t1.c0) ISNULL) AS BLOB)) ORDER BY ABS(TRIM(DISTINCT vt1.c1)) DESC  NULLS LAST;
SELECT * FROM v0, t1, vt1, vt0 INDEXED BY i37 WHERE (((((v0.c0 IN ())))>=((vt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))>=((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, t1, vt1, vt0 INDEXED BY i37);
SELECT * FROM v0, t1, vt1, vt0 INDEXED BY i37 WHERE (((((v0.c0 IN ())))>=((vt0.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 IN ())))>=((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, t1, vt1, vt0 INDEXED BY i37);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((CASE WHEN vt0.c1 THEN t1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN t1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((CASE WHEN vt0.c1 THEN t1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN t1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((CASE WHEN vt0.c1 THEN t1.c0 ELSE vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((x'') NOTNULL) IN ()) RIGHT OUTER JOIN v0 ON 1824346210 COLLATE RTRIM WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((x'') NOTNULL) IN ()) RIGHT OUTER JOIN v0 ON 1824346210 COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((x'') NOTNULL) IN ()) RIGHT OUTER JOIN v0 ON 1824346210 COLLATE RTRIM WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((x'') NOTNULL) IN ()) RIGHT OUTER JOIN v0 ON 1824346210 COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((x'') NOTNULL) IN ()) RIGHT OUTER JOIN v0 ON 1824346210 COLLATE RTRIM WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((~ (vt1.c2 COLLATE BINARY))) ORDER BY ((CAST(v0.c0 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CAST(v0.c0 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((~ (vt1.c2 COLLATE BINARY))) ORDER BY ((CAST(v0.c0 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CAST(v0.c0 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((~ (vt1.c2 COLLATE BINARY))) ORDER BY ((CAST(v0.c0 AS REAL)) IS TRUE);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD(vt1.c2, 0.778382496582479)) ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt1.c2, 0.778382496582479)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD(vt1.c2, 0.778382496582479)) ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt1.c2, 0.778382496582479)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LIKELIHOOD(vt1.c2, 0.778382496582479)) ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0, t1, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)))AND(((vt0.c1)||(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)))AND(((vt0.c1)||(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)))AND(((vt0.c1)||(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)))AND(((vt0.c1)||(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)))AND(((vt0.c1)||(vt1.c2)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (t1.c0)))));
SELECT * FROM vt1 INNER JOIN v0 ON (NULL COLLATE BINARY IN ()) WHERE (((((vt1.c1) ISNULL)) NOT BETWEEN ((vt1.c1 IN ())) AND (CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 ELSE vt1.c0 END))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL)) NOT BETWEEN ((vt1.c1 IN ())) AND (CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (NULL COLLATE BINARY IN ()) ORDER BY NULL);
SELECT * FROM vt1 INNER JOIN v0 ON (NULL COLLATE BINARY IN ()) WHERE (((((vt1.c1) ISNULL)) NOT BETWEEN ((vt1.c1 IN ())) AND (CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 ELSE vt1.c0 END))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL)) NOT BETWEEN ((vt1.c1 IN ())) AND (CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (NULL COLLATE BINARY IN ()) ORDER BY NULL);
SELECT * FROM vt1 INNER JOIN v0 ON (NULL COLLATE BINARY IN ()) WHERE (((((vt1.c1) ISNULL)) NOT BETWEEN ((vt1.c1 IN ())) AND (CASE vt1.c0  WHEN vt1.c1 THEN v0.c0 ELSE vt1.c0 END))) ORDER BY NULL;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)OR(t1.c0)))/(CAST(vt1.c0 AS NUMERIC))) FULL OUTER JOIN v0 ON CAST(t1.c0 COLLATE BINARY AS INTEGER) CROSS JOIN t1 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (x'' COLLATE RTRIM) AND (t1.c0)) WHERE ((((((((((t1.c0 IN ()))OR('')))AND((vt1.c1 IN (v0.c0, vt1.c2)))))OR(((vt0.c0) IS TRUE))))AND('0.9967268132007178')));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c0 IN ()))OR('')))AND((vt1.c1 IN (v0.c0, vt1.c2)))))OR(((vt0.c0) IS TRUE))))AND('0.9967268132007178'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)OR(t1.c0)))/(CAST(vt1.c0 AS NUMERIC))) FULL OUTER JOIN v0 ON CAST(t1.c0 COLLATE BINARY AS INTEGER) CROSS JOIN t1 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (x'' COLLATE RTRIM) AND (t1.c0)));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)OR(t1.c0)))/(CAST(vt1.c0 AS NUMERIC))) FULL OUTER JOIN v0 ON CAST(t1.c0 COLLATE BINARY AS INTEGER) CROSS JOIN t1 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (x'' COLLATE RTRIM) AND (t1.c0)) WHERE ((((((((((t1.c0 IN ()))OR('')))AND((vt1.c1 IN (v0.c0, vt1.c2)))))OR(((vt0.c0) IS TRUE))))AND('0.9967268132007178')));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c0 IN ()))OR('')))AND((vt1.c1 IN (v0.c0, vt1.c2)))))OR(((vt0.c0) IS TRUE))))AND('0.9967268132007178'))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c0)OR(t1.c0)))/(CAST(vt1.c0 AS NUMERIC))) FULL OUTER JOIN v0 ON CAST(t1.c0 COLLATE BINARY AS INTEGER) CROSS JOIN t1 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (x'' COLLATE RTRIM) AND (t1.c0)));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON (((t1.c0)<=(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END)) WHERE (TRIM((0Xffffffffcebce31d IN ()))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((0Xffffffffcebce31d IN ()))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON (((t1.c0)<=(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END)) ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON (((t1.c0)<=(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END)) WHERE (TRIM((0Xffffffffcebce31d IN ()))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((0Xffffffffcebce31d IN ()))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON (((t1.c0)<=(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END)) ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON (((t1.c0)<=(v0.c0)) IN (CASE WHEN v0.c0 THEN v0.c0 END)) WHERE (TRIM((0Xffffffffcebce31d IN ()))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt1.c1)))AND(vt1.c2)))AND((NOT (vt1.c0)))))AND((~ (vt1.c0)))) CROSS JOIN t1 ON v0.c0 WHERE ((- (-971157830))) ORDER BY vt0.c1 DESC  NULLS LAST, (((((vt0.c1)GLOB(NULL)), (vt0.c0 IN (vt1.c0, vt0.c0)), CAST(vt0.c0 AS BLOB), LIKELY(DISTINCT vt1.c0), ((vt1.c0) ISNULL)))>=(((((vt0.c0))>=((t1.c0))), ((vt0.c0)>(t1.c0)), (+ (vt0.c1)), ((vt1.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (-971157830))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt1.c1)))AND(vt1.c2)))AND((NOT (vt1.c0)))))AND((~ (vt1.c0)))) CROSS JOIN t1 ON v0.c0 ORDER BY vt0.c1 DESC  NULLS LAST, (((((vt0.c1)GLOB(NULL)), (vt0.c0 IN (vt1.c0, vt0.c0)), CAST(vt0.c0 AS BLOB), LIKELY(DISTINCT vt1.c0), ((vt1.c0) ISNULL)))>=(((((vt0.c0))>=((t1.c0))), ((vt0.c0)>(t1.c0)), (+ (vt0.c1)), ((vt1.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) ASC);
SELECT ALL * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt1.c1)))AND(vt1.c2)))AND((NOT (vt1.c0)))))AND((~ (vt1.c0)))) CROSS JOIN t1 ON v0.c0 WHERE ((- (-971157830))) ORDER BY vt0.c1 DESC  NULLS LAST, (((((vt0.c1)GLOB(NULL)), (vt0.c0 IN (vt1.c0, vt0.c0)), CAST(vt0.c0 AS BLOB), LIKELY(DISTINCT vt1.c0), ((vt1.c0) ISNULL)))>=(((((vt0.c0))>=((t1.c0))), ((vt0.c0)>(t1.c0)), (+ (vt0.c1)), ((vt1.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (-971157830))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt1.c1)))AND(vt1.c2)))AND((NOT (vt1.c0)))))AND((~ (vt1.c0)))) CROSS JOIN t1 ON v0.c0 ORDER BY vt0.c1 DESC  NULLS LAST, (((((vt0.c1)GLOB(NULL)), (vt0.c0 IN (vt1.c0, vt0.c0)), CAST(vt0.c0 AS BLOB), LIKELY(DISTINCT vt1.c0), ((vt1.c0) ISNULL)))>=(((((vt0.c0))>=((t1.c0))), ((vt0.c0)>(t1.c0)), (+ (vt0.c1)), ((vt1.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) ASC);
SELECT ALL * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt1.c1)))AND(vt1.c2)))AND((NOT (vt1.c0)))))AND((~ (vt1.c0)))) CROSS JOIN t1 ON v0.c0 WHERE ((- (-971157830))) ORDER BY vt0.c1 DESC  NULLS LAST, (((((vt0.c1)GLOB(NULL)), (vt0.c0 IN (vt1.c0, vt0.c0)), CAST(vt0.c0 AS BLOB), LIKELY(DISTINCT vt1.c0), ((vt1.c0) ISNULL)))>=(((((vt0.c0))>=((t1.c0))), ((vt0.c0)>(t1.c0)), (+ (vt0.c1)), ((vt1.c0) NOTNULL), CAST(v0.c0 AS BLOB)))) ASC;
SELECT ALL * FROM t1 WHERE (((NULL) NOT BETWEEN (((t1.c0) NOT NULL)) AND ('')));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((t1.c0) NOT NULL)) AND (''))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((NULL) NOT BETWEEN (((t1.c0) NOT NULL)) AND ('')));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((t1.c0) NOT NULL)) AND (''))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((NULL) NOT BETWEEN (((t1.c0) NOT NULL)) AND ('')));
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN vt0 ON (((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))) COLLATE RTRIM WHERE (((+ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON (((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN vt0 ON (((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))) COLLATE RTRIM WHERE (((+ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON (((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt1 INNER JOIN vt0 ON (((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))) COLLATE RTRIM WHERE (((+ (vt0.c1)) IN ()));
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (-837053385 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((-837053385 COLLATE RTRIM) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (-837053385 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((-837053385 COLLATE RTRIM) IS TRUE)  as count FROM v0 NOT INDEXED, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (-837053385 COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((v0.c0)>((((vt0.c0))<>((vt1.c2)))))) ORDER BY (((('()')OR((vt1.c1 IN ()))))OR(CAST(vt1.c2 AS REAL))) ASC  NULLS LAST, '1419039733', '1913145129' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>((((vt0.c0))!=((vt1.c2)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((('()')OR((vt1.c1 IN ()))))OR(CAST(vt1.c2 AS REAL))) ASC  NULLS LAST, '1419039733', '1913145129' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((v0.c0)>((((vt0.c0))<>((vt1.c2)))))) ORDER BY (((('()')OR((vt1.c1 IN ()))))OR(CAST(vt1.c2 AS REAL))) ASC  NULLS LAST, '1419039733', '1913145129' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>((((vt0.c0))!=((vt1.c2)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((('()')OR((vt1.c1 IN ()))))OR(CAST(vt1.c2 AS REAL))) ASC  NULLS LAST, '1419039733', '1913145129' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((v0.c0)>((((vt0.c0))<>((vt1.c2)))))) ORDER BY (((('()')OR((vt1.c1 IN ()))))OR(CAST(vt1.c2 AS REAL))) ASC  NULLS LAST, '1419039733', '1913145129' ASC  NULLS FIRST;
SELECT * FROM v0, t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER))) AND ((((((t1.c0)OR(vt0.c0)))AND(t1.c0)))))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER))) AND ((((((t1.c0)OR(vt0.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT * FROM v0, t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER))) AND ((((((t1.c0)OR(vt0.c0)))AND(t1.c0)))))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER))) AND ((((((t1.c0)OR(vt0.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT * FROM v0, t1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER))) AND ((((((t1.c0)OR(vt0.c0)))AND(t1.c0)))))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (CAST(0.2494020368446772 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(0.2494020368446772 AS BLOB)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (CAST(0.2494020368446772 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(0.2494020368446772 AS BLOB)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (CAST(0.2494020368446772 AS BLOB))));
SELECT * FROM vt0, v0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, v0, t1);
SELECT * FROM vt0, v0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, v0, t1);
SELECT * FROM vt0, v0, t1 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM vt1, v0, t1, vt0 WHERE (((((vt1.c1)<(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(t1.c0)))OR(vt1.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(t1.c0)))OR(vt1.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt1, v0, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, t1, vt0 WHERE (((((vt1.c1)<(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(t1.c0)))OR(vt1.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(t1.c0)))OR(vt1.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt1, v0, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, t1, vt0 WHERE (((((vt1.c1)<(vt0.c1))) NOT BETWEEN (((((v0.c0)OR(t1.c0)))OR(vt1.c0))) AND (v0.c0)));
SELECT ALL COUNT(*) FROM v0, vt1, vt0, t1 WHERE ((((~ (vt0.c0)))LIKE(t1.c0))) ORDER BY vt0.c1 DESC  NULLS LAST, ((vt1.c2 IN (vt1.c2, t1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE(t1.c0))) IS TRUE)  as count FROM v0, vt1, vt0, t1 ORDER BY vt0.c1 DESC  NULLS LAST, ((vt1.c2 IN (vt1.c2, t1.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0, t1 WHERE ((((~ (vt0.c0)))LIKE(t1.c0))) ORDER BY vt0.c1 DESC  NULLS LAST, ((vt1.c2 IN (vt1.c2, t1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE(t1.c0))) IS TRUE)  as count FROM v0, vt1, vt0, t1 ORDER BY vt0.c1 DESC  NULLS LAST, ((vt1.c2 IN (vt1.c2, t1.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0, t1 WHERE ((((~ (vt0.c0)))LIKE(t1.c0))) ORDER BY vt0.c1 DESC  NULLS LAST, ((vt1.c2 IN (vt1.c2, t1.c0)) IN ())  NULLS LAST;
SELECT * FROM t1 INNER JOIN vt1 ON (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))))>=(((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c2)))) INNER JOIN vt0 ON CAST(((0.4391082521681625) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT) FULL OUTER JOIN v0 ON CAST(((vt0.c1)GLOB(vt1.c0)) AS NUMERIC) WHERE (((((vt1.c2)<(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)<(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))))>=(((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c2)))) INNER JOIN vt0 ON CAST(((0.4391082521681625) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT) FULL OUTER JOIN v0 ON CAST(((vt0.c1)GLOB(vt1.c0)) AS NUMERIC));
SELECT * FROM t1 INNER JOIN vt1 ON (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))))>=(((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c2)))) INNER JOIN vt0 ON CAST(((0.4391082521681625) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT) FULL OUTER JOIN v0 ON CAST(((vt0.c1)GLOB(vt1.c0)) AS NUMERIC) WHERE (((((vt1.c2)<(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)<(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))))>=(((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c2)))) INNER JOIN vt0 ON CAST(((0.4391082521681625) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT) FULL OUTER JOIN v0 ON CAST(((vt0.c1)GLOB(vt1.c0)) AS NUMERIC));
SELECT * FROM v0, vt0, vt1 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 COLLATE BINARY THEN (+ (vt0.c0)) ELSE CAST('!2' AS BLOB) END) ORDER BY IFNULL(DISTINCT ((((((((v0.c0)OR(0.5870044005186863)))OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)), (((vt1.c2, '-2049279951', vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt1.c2)) AND ((vt1.c0, vt0.c1, v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 COLLATE BINARY THEN (+ (vt0.c0)) ELSE CAST('!2' AS BLOB) END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY IFNULL(DISTINCT ((((((((v0.c0)OR(0.5870044005186863)))OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)), (((vt1.c2, '-2049279951', vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt1.c2)) AND ((vt1.c0, vt0.c1, v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0, vt0, vt1 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 COLLATE BINARY THEN (+ (vt0.c0)) ELSE CAST('!2' AS BLOB) END) ORDER BY IFNULL(DISTINCT ((((((((v0.c0)OR(0.5870044005186863)))OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)), (((vt1.c2, '-2049279951', vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt1.c2)) AND ((vt1.c0, vt0.c1, v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 COLLATE BINARY THEN (+ (vt0.c0)) ELSE CAST('!2' AS BLOB) END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY IFNULL(DISTINCT ((((((((v0.c0)OR(0.5870044005186863)))OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)), (((vt1.c2, '-2049279951', vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt1.c2)) AND ((vt1.c0, vt0.c1, v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0, vt0, vt1 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN v0.c0 COLLATE BINARY THEN (+ (vt0.c0)) ELSE CAST('!2' AS BLOB) END) ORDER BY IFNULL(DISTINCT ((((((((v0.c0)OR(0.5870044005186863)))OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)), (((vt1.c2, '-2049279951', vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt1.c2)) AND ((vt1.c0, vt0.c1, v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t1, v0 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END)GLOB(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END)GLOB(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, t1, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, t1, v0 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END)GLOB(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END)GLOB(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, t1, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, t1, v0 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END)GLOB(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt1 ON ((((vt0.c1) IS FALSE))>>(((vt0.c1)>=(vt1.c1)))) RIGHT OUTER JOIN vt0 ON ((((((vt1.c2)AND(v0.c0)))OR(vt1.c1)))IS((NOT (vt1.c1)))) WHERE ((((vt1.c2, vt1.c1, vt1.c2)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c0, v0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2, vt1.c1, vt1.c2)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c0, v0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON ((((vt0.c1) IS FALSE))>>(((vt0.c1)>=(vt1.c1)))) RIGHT OUTER JOIN vt0 ON ((((((vt1.c2)AND(v0.c0)))OR(vt1.c1)))IS((NOT (vt1.c1)))) ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt1 ON ((((vt0.c1) IS FALSE))>>(((vt0.c1)>=(vt1.c1)))) RIGHT OUTER JOIN vt0 ON ((((((vt1.c2)AND(v0.c0)))OR(vt1.c1)))IS((NOT (vt1.c1)))) WHERE ((((vt1.c2, vt1.c1, vt1.c2)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c0, v0.c0, vt0.c0))) COLLATE RTRIM) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2, vt1.c1, vt1.c2)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c0, v0.c0, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON ((((vt0.c1) IS FALSE))>>(((vt0.c1)>=(vt1.c1)))) RIGHT OUTER JOIN vt0 ON ((((((vt1.c2)AND(v0.c0)))OR(vt1.c1)))IS((NOT (vt1.c1)))) ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(((0Xffffffffd3a230f6)>(vt0.c0)) AS BLOB) WHERE (((((((((CAST(t1.c0 AS BLOB))AND(CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END)))AND((((v0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))))))AND(((v0.c0)%(v0.c0)))))OR((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))>=((t1.c0, vt0.c0, v0.c0, vt0.c1, t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t1.c0 AS BLOB))AND(CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END)))AND((((v0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))))))AND(((v0.c0)%(v0.c0)))))OR((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))>=((t1.c0, vt0.c0, v0.c0, vt0.c1, t1.c0)))))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(((0Xffffffffd3a230f6)>(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(((0Xffffffffd3a230f6)>(vt0.c0)) AS BLOB) WHERE (((((((((CAST(t1.c0 AS BLOB))AND(CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END)))AND((((v0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))))))AND(((v0.c0)%(v0.c0)))))OR((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))>=((t1.c0, vt0.c0, v0.c0, vt0.c1, t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t1.c0 AS BLOB))AND(CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END)))AND((((v0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))))))AND(((v0.c0)%(v0.c0)))))OR((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))>=((t1.c0, vt0.c0, v0.c0, vt0.c1, t1.c0)))))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(((0Xffffffffd3a230f6)>(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN v0 ON CAST(((0Xffffffffd3a230f6)>(vt0.c0)) AS BLOB) WHERE (((((((((CAST(t1.c0 AS BLOB))AND(CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END)))AND((((v0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))))))AND(((v0.c0)%(v0.c0)))))OR((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))>=((t1.c0, vt0.c0, v0.c0, vt0.c1, t1.c0))))));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c1 IN ())))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt1.c1 IN ())))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT ((vt1.c1 IN ()))));
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(((t1.c0)LIKE(t1.c0)))))OR(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS NUMERIC))AND(((t1.c0)LIKE(t1.c0)))))OR(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(((t1.c0)LIKE(t1.c0)))))OR(CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS NUMERIC))AND(((t1.c0)LIKE(t1.c0)))))OR(CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(((t1.c0)LIKE(t1.c0)))))OR(CAST(t1.c0 AS BLOB))));
SELECT * FROM vt1 WHERE (((vt1.c0)>(vt1.c1)) COLLATE BINARY) ORDER BY 0.9080691384737022 DESC, vt1.c2 ASC  NULLS LAST, (- (((NULL)IS(vt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY 0.9080691384737022 DESC, vt1.c2 ASC  NULLS LAST, (- (((NULL)IS(vt1.c2)))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0)>(vt1.c1)) COLLATE BINARY) ORDER BY 0.9080691384737022 DESC, vt1.c2 ASC  NULLS LAST, (- (((NULL)IS(vt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY 0.9080691384737022 DESC, vt1.c2 ASC  NULLS LAST, (- (((NULL)IS(vt1.c2)))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0)>(vt1.c1)) COLLATE BINARY) ORDER BY 0.9080691384737022 DESC, vt1.c2 ASC  NULLS LAST, (- (((NULL)IS(vt1.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t1 WHERE (((vt1.c0) NOT NULL)) ORDER BY ((((((vt1.c2)OR(vt1.c2)))OR(0.6246205450025234)))/(((t1.c0) NOTNULL))) ASC, (NOT ((vt1.c0 IN ())))  NULLS LAST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((-1340237663)/(t1.c0))) AND (((vt1.c2)<(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((((vt1.c2)OR(vt1.c2)))OR(0.6246205450025234)))/(((t1.c0) NOTNULL))) ASC, (NOT ((vt1.c0 IN ())))  NULLS LAST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((-1340237663)/(t1.c0))) AND (((vt1.c2)<(t1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE (((vt1.c0) NOT NULL)) ORDER BY ((((((vt1.c2)OR(vt1.c2)))OR(0.6246205450025234)))/(((t1.c0) NOTNULL))) ASC, (NOT ((vt1.c0 IN ())))  NULLS LAST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((-1340237663)/(t1.c0))) AND (((vt1.c2)<(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((((vt1.c2)OR(vt1.c2)))OR(0.6246205450025234)))/(((t1.c0) NOTNULL))) ASC, (NOT ((vt1.c0 IN ())))  NULLS LAST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((-1340237663)/(t1.c0))) AND (((vt1.c2)<(t1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE (((vt1.c0) NOT NULL)) ORDER BY ((((((vt1.c2)OR(vt1.c2)))OR(0.6246205450025234)))/(((t1.c0) NOTNULL))) ASC, (NOT ((vt1.c0 IN ())))  NULLS LAST, ((vt1.c0 COLLATE NOCASE) BETWEEN (((-1340237663)/(t1.c0))) AND (((vt1.c2)<(t1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM LEFT OUTER JOIN v0 ON CASE WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c1 AS TEXT) END WHERE (COALESCE(DISTINCT ((vt1.c0) IS TRUE), ((vt1.c0)%(t1.c0)))) ORDER BY (((vt0.c0, v0.c0, vt1.c1)) BETWEEN ((((vt1.c2)*(vt1.c0)), ((vt0.c1) BETWEEN (vt1.c1) AND (NULL)), (- (vt1.c1)))) AND ((((vt1.c1)LIKE(t1.c0)), (((vt0.c0))<((t1.c0))), t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((vt1.c0) IS TRUE), ((vt1.c0)%(t1.c0)))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM LEFT OUTER JOIN v0 ON CASE WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c1 AS TEXT) END ORDER BY (((vt0.c0, v0.c0, vt1.c1)) BETWEEN ((((vt1.c2)*(vt1.c0)), ((vt0.c1) BETWEEN (vt1.c1) AND (NULL)), (- (vt1.c1)))) AND ((((vt1.c1)LIKE(t1.c0)), (((vt0.c0))<((t1.c0))), t1.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM LEFT OUTER JOIN v0 ON CASE WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c1 AS TEXT) END WHERE (COALESCE(DISTINCT ((vt1.c0) IS TRUE), ((vt1.c0)%(t1.c0)))) ORDER BY (((vt0.c0, v0.c0, vt1.c1)) BETWEEN ((((vt1.c2)*(vt1.c0)), ((vt0.c1) BETWEEN (vt1.c1) AND (NULL)), (- (vt1.c1)))) AND ((((vt1.c1)LIKE(t1.c0)), (((vt0.c0))<((t1.c0))), t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((vt1.c0) IS TRUE), ((vt1.c0)%(t1.c0)))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM LEFT OUTER JOIN v0 ON CASE WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c1 AS TEXT) END ORDER BY (((vt0.c0, v0.c0, vt1.c1)) BETWEEN ((((vt1.c2)*(vt1.c0)), ((vt0.c1) BETWEEN (vt1.c1) AND (NULL)), (- (vt1.c1)))) AND ((((vt1.c1)LIKE(t1.c0)), (((vt0.c0))<((t1.c0))), t1.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM LEFT OUTER JOIN v0 ON CASE WHEN vt1.c0 COLLATE NOCASE THEN CAST(vt1.c1 AS TEXT) END WHERE (COALESCE(DISTINCT ((vt1.c0) IS TRUE), ((vt1.c0)%(t1.c0)))) ORDER BY (((vt0.c0, v0.c0, vt1.c1)) BETWEEN ((((vt1.c2)*(vt1.c0)), ((vt0.c1) BETWEEN (vt1.c1) AND (NULL)), (- (vt1.c1)))) AND ((((vt1.c1)LIKE(t1.c0)), (((vt0.c0))<((t1.c0))), t1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE ((v0.c0)<(v0.c0))  WHEN ((((v0.c0)OR(vt1.c2)))AND(v0.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)) END) ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c2)IS NOT(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<(v0.c0))  WHEN ((((v0.c0)OR(vt1.c2)))AND(v0.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c2)IS NOT(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE ((v0.c0)<(v0.c0))  WHEN ((((v0.c0)OR(vt1.c2)))AND(v0.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)) END) ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c2)IS NOT(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<(v0.c0))  WHEN ((((v0.c0)OR(vt1.c2)))AND(v0.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c2)IS NOT(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE ((v0.c0)<(v0.c0))  WHEN ((((v0.c0)OR(vt1.c2)))AND(v0.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c1)) END) ORDER BY ((vt1.c0 COLLATE RTRIM)IS(((vt1.c2)IS NOT(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t1, vt1 WHERE ('|W') ORDER BY -1.076852478E9 ASC, (+ (NULL)), ('NjAf.\n\rq' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('|W') IS TRUE)  as count FROM vt0, v0, t1, vt1 ORDER BY -1.076852478E9 ASC, (+ (NULL)), ('NjAf.\n\rq' IN ())  NULLS LAST);
SELECT ALL * FROM vt0, v0, t1, vt1 WHERE ('|W') ORDER BY -1.076852478E9 ASC, (+ (NULL)), ('NjAf.\n\rq' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('|W') IS TRUE)  as count FROM vt0, v0, t1, vt1 ORDER BY -1.076852478E9 ASC, (+ (NULL)), ('NjAf.\n\rq' IN ())  NULLS LAST);
SELECT ALL * FROM vt0, v0, t1, vt1 WHERE ('|W') ORDER BY -1.076852478E9 ASC, (+ (NULL)), ('NjAf.\n\rq' IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0 FULL OUTER JOIN t1 ON CAST('-352493273' AS BLOB) FULL OUTER JOIN vt0 ON ((CAST(vt1.c2 AS REAL))AND(TYPEOF(0.4335485850817341))) WHERE (((CASE t1.c0  WHEN v0.c0 THEN vt1.c1 WHEN '358703706' THEN vt0.c0 WHEN 0xffffffffd90bf54f THEN t1.c0 ELSE t1.c0 END)-(((vt1.c1)<=('9108957302189594462-1298T837--e\f')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN v0.c0 THEN vt1.c1 WHEN '358703706' THEN vt0.c0 WHEN 0xffffffffd90bf54f THEN t1.c0 ELSE t1.c0 END)-(((vt1.c1)<=('9108957302189594462-1298T837--e\f'))))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN t1 ON CAST('-352493273' AS BLOB) FULL OUTER JOIN vt0 ON ((CAST(vt1.c2 AS REAL))AND(TYPEOF(0.4335485850817341))));
SELECT COUNT(*) FROM vt1, v0 FULL OUTER JOIN t1 ON CAST('-352493273' AS BLOB) FULL OUTER JOIN vt0 ON ((CAST(vt1.c2 AS REAL))AND(TYPEOF(0.4335485850817341))) WHERE (((CASE t1.c0  WHEN v0.c0 THEN vt1.c1 WHEN '358703706' THEN vt0.c0 WHEN 0xffffffffd90bf54f THEN t1.c0 ELSE t1.c0 END)-(((vt1.c1)<=('9108957302189594462-1298T837--e\f')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN v0.c0 THEN vt1.c1 WHEN '358703706' THEN vt0.c0 WHEN 0xffffffffd90bf54f THEN t1.c0 ELSE t1.c0 END)-(((vt1.c1)<=('9108957302189594462-1298T837--e\f'))))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN t1 ON CAST('-352493273' AS BLOB) FULL OUTER JOIN vt0 ON ((CAST(vt1.c2 AS REAL))AND(TYPEOF(0.4335485850817341))));
SELECT COUNT(*) FROM vt1, v0 FULL OUTER JOIN t1 ON CAST('-352493273' AS BLOB) FULL OUTER JOIN vt0 ON ((CAST(vt1.c2 AS REAL))AND(TYPEOF(0.4335485850817341))) WHERE (((CASE t1.c0  WHEN v0.c0 THEN vt1.c1 WHEN '358703706' THEN vt0.c0 WHEN 0xffffffffd90bf54f THEN t1.c0 ELSE t1.c0 END)-(((vt1.c1)<=('9108957302189594462-1298T837--e\f')))));
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((((vt1.c2)OR(vt1.c2)))OR(vt0.c0))))) ORDER BY ((x'')OR(TRIM(DISTINCT vt0.c1, vt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c2)OR(vt1.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((x'')OR(TRIM(DISTINCT vt0.c1, vt1.c2))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((((vt1.c2)OR(vt1.c2)))OR(vt0.c0))))) ORDER BY ((x'')OR(TRIM(DISTINCT vt0.c1, vt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c2)OR(vt1.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((x'')OR(TRIM(DISTINCT vt0.c1, vt1.c2))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((((vt1.c2)OR(vt1.c2)))OR(vt0.c0))))) ORDER BY ((x'')OR(TRIM(DISTINCT vt0.c1, vt1.c2))) DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON 0.08710019129577351 WHERE (((v0.c0 COLLATE BINARY) ISNULL)) ORDER BY ((0.8392284371300084) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON 0.08710019129577351 ORDER BY ((0.8392284371300084) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON 0.08710019129577351 WHERE (((v0.c0 COLLATE BINARY) ISNULL)) ORDER BY ((0.8392284371300084) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON 0.08710019129577351 ORDER BY ((0.8392284371300084) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON 0.08710019129577351 WHERE (((v0.c0 COLLATE BINARY) ISNULL)) ORDER BY ((0.8392284371300084) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt1, v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))<<((vt0.c0 IN ())))) ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))<<((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt1, v0, vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC);
SELECT ALL * FROM t1, vt1, v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))<<((vt0.c0 IN ())))) ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))<<((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt1, v0, vt0 ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC);
SELECT ALL * FROM t1, vt1, v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))<<((vt0.c0 IN ())))) ORDER BY ((vt0.c1) ISNULL) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (('gn' IN (vt1.c2, ((x'005e') IS TRUE))));
SELECT SUM(count) FROM (SELECT ((('gn' IN (vt1.c2, ((x'005e') IS TRUE)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (('gn' IN (vt1.c2, ((x'005e') IS TRUE))));
SELECT SUM(count) FROM (SELECT ((('gn' IN (vt1.c2, ((x'005e') IS TRUE)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (('gn' IN (vt1.c2, ((x'005e') IS TRUE))));
SELECT * FROM v0, vt0, t1 WHERE (((((v0.c0)OR(vt0.c0)))OR(v0.c0)) COLLATE NOCASE) ORDER BY HEX((- (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(vt0.c0)))OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY HEX((- (t1.c0))) ASC);
SELECT * FROM v0, vt0, t1 WHERE (((((v0.c0)OR(vt0.c0)))OR(v0.c0)) COLLATE NOCASE) ORDER BY HEX((- (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(vt0.c0)))OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY HEX((- (t1.c0))) ASC);
SELECT * FROM v0, vt0, t1 WHERE (((((v0.c0)OR(vt0.c0)))OR(v0.c0)) COLLATE NOCASE) ORDER BY HEX((- (t1.c0))) ASC;
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((v0.c0)>(vt1.c2)) THEN CAST(vt0.c0 AS INTEGER) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END WHERE ((((vt1.c1 IN ()))||(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))||(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((v0.c0)>(vt1.c2)) THEN CAST(vt0.c0 AS INTEGER) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END);
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((v0.c0)>(vt1.c2)) THEN CAST(vt0.c0 AS INTEGER) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END WHERE ((((vt1.c1 IN ()))||(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))||(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((v0.c0)>(vt1.c2)) THEN CAST(vt0.c0 AS INTEGER) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END);
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((v0.c0)>(vt1.c2)) THEN CAST(vt0.c0 AS INTEGER) ELSE CASE WHEN vt0.c0 THEN vt1.c0 END END WHERE ((((vt1.c1 IN ()))||(CAST(vt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON ' ~' WHERE (((v0.c0)<(t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN 1447126984 THEN t1.c0 WHEN NULL THEN CAST(v0.c0 AS BLOB) WHEN (~ (0.9025179149274343)) THEN NULLIF(v0.c0, t1.c0) END, CASE WHEN ((v0.c0)+(t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE 0.5439723385981624 END ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)<(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ' ~' ORDER BY CASE WHEN 1447126984 THEN t1.c0 WHEN NULL THEN CAST(v0.c0 AS BLOB) WHEN (~ (0.9025179149274343)) THEN NULLIF(v0.c0, t1.c0) END, CASE WHEN ((v0.c0)+(t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE 0.5439723385981624 END ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON ' ~' WHERE (((v0.c0)<(t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN 1447126984 THEN t1.c0 WHEN NULL THEN CAST(v0.c0 AS BLOB) WHEN (~ (0.9025179149274343)) THEN NULLIF(v0.c0, t1.c0) END, CASE WHEN ((v0.c0)+(t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE 0.5439723385981624 END ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)<(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ' ~' ORDER BY CASE WHEN 1447126984 THEN t1.c0 WHEN NULL THEN CAST(v0.c0 AS BLOB) WHEN (~ (0.9025179149274343)) THEN NULLIF(v0.c0, t1.c0) END, CASE WHEN ((v0.c0)+(t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE 0.5439723385981624 END ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON ' ~' WHERE (((v0.c0)<(t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN 1447126984 THEN t1.c0 WHEN NULL THEN CAST(v0.c0 AS BLOB) WHEN (~ (0.9025179149274343)) THEN NULLIF(v0.c0, t1.c0) END, CASE WHEN ((v0.c0)+(t1.c0)) THEN CAST(t1.c0 AS INTEGER) ELSE 0.5439723385981624 END ASC;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((v0.c0)%((NOT (v0.c0)))) LEFT OUTER JOIN v0 ON (vt0.c0 IN (((t1.c0)&(v0.c0)))) INNER JOIN t1 ON NULL WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((v0.c0)%((NOT (v0.c0)))) LEFT OUTER JOIN v0 ON (vt0.c0 IN (((t1.c0)&(v0.c0)))) INNER JOIN t1 ON NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((v0.c0)%((NOT (v0.c0)))) LEFT OUTER JOIN v0 ON (vt0.c0 IN (((t1.c0)&(v0.c0)))) INNER JOIN t1 ON NULL WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((v0.c0)%((NOT (v0.c0)))) LEFT OUTER JOIN v0 ON (vt0.c0 IN (((t1.c0)&(v0.c0)))) INNER JOIN t1 ON NULL);
SELECT ALL COUNT(*) FROM t1 WHERE ((((('0.764207812993951')OR(((t1.c0) IS TRUE))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE '-1076852478' END)));
SELECT SUM(count) FROM (SELECT (((((('0.764207812993951')OR(((t1.c0) IS TRUE))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE '-1076852478' END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((('0.764207812993951')OR(((t1.c0) IS TRUE))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE '-1076852478' END)));
SELECT SUM(count) FROM (SELECT (((((('0.764207812993951')OR(((t1.c0) IS TRUE))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE '-1076852478' END))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((('0.764207812993951')OR(((t1.c0) IS TRUE))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE '-1076852478' END)));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (STRFTIME((((0.18491511282493567, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt1.c2, vt0.c1, vt1.c2))), ((0.6217411375266853) IS FALSE), ((vt1.c2)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((((0.18491511282493567, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt1.c2, vt0.c1, vt1.c2))), ((0.6217411375266853) IS FALSE), ((vt1.c2)<(vt1.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (STRFTIME((((0.18491511282493567, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt1.c2, vt0.c1, vt1.c2))), ((0.6217411375266853) IS FALSE), ((vt1.c2)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((((0.18491511282493567, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt1.c2, vt0.c1, vt1.c2))), ((0.6217411375266853) IS FALSE), ((vt1.c2)<(vt1.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (STRFTIME((((0.18491511282493567, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt1.c2, vt0.c1, vt1.c2))), ((0.6217411375266853) IS FALSE), ((vt1.c2)<(vt1.c0))));
SELECT * FROM vt0, v0 NATURAL JOIN vt1 WHERE (UPPER(DISTINCT ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c2)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT * FROM vt0, v0 NATURAL JOIN vt1 WHERE (UPPER(DISTINCT ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c2)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT * FROM vt0, v0 NATURAL JOIN vt1 WHERE (UPPER(DISTINCT ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c2))));
SELECT * FROM t1, vt1, vt0, v0 WHERE (load_extension(((vt1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((load_extension(((vt1.c1) ISNULL))) IS TRUE)  as count FROM t1, vt1, vt0, v0);
SELECT * FROM t1, vt1, vt0, v0 WHERE (load_extension(((vt1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((load_extension(((vt1.c1) ISNULL))) IS TRUE)  as count FROM t1, vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i37, v0 WHERE (CAST(vt1.c2 COLLATE NOCASE AS INTEGER)) ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE NOCASE  NULLS LAST, (- ((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1 INDEXED BY i37, v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE NOCASE  NULLS LAST, (- ((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i37, v0 WHERE (CAST(vt1.c2 COLLATE NOCASE AS INTEGER)) ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE NOCASE  NULLS LAST, (- ((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1 INDEXED BY i37, v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE NOCASE  NULLS LAST, (- ((vt1.c1 IN ()))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN '-9223372036854775808' ELSE v0.c0 END) ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c1)) THEN '-9223372036854775808' ELSE v0.c0 END) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN '-9223372036854775808' ELSE v0.c0 END) ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c1)) THEN '-9223372036854775808' ELSE v0.c0 END) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (NOT (vt0.c1)) THEN '-9223372036854775808' ELSE v0.c0 END) ORDER BY (+ (CAST(vt0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST(((vt1.c0)||(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)||(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST(((vt1.c0)||(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)||(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST(((vt1.c0)||(vt0.c1)) AS NUMERIC));
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (((0.41105008087231265) BETWEEN ((((vt1.c2, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, 1777898799)) AND ((v0.c0, vt1.c2, vt1.c1)))) AND ((+ (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((0.41105008087231265) BETWEEN ((((vt1.c2, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, 1777898799)) AND ((v0.c0, vt1.c2, vt1.c1)))) AND ((+ (vt1.c2))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (((0.41105008087231265) BETWEEN ((((vt1.c2, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, 1777898799)) AND ((v0.c0, vt1.c2, vt1.c1)))) AND ((+ (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((0.41105008087231265) BETWEEN ((((vt1.c2, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, 1777898799)) AND ((v0.c0, vt1.c2, vt1.c1)))) AND ((+ (vt1.c2))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT * FROM v0 NATURAL JOIN vt1 WHERE (((0.41105008087231265) BETWEEN ((((vt1.c2, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, 1777898799)) AND ((v0.c0, vt1.c2, vt1.c1)))) AND ((+ (vt1.c2)))));
SELECT ALL COUNT(*) FROM t1 WHERE (0.8911359560824447) ORDER BY (((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8911359560824447) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (0.8911359560824447) ORDER BY (((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8911359560824447) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (0.8911359560824447) ORDER BY (((t1.c0 IN ())) BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t1 WHERE (NULL) ORDER BY ((t1.c0) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt1, t1 ORDER BY ((t1.c0) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t1 WHERE (NULL) ORDER BY ((t1.c0) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt1, t1 ORDER BY ((t1.c0) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1, t1 WHERE (NULL) ORDER BY ((t1.c0) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (vt1.c1 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE ((NOT (x'')));
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(((vt0.c1)>>(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1 COLLATE BINARY)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(((vt0.c1)>>(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1 COLLATE BINARY)))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(((vt0.c1)>>(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1 COLLATE BINARY)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(((vt0.c1)>>(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1 COLLATE BINARY)))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(((vt0.c1)>>(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c1 COLLATE BINARY)))AND(vt0.c1)));
SELECT * FROM t1 WHERE ((((t1.c0)) BETWEEN (((((t1.c0))<((t1.c0))))) AND (((t1.c0 IN (t1.c0)))))) ORDER BY ((t1.c0) BETWEEN (t1.c0) AND ((t1.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN CAST('761353676' AS TEXT) THEN ((x'')<<(t1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((((t1.c0))<((t1.c0))))) AND (((t1.c0 IN (t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) BETWEEN (t1.c0) AND ((t1.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN CAST('761353676' AS TEXT) THEN ((x'')<<(t1.c0)) END  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c0)) BETWEEN (((((t1.c0))<((t1.c0))))) AND (((t1.c0 IN (t1.c0)))))) ORDER BY ((t1.c0) BETWEEN (t1.c0) AND ((t1.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN CAST('761353676' AS TEXT) THEN ((x'')<<(t1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((((t1.c0))<((t1.c0))))) AND (((t1.c0 IN (t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) BETWEEN (t1.c0) AND ((t1.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN CAST('761353676' AS TEXT) THEN ((x'')<<(t1.c0)) END  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c0)) BETWEEN (((((t1.c0))<((t1.c0))))) AND (((t1.c0 IN (t1.c0)))))) ORDER BY ((t1.c0) BETWEEN (t1.c0) AND ((t1.c0 IN ()))) ASC  NULLS FIRST, CASE WHEN CAST('761353676' AS TEXT) THEN ((x'')<<(t1.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (LIKELIHOOD(IFNULL(NULL, t1.c0), 0.7332588678260153));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(IFNULL(NULL, t1.c0), 0.7332588678260153)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (LIKELIHOOD(IFNULL(NULL, t1.c0), 0.7332588678260153));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(IFNULL(NULL, t1.c0), 0.7332588678260153)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (LIKELIHOOD(IFNULL(NULL, t1.c0), 0.7332588678260153));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (+ ((~ (vt1.c2)))) WHERE (CASE ((vt0.c0) NOT NULL)  WHEN vt0.c1 THEN (- (vt0.c1)) ELSE ((vt1.c2)||(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT NULL)  WHEN vt0.c1 THEN (- (vt0.c1)) ELSE ((vt1.c2)||(vt1.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (+ ((~ (vt1.c2)))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (+ ((~ (vt1.c2)))) WHERE (CASE ((vt0.c0) NOT NULL)  WHEN vt0.c1 THEN (- (vt0.c1)) ELSE ((vt1.c2)||(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT NULL)  WHEN vt0.c1 THEN (- (vt0.c1)) ELSE ((vt1.c2)||(vt1.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (+ ((~ (vt1.c2)))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (+ ((~ (vt1.c2)))) WHERE (CASE ((vt0.c0) NOT NULL)  WHEN vt0.c1 THEN (- (vt0.c1)) ELSE ((vt1.c2)||(vt1.c0)) END);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c0)AND(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(CASE WHEN x'61d2' THEN x'' END)))AND('1907355519')))OR(t1.c0)))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c0)AND(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(CASE WHEN x'61d2' THEN x'' END)))AND('1907355519')))OR(t1.c0)))AND((t1.c0 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c0)AND(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(CASE WHEN x'61d2' THEN x'' END)))AND('1907355519')))OR(t1.c0)))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c0)AND(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(CASE WHEN x'61d2' THEN x'' END)))AND('1907355519')))OR(t1.c0)))AND((t1.c0 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((((((t1.c0)AND(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(CASE WHEN x'61d2' THEN x'' END)))AND('1907355519')))OR(t1.c0)))AND((t1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, t1, v0 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN ((~ (vt1.c2))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) BETWEEN ((~ (vt1.c2))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t1, v0);
SELECT ALL COUNT(*) FROM vt1, t1, v0 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN ((~ (vt1.c2))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) BETWEEN ((~ (vt1.c2))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t1, v0);
SELECT ALL COUNT(*) FROM vt1, t1, v0 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN ((~ (vt1.c2))) AND (((t1.c0) BETWEEN (t1.c0) AND (vt1.c1)))));
SELECT ALL * FROM vt1 WHERE ((NOT (0.9896456142280878)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.9896456142280878))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (0.9896456142280878)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.9896456142280878))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (0.9896456142280878)));
SELECT * FROM t1, vt1, v0, vt0 WHERE (((CAST(-278801828 AS BLOB))>=(CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(-278801828 AS BLOB))>=(CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1, vt1, v0, vt0);
SELECT * FROM t1, vt1, v0, vt0 WHERE (((CAST(-278801828 AS BLOB))>=(CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(-278801828 AS BLOB))>=(CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1, vt1, v0, vt0);
SELECT * FROM t1, vt1, v0, vt0 WHERE (((CAST(-278801828 AS BLOB))>=(CASE WHEN vt1.c1 THEN v0.c0 ELSE vt0.c0 END)));
SELECT * FROM v0 INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.6369111624576645 END)AND(0Xffffffffbf7dafce)))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(vt0.c0)) WHERE ((((+ (vt0.c1)))/(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))/(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.6369111624576645 END)AND(0Xffffffffbf7dafce)))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(vt0.c0)));
SELECT * FROM v0 INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.6369111624576645 END)AND(0Xffffffffbf7dafce)))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(vt0.c0)) WHERE ((((+ (vt0.c1)))/(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))/(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.6369111624576645 END)AND(0Xffffffffbf7dafce)))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(vt0.c0)));
SELECT * FROM v0 INNER JOIN vt0 ON ((((((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.6369111624576645 END)AND(0Xffffffffbf7dafce)))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(vt0.c0)) WHERE ((((+ (vt0.c1)))/(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM t1, v0, vt0, vt1 WHERE ((((((v0.c0)%(v0.c0))))<((((((0.043103058771826075)AND(vt1.c2)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)%(v0.c0))))<((((((0.043103058771826075)AND(vt1.c2)))AND(v0.c0)))))) IS TRUE)  as count FROM t1, v0, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, v0, vt0, vt1 WHERE ((((((v0.c0)%(v0.c0))))<((((((0.043103058771826075)AND(vt1.c2)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)%(v0.c0))))<((((((0.043103058771826075)AND(vt1.c2)))AND(v0.c0)))))) IS TRUE)  as count FROM t1, v0, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, v0, vt0, vt1 WHERE ((((((v0.c0)%(v0.c0))))<((((((0.043103058771826075)AND(vt1.c2)))AND(v0.c0))))));
SELECT COUNT(*) FROM vt1, v0 WHERE (((vt1.c1)IS NOT((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)IS NOT((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((vt1.c1)IS NOT((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)IS NOT((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((vt1.c1)IS NOT((NOT (vt1.c1)))));
SELECT COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN (DATE('1747573525', v0.c0, v0.c0), 0.2883814629371876)));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS TEXT) IN (DATE('1747573525', v0.c0, v0.c0), 0.2883814629371876))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN (DATE('1747573525', v0.c0, v0.c0), 0.2883814629371876)));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS TEXT) IN (DATE('1747573525', v0.c0, v0.c0), 0.2883814629371876))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN (DATE('1747573525', v0.c0, v0.c0), 0.2883814629371876)));
SELECT COUNT(*) FROM t1, vt1, v0 WHERE (((CAST(v0.c0 AS BLOB))-(((t1.c0)|(vt1.c2))))) ORDER BY 0.09397118461128606 DESC  NULLS LAST, CAST(CAST(vt1.c2 AS BLOB) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))-(((t1.c0)|(vt1.c2))))) IS TRUE)  as count FROM t1, vt1, v0 ORDER BY 0.09397118461128606 DESC  NULLS LAST, CAST(CAST(vt1.c2 AS BLOB) AS INTEGER) DESC);
SELECT COUNT(*) FROM t1, vt1, v0 WHERE (((CAST(v0.c0 AS BLOB))-(((t1.c0)|(vt1.c2))))) ORDER BY 0.09397118461128606 DESC  NULLS LAST, CAST(CAST(vt1.c2 AS BLOB) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))-(((t1.c0)|(vt1.c2))))) IS TRUE)  as count FROM t1, vt1, v0 ORDER BY 0.09397118461128606 DESC  NULLS LAST, CAST(CAST(vt1.c2 AS BLOB) AS INTEGER) DESC);
SELECT COUNT(*) FROM t1, vt1, v0 WHERE (((CAST(v0.c0 AS BLOB))-(((t1.c0)|(vt1.c2))))) ORDER BY 0.09397118461128606 DESC  NULLS LAST, CAST(CAST(vt1.c2 AS BLOB) AS INTEGER) DESC;
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.8127107951254908))AND(((vt0.c0)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.8127107951254908))AND(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.8127107951254908))AND(((vt0.c0)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c0, 0.8127107951254908))AND(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.8127107951254908))AND(((vt0.c0)<(vt0.c1)))));
SELECT ALL * FROM vt0, vt1, t1, v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, vt1, t1, v0);
SELECT ALL * FROM vt0, vt1, t1, v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, vt1, t1, v0);
SELECT ALL * FROM vt0, vt1, t1, v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((- (v0.c0)))OR(TYPEOF(v0.c0))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(COALESCE(v0.c0, v0.c0))))AND('v>\')));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (v0.c0)))OR(TYPEOF(v0.c0))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(COALESCE(v0.c0, v0.c0))))AND('v>\'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((- (v0.c0)))OR(TYPEOF(v0.c0))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(COALESCE(v0.c0, v0.c0))))AND('v>\')));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (v0.c0)))OR(TYPEOF(v0.c0))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(COALESCE(v0.c0, v0.c0))))AND('v>\'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((- (v0.c0)))OR(TYPEOF(v0.c0))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(COALESCE(v0.c0, v0.c0))))AND('v>\')));
SELECT ALL * FROM vt1, t1, v0, vt0 WHERE ((~ ((vt1.c2 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c2 IN (vt1.c1))))) IS TRUE)  as count FROM vt1, t1, v0, vt0);
SELECT ALL * FROM vt1, t1, v0, vt0 WHERE ((~ ((vt1.c2 IN (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c2 IN (vt1.c1))))) IS TRUE)  as count FROM vt1, t1, v0, vt0);
SELECT ALL * FROM vt1, t1, v0, vt0 WHERE ((~ ((vt1.c2 IN (vt1.c1)))));
SELECT COUNT(*) FROM v0, t1 WHERE (x'0f7983af');
SELECT SUM(count) FROM (SELECT ALL ((x'0f7983af') IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE (x'0f7983af');
SELECT SUM(count) FROM (SELECT ALL ((x'0f7983af') IS TRUE)  as count FROM v0, t1);
SELECT COUNT(*) FROM v0, t1 WHERE (x'0f7983af');
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(t1.c0 COLLATE NOCASE)))AND(vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(t1.c0 COLLATE NOCASE)))AND(vt0.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(t1.c0 COLLATE NOCASE)))AND(vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(t1.c0 COLLATE NOCASE)))AND(vt0.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((((vt0.c1)AND(vt0.c0)))AND(t1.c0 COLLATE NOCASE)))AND(vt0.c1)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1, vt1 INNER JOIN vt0 ON (((vt1.c0)>(vt1.c1)) IN ((- (v0.c0)))) WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (v0.c0)) END) ORDER BY (~ (((x'')==(vt1.c2)))) DESC  NULLS FIRST, ((((vt0.c0)<('1175244976')))<=(LENGTH(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0, t1, vt1 INNER JOIN vt0 ON (((vt1.c0)>(vt1.c1)) IN ((- (v0.c0)))) ORDER BY (~ (((x'')==(vt1.c2)))) DESC  NULLS FIRST, ((((vt0.c0)<('1175244976')))<=(LENGTH(vt0.c1))));
SELECT ALL COUNT(*) FROM v0, t1, vt1 INNER JOIN vt0 ON (((vt1.c0)>(vt1.c1)) IN ((- (v0.c0)))) WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (v0.c0)) END) ORDER BY (~ (((x'')==(vt1.c2)))) DESC  NULLS FIRST, ((((vt0.c0)<('1175244976')))<=(LENGTH(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0, t1, vt1 INNER JOIN vt0 ON (((vt1.c0)>(vt1.c1)) IN ((- (v0.c0)))) ORDER BY (~ (((x'')==(vt1.c2)))) DESC  NULLS FIRST, ((((vt0.c0)<('1175244976')))<=(LENGTH(vt0.c1))));
SELECT ALL COUNT(*) FROM v0, t1, vt1 INNER JOIN vt0 ON (((vt1.c0)>(vt1.c1)) IN ((- (v0.c0)))) WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (v0.c0)) END) ORDER BY (~ (((x'')==(vt1.c2)))) DESC  NULLS FIRST, ((((vt0.c0)<('1175244976')))<=(LENGTH(vt0.c1)));
SELECT * FROM t1 WHERE (CASE WHEN TRIM(t1.c0) THEN (t1.c0 IN ()) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (NOT (t1.c0)) ELSE CAST(t1.c0 AS BLOB) END) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(t1.c0) THEN (t1.c0 IN ()) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (NOT (t1.c0)) ELSE CAST(t1.c0 AS BLOB) END) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS LAST);
SELECT * FROM t1 WHERE (CASE WHEN TRIM(t1.c0) THEN (t1.c0 IN ()) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (NOT (t1.c0)) ELSE CAST(t1.c0 AS BLOB) END) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TRIM(t1.c0) THEN (t1.c0 IN ()) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (NOT (t1.c0)) ELSE CAST(t1.c0 AS BLOB) END) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS LAST);
SELECT * FROM t1 WHERE (CASE WHEN TRIM(t1.c0) THEN (t1.c0 IN ()) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (NOT (t1.c0)) ELSE CAST(t1.c0 AS BLOB) END) ORDER BY t1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1 WHERE (CAST(((v0.c0)%(t1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)%(t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (CAST(((v0.c0)%(t1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)%(t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (CAST(((v0.c0)%(t1.c0)) AS NUMERIC));
SELECT * FROM v0, vt0, t1, vt1 WHERE ((- (CAST(vt1.c2 AS REAL)))) ORDER BY CAST(NULL AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c2 AS REAL)))) IS TRUE)  as count FROM v0, vt0, t1, vt1 ORDER BY CAST(NULL AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, vt0, t1, vt1 WHERE ((- (CAST(vt1.c2 AS REAL)))) ORDER BY CAST(NULL AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c2 AS REAL)))) IS TRUE)  as count FROM v0, vt0, t1, vt1 ORDER BY CAST(NULL AS NUMERIC)  NULLS LAST);
SELECT * FROM v0, vt0, t1, vt1 WHERE ((- (CAST(vt1.c2 AS REAL)))) ORDER BY CAST(NULL AS NUMERIC)  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((((((vt1.c1 IN ()))AND((((vt1.c0))<((vt1.c0))))))OR(ABS(vt1.c2))))AND((vt1.c2 IN ()))))AND(((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c1 IN ()))AND((((vt1.c0))<((vt1.c0))))))OR(ABS(vt1.c2))))AND((vt1.c2 IN ()))))AND(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c1 IN ()))AND((((vt1.c0))<((vt1.c0))))))OR(ABS(vt1.c2))))AND((vt1.c2 IN ()))))AND(((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c1 IN ()))AND((((vt1.c0))<((vt1.c0))))))OR(ABS(vt1.c2))))AND((vt1.c2 IN ()))))AND(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c1 IN ()))AND((((vt1.c0))<((vt1.c0))))))OR(ABS(vt1.c2))))AND((vt1.c2 IN ()))))AND(((vt1.c0)-(vt1.c0)))));
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, t1, vt1, v0);
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, t1, vt1, v0);
SELECT COUNT(*) FROM vt0, t1, vt1, v0 WHERE ((NOT (vt0.c0)));
SELECT ALL * FROM vt1, v0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (vt1.c1);
SELECT * FROM vt1, t1, vt0 WHERE (LIKELY(DISTINCT ((t1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (LIKELY(DISTINCT ((t1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t1.c0)*(vt1.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (LIKELY(DISTINCT ((t1.c0)*(vt1.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c0 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(UPPER(t1.c0))))OR((~ (t1.c0)))))OR(((0.9131817268097888)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c0 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(UPPER(t1.c0))))OR((~ (t1.c0)))))OR(((0.9131817268097888)<=(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c0 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(UPPER(t1.c0))))OR((~ (t1.c0)))))OR(((0.9131817268097888)<=(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c0 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(UPPER(t1.c0))))OR((~ (t1.c0)))))OR(((0.9131817268097888)<=(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c0 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(UPPER(t1.c0))))OR((~ (t1.c0)))))OR(((0.9131817268097888)<=(t1.c0)))));
SELECT * FROM vt1, t1, v0 WHERE ((((NOT (vt1.c1)))/((((v0.c0, t1.c0, x'6fba')) NOT BETWEEN ((vt1.c2, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c2, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c1)))/((((v0.c0, t1.c0, x'6fba')) NOT BETWEEN ((vt1.c2, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c2, v0.c0)))))) IS TRUE)  as count FROM vt1, t1, v0);
SELECT * FROM vt1, t1, v0 WHERE ((((NOT (vt1.c1)))/((((v0.c0, t1.c0, x'6fba')) NOT BETWEEN ((vt1.c2, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c2, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c1)))/((((v0.c0, t1.c0, x'6fba')) NOT BETWEEN ((vt1.c2, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c2, v0.c0)))))) IS TRUE)  as count FROM vt1, t1, v0);
SELECT * FROM vt1, t1, v0 WHERE ((((NOT (vt1.c1)))/((((v0.c0, t1.c0, x'6fba')) NOT BETWEEN ((vt1.c2, v0.c0, vt1.c0)) AND ((vt1.c1, vt1.c2, v0.c0))))));
SELECT COUNT(*) FROM vt1, v0, t1, vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY 2009850720 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt1, v0, t1, vt0 ORDER BY 2009850720 ASC);
SELECT COUNT(*) FROM vt1, v0, t1, vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY 2009850720 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM vt1, v0, t1, vt0 ORDER BY 2009850720 ASC);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (NULL) ORDER BY ((((0X4bcc2f71)AND(UNLIKELY(DISTINCT t1.c0))))OR(((((t1.c0)AND(v0.c0)))AND('')))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY ((((0x4bcc2f71)AND(UNLIKELY(DISTINCT t1.c0))))OR(((((t1.c0)AND(v0.c0)))AND('')))) DESC);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (NULL) ORDER BY ((((0X4bcc2f71)AND(UNLIKELY(DISTINCT t1.c0))))OR(((((t1.c0)AND(v0.c0)))AND('')))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY ((((0x4bcc2f71)AND(UNLIKELY(DISTINCT t1.c0))))OR(((((t1.c0)AND(v0.c0)))AND('')))) DESC);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (NULL) ORDER BY ((((0X4bcc2f71)AND(UNLIKELY(DISTINCT t1.c0))))OR(((((t1.c0)AND(v0.c0)))AND('')))) DESC;
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)|(((((((((-9.7115783E8)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)|(((((((((-9.7115783E8)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)|(((((((((-9.7115783E8)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)|(((((((((-9.7115783E8)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)|(((((((((-9.7115783E8)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT * FROM t1 WHERE (((((t1.c0)-(t1.c0)))<<(((((x'43d3')OR(t1.c0)))OR(t1.c0))))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)-(t1.c0)))<<(((((x'43d3')OR(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT * FROM t1 WHERE (((((t1.c0)-(t1.c0)))<<(((((x'43d3')OR(t1.c0)))OR(t1.c0))))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)-(t1.c0)))<<(((((x'43d3')OR(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT * FROM t1 WHERE (((((t1.c0)-(t1.c0)))<<(((((x'43d3')OR(t1.c0)))OR(t1.c0))))) ORDER BY t1.c0;
SELECT ALL * FROM t1 WHERE (CASE CAST(t1.c0 AS INTEGER)  WHEN (~ ('\J')) THEN t1.c0 WHEN ((t1.c0)|(t1.c0)) THEN (((t1.c0))!=((t1.c0))) WHEN (t1.c0 IN ()) THEN ((t1.c0)==(t1.c0)) END) ORDER BY CAST(HEX(0.4858730531739476) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c0 AS INTEGER)  WHEN (~ ('\J')) THEN t1.c0 WHEN ((t1.c0)|(t1.c0)) THEN (((t1.c0))!=((t1.c0))) WHEN (t1.c0 IN ()) THEN ((t1.c0)=(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY CAST(HEX(0.4858730531739476) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CASE CAST(t1.c0 AS INTEGER)  WHEN (~ ('\J')) THEN t1.c0 WHEN ((t1.c0)|(t1.c0)) THEN (((t1.c0))!=((t1.c0))) WHEN (t1.c0 IN ()) THEN ((t1.c0)==(t1.c0)) END) ORDER BY CAST(HEX(0.4858730531739476) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t1.c0 AS INTEGER)  WHEN (~ ('\J')) THEN t1.c0 WHEN ((t1.c0)|(t1.c0)) THEN (((t1.c0))!=((t1.c0))) WHEN (t1.c0 IN ()) THEN ((t1.c0)=(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY CAST(HEX(0.4858730531739476) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CASE CAST(t1.c0 AS INTEGER)  WHEN (~ ('\J')) THEN t1.c0 WHEN ((t1.c0)|(t1.c0)) THEN (((t1.c0))!=((t1.c0))) WHEN (t1.c0 IN ()) THEN ((t1.c0)==(t1.c0)) END) ORDER BY CAST(HEX(0.4858730531739476) AS BLOB) ASC  NULLS FIRST;
