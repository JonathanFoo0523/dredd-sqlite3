-- Time: 2024/06/10 06:39:52
-- Database: database61
-- Database version: 3.40.0
-- seed value: 2064110961
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, tokenize=porter); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (''), (0X5143c580), (NULL); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 221892766);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
REINDEX; -- 0ms;
PRAGMA threads = -5196178522479856871; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15129'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (1363395968); -- 1ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 1ms;
REINDEX; -- 1ms;
END; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('560686039'); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', ''), (NULL, NULL), (NULL, '-776695114'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'ff2c', 0.7377583505290839), (x'', 0.7377583505290839), (((CASE NULL  WHEN NULL THEN NULL END)LIKE(((1334625356) BETWEEN ('-136775197') AND (NULL)))), 'aj40कUn'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34339'); -- 1ms;
INSERT OR FAIL INTO vt1 VALUES (-472799745), (x'6247'), ('8IpFkF'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-4.72799745E8); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '33921'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1718504429); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '20533'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1046162925); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-824680119,11');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-136775197,11');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1040630409); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.43733925081578895), (NULL), ('0.43733925081578895'); -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (0.729419181164224), (0xfffffffff7d8f9e3), ('32413672'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
DROP TABLE IF EXISTS vt1; -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, 'i쑌NEmjY3p'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.22253247616466765); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('-824680119'), (190633326); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, -776695114); -- 0ms;
DELETE FROM vt0 WHERE json_insert(CAST(vt0.c1 AS TEXT), (~ (vt0.c0)), ((vt0.c0) NOTNULL), vt0.c0, ((((1741814512)OR(vt0.c0)))AND(x''))); -- 0ms;
DELETE FROM vt0 WHERE ((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((vt0.c1)+(vt0.c0))) AND ((((vt0.c0))<=((vt0.c0))))); -- 1ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA stats; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.optimize; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (x'16c1e5ca'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('', x''); -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=560686039,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1251390308);\n; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT '' FROM vt0 ORDER BY (UPPER(vt0.c1) IN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)), (((vt0.c1))<((x''))))) LIMIT 1741814512 OFFSET 1243722058; -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0, v0 WHERE (RTRIM(((((v0.c0)AND(v0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (RTRIM(((((v0.c0)AND(v0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (RTRIM(((((v0.c0)AND(v0.c0)))AND(vt0.c0))));
SELECT * FROM v0 WHERE (((('190633326'))>(((('銶I(YPz>O)')==(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('190633326'))>(((('銶I(YPz>O)')==(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((('190633326'))>(((('銶I(YPz>O)')==(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('190633326'))>(((('銶I(YPz>O)')==(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((('190633326'))>(((('銶I(YPz>O)')==(v0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)+(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((NULL)+(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)+(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((NULL)+(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)+(vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE vt0.c1  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT * FROM v0, vt0 NOT INDEXED WHERE (TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 NOT INDEXED WHERE (TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 NOT INDEXED WHERE (TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ (vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (CAST(UPPER(DISTINCT vt0.c1) AS REAL)) ORDER BY CAST(((vt0.c0)>>(vt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>>(vt0.c1)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(UPPER(DISTINCT vt0.c1) AS REAL)) ORDER BY CAST(((vt0.c0)>>(vt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT vt0.c1) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>>(vt0.c1)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(UPPER(DISTINCT vt0.c1) AS REAL)) ORDER BY CAST(((vt0.c0)>>(vt0.c1)) AS TEXT)  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((NULL)))) ORDER BY '-143507527';
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((NULL)))) IS TRUE)  as count FROM vt0 ORDER BY '-143507527');
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((NULL)))) ORDER BY '-143507527';
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((NULL)))) IS TRUE)  as count FROM vt0 ORDER BY '-143507527');
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((NULL)))) ORDER BY '-143507527';
SELECT * FROM v0 WHERE (((((v0.c0)<(v0.c0))) NOT BETWEEN (((NULL) ISNULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<(v0.c0))) NOT BETWEEN (((NULL) ISNULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)<(v0.c0))) NOT BETWEEN (((NULL) ISNULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<(v0.c0))) NOT BETWEEN (((NULL) ISNULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)<(v0.c0))) NOT BETWEEN (((NULL) ISNULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0) AND (((((v0.c0)AND(v0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0) AND (((((v0.c0)AND(v0.c0)))OR(NULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0) AND (((((v0.c0)AND(v0.c0)))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0) AND (((((v0.c0)AND(v0.c0)))OR(NULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (v0.c0) AND (((((v0.c0)AND(v0.c0)))OR(NULL)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER));
SELECT ALL * FROM v0, vt0 WHERE ((((PRINTF(vt0.c1)))=((((vt0.c0)<(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((PRINTF(vt0.c1)))=((((vt0.c0)<(vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((PRINTF(vt0.c1)))=((((vt0.c0)<(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((PRINTF(vt0.c1)))=((((vt0.c0)<(vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((PRINTF(vt0.c1)))=((((vt0.c0)<(vt0.c1))))));
SELECT * FROM v0, vt0 WHERE (CAST(NULL AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(NULL AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(NULL AS REAL) COLLATE BINARY);
SELECT * FROM vt0 WHERE ((((((vt0.c1)<(vt0.c1))))>=((vt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOTNULL) DESC, CASE vt0.c1 COLLATE NOCASE  WHEN x'' THEN ((-1328345070) BETWEEN (vt0.c0) AND (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)<(vt0.c1))))>=((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOTNULL) DESC, CASE vt0.c1 COLLATE NOCASE  WHEN x'' THEN ((-1328345070) BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT * FROM vt0 WHERE ((((((vt0.c1)<(vt0.c1))))>=((vt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOTNULL) DESC, CASE vt0.c1 COLLATE NOCASE  WHEN x'' THEN ((-1328345070) BETWEEN (vt0.c0) AND (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)<(vt0.c1))))>=((vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOTNULL) DESC, CASE vt0.c1 COLLATE NOCASE  WHEN x'' THEN ((-1328345070) BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT * FROM vt0 WHERE ((((((vt0.c1)<(vt0.c1))))>=((vt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) NOTNULL) DESC, CASE vt0.c1 COLLATE NOCASE  WHEN x'' THEN ((-1328345070) BETWEEN (vt0.c0) AND (vt0.c1)) END;
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE BINARY);
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, x'eadc')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(0x224d3001)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY UNLIKELY(IFNULL(DISTINCT v0.c0, v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, x'eadc')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(0X224d3001)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(IFNULL(DISTINCT v0.c0, v0.c0))  NULLS LAST);
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, x'eadc')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(0x224d3001)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY UNLIKELY(IFNULL(DISTINCT v0.c0, v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, x'eadc')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(0X224d3001)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(IFNULL(DISTINCT v0.c0, v0.c0))  NULLS LAST);
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, x'eadc')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))OR(0x224d3001)))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY UNLIKELY(IFNULL(DISTINCT v0.c0, v0.c0))  NULLS LAST;
SELECT * FROM vt0 WHERE (INSTR((vt0.c0 IN (vt0.c1)), NULL COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((INSTR((vt0.c0 IN (vt0.c1)), NULL COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (INSTR((vt0.c0 IN (vt0.c1)), NULL COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((INSTR((vt0.c0 IN (vt0.c1)), NULL COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (INSTR((vt0.c0 IN (vt0.c1)), NULL COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ()));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))IS NOT('-143507527')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))IS NOT('-143507527'))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))IS NOT('-143507527')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c0)))IS NOT('-143507527'))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))IS NOT('-143507527')));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) IS TRUE));
SELECT ALL * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, x'dd08', ((((v0.c0)AND(v0.c0)))AND(x''))))>((v0.c0, ((v0.c0)LIKE(v0.c0)), (+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM, x'dd08', ((((v0.c0)AND(v0.c0)))AND(x''))))>((v0.c0, ((v0.c0)LIKE(v0.c0)), (+ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, x'dd08', ((((v0.c0)AND(v0.c0)))AND(x''))))>((v0.c0, ((v0.c0)LIKE(v0.c0)), (+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM, x'dd08', ((((v0.c0)AND(v0.c0)))AND(x''))))>((v0.c0, ((v0.c0)LIKE(v0.c0)), (+ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, x'dd08', ((((v0.c0)AND(v0.c0)))AND(x''))))>((v0.c0, ((v0.c0)LIKE(v0.c0)), (+ (v0.c0))))));
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) ELSE x'' END);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE NULL  WHEN NULL THEN vt0.c1 ELSE vt0.c0 END) AND (IFNULL(vt0.c1, vt0.c1)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((~ (vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE NULL  WHEN NULL THEN vt0.c1 ELSE vt0.c0 END) AND (IFNULL(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((~ (vt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE NULL  WHEN NULL THEN vt0.c1 ELSE vt0.c0 END) AND (IFNULL(vt0.c1, vt0.c1)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((~ (vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE NULL  WHEN NULL THEN vt0.c1 ELSE vt0.c0 END) AND (IFNULL(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((~ (vt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE NULL  WHEN NULL THEN vt0.c1 ELSE vt0.c0 END) AND (IFNULL(vt0.c1, vt0.c1)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND (((~ (vt0.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY (((load_extension(v0.c0)))<((((v0.c0)&(NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((load_extension(v0.c0)))<((((v0.c0)&(NULL)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY (((load_extension(v0.c0)))<((((v0.c0)&(NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((load_extension(v0.c0)))<((((v0.c0)&(NULL)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY (((load_extension(v0.c0)))<((((v0.c0)&(NULL)))))  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM) ORDER BY (+ ((vt0.c1 IN ())))  NULLS LAST, (((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) IS TRUE)  NULLS FIRST, ((vt0.c0)*(vt0.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN v0 ORDER BY (+ ((vt0.c1 IN ())))  NULLS LAST, (((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) IS TRUE)  NULLS FIRST, ((vt0.c0)*(vt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM) ORDER BY (+ ((vt0.c1 IN ())))  NULLS LAST, (((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) IS TRUE)  NULLS FIRST, ((vt0.c0)*(vt0.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED NATURAL JOIN v0 ORDER BY (+ ((vt0.c1 IN ())))  NULLS LAST, (((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) IS TRUE)  NULLS FIRST, ((vt0.c0)*(vt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM) ORDER BY (+ ((vt0.c1 IN ())))  NULLS LAST, (((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))) IS TRUE)  NULLS FIRST, ((vt0.c0)*(vt0.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT COUNT(*) FROM v0, vt0 WHERE ((('-2095738837') BETWEEN (vt0.c0) AND ((- (vt0.c0))))) ORDER BY x'' COLLATE NOCASE DESC  NULLS FIRST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)*(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((('-2095738837') BETWEEN (vt0.c0) AND ((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'' COLLATE NOCASE DESC  NULLS FIRST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)*(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((('-2095738837') BETWEEN (vt0.c0) AND ((- (vt0.c0))))) ORDER BY x'' COLLATE NOCASE DESC  NULLS FIRST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)*(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((('-2095738837') BETWEEN (vt0.c0) AND ((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'' COLLATE NOCASE DESC  NULLS FIRST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)*(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((('-2095738837') BETWEEN (vt0.c0) AND ((- (vt0.c0))))) ORDER BY x'' COLLATE NOCASE DESC  NULLS FIRST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)*(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN (v0.c0 IN (234375910)) THEN '1675427030' WHEN highlight(v0.c0, v0.c0, v0.c0, '1251390308') THEN '' WHEN (NOT (vt0.c1)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END THEN ((190633326)IS(1243722058)) WHEN ((((vt0.c1)OR(0.9694411232826295)))AND(vt0.c0)) THEN ((vt0.c0)>(vt0.c1)) END) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN (234375910)) THEN '1675427030' WHEN highlight(v0.c0, v0.c0, v0.c0, '1251390308') THEN '' WHEN (NOT (vt0.c1)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END THEN ((190633326)IS(1243722058)) WHEN ((((vt0.c1)OR(0.9694411232826295)))AND(vt0.c0)) THEN ((vt0.c0)>(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN (v0.c0 IN (234375910)) THEN '1675427030' WHEN highlight(v0.c0, v0.c0, v0.c0, '1251390308') THEN '' WHEN (NOT (vt0.c1)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END THEN ((190633326)IS(1243722058)) WHEN ((((vt0.c1)OR(0.9694411232826295)))AND(vt0.c0)) THEN ((vt0.c0)>(vt0.c1)) END) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN (234375910)) THEN '1675427030' WHEN highlight(v0.c0, v0.c0, v0.c0, '1251390308') THEN '' WHEN (NOT (vt0.c1)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END THEN ((190633326)IS(1243722058)) WHEN ((((vt0.c1)OR(0.9694411232826295)))AND(vt0.c0)) THEN ((vt0.c0)>(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN (v0.c0 IN (234375910)) THEN '1675427030' WHEN highlight(v0.c0, v0.c0, v0.c0, '1251390308') THEN '' WHEN (NOT (vt0.c1)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END THEN ((190633326)IS(1243722058)) WHEN ((((vt0.c1)OR(0.9694411232826295)))AND(vt0.c0)) THEN ((vt0.c0)>(vt0.c1)) END) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN x'' END) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c0)) THEN x'' END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN x'' END) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c0)) THEN x'' END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN x'' END) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON x'd599' WHERE (((((((((TOTAL_CHANGES())OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((v0.c0) BETWEEN (vt0.c1) AND (NULL)))))OR(vt0.c0)))OR((vt0.c0 IN ())))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((TOTAL_CHANGES())OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((v0.c0) BETWEEN (vt0.c1) AND (NULL)))))OR(vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON x'd599' ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON x'd599' WHERE (((((((((TOTAL_CHANGES())OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((v0.c0) BETWEEN (vt0.c1) AND (NULL)))))OR(vt0.c0)))OR((vt0.c0 IN ())))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((TOTAL_CHANGES())OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((v0.c0) BETWEEN (vt0.c1) AND (NULL)))))OR(vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON x'd599' ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON x'd599' WHERE (((((((((TOTAL_CHANGES())OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((v0.c0) BETWEEN (vt0.c1) AND (NULL)))))OR(vt0.c0)))OR((vt0.c0 IN ())))) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)) AND (((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1, vt0.c0, vt0.c1))))))) ORDER BY (- (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)) AND (((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1, vt0.c0, vt0.c1))))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)) AND (((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1, vt0.c0, vt0.c1))))))) ORDER BY (- (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)) AND (((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1, vt0.c0, vt0.c1))))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)) AND (((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1, vt0.c0, vt0.c1))))))) ORDER BY (- (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((LOWER(v0.c0), CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END, 0x7b9d3553))<=((CAST(NULL AS INTEGER), vt0.c0, ((((((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((LOWER(v0.c0), CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END, 0x7b9d3553))<=((CAST(NULL AS INTEGER), vt0.c0, ((((((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((LOWER(v0.c0), CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END, 0x7b9d3553))<=((CAST(NULL AS INTEGER), vt0.c0, ((((((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((LOWER(v0.c0), CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END, 0x7b9d3553))<=((CAST(NULL AS INTEGER), vt0.c0, ((((((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((LOWER(v0.c0), CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END, 0x7b9d3553))<=((CAST(NULL AS INTEGER), vt0.c0, ((((((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c1))))));
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(((v0.c0)OR(v0.c0)))))OR(-570299957))) ORDER BY (- (CAST(v0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(((v0.c0)OR(v0.c0)))))OR(-570299957))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c0 AS REAL))) DESC);
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(((v0.c0)OR(v0.c0)))))OR(-570299957))) ORDER BY (- (CAST(v0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(((v0.c0)OR(v0.c0)))))OR(-570299957))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c0 AS REAL))) DESC);
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(((v0.c0)OR(v0.c0)))))OR(-570299957))) ORDER BY (- (CAST(v0.c0 AS REAL))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) IS FALSE)) ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'f1ff' END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'f1ff' END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) IS FALSE)) ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'f1ff' END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'f1ff' END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) IS FALSE)) ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'f1ff' END DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0, v0.c0, 0.09360247317590209)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c1) ISNULL), (((('-1655181025')AND(x'')))AND(vt0.c0)))) AND ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), LOWER(vt0.c1))))) ORDER BY CAST(LAST_INSERT_ROWID() AS NUMERIC)  NULLS LAST, 0.38326971339368965 COLLATE NOCASE  NULLS LAST, (~ ((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, 0.09360247317590209)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c1) ISNULL), (((('-1655181025')AND(x'')))AND(vt0.c0)))) AND ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), LOWER(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(LAST_INSERT_ROWID() AS NUMERIC)  NULLS LAST, 0.38326971339368965 COLLATE NOCASE  NULLS LAST, (~ ((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0, v0.c0, 0.09360247317590209)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c1) ISNULL), (((('-1655181025')AND(x'')))AND(vt0.c0)))) AND ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), LOWER(vt0.c1))))) ORDER BY CAST(LAST_INSERT_ROWID() AS NUMERIC)  NULLS LAST, 0.38326971339368965 COLLATE NOCASE  NULLS LAST, (~ ((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, 0.09360247317590209)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c1) ISNULL), (((('-1655181025')AND(x'')))AND(vt0.c0)))) AND ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), LOWER(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(LAST_INSERT_ROWID() AS NUMERIC)  NULLS LAST, 0.38326971339368965 COLLATE NOCASE  NULLS LAST, (~ ((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0, v0.c0, 0.09360247317590209)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c1) ISNULL), (((('-1655181025')AND(x'')))AND(vt0.c0)))) AND ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), LOWER(vt0.c1))))) ORDER BY CAST(LAST_INSERT_ROWID() AS NUMERIC)  NULLS LAST, 0.38326971339368965 COLLATE NOCASE  NULLS LAST, (~ ((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) ISNULL) IN (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0) ISNULL) IN (''))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) ISNULL) IN (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0) ISNULL) IN (''))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) ISNULL) IN (''))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((('0.7377583505290839')=(NULL)));
SELECT SUM(count) FROM (SELECT (((('0.7377583505290839')==(NULL))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((('0.7377583505290839')=(NULL)));
SELECT SUM(count) FROM (SELECT (((('0.7377583505290839')==(NULL))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((('0.7377583505290839')=(NULL)));
SELECT * FROM vt0 WHERE ((NOT (((vt0.c1) IS FALSE)))) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))), (((-1328345070)) NOT BETWEEN ((((vt0.c1)|(vt0.c1)))) AND ((((vt0.c1)IS NOT(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))), (((-1328345070)) NOT BETWEEN ((((vt0.c1)|(vt0.c1)))) AND ((((vt0.c1)IS NOT(vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c1) IS FALSE)))) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))), (((-1328345070)) NOT BETWEEN ((((vt0.c1)|(vt0.c1)))) AND ((((vt0.c1)IS NOT(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))), (((-1328345070)) NOT BETWEEN ((((vt0.c1)|(vt0.c1)))) AND ((((vt0.c1)IS NOT(vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c1) IS FALSE)))) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))), (((-1328345070)) NOT BETWEEN ((((vt0.c1)|(vt0.c1)))) AND ((((vt0.c1)IS NOT(vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0)))-(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE x''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0))==((v0.c0))) ELSE ((v0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0))=((v0.c0))) ELSE ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE x''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0))==((v0.c0))) ELSE ((v0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0))=((v0.c0))) ELSE ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE x''  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0))==((v0.c0))) ELSE ((v0.c0) NOT NULL) END);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY ABS(1.7976931348623157E308)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ABS(1.7976931348623157E308)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY ABS(1.7976931348623157E308)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ABS(1.7976931348623157E308)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY ABS(1.7976931348623157E308)  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (CASE WHEN HEX(DISTINCT vt0.c1) THEN '560686039' WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) WHEN CASE WHEN v0.c0 THEN 0X216b63d7 END THEN (NOT (vt0.c0)) END) ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT vt0.c1) THEN '560686039' WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) WHEN CASE WHEN v0.c0 THEN 0X216b63d7 END THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC);
SELECT * FROM vt0, v0 WHERE (CASE WHEN HEX(DISTINCT vt0.c1) THEN '560686039' WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) WHEN CASE WHEN v0.c0 THEN 0X216b63d7 END THEN (NOT (vt0.c0)) END) ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT vt0.c1) THEN '560686039' WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) WHEN CASE WHEN v0.c0 THEN 0X216b63d7 END THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC);
SELECT * FROM vt0, v0 WHERE (CASE WHEN HEX(DISTINCT vt0.c1) THEN '560686039' WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) WHEN CASE WHEN v0.c0 THEN 0X216b63d7 END THEN (NOT (vt0.c0)) END) ORDER BY (~ (CAST(v0.c0 AS BLOB))) ASC;
SELECT ALL * FROM vt0, v0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)<(32413672)))+((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(32413672)))+((+ (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)<(32413672)))+((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(32413672)))+((+ (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)<(32413672)))+((+ (v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKE(vt0.c0, v0.c0, 'a')) ORDER BY (((v0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)%(vt0.c1))))) DESC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))AND(CASE vt0.c1  WHEN x'' THEN vt0.c1 END)))AND(CAST(vt0.c1 AS BLOB))))AND(((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))  NULLS FIRST, CASE WHEN (((v0.c0))==((vt0.c1))) THEN vt0.c0 WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((((vt0.c1)OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0)<(NULL)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)>=(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c0, v0.c0, 'a')) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)%(vt0.c1))))) DESC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))AND(CASE vt0.c1  WHEN x'' THEN vt0.c1 END)))AND(CAST(vt0.c1 AS BLOB))))AND(((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))  NULLS FIRST, CASE WHEN (((v0.c0))==((vt0.c1))) THEN vt0.c0 WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((((vt0.c1)OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0)<(NULL)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)>=(vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKE(vt0.c0, v0.c0, 'a')) ORDER BY (((v0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)%(vt0.c1))))) DESC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))AND(CASE vt0.c1  WHEN x'' THEN vt0.c1 END)))AND(CAST(vt0.c1 AS BLOB))))AND(((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))  NULLS FIRST, CASE WHEN (((v0.c0))==((vt0.c1))) THEN vt0.c0 WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((((vt0.c1)OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0)<(NULL)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)>=(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c0, v0.c0, 'a')) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)%(vt0.c1))))) DESC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))AND(CASE vt0.c1  WHEN x'' THEN vt0.c1 END)))AND(CAST(vt0.c1 AS BLOB))))AND(((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))  NULLS FIRST, CASE WHEN (((v0.c0))==((vt0.c1))) THEN vt0.c0 WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((((vt0.c1)OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0)<(NULL)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)>=(vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKE(vt0.c0, v0.c0, 'a')) ORDER BY (((v0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c1)%(vt0.c1))))) DESC  NULLS FIRST, ((((((((vt0.c0)AND(vt0.c0)))AND(CASE vt0.c1  WHEN x'' THEN vt0.c1 END)))AND(CAST(vt0.c1 AS BLOB))))AND(((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))  NULLS FIRST, CASE WHEN (((v0.c0))==((vt0.c1))) THEN vt0.c0 WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((((vt0.c1)OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0)<(NULL)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END ELSE ((vt0.c0)>=(vt0.c0)) END DESC;
SELECT * FROM vt0, v0 WHERE ((((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS NUMERIC), ((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c1)))AND(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((((vt0.c1)AND(v0.c0)))OR(vt0.c0)), ((vt0.c1)=(v0.c0)))))) ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c1)))=(((v0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS NUMERIC), ((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c1)))AND(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((((vt0.c1)AND(v0.c0)))OR(vt0.c0)), ((vt0.c1)==(v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c1)))=(((v0.c0)*(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS NUMERIC), ((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c1)))AND(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((((vt0.c1)AND(v0.c0)))OR(vt0.c0)), ((vt0.c1)=(v0.c0)))))) ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c1)))=(((v0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS NUMERIC), ((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c1)))AND(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((((vt0.c1)AND(v0.c0)))OR(vt0.c0)), ((vt0.c1)==(v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c1)))=(((v0.c0)*(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((vt0.c1, v0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS NUMERIC), ((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c1)))AND(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, ((((vt0.c1)AND(v0.c0)))OR(vt0.c0)), ((vt0.c1)=(v0.c0)))))) ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c1)))=(((v0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c1)|(0.38326971339368965)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)|(0.38326971339368965)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c1)|(0.38326971339368965)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)|(0.38326971339368965)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c1)|(0.38326971339368965)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))GLOB(((vt0.c1) BETWEEN (x'') AND (vt0.c0))))) ORDER BY ((MIN(vt0.c1, vt0.c1)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))GLOB(((vt0.c1) BETWEEN (x'') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((MIN(vt0.c1, vt0.c1)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))GLOB(((vt0.c1) BETWEEN (x'') AND (vt0.c0))))) ORDER BY ((MIN(vt0.c1, vt0.c1)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))GLOB(((vt0.c1) BETWEEN (x'') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((MIN(vt0.c1, vt0.c1)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))GLOB(((vt0.c1) BETWEEN (x'') AND (vt0.c0))))) ORDER BY ((MIN(vt0.c1, vt0.c1)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0 IN ()), vt0.c0, CAST(v0.c0 AS REAL)))<(((~ (vt0.c1)), ((v0.c0) NOT NULL), ((((v0.c0)AND(NULL)))OR(vt0.c0)))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), vt0.c0, CAST(v0.c0 AS REAL)))<(((~ (vt0.c1)), ((v0.c0) NOT NULL), ((((v0.c0)AND(NULL)))OR(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0 IN ()), vt0.c0, CAST(v0.c0 AS REAL)))<(((~ (vt0.c1)), ((v0.c0) NOT NULL), ((((v0.c0)AND(NULL)))OR(vt0.c0)))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), vt0.c0, CAST(v0.c0 AS REAL)))<(((~ (vt0.c1)), ((v0.c0) NOT NULL), ((((v0.c0)AND(NULL)))OR(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0 IN ()), vt0.c0, CAST(v0.c0 AS REAL)))<(((~ (vt0.c1)), ((v0.c0) NOT NULL), ((((v0.c0)AND(NULL)))OR(vt0.c0)))))) ORDER BY v0.c0 DESC;
SELECT * FROM v0 WHERE (CASE WHEN INSTR(v0.c0, v0.c0) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, '158628679', v0.c0))) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN INSTR(v0.c0, v0.c0) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, '158628679', v0.c0))) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN INSTR(v0.c0, v0.c0) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, '158628679', v0.c0))) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN INSTR(v0.c0, v0.c0) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, '158628679', v0.c0))) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN INSTR(v0.c0, v0.c0) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) WHEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, '158628679', v0.c0))) THEN v0.c0 WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS NUMERIC) END);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0, json_patch(0Xffffffffd8fc0a09, ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('HK')));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, json_patch(0Xffffffffd8fc0a09, ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('HK'))));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0, json_patch(0Xffffffffd8fc0a09, ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('HK')));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, json_patch(0Xffffffffd8fc0a09, ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('HK'))));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0, json_patch(0Xffffffffd8fc0a09, ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('HK')));
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS TEXT)) ORDER BY -136775197  NULLS FIRST, (((v0.c0)LIKE(v0.c0)) IN ())  NULLS LAST, v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY -136775197  NULLS FIRST, (((v0.c0)LIKE(v0.c0)) IN ())  NULLS LAST, v0.c0 COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS TEXT)) ORDER BY -136775197  NULLS FIRST, (((v0.c0)LIKE(v0.c0)) IN ())  NULLS LAST, v0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY -136775197  NULLS FIRST, (((v0.c0)LIKE(v0.c0)) IN ())  NULLS LAST, v0.c0 COLLATE NOCASE);
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))IS(((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))IS(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))IS(((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))IS(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))IS(((v0.c0)AND(v0.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY (((((vt0.c0))>((vt0.c0))))||(UNLIKELY(DISTINCT vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0))))||(UNLIKELY(DISTINCT vt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY (((((vt0.c0))>((vt0.c0))))||(UNLIKELY(DISTINCT vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0))))||(UNLIKELY(DISTINCT vt0.c1)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY (((((vt0.c0))>((vt0.c0))))||(UNLIKELY(DISTINCT vt0.c1)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY 'v4\rH*>M' DESC  NULLS LAST, CASE (vt0.c0 IN (vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) END ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY 'v4\rH*>M' DESC  NULLS LAST, CASE (vt0.c0 IN (vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) END ASC);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY 'v4\rH*>M' DESC  NULLS LAST, CASE (vt0.c0 IN (vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) END ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY 'v4\rH*>M' DESC  NULLS LAST, CASE (vt0.c0 IN (vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) END ASC);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY 'v4\rH*>M' DESC  NULLS LAST, CASE (vt0.c0 IN (vt0.c1))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) END ASC;
SELECT * FROM vt0 WHERE (((((0.3341403182003869)AND(vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (vt0.c1 COLLATE NOCASE))) ORDER BY 'uR' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.3341403182003869)AND(vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY 'uR' DESC);
SELECT * FROM vt0 WHERE (((((0.3341403182003869)AND(vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (vt0.c1 COLLATE NOCASE))) ORDER BY 'uR' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.3341403182003869)AND(vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY 'uR' DESC);
SELECT * FROM vt0 WHERE (((((0.3341403182003869)AND(vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (vt0.c1 COLLATE NOCASE))) ORDER BY 'uR' DESC;
SELECT * FROM vt0 WHERE (((((((((JULIANDAY(vt0.c0, vt0.c1, vt0.c0))OR((~ (vt0.c1)))))OR(0xffffffffd8fc0a09 COLLATE NOCASE)))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((JULIANDAY(vt0.c0, vt0.c1, vt0.c0))OR((~ (vt0.c1)))))OR(0Xffffffffd8fc0a09 COLLATE NOCASE)))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((JULIANDAY(vt0.c0, vt0.c1, vt0.c0))OR((~ (vt0.c1)))))OR(0xffffffffd8fc0a09 COLLATE NOCASE)))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((JULIANDAY(vt0.c0, vt0.c1, vt0.c0))OR((~ (vt0.c1)))))OR(0Xffffffffd8fc0a09 COLLATE NOCASE)))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((JULIANDAY(vt0.c0, vt0.c1, vt0.c0))OR((~ (vt0.c1)))))OR(0xffffffffd8fc0a09 COLLATE NOCASE)))OR(((vt0.c1)LIKE(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1)-(NULL)) THEN ((vt0.c1)OR(0.5202717126548722)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)-(vt0.c0)) ELSE (~ (vt0.c1)) END) ORDER BY (32413672 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)-(NULL)) THEN ((vt0.c1)OR(0.5202717126548722)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)-(vt0.c0)) ELSE (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (32413672 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1)-(NULL)) THEN ((vt0.c1)OR(0.5202717126548722)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)-(vt0.c0)) ELSE (~ (vt0.c1)) END) ORDER BY (32413672 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)-(NULL)) THEN ((vt0.c1)OR(0.5202717126548722)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)-(vt0.c0)) ELSE (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (32413672 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1)-(NULL)) THEN ((vt0.c1)OR(0.5202717126548722)) WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)-(vt0.c0)) ELSE (~ (vt0.c1)) END) ORDER BY (32413672 IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT * FROM vt0 WHERE ((~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN -851317278 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN -851317278 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN -851317278 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN -851317278 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN -851317278 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (x'')))LIKE(vt0.c0))) ORDER BY (- (CASE WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (x'')))LIKE(vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (CASE WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN x'' END)) DESC);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (x'')))LIKE(vt0.c0))) ORDER BY (- (CASE WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (x'')))LIKE(vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (CASE WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN x'' END)) DESC);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (x'')))LIKE(vt0.c0))) ORDER BY (- (CASE WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN x'' END)) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.7501447813770123) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((((((0.38326971339368965)OR(vt0.c1)))AND(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7501447813770123) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((((((0.38326971339368965)OR(vt0.c1)))AND(v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.7501447813770123) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((((((0.38326971339368965)OR(vt0.c1)))AND(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7501447813770123) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((((((0.38326971339368965)OR(vt0.c1)))AND(v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.7501447813770123) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((((((0.38326971339368965)OR(vt0.c1)))AND(v0.c0))))) ASC;
SELECT * FROM v0, vt0 WHERE ((+ (NULLIF(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULLIF(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((+ (NULLIF(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULLIF(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((+ (NULLIF(vt0.c0, vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (COALESCE(DISTINCT vt0.c1, '}')))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))-((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (COALESCE(DISTINCT vt0.c1, '}')))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))-((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (COALESCE(DISTINCT vt0.c1, '}')))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))-((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (COALESCE(DISTINCT vt0.c1, '}')))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))-((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c1 IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (COALESCE(DISTINCT vt0.c1, '}')))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))-((vt0.c0 IN ())))  NULLS FIRST, ((vt0.c1 IN ()) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE 0.9136995301709706  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE -1804858348 END)>=(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.9136995301709706  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE -1804858348 END)>=(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE 0.9136995301709706  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE -1804858348 END)>=(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.9136995301709706  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE -1804858348 END)>=(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE 0.9136995301709706  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE -1804858348 END)>=(v0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN 0Xdf84ae6 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) ORDER BY (+ (-6.54570999E8));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN 0Xdf84ae6 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0 ORDER BY (+ (-6.54570999E8)));
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN 0Xdf84ae6 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) ORDER BY (+ (-6.54570999E8));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN 0Xdf84ae6 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0 ORDER BY (+ (-6.54570999E8)));
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT CASE vt0.c1  WHEN vt0.c1 THEN 0Xdf84ae6 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) ORDER BY (+ (-6.54570999E8));
SELECT * FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)<<(vt0.c1 COLLATE RTRIM))) ORDER BY ((((v0.c0)AND(x'')))AND(vt0.c0)) DESC  NULLS LAST, '0.9136995301709706' ASC  NULLS LAST, (((((NOT (NULL)))AND(((v0.c0)!=(vt0.c1)))))AND(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)<<(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)AND(x'')))AND(vt0.c0)) DESC  NULLS LAST, '0.9136995301709706' ASC  NULLS LAST, (((((NOT (NULL)))AND(((v0.c0)<>(vt0.c1)))))AND(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT * FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)<<(vt0.c1 COLLATE RTRIM))) ORDER BY ((((v0.c0)AND(x'')))AND(vt0.c0)) DESC  NULLS LAST, '0.9136995301709706' ASC  NULLS LAST, (((((NOT (NULL)))AND(((v0.c0)!=(vt0.c1)))))AND(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)<<(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)AND(x'')))AND(vt0.c0)) DESC  NULLS LAST, '0.9136995301709706' ASC  NULLS LAST, (((((NOT (NULL)))AND(((v0.c0)<>(vt0.c1)))))AND(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT * FROM vt0, v0 WHERE (((v0.c0 COLLATE RTRIM)<<(vt0.c1 COLLATE RTRIM))) ORDER BY ((((v0.c0)AND(x'')))AND(vt0.c0)) DESC  NULLS LAST, '0.9136995301709706' ASC  NULLS LAST, (((((NOT (NULL)))AND(((v0.c0)!=(vt0.c1)))))AND(((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN ()))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((v0.c0))>=((v0.c0)))))) ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))!=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ASC, 'u_ebT	8' ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS BLOB))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ASC, 'u_ebT	8' ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((v0.c0))>=((v0.c0)))))) ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))!=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ASC, 'u_ebT	8' ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS BLOB))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ASC, 'u_ebT	8' ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((v0.c0))>=((v0.c0)))))) ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))!=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ASC, 'u_ebT	8' ASC;
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))-(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))-(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))-(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))-(v0.c0)));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)>>(v0.c0))) NOT BETWEEN (COALESCE(v0.c0, vt0.c0)) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c1, vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (+ (vt0.c1)) WHEN ((((0.0719564680057524)OR(x'5e33')))AND(vt0.c1)) THEN 0.5723773316106847 END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(v0.c0))) NOT BETWEEN (COALESCE(v0.c0, vt0.c0)) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c1, vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (+ (vt0.c1)) WHEN ((((0.0719564680057524)OR(x'5e33')))AND(vt0.c1)) THEN 0.5723773316106847 END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)>>(v0.c0))) NOT BETWEEN (COALESCE(v0.c0, vt0.c0)) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c1, vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (+ (vt0.c1)) WHEN ((((0.0719564680057524)OR(x'5e33')))AND(vt0.c1)) THEN 0.5723773316106847 END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(v0.c0))) NOT BETWEEN (COALESCE(v0.c0, vt0.c0)) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c1, vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (+ (vt0.c1)) WHEN ((((0.0719564680057524)OR(x'5e33')))AND(vt0.c1)) THEN 0.5723773316106847 END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)>>(v0.c0))) NOT BETWEEN (COALESCE(v0.c0, vt0.c0)) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c1, vt0.c0)) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (+ (vt0.c1)) WHEN ((((0.0719564680057524)OR(x'5e33')))AND(vt0.c1)) THEN 0.5723773316106847 END;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON LENGTH(CASE WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END) WHERE (((((vt0.c1) ISNULL))AND(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))AND(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON LENGTH(CASE WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON LENGTH(CASE WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END) WHERE (((((vt0.c1) ISNULL))AND(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))AND(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON LENGTH(CASE WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON LENGTH(CASE WHEN v0.c0 THEN '' WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END) WHERE (((((vt0.c1) ISNULL))AND(((vt0.c1) ISNULL))));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((~ (vt0.c1)))) AND ((v0.c0)))) ORDER BY ((vt0.c1) IS TRUE) COLLATE RTRIM ASC, ((vt0.c1 IN (v0.c0)) IN ('' COLLATE RTRIM, '')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((~ (vt0.c1)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1) IS TRUE) COLLATE RTRIM ASC, ((vt0.c1 IN (v0.c0)) IN ('' COLLATE RTRIM, '')) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((~ (vt0.c1)))) AND ((v0.c0)))) ORDER BY ((vt0.c1) IS TRUE) COLLATE RTRIM ASC, ((vt0.c1 IN (v0.c0)) IN ('' COLLATE RTRIM, '')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((~ (vt0.c1)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1) IS TRUE) COLLATE RTRIM ASC, ((vt0.c1 IN (v0.c0)) IN ('' COLLATE RTRIM, '')) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((~ (vt0.c1)))) AND ((v0.c0)))) ORDER BY ((vt0.c1) IS TRUE) COLLATE RTRIM ASC, ((vt0.c1 IN (v0.c0)) IN ('' COLLATE RTRIM, '')) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (ROUND(((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL END)) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(0.2097781373445221)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)) AND (((((vt0.c1))==((vt0.c0))), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>(vt0.c1))))) ASC  NULLS LAST, CAST(LIKELIHOOD(DISTINCT vt0.c1, 0.21350888364556575) AS REAL);
SELECT SUM(count) FROM (SELECT ((ROUND(((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL END)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(0.2097781373445221)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)) AND (((((vt0.c1))=((vt0.c0))), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>(vt0.c1))))) ASC  NULLS LAST, CAST(LIKELIHOOD(DISTINCT vt0.c1, 0.21350888364556575) AS REAL));
SELECT * FROM vt0 WHERE (ROUND(((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL END)) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(0.2097781373445221)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)) AND (((((vt0.c1))==((vt0.c0))), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>(vt0.c1))))) ASC  NULLS LAST, CAST(LIKELIHOOD(DISTINCT vt0.c1, 0.21350888364556575) AS REAL);
SELECT SUM(count) FROM (SELECT ((ROUND(((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL END)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(0.2097781373445221)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)) AND (((((vt0.c1))=((vt0.c0))), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>(vt0.c1))))) ASC  NULLS LAST, CAST(LIKELIHOOD(DISTINCT vt0.c1, 0.21350888364556575) AS REAL));
SELECT * FROM vt0 WHERE (ROUND(((((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL END)) ORDER BY (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(0.2097781373445221)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c1)) AND (((((vt0.c1))==((vt0.c0))), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0)>(vt0.c1))))) ASC  NULLS LAST, CAST(LIKELIHOOD(DISTINCT vt0.c1, 0.21350888364556575) AS REAL);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))) ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))) ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND(((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))) ORDER BY (((((vt0.c1)OR(vt0.c0)))AND(v0.c0)) IN ());
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0)IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC, (((x'4240'))<>((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC, (((x'4240'))!=((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0)IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC, (((x'4240'))<>((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC, (((x'4240'))!=((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((vt0.c0)IS NOT((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) DESC, (((x'4240'))<>((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))))) ASC;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)OR(vt0.c1)) AS INTEGER) WHERE (((LIKELY(v0.c0))+(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY DATETIME((vt0.c0 IN ()), ((vt0.c0)==(NULL)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(v0.c0))+(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)OR(vt0.c1)) AS INTEGER) ORDER BY DATETIME((vt0.c0 IN ()), ((vt0.c0)==(NULL)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END) ASC  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)OR(vt0.c1)) AS INTEGER) WHERE (((LIKELY(v0.c0))+(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY DATETIME((vt0.c0 IN ()), ((vt0.c0)==(NULL)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(v0.c0))+(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)OR(vt0.c1)) AS INTEGER) ORDER BY DATETIME((vt0.c0 IN ()), ((vt0.c0)==(NULL)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END) ASC  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1)OR(vt0.c1)) AS INTEGER) WHERE (((LIKELY(v0.c0))+(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY DATETIME((vt0.c0 IN ()), ((vt0.c0)==(NULL)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) ORDER BY NULL, (((vt0.c0, -851317278, vt0.c1)) BETWEEN (((~ (vt0.c1)), (~ (vt0.c0)), 0.27803146573367843)) AND (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'Q', vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), (vt0.c0 IN (vt0.c1, vt0.c1, vt0.c1)), UPPER(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL, (((vt0.c0, -851317278, vt0.c1)) BETWEEN (((~ (vt0.c1)), (~ (vt0.c0)), 0.27803146573367843)) AND (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'Q', vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), (vt0.c0 IN (vt0.c1, vt0.c1, vt0.c1)), UPPER(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) ORDER BY NULL, (((vt0.c0, -851317278, vt0.c1)) BETWEEN (((~ (vt0.c1)), (~ (vt0.c0)), 0.27803146573367843)) AND (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'Q', vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), (vt0.c0 IN (vt0.c1, vt0.c1, vt0.c1)), UPPER(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL, (((vt0.c0, -851317278, vt0.c1)) BETWEEN (((~ (vt0.c1)), (~ (vt0.c0)), 0.27803146573367843)) AND (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'Q', vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), (vt0.c0 IN (vt0.c1, vt0.c1, vt0.c1)), UPPER(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL)) ORDER BY NULL, (((vt0.c0, -851317278, vt0.c1)) BETWEEN (((~ (vt0.c1)), (~ (vt0.c0)), 0.27803146573367843)) AND (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'Q', vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), (vt0.c0 IN (vt0.c1, vt0.c1, vt0.c1)), UPPER(vt0.c1))));
SELECT ALL * FROM v0 WHERE (UPPER((v0.c0 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((v0.c0 IN (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (UPPER((v0.c0 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((v0.c0 IN (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (UPPER((v0.c0 IN (v0.c0))));
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (0.822931571044563) AND (v0.c0)) AS TEXT)) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (0.822931571044563) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ''  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (0.822931571044563) AND (v0.c0)) AS TEXT)) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (0.822931571044563) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ''  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (0.822931571044563) AND (v0.c0)) AS TEXT)) ORDER BY ''  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((NOT (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((NOT (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((NOT (v0.c0)) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CAST(((vt0.c0) ISNULL) AS BLOB) WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))) ORDER BY 0.3844943936453251 COLLATE NOCASE, vt0.c1 DESC  NULLS LAST, (((vt0.c0 COLLATE NOCASE))=(((((v0.c0))>((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CAST(((vt0.c0) ISNULL) AS BLOB) ORDER BY 0.3844943936453251 COLLATE NOCASE, vt0.c1 DESC  NULLS LAST, (((vt0.c0 COLLATE NOCASE))==(((((v0.c0))>((vt0.c0)))))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CAST(((vt0.c0) ISNULL) AS BLOB) WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))) ORDER BY 0.3844943936453251 COLLATE NOCASE, vt0.c1 DESC  NULLS LAST, (((vt0.c0 COLLATE NOCASE))=(((((v0.c0))>((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CAST(((vt0.c0) ISNULL) AS BLOB) ORDER BY 0.3844943936453251 COLLATE NOCASE, vt0.c1 DESC  NULLS LAST, (((vt0.c0 COLLATE NOCASE))==(((((v0.c0))>((vt0.c0)))))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CAST(((vt0.c0) ISNULL) AS BLOB) WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))) ORDER BY 0.3844943936453251 COLLATE NOCASE, vt0.c1 DESC  NULLS LAST, (((vt0.c0 COLLATE NOCASE))=(((((v0.c0))>((vt0.c0)))))) ASC;
SELECT * FROM v0, vt0 WHERE (vt0.c1) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (vt0.c1) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (vt0.c1) ORDER BY NULL ASC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY)!=((((v0.c0, v0.c0, vt0.c1))<((vt0.c1, v0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY)!=((((v0.c0, v0.c0, vt0.c1))<((vt0.c1, v0.c0, vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY)!=((((v0.c0, v0.c0, vt0.c1))<((vt0.c1, v0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY)!=((((v0.c0, v0.c0, vt0.c1))<((vt0.c1, v0.c0, vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY)!=((((v0.c0, v0.c0, vt0.c1))<((vt0.c1, v0.c0, vt0.c1))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)OR(vt0.c1)))OR(v0.c0)))LIKE(json_remove(v0.c0, x'3ad8', vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt0.c1)))OR(v0.c0)))LIKE(json_remove(v0.c0, x'3ad8', vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)OR(vt0.c1)))OR(v0.c0)))LIKE(json_remove(v0.c0, x'3ad8', vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt0.c1)))OR(v0.c0)))LIKE(json_remove(v0.c0, x'3ad8', vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)OR(vt0.c1)))OR(v0.c0)))LIKE(json_remove(v0.c0, x'3ad8', vt0.c0, vt0.c1))));
SELECT * FROM vt0 WHERE ('') ORDER BY (0.9370254546878115 IN (vt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (0.9370254546878115 IN (vt0.c1)) COLLATE BINARY);
SELECT * FROM vt0 WHERE ('') ORDER BY (0.9370254546878115 IN (vt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (0.9370254546878115 IN (vt0.c1)) COLLATE BINARY);
SELECT * FROM vt0 WHERE ('') ORDER BY (0.9370254546878115 IN (vt0.c1)) COLLATE BINARY;
SELECT COUNT(*) FROM v0 WHERE (QUOTE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((QUOTE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (QUOTE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((QUOTE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (QUOTE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT * FROM vt0 WHERE (((vt0.c0)|(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)|(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)|(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)|(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)|(vt0.c1)));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(0.07954075043274322)))AND(v0.c0)) COLLATE NOCASE WHERE ((((((NOT (vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(vt0.c1))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS REAL) ASC, JULIANDAY(((((vt0.c1)AND(v0.c0)))AND(vt0.c1)), ((vt0.c0) IS TRUE), TYPEOF(v0.c0)) DESC, ((vt0.c1) BETWEEN (vt0.c1) AND ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(vt0.c1))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(0.07954075043274322)))AND(v0.c0)) COLLATE NOCASE ORDER BY CAST(vt0.c1 COLLATE RTRIM AS REAL) ASC, JULIANDAY(((((vt0.c1)AND(v0.c0)))AND(vt0.c1)), ((vt0.c0) IS TRUE), TYPEOF(v0.c0)) DESC, ((vt0.c1) BETWEEN (vt0.c1) AND ((v0.c0 IN ())))  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(0.07954075043274322)))AND(v0.c0)) COLLATE NOCASE WHERE ((((((NOT (vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(vt0.c1))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS REAL) ASC, JULIANDAY(((((vt0.c1)AND(v0.c0)))AND(vt0.c1)), ((vt0.c0) IS TRUE), TYPEOF(v0.c0)) DESC, ((vt0.c1) BETWEEN (vt0.c1) AND ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(vt0.c1))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(0.07954075043274322)))AND(v0.c0)) COLLATE NOCASE ORDER BY CAST(vt0.c1 COLLATE RTRIM AS REAL) ASC, JULIANDAY(((((vt0.c1)AND(v0.c0)))AND(vt0.c1)), ((vt0.c0) IS TRUE), TYPEOF(v0.c0)) DESC, ((vt0.c1) BETWEEN (vt0.c1) AND ((v0.c0 IN ())))  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(0.07954075043274322)))AND(v0.c0)) COLLATE NOCASE WHERE ((((((NOT (vt0.c1)))AND(CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(vt0.c1))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS REAL) ASC, JULIANDAY(((((vt0.c1)AND(v0.c0)))AND(vt0.c1)), ((vt0.c0) IS TRUE), TYPEOF(v0.c0)) DESC, ((vt0.c1) BETWEEN (vt0.c1) AND ((v0.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((load_extension(-1065098900) IN ())) ORDER BY CAST(LOWER(vt0.c1) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((load_extension(-1065098900) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(LOWER(vt0.c1) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((load_extension(-1065098900) IN ())) ORDER BY CAST(LOWER(vt0.c1) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((load_extension(-1065098900) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(LOWER(vt0.c1) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((load_extension(-1065098900) IN ())) ORDER BY CAST(LOWER(vt0.c1) AS REAL) ASC;
SELECT * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<((((-2095738837) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<((((-2095738837) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<((((-2095738837) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))<((((-2095738837) IS TRUE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))<((((-2095738837) IS TRUE)))));
SELECT ALL * FROM vt0 WHERE ((((+ (x'')))&(NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (x'')))&(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (x'')))&(NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (x'')))&(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (x'')))&(NULL)));
SELECT ALL * FROM vt0 WHERE (0.8982197208191559) ORDER BY (((NOT (vt0.c0)))&(NULL));
SELECT SUM(count) FROM (SELECT ((0.8982197208191559) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))&(NULL)));
SELECT ALL * FROM vt0 WHERE (0.8982197208191559) ORDER BY (((NOT (vt0.c0)))&(NULL));
SELECT SUM(count) FROM (SELECT ((0.8982197208191559) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))&(NULL)));
SELECT ALL * FROM vt0 WHERE (0.8982197208191559) ORDER BY (((NOT (vt0.c0)))&(NULL));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY ((((0.6719625901850835) IS FALSE))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.6719625901850835) IS FALSE))<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY ((((0.6719625901850835) IS FALSE))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((0.6719625901850835) IS FALSE))<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY ((((0.6719625901850835) IS FALSE))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((x'' COLLATE NOCASE IN (((((((((vt0.c1)AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ())))) ORDER BY (((((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c1)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((x'' COLLATE NOCASE IN (((((((((vt0.c1)AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c1)>>(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((x'' COLLATE NOCASE IN (((((((((vt0.c1)AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ())))) ORDER BY (((((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c1)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((x'' COLLATE NOCASE IN (((((((((vt0.c1)AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c1)>>(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((x'' COLLATE NOCASE IN (((((((((vt0.c1)AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ())))) ORDER BY (((((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c1)>>(vt0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE ((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, v0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY)) AND (('', NULL COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, v0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY)) AND (('', NULL COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, v0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY)) AND (('', NULL COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, v0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY)) AND (('', NULL COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, x'', v0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY, v0.c0 COLLATE NOCASE, v0.c0 COLLATE BINARY)) AND (('', NULL COLLATE BINARY, ((((v0.c0)OR(v0.c0)))OR(v0.c0))))));
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL * FROM vt0, v0 WHERE (json_array_length(((vt0.c1)*(vt0.c1)))) ORDER BY ((vt0.c1) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c1)*(vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1) IS TRUE) ASC);
SELECT ALL * FROM vt0, v0 WHERE (json_array_length(((vt0.c1)*(vt0.c1)))) ORDER BY ((vt0.c1) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c1)*(vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1) IS TRUE) ASC);
SELECT ALL * FROM vt0, v0 WHERE (json_array_length(((vt0.c1)*(vt0.c1)))) ORDER BY ((vt0.c1) IS TRUE) ASC;
SELECT * FROM vt0, v0 WHERE ((((((- (v0.c0)))OR((+ (v0.c0)))))OR((NOT (''))))) ORDER BY CASE WHEN ((v0.c0)==(vt0.c0)) THEN (vt0.c1 IN ()) WHEN LOWER(DISTINCT vt0.c0) THEN ((vt0.c1)OR(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (v0.c0)))OR((+ (v0.c0)))))OR((NOT (''))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN ((v0.c0)=(vt0.c0)) THEN (vt0.c1 IN ()) WHEN LOWER(DISTINCT vt0.c0) THEN ((vt0.c1)OR(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN v0.c0 END  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((((- (v0.c0)))OR((+ (v0.c0)))))OR((NOT (''))))) ORDER BY CASE WHEN ((v0.c0)==(vt0.c0)) THEN (vt0.c1 IN ()) WHEN LOWER(DISTINCT vt0.c0) THEN ((vt0.c1)OR(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (v0.c0)))OR((+ (v0.c0)))))OR((NOT (''))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN ((v0.c0)=(vt0.c0)) THEN (vt0.c1 IN ()) WHEN LOWER(DISTINCT vt0.c0) THEN ((vt0.c1)OR(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN v0.c0 END  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((((- (v0.c0)))OR((+ (v0.c0)))))OR((NOT (''))))) ORDER BY CASE WHEN ((v0.c0)==(vt0.c0)) THEN (vt0.c1 IN ()) WHEN LOWER(DISTINCT vt0.c0) THEN ((vt0.c1)OR(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN v0.c0 END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0))))) AND (((+ (vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0))))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0))))) AND (((+ (vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0))))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0))))) AND (((+ (vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)IS(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS INTEGER), '575483905', ((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))))) ORDER BY INSTR(COALESCE(vt0.c0, vt0.c1, v0.c0, v0.c0), (~ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)IS(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS INTEGER), '575483905', ((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY INSTR(COALESCE(vt0.c0, vt0.c1, v0.c0, v0.c0), (~ (v0.c0))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)IS(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS INTEGER), '575483905', ((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))))) ORDER BY INSTR(COALESCE(vt0.c0, vt0.c1, v0.c0, v0.c0), (~ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)IS(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS INTEGER), '575483905', ((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY INSTR(COALESCE(vt0.c0, vt0.c1, v0.c0, v0.c0), (~ (v0.c0))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)IS(v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((CAST(vt0.c0 AS INTEGER), '575483905', ((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c1)))))) ORDER BY INSTR(COALESCE(vt0.c0, vt0.c1, v0.c0, v0.c0), (~ (v0.c0)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CAST(CASE WHEN '' THEN v0.c0 ELSE vt0.c1 END AS BLOB) WHERE (0.3200752098029014);
SELECT SUM(count) FROM (SELECT ((0.3200752098029014) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(CASE WHEN '' THEN v0.c0 ELSE vt0.c1 END AS BLOB));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CAST(CASE WHEN '' THEN v0.c0 ELSE vt0.c1 END AS BLOB) WHERE (0.3200752098029014);
SELECT SUM(count) FROM (SELECT ((0.3200752098029014) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(CASE WHEN '' THEN v0.c0 ELSE vt0.c1 END AS BLOB));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CAST(CASE WHEN '' THEN v0.c0 ELSE vt0.c1 END AS BLOB) WHERE (0.3200752098029014);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1))>((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))>((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1))>((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))>((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1))>((vt0.c0))) COLLATE BINARY);
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN (((((vt0.c0))>((vt0.c1))))) AND ((((vt0.c1)!=(vt0.c0)))))) ORDER BY (~ ((((vt0.c1))<=((vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((((vt0.c0))>((vt0.c1))))) AND ((((vt0.c1)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ((((vt0.c1))<=((vt0.c1))))));
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN (((((vt0.c0))>((vt0.c1))))) AND ((((vt0.c1)!=(vt0.c0)))))) ORDER BY (~ ((((vt0.c1))<=((vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((((vt0.c0))>((vt0.c1))))) AND ((((vt0.c1)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ ((((vt0.c1))<=((vt0.c1))))));
SELECT * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN (((((vt0.c0))>((vt0.c1))))) AND ((((vt0.c1)!=(vt0.c0)))))) ORDER BY (~ ((((vt0.c1))<=((vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN (NOT (vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (NOT (vt0.c1)) WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 WHEN CASE vt0.c0  WHEN 0.5202717126548722 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((',n') BETWEEN (vt0.c0) AND (0.5880724154650435)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN (NOT (vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (NOT (vt0.c1)) WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 WHEN CASE vt0.c0  WHEN 0.5202717126548722 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((',n') BETWEEN (vt0.c0) AND (0.5880724154650435)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN (NOT (vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (NOT (vt0.c1)) WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 WHEN CASE vt0.c0  WHEN 0.5202717126548722 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((',n') BETWEEN (vt0.c0) AND (0.5880724154650435)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN (NOT (vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (NOT (vt0.c1)) WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 WHEN CASE vt0.c0  WHEN 0.5202717126548722 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((',n') BETWEEN (vt0.c0) AND (0.5880724154650435)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) THEN (NOT (vt0.c1)) WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (NOT (vt0.c1)) WHEN vt0.c1 COLLATE NOCASE THEN vt0.c1 WHEN CASE vt0.c0  WHEN 0.5202717126548722 THEN vt0.c0 ELSE vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((',n') BETWEEN (vt0.c0) AND (0.5880724154650435)) END);
SELECT * FROM v0 WHERE (x'816b' COLLATE NOCASE) ORDER BY ('873347980' IN ()), PRINTF((+ ('')), v0.c0 COLLATE RTRIM, v0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'816b' COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ('873347980' IN ()), PRINTF((+ ('')), v0.c0 COLLATE RTRIM, v0.c0)  NULLS LAST);
SELECT * FROM v0 WHERE (x'816b' COLLATE NOCASE) ORDER BY ('873347980' IN ()), PRINTF((+ ('')), v0.c0 COLLATE RTRIM, v0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'816b' COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ('873347980' IN ()), PRINTF((+ ('')), v0.c0 COLLATE RTRIM, v0.c0)  NULLS LAST);
SELECT * FROM v0 WHERE (x'816b' COLLATE NOCASE) ORDER BY ('873347980' IN ()), PRINTF((+ ('')), v0.c0 COLLATE RTRIM, v0.c0)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY ((vt0.c0)<(v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)<(v0.c0)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY ((vt0.c0)<(v0.c0));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)<(v0.c0)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (v0.c0)) COLLATE BINARY) ORDER BY ((vt0.c0)<(v0.c0));
SELECT ALL * FROM v0 WHERE (((json(v0.c0))GLOB((v0.c0 IN ())))) ORDER BY CASE ((v0.c0) NOTNULL)  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN (x'', v0.c0)) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json(v0.c0))GLOB((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) NOTNULL)  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN (x'', v0.c0)) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((json(v0.c0))GLOB((v0.c0 IN ())))) ORDER BY CASE ((v0.c0) NOTNULL)  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN (x'', v0.c0)) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json(v0.c0))GLOB((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) NOTNULL)  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN (x'', v0.c0)) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((json(v0.c0))GLOB((v0.c0 IN ())))) ORDER BY CASE ((v0.c0) NOTNULL)  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN (x'', v0.c0)) ELSE v0.c0 COLLATE RTRIM END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0) NOT NULL)))==((CAST(x'dfcb' AS REAL))))) ORDER BY ((vt0.c0)&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((NULL)OR((~ (vt0.c1)))))OR(((vt0.c1)||(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))==((CAST(x'dfcb' AS REAL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((NULL)OR((~ (vt0.c1)))))OR(((vt0.c1)||(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0) NOT NULL)))==((CAST(x'dfcb' AS REAL))))) ORDER BY ((vt0.c0)&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((NULL)OR((~ (vt0.c1)))))OR(((vt0.c1)||(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) NOT NULL)))==((CAST(x'dfcb' AS REAL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((NULL)OR((~ (vt0.c1)))))OR(((vt0.c1)||(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0) NOT NULL)))==((CAST(x'dfcb' AS REAL))))) ORDER BY ((vt0.c0)&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((NULL)OR((~ (vt0.c1)))))OR(((vt0.c1)||(v0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c1 AS BLOB) END) ORDER BY ((CAST(vt0.c0 AS BLOB))>>((((v0.c0, vt0.c1, '1243722058')) BETWEEN ((0Xffffffffd1b492b6, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c0 AS BLOB))>>((((v0.c0, vt0.c1, '1243722058')) BETWEEN ((0xffffffffd1b492b6, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c1 AS BLOB) END) ORDER BY ((CAST(vt0.c0 AS BLOB))>>((((v0.c0, vt0.c1, '1243722058')) BETWEEN ((0Xffffffffd1b492b6, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c0 AS BLOB))>>((((v0.c0, vt0.c1, '1243722058')) BETWEEN ((0xffffffffd1b492b6, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c1 AS BLOB) END) ORDER BY ((CAST(vt0.c0 AS BLOB))>>((((v0.c0, vt0.c1, '1243722058')) BETWEEN ((0Xffffffffd1b492b6, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY vt0.c0  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY vt0.c0  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY vt0.c0  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c1 WHERE ('1686567332');
SELECT SUM(count) FROM (SELECT (('1686567332') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c1);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c1 WHERE ('1686567332');
SELECT SUM(count) FROM (SELECT (('1686567332') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c1);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c1 WHERE ('1686567332');
SELECT COUNT(*) FROM vt0 WHERE (HEX(CAST(vt0.c1 AS BLOB))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) AS TEXT) DESC, ((((vt0.c1)LIKE(vt0.c1))) IS FALSE), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c1 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) AS TEXT) DESC, ((((vt0.c1)LIKE(vt0.c1))) IS FALSE), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (HEX(CAST(vt0.c1 AS BLOB))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) AS TEXT) DESC, ((((vt0.c1)LIKE(vt0.c1))) IS FALSE), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c1 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) AS TEXT) DESC, ((((vt0.c1)LIKE(vt0.c1))) IS FALSE), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (HEX(CAST(vt0.c1 AS BLOB))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) AS TEXT) DESC, ((((vt0.c1)LIKE(vt0.c1))) IS FALSE), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((('190633326')+(vt0.c0))))==((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('190633326')+(vt0.c0))))=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((('190633326')+(vt0.c0))))==((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((('190633326')+(vt0.c0))))=((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((('190633326')+(vt0.c0))))==((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(v0.c0))))));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CASE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))  WHEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1)>=(vt0.c1)) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))  WHEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1)>=(vt0.c1)) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CASE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))  WHEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1)>=(vt0.c1)) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))  WHEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1)>=(vt0.c1)) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CASE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))  WHEN ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1)>=(vt0.c1)) ELSE (vt0.c1 IN ()) END);
SELECT ALL * FROM v0 WHERE (CASE ((((v0.c0)OR(v0.c0)))OR(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(v0.c0)))OR(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((((v0.c0)OR(v0.c0)))OR(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(v0.c0)))OR(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((((v0.c0)OR(v0.c0)))OR(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)<>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)<>(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (CAST('' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST('' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST('' AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((vt0.c0))>=((NULL)))))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((((((((((vt0.c1) NOTNULL))OR(0.7377583505290839)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1 COLLATE RTRIM)))OR((+ (vt0.c1)))) ASC, (((vt0.c0)) NOT BETWEEN ((((NULL)>>('1012139895')))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0))>=((NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST, ((((((((((vt0.c1) NOTNULL))OR(0.7377583505290839)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1 COLLATE RTRIM)))OR((+ (vt0.c1)))) ASC, (((vt0.c0)) NOT BETWEEN ((((NULL)>>('1012139895')))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((vt0.c0))>=((NULL)))))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((((((((((vt0.c1) NOTNULL))OR(0.7377583505290839)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1 COLLATE RTRIM)))OR((+ (vt0.c1)))) ASC, (((vt0.c0)) NOT BETWEEN ((((NULL)>>('1012139895')))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0))>=((NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST, ((((((((((vt0.c1) NOTNULL))OR(0.7377583505290839)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1 COLLATE RTRIM)))OR((+ (vt0.c1)))) ASC, (((vt0.c0)) NOT BETWEEN ((((NULL)>>('1012139895')))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((vt0.c0))>=((NULL)))))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((((((((((vt0.c1) NOTNULL))OR(0.7377583505290839)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1 COLLATE RTRIM)))OR((+ (vt0.c1)))) ASC, (((vt0.c0)) NOT BETWEEN ((((NULL)>>('1012139895')))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END)+(('0.5880724154650435' IN ())))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END)+(('0.5880724154650435' IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END)+(('0.5880724154650435' IN ())))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END)+(('0.5880724154650435' IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 END)+(('0.5880724154650435' IN ())))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END) BETWEEN (v0.c0 COLLATE RTRIM) AND (((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) BETWEEN ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) BETWEEN ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN ((((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0)))) AND (vt0.c0)));
SELECT * FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0)<<(vt0.c1)))) WHERE ((((+ (vt0.c0))) BETWEEN (CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END) AND ((v0.c0 IN (vt0.c0))))) ORDER BY CAST(((v0.c0)!=(vt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN (CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END) AND ((v0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0)<<(vt0.c1)))) ORDER BY CAST(((v0.c0)<>(vt0.c1)) AS REAL) DESC);
SELECT * FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0)<<(vt0.c1)))) WHERE ((((+ (vt0.c0))) BETWEEN (CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END) AND ((v0.c0 IN (vt0.c0))))) ORDER BY CAST(((v0.c0)!=(vt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN (CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END) AND ((v0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0)<<(vt0.c1)))) ORDER BY CAST(((v0.c0)<>(vt0.c1)) AS REAL) DESC);
SELECT * FROM vt0 CROSS JOIN v0 ON (+ (((v0.c0)<<(vt0.c1)))) WHERE ((((+ (vt0.c0))) BETWEEN (CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END) AND ((v0.c0 IN (vt0.c0))))) ORDER BY CAST(((v0.c0)!=(vt0.c1)) AS REAL) DESC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT * FROM v0 WHERE (((TOTAL_CHANGES()) BETWEEN (v0.c0) AND ('1895234734')));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) BETWEEN (v0.c0) AND ('1895234734'))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((TOTAL_CHANGES()) BETWEEN (v0.c0) AND ('1895234734')));
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES()) BETWEEN (v0.c0) AND ('1895234734'))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((TOTAL_CHANGES()) BETWEEN (v0.c0) AND ('1895234734')));
SELECT * FROM vt0, v0 NOT INDEXED WHERE (((json_object(v0.c0, vt0.c0, vt0.c1, vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(v0.c0, vt0.c0, vt0.c1, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 NOT INDEXED WHERE (((json_object(v0.c0, vt0.c0, vt0.c1, vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(v0.c0, vt0.c0, vt0.c1, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 NOT INDEXED WHERE (((json_object(v0.c0, vt0.c0, vt0.c1, vt0.c0)) ISNULL));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE SQLITE_COMPILEOPTION_USED(v0.c0)  WHEN IFNULL(DISTINCT vt0.c1, vt0.c0) THEN ((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END THEN 0.43733925081578895 WHEN ((vt0.c0)>(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END WHERE (1090334563) ORDER BY ((((((((((((((v0.c0)AND(x'a3dd')))OR(vt0.c1)))OR('-654570999')))AND(vt0.c1)))OR(vt0.c1)))OR(v0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((1090334563) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE SQLITE_COMPILEOPTION_USED(v0.c0)  WHEN IFNULL(DISTINCT vt0.c1, vt0.c0) THEN ((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END THEN 0.43733925081578895 WHEN ((vt0.c0)>(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END ORDER BY ((((((((((((((v0.c0)AND(x'a3dd')))OR(vt0.c1)))OR('-654570999')))AND(vt0.c1)))OR(vt0.c1)))OR(v0.c0))) NOTNULL));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE SQLITE_COMPILEOPTION_USED(v0.c0)  WHEN IFNULL(DISTINCT vt0.c1, vt0.c0) THEN ((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END THEN 0.43733925081578895 WHEN ((vt0.c0)>(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END WHERE (1090334563) ORDER BY ((((((((((((((v0.c0)AND(x'a3dd')))OR(vt0.c1)))OR('-654570999')))AND(vt0.c1)))OR(vt0.c1)))OR(v0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((1090334563) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE SQLITE_COMPILEOPTION_USED(v0.c0)  WHEN IFNULL(DISTINCT vt0.c1, vt0.c0) THEN ((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END THEN 0.43733925081578895 WHEN ((vt0.c0)>(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END ORDER BY ((((((((((((((v0.c0)AND(x'a3dd')))OR(vt0.c1)))OR('-654570999')))AND(vt0.c1)))OR(vt0.c1)))OR(v0.c0))) NOTNULL));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CASE SQLITE_COMPILEOPTION_USED(v0.c0)  WHEN IFNULL(DISTINCT vt0.c1, vt0.c0) THEN ((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE v0.c0 END THEN 0.43733925081578895 WHEN ((vt0.c0)>(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END WHERE (1090334563) ORDER BY ((((((((((((((v0.c0)AND(x'a3dd')))OR(vt0.c1)))OR('-654570999')))AND(vt0.c1)))OR(vt0.c1)))OR(v0.c0))) NOTNULL);
SELECT ALL * FROM vt0, v0 WHERE (((-584556368)IS NOT(((vt0.c1)>>(v0.c0))))) ORDER BY vt0.c1 DESC  NULLS LAST, ((((vt0.c1) NOTNULL))||(((((x'')OR(vt0.c1)))OR(vt0.c1)))), ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((v0.c0) NOTNULL))))AND(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((-584556368)IS NOT(((vt0.c1)>>(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c1 DESC  NULLS LAST, ((((vt0.c1) NOTNULL))||(((((x'')OR(vt0.c1)))OR(vt0.c1)))), ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((v0.c0) NOTNULL))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt0, v0 WHERE (((-584556368)IS NOT(((vt0.c1)>>(v0.c0))))) ORDER BY vt0.c1 DESC  NULLS LAST, ((((vt0.c1) NOTNULL))||(((((x'')OR(vt0.c1)))OR(vt0.c1)))), ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((v0.c0) NOTNULL))))AND(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((-584556368)IS NOT(((vt0.c1)>>(v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c1 DESC  NULLS LAST, ((((vt0.c1) NOTNULL))||(((((x'')OR(vt0.c1)))OR(vt0.c1)))), ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((v0.c0) NOTNULL))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt0, v0 WHERE (((-584556368)IS NOT(((vt0.c1)>>(v0.c0))))) ORDER BY vt0.c1 DESC  NULLS LAST, ((((vt0.c1) NOTNULL))||(((((x'')OR(vt0.c1)))OR(vt0.c1)))), ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((v0.c0) NOTNULL))))AND(CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)OR(vt0.c0)) IN ())) ORDER BY CAST(((v0.c0)>(vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c0)>(vt0.c1)) AS INTEGER));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)OR(vt0.c0)) IN ())) ORDER BY CAST(((v0.c0)>(vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c0)>(vt0.c1)) AS INTEGER));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)OR(vt0.c0)) IN ())) ORDER BY CAST(((v0.c0)>(vt0.c1)) AS INTEGER);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1)))) WHERE (vt0.c0);
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((v0.c0)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (('-136775197') BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY CASE WHEN ((vt0.c1)|(vt0.c0)) THEN ((((NULL)AND(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS TRUE) END, (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST, TRIM(DISTINCT CASE WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'a315' END, CASE WHEN v0.c0 THEN v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (('-136775197') BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((vt0.c1)|(vt0.c0)) THEN ((((NULL)AND(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS TRUE) END, (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST, TRIM(DISTINCT CASE WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'a315' END, CASE WHEN v0.c0 THEN v0.c0 END)  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((v0.c0)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (('-136775197') BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY CASE WHEN ((vt0.c1)|(vt0.c0)) THEN ((((NULL)AND(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS TRUE) END, (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST, TRIM(DISTINCT CASE WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'a315' END, CASE WHEN v0.c0 THEN v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (('-136775197') BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((vt0.c1)|(vt0.c0)) THEN ((((NULL)AND(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS TRUE) END, (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST, TRIM(DISTINCT CASE WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'a315' END, CASE WHEN v0.c0 THEN v0.c0 END)  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CASE WHEN ((v0.c0)>(v0.c0)) THEN (v0.c0 IN ()) ELSE (('-136775197') BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY CASE WHEN ((vt0.c1)|(vt0.c0)) THEN ((((NULL)AND(vt0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1) IS TRUE) END, (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) DESC  NULLS FIRST, TRIM(DISTINCT CASE WHEN x'' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'a315' END, CASE WHEN v0.c0 THEN v0.c0 END)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((((NULL)) BETWEEN ((NULL)) AND ((v0.c0)))))<(((+ (v0.c0)))))) ORDER BY (((NOT (v0.c0)))IS NOT(v0.c0 COLLATE NOCASE)) ASC, CASE WHEN v0.c0 COLLATE RTRIM THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c0))<=((v0.c0))) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (('u_ebt	8')!=(0Xffffffffbdb6ead8)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)) BETWEEN ((NULL)) AND ((v0.c0)))))<(((+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))IS NOT(v0.c0 COLLATE NOCASE)) ASC, CASE WHEN v0.c0 COLLATE RTRIM THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c0))<=((v0.c0))) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (('u_ebt	8')<>(0Xffffffffbdb6ead8)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((NULL)) BETWEEN ((NULL)) AND ((v0.c0)))))<(((+ (v0.c0)))))) ORDER BY (((NOT (v0.c0)))IS NOT(v0.c0 COLLATE NOCASE)) ASC, CASE WHEN v0.c0 COLLATE RTRIM THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c0))<=((v0.c0))) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (('u_ebt	8')!=(0Xffffffffbdb6ead8)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)) BETWEEN ((NULL)) AND ((v0.c0)))))<(((+ (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0)))IS NOT(v0.c0 COLLATE NOCASE)) ASC, CASE WHEN v0.c0 COLLATE RTRIM THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c0))<=((v0.c0))) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (('u_ebt	8')<>(0Xffffffffbdb6ead8)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((NULL)) BETWEEN ((NULL)) AND ((v0.c0)))))<(((+ (v0.c0)))))) ORDER BY (((NOT (v0.c0)))IS NOT(v0.c0 COLLATE NOCASE)) ASC, CASE WHEN v0.c0 COLLATE RTRIM THEN (+ (v0.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c0))<=((v0.c0))) WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (('u_ebt	8')!=(0Xffffffffbdb6ead8)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('0.27803146573367843') ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 END)!=(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (('0.27803146573367843') IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 END)!=(CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('0.27803146573367843') ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 END)!=(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (('0.27803146573367843') IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 END)!=(CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('0.27803146573367843') ORDER BY ((CASE WHEN v0.c0 THEN vt0.c1 END)!=(CAST(vt0.c0 AS BLOB)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0))<=((vt0.c0))))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<=((vt0.c0))))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0))<=((vt0.c0))))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<=((vt0.c0))))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0))<=((vt0.c0))))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (((v0.c0)AND(vt0.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) BETWEEN ((- (vt0.c0))) AND (((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)AND(vt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) ORDER BY ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) BETWEEN ((- (vt0.c0))) AND (((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (((v0.c0)AND(vt0.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) BETWEEN ((- (vt0.c0))) AND (((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)AND(vt0.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) ORDER BY ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) BETWEEN ((- (vt0.c0))) AND (((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (((v0.c0)AND(vt0.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) BETWEEN ((- (vt0.c0))) AND (((vt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((((v0.c0)AND(-464349663)))OR(v0.c0)))OR(x'269e')))OR(v0.c0))))<=((((vt0.c1)>=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0)AND(-464349663)))OR(v0.c0)))OR(x'269e')))OR(v0.c0))))<=((((vt0.c1)>=(v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((((v0.c0)AND(-464349663)))OR(v0.c0)))OR(x'269e')))OR(v0.c0))))<=((((vt0.c1)>=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0)AND(-464349663)))OR(v0.c0)))OR(x'269e')))OR(v0.c0))))<=((((vt0.c1)>=(v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((((v0.c0)AND(-464349663)))OR(v0.c0)))OR(x'269e')))OR(v0.c0))))<=((((vt0.c1)>=(v0.c0))))));
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT ('910469301' IN ()))) ORDER BY CAST(CAST('' AS REAL) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ('910469301' IN ()))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST('' AS REAL) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT ('910469301' IN ()))) ORDER BY CAST(CAST('' AS REAL) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ('910469301' IN ()))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST('' AS REAL) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT ('910469301' IN ()))) ORDER BY CAST(CAST('' AS REAL) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)) ORDER BY CASE ((vt0.c1)LIKE(vt0.c1))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, '', vt0.c0))) END  NULLS LAST, UNICODE(((vt0.c0)<<(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)LIKE(vt0.c1))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, '', vt0.c0))) END  NULLS LAST, UNICODE(((vt0.c0)<<(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)) ORDER BY CASE ((vt0.c1)LIKE(vt0.c1))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, '', vt0.c0))) END  NULLS LAST, UNICODE(((vt0.c0)<<(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)LIKE(vt0.c1))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, '', vt0.c0))) END  NULLS LAST, UNICODE(((vt0.c0)<<(vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)) ORDER BY CASE ((vt0.c1)LIKE(vt0.c1))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) ELSE (((vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, '', vt0.c0))) END  NULLS LAST, UNICODE(((vt0.c0)<<(vt0.c0))) ASC;
SELECT COUNT(*) FROM v0 WHERE (CASE (((545825469))>=((v0.c0)))  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (+ (v0.c0)) WHEN -1079371356 THEN (- (v0.c0)) ELSE (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (((545825469))>=((v0.c0)))  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (+ (v0.c0)) WHEN -1079371356 THEN (- (v0.c0)) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE (((545825469))>=((v0.c0)))  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (+ (v0.c0)) WHEN -1079371356 THEN (- (v0.c0)) ELSE (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (((545825469))>=((v0.c0)))  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (+ (v0.c0)) WHEN -1079371356 THEN (- (v0.c0)) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE (((545825469))>=((v0.c0)))  WHEN ((v0.c0) NOTNULL) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (+ (v0.c0)) WHEN -1079371356 THEN (- (v0.c0)) ELSE (v0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (ABS(DISTINCT ((vt0.c0)%(vt0.c0)))) ORDER BY ((v0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.4731584209926504))) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.4731584209926504))) AND (v0.c0)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (ABS(DISTINCT ((vt0.c0)%(vt0.c0)))) ORDER BY ((v0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.4731584209926504))) AND (v0.c0));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.4731584209926504))) AND (v0.c0)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (ABS(DISTINCT ((vt0.c0)%(vt0.c0)))) ORDER BY ((v0.c0) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.4731584209926504))) AND (v0.c0));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))>=(((vt0.c1)+(vt0.c1))))) ORDER BY ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))>=(((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))>=(((vt0.c1)+(vt0.c1))))) ORDER BY ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))>=(((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))>=(((vt0.c1)+(vt0.c1))))) ORDER BY ((IFNULL(vt0.c0, vt0.c1)) IS TRUE) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE BINARY DESC;
SELECT * FROM v0, vt0 WHERE ((((((vt0.c1)-(vt0.c1))))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)-(vt0.c1))))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((vt0.c1)-(vt0.c1))))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)-(vt0.c1))))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((vt0.c1)-(vt0.c1))))<((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT * FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST((- (vt0.c0)) AS TEXT));
SELECT * FROM v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT * FROM v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT * FROM v0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY v0.c0;
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY x'38e2' ASC  NULLS LAST, UPPER(vt0.c0 COLLATE BINARY)  NULLS LAST, (((vt0.c0)GLOB(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY x'38e2' ASC  NULLS LAST, UPPER(vt0.c0 COLLATE BINARY)  NULLS LAST, (((vt0.c0)GLOB(vt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY x'38e2' ASC  NULLS LAST, UPPER(vt0.c0 COLLATE BINARY)  NULLS LAST, (((vt0.c0)GLOB(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY x'38e2' ASC  NULLS LAST, UPPER(vt0.c0 COLLATE BINARY)  NULLS LAST, (((vt0.c0)GLOB(vt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY x'38e2' ASC  NULLS LAST, UPPER(vt0.c0 COLLATE BINARY)  NULLS LAST, (((vt0.c0)GLOB(vt0.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LIKE(vt0.c1, vt0.c1, 'j')) BETWEEN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))) ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c1, vt0.c1, 'j')) BETWEEN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LIKE(vt0.c1, vt0.c1, 'j')) BETWEEN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))) ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c1, vt0.c1, 'j')) BETWEEN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((LIKE(vt0.c1, vt0.c1, 'j')) BETWEEN (((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) AND (CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))) ORDER BY ((vt0.c1 IN ()) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))&((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c1, x'', v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))&((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c1, x'', v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))&((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c1, x'', v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))&((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c1, x'', v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))&((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c1, x'', v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)==(((NULL) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)==(((NULL) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)==(((NULL) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)==(((NULL) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)==(((NULL) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt0, v0 WHERE (HEX((vt0.c1 IN (vt0.c1)))) ORDER BY HEX(DISTINCT (((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((vt0.c1 IN (vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY HEX(DISTINCT (((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, v0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (HEX((vt0.c1 IN (vt0.c1)))) ORDER BY HEX(DISTINCT (((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((vt0.c1 IN (vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY HEX(DISTINCT (((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, v0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (HEX((vt0.c1 IN (vt0.c1)))) ORDER BY HEX(DISTINCT (((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE 0.8405300751122875  WHEN ((('OX', vt0.c1, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, 0Xffffffffd9e12293))) THEN PRINTF(v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.8405300751122875  WHEN ((('OX', vt0.c1, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, 0xffffffffd9e12293))) THEN PRINTF(v0.c0) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE 0.8405300751122875  WHEN ((('OX', vt0.c1, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, 0Xffffffffd9e12293))) THEN PRINTF(v0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.8405300751122875  WHEN ((('OX', vt0.c1, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, 0xffffffffd9e12293))) THEN PRINTF(v0.c0) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE 0.8405300751122875  WHEN ((('OX', vt0.c1, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, 0Xffffffffd9e12293))) THEN PRINTF(v0.c0) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY ((((v0.c0) ISNULL))AND(((vt0.c1)==(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) ISNULL))AND(((vt0.c1)=(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY ((((v0.c0) ISNULL))AND(((vt0.c1)==(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0) ISNULL))AND(((vt0.c1)=(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY ((((v0.c0) ISNULL))AND(((vt0.c1)==(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))-(vt0.c1))) ORDER BY CASE WHEN ((vt0.c1)*(vt0.c0)) THEN (('234375910') NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE vt0.c1 COLLATE RTRIM END ASC  NULLS FIRST, ((('1090334563') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))-(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)*(vt0.c0)) THEN (('234375910') NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE vt0.c1 COLLATE RTRIM END ASC  NULLS FIRST, ((('1090334563') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))-(vt0.c1))) ORDER BY CASE WHEN ((vt0.c1)*(vt0.c0)) THEN (('234375910') NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE vt0.c1 COLLATE RTRIM END ASC  NULLS FIRST, ((('1090334563') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))-(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)*(vt0.c0)) THEN (('234375910') NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE vt0.c1 COLLATE RTRIM END ASC  NULLS FIRST, ((('1090334563') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))-(vt0.c1))) ORDER BY CASE WHEN ((vt0.c1)*(vt0.c0)) THEN (('234375910') NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE vt0.c1 COLLATE RTRIM END ASC  NULLS FIRST, ((('1090334563') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((vt0.c0 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN 'Ykt' END)|((((vt0.c1))<((v0.c0))))) WHERE ((NOT (ABS(v0.c0)))) ORDER BY ((((((x'')IS('1090334563')))OR(((v0.c0)%(vt0.c0)))))AND(((v0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (ABS(v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN 'Ykt' END)|((((vt0.c1))<((v0.c0))))) ORDER BY ((((((x'')IS('1090334563')))OR(((v0.c0)%(vt0.c0)))))AND(((v0.c0) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN 'Ykt' END)|((((vt0.c1))<((v0.c0))))) WHERE ((NOT (ABS(v0.c0)))) ORDER BY ((((((x'')IS('1090334563')))OR(((v0.c0)%(vt0.c0)))))AND(((v0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (ABS(v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN 'Ykt' END)|((((vt0.c1))<((v0.c0))))) ORDER BY ((((((x'')IS('1090334563')))OR(((v0.c0)%(vt0.c0)))))AND(((v0.c0) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN 'Ykt' END)|((((vt0.c1))<((v0.c0))))) WHERE ((NOT (ABS(v0.c0)))) ORDER BY ((((((x'')IS('1090334563')))OR(((v0.c0)%(vt0.c0)))))AND(((v0.c0) ISNULL))) DESC;
SELECT ALL * FROM vt0, v0 WHERE (((1577509085) BETWEEN (((((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR('')))AND(vt0.c1)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((v0.c0)) BETWEEN (((((v0.c0, 0.5387501962088649, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))) AND ((SUBSTR(vt0.c1, vt0.c0)))), ((vt0.c0) NOTNULL) COLLATE BINARY ASC  NULLS FIRST, LIKELIHOOD(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), 0.37381312509897513)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((1577509085) BETWEEN (((((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR('')))AND(vt0.c1)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) BETWEEN (((((v0.c0, 0.5387501962088649, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))) AND ((SUBSTR(vt0.c1, vt0.c0)))), ((vt0.c0) NOTNULL) COLLATE BINARY ASC  NULLS FIRST, LIKELIHOOD(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), 0.37381312509897513)  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((1577509085) BETWEEN (((((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR('')))AND(vt0.c1)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((v0.c0)) BETWEEN (((((v0.c0, 0.5387501962088649, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))) AND ((SUBSTR(vt0.c1, vt0.c0)))), ((vt0.c0) NOTNULL) COLLATE BINARY ASC  NULLS FIRST, LIKELIHOOD(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), 0.37381312509897513)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((1577509085) BETWEEN (((((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR('')))AND(vt0.c1)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) BETWEEN (((((v0.c0, 0.5387501962088649, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))) AND ((SUBSTR(vt0.c1, vt0.c0)))), ((vt0.c0) NOTNULL) COLLATE BINARY ASC  NULLS FIRST, LIKELIHOOD(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), 0.37381312509897513)  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((1577509085) BETWEEN (((((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR('')))AND(vt0.c1)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((v0.c0)) BETWEEN (((((v0.c0, 0.5387501962088649, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, v0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))) AND ((SUBSTR(vt0.c1, vt0.c0)))), ((vt0.c0) NOTNULL) COLLATE BINARY ASC  NULLS FIRST, LIKELIHOOD(((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), 0.37381312509897513)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((v0.c0 IN ())) IS FALSE) WHERE (CAST((+ (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS REAL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((v0.c0 IN ())) IS FALSE) WHERE (CAST((+ (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c1)) AS REAL)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((v0.c0 IN ())) IS FALSE) WHERE (CAST((+ (vt0.c1)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((LIKELY(vt0.c0))AND(TRIM(vt0.c1))))OR(TYPEOF(vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)OR(vt0.c1)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(TRIM(vt0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))IS(((('-1560485437', vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((LIKELY(vt0.c0))AND(TRIM(vt0.c1))))OR(TYPEOF(vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)OR(vt0.c1)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))IS(((('-1560485437', vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((LIKELY(vt0.c0))AND(TRIM(vt0.c1))))OR(TYPEOF(vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)OR(vt0.c1)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(TRIM(vt0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))IS(((('-1560485437', vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((LIKELY(vt0.c0))AND(TRIM(vt0.c1))))OR(TYPEOF(vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)OR(vt0.c1)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))IS(((('-1560485437', vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((LIKELY(vt0.c0))AND(TRIM(vt0.c1))))OR(TYPEOF(vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))OR(((vt0.c0)OR(vt0.c1)))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(TRIM(vt0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))IS(((('-1560485437', vt0.c0, vt0.c0))>((vt0.c1, vt0.c0, vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0 COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (((('ye')) NOT BETWEEN ((LIKELIHOOD(DISTINCT v0.c0, 0.016102834989034753))) AND (((((v0.c0))<=((v0.c0))))))) ORDER BY ((LOWER(DISTINCT v0.c0)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('ye')) NOT BETWEEN ((LIKELIHOOD(DISTINCT v0.c0, 0.016102834989034753))) AND (((((v0.c0))<=((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((LOWER(DISTINCT v0.c0)) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((('ye')) NOT BETWEEN ((LIKELIHOOD(DISTINCT v0.c0, 0.016102834989034753))) AND (((((v0.c0))<=((v0.c0))))))) ORDER BY ((LOWER(DISTINCT v0.c0)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('ye')) NOT BETWEEN ((LIKELIHOOD(DISTINCT v0.c0, 0.016102834989034753))) AND (((((v0.c0))<=((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((LOWER(DISTINCT v0.c0)) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((('ye')) NOT BETWEEN ((LIKELIHOOD(DISTINCT v0.c0, 0.016102834989034753))) AND (((((v0.c0))<=((v0.c0))))))) ORDER BY ((LOWER(DISTINCT v0.c0)) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((+ (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((+ (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((+ (v0.c0)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND('')))IS(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY v0.c0 ASC, ((((v0.c0) IS TRUE))&(((v0.c0)LIKE(v0.c0)))), ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((v0.c0)>=(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND('')))IS(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC, ((((v0.c0) IS TRUE))&(((v0.c0)LIKE(v0.c0)))), ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((v0.c0)>=(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND('')))IS(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY v0.c0 ASC, ((((v0.c0) IS TRUE))&(((v0.c0)LIKE(v0.c0)))), ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((v0.c0)>=(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND('')))IS(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC, ((((v0.c0) IS TRUE))&(((v0.c0)LIKE(v0.c0)))), ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((v0.c0)>=(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND('')))IS(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY v0.c0 ASC, ((((v0.c0) IS TRUE))&(((v0.c0)LIKE(v0.c0)))), ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))>>(((v0.c0)>=(v0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ('874064085') ORDER BY ((((((vt0.c0))>((vt0.c1)))))<=((vt0.c0))) DESC, ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('874064085') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))>((vt0.c1)))))<=((vt0.c0))) DESC, ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ('874064085') ORDER BY ((((((vt0.c0))>((vt0.c1)))))<=((vt0.c0))) DESC, ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('874064085') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))>((vt0.c1)))))<=((vt0.c0))) DESC, ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ('874064085') ORDER BY ((((((vt0.c0))>((vt0.c1)))))<=((vt0.c0))) DESC, ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))>=(((v0.c0) NOT NULL)))) ORDER BY ((((((((((v0.c0) IS TRUE))AND((+ (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))))AND(v0.c0 COLLATE NOCASE)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC, (((v0.c0 IN ()))%((- (v0.c0)))) ASC  NULLS FIRST, CAST(((v0.c0)-(v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))>=(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0) IS TRUE))AND((+ (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))))AND(v0.c0 COLLATE NOCASE)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC, (((v0.c0 IN ()))%((- (v0.c0)))) ASC  NULLS FIRST, CAST(((v0.c0)-(v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))>=(((v0.c0) NOT NULL)))) ORDER BY ((((((((((v0.c0) IS TRUE))AND((+ (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))))AND(v0.c0 COLLATE NOCASE)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC, (((v0.c0 IN ()))%((- (v0.c0)))) ASC  NULLS FIRST, CAST(((v0.c0)-(v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))>=(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0) IS TRUE))AND((+ (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))))AND(v0.c0 COLLATE NOCASE)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC, (((v0.c0 IN ()))%((- (v0.c0)))) ASC  NULLS FIRST, CAST(((v0.c0)-(v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))))>=(((v0.c0) NOT NULL)))) ORDER BY ((((((((((v0.c0) IS TRUE))AND((+ (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))))AND(v0.c0 COLLATE NOCASE)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC, (((v0.c0 IN ()))%((- (v0.c0)))) ASC  NULLS FIRST, CAST(((v0.c0)-(v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(0.3487373351993468 AS NUMERIC) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.3487373351993468 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(0.3487373351993468 AS NUMERIC) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.3487373351993468 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(0.3487373351993468 AS NUMERIC) COLLATE NOCASE) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c1)|(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((('+\') ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('+\') ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('+\') ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((('+\') ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('+\') ISNULL)) NOTNULL));
SELECT COUNT(*) FROM v0, vt0 WHERE (UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('i9', (('Oᛪ') IS FALSE), ((vt0.c1)<=(vt0.c1)))) AND ((vt0.c0, vt0.c1 COLLATE RTRIM, TRIM(vt0.c1))))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('i9', (('Oᛪ') IS FALSE), ((vt0.c1)<=(vt0.c1)))) AND ((vt0.c0, vt0.c1 COLLATE RTRIM, TRIM(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('i9', (('Oᛪ') IS FALSE), ((vt0.c1)<=(vt0.c1)))) AND ((vt0.c0, vt0.c1 COLLATE RTRIM, TRIM(vt0.c1))))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('i9', (('Oᛪ') IS FALSE), ((vt0.c1)<=(vt0.c1)))) AND ((vt0.c0, vt0.c1 COLLATE RTRIM, TRIM(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN (('i9', (('Oᛪ') IS FALSE), ((vt0.c1)<=(vt0.c1)))) AND ((vt0.c0, vt0.c1 COLLATE RTRIM, TRIM(vt0.c1))))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL) ASC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (LOWER(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (LOWER(vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (LOWER(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (LOWER(vt0.c1)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (LOWER(vt0.c1))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('Xr')+(CASE vt0.c0  WHEN '597408768' THEN vt0.c0 END))) ORDER BY CHAR((- (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('Xr')+(CASE vt0.c0  WHEN '597408768' THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY CHAR((- (vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('Xr')+(CASE vt0.c0  WHEN '597408768' THEN vt0.c0 END))) ORDER BY CHAR((- (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('Xr')+(CASE vt0.c0  WHEN '597408768' THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY CHAR((- (vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('Xr')+(CASE vt0.c0  WHEN '597408768' THEN vt0.c0 END))) ORDER BY CHAR((- (vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((+ (0.9323640868304949))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<<(v0.c0))))) ORDER BY ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.9323640868304949))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((+ (0.9323640868304949))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<<(v0.c0))))) ORDER BY ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.9323640868304949))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((+ (0.9323640868304949))) NOT BETWEEN (CAST(v0.c0 AS REAL)) AND (((v0.c0)<<(v0.c0))))) ORDER BY ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0Xfffffffff7d9d162) ORDER BY CAST(CASE WHEN vt0.c1 THEN v0.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff7d9d162) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CASE WHEN vt0.c1 THEN v0.c0 END AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0Xfffffffff7d9d162) ORDER BY CAST(CASE WHEN vt0.c1 THEN v0.c0 END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff7d9d162) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CASE WHEN vt0.c1 THEN v0.c0 END AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0Xfffffffff7d9d162) ORDER BY CAST(CASE WHEN vt0.c1 THEN v0.c0 END AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON json_extract(((vt0.c1)<=(v0.c0)), HEX(vt0.c1)) WHERE ((((v0.c0)IS NOT(vt0.c1)) IN ())) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)IS NOT(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON json_extract(((vt0.c1)<=(v0.c0)), HEX(vt0.c1)) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON json_extract(((vt0.c1)<=(v0.c0)), HEX(vt0.c1)) WHERE ((((v0.c0)IS NOT(vt0.c1)) IN ())) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)IS NOT(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON json_extract(((vt0.c1)<=(v0.c0)), HEX(vt0.c1)) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON json_extract(((vt0.c1)<=(v0.c0)), HEX(vt0.c1)) WHERE ((((v0.c0)IS NOT(vt0.c1)) IN ())) ORDER BY ((CAST(vt0.c0 AS BLOB)) IS FALSE) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, x'74aa'))) AND ((((vt0.c0)==(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, x'74aa'))) AND ((((vt0.c0)==(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, x'74aa'))) AND ((((vt0.c0)==(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, x'74aa'))) AND ((((vt0.c0)==(v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0, x'74aa'))) AND ((((vt0.c0)==(v0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (('N\n7j' IN ())) AND (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (('N\n7j' IN ())) AND (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (('N\n7j' IN ())) AND (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (('N\n7j' IN ())) AND (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (('N\n7j' IN ())) AND (((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)||(v0.c0))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)||(v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)||(v0.c0))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)||(v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)||(v0.c0))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0)&(vt0.c1)))) DESC  NULLS LAST, CAST(LENGTH('-705816932') AS NUMERIC)  NULLS FIRST, CASE ((vt0.c1)>>(x''))  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0)&(vt0.c1)))) DESC  NULLS LAST, CAST(LENGTH('-705816932') AS NUMERIC)  NULLS FIRST, CASE ((vt0.c1)>>(x''))  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0)&(vt0.c1)))) DESC  NULLS LAST, CAST(LENGTH('-705816932') AS NUMERIC)  NULLS FIRST, CASE ((vt0.c1)>>(x''))  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0)&(vt0.c1)))) DESC  NULLS LAST, CAST(LENGTH('-705816932') AS NUMERIC)  NULLS FIRST, CASE ((vt0.c1)>>(x''))  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt0.c0)&(vt0.c1)))) DESC  NULLS LAST, CAST(LENGTH('-705816932') AS NUMERIC)  NULLS FIRST, CASE ((vt0.c1)>>(x''))  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END;
SELECT * FROM v0, vt0 WHERE (CASE ((v0.c0)||(vt0.c0))  WHEN CAST(vt0.c1 AS TEXT) THEN (v0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)||(vt0.c0))  WHEN CAST(vt0.c1 AS TEXT) THEN (v0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE ((v0.c0)||(vt0.c0))  WHEN CAST(vt0.c1 AS TEXT) THEN (v0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)||(vt0.c0))  WHEN CAST(vt0.c1 AS TEXT) THEN (v0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE ((v0.c0)||(vt0.c0))  WHEN CAST(vt0.c1 AS TEXT) THEN (v0.c0 IN (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((('W/')&(UPPER(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('W/')&(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('W/')&(UPPER(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('W/')&(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('W/')&(UPPER(DISTINCT vt0.c0))));
SELECT * FROM vt0, v0 WHERE (TYPEOF(DISTINCT v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (TYPEOF(DISTINCT v0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT v0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (TYPEOF(DISTINCT v0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM v0 WHERE (((CAST('Wb' AS TEXT))>>(CASE WHEN -8.51317278E8 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST('Wb' AS TEXT))>>(CASE WHEN -8.51317278E8 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST('Wb' AS TEXT))>>(CASE WHEN -8.51317278E8 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST('Wb' AS TEXT))>>(CASE WHEN -8.51317278E8 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST('Wb' AS TEXT))>>(CASE WHEN -8.51317278E8 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0, vt0 WHERE (1629050546) ORDER BY '-1031061990';
SELECT SUM(count) FROM (SELECT ALL ((1629050546) IS TRUE)  as count FROM v0, vt0 ORDER BY '-1031061990');
SELECT COUNT(*) FROM v0, vt0 WHERE (1629050546) ORDER BY '-1031061990';
SELECT SUM(count) FROM (SELECT ALL ((1629050546) IS TRUE)  as count FROM v0, vt0 ORDER BY '-1031061990');
SELECT COUNT(*) FROM v0, vt0 WHERE (1629050546) ORDER BY '-1031061990';
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) IS FALSE) END);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) IS FALSE) END);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((vt0.c1) IS FALSE) END;
SELECT ALL * FROM v0 WHERE (((v0.c0)IS NOT(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)IS NOT(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)IS NOT(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)IS NOT(v0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (CAST(((x'4c9e') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)) ORDER BY (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR('᚜Œ'))))=(((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ASC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) ISNULL), ((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'4c9e') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR('᚜Œ'))))==(((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ASC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) ISNULL), ((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((x'4c9e') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)) ORDER BY (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR('᚜Œ'))))=(((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ASC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) ISNULL), ((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'4c9e') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR('᚜Œ'))))==(((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ASC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) ISNULL), ((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((x'4c9e') NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)) ORDER BY (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR('᚜Œ'))))=(((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ASC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) ISNULL), ((((((((vt0.c1)OR(vt0.c0)))OR(NULL)))OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN UPPER(vt0.c0) ELSE (- (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN UPPER(vt0.c0) ELSE (- (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN UPPER(vt0.c0) ELSE (- (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN UPPER(vt0.c0) ELSE (- (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN UPPER(vt0.c0) ELSE (- (vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))!=((((vt0.c0))!=((vt0.c0))))) WHERE (vt0.c0) ORDER BY CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((('g*0|~R', vt0.c1, vt0.c0))<>((v0.c0, vt0.c0, -1980758231))) ELSE ((0.13262222483527342) NOT NULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))!=((((vt0.c0))<>((vt0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((('g*0|~R', vt0.c1, vt0.c0))<>((v0.c0, vt0.c0, -1980758231))) ELSE ((0.13262222483527342) NOT NULL) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))!=((((vt0.c0))!=((vt0.c0))))) WHERE (vt0.c0) ORDER BY CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((('g*0|~R', vt0.c1, vt0.c0))<>((v0.c0, vt0.c0, -1980758231))) ELSE ((0.13262222483527342) NOT NULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))!=((((vt0.c0))<>((vt0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((('g*0|~R', vt0.c1, vt0.c0))<>((v0.c0, vt0.c0, -1980758231))) ELSE ((0.13262222483527342) NOT NULL) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))!=((((vt0.c0))!=((vt0.c0))))) WHERE (vt0.c0) ORDER BY CASE WHEN CAST(v0.c0 AS NUMERIC) THEN ((('g*0|~R', vt0.c1, vt0.c0))<>((v0.c0, vt0.c0, -1980758231))) ELSE ((0.13262222483527342) NOT NULL) END DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.7480945254889033)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.7480945254889033)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.7480945254889033)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.7480945254889033)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(0.7480945254889033)) AS BLOB));
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))AND(ABS(v0.c0))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))AND(ABS(v0.c0))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))AND(ABS(v0.c0))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))AND(ABS(v0.c0))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))AND(ABS(v0.c0))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt0.c0)|(vt0.c1)))))OR(((vt0.c0)=(v0.c0)))));
SELECT * FROM v0 WHERE ((+ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('0.822931571044563')))) IS FALSE) DESC, v0.c0 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('0.822931571044563')))) IS FALSE) DESC, v0.c0 COLLATE RTRIM DESC);
SELECT * FROM v0 WHERE ((+ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('0.822931571044563')))) IS FALSE) DESC, v0.c0 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('0.822931571044563')))) IS FALSE) DESC, v0.c0 COLLATE RTRIM DESC);
SELECT * FROM v0 WHERE ((+ (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('0.822931571044563')))) IS FALSE) DESC, v0.c0 COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))<=((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY ((('1577509085')) NOT BETWEEN ((-0.0)) AND (((- (x'')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS TEXT)))<=((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((('1577509085')) NOT BETWEEN ((-0.0)) AND (((- (x'')))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))<=((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY ((('1577509085')) NOT BETWEEN ((-0.0)) AND (((- (x'')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS TEXT)))<=((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((('1577509085')) NOT BETWEEN ((-0.0)) AND (((- (x'')))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))<=((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY ((('1577509085')) NOT BETWEEN ((-0.0)) AND (((- (x'')))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 5.97408768E8 ELSE vt0.c1 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 5.97408768E8 ELSE vt0.c1 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 5.97408768E8 ELSE vt0.c1 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 5.97408768E8 ELSE vt0.c1 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN 5.97408768E8 ELSE vt0.c1 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (~ (vt0.c1)) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((((((((((((vt0.c0)AND(NULL)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (('-1160665888')<=(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-1160665888')<=(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (('-1160665888')<=(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-1160665888')<=(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (('-1160665888')<=(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)<=(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)<=(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)<=(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((v0.c0) NOT NULL) AS REAL));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((- (vt0.c1)))>>(TRIM(v0.c0)))) ORDER BY (json_array_length(v0.c0, v0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))>>(TRIM(v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (json_array_length(v0.c0, v0.c0) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((- (vt0.c1)))>>(TRIM(v0.c0)))) ORDER BY (json_array_length(v0.c0, v0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))>>(TRIM(v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (json_array_length(v0.c0, v0.c0) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((- (vt0.c1)))>>(TRIM(v0.c0)))) ORDER BY (json_array_length(v0.c0, v0.c0) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((LOWER(vt0.c1)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('2035834123'))) ORDER BY ((vt0.c1 COLLATE RTRIM) ISNULL), (((vt0.c0, (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ('rh	Q⣕' IN ())))>((((NULL) BETWEEN (v0.c0) AND (v0.c0)), vt0.c0, 0.9743466472022259)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c1)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('2035834123'))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1 COLLATE RTRIM) ISNULL), (((vt0.c0, (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ('rh	Q⣕' IN ())))>((((NULL) BETWEEN (v0.c0) AND (v0.c0)), vt0.c0, 0.9743466472022259)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((LOWER(vt0.c1)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('2035834123'))) ORDER BY ((vt0.c1 COLLATE RTRIM) ISNULL), (((vt0.c0, (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ('rh	Q⣕' IN ())))>((((NULL) BETWEEN (v0.c0) AND (v0.c0)), vt0.c0, 0.9743466472022259)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c1)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('2035834123'))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1 COLLATE RTRIM) ISNULL), (((vt0.c0, (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ('rh	Q⣕' IN ())))>((((NULL) BETWEEN (v0.c0) AND (v0.c0)), vt0.c0, 0.9743466472022259)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((LOWER(vt0.c1)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('2035834123'))) ORDER BY ((vt0.c1 COLLATE RTRIM) ISNULL), (((vt0.c0, (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))), ('rh	Q⣕' IN ())))>((((NULL) BETWEEN (v0.c0) AND (v0.c0)), vt0.c0, 0.9743466472022259)))  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) IS TRUE) WHERE (PRINTF((((vt0.c1))!=((v0.c0))), ((vt0.c1)IS(v0.c0)), ((v0.c0)*(v0.c0)))) ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(CASE v0.c0  WHEN vt0.c1 THEN 0Xffffffffe3d1a5ff ELSE vt0.c0 END)) DESC, ((vt0.c1)-(vt0.c1));
SELECT SUM(count) FROM (SELECT ((PRINTF((((vt0.c1))<>((v0.c0))), ((vt0.c1)IS(v0.c0)), ((v0.c0)*(v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) IS TRUE) ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(CASE v0.c0  WHEN vt0.c1 THEN 0xffffffffe3d1a5ff ELSE vt0.c0 END)) DESC, ((vt0.c1)-(vt0.c1)));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) IS TRUE) WHERE (PRINTF((((vt0.c1))!=((v0.c0))), ((vt0.c1)IS(v0.c0)), ((v0.c0)*(v0.c0)))) ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(CASE v0.c0  WHEN vt0.c1 THEN 0Xffffffffe3d1a5ff ELSE vt0.c0 END)) DESC, ((vt0.c1)-(vt0.c1));
SELECT SUM(count) FROM (SELECT ((PRINTF((((vt0.c1))<>((v0.c0))), ((vt0.c1)IS(v0.c0)), ((v0.c0)*(v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) IS TRUE) ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(CASE v0.c0  WHEN vt0.c1 THEN 0xffffffffe3d1a5ff ELSE vt0.c0 END)) DESC, ((vt0.c1)-(vt0.c1)));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)<<(vt0.c0))) IS TRUE) WHERE (PRINTF((((vt0.c1))!=((v0.c0))), ((vt0.c1)IS(v0.c0)), ((v0.c0)*(v0.c0)))) ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(CASE v0.c0  WHEN vt0.c1 THEN 0Xffffffffe3d1a5ff ELSE vt0.c0 END)) DESC, ((vt0.c1)-(vt0.c1));
SELECT * FROM vt0, v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(CAST(v0.c0 AS REAL) AS REAL));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0) IS FALSE))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE))OR(v0.c0))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0) IS FALSE))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE))OR(v0.c0))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0) IS FALSE))OR(v0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (NULL))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (NULL))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (NULL))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0)%('D2_逫#Q*w')))) AND ((x'')))) ORDER BY ((NULLIF(DISTINCT vt0.c0, v0.c0)) ISNULL) DESC, 'qY뒌YM/iὦ';
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((v0.c0)%('D2_逫#Q*w')))) AND ((x'')))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULLIF(DISTINCT vt0.c0, v0.c0)) ISNULL) DESC, 'qY뒌YM/iὦ');
SELECT * FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0)%('D2_逫#Q*w')))) AND ((x'')))) ORDER BY ((NULLIF(DISTINCT vt0.c0, v0.c0)) ISNULL) DESC, 'qY뒌YM/iὦ';
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((v0.c0)%('D2_逫#Q*w')))) AND ((x'')))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULLIF(DISTINCT vt0.c0, v0.c0)) ISNULL) DESC, 'qY뒌YM/iὦ');
SELECT * FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0)%('D2_逫#Q*w')))) AND ((x'')))) ORDER BY ((NULLIF(DISTINCT vt0.c0, v0.c0)) ISNULL) DESC, 'qY뒌YM/iὦ';
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS TEXT)))>=((((vt0.c0)<(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS TEXT)))>=((((vt0.c0)<(NULL)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS TEXT)))>=((((vt0.c0)<(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS TEXT)))>=((((vt0.c0)<(NULL)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS TEXT)))>=((((vt0.c0)<(NULL))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE ('DO');
SELECT SUM(count) FROM (SELECT ALL (('DO') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('DO');
SELECT SUM(count) FROM (SELECT ALL (('DO') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('DO');
SELECT ALL * FROM v0, vt0 WHERE (TYPEOF(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY 0.6719625901850835;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.6719625901850835);
SELECT ALL * FROM v0, vt0 WHERE (TYPEOF(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY 0.6719625901850835;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY 0.6719625901850835);
SELECT ALL * FROM v0, vt0 WHERE (TYPEOF(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY 0.6719625901850835;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON '545825469' WHERE ((((v0.c0)) BETWEEN ((((vt0.c0)+(v0.c0)))) AND ((DATETIME(NULL, vt0.c1, vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((vt0.c0)+(v0.c0)))) AND ((DATETIME(NULL, vt0.c1, vt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON '545825469');
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON '545825469' WHERE ((((v0.c0)) BETWEEN ((((vt0.c0)+(v0.c0)))) AND ((DATETIME(NULL, vt0.c1, vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((vt0.c0)+(v0.c0)))) AND ((DATETIME(NULL, vt0.c1, vt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON '545825469');
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON '545825469' WHERE ((((v0.c0)) BETWEEN ((((vt0.c0)+(v0.c0)))) AND ((DATETIME(NULL, vt0.c1, vt0.c1)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT NULL), NULL, ((v0.c0)/(0.5011233050199314)))) AND ((CASE WHEN x'' THEN v0.c0 END, ((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT NULL), NULL, ((v0.c0)/(0.5011233050199314)))) AND ((CASE WHEN x'' THEN v0.c0 END, ((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT NULL), NULL, ((v0.c0)/(0.5011233050199314)))) AND ((CASE WHEN x'' THEN v0.c0 END, ((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT NULL), NULL, ((v0.c0)/(0.5011233050199314)))) AND ((CASE WHEN x'' THEN v0.c0 END, ((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT NULL), NULL, ((v0.c0)/(0.5011233050199314)))) AND ((CASE WHEN x'' THEN v0.c0 END, ((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((((v0.c0)AND(v0.c0)))AND(v0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END)AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)))OR(((0.8982197208191559)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END)AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)))OR(((0.8982197208191559)-(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END)AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)))OR(((0.8982197208191559)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END)AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)))OR(((0.8982197208191559)-(vt0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 END)AND(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END)))OR(((0.8982197208191559)-(vt0.c1)))));
SELECT * FROM vt0, v0 WHERE ((NOT (CAST(v0.c0 AS BLOB)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))/(UNLIKELY(vt0.c0))) DESC, CASE ((vt0.c0)||(v0.c0))  WHEN rtreenode(v0.c0, vt0.c1) THEN (~ (v0.c0)) ELSE (vt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))/(UNLIKELY(vt0.c0))) DESC, CASE ((vt0.c0)||(v0.c0))  WHEN rtreenode(v0.c0, vt0.c1) THEN (~ (v0.c0)) ELSE (vt0.c0 IN ()) END);
SELECT * FROM vt0, v0 WHERE ((NOT (CAST(v0.c0 AS BLOB)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))/(UNLIKELY(vt0.c0))) DESC, CASE ((vt0.c0)||(v0.c0))  WHEN rtreenode(v0.c0, vt0.c1) THEN (~ (v0.c0)) ELSE (vt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))/(UNLIKELY(vt0.c0))) DESC, CASE ((vt0.c0)||(v0.c0))  WHEN rtreenode(v0.c0, vt0.c1) THEN (~ (v0.c0)) ELSE (vt0.c0 IN ()) END);
SELECT * FROM vt0, v0 WHERE ((NOT (CAST(v0.c0 AS BLOB)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))/(UNLIKELY(vt0.c0))) DESC, CASE ((vt0.c0)||(v0.c0))  WHEN rtreenode(v0.c0, vt0.c1) THEN (~ (v0.c0)) ELSE (vt0.c0 IN ()) END;
SELECT COUNT(*) FROM vt0 WHERE (((0.7501447813770123)/(vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7501447813770123)/(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((0.7501447813770123)/(vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.7501447813770123)/(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((0.7501447813770123)/(vt0.c0))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC;
SELECT ALL * FROM vt0 WHERE (GLOB(CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS BLOB))) ORDER BY ((((vt0.c1) ISNULL))+(CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL))+(CHANGES()))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (GLOB(CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS BLOB))) ORDER BY ((((vt0.c1) ISNULL))+(CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL))+(CHANGES()))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (GLOB(CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS BLOB))) ORDER BY ((((vt0.c1) ISNULL))+(CHANGES()))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN '(' END))) ORDER BY ((((v0.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))  NULLS LAST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN v0.c0 THEN '(' END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))  NULLS LAST, v0.c0 DESC);
SELECT ALL * FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN '(' END))) ORDER BY ((((v0.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))  NULLS LAST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN v0.c0 THEN '(' END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))  NULLS LAST, v0.c0 DESC);
SELECT ALL * FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN '(' END))) ORDER BY ((((v0.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, ((((v0.c0) NOT NULL))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END))  NULLS LAST, v0.c0 DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN -1.655181025E9 THEN (~ (vt0.c0)) WHEN ((((v0.c0)AND(vt0.c1)))OR(x'')) THEN 0.07501100141774786 COLLATE NOCASE WHEN ((v0.c0)IS(v0.c0)) THEN NULL COLLATE BINARY END) ORDER BY ((((((((vt0.c1)OR((vt0.c1 IN ()))))AND(((vt0.c0)GLOB(v0.c0)))))OR((vt0.c0 IN ()))))OR((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1.655181025E9 THEN (~ (vt0.c0)) WHEN ((((v0.c0)AND(vt0.c1)))OR(x'')) THEN 0.07501100141774786 COLLATE NOCASE WHEN ((v0.c0)IS(v0.c0)) THEN NULL COLLATE BINARY END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((vt0.c1)OR((vt0.c1 IN ()))))AND(((vt0.c0)GLOB(v0.c0)))))OR((vt0.c0 IN ()))))OR((- (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN -1.655181025E9 THEN (~ (vt0.c0)) WHEN ((((v0.c0)AND(vt0.c1)))OR(x'')) THEN 0.07501100141774786 COLLATE NOCASE WHEN ((v0.c0)IS(v0.c0)) THEN NULL COLLATE BINARY END) ORDER BY ((((((((vt0.c1)OR((vt0.c1 IN ()))))AND(((vt0.c0)GLOB(v0.c0)))))OR((vt0.c0 IN ()))))OR((- (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1.655181025E9 THEN (~ (vt0.c0)) WHEN ((((v0.c0)AND(vt0.c1)))OR(x'')) THEN 0.07501100141774786 COLLATE NOCASE WHEN ((v0.c0)IS(v0.c0)) THEN NULL COLLATE BINARY END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((vt0.c1)OR((vt0.c1 IN ()))))AND(((vt0.c0)GLOB(v0.c0)))))OR((vt0.c0 IN ()))))OR((- (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN -1.655181025E9 THEN (~ (vt0.c0)) WHEN ((((v0.c0)AND(vt0.c1)))OR(x'')) THEN 0.07501100141774786 COLLATE NOCASE WHEN ((v0.c0)IS(v0.c0)) THEN NULL COLLATE BINARY END) ORDER BY ((((((((vt0.c1)OR((vt0.c1 IN ()))))AND(((vt0.c0)GLOB(v0.c0)))))OR((vt0.c0 IN ()))))OR((- (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((NULL)>(vt0.c0)))LIKE(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((NULL)>(vt0.c0)))LIKE(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((NULL)>(vt0.c0)))LIKE(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((NULL)>(vt0.c0)))LIKE(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((NULL)>(vt0.c0)))LIKE(((vt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CAST((v0.c0 IN (v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((v0.c0 IN (v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CAST((v0.c0 IN (v0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((v0.c0 IN (v0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CAST((v0.c0 IN (v0.c0)) AS INTEGER);
SELECT ALL * FROM v0, vt0 WHERE ((((- (v0.c0)))-(0Xffffffffe3d1a5ff)));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))-(0Xffffffffe3d1a5ff))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((- (v0.c0)))-(0Xffffffffe3d1a5ff)));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))-(0Xffffffffe3d1a5ff))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((- (v0.c0)))-(0Xffffffffe3d1a5ff)));
SELECT ALL * FROM vt0, v0 WHERE (x'cbbcf2d4');
SELECT SUM(count) FROM (SELECT ALL ((x'cbbcf2d4') IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (x'cbbcf2d4');
SELECT SUM(count) FROM (SELECT ALL ((x'cbbcf2d4') IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (x'cbbcf2d4');
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)))GLOB(((v0.c0) NOTNULL)))) ORDER BY '0.07954075043274322'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))GLOB(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY '0.07954075043274322'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)))GLOB(((v0.c0) NOTNULL)))) ORDER BY '0.07954075043274322'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))GLOB(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY '0.07954075043274322'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0)))GLOB(((v0.c0) NOTNULL)))) ORDER BY '0.07954075043274322'  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0 NOT INDEXED, v0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT * FROM vt0 WHERE (CAST((((vt0.c1))<>((vt0.c0))) AS NUMERIC)) ORDER BY (((((((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(CAST(vt0.c0 AS REAL))))OR((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))<>((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(CAST(vt0.c0 AS REAL))))OR((+ (vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (CAST((((vt0.c1))<>((vt0.c0))) AS NUMERIC)) ORDER BY (((((((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(CAST(vt0.c0 AS REAL))))OR((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))<>((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(CAST(vt0.c0 AS REAL))))OR((+ (vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (CAST((((vt0.c1))<>((vt0.c0))) AS NUMERIC)) ORDER BY (((((((((vt0.c0 IN ()))OR((+ (vt0.c0)))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(CAST(vt0.c0 AS REAL))))OR((+ (vt0.c1)))) ASC;
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)) ORDER BY CAST(((vt0.c0)%(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c1 IN ())) ORDER BY ((vt0.c0)!=(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)!=(v0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c1 IN ())) ORDER BY ((vt0.c0)!=(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)!=(v0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c1 IN ())) ORDER BY ((vt0.c0)!=(v0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<=(ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<=(ABS(vt0.c0))));
SELECT * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<=(ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<=(ABS(vt0.c0))));
SELECT * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)<=(ABS(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0)))<(NULLIF(DISTINCT NULL, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(vt0.c0)))<(NULLIF(DISTINCT NULL, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0)))<(NULLIF(DISTINCT NULL, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(vt0.c0)))<(NULLIF(DISTINCT NULL, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS NOT(vt0.c0)))<(NULLIF(DISTINCT NULL, vt0.c1))));
SELECT * FROM v0, vt0 WHERE ((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ())))<(((NOT (vt0.c0)), 0X5143c580, 'g' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ())))<(((NOT (vt0.c0)), 0X5143c580, 'g' COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ())))<(((NOT (vt0.c0)), 0X5143c580, 'g' COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ())))<(((NOT (vt0.c0)), 0X5143c580, 'g' COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), (v0.c0 IN ())))<(((NOT (vt0.c0)), 0X5143c580, 'g' COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1)||(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c1 AS NUMERIC) WHEN (vt0.c1 IN ()) THEN ((vt0.c1)<>(vt0.c1)) END) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ABS(vt0.c1) END, ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((0.6719625901850835))<((vt0.c1)))) AND (TYPEOF(DISTINCT vt0.c0)))  NULLS LAST, CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1)>(vt0.c1)) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN vt0.c1 WHEN ABS(vt0.c0) THEN (('383034119')-(vt0.c0)) WHEN (~ (vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)||(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c1 AS NUMERIC) WHEN (vt0.c1 IN ()) THEN ((vt0.c1)!=(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ABS(vt0.c1) END, ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((0.6719625901850835))<((vt0.c1)))) AND (TYPEOF(DISTINCT vt0.c0)))  NULLS LAST, CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1)>(vt0.c1)) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN vt0.c1 WHEN ABS(vt0.c0) THEN (('383034119')-(vt0.c0)) WHEN (~ (vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1)||(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c1 AS NUMERIC) WHEN (vt0.c1 IN ()) THEN ((vt0.c1)<>(vt0.c1)) END) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ABS(vt0.c1) END, ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((0.6719625901850835))<((vt0.c1)))) AND (TYPEOF(DISTINCT vt0.c0)))  NULLS LAST, CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1)>(vt0.c1)) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN vt0.c1 WHEN ABS(vt0.c0) THEN (('383034119')-(vt0.c0)) WHEN (~ (vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)||(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c1 AS NUMERIC) WHEN (vt0.c1 IN ()) THEN ((vt0.c1)!=(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ABS(vt0.c1) END, ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((0.6719625901850835))<((vt0.c1)))) AND (TYPEOF(DISTINCT vt0.c0)))  NULLS LAST, CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1)>(vt0.c1)) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN vt0.c1 WHEN ABS(vt0.c0) THEN (('383034119')-(vt0.c0)) WHEN (~ (vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1)||(vt0.c0))  WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN (vt0.c1 IN ()) THEN CAST(vt0.c1 AS NUMERIC) WHEN (vt0.c1 IN ()) THEN ((vt0.c1)<>(vt0.c1)) END) ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ABS(vt0.c1) END, ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((0.6719625901850835))<((vt0.c1)))) AND (TYPEOF(DISTINCT vt0.c0)))  NULLS LAST, CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c1) NOTNULL) WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c1)>(vt0.c1)) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN vt0.c1 WHEN ABS(vt0.c0) THEN (('383034119')-(vt0.c0)) WHEN (~ (vt0.c1)) THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((CAST(v0.c0 AS NUMERIC))+(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC))+(v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((CAST(v0.c0 AS NUMERIC))+(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC))+(v0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((CAST(v0.c0 AS NUMERIC))+(v0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (NOT (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)*(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY (v0.c0 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)*(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (NOT (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)*(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY (v0.c0 COLLATE BINARY IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)*(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE BINARY IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (NOT (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) WHEN ((v0.c0)*(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ORDER BY (v0.c0 COLLATE BINARY IN ())  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((((v0.c0)<>(v0.c0)))||(((v0.c0) BETWEEN (NULL) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c0)))||(((v0.c0) BETWEEN (NULL) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)<>(v0.c0)))||(((v0.c0) BETWEEN (NULL) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(v0.c0)))||(((v0.c0) BETWEEN (NULL) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0)<>(v0.c0)))||(((v0.c0) BETWEEN (NULL) AND (v0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY -1079371356 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY -1079371356 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY -1079371356 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY -1079371356 ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN COALESCE(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN (v0.c0 IN ()) END) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN COALESCE(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY x'' ASC);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN COALESCE(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN (v0.c0 IN ()) END) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN COALESCE(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY x'' ASC);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN COALESCE(v0.c0, v0.c0) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN (v0.c0 IN ()) END) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(CAST(NULL AS NUMERIC) AS INTEGER)) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN x'6f79' END AS NUMERIC), ((((((v0.c0) IS FALSE))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN x'6f79' END AS NUMERIC), ((((((v0.c0) IS FALSE))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(CAST(NULL AS NUMERIC) AS INTEGER)) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN x'6f79' END AS NUMERIC), ((((((v0.c0) IS FALSE))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN x'6f79' END AS NUMERIC), ((((((v0.c0) IS FALSE))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(CAST(NULL AS NUMERIC) AS INTEGER)) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN x'6f79' END AS NUMERIC), ((((((v0.c0) IS FALSE))AND((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT * FROM vt0, v0 WHERE ((~ (json_array_length(v0.c0)))) ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((CHAR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (json_array_length(v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((CHAR(vt0.c0)))));
SELECT * FROM vt0, v0 WHERE ((~ (json_array_length(v0.c0)))) ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((CHAR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (json_array_length(v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((CHAR(vt0.c0)))));
SELECT * FROM vt0, v0 WHERE ((~ (json_array_length(v0.c0)))) ORDER BY (((v0.c0)) BETWEEN ((CAST(v0.c0 AS REAL))) AND ((CHAR(vt0.c0))));
SELECT ALL * FROM v0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT COUNT(*) FROM vt0, v0 WHERE ((((+ (vt0.c1)))<=(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))<=(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((+ (vt0.c1)))<=(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))<=(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((+ (vt0.c1)))<=(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((NOT (x'5d2c')), CAST(v0.c0 AS NUMERIC), json_array(0.8396836108786973, v0.c0)))==((((v0.c0) ISNULL), ((v0.c0)<<(v0.c0)), ((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((NOT (x'5d2c')), CAST(v0.c0 AS NUMERIC), json_array(0.8396836108786973, v0.c0)))==((((v0.c0) ISNULL), ((v0.c0)<<(v0.c0)), ((v0.c0)<<(v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((NOT (x'5d2c')), CAST(v0.c0 AS NUMERIC), json_array(0.8396836108786973, v0.c0)))==((((v0.c0) ISNULL), ((v0.c0)<<(v0.c0)), ((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((NOT (x'5d2c')), CAST(v0.c0 AS NUMERIC), json_array(0.8396836108786973, v0.c0)))==((((v0.c0) ISNULL), ((v0.c0)<<(v0.c0)), ((v0.c0)<<(v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((NOT (x'5d2c')), CAST(v0.c0 AS NUMERIC), json_array(0.8396836108786973, v0.c0)))==((((v0.c0) ISNULL), ((v0.c0)<<(v0.c0)), ((v0.c0)<<(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0))==((v0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))=((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0))==((v0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))=((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0))==((v0.c0)))) IS FALSE));
SELECT * FROM v0 WHERE (CASE WHEN NULL THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((v0.c0)-(0X316fa90f COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)-(0x316fa90f COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE WHEN NULL THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((v0.c0)-(0X316fa90f COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)-(0x316fa90f COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE WHEN NULL THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((v0.c0)-(0X316fa90f COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (NULLIF((NOT (vt0.c1)), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((NULLIF((NOT (vt0.c1)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (NULLIF((NOT (vt0.c1)), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((NULLIF((NOT (vt0.c1)), vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (NULLIF((NOT (vt0.c1)), vt0.c0 COLLATE BINARY));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND (PRINTF(vt0.c1, vt0.c0, vt0.c0)))) ORDER BY ((0.023649921228169224) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND (PRINTF(vt0.c1, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.023649921228169224) NOTNULL));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND (PRINTF(vt0.c1, vt0.c0, vt0.c0)))) ORDER BY ((0.023649921228169224) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND (PRINTF(vt0.c1, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((0.023649921228169224) NOTNULL));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))) AND (PRINTF(vt0.c1, vt0.c0, vt0.c0)))) ORDER BY ((0.023649921228169224) NOTNULL);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM WHERE ((((vt0.c0 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0))) AND ((('-294442389') NOTNULL)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0))) AND ((('-294442389') NOTNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM WHERE ((((vt0.c0 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0))) AND ((('-294442389') NOTNULL)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0))) AND ((('-294442389') NOTNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON CAST(vt0.c1 AS INTEGER) COLLATE RTRIM WHERE ((((vt0.c0 IN ())) BETWEEN (((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0))) AND ((('-294442389') NOTNULL)))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM v0 WHERE (((LOWER(v0.c0))AND(0.9370254546878115)));
SELECT SUM(count) FROM (SELECT ((((LOWER(v0.c0))AND(0.9370254546878115))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LOWER(v0.c0))AND(0.9370254546878115)));
SELECT SUM(count) FROM (SELECT ((((LOWER(v0.c0))AND(0.9370254546878115))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((LOWER(v0.c0))AND(0.9370254546878115)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY (NOT (((vt0.c1)OR(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((vt0.c1)OR(NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY (NOT (((vt0.c1)OR(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((vt0.c1)OR(NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY (NOT (((vt0.c1)OR(NULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN 0.540049188930046 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c1 IN (v0.c0))) AND ((~ (vt0.c1)))) WHERE (((((NULL, v0.c0, v0.c0))==((vt0.c0, vt0.c1, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((NULL, v0.c0, v0.c0))==((vt0.c0, vt0.c1, v0.c0))) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN 0.540049188930046 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c1 IN (v0.c0))) AND ((~ (vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN 0.540049188930046 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c1 IN (v0.c0))) AND ((~ (vt0.c1)))) WHERE (((((NULL, v0.c0, v0.c0))==((vt0.c0, vt0.c1, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((NULL, v0.c0, v0.c0))==((vt0.c0, vt0.c1, v0.c0))) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN 0.540049188930046 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c1 IN (v0.c0))) AND ((~ (vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN 0.540049188930046 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN ((vt0.c1 IN (v0.c0))) AND ((~ (vt0.c1)))) WHERE (((((NULL, v0.c0, v0.c0))==((vt0.c0, vt0.c1, v0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ())) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('-1160665888' AS REAL)) ORDER BY ((((ABS(vt0.c1))OR(((vt0.c1)!=(vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('-1160665888' AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((ABS(vt0.c1))OR(((vt0.c1)<>(vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('-1160665888' AS REAL)) ORDER BY ((((ABS(vt0.c1))OR(((vt0.c1)!=(vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('-1160665888' AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((ABS(vt0.c1))OR(((vt0.c1)<>(vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('-1160665888' AS REAL)) ORDER BY ((((ABS(vt0.c1))OR(((vt0.c1)!=(vt0.c1)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (TYPEOF(DISTINCT ((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((v0.c0) ISNULL))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (TYPEOF(DISTINCT ((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((v0.c0) ISNULL))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (TYPEOF(DISTINCT ((v0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((('>P0{c4hd')/(v0.c0)))OR(ABS(v0.c0))))AND(((v0.c0)IS(v0.c0)))))AND(v0.c0)))OR(v0.c0))) ORDER BY ((0.6790778739533495) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND('%Fncf3S')))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)<=(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('>P0{c4hd')/(v0.c0)))OR(ABS(v0.c0))))AND(((v0.c0)IS(v0.c0)))))AND(v0.c0)))OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((0.6790778739533495) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND('%Fncf3S')))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)<=(x'')))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((('>P0{c4hd')/(v0.c0)))OR(ABS(v0.c0))))AND(((v0.c0)IS(v0.c0)))))AND(v0.c0)))OR(v0.c0))) ORDER BY ((0.6790778739533495) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND('%Fncf3S')))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)<=(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('>P0{c4hd')/(v0.c0)))OR(ABS(v0.c0))))AND(((v0.c0)IS(v0.c0)))))AND(v0.c0)))OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((0.6790778739533495) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND('%Fncf3S')))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)<=(x'')))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((((('>P0{c4hd')/(v0.c0)))OR(ABS(v0.c0))))AND(((v0.c0)IS(v0.c0)))))AND(v0.c0)))OR(v0.c0))) ORDER BY ((0.6790778739533495) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND('%Fncf3S')))AND(v0.c0)))OR(v0.c0))) AND (((v0.c0)<=(x'')))) DESC;
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((UPPER(vt0.c1))OR('1741814512'))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c1))OR('1741814512'))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((UPPER(vt0.c1))OR('1741814512'))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c1))OR('1741814512'))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, v0 WHERE (((UPPER(vt0.c1))OR('1741814512'))) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM v0 INNER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL) WHERE ((((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((((0.319466206847827) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, v0.c0, vt0.c0))>=((vt0.c1, v0.c0, v0.c0))), json_remove(vt0.c1, v0.c0))) AND ((CAST(vt0.c0 AS REAL), ((vt0.c0)<<(vt0.c1)), SQLITE_SOURCE_ID()))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((((0.319466206847827) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, v0.c0, vt0.c0))>=((vt0.c1, v0.c0, v0.c0))), json_remove(vt0.c1, v0.c0))) AND ((CAST(vt0.c0 AS REAL), ((vt0.c0)<<(vt0.c1)), SQLITE_SOURCE_ID())))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL));
SELECT * FROM v0 INNER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL) WHERE ((((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((((0.319466206847827) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, v0.c0, vt0.c0))>=((vt0.c1, v0.c0, v0.c0))), json_remove(vt0.c1, v0.c0))) AND ((CAST(vt0.c0 AS REAL), ((vt0.c0)<<(vt0.c1)), SQLITE_SOURCE_ID()))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((((0.319466206847827) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, v0.c0, vt0.c0))>=((vt0.c1, v0.c0, v0.c0))), json_remove(vt0.c1, v0.c0))) AND ((CAST(vt0.c0 AS REAL), ((vt0.c0)<<(vt0.c1)), SQLITE_SOURCE_ID())))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL));
SELECT * FROM v0 INNER JOIN vt0 ON CAST(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)) AS REAL) WHERE ((((v0.c0, vt0.c1, vt0.c0)) BETWEEN ((((0.319466206847827) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, v0.c0, vt0.c0))>=((vt0.c1, v0.c0, v0.c0))), json_remove(vt0.c1, v0.c0))) AND ((CAST(vt0.c0 AS REAL), ((vt0.c0)<<(vt0.c1)), SQLITE_SOURCE_ID()))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((((v0.c0)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY ASC, (((((((x'9d08')OR(v0.c0)))OR(vt0.c1)), GLOB(vt0.c1, vt0.c0), TIME(v0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)))>=(((vt0.c1 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((vt0.c0) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c0)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY ASC, (((((((x'9d08')OR(v0.c0)))OR(vt0.c1)), GLOB(vt0.c1, vt0.c0), TIME(v0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)))>=(((vt0.c1 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((vt0.c0) ISNULL)))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((((v0.c0)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY ASC, (((((((x'9d08')OR(v0.c0)))OR(vt0.c1)), GLOB(vt0.c1, vt0.c0), TIME(v0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)))>=(((vt0.c1 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((vt0.c0) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c0)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY ASC, (((((((x'9d08')OR(v0.c0)))OR(vt0.c1)), GLOB(vt0.c1, vt0.c0), TIME(v0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)))>=(((vt0.c1 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((vt0.c0) ISNULL)))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((((v0.c0)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY ((vt0.c1) ISNULL) COLLATE BINARY ASC, (((((((x'9d08')OR(v0.c0)))OR(vt0.c1)), GLOB(vt0.c1, vt0.c0), TIME(v0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)))>=(((vt0.c1 IN (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((vt0.c0) ISNULL)))) ASC;
SELECT * FROM vt0 WHERE (((vt0.c0)<(IFNULL(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<(IFNULL(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<(IFNULL(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt0.c1)<(vt0.c1)))))AND(((vt0.c1)GLOB(vt0.c0))))) ORDER BY LIKELY(0X17b4a258)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt0.c1)<(vt0.c1)))))AND(((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(0X17b4a258)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt0.c1)<(vt0.c1)))))AND(((vt0.c1)GLOB(vt0.c0))))) ORDER BY LIKELY(0X17b4a258)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt0.c1)<(vt0.c1)))))AND(((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(0X17b4a258)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt0.c1)<(vt0.c1)))))AND(((vt0.c1)GLOB(vt0.c0))))) ORDER BY LIKELY(0X17b4a258)  NULLS LAST;
SELECT * FROM v0 WHERE (LOWER(DISTINCT (((v0.c0))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (((v0.c0))<=((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LOWER(DISTINCT (((v0.c0))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (((v0.c0))<=((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LOWER(DISTINCT (((v0.c0))<=((v0.c0)))));
SELECT * FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) BETWEEN ((+ (v0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))==((v0.c0)))) BETWEEN ((+ (v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) BETWEEN ((+ (v0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))==((v0.c0)))) BETWEEN ((+ (v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0))==((v0.c0)))) BETWEEN ((+ (v0.c0))) AND (v0.c0)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST('7i' AS BLOB) AS INTEGER) WHERE ((((vt0.c1 IN ())) IS TRUE)) ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(NULL)) DESC, ((((((x'')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, x'ee44'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST('7i' AS BLOB) AS INTEGER) ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(NULL)) DESC, ((((((x'')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, x'ee44'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST('7i' AS BLOB) AS INTEGER) WHERE ((((vt0.c1 IN ())) IS TRUE)) ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(NULL)) DESC, ((((((x'')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, x'ee44'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST('7i' AS BLOB) AS INTEGER) ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(NULL)) DESC, ((((((x'')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, x'ee44'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST('7i' AS BLOB) AS INTEGER) WHERE ((((vt0.c1 IN ())) IS TRUE)) ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(NULL)) DESC, ((((((x'')AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST, x'ee44'  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE ((((+ ('D')))GLOB((v0.c0 IN (v0.c0, '1221142092'))))) ORDER BY CAST(v0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((+ ('D')))GLOB((v0.c0 IN (v0.c0, '1221142092'))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((+ ('D')))GLOB((v0.c0 IN (v0.c0, '1221142092'))))) ORDER BY CAST(v0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((+ ('D')))GLOB((v0.c0 IN (v0.c0, '1221142092'))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((+ ('D')))GLOB((v0.c0 IN (v0.c0, '1221142092'))))) ORDER BY CAST(v0.c0 AS NUMERIC) ASC;
SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0, NULL, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0, NULL, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, NULL)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0, NULL, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0, NULL, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, NULL)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0, NULL, v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0, v0.c0, NULL))))));
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN ('545825469') AND (x''))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) ORDER BY vt0.c0 DESC  NULLS FIRST, CAST('-1948666531' AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN ('545825469') AND (x''))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC  NULLS FIRST, CAST('-1948666531' AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN ('545825469') AND (x''))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) ORDER BY vt0.c0 DESC  NULLS FIRST, CAST('-1948666531' AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN ('545825469') AND (x''))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 DESC  NULLS FIRST, CAST('-1948666531' AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (((((v0.c0) NOT BETWEEN ('545825469') AND (x''))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0))) ORDER BY vt0.c0 DESC  NULLS FIRST, CAST('-1948666531' AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c1) IS FALSE) AS REAL) WHERE (v0.c0) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c1) IS FALSE) AS REAL) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c1) IS FALSE) AS REAL) WHERE (v0.c0) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c1) IS FALSE) AS REAL) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST(((vt0.c1) IS FALSE) AS REAL) WHERE (v0.c0) ORDER BY (~ (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))*(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))*(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))*(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))*(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))*(UNLIKELY(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((+ (vt0.c0)))LIKE((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))LIKE((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((+ (vt0.c0)))LIKE((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))LIKE((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((+ (vt0.c0)))LIKE((NOT (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY NULLIF(((vt0.c1) IS FALSE), ((647948016) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY NULLIF(((vt0.c1) IS FALSE), ((647948016) NOTNULL)) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY NULLIF(((vt0.c1) IS FALSE), ((647948016) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY NULLIF(((vt0.c1) IS FALSE), ((647948016) NOTNULL)) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY NULLIF(((vt0.c1) IS FALSE), ((647948016) NOTNULL)) DESC;
SELECT * FROM v0 CROSS JOIN vt0 ON (- (((v0.c0)+(vt0.c1)))) WHERE (x'') ORDER BY ((CAST(vt0.c0 AS BLOB))%(HEX(x''))), (('wꤏ4*Mjt') NOT BETWEEN ((+ (vt0.c1))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (- (((v0.c0)+(vt0.c1)))) ORDER BY ((CAST(vt0.c0 AS BLOB))%(HEX(x''))), (('wꤏ4*Mjt') NOT BETWEEN ((+ (vt0.c1))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM v0 CROSS JOIN vt0 ON (- (((v0.c0)+(vt0.c1)))) WHERE (x'') ORDER BY ((CAST(vt0.c0 AS BLOB))%(HEX(x''))), (('wꤏ4*Mjt') NOT BETWEEN ((+ (vt0.c1))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (- (((v0.c0)+(vt0.c1)))) ORDER BY ((CAST(vt0.c0 AS BLOB))%(HEX(x''))), (('wꤏ4*Mjt') NOT BETWEEN ((+ (vt0.c1))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM v0 CROSS JOIN vt0 ON (- (((v0.c0)+(vt0.c1)))) WHERE (x'') ORDER BY ((CAST(vt0.c0 AS BLOB))%(HEX(x''))), (('wꤏ4*Mjt') NOT BETWEEN ((+ (vt0.c1))) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(v0.c0)))||(vt0.c1 COLLATE NOCASE))) ORDER BY (~ ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))AND(v0.c0)))||(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ ((+ (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(v0.c0)))||(vt0.c1 COLLATE NOCASE))) ORDER BY (~ ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))AND(v0.c0)))||(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ ((+ (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(v0.c0)))||(vt0.c1 COLLATE NOCASE))) ORDER BY (~ ((+ (vt0.c0))));
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0)<=(v0.c0)))&(x'')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0)))&(x''))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0)<=(v0.c0)))&(x'')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0)))&(x''))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c0)<=(v0.c0)))&(x'')));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0)AND(v0.c0)))))OR(0.6844247074698695)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) ISNULL))OR(((v0.c0)AND(v0.c0)))))OR(0.6844247074698695))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0)AND(v0.c0)))))OR(0.6844247074698695)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) ISNULL))OR(((v0.c0)AND(v0.c0)))))OR(0.6844247074698695))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0)AND(v0.c0)))))OR(0.6844247074698695)));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (-1.804858348E9)) DESC  NULLS FIRST, ((((((v0.c0)OR(v0.c0)))AND(200682960))) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, '', v0.c0)))) AND ((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (-1.804858348E9)) DESC  NULLS FIRST, ((((((v0.c0)OR(v0.c0)))AND(200682960))) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, '', v0.c0)))) AND ((NOT (v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (-1.804858348E9)) DESC  NULLS FIRST, ((((((v0.c0)OR(v0.c0)))AND(200682960))) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, '', v0.c0)))) AND ((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (-1.804858348E9)) DESC  NULLS FIRST, ((((((v0.c0)OR(v0.c0)))AND(200682960))) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, '', v0.c0)))) AND ((NOT (v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (-1.804858348E9)) DESC  NULLS FIRST, ((((((v0.c0)OR(v0.c0)))AND(200682960))) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, '', v0.c0)))) AND ((NOT (v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, ((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY, (- (vt0.c0)), (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, ((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY, (- (vt0.c0)), (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, ((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY, (- (vt0.c0)), (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, ((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY, (- (vt0.c0)), (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, ((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, NULL)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE BINARY, (- (vt0.c0)), (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))));
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.1651809767308383 ELSE vt0.c1 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.1651809767308383 ELSE vt0.c1 END) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.1651809767308383 ELSE vt0.c1 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.1651809767308383 ELSE vt0.c1 END) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.1651809767308383 ELSE vt0.c1 END) IS FALSE));
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))  WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) ISNULL) THEN ABS(v0.c0) WHEN LENGTH('HK') THEN (v0.c0 IN ()) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))  WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) ISNULL) THEN ABS(v0.c0) WHEN LENGTH('HK') THEN (v0.c0 IN ()) ELSE NULL END DESC);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))  WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) ISNULL) THEN ABS(v0.c0) WHEN LENGTH('HK') THEN (v0.c0 IN ()) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))  WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) ISNULL) THEN ABS(v0.c0) WHEN LENGTH('HK') THEN (v0.c0 IN ()) ELSE NULL END DESC);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN ())) ORDER BY CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL)))  WHEN (v0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) ISNULL) THEN ABS(v0.c0) WHEN LENGTH('HK') THEN (v0.c0 IN ()) ELSE NULL END DESC;
SELECT ALL * FROM v0, vt0 WHERE (TRIM(DISTINCT ((x'')>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((x'')>(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (TRIM(DISTINCT ((x'')>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((x'')>(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (TRIM(DISTINCT ((x'')>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (load_extension(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (load_extension(vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((NOT (load_extension(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (load_extension(vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(x'' AS BLOB)) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ()) ASC, (((CAST(v0.c0 AS BLOB)))<=(((((vt0.c1, v0.c0, vt0.c0))<((vt0.c1, vt0.c1, v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ()) ASC, (((CAST(v0.c0 AS BLOB)))<=(((((vt0.c1, v0.c0, vt0.c0))<((vt0.c1, vt0.c1, v0.c0)))))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(x'' AS BLOB)) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ()) ASC, (((CAST(v0.c0 AS BLOB)))<=(((((vt0.c1, v0.c0, vt0.c0))<((vt0.c1, vt0.c1, v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ()) ASC, (((CAST(v0.c0 AS BLOB)))<=(((((vt0.c1, v0.c0, vt0.c0))<((vt0.c1, vt0.c1, v0.c0)))))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(x'' AS BLOB)) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN ()) ASC, (((CAST(v0.c0 AS BLOB)))<=(((((vt0.c1, v0.c0, vt0.c0))<((vt0.c1, vt0.c1, v0.c0)))))) ASC;
SELECT * FROM vt0, v0 WHERE ((((NOT (vt0.c0)))%(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))%(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((NOT (vt0.c0)))%(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))%(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((NOT (vt0.c0)))%(CAST(v0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LIKELY(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LIKELY(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LIKELY(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))));
SELECT * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((CAST(x'' AS NUMERIC), NULL, ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))==((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1)GLOB(vt0.c0)), vt0.c0 COLLATE RTRIM)))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(x'' AS NUMERIC), NULL, ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))=((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1)GLOB(vt0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((CAST(x'' AS NUMERIC), NULL, ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))==((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1)GLOB(vt0.c0)), vt0.c0 COLLATE RTRIM)))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(x'' AS NUMERIC), NULL, ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))=((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1)GLOB(vt0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((CAST(x'' AS NUMERIC), NULL, ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))))==((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1)GLOB(vt0.c0)), vt0.c0 COLLATE RTRIM)))) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0) IS TRUE))) ORDER BY ((ABS(DISTINCT vt0.c0))>>(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY ((ABS(DISTINCT vt0.c0))>>(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0) IS TRUE))) ORDER BY ((ABS(DISTINCT vt0.c0))>>(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY ((ABS(DISTINCT vt0.c0))>>(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0) IS TRUE))) ORDER BY ((ABS(DISTINCT vt0.c0))>>(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))));
SELECT * FROM v0, vt0 WHERE (((((((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR('(}7A|)a33n	')))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(vt0.c1 AS TEXT))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR('(}7A|)a33n	')))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(vt0.c1 AS TEXT))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR('(}7A|)a33n	')))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(vt0.c1 AS TEXT))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR('(}7A|)a33n	')))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(vt0.c1 AS TEXT))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((((((((((((((v0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR('(}7A|)a33n	')))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(vt0.c1 AS TEXT))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS REAL)) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS REAL)) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS REAL)) ORDER BY CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))>(x'1d27')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))>(x'1d27'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))>(x'1d27')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))>(x'1d27'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))>(x'1d27')));
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))<=(json_type('Uu')))) ORDER BY LOWER(v0.c0) COLLATE BINARY  NULLS LAST, CAST(((v0.c0)IS(NULL)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))<=(json_type('Uu')))) IS TRUE)  as count FROM v0 ORDER BY LOWER(v0.c0) COLLATE BINARY  NULLS LAST, CAST(((v0.c0)IS(NULL)) AS BLOB) ASC);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))<=(json_type('Uu')))) ORDER BY LOWER(v0.c0) COLLATE BINARY  NULLS LAST, CAST(((v0.c0)IS(NULL)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))<=(json_type('Uu')))) IS TRUE)  as count FROM v0 ORDER BY LOWER(v0.c0) COLLATE BINARY  NULLS LAST, CAST(((v0.c0)IS(NULL)) AS BLOB) ASC);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))<=(json_type('Uu')))) ORDER BY LOWER(v0.c0) COLLATE BINARY  NULLS LAST, CAST(((v0.c0)IS(NULL)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(v0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(v0.c0));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY LIKELIHOOD('-1112085800', 0.9678096994979652);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY LIKELIHOOD('-1112085800', 0.9678096994979652));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY LIKELIHOOD('-1112085800', 0.9678096994979652);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY LIKELIHOOD('-1112085800', 0.9678096994979652));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY LIKELIHOOD('-1112085800', 0.9678096994979652);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)||(vt0.c1)))OR(((v0.c0)>>(vt0.c1)))))OR((('-1199589700') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)||(vt0.c1)))OR(((v0.c0)>>(vt0.c1)))))OR((('-1199589700') ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)||(vt0.c1)))OR(((v0.c0)>>(vt0.c1)))))OR((('-1199589700') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)||(vt0.c1)))OR(((v0.c0)>>(vt0.c1)))))OR((('-1199589700') ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((v0.c0)||(vt0.c1)))OR(((v0.c0)>>(vt0.c1)))))OR((('-1199589700') ISNULL))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON NULL WHERE ('0.4731584209926504');
SELECT SUM(count) FROM (SELECT ALL (('0.4731584209926504') IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON NULL);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON NULL WHERE ('0.4731584209926504');
SELECT SUM(count) FROM (SELECT ALL (('0.4731584209926504') IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON NULL);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON NULL WHERE ('0.4731584209926504');
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE)) ORDER BY (+ (-1.03106199E9)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (-1.03106199E9)) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE)) ORDER BY (+ (-1.03106199E9)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (+ (-1.03106199E9)) DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS FALSE)) ORDER BY (+ (-1.03106199E9)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ('-464349663') ORDER BY ((((vt0.c1)<=(vt0.c1)))>=(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST, CAST((~ (vt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-464349663') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<=(vt0.c1)))>=(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST, CAST((~ (vt0.c1)) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0 WHERE ('-464349663') ORDER BY ((((vt0.c1)<=(vt0.c1)))>=(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST, CAST((~ (vt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-464349663') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<=(vt0.c1)))>=(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST, CAST((~ (vt0.c1)) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0 WHERE ('-464349663') ORDER BY ((((vt0.c1)<=(vt0.c1)))>=(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST, CAST((~ (vt0.c1)) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKELIHOOD((((vt0.c0))<=((vt0.c0))), 0.4786214444975314)) ORDER BY (NOT (LOWER(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt0.c0))<=((vt0.c0))), 0.4786214444975314)) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (LOWER(v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKELIHOOD((((vt0.c0))<=((vt0.c0))), 0.4786214444975314)) ORDER BY (NOT (LOWER(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt0.c0))<=((vt0.c0))), 0.4786214444975314)) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (LOWER(v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (LIKELIHOOD((((vt0.c0))<=((vt0.c0))), 0.4786214444975314)) ORDER BY (NOT (LOWER(v0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((json_extract('566362450', vt0.c0))|(''))) ORDER BY (((((vt0.c0))>((v0.c0))))/((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_extract('566362450', vt0.c0))|(''))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0))>((v0.c0))))/((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((json_extract('566362450', vt0.c0))|(''))) ORDER BY (((((vt0.c0))>((v0.c0))))/((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_extract('566362450', vt0.c0))|(''))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0))>((v0.c0))))/((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST('n)v)' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('n)v)' AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST('n)v)' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('n)v)' AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST('n)v)' AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<=(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (DATE(((vt0.c0)<=(0.8576800785237608)), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, vt0.c0 COLLATE NOCASE, ((((vt0.c1)OR(NULL)))OR(vt0.c0)), (~ (vt0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c1)>=(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c0)<=(0.8576800785237608)), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, vt0.c0 COLLATE NOCASE, ((((vt0.c1)OR(NULL)))OR(vt0.c0)), (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c1)>=(vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (DATE(((vt0.c0)<=(0.8576800785237608)), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, vt0.c0 COLLATE NOCASE, ((((vt0.c1)OR(NULL)))OR(vt0.c0)), (~ (vt0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c1)>=(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c0)<=(0.8576800785237608)), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, vt0.c0 COLLATE NOCASE, ((((vt0.c1)OR(NULL)))OR(vt0.c0)), (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c1)>=(vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (DATE(((vt0.c0)<=(0.8576800785237608)), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, vt0.c0 COLLATE NOCASE, ((((vt0.c1)OR(NULL)))OR(vt0.c0)), (~ (vt0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c1)>=(vt0.c1)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CAST(NULL AS REAL) IN ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(NULL AS REAL) IN ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CAST(NULL AS REAL) IN ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(NULL AS REAL) IN ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CAST(NULL AS REAL) IN ((+ (vt0.c0)))));
SELECT * FROM v0, vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c1)>=(v0.c0))) AND (CASE WHEN v0.c0 THEN x'' END))) ORDER BY (((v0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (((vt0.c1)>=(v0.c0))) AND (CASE WHEN v0.c0 THEN x'' END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c1)>=(v0.c0))) AND (CASE WHEN v0.c0 THEN x'' END))) ORDER BY (((v0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (((vt0.c1)>=(v0.c0))) AND (CASE WHEN v0.c0 THEN x'' END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c1)>=(v0.c0))) AND (CASE WHEN v0.c0 THEN x'' END))) ORDER BY (((v0.c0)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((((v0.c0) IS FALSE))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))<(((('o!') NOT NULL))))) ORDER BY CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))<(((('o!') NOT NULL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))<(((('o!') NOT NULL))))) ORDER BY CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))<(((('o!') NOT NULL))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END))<(((('o!') NOT NULL))))) ORDER BY CAST(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))<>(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))<>(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))<>(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))<>(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))<>(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((HEX(v0.c0))OR((x'' IN ()))))OR(vt0.c1 COLLATE NOCASE)))OR((((NULL, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, 0xffffffffd6738df8, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0) NOTNULL))) WHERE (CASE '\,'  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '\,'  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c1)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((HEX(v0.c0))OR((x'' IN ()))))OR(vt0.c1 COLLATE NOCASE)))OR((((NULL, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, 0Xffffffffd6738df8, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((HEX(v0.c0))OR((x'' IN ()))))OR(vt0.c1 COLLATE NOCASE)))OR((((NULL, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, 0xffffffffd6738df8, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0) NOTNULL))) WHERE (CASE '\,'  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '\,'  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c1)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((HEX(v0.c0))OR((x'' IN ()))))OR(vt0.c1 COLLATE NOCASE)))OR((((NULL, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, 0Xffffffffd6738df8, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((((((((((HEX(v0.c0))OR((x'' IN ()))))OR(vt0.c1 COLLATE NOCASE)))OR((((NULL, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, 0xffffffffd6738df8, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))AND(((v0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((vt0.c1) NOT NULL))))OR(((vt0.c0) NOTNULL))) WHERE (CASE '\,'  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c1)) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0)<=('-1871129387' COLLATE RTRIM))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=('-1871129387' COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0)<=('-1871129387' COLLATE RTRIM))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=('-1871129387' COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM v0, vt0 WHERE (((v0.c0)<=('-1871129387' COLLATE RTRIM))) ORDER BY NULL;
SELECT ALL * FROM vt0, v0 WHERE (((~ (vt0.c1)) IN ())) ORDER BY -1.1995897E9;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY -1.1995897E9);
SELECT ALL * FROM vt0, v0 WHERE (((~ (vt0.c1)) IN ())) ORDER BY -1.1995897E9;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY -1.1995897E9);
SELECT ALL * FROM vt0, v0 WHERE (((~ (vt0.c1)) IN ())) ORDER BY -1.1995897E9;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON NULL WHERE (TRIM(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((vt0.c1) NOTNULL))) ORDER BY (((vt0.c1 IN (vt0.c1)))!=(((((vt0.c1)AND(v0.c0)))AND(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON NULL ORDER BY (((vt0.c1 IN (vt0.c1)))!=(((((vt0.c1)AND(v0.c0)))AND(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON NULL WHERE (TRIM(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((vt0.c1) NOTNULL))) ORDER BY (((vt0.c1 IN (vt0.c1)))!=(((((vt0.c1)AND(v0.c0)))AND(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON NULL ORDER BY (((vt0.c1 IN (vt0.c1)))!=(((((vt0.c1)AND(v0.c0)))AND(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON NULL WHERE (TRIM(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((vt0.c1) NOTNULL))) ORDER BY (((vt0.c1 IN (vt0.c1)))!=(((((vt0.c1)AND(v0.c0)))AND(v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 COLLATE NOCASE))<=(((+ (vt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE))<=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 COLLATE NOCASE))<=(((+ (vt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE))<=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 COLLATE NOCASE))<=(((+ (vt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.23670710570898834)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.010797635671499273))))AND(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.23670710570898834)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.010797635671499273))))AND(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.23670710570898834)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.010797635671499273))))AND(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.23670710570898834)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.010797635671499273))))AND(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.23670710570898834)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.010797635671499273))))AND(vt0.c0))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((((v0.c0, vt0.c1, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULLIF(vt0.c1, vt0.c1)) AND (((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))) WHERE (((((v0.c0)GLOB(vt0.c0)))-(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(vt0.c0)))-(UPPER(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((((v0.c0, vt0.c1, vt0.c0))<>((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULLIF(vt0.c1, vt0.c1)) AND (((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((((v0.c0, vt0.c1, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULLIF(vt0.c1, vt0.c1)) AND (((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))) WHERE (((((v0.c0)GLOB(vt0.c0)))-(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)GLOB(vt0.c0)))-(UPPER(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((((v0.c0, vt0.c1, vt0.c0))<>((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULLIF(vt0.c1, vt0.c1)) AND (((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((((v0.c0, vt0.c1, vt0.c0))!=((vt0.c1, vt0.c1, vt0.c0)))) BETWEEN (NULLIF(vt0.c1, vt0.c1)) AND (((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))) WHERE (((((v0.c0)GLOB(vt0.c0)))-(UPPER(v0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY ((CAST(vt0.c1 AS NUMERIC))==(0.2817245244302502 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))=(0.2817245244302502 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY ((CAST(vt0.c1 AS NUMERIC))==(0.2817245244302502 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))=(0.2817245244302502 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY ((CAST(vt0.c1 AS NUMERIC))==(0.2817245244302502 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR((NULL IN ()))))OR(((vt0.c1) NOTNULL))))AND(((vt0.c1)OR(v0.c0)))))OR(CAST(x'd40b' AS INTEGER)))) ORDER BY UPPER(v0.c0)  NULLS LAST, (((((vt0.c1))<=((vt0.c0)))) NOT BETWEEN ('0.6844247074698695') AND (-1624258107 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR((NULL IN ()))))OR(((vt0.c1) NOTNULL))))AND(((vt0.c1)OR(v0.c0)))))OR(CAST(x'd40b' AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY UPPER(v0.c0)  NULLS LAST, (((((vt0.c1))<=((vt0.c0)))) NOT BETWEEN ('0.6844247074698695') AND (-1624258107 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR((NULL IN ()))))OR(((vt0.c1) NOTNULL))))AND(((vt0.c1)OR(v0.c0)))))OR(CAST(x'd40b' AS INTEGER)))) ORDER BY UPPER(v0.c0)  NULLS LAST, (((((vt0.c1))<=((vt0.c0)))) NOT BETWEEN ('0.6844247074698695') AND (-1624258107 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR((NULL IN ()))))OR(((vt0.c1) NOTNULL))))AND(((vt0.c1)OR(v0.c0)))))OR(CAST(x'd40b' AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY UPPER(v0.c0)  NULLS LAST, (((((vt0.c1))<=((vt0.c0)))) NOT BETWEEN ('0.6844247074698695') AND (-1624258107 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))OR((NULL IN ()))))OR(((vt0.c1) NOTNULL))))AND(((vt0.c1)OR(v0.c0)))))OR(CAST(x'd40b' AS INTEGER)))) ORDER BY UPPER(v0.c0)  NULLS LAST, (((((vt0.c1))<=((vt0.c0)))) NOT BETWEEN ('0.6844247074698695') AND (-1624258107 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)&(vt0.c0)))>((- (vt0.c0)))) WHERE ((((((v0.c0))<>((vt0.c0)))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))!=((vt0.c0)))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)&(vt0.c0)))>((- (vt0.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)&(vt0.c0)))>((- (vt0.c0)))) WHERE ((((((v0.c0))<>((vt0.c0)))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))!=((vt0.c0)))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)&(vt0.c0)))>((- (vt0.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)&(vt0.c0)))>((- (vt0.c0)))) WHERE ((((((v0.c0))<>((vt0.c0)))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (CAST(vt0.c1 AS BLOB))));
SELECT ALL * FROM vt0, v0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((vt0.c1 IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)>(v0.c0)))AND(x'' COLLATE BINARY)))AND(LIKELY(vt0.c0)))) ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(v0.c0)))AND(x'' COLLATE BINARY)))AND(LIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)>(v0.c0)))AND(x'' COLLATE BINARY)))AND(LIKELY(vt0.c0)))) ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(v0.c0)))AND(x'' COLLATE BINARY)))AND(LIKELY(vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)>(v0.c0)))AND(x'' COLLATE BINARY)))AND(LIKELY(vt0.c0)))) ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)AND((~ (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR(CAST(vt0.c1 AS INTEGER))))OR(((vt0.c1) IS FALSE)))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(CAST(vt0.c1 AS INTEGER))))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR(CAST(vt0.c1 AS INTEGER))))OR(((vt0.c1) IS FALSE)))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(CAST(vt0.c1 AS INTEGER))))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR(CAST(vt0.c1 AS INTEGER))))OR(((vt0.c1) IS FALSE)))) ORDER BY (NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'e222' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((0.8844790580308158)GLOB(vt0.c0))) AND (((vt0.c1)+(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'e222' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((0.8844790580308158)GLOB(vt0.c0))) AND (((vt0.c1)+(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'e222' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((0.8844790580308158)GLOB(vt0.c0))) AND (((vt0.c1)+(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'e222' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((0.8844790580308158)GLOB(vt0.c0))) AND (((vt0.c1)+(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'e222' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((0.8844790580308158)GLOB(vt0.c0))) AND (((vt0.c1)+(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, CASE WHEN CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS NUMERIC) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, CASE WHEN CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS NUMERIC) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, CASE WHEN CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS NUMERIC) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, CASE WHEN CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS NUMERIC) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, CASE WHEN CASE v0.c0  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) ELSE CAST(vt0.c1 AS NUMERIC) END DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (TOTAL_CHANGES()) ORDER BY (NOT (((v0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT NULL))) DESC);
SELECT * FROM v0 WHERE (TOTAL_CHANGES()) ORDER BY (NOT (((v0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT NULL))) DESC);
SELECT * FROM v0 WHERE (TOTAL_CHANGES()) ORDER BY (NOT (((v0.c0) NOT NULL))) DESC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND (NULLIF(DISTINCT vt0.c0, vt0.c1)))) ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND (NULLIF(DISTINCT vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND (NULLIF(DISTINCT vt0.c0, vt0.c1)))) ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND (NULLIF(DISTINCT vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND (NULLIF(DISTINCT vt0.c0, vt0.c1)))) ORDER BY (+ ((NOT (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c1)*(0.8766459180263901)) IN ())) ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))||((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)*(0.8766459180263901)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))||((NOT (v0.c0))))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c1)*(0.8766459180263901)) IN ())) ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))||((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)*(0.8766459180263901)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))||((NOT (v0.c0))))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c1)*(0.8766459180263901)) IN ())) ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))||((NOT (v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (2.0068296E8);
SELECT SUM(count) FROM (SELECT ((2.0068296E8) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (2.0068296E8);
SELECT SUM(count) FROM (SELECT ((2.0068296E8) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (2.0068296E8);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE TRIM(vt0.c0, vt0.c0)  WHEN CASE v0.c0  WHEN v0.c0 THEN 0.6894707518950702 END THEN (vt0.c0 IN ()) ELSE '-1026209913' END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(vt0.c0, vt0.c0)  WHEN CASE v0.c0  WHEN v0.c0 THEN 0.6894707518950702 END THEN (vt0.c0 IN ()) ELSE '-1026209913' END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE TRIM(vt0.c0, vt0.c0)  WHEN CASE v0.c0  WHEN v0.c0 THEN 0.6894707518950702 END THEN (vt0.c0 IN ()) ELSE '-1026209913' END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(vt0.c0, vt0.c0)  WHEN CASE v0.c0  WHEN v0.c0 THEN 0.6894707518950702 END THEN (vt0.c0 IN ()) ELSE '-1026209913' END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE TRIM(vt0.c0, vt0.c0)  WHEN CASE v0.c0  WHEN v0.c0 THEN 0.6894707518950702 END THEN (vt0.c0 IN ()) ELSE '-1026209913' END);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)OR('-1370543638')))AND(vt0.c1)) AS TEXT)) ORDER BY CAST((((vt0.c0))<(('2041813505'))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR('-1370543638')))AND(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))<(('2041813505'))) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)OR('-1370543638')))AND(vt0.c1)) AS TEXT)) ORDER BY CAST((((vt0.c0))<(('2041813505'))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR('-1370543638')))AND(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))<(('2041813505'))) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c1)OR('-1370543638')))AND(vt0.c1)) AS TEXT)) ORDER BY CAST((((vt0.c0))<(('2041813505'))) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((v0.c0 IN (v0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((v0.c0 IN (v0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (((v0.c0 IN (v0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))>=((NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>=((NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))>=((NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))>=((NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))>=((NULL))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END WHERE (vt0.c0) ORDER BY HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END ORDER BY HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END WHERE (vt0.c0) ORDER BY HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END ORDER BY HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) END WHERE (vt0.c0) ORDER BY HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL)) ORDER BY 0.7847563901315597;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY 0.7847563901315597);
SELECT ALL * FROM v0 WHERE ((((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL)) ORDER BY 0.7847563901315597;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY 0.7847563901315597);
SELECT ALL * FROM v0 WHERE ((((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL)) ORDER BY 0.7847563901315597;
SELECT ALL * FROM v0 WHERE ((((((((((v0.c0 IN (v0.c0, v0.c0)))AND((NOT (v0.c0)))))AND(CAST(v0.c0 AS REAL))))OR((v0.c0 IN ()))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN (v0.c0, v0.c0)))AND((NOT (v0.c0)))))AND(CAST(v0.c0 AS REAL))))OR((v0.c0 IN ()))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((v0.c0 IN (v0.c0, v0.c0)))AND((NOT (v0.c0)))))AND(CAST(v0.c0 AS REAL))))OR((v0.c0 IN ()))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN (v0.c0, v0.c0)))AND((NOT (v0.c0)))))AND(CAST(v0.c0 AS REAL))))OR((v0.c0 IN ()))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((v0.c0 IN (v0.c0, v0.c0)))AND((NOT (v0.c0)))))AND(CAST(v0.c0 AS REAL))))OR((v0.c0 IN ()))))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))==((((vt0.c0)IS(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))=((((vt0.c0)IS(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))==((((vt0.c0)IS(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))=((((vt0.c0)IS(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), NULL))==((((vt0.c0)IS(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), vt0.c1))));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (- (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (- (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (- (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (- (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c1) IS TRUE) THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (- (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN (((vt0.c0)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(vt0.c0)) IN (((vt0.c0)&(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN (((vt0.c0)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(vt0.c0)) IN (((vt0.c0)&(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN (((vt0.c0)&(vt0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c0) IS TRUE), (vt0.c0 IN (v0.c0))))) ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB)  NULLS FIRST, CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c0) IS TRUE), (vt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB)  NULLS FIRST, CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) AS INTEGER) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c0) IS TRUE), (vt0.c0 IN (v0.c0))))) ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB)  NULLS FIRST, CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c0) IS TRUE), (vt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB)  NULLS FIRST, CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) AS INTEGER) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c0) IS TRUE), (vt0.c0 IN (v0.c0))))) ORDER BY CAST(((vt0.c1) IS TRUE) AS BLOB)  NULLS FIRST, CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((v0.c0))) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END)OR(']|')))AND(((vt0.c1) IS TRUE)))) ORDER BY ((vt0.c0) NOT BETWEEN ('973427275') AND (vt0.c0)) COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 END)OR(']|')))AND(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0) NOT BETWEEN ('973427275') AND (vt0.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END)OR(']|')))AND(((vt0.c1) IS TRUE)))) ORDER BY ((vt0.c0) NOT BETWEEN ('973427275') AND (vt0.c0)) COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 END)OR(']|')))AND(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0) NOT BETWEEN ('973427275') AND (vt0.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 END)OR(']|')))AND(((vt0.c1) IS TRUE)))) ORDER BY ((vt0.c0) NOT BETWEEN ('973427275') AND (vt0.c0)) COLLATE RTRIM COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) ORDER BY (+ (vt0.c0)) COLLATE BINARY, json_valid(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, ((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)!=(vt0.c1)))), vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(vt0.c0)))AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE BINARY, json_valid(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, ((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)<>(vt0.c1)))), vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) ORDER BY (+ (vt0.c0)) COLLATE BINARY, json_valid(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, ((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)!=(vt0.c1)))), vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(vt0.c0)))AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE BINARY, json_valid(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, ((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)<>(vt0.c1)))), vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) ORDER BY (+ (vt0.c0)) COLLATE BINARY, json_valid(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, ((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)!=(vt0.c1)))), vt0.c1  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((v0.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.027990109464658297);
SELECT SUM(count) FROM (SELECT ALL ((0.027990109464658297) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.027990109464658297);
SELECT SUM(count) FROM (SELECT ALL ((0.027990109464658297) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.027990109464658297);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END) IS FALSE)) ORDER BY '-1976575293' ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY '-1976575293' ASC);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END) IS FALSE)) ORDER BY '-1976575293' ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY '-1976575293' ASC);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 END) IS FALSE)) ORDER BY '-1976575293' ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL) IS TRUE)) ORDER BY (+ ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, (+ (CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, (+ (CAST(v0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL) IS TRUE)) ORDER BY (+ ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, (+ (CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, (+ (CAST(v0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((NULL) IS TRUE)) ORDER BY (+ ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((v0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, (+ (CAST(v0.c0 AS INTEGER))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)|(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)|(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)|(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)|(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)|(v0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL)) END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('1380916463') ORDER BY ((IFNULL(v0.c0, vt0.c1))|(CASE WHEN NULL THEN vt0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (('1380916463') IS TRUE)  as count FROM v0, vt0 ORDER BY ((IFNULL(v0.c0, vt0.c1))|(CASE WHEN NULL THEN vt0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('1380916463') ORDER BY ((IFNULL(v0.c0, vt0.c1))|(CASE WHEN NULL THEN vt0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (('1380916463') IS TRUE)  as count FROM v0, vt0 ORDER BY ((IFNULL(v0.c0, vt0.c1))|(CASE WHEN NULL THEN vt0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('1380916463') ORDER BY ((IFNULL(v0.c0, vt0.c1))|(CASE WHEN NULL THEN vt0.c0 ELSE v0.c0 END));
SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS FALSE));
SELECT ALL * FROM v0 WHERE (TYPEOF((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((NOT (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (TYPEOF((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((NOT (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (TYPEOF((NOT (v0.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB))<=((v0.c0 IN ()))) WHERE (CASE vt0.c0  WHEN NULL COLLATE BINARY THEN v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN NULL COLLATE BINARY THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB))<=((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB))<=((v0.c0 IN ()))) WHERE (CASE vt0.c0  WHEN NULL COLLATE BINARY THEN v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN NULL COLLATE BINARY THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB))<=((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB))<=((v0.c0 IN ()))) WHERE (CASE vt0.c0  WHEN NULL COLLATE BINARY THEN v0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((~ (v0.c0))) BETWEEN (json_remove(v0.c0, vt0.c1)) AND ((v0.c0 IN (NULL)))) WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((~ (v0.c0))) BETWEEN (json_remove(v0.c0, vt0.c1)) AND ((v0.c0 IN (NULL)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((~ (v0.c0))) BETWEEN (json_remove(v0.c0, vt0.c1)) AND ((v0.c0 IN (NULL)))) WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((~ (v0.c0))) BETWEEN (json_remove(v0.c0, vt0.c1)) AND ((v0.c0 IN (NULL)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((~ (v0.c0))) BETWEEN (json_remove(v0.c0, vt0.c1)) AND ((v0.c0 IN (NULL)))) WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE NOCASE COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (v0.c0)));
SELECT ALL * FROM v0, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY ((((vt0.c0)>=(vt0.c1)))||(((vt0.c0) BETWEEN ('-462756199') AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)>=(vt0.c1)))||(((vt0.c0) BETWEEN ('-462756199') AND (vt0.c0)))) DESC);
SELECT ALL * FROM v0, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY ((((vt0.c0)>=(vt0.c1)))||(((vt0.c0) BETWEEN ('-462756199') AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)>=(vt0.c1)))||(((vt0.c0) BETWEEN ('-462756199') AND (vt0.c0)))) DESC);
SELECT ALL * FROM v0, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY ((((vt0.c0)>=(vt0.c1)))||(((vt0.c0) BETWEEN ('-462756199') AND (vt0.c0)))) DESC;
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((-1.36775197E8) ISNULL))) ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((-1.36775197E8) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((-1.36775197E8) ISNULL))) ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((-1.36775197E8) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((-1.36775197E8) ISNULL))) ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (-1.32834507E9) ORDER BY ((ABS(vt0.c1)) NOT BETWEEN (((-1160665888)GLOB(vt0.c1))) AND (CASE WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((-1.32834507E9) IS TRUE)  as count FROM v0, vt0 ORDER BY ((ABS(vt0.c1)) NOT BETWEEN (((-1160665888)GLOB(vt0.c1))) AND (CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT * FROM v0, vt0 WHERE (-1.32834507E9) ORDER BY ((ABS(vt0.c1)) NOT BETWEEN (((-1160665888)GLOB(vt0.c1))) AND (CASE WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((-1.32834507E9) IS TRUE)  as count FROM v0, vt0 ORDER BY ((ABS(vt0.c1)) NOT BETWEEN (((-1160665888)GLOB(vt0.c1))) AND (CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT * FROM v0, vt0 WHERE (-1.32834507E9) ORDER BY ((ABS(vt0.c1)) NOT BETWEEN (((-1160665888)GLOB(vt0.c1))) AND (CASE WHEN v0.c0 THEN v0.c0 END));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((((vt0.c1)AND(vt0.c0)))OR(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((((vt0.c1)AND(vt0.c0)))OR(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((((vt0.c1)AND(vt0.c0)))OR(v0.c0)) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS BLOB)) ORDER BY ((json_type(v0.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((json_type(v0.c0)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS BLOB)) ORDER BY ((json_type(v0.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((json_type(v0.c0)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS BLOB)) ORDER BY ((json_type(v0.c0)) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)AND(NULL)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)AND(v0.c0))))) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(NULL)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)AND(NULL)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)AND(v0.c0))))) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(NULL)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)AND(NULL)))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)AND(v0.c0))))) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) IS FALSE);
SELECT * FROM v0 WHERE (((v0.c0)%(v0.c0)) COLLATE BINARY) ORDER BY (((v0.c0)) NOT BETWEEN (('910469301')) AND ((IFNULL(v0.c0, v0.c0)))) DESC  NULLS LAST, ((((((v0.c0)/(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)IS NOT(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)%(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (('910469301')) AND ((IFNULL(v0.c0, v0.c0)))) DESC  NULLS LAST, ((((((v0.c0)/(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)IS NOT(v0.c0)))) ASC);
SELECT * FROM v0 WHERE (((v0.c0)%(v0.c0)) COLLATE BINARY) ORDER BY (((v0.c0)) NOT BETWEEN (('910469301')) AND ((IFNULL(v0.c0, v0.c0)))) DESC  NULLS LAST, ((((((v0.c0)/(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)IS NOT(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)%(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (('910469301')) AND ((IFNULL(v0.c0, v0.c0)))) DESC  NULLS LAST, ((((((v0.c0)/(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)IS NOT(v0.c0)))) ASC);
SELECT * FROM v0 WHERE (((v0.c0)%(v0.c0)) COLLATE BINARY) ORDER BY (((v0.c0)) NOT BETWEEN (('910469301')) AND ((IFNULL(v0.c0, v0.c0)))) DESC  NULLS LAST, ((((((v0.c0)/(v0.c0)))OR(v0.c0 COLLATE NOCASE)))OR(((v0.c0)IS NOT(v0.c0)))) ASC;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((((0.43733925081578895)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY ((v0.c0 COLLATE BINARY)|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS NUMERIC)  NULLS LAST, 'fxi' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((((0.43733925081578895)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS NUMERIC)  NULLS LAST, 'fxi' DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((((0.43733925081578895)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY ((v0.c0 COLLATE BINARY)|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS NUMERIC)  NULLS LAST, 'fxi' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((((0.43733925081578895)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS NUMERIC)  NULLS LAST, 'fxi' DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((((0.43733925081578895)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY ((v0.c0 COLLATE BINARY)|(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) AS NUMERIC)  NULLS LAST, 'fxi' DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ('-824680119') ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))-(v0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-824680119') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))-(v0.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM v0, vt0 WHERE ('-824680119') ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))-(v0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-824680119') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))-(v0.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM v0, vt0 WHERE ('-824680119') ORDER BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))-(v0.c0 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN (((vt0.c1)IS(v0.c0))))) ORDER BY '銶I(YPZ>O)' DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt0.c1)IS(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '銶I(YPZ>O)' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN (((vt0.c1)IS(v0.c0))))) ORDER BY '銶I(YPZ>O)' DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt0.c1)IS(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY '銶I(YPZ>O)' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN (((vt0.c1)IS(v0.c0))))) ORDER BY '銶I(YPZ>O)' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(DISTINCT vt0.c1))LIKE(vt0.c0))) ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c0))) THEN load_extension(0X738962bd) END, (~ (CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN '234375910' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt0.c1))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c0))) THEN load_extension(0X738962bd) END, (~ (CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN '234375910' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(DISTINCT vt0.c1))LIKE(vt0.c0))) ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c0))) THEN load_extension(0X738962bd) END, (~ (CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN '234375910' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt0.c1))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c0))) THEN load_extension(0X738962bd) END, (~ (CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN '234375910' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((HEX(DISTINCT vt0.c1))LIKE(vt0.c0))) ORDER BY CASE WHEN (((vt0.c1))<=((vt0.c0))) THEN load_extension(0X738962bd) END, (~ (CASE vt0.c1  WHEN x'' THEN vt0.c0 WHEN '234375910' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c1)>=(v0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((vt0.c1)>=(v0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c1)>=(v0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((vt0.c1)>=(v0.c0))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c1)>=(v0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE('㟂 a')) WHERE (CAST((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND (('', 1603551651, v0.c0))) AS NUMERIC)) ORDER BY -1.655181025E9 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND (('', 1603551651, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE('㟂 a')) ORDER BY -1.655181025E9 COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE('㟂 a')) WHERE (CAST((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND (('', 1603551651, v0.c0))) AS NUMERIC)) ORDER BY -1.655181025E9 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND (('', 1603551651, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE('㟂 a')) ORDER BY -1.655181025E9 COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE('㟂 a')) WHERE (CAST((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND (('', 1603551651, v0.c0))) AS NUMERIC)) ORDER BY -1.655181025E9 COLLATE BINARY ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0))))<((((vt0.c1)IS(vt0.c0)))))) ORDER BY (- ((~ (vt0.c1)))), ((((((vt0.c0)<(vt0.c1)))OR(NULLIF(vt0.c1, vt0.c1))))OR(json_patch(NULL, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0))))<((((vt0.c1)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((~ (vt0.c1)))), ((((((vt0.c0)<(vt0.c1)))OR(NULLIF(vt0.c1, vt0.c1))))OR(json_patch(NULL, vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0))))<((((vt0.c1)IS(vt0.c0)))))) ORDER BY (- ((~ (vt0.c1)))), ((((((vt0.c0)<(vt0.c1)))OR(NULLIF(vt0.c1, vt0.c1))))OR(json_patch(NULL, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0))))<((((vt0.c1)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((~ (vt0.c1)))), ((((((vt0.c0)<(vt0.c1)))OR(NULLIF(vt0.c1, vt0.c1))))OR(json_patch(NULL, vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0))))<((((vt0.c1)IS(vt0.c0)))))) ORDER BY (- ((~ (vt0.c1)))), ((((((vt0.c0)<(vt0.c1)))OR(NULLIF(vt0.c1, vt0.c1))))OR(json_patch(NULL, vt0.c0)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (QUOTE(vt0.c0 COLLATE NOCASE)) ORDER BY (((vt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (QUOTE(vt0.c0 COLLATE NOCASE)) ORDER BY (((vt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (QUOTE(vt0.c0 COLLATE NOCASE)) ORDER BY (((vt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c1) IS TRUE))));
SELECT * FROM v0 WHERE (TRIM(DISTINCT v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT v0.c0 COLLATE RTRIM, ((((v0.c0)OR(v0.c0)))OR(v0.c0))));
SELECT ALL * FROM v0, vt0 WHERE ((- (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((- (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((- (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB);
SELECT ALL * FROM vt0, v0 WHERE ((vt0.c1 IN ())) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, v0 WHERE ((vt0.c1 IN ())) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, v0 WHERE ((vt0.c1 IN ())) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0 COLLATE BINARY) ORDER BY v0.c0 ASC  NULLS LAST, v0.c0 DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)) AS TEXT));
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) NOTNULL))||(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL))||(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) NOTNULL))||(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL))||(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c1) NOTNULL))||(v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((vt0.c1) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((vt0.c1) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) ORDER BY ((vt0.c1) IS FALSE);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>>(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>>(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>>(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY TRIM(DISTINCT TYPEOF(vt0.c0), (((vt0.c1))>((0.48320549330491935))));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT TYPEOF(vt0.c0), (((vt0.c1))>((0.48320549330491935)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY TRIM(DISTINCT TYPEOF(vt0.c0), (((vt0.c1))>((0.48320549330491935))));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT TYPEOF(vt0.c0), (((vt0.c1))>((0.48320549330491935)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY TRIM(DISTINCT TYPEOF(vt0.c0), (((vt0.c1))>((0.48320549330491935))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE RTRIM WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE RTRIM WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE RTRIM WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) END) ORDER BY ((LAST_INSERT_ROWID())GLOB(((vt0.c1)&(vt0.c1)))) ASC  NULLS LAST, CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)<>(32413672)) END ASC  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((LAST_INSERT_ROWID())GLOB(((vt0.c1)&(vt0.c1)))) ASC  NULLS LAST, CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)<>(32413672)) END ASC  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) END) ORDER BY ((LAST_INSERT_ROWID())GLOB(((vt0.c1)&(vt0.c1)))) ASC  NULLS LAST, CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)<>(32413672)) END ASC  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((LAST_INSERT_ROWID())GLOB(((vt0.c1)&(vt0.c1)))) ASC  NULLS LAST, CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)<>(32413672)) END ASC  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c0) NOT NULL) END) ORDER BY ((LAST_INSERT_ROWID())GLOB(((vt0.c1)&(vt0.c1)))) ASC  NULLS LAST, CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)<>(32413672)) END ASC  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c1)))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c1) NOT NULL)) AND ((((vt0.c0))<((vt0.c1))))));
SELECT * FROM vt0, v0 WHERE (((v0.c0 COLLATE NOCASE)||(((vt0.c1)==(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)||(((vt0.c1)=(x''))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c0 COLLATE NOCASE)||(((vt0.c1)==(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)||(((vt0.c1)=(x''))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((v0.c0 COLLATE NOCASE)||(((vt0.c1)==(x'')))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON vt0.c0 COLLATE NOCASE COLLATE BINARY WHERE (((((vt0.c0)IS(x'')))LIKE(((vt0.c0)>=(v0.c0))))) ORDER BY (((NOT (vt0.c0)))LIKE('㥒/{^~2' COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(x'')))LIKE(((vt0.c0)>=(v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON vt0.c0 COLLATE NOCASE COLLATE BINARY ORDER BY (((NOT (vt0.c0)))LIKE('㥒/{^~2' COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON vt0.c0 COLLATE NOCASE COLLATE BINARY WHERE (((((vt0.c0)IS(x'')))LIKE(((vt0.c0)>=(v0.c0))))) ORDER BY (((NOT (vt0.c0)))LIKE('㥒/{^~2' COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(x'')))LIKE(((vt0.c0)>=(v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON vt0.c0 COLLATE NOCASE COLLATE BINARY ORDER BY (((NOT (vt0.c0)))LIKE('㥒/{^~2' COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON vt0.c0 COLLATE NOCASE COLLATE BINARY WHERE (((((vt0.c0)IS(x'')))LIKE(((vt0.c0)>=(v0.c0))))) ORDER BY (((NOT (vt0.c0)))LIKE('㥒/{^~2' COLLATE RTRIM)) DESC;
SELECT ALL * FROM v0, vt0 WHERE ((+ (COALESCE('', vt0.c1, v0.c0, vt0.c1, vt0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (COALESCE('', vt0.c1, v0.c0, vt0.c1, vt0.c1, v0.c0)))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT ALL * FROM v0, vt0 WHERE ((+ (COALESCE('', vt0.c1, v0.c0, vt0.c1, vt0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (COALESCE('', vt0.c1, v0.c0, vt0.c1, vt0.c1, v0.c0)))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED);
SELECT ALL * FROM v0, vt0 WHERE ((+ (COALESCE('', vt0.c1, v0.c0, vt0.c1, vt0.c1, v0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0xfffffffff0df1b87 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffff0df1b87 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0xfffffffff0df1b87 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffff0df1b87 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0xfffffffff0df1b87 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)%(((vt0.c1)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(((vt0.c1)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)%(((vt0.c1)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(((vt0.c1)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)%(((vt0.c1)>(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (((v0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)), vt0.c0 COLLATE BINARY, vt0.c1, ((vt0.c1) NOT NULL), SQLITE_SOURCE_ID())) AND ((v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, vt0.c1, ((v0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0)) BETWEEN (((((x'19ca', vt0.c1, vt0.c0)) BETWEEN ((0.6646384467655266, 0X25a05a87, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)), vt0.c0 COLLATE BINARY, vt0.c1, ((vt0.c1) NOT NULL), SQLITE_SOURCE_ID())) AND ((v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, vt0.c1, ((v0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0)) BETWEEN (((((x'19ca', vt0.c1, vt0.c0)) BETWEEN ((0.6646384467655266, 0X25a05a87, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((NULL))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (((v0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)), vt0.c0 COLLATE BINARY, vt0.c1, ((vt0.c1) NOT NULL), SQLITE_SOURCE_ID())) AND ((v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, vt0.c1, ((v0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0)) BETWEEN (((((x'19ca', vt0.c1, vt0.c0)) BETWEEN ((0.6646384467655266, 0X25a05a87, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)), vt0.c0 COLLATE BINARY, vt0.c1, ((vt0.c1) NOT NULL), SQLITE_SOURCE_ID())) AND ((v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, vt0.c1, ((v0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0)) BETWEEN (((((x'19ca', vt0.c1, vt0.c0)) BETWEEN ((0.6646384467655266, 0X25a05a87, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((NULL))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (((v0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)), vt0.c0 COLLATE BINARY, vt0.c1, ((vt0.c1) NOT NULL), SQLITE_SOURCE_ID())) AND ((v0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM, vt0.c1, ((v0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) ASC  NULLS LAST, (((vt0.c0)) BETWEEN (((((x'19ca', vt0.c1, vt0.c0)) BETWEEN ((0.6646384467655266, 0X25a05a87, v0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((NULL)));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (0.551866710308844) AND (((v0.c0)GLOB(v0.c0))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (0.551866710308844) AND (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (0.551866710308844) AND (((v0.c0)GLOB(v0.c0))))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (0.551866710308844) AND (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (0.551866710308844) AND (((v0.c0)GLOB(v0.c0))))) ORDER BY v0.c0 DESC;
SELECT * FROM vt0, v0 WHERE ((((vt0.c1 COLLATE NOCASE))<((v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE NOCASE))<((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((vt0.c1 COLLATE NOCASE))<((v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE NOCASE))<((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((vt0.c1 COLLATE NOCASE))<((v0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1) IS FALSE))OR(((vt0.c1)||(vt0.c0))))) ORDER BY ((CAST(v0.c0 AS BLOB))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))OR(((vt0.c1)||(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1) IS FALSE))OR(((vt0.c1)||(vt0.c0))))) ORDER BY ((CAST(v0.c0 AS BLOB))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))OR(((vt0.c1)||(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1) IS FALSE))OR(((vt0.c1)||(vt0.c0))))) ORDER BY ((CAST(v0.c0 AS BLOB))&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)IS NOT(v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)) WHERE (NULL) ORDER BY vt0.c1 DESC, ((CASE WHEN v0.c0 THEN vt0.c0 END)/(((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))) ASC, JULIANDAY((('1374694413')!=(v0.c0)), ((vt0.c0) ISNULL), ((vt0.c1)<(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)IS NOT(v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)) ORDER BY vt0.c1 DESC, ((CASE WHEN v0.c0 THEN vt0.c0 END)/(((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))) ASC, JULIANDAY((('1374694413')!=(v0.c0)), ((vt0.c0) ISNULL), ((vt0.c1)<(vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)IS NOT(v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)) WHERE (NULL) ORDER BY vt0.c1 DESC, ((CASE WHEN v0.c0 THEN vt0.c0 END)/(((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))) ASC, JULIANDAY((('1374694413')!=(v0.c0)), ((vt0.c0) ISNULL), ((vt0.c1)<(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)IS NOT(v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)) ORDER BY vt0.c1 DESC, ((CASE WHEN v0.c0 THEN vt0.c0 END)/(((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))) ASC, JULIANDAY((('1374694413')!=(v0.c0)), ((vt0.c0) ISNULL), ((vt0.c1)<(vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)IS NOT(v0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE)) WHERE (NULL) ORDER BY vt0.c1 DESC, ((CASE WHEN v0.c0 THEN vt0.c0 END)/(((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c1)))) ASC, JULIANDAY((('1374694413')!=(v0.c0)), ((vt0.c0) ISNULL), ((vt0.c1)<(vt0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c0))>((vt0.c1))))>>(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, (+ (CASE vt0.c0  WHEN '1851560820' THEN vt0.c1 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c1))))>>(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, (+ (CASE vt0.c0  WHEN '1851560820' THEN vt0.c1 ELSE vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c0))>((vt0.c1))))>>(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, (+ (CASE vt0.c0  WHEN '1851560820' THEN vt0.c1 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c1))))>>(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, (+ (CASE vt0.c0  WHEN '1851560820' THEN vt0.c1 ELSE vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c0))>((vt0.c1))))>>(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, (+ (CASE vt0.c0  WHEN '1851560820' THEN vt0.c1 ELSE vt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN (1779159758)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)/(v0.c0)) IN (1779159758))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN (1779159758)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)/(v0.c0)) IN (1779159758))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN (1779159758)));
SELECT COUNT(*) FROM vt0 WHERE (JULIANDAY((vt0.c1 IN (vt0.c1)), ((vt0.c1) ISNULL), -1618385851, json_patch(vt0.c1, vt0.c0), (((vt0.c1)) BETWEEN (('Xr')) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY((vt0.c1 IN (vt0.c1)), ((vt0.c1) ISNULL), -1618385851, json_patch(vt0.c1, vt0.c0), (((vt0.c1)) BETWEEN (('Xr')) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (JULIANDAY((vt0.c1 IN (vt0.c1)), ((vt0.c1) ISNULL), -1618385851, json_patch(vt0.c1, vt0.c0), (((vt0.c1)) BETWEEN (('Xr')) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY((vt0.c1 IN (vt0.c1)), ((vt0.c1) ISNULL), -1618385851, json_patch(vt0.c1, vt0.c0), (((vt0.c1)) BETWEEN (('Xr')) AND ((vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (x'')) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (x'')) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (x'')) AS NUMERIC));
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0)*(v0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((vt0.c1 IN ()))+(vt0.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c1  NULLS FIRST, (NOT (HEX(NULL)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)*(v0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN ()))+(vt0.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c1  NULLS FIRST, (NOT (HEX(NULL))));
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0)*(v0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((vt0.c1 IN ()))+(vt0.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c1  NULLS FIRST, (NOT (HEX(NULL)));
SELECT SUM(count) FROM (SELECT ((((v0.c0)*(v0.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN ()))+(vt0.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c1  NULLS FIRST, (NOT (HEX(NULL))));
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0)*(v0.c0)) COLLATE NOCASE COLLATE NOCASE) ORDER BY (((vt0.c1 IN ()))+(vt0.c0 COLLATE RTRIM))  NULLS FIRST, vt0.c1  NULLS FIRST, (NOT (HEX(NULL)));
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT CAST(v0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT CAST(v0.c0 AS NUMERIC)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c1)AND(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))AND(v0.c0)))))AND(((vt0.c0)/(v0.c0)))))AND(GLOB(v0.c0, vt0.c0))))AND(COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0))) WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))==((vt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))=((vt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c1)AND(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))AND(v0.c0)))))AND(((vt0.c0)/(v0.c0)))))AND(GLOB(v0.c0, vt0.c0))))AND(COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c1)AND(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))AND(v0.c0)))))AND(((vt0.c0)/(v0.c0)))))AND(GLOB(v0.c0, vt0.c0))))AND(COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0))) WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))==((vt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))=((vt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c1)AND(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))AND(v0.c0)))))AND(((vt0.c0)/(v0.c0)))))AND(GLOB(v0.c0, vt0.c0))))AND(COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c1)AND(((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))AND(v0.c0)))))AND(((vt0.c0)/(v0.c0)))))AND(GLOB(v0.c0, vt0.c0))))AND(COALESCE(DISTINCT v0.c0, v0.c0, v0.c0, v0.c0))) WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))==((vt0.c1, vt0.c0, vt0.c0, vt0.c0, v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY CAST(0x70f6fcae AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(0X70f6fcae AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY CAST(0x70f6fcae AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(0X70f6fcae AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) IS FALSE) IN ())) ORDER BY CAST(0x70f6fcae AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0 IN ()))AND(v0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(v0.c0)))AND(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0 IN ()))AND(v0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0 IN ()))AND(v0.c0)))AND(vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((v0.c0 IN ()))AND(v0.c0)))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE (- (vt0.c1))  WHEN (+ (-524145090)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY (((((vt0.c1) ISNULL), NULL, ((vt0.c0)|(v0.c0))))>((vt0.c0 COLLATE BINARY, (((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CASE WHEN vt0.c0 THEN 0xffffffffed3bc08f END)))  NULLS LAST, (+ (CAST(v0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c1))  WHEN (+ (-524145090)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c1) ISNULL), NULL, ((vt0.c0)|(v0.c0))))>((vt0.c0 COLLATE BINARY, (((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CASE WHEN vt0.c0 THEN 0xffffffffed3bc08f END)))  NULLS LAST, (+ (CAST(v0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE (- (vt0.c1))  WHEN (+ (-524145090)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY (((((vt0.c1) ISNULL), NULL, ((vt0.c0)|(v0.c0))))>((vt0.c0 COLLATE BINARY, (((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CASE WHEN vt0.c0 THEN 0xffffffffed3bc08f END)))  NULLS LAST, (+ (CAST(v0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c1))  WHEN (+ (-524145090)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c1) ISNULL), NULL, ((vt0.c0)|(v0.c0))))>((vt0.c0 COLLATE BINARY, (((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CASE WHEN vt0.c0 THEN 0xffffffffed3bc08f END)))  NULLS LAST, (+ (CAST(v0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE (- (vt0.c1))  WHEN (+ (-524145090)) THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY (((((vt0.c1) ISNULL), NULL, ((vt0.c0)|(v0.c0))))>((vt0.c0 COLLATE BINARY, (((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))), CASE WHEN vt0.c0 THEN 0xffffffffed3bc08f END)))  NULLS LAST, (+ (CAST(v0.c0 AS REAL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('');
SELECT ALL * FROM v0 WHERE (CASE NULL  WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0)<=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0)<=(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE NULL  WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0)<=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0)<=(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE NULL  WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0)<=(v0.c0)) END);
SELECT * FROM v0 WHERE (((v0.c0)>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>>(NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>>(NULL))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)>>(NULL)));
SELECT ALL * FROM v0 WHERE ((((((-1.45759564E8))>((v0.c0)))) IS FALSE)) ORDER BY (+ ((v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((-1.45759564E8))>((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (+ ((v0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((-1.45759564E8))>((v0.c0)))) IS FALSE)) ORDER BY (+ ((v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((-1.45759564E8))>((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (+ ((v0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((-1.45759564E8))>((v0.c0)))) IS FALSE)) ORDER BY (+ ((v0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY '('  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY '('  NULLS FIRST, vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY '('  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY '('  NULLS FIRST, vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY '('  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) ORDER BY ((((json_array_length(vt0.c0, -1.804858348E9))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))AND(HEX(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((json_array_length(vt0.c0, -1.804858348E9))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))AND(HEX(DISTINCT vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) ORDER BY ((((json_array_length(vt0.c0, -1.804858348E9))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))AND(HEX(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((json_array_length(vt0.c0, -1.804858348E9))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))AND(HEX(DISTINCT vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1))) ISNULL)) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1))) ISNULL)) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1))) ISNULL)) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT (vt0.c0 IN ())));
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))==((vt0.c1 COLLATE BINARY, ((((x'7933')AND(vt0.c1)))AND(vt0.c1)), vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))=((vt0.c1 COLLATE BINARY, ((((x'7933')AND(vt0.c1)))AND(vt0.c1)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))==((vt0.c1 COLLATE BINARY, ((((x'7933')AND(vt0.c1)))AND(vt0.c1)), vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))=((vt0.c1 COLLATE BINARY, ((((x'7933')AND(vt0.c1)))AND(vt0.c1)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))==((vt0.c1 COLLATE BINARY, ((((x'7933')AND(vt0.c1)))AND(vt0.c1)), vt0.c0)))) ORDER BY vt0.c0;
SELECT ALL * FROM v0, vt0 WHERE (((('-1618385851', vt0.c1, vt0.c0, v0.c0, v0.c0))>((vt0.c0, vt0.c1, v0.c0, vt0.c0, v0.c0))) COLLATE NOCASE) ORDER BY LOWER(CAST(vt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((((('-1618385851', vt0.c1, vt0.c0, v0.c0, v0.c0))>((vt0.c0, vt0.c1, v0.c0, vt0.c0, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY LOWER(CAST(vt0.c1 AS NUMERIC)));
SELECT ALL * FROM v0, vt0 WHERE (((('-1618385851', vt0.c1, vt0.c0, v0.c0, v0.c0))>((vt0.c0, vt0.c1, v0.c0, vt0.c0, v0.c0))) COLLATE NOCASE) ORDER BY LOWER(CAST(vt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((((('-1618385851', vt0.c1, vt0.c0, v0.c0, v0.c0))>((vt0.c0, vt0.c1, v0.c0, vt0.c0, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY LOWER(CAST(vt0.c1 AS NUMERIC)));
SELECT ALL * FROM v0, vt0 WHERE (((('-1618385851', vt0.c1, vt0.c0, v0.c0, v0.c0))>((vt0.c0, vt0.c1, v0.c0, vt0.c0, v0.c0))) COLLATE NOCASE) ORDER BY LOWER(CAST(vt0.c1 AS NUMERIC));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (CASE '-1618385851'  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END THEN v0.c0 END) ORDER BY ((((vt0.c1 COLLATE RTRIM)OR(((vt0.c0)>(v0.c0)))))OR(CASE 0.8850235995025296  WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE '-1618385851'  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END THEN v0.c0 END) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((vt0.c1 COLLATE RTRIM)OR(((vt0.c0)>(v0.c0)))))OR(CASE 0.8850235995025296  WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (CASE '-1618385851'  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END THEN v0.c0 END) ORDER BY ((((vt0.c1 COLLATE RTRIM)OR(((vt0.c0)>(v0.c0)))))OR(CASE 0.8850235995025296  WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE '-1618385851'  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END THEN v0.c0 END) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((((vt0.c1 COLLATE RTRIM)OR(((vt0.c0)>(v0.c0)))))OR(CASE 0.8850235995025296  WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (CASE '-1618385851'  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END THEN v0.c0 END) ORDER BY ((((vt0.c1 COLLATE RTRIM)OR(((vt0.c0)>(v0.c0)))))OR(CASE 0.8850235995025296  WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT * FROM v0 WHERE (((json_array(v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)) ORDER BY ((((((((((x'')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array(v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((((((x'')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(v0.c0)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((json_array(v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)) ORDER BY ((((((((((x'')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(v0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array(v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((((((x'')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(v0.c0)) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((json_array(v0.c0, v0.c0, v0.c0, v0.c0)) NOT NULL)) ORDER BY ((((((((((x'')OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(v0.c0)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS NUMERIC))));
SELECT * FROM vt0 WHERE (0.051698818929906354);
SELECT SUM(count) FROM (SELECT ((0.051698818929906354) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.051698818929906354);
SELECT SUM(count) FROM (SELECT ((0.051698818929906354) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.051698818929906354);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)*(v0.c0)) IN (((x'0d8c') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)*(v0.c0)) IN (((x'0d8c') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)*(v0.c0)) IN (((x'0d8c') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)*(v0.c0)) IN (((x'0d8c') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)*(v0.c0)) IN (((x'0d8c') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'');
SELECT * FROM vt0 WHERE ((((vt0.c1) NOTNULL) IN ())) ORDER BY (((x'bacf' IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((x'bacf' IN ())) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1) NOTNULL) IN ())) ORDER BY (((x'bacf' IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((x'bacf' IN ())) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1) NOTNULL) IN ())) ORDER BY (((x'bacf' IN ())) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (ABS(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c1)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (ABS(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c1)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (ABS(vt0.c1));
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((x'f99a')OR(vt0.c0)))OR(v0.c0)))AND(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(v0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'f99a')OR(vt0.c0)))OR(v0.c0)))AND(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(v0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((x'f99a')OR(vt0.c0)))OR(v0.c0)))AND(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(v0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((x'f99a')OR(vt0.c0)))OR(v0.c0)))AND(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(v0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((x'f99a')OR(vt0.c0)))OR(v0.c0)))AND(((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR(v0.c0 COLLATE NOCASE)))OR((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0)<(v0.c0)) END) ORDER BY ((((((((((0.08787843837398024)>>(vt0.c0)))AND('0.1651809767308383')))AND(CAST(vt0.c1 AS BLOB))))AND((v0.c0 IN (v0.c0)))))AND((('')>>(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0)<(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((0.08787843837398024)>>(vt0.c0)))AND('0.1651809767308383')))AND(CAST(vt0.c1 AS BLOB))))AND((v0.c0 IN (v0.c0)))))AND((('')>>(v0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0)<(v0.c0)) END) ORDER BY ((((((((((0.08787843837398024)>>(vt0.c0)))AND('0.1651809767308383')))AND(CAST(vt0.c1 AS BLOB))))AND((v0.c0 IN (v0.c0)))))AND((('')>>(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0)<(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((0.08787843837398024)>>(vt0.c0)))AND('0.1651809767308383')))AND(CAST(vt0.c1 AS BLOB))))AND((v0.c0 IN (v0.c0)))))AND((('')>>(v0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c1 THEN vt0.c0 ELSE ((vt0.c0)<(v0.c0)) END) ORDER BY ((((((((((0.08787843837398024)>>(vt0.c0)))AND('0.1651809767308383')))AND(CAST(vt0.c1 AS BLOB))))AND((v0.c0 IN (v0.c0)))))AND((('')>>(v0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((0X7b897246) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0X7b897246) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0X7b897246) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0X7b897246) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0X7b897246) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<=(v0.c0)))>=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0)))>=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<=(v0.c0)))>=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0)))>=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<=(v0.c0)))>=(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c1, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, v0.c0)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c1, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY NULL);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c1, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, v0.c0)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c1, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY NULL);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((vt0.c1, vt0.c0, vt0.c0))!=((v0.c0, vt0.c0, v0.c0)))))) ORDER BY NULL;
SELECT * FROM v0, vt0 WHERE (CAST(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) AS INTEGER)) ORDER BY '-870560130'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY '-870560130'  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) AS INTEGER)) ORDER BY '-870560130'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY '-870560130'  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) AS INTEGER)) ORDER BY '-870560130'  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((UNLIKELY(DISTINCT v0.c0)) ISNULL)) ORDER BY ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT v0.c0)) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE BINARY DESC);
SELECT * FROM v0, vt0 WHERE (((UNLIKELY(DISTINCT v0.c0)) ISNULL)) ORDER BY ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT v0.c0)) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE BINARY DESC);
SELECT * FROM v0, vt0 WHERE (((UNLIKELY(DISTINCT v0.c0)) ISNULL)) ORDER BY ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) COLLATE BINARY DESC;
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)OR(575483905)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.47365943873805694, vt0.c1, 0.8254239805816753))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(575483905)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.47365943873805694, vt0.c1, 0.8254239805816753)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)OR(575483905)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.47365943873805694, vt0.c1, 0.8254239805816753))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(575483905)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.47365943873805694, vt0.c1, 0.8254239805816753)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0)OR(575483905)))AND((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.47365943873805694, vt0.c1, 0.8254239805816753))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS BLOB))<=(LIKELIHOOD('800439288', 0.3904370870420437)))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))<=(LIKELIHOOD('800439288', 0.3904370870420437)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS BLOB))<=(LIKELIHOOD('800439288', 0.3904370870420437)))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))<=(LIKELIHOOD('800439288', 0.3904370870420437)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS BLOB))<=(LIKELIHOOD('800439288', 0.3904370870420437)))) ORDER BY v0.c0;
SELECT ALL * FROM vt0, v0 WHERE (json_type((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json_type((v0.c0 IN ()))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (json_type((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json_type((v0.c0 IN ()))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (json_type((v0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('E!i揗') IS FALSE))<=(((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('E!i揗') IS FALSE))<=(((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('E!i揗') IS FALSE))<=(((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('E!i揗') IS FALSE))<=(((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('E!i揗') IS FALSE))<=(((vt0.c1)<(vt0.c1)))));
SELECT * FROM v0 CROSS JOIN vt0 ON (NOT ((v0.c0 IN ()))) WHERE ((+ (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NOT ((v0.c0 IN ()))));
SELECT * FROM v0 CROSS JOIN vt0 ON (NOT ((v0.c0 IN ()))) WHERE ((+ (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NOT ((v0.c0 IN ()))));
SELECT * FROM v0 CROSS JOIN vt0 ON (NOT ((v0.c0 IN ()))) WHERE ((+ (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('-980738150');
SELECT SUM(count) FROM (SELECT ALL (('-980738150') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('-980738150');
SELECT SUM(count) FROM (SELECT ALL (('-980738150') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('-980738150');
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY);
SELECT * FROM v0 WHERE (-1364816264);
SELECT SUM(count) FROM (SELECT ALL ((-1364816264) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (-1364816264);
SELECT SUM(count) FROM (SELECT ALL ((-1364816264) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (-1364816264);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((((vt0.c1)OR(vt0.c1)))AND(2010524402)))OR(STRFTIME(vt0.c0, vt0.c1, x'', vt0.c0, v0.c0))))OR((((vt0.c0)) BETWEEN (('0.43733925081578895')) AND ((vt0.c0))))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)OR(vt0.c1)))AND(2010524402)))OR(STRFTIME(vt0.c0, vt0.c1, x'', vt0.c0, v0.c0))))OR((((vt0.c0)) BETWEEN (('0.43733925081578895')) AND ((vt0.c0))))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((((vt0.c1)OR(vt0.c1)))AND(2010524402)))OR(STRFTIME(vt0.c0, vt0.c1, x'', vt0.c0, v0.c0))))OR((((vt0.c0)) BETWEEN (('0.43733925081578895')) AND ((vt0.c0))))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)OR(vt0.c1)))AND(2010524402)))OR(STRFTIME(vt0.c0, vt0.c1, x'', vt0.c0, v0.c0))))OR((((vt0.c0)) BETWEEN (('0.43733925081578895')) AND ((vt0.c0))))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((((vt0.c1)OR(vt0.c1)))AND(2010524402)))OR(STRFTIME(vt0.c0, vt0.c1, x'', vt0.c0, v0.c0))))OR((((vt0.c0)) BETWEEN (('0.43733925081578895')) AND ((vt0.c0))))))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1)));
SELECT COUNT(*) FROM v0 WHERE (0xffffffffc10f7cf3) ORDER BY (NOT (v0.c0 COLLATE NOCASE)), (((- (v0.c0)))GLOB((((v0.c0, v0.c0, v0.c0, v0.c0, 0X196114f5)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))) ASC, CAST(CAST(v0.c0 AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((0Xffffffffc10f7cf3) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0 COLLATE NOCASE)), (((- (v0.c0)))GLOB((((v0.c0, v0.c0, v0.c0, v0.c0, 0X196114f5)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))) ASC, CAST(CAST(v0.c0 AS INTEGER) AS TEXT) ASC);
SELECT COUNT(*) FROM v0 WHERE (0xffffffffc10f7cf3) ORDER BY (NOT (v0.c0 COLLATE NOCASE)), (((- (v0.c0)))GLOB((((v0.c0, v0.c0, v0.c0, v0.c0, 0X196114f5)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))) ASC, CAST(CAST(v0.c0 AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((0Xffffffffc10f7cf3) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0 COLLATE NOCASE)), (((- (v0.c0)))GLOB((((v0.c0, v0.c0, v0.c0, v0.c0, 0X196114f5)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))) ASC, CAST(CAST(v0.c0 AS INTEGER) AS TEXT) ASC);
SELECT COUNT(*) FROM v0 WHERE (0xffffffffc10f7cf3) ORDER BY (NOT (v0.c0 COLLATE NOCASE)), (((- (v0.c0)))GLOB((((v0.c0, v0.c0, v0.c0, v0.c0, 0X196114f5)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))) ASC, CAST(CAST(v0.c0 AS INTEGER) AS TEXT) ASC;
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c1)) AND (TYPEOF(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c1)) AND (TYPEOF(vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c1)) AND (TYPEOF(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c1)) AND (TYPEOF(vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c1)) AND (TYPEOF(vt0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c1)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c1)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c1)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c1)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c1)))) AND (((vt0.c0 IN ())))));
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS BLOB));
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT NULL)) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT NULL)) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT NULL)) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT NULL)) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0) NOT NULL)) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT * FROM vt0 INNER JOIN v0 ON v0.c0 WHERE ((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((0.2372118097074476)IS NOT(vt0.c0)), vt0.c0, 'KR')) AND ((((vt0.c1)*(1629890823)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, 0.4637290542216488)))) ORDER BY x'd8b961f3';
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((0.2372118097074476)IS NOT(vt0.c0)), vt0.c0, 'KR')) AND ((((vt0.c1)*(1629890823)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, 0.4637290542216488)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON v0.c0 ORDER BY x'd8b961f3');
SELECT * FROM vt0 INNER JOIN v0 ON v0.c0 WHERE ((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((0.2372118097074476)IS NOT(vt0.c0)), vt0.c0, 'KR')) AND ((((vt0.c1)*(1629890823)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, 0.4637290542216488)))) ORDER BY x'd8b961f3';
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((0.2372118097074476)IS NOT(vt0.c0)), vt0.c0, 'KR')) AND ((((vt0.c1)*(1629890823)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, 0.4637290542216488)))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON v0.c0 ORDER BY x'd8b961f3');
SELECT * FROM vt0 INNER JOIN v0 ON v0.c0 WHERE ((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((0.2372118097074476)IS NOT(vt0.c0)), vt0.c0, 'KR')) AND ((((vt0.c1)*(1629890823)), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, 0.4637290542216488)))) ORDER BY x'd8b961f3';
SELECT * FROM vt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))OR(0.8405300751122875)))OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(vt0.c1)))OR(0.8405300751122875)))OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))OR(0.8405300751122875)))OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(vt0.c1)))OR(0.8405300751122875)))OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))OR(0.8405300751122875)))OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE ((- (QUOTE(v0.c0)))) ORDER BY ((((v0.c0 COLLATE RTRIM)AND(((v0.c0)>(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((- (QUOTE(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE RTRIM)AND(((v0.c0)>(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM v0 WHERE ((- (QUOTE(v0.c0)))) ORDER BY ((((v0.c0 COLLATE RTRIM)AND(((v0.c0)>(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((- (QUOTE(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE RTRIM)AND(((v0.c0)>(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM v0 WHERE ((- (QUOTE(v0.c0)))) ORDER BY ((((v0.c0 COLLATE RTRIM)AND(((v0.c0)>(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) DESC;
SELECT ALL * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0);
SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))=((((v0.c0)*(v0.c0)))))) ORDER BY (+ (v0.c0)), ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS TEXT)))==((((v0.c0)*(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)), ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))=((((v0.c0)*(v0.c0)))))) ORDER BY (+ (v0.c0)), ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS TEXT)))==((((v0.c0)*(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)), ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((CAST(v0.c0 AS TEXT)))=((((v0.c0)*(v0.c0)))))) ORDER BY (+ (v0.c0)), ((v0.c0 IN (v0.c0, v0.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (((NULL)AND((((vt0.c1))>=((v0.c0)))))) ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN ((((vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, v0.c0)))) AND (((v0.c0)=(vt0.c0)))) DESC, (((vt0.c1)) NOT BETWEEN ((((v0.c0)OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)AND((((vt0.c1))>=((v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN ((((vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, v0.c0)))) AND (((v0.c0)=(vt0.c0)))) DESC, (((vt0.c1)) NOT BETWEEN ((((v0.c0)OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1))))) DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((NULL)AND((((vt0.c1))>=((v0.c0)))))) ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN ((((vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, v0.c0)))) AND (((v0.c0)=(vt0.c0)))) DESC, (((vt0.c1)) NOT BETWEEN ((((v0.c0)OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)AND((((vt0.c1))>=((v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN ((((vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, v0.c0)))) AND (((v0.c0)=(vt0.c0)))) DESC, (((vt0.c1)) NOT BETWEEN ((((v0.c0)OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1))))) DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (((NULL)AND((((vt0.c1))>=((v0.c0)))))) ORDER BY ((CAST(vt0.c1 AS REAL)) BETWEEN ((((vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, v0.c0)))) AND (((v0.c0)=(vt0.c0)))) DESC, (((vt0.c1)) NOT BETWEEN ((((v0.c0)OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1))))) DESC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE ((((((vt0.c1, v0.c0, v0.c0))==((v0.c0, NULL, vt0.c0))))GLOB((((vt0.c1)) NOT BETWEEN (('-1031061990')) AND ((vt0.c1)))))) ORDER BY CAST(v0.c0 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, v0.c0, v0.c0))==((v0.c0, NULL, vt0.c0))))GLOB((((vt0.c1)) NOT BETWEEN (('-1031061990')) AND ((vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS NUMERIC) DESC);
SELECT * FROM v0, vt0 WHERE ((((((vt0.c1, v0.c0, v0.c0))==((v0.c0, NULL, vt0.c0))))GLOB((((vt0.c1)) NOT BETWEEN (('-1031061990')) AND ((vt0.c1)))))) ORDER BY CAST(v0.c0 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, v0.c0, v0.c0))==((v0.c0, NULL, vt0.c0))))GLOB((((vt0.c1)) NOT BETWEEN (('-1031061990')) AND ((vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(v0.c0 AS NUMERIC) DESC);
SELECT * FROM v0, vt0 WHERE ((((((vt0.c1, v0.c0, v0.c0))==((v0.c0, NULL, vt0.c0))))GLOB((((vt0.c1)) NOT BETWEEN (('-1031061990')) AND ((vt0.c1)))))) ORDER BY CAST(v0.c0 AS NUMERIC) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(-1481013394))) ORDER BY ((PRINTF(vt0.c1, vt0.c1, vt0.c1)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(-1481013394))) IS TRUE)  as count FROM vt0 ORDER BY ((PRINTF(vt0.c1, vt0.c1, vt0.c1)) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(-1481013394))) ORDER BY ((PRINTF(vt0.c1, vt0.c1, vt0.c1)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(-1481013394))) IS TRUE)  as count FROM vt0 ORDER BY ((PRINTF(vt0.c1, vt0.c1, vt0.c1)) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<(-1481013394))) ORDER BY ((PRINTF(vt0.c1, vt0.c1, vt0.c1)) NOTNULL) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('W/')) AND (((- (vt0.c0)))))) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('W/')) AND (((- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('W/')) AND (((- (vt0.c0)))))) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('W/')) AND (((- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('W/')) AND (((- (vt0.c0)))))) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (+ (v0.c0)) ELSE (NOT (vt0.c0)) END) ORDER BY 87911539 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (+ (v0.c0)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY 87911539 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (+ (v0.c0)) ELSE (NOT (vt0.c0)) END) ORDER BY 87911539 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN (+ (v0.c0)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY 87911539 ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS FALSE)) ISNULL)) ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (NULL)))) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS FALSE)) ISNULL)) ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (NULL)))) DESC);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS FALSE)) ISNULL)) ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (NULL)))) DESC;
SELECT * FROM vt0, v0 WHERE (1.363395968E9 COLLATE NOCASE) ORDER BY ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1.363395968E9 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (1.363395968E9 COLLATE NOCASE) ORDER BY ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1.363395968E9 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (1.363395968E9 COLLATE NOCASE) ORDER BY ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(((vt0.c1)>>(0Xffffffffe207ce23))))) ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC, (((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('1380916463', STRFTIME(vt0.c0, vt0.c1, 0.1342750246184924, vt0.c1, x''), CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE, ((-2.53813881E8)<(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT), ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), ABS(DISTINCT vt0.c1), (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(((vt0.c1)>>(0Xffffffffe207ce23))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC, (((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('1380916463', STRFTIME(vt0.c0, vt0.c1, 0.1342750246184924, vt0.c1, x''), CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE, ((-2.53813881E8)<(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT), ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), ABS(DISTINCT vt0.c1), (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(((vt0.c1)>>(0Xffffffffe207ce23))))) ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC, (((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('1380916463', STRFTIME(vt0.c0, vt0.c1, 0.1342750246184924, vt0.c1, x''), CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE, ((-2.53813881E8)<(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT), ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), ABS(DISTINCT vt0.c1), (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(((vt0.c1)>>(0Xffffffffe207ce23))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC, (((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('1380916463', STRFTIME(vt0.c0, vt0.c1, 0.1342750246184924, vt0.c1, x''), CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE, ((-2.53813881E8)<(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT), ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), ABS(DISTINCT vt0.c1), (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(((vt0.c1)>>(0Xffffffffe207ce23))))) ORDER BY CASE WHEN NULL THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END DESC, (((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) BETWEEN (('1380916463', STRFTIME(vt0.c0, vt0.c1, 0.1342750246184924, vt0.c1, x''), CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE NOCASE, ((-2.53813881E8)<(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT), ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)), ABS(DISTINCT vt0.c1), (vt0.c0 IN ()), vt0.c1 COLLATE BINARY))) DESC;
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY NULL, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY NULL, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY NULL, CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOTNULL));
SELECT * FROM v0 WHERE ((((- (v0.c0))) IS TRUE)) ORDER BY IFNULL(v0.c0 COLLATE NOCASE, NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY IFNULL(v0.c0 COLLATE NOCASE, NULL)  NULLS FIRST);
SELECT * FROM v0 WHERE ((((- (v0.c0))) IS TRUE)) ORDER BY IFNULL(v0.c0 COLLATE NOCASE, NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY IFNULL(v0.c0 COLLATE NOCASE, NULL)  NULLS FIRST);
SELECT * FROM v0 WHERE ((((- (v0.c0))) IS TRUE)) ORDER BY IFNULL(v0.c0 COLLATE NOCASE, NULL)  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((((((((vt0.c1)|(v0.c0)))AND((vt0.c1 IN ()))))OR(TRIM(vt0.c0))))OR(((vt0.c1)<<(v0.c0)))))OR(((vt0.c0)>>(vt0.c1))))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)|(v0.c0)))AND((vt0.c1 IN ()))))OR(TRIM(vt0.c0))))OR(((vt0.c1)<<(v0.c0)))))OR(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE)));
SELECT * FROM v0, vt0 WHERE (((((((((((vt0.c1)|(v0.c0)))AND((vt0.c1 IN ()))))OR(TRIM(vt0.c0))))OR(((vt0.c1)<<(v0.c0)))))OR(((vt0.c0)>>(vt0.c1))))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)|(v0.c0)))AND((vt0.c1 IN ()))))OR(TRIM(vt0.c0))))OR(((vt0.c1)<<(v0.c0)))))OR(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE)));
SELECT * FROM v0, vt0 WHERE (((((((((((vt0.c1)|(v0.c0)))AND((vt0.c1 IN ()))))OR(TRIM(vt0.c0))))OR(((vt0.c1)<<(v0.c0)))))OR(((vt0.c0)>>(vt0.c1))))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0x53f9e75b);
SELECT SUM(count) FROM (SELECT ((0x53f9e75b) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0x53f9e75b);
SELECT SUM(count) FROM (SELECT ((0x53f9e75b) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0x53f9e75b);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0, v0 WHERE (0x4664177d);
SELECT SUM(count) FROM (SELECT ALL ((0X4664177d) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (0x4664177d);
SELECT SUM(count) FROM (SELECT ALL ((0X4664177d) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (0x4664177d);
SELECT COUNT(*) FROM vt0, v0 WHERE (HEX(((vt0.c0)LIKE(v0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0)LIKE(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (HEX(((vt0.c0)LIKE(v0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0)LIKE(v0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (HEX(((vt0.c0)LIKE(v0.c0))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)AND(v0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(v0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)AND(v0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(v0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)AND(v0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((((((v0.c0)OR(vt0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(vt0.c0)), (vt0.c1 IN ()))) AND (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), ((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((((((v0.c0)OR(vt0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(vt0.c0)), (vt0.c1 IN ()))) AND (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((((((v0.c0)OR(vt0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(vt0.c0)), (vt0.c1 IN ()))) AND (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), ((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((((((v0.c0)OR(vt0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(vt0.c0)), (vt0.c1 IN ()))) AND (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((((((v0.c0)OR(vt0.c0)))AND(v0.c0)), ((((v0.c0)OR(v0.c0)))OR(vt0.c0)), (vt0.c1 IN ()))) AND (((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), (((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))), ((vt0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (IFNULL(TRIM(vt0.c1), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) ORDER BY (- ((- (v0.c0)))), (((~ (vt0.c1)))+(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((((((((vt0.c1)OR(0Xffffffffca48316e)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(TRIM(vt0.c1), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM v0, vt0 ORDER BY (- ((- (v0.c0)))), (((~ (vt0.c1)))+(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((((((((vt0.c1)OR(0Xffffffffca48316e)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (IFNULL(TRIM(vt0.c1), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) ORDER BY (- ((- (v0.c0)))), (((~ (vt0.c1)))+(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((((((((vt0.c1)OR(0Xffffffffca48316e)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(TRIM(vt0.c1), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM v0, vt0 ORDER BY (- ((- (v0.c0)))), (((~ (vt0.c1)))+(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((((((((vt0.c1)OR(0Xffffffffca48316e)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (IFNULL(TRIM(vt0.c1), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)) ORDER BY (- ((- (v0.c0)))), (((~ (vt0.c1)))+(((((v0.c0)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((((((((vt0.c1)OR(0Xffffffffca48316e)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1)%(NULL)))=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(NULL)))=((- (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1)%(NULL)))=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(NULL)))=((- (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1)%(NULL)))=((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1)+(vt0.c1))) AND ((vt0.c1 IN (vt0.c0, vt0.c1))))) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1)+(vt0.c1))) AND ((vt0.c1 IN (vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1)+(vt0.c1))) AND ((vt0.c1 IN (vt0.c0, vt0.c1))))) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1)+(vt0.c1))) AND ((vt0.c1 IN (vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c1)+(vt0.c1))) AND ((vt0.c1 IN (vt0.c0, vt0.c1))))) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY ((((vt0.c1)==(vt0.c1)))AND(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)==(vt0.c1)))AND(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY ((((vt0.c1)==(vt0.c1)))AND(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)==(vt0.c1)))AND(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))) ORDER BY ((((vt0.c1)==(vt0.c1)))AND(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE RTRIM) IS TRUE) WHERE (((vt0.c0 IN (vt0.c1)) IN ())) ORDER BY (vt0.c1 IN (v0.c0, vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE RTRIM) IS TRUE) ORDER BY (vt0.c1 IN (v0.c0, vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE RTRIM) IS TRUE) WHERE (((vt0.c0 IN (vt0.c1)) IN ())) ORDER BY (vt0.c1 IN (v0.c0, vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE RTRIM) IS TRUE) ORDER BY (vt0.c1 IN (v0.c0, vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE RTRIM) IS TRUE) WHERE (((vt0.c0 IN (vt0.c1)) IN ())) ORDER BY (vt0.c1 IN (v0.c0, vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<=(v0.c0)))LIKE(CAST(v0.c0 AS TEXT)))) ORDER BY (+ (v0.c0));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0)))LIKE(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<=(v0.c0)))LIKE(CAST(v0.c0 AS TEXT)))) ORDER BY (+ (v0.c0));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<=(v0.c0)))LIKE(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)<=(v0.c0)))LIKE(CAST(v0.c0 AS TEXT)))) ORDER BY (+ (v0.c0));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, x'')) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, x'')) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, x'')) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, x'')) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, x'')) AND (((v0.c0) ISNULL))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c1))<((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)||(x'')))) WHERE (CASE v0.c0  WHEN (((v0.c0))<=((vt0.c0))) THEN ((v0.c0)-('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN (((v0.c0))<=((vt0.c0))) THEN ((v0.c0)-('')) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c1))<((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)||(x'')))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c1))<((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)||(x'')))) WHERE (CASE v0.c0  WHEN (((v0.c0))<=((vt0.c0))) THEN ((v0.c0)-('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN (((v0.c0))<=((vt0.c0))) THEN ((v0.c0)-('')) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c1))<((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)||(x'')))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c1))<((vt0.c1)))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)||(x'')))) WHERE (CASE v0.c0  WHEN (((v0.c0))<=((vt0.c0))) THEN ((v0.c0)-('')) END);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (ABS(DISTINCT (((v0.c0))==((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (((v0.c0))=((vt0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (ABS(DISTINCT (((v0.c0))==((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (((v0.c0))=((vt0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE (ABS(DISTINCT (((v0.c0))==((vt0.c1)))));
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0, 1828581247, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0, 1828581247, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0, 1828581247, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0, 1828581247, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN (((v0.c0, 1828581247, v0.c0))<=((v0.c0, v0.c0, v0.c0))) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((((v0.c0))>((vt0.c0))))) AND ((((v0.c0)OR(vt0.c0))))) WHERE (((v0.c0)*(vt0.c0)) COLLATE RTRIM) ORDER BY (- (((vt0.c1)LIKE(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)*(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((((v0.c0))>((vt0.c0))))) AND ((((v0.c0)OR(vt0.c0))))) ORDER BY (- (((vt0.c1)LIKE(vt0.c1))))  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((((v0.c0))>((vt0.c0))))) AND ((((v0.c0)OR(vt0.c0))))) WHERE (((v0.c0)*(vt0.c0)) COLLATE RTRIM) ORDER BY (- (((vt0.c1)LIKE(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)*(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((((v0.c0))>((vt0.c0))))) AND ((((v0.c0)OR(vt0.c0))))) ORDER BY (- (((vt0.c1)LIKE(vt0.c1))))  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((((v0.c0))>((vt0.c0))))) AND ((((v0.c0)OR(vt0.c0))))) WHERE (((v0.c0)*(vt0.c0)) COLLATE RTRIM) ORDER BY (- (((vt0.c1)LIKE(vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT vt0.c1) COLLATE NOCASE WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT vt0.c1) COLLATE NOCASE);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT vt0.c1) COLLATE NOCASE WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT vt0.c1) COLLATE NOCASE);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON LIKELY(DISTINCT vt0.c1) COLLATE NOCASE WHERE (vt0.c0);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))) COLLATE BINARY) ORDER BY CASE ((x'') NOT NULL)  WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c1 WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(v0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 END WHEN (- (v0.c0)) THEN CASE WHEN vt0.c1 THEN v0.c0 END WHEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN '0.09360247317590209' END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((x'') NOT NULL)  WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c1 WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(v0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 END WHEN (- (v0.c0)) THEN CASE WHEN vt0.c1 THEN v0.c0 END WHEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN '0.09360247317590209' END);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))) COLLATE BINARY) ORDER BY CASE ((x'') NOT NULL)  WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c1 WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(v0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 END WHEN (- (v0.c0)) THEN CASE WHEN vt0.c1 THEN v0.c0 END WHEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN '0.09360247317590209' END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((x'') NOT NULL)  WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c1 WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(v0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 END WHEN (- (v0.c0)) THEN CASE WHEN vt0.c1 THEN v0.c0 END WHEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN '0.09360247317590209' END);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))) COLLATE BINARY) ORDER BY CASE ((x'') NOT NULL)  WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN vt0.c1 COLLATE BINARY WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c1 WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))AND(v0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 END WHEN (- (v0.c0)) THEN CASE WHEN vt0.c1 THEN v0.c0 END WHEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN '0.09360247317590209' END;
SELECT ALL * FROM vt0, v0 WHERE (CAST(ABS(v0.c0) AS BLOB)) ORDER BY v0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(v0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(ABS(v0.c0) AS BLOB)) ORDER BY v0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(v0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(ABS(v0.c0) AS BLOB)) ORDER BY v0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((vt0.c1)<(vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)<(vt0.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((vt0.c1)<(vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)<(vt0.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((vt0.c1)<(vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)<<(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS TEXT) WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE ((v0.c0)/(v0.c0)) END) ORDER BY (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)<<(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS TEXT) WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE ((v0.c0)/(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)<<(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS TEXT) WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE ((v0.c0)/(v0.c0)) END) ORDER BY (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)<<(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS TEXT) WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE ((v0.c0)/(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c0)<<(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS TEXT) WHEN ((v0.c0) IS TRUE) THEN (v0.c0 IN (v0.c0)) ELSE ((v0.c0)/(v0.c0)) END) ORDER BY (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ());
