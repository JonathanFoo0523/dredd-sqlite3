-- Time: 2024/06/10 18:50:45
-- Database: database77
-- Database version: 3.40.0
-- seed value: 2794727577
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE TABLE IF NOT EXISTS t1 (c0 TEXT ); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT OR ABORT INTO rt0(c0) VALUES (0.6386829682648615), ('-2000727570'), (0.5645086157200604); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (0.5645086157200604, NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (NULL, x'534a'); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES ('-1051397642'), (x''), (0xffffffff88bf51ee); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT OR ABORT INTO t1 VALUES ('-2000727570'), (-1.051397642E9), (NULL); -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT DISTINCT FIRST_VALUE(((((rt0.c2)<(rt0.c2))) BETWEEN (((rt0.c2)>=(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) OVER (), rt0.c1, rt0.c0 FROM rt0; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('-1051397642', '1673173218', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, x'0a6e'); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES ('', '-0.0'); -- 2ms;
INSERT OR IGNORE INTO t0 VALUES (-2000727570), ('0.5645086157200604'), (0.4452409029986636); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('K'); -- 0ms;
ANALYZE; -- 0ms;
CREATE TEMP TABLE t84 (c0 BLOB , c1 REAL , c2 REAL ); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0.902632961854986, 0.7034204759764734, '-'), (-2000727570, '', -2000727570), (x'', x'7218', '-1015568621'), (NULL, '-1015568621', x''), (NULL, 1.673173218E9, NULL); -- 2ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('1673173218'), (x''), (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i20 ON t1(((c0 IN (c0)) IN ()) ASC); -- 0ms;
CREATE INDEX i60 ON t1(json_array_length(((c0)GLOB(c0)))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c2; -- 4ms;
INSERT OR FAIL INTO t1 VALUES (x'33b6'); -- 1ms;
DROP TABLE t1; -- 0ms;
DELETE FROM sqlite_stat1; -- 8ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (0Xffffffffde1dad8c, 0.5568197254585902, 0.12112990534784185); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('~避M', -1.051397642E9, x'b7b43134'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('\nK<lPN'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('0.4452409029986636'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1452267736);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 7ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES ('1309063935', x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
DELETE FROM rt0; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (0xffffffffc154f1f6, 1.639157887E9); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.5657231463084545); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.2677823892731166, ''); -- 0ms;
COMMIT TRANSACTION; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0, rt0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM v0, rt0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0, rt0.c1)))) AND (((('') ISNULL))))) ORDER BY (rt0.c0 IN (0xffffffff88bf51ee)) COLLATE NOCASE, ((((((rt0.c2)OR(vt0.c0)))OR(CAST(rt0.c2 AS BLOB))))AND(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))) ASC, ((rt0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0, rt0.c1)))) AND (((('') ISNULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN (0xffffffff88bf51ee)) COLLATE NOCASE, ((((((rt0.c2)OR(vt0.c0)))OR(CAST(rt0.c2 AS BLOB))))AND(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))) ASC, ((rt0.c0 COLLATE BINARY) IS FALSE));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0, rt0.c1)))) AND (((('') ISNULL))))) ORDER BY (rt0.c0 IN (0xffffffff88bf51ee)) COLLATE NOCASE, ((((((rt0.c2)OR(vt0.c0)))OR(CAST(rt0.c2 AS BLOB))))AND(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))) ASC, ((rt0.c0 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0, rt0.c1)))) AND (((('') ISNULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN (0xffffffff88bf51ee)) COLLATE NOCASE, ((((((rt0.c2)OR(vt0.c0)))OR(CAST(rt0.c2 AS BLOB))))AND(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))) ASC, ((rt0.c0 COLLATE BINARY) IS FALSE));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c0, rt0.c1)))) AND (((('') ISNULL))))) ORDER BY (rt0.c0 IN (0xffffffff88bf51ee)) COLLATE NOCASE, ((((((rt0.c2)OR(vt0.c0)))OR(CAST(rt0.c2 AS BLOB))))AND(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))) ASC, ((rt0.c0 COLLATE BINARY) IS FALSE);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST((rt0.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST((rt0.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST((rt0.c2 IN ()) AS REAL));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST(rt0.c1 AS TEXT))%(((vt0.c0) NOTNULL)))) ORDER BY ((CAST(v0.c0 AS NUMERIC))/(((rt0.c0)LIKE(v0.c2)))) DESC  NULLS FIRST, (((((vt0.c0)>>(rt0.c1))))!=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))%(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CAST(v0.c0 AS NUMERIC))/(((rt0.c0)LIKE(v0.c2)))) DESC  NULLS FIRST, (((((vt0.c0)>>(rt0.c1))))!=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST(rt0.c1 AS TEXT))%(((vt0.c0) NOTNULL)))) ORDER BY ((CAST(v0.c0 AS NUMERIC))/(((rt0.c0)LIKE(v0.c2)))) DESC  NULLS FIRST, (((((vt0.c0)>>(rt0.c1))))!=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))%(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CAST(v0.c0 AS NUMERIC))/(((rt0.c0)LIKE(v0.c2)))) DESC  NULLS FIRST, (((((vt0.c0)>>(rt0.c1))))!=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((CAST(rt0.c1 AS TEXT))%(((vt0.c0) NOTNULL)))) ORDER BY ((CAST(v0.c0 AS NUMERIC))/(((rt0.c0)LIKE(v0.c2)))) DESC  NULLS FIRST, (((((vt0.c0)>>(rt0.c1))))!=((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((((v0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((((v0.c0) IS TRUE))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((((v0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((((v0.c0) IS TRUE))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((((v0.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY ((((((((((v0.c1) BETWEEN (vt0.c0) AND (NULL)))AND(((v0.c2)LIKE(vt0.c0)))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))))OR(IFNULL(DISTINCT NULL, v0.c1))))OR('714732536')), ((v0.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((v0.c1) BETWEEN (vt0.c0) AND (NULL)))AND(((v0.c2)LIKE(vt0.c0)))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))))OR(IFNULL(DISTINCT NULL, v0.c1))))OR('714732536')), ((v0.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY ((((((((((v0.c1) BETWEEN (vt0.c0) AND (NULL)))AND(((v0.c2)LIKE(vt0.c0)))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))))OR(IFNULL(DISTINCT NULL, v0.c1))))OR('714732536')), ((v0.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((v0.c1) BETWEEN (vt0.c0) AND (NULL)))AND(((v0.c2)LIKE(vt0.c0)))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))))OR(IFNULL(DISTINCT NULL, v0.c1))))OR('714732536')), ((v0.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c1) ORDER BY ((((((((((v0.c1) BETWEEN (vt0.c0) AND (NULL)))AND(((v0.c2)LIKE(vt0.c0)))))OR((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))))OR(IFNULL(DISTINCT NULL, v0.c1))))OR('714732536')), ((v0.c0 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CASE ((vt0.c0)>=(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)>((~ (rt0.c0)))) FULL OUTER JOIN v0 ON v0.c1 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)>((~ (rt0.c0)))) FULL OUTER JOIN v0 ON v0.c1 ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)>((~ (rt0.c0)))) FULL OUTER JOIN v0 ON v0.c1 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)>((~ (rt0.c0)))) FULL OUTER JOIN v0 ON v0.c1 ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)>((~ (rt0.c0)))) FULL OUTER JOIN v0 ON v0.c1 WHERE ((CAST(vt0.c0 AS INTEGER) IN ())) ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE NOCASE;
SELECT COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON CASE v0.c1 COLLATE BINARY  WHEN (0.5568197254585902 IN (v0.c0)) THEN vt0.c0 WHEN UPPER(DISTINCT v0.c1) THEN (v0.c1 IN ()) WHEN (((x'', v0.c0, rt0.c2)) NOT BETWEEN ((v0.c2, vt0.c0, v0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN rt0.c1 COLLATE BINARY ELSE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(v0.c1)) END WHERE ((((v0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE v0.c2  WHEN v0.c1 THEN rt0.c2 END)))) ORDER BY CAST((v0.c2 IN ()) AS BLOB) ASC  NULLS LAST, TRIM(DISTINCT (((v0.c1))==((rt0.c2))), '1673173218') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE v0.c2  WHEN v0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON CASE v0.c1 COLLATE BINARY  WHEN (0.5568197254585902 IN (v0.c0)) THEN vt0.c0 WHEN UPPER(DISTINCT v0.c1) THEN (v0.c1 IN ()) WHEN (((x'', v0.c0, rt0.c2)) NOT BETWEEN ((v0.c2, vt0.c0, v0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN rt0.c1 COLLATE BINARY ELSE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(v0.c1)) END ORDER BY CAST((v0.c2 IN ()) AS BLOB) ASC  NULLS LAST, TRIM(DISTINCT (((v0.c1))=((rt0.c2))), '1673173218') DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON CASE v0.c1 COLLATE BINARY  WHEN (0.5568197254585902 IN (v0.c0)) THEN vt0.c0 WHEN UPPER(DISTINCT v0.c1) THEN (v0.c1 IN ()) WHEN (((x'', v0.c0, rt0.c2)) NOT BETWEEN ((v0.c2, vt0.c0, v0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN rt0.c1 COLLATE BINARY ELSE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(v0.c1)) END WHERE ((((v0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE v0.c2  WHEN v0.c1 THEN rt0.c2 END)))) ORDER BY CAST((v0.c2 IN ()) AS BLOB) ASC  NULLS LAST, TRIM(DISTINCT (((v0.c1))==((rt0.c2))), '1673173218') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE v0.c2  WHEN v0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON CASE v0.c1 COLLATE BINARY  WHEN (0.5568197254585902 IN (v0.c0)) THEN vt0.c0 WHEN UPPER(DISTINCT v0.c1) THEN (v0.c1 IN ()) WHEN (((x'', v0.c0, rt0.c2)) NOT BETWEEN ((v0.c2, vt0.c0, v0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN rt0.c1 COLLATE BINARY ELSE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(v0.c1)) END ORDER BY CAST((v0.c2 IN ()) AS BLOB) ASC  NULLS LAST, TRIM(DISTINCT (((v0.c1))=((rt0.c2))), '1673173218') DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN rt0 ON CASE v0.c1 COLLATE BINARY  WHEN (0.5568197254585902 IN (v0.c0)) THEN vt0.c0 WHEN UPPER(DISTINCT v0.c1) THEN (v0.c1 IN ()) WHEN (((x'', v0.c0, rt0.c2)) NOT BETWEEN ((v0.c2, vt0.c0, v0.c1)) AND ((vt0.c0, vt0.c0, rt0.c0))) THEN rt0.c1 COLLATE BINARY ELSE ((((((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(v0.c1)) END WHERE ((((v0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE v0.c2  WHEN v0.c1 THEN rt0.c2 END)))) ORDER BY CAST((v0.c2 IN ()) AS BLOB) ASC  NULLS LAST, TRIM(DISTINCT (((v0.c1))==((rt0.c2))), '1673173218') DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c1) AND (0.12347729382489059))) IS TRUE)) ORDER BY CAST(((((((((v0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c2)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (v0.c1) AND (0.12347729382489059))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((((((((v0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c2)) AS TEXT) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c1) AND (0.12347729382489059))) IS TRUE)) ORDER BY CAST(((((((((v0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c2)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (v0.c1) AND (0.12347729382489059))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((((((((v0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c2)) AS TEXT) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c1) AND (0.12347729382489059))) IS TRUE)) ORDER BY CAST(((((((((v0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c2)) AS TEXT) DESC;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c2)IS NOT(vt0.c0)))=(((((vt0.c0)AND(vt0.c0)))OR(v0.c2)))) WHERE (((CASE WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)) IN (v0.c0)) DESC, v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c2)IS NOT(vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))OR(v0.c2)))) ORDER BY (((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)) IN (v0.c0)) DESC, v0.c2  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c2)IS NOT(vt0.c0)))=(((((vt0.c0)AND(vt0.c0)))OR(v0.c2)))) WHERE (((CASE WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)) IN (v0.c0)) DESC, v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c2)IS NOT(vt0.c0)))==(((((vt0.c0)AND(vt0.c0)))OR(v0.c2)))) ORDER BY (((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)) IN (v0.c0)) DESC, v0.c2  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c2)IS NOT(vt0.c0)))=(((((vt0.c0)AND(vt0.c0)))OR(v0.c2)))) WHERE (((CASE WHEN v0.c1 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((v0.c2) BETWEEN (v0.c0) AND (vt0.c0)) IN (v0.c0)) DESC, v0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((x''))) WHERE (((((((vt0.c0)AND(NULL)))OR(rt0.c2))) IS TRUE)) ORDER BY 0x6fd67161 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(NULL)))OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((x''))) ORDER BY 0x6fd67161 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((x''))) WHERE (((((((vt0.c0)AND(NULL)))OR(rt0.c2))) IS TRUE)) ORDER BY 0x6fd67161 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(NULL)))OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((x''))) ORDER BY 0x6fd67161 ASC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN ((((v0.c1))>=((v0.c2)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((0x568fd8d8 IN ())) ORDER BY CAST(v0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0X568fd8d8 IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN ((((v0.c1))>=((v0.c2)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY CAST(v0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN ((((v0.c1))>=((v0.c2)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((0x568fd8d8 IN ())) ORDER BY CAST(v0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0X568fd8d8 IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN ((((v0.c1))>=((v0.c2)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY CAST(v0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((v0.c0 COLLATE BINARY) NOT BETWEEN ((((v0.c1))>=((v0.c2)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) WHERE ((0x568fd8d8 IN ())) ORDER BY CAST(v0.c2 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((((0.7288302455910045)AND('1681621364')))OR(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((0.7288302455910045)AND('1681621364')))OR(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((((0.7288302455910045)AND('1681621364')))OR(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((0.7288302455910045)AND('1681621364')))OR(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((((0.7288302455910045)AND('1681621364')))OR(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c2))) END);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(vt0.c0))))));
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT ALL * FROM v0, vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN vt0.c0 END)GLOB(LAST_INSERT_ROWID())) WHERE (((((CAST(v0.c0 AS NUMERIC))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE v0.c2 END)))AND(((vt0.c0) NOTNULL)))) ORDER BY ((rt0.c1 COLLATE RTRIM) BETWEEN ((((vt0.c0))<((v0.c2)))) AND ((vt0.c0 IN (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS NUMERIC))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE v0.c2 END)))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN vt0.c0 END)GLOB(LAST_INSERT_ROWID())) ORDER BY ((rt0.c1 COLLATE RTRIM) BETWEEN ((((vt0.c0))<((v0.c2)))) AND ((vt0.c0 IN (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN vt0.c0 END)GLOB(LAST_INSERT_ROWID())) WHERE (((((CAST(v0.c0 AS NUMERIC))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE v0.c2 END)))AND(((vt0.c0) NOTNULL)))) ORDER BY ((rt0.c1 COLLATE RTRIM) BETWEEN ((((vt0.c0))<((v0.c2)))) AND ((vt0.c0 IN (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS NUMERIC))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE v0.c2 END)))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN vt0.c0 END)GLOB(LAST_INSERT_ROWID())) ORDER BY ((rt0.c1 COLLATE RTRIM) BETWEEN ((((vt0.c0))<((v0.c2)))) AND ((vt0.c0 IN (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN vt0.c0 END)GLOB(LAST_INSERT_ROWID())) WHERE (((((CAST(v0.c0 AS NUMERIC))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE v0.c2 END)))AND(((vt0.c0) NOTNULL)))) ORDER BY ((rt0.c1 COLLATE RTRIM) BETWEEN ((((vt0.c0))<((v0.c2)))) AND ((vt0.c0 IN (rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE WHERE (((((NULL)OR((+ (rt0.c1)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((+ (rt0.c1)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE WHERE (((((NULL)OR((+ (rt0.c1)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((+ (rt0.c1)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON LAST_INSERT_ROWID() COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE WHERE (((((NULL)OR((+ (rt0.c1)))))OR((vt0.c0 IN ()))));
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c2)&(rt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0)=(IFNULL(DISTINCT rt0.c0, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)&(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((vt0.c0)==(IFNULL(DISTINCT rt0.c0, rt0.c1)))  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c2)&(rt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0)=(IFNULL(DISTINCT rt0.c0, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)&(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((vt0.c0)==(IFNULL(DISTINCT rt0.c0, rt0.c1)))  NULLS FIRST);
SELECT * FROM vt0, rt0, v0 WHERE (((rt0.c2)&(rt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0)=(IFNULL(DISTINCT rt0.c0, rt0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c2)LIKE(v0.c2)))AND(((0.1843969737286132)*(v0.c1)))))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))) ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)-(((v0.c2)>(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)LIKE(v0.c2)))AND(((0.1843969737286132)*(v0.c1)))))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)-(((v0.c2)>(v0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c2)LIKE(v0.c2)))AND(((0.1843969737286132)*(v0.c1)))))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))) ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)-(((v0.c2)>(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)LIKE(v0.c2)))AND(((0.1843969737286132)*(v0.c1)))))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)-(((v0.c2)>(v0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c2)LIKE(v0.c2)))AND(((0.1843969737286132)*(v0.c1)))))OR(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END))) ORDER BY ((CASE v0.c1  WHEN vt0.c0 THEN v0.c2 ELSE v0.c2 END)-(((v0.c2)>(v0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((('')AND(rt0.c2)))AND(DATETIME(rt0.c2, v0.c0, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(rt0.c2)))AND(DATETIME(rt0.c2, v0.c0, NULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((('')AND(rt0.c2)))AND(DATETIME(rt0.c2, v0.c0, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(rt0.c2)))AND(DATETIME(rt0.c2, v0.c0, NULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((('')AND(rt0.c2)))AND(DATETIME(rt0.c2, v0.c0, NULL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)/(((vt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)/(((vt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)/(((vt0.c0)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)/(((vt0.c0)AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)/(((vt0.c0)AND(rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (CAST((NOT (rt0.c2)) AS BLOB)) ORDER BY (- (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (rt0.c0)) ASC);
SELECT * FROM rt0, vt0 WHERE (CAST((NOT (rt0.c2)) AS BLOB)) ORDER BY (- (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (rt0.c0)) ASC);
SELECT * FROM rt0, vt0 WHERE (CAST((NOT (rt0.c2)) AS BLOB)) ORDER BY (- (rt0.c0)) ASC;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0, v0.c0, v0.c2, vt0.c0, vt0.c0)) BETWEEN ((v0.c2, vt0.c0, v0.c0, v0.c2, v0.c1)) AND ((vt0.c0, NULL, v0.c0, v0.c0, v0.c0))) IN (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((((0.5884040948340463)IS(vt0.c0))) BETWEEN (((vt0.c0)<(v0.c2))) AND (((0.5645086157200604)|(0.902632961854986))))) ORDER BY ((((v0.c2)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.5884040948340463)IS(vt0.c0))) BETWEEN (((vt0.c0)<(v0.c2))) AND (((0.5645086157200604)|(0.902632961854986))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0, v0.c0, v0.c2, vt0.c0, vt0.c0)) BETWEEN ((v0.c2, vt0.c0, v0.c0, v0.c2, v0.c1)) AND ((vt0.c0, NULL, v0.c0, v0.c0, v0.c0))) IN (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ORDER BY ((((v0.c2)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0, v0.c0, v0.c2, vt0.c0, vt0.c0)) BETWEEN ((v0.c2, vt0.c0, v0.c0, v0.c2, v0.c1)) AND ((vt0.c0, NULL, v0.c0, v0.c0, v0.c0))) IN (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((((0.5884040948340463)IS(vt0.c0))) BETWEEN (((vt0.c0)<(v0.c2))) AND (((0.5645086157200604)|(0.902632961854986))))) ORDER BY ((((v0.c2)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.5884040948340463)IS(vt0.c0))) BETWEEN (((vt0.c0)<(v0.c2))) AND (((0.5645086157200604)|(0.902632961854986))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0, v0.c0, v0.c2, vt0.c0, vt0.c0)) BETWEEN ((v0.c2, vt0.c0, v0.c0, v0.c2, v0.c1)) AND ((vt0.c0, NULL, v0.c0, v0.c0, v0.c0))) IN (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) ORDER BY ((((v0.c2)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0, v0.c0, v0.c2, vt0.c0, vt0.c0)) BETWEEN ((v0.c2, vt0.c0, v0.c0, v0.c2, v0.c1)) AND ((vt0.c0, NULL, v0.c0, v0.c0, v0.c0))) IN (CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((((0.5884040948340463)IS(vt0.c0))) BETWEEN (((vt0.c0)<(v0.c2))) AND (((0.5645086157200604)|(0.902632961854986))))) ORDER BY ((((v0.c2)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((json(rt0.c2))>>(v0.c1)) CROSS JOIN rt0 ON '0.7288302455910045' WHERE (((rt0.c2 IN (rt0.c1)) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c1)) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((json(rt0.c2))>>(v0.c1)) CROSS JOIN rt0 ON '0.7288302455910045');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((json(rt0.c2))>>(v0.c1)) CROSS JOIN rt0 ON '0.7288302455910045' WHERE (((rt0.c2 IN (rt0.c1)) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c1)) IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((json(rt0.c2))>>(v0.c1)) CROSS JOIN rt0 ON '0.7288302455910045');
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c1) ISNULL), v0.c2 COLLATE RTRIM, ((((v0.c1)OR(v0.c0)))AND(v0.c0)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))<((TIME(v0.c1, v0.c0, v0.c0), (((v0.c1))<((v0.c0))), NULL, v0.c0 COLLATE RTRIM, ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c1) ISNULL), v0.c2 COLLATE RTRIM, ((((v0.c1)OR(v0.c0)))AND(v0.c0)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))<((TIME(v0.c1, v0.c0, v0.c0), (((v0.c1))<((v0.c0))), NULL, v0.c0 COLLATE RTRIM, ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c1) ISNULL), v0.c2 COLLATE RTRIM, ((((v0.c1)OR(v0.c0)))AND(v0.c0)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))<((TIME(v0.c1, v0.c0, v0.c0), (((v0.c1))<((v0.c0))), NULL, v0.c0 COLLATE RTRIM, ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c1) ISNULL), v0.c2 COLLATE RTRIM, ((((v0.c1)OR(v0.c0)))AND(v0.c0)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))<((TIME(v0.c1, v0.c0, v0.c0), (((v0.c1))<((v0.c0))), NULL, v0.c0 COLLATE RTRIM, ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c1) ISNULL), v0.c2 COLLATE RTRIM, ((((v0.c1)OR(v0.c0)))AND(v0.c0)), ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), ((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))<((TIME(v0.c1, v0.c0, v0.c0), (((v0.c1))<((v0.c0))), NULL, v0.c0 COLLATE RTRIM, ((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (HEX(((((vt0.c0)OR(0.6713057850939063)))AND(vt0.c0)))) ORDER BY json_object((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)AND(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(((((vt0.c0)OR(0.6713057850939063)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY json_object((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)AND(vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (HEX(((((vt0.c0)OR(0.6713057850939063)))AND(vt0.c0)))) ORDER BY json_object((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)AND(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(((((vt0.c0)OR(0.6713057850939063)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY json_object((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)AND(vt0.c0)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((('1897142689')<<((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((('1897142689')<<((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('1897142689')<<((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((('1897142689')<<((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('1897142689')<<((((vt0.c0))>((vt0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE (((v0.c1)*(((v0.c0) NOT BETWEEN (v0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((v0.c1)*(((v0.c0) NOT BETWEEN (v0.c1) AND (NULL))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c1)*(((v0.c0) NOT BETWEEN (v0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((v0.c1)*(((v0.c0) NOT BETWEEN (v0.c1) AND (NULL))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c1)*(((v0.c0) NOT BETWEEN (v0.c1) AND (NULL)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (v0.c1)));
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT(((rt0.c0)LIKE(v0.c0))))) ORDER BY x'' ASC, CAST((rt0.c2 IN (v0.c2)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))IS NOT(((rt0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY x'' ASC, CAST((rt0.c2 IN (v0.c2)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT(((rt0.c0)LIKE(v0.c0))))) ORDER BY x'' ASC, CAST((rt0.c2 IN (v0.c2)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))IS NOT(((rt0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY x'' ASC, CAST((rt0.c2 IN (v0.c2)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT(((rt0.c0)LIKE(v0.c0))))) ORDER BY x'' ASC, CAST((rt0.c2 IN (v0.c2)) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NULL IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c1, NULL))==((rt0.c0, rt0.c1, rt0.c2))))OR((rt0.c2 IN ())))) ORDER BY rt0.c1 DESC  NULLS LAST, (~ ('-1192084732')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c1, NULL))==((rt0.c0, rt0.c1, rt0.c2))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS LAST, (~ ('-1192084732')) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c1, NULL))==((rt0.c0, rt0.c1, rt0.c2))))OR((rt0.c2 IN ())))) ORDER BY rt0.c1 DESC  NULLS LAST, (~ ('-1192084732')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c1, NULL))==((rt0.c0, rt0.c1, rt0.c2))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS LAST, (~ ('-1192084732')) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c1, NULL))==((rt0.c0, rt0.c1, rt0.c2))))OR((rt0.c2 IN ())))) ORDER BY rt0.c1 DESC  NULLS LAST, (~ ('-1192084732')) ASC;
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 THEN v0.c1 ELSE rt0.c0 COLLATE RTRIM END WHERE (CAST((+ (rt0.c2)) AS INTEGER)) ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 THEN v0.c1 ELSE rt0.c0 COLLATE RTRIM END ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) NOTNULL) DESC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 THEN v0.c1 ELSE rt0.c0 COLLATE RTRIM END WHERE (CAST((+ (rt0.c2)) AS INTEGER)) ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 THEN v0.c1 ELSE rt0.c0 COLLATE RTRIM END ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) NOTNULL) DESC);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 THEN v0.c1 ELSE rt0.c0 COLLATE RTRIM END WHERE (CAST((+ (rt0.c2)) AS INTEGER)) ORDER BY ((((rt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) NOTNULL) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)-(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.006686042486054422) ORDER BY (+ ('1452267736')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.006686042486054422) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ('1452267736')) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.006686042486054422) ORDER BY (+ ('1452267736')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.006686042486054422) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ('1452267736')) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.006686042486054422) ORDER BY (+ ('1452267736')) ASC;
SELECT * FROM rt0 WHERE ((((0.9527375244207535)) BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-58859129')))AND(rt0.c2)))) AND ((0.03518587346993296)))) ORDER BY rt0.c2 DESC  NULLS LAST, (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.9527375244207535)) BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-58859129')))AND(rt0.c2)))) AND ((0.03518587346993296)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST, (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE ((((0.9527375244207535)) BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-58859129')))AND(rt0.c2)))) AND ((0.03518587346993296)))) ORDER BY rt0.c2 DESC  NULLS LAST, (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.9527375244207535)) BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-58859129')))AND(rt0.c2)))) AND ((0.03518587346993296)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST, (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END IN ())  NULLS LAST);
SELECT * FROM rt0 WHERE ((((0.9527375244207535)) BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-58859129')))AND(rt0.c2)))) AND ((0.03518587346993296)))) ORDER BY rt0.c2 DESC  NULLS LAST, (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c1 END IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED, rt0 WHERE (((v0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c2) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED, rt0 WHERE (((v0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c2) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED, rt0 WHERE (((v0.c2) IS TRUE));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((NOT (v0.c0))) IS FALSE) WHERE ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))==((((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c2)))))) ORDER BY CAST(((rt0.c2) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))==((((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c2)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((NOT (v0.c0))) IS FALSE) ORDER BY CAST(((rt0.c2) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) IS FALSE));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((NOT (v0.c0))) IS FALSE) WHERE ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))==((((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c2)))))) ORDER BY CAST(((rt0.c2) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))==((((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c2)))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((NOT (v0.c0))) IS FALSE) ORDER BY CAST(((rt0.c2) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) IS FALSE));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON (((NOT (v0.c0))) IS FALSE) WHERE ((((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))==((((v0.c2) NOT BETWEEN (rt0.c2) AND (v0.c2)))))) ORDER BY CAST(((rt0.c2) NOT NULL) AS INTEGER) ASC  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) IS FALSE);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (HEX(v0.c1)))) ORDER BY STRFTIME(NULLIF(DISTINCT v0.c2, 138355544), ABS(v0.c2), CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT (((~ (HEX(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY STRFTIME(NULLIF(DISTINCT v0.c2, 138355544), ABS(v0.c2), CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (HEX(v0.c1)))) ORDER BY STRFTIME(NULLIF(DISTINCT v0.c2, 138355544), ABS(v0.c2), CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT (((~ (HEX(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY STRFTIME(NULLIF(DISTINCT v0.c2, 138355544), ABS(v0.c2), CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (HEX(v0.c1)))) ORDER BY STRFTIME(NULLIF(DISTINCT v0.c2, 138355544), ABS(v0.c2), CAST(v0.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON 0.34201594403897617 WHERE ((+ (((rt0.c0)+(rt0.c2))))) ORDER BY ((((((rt0.c0) ISNULL))OR((((v0.c0)) NOT BETWEEN (('1681621364')) AND ((rt0.c0))))))AND(CAST(v0.c2 AS BLOB))) ASC  NULLS LAST, '-394681003' ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON 0.34201594403897617 ORDER BY ((((((rt0.c0) ISNULL))OR((((v0.c0)) NOT BETWEEN (('1681621364')) AND ((rt0.c0))))))AND(CAST(v0.c2 AS BLOB))) ASC  NULLS LAST, '-394681003' ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON 0.34201594403897617 WHERE ((+ (((rt0.c0)+(rt0.c2))))) ORDER BY ((((((rt0.c0) ISNULL))OR((((v0.c0)) NOT BETWEEN (('1681621364')) AND ((rt0.c0))))))AND(CAST(v0.c2 AS BLOB))) ASC  NULLS LAST, '-394681003' ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON 0.34201594403897617 ORDER BY ((((((rt0.c0) ISNULL))OR((((v0.c0)) NOT BETWEEN (('1681621364')) AND ((rt0.c0))))))AND(CAST(v0.c2 AS BLOB))) ASC  NULLS LAST, '-394681003' ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON 0.34201594403897617 WHERE ((+ (((rt0.c0)+(rt0.c2))))) ORDER BY ((((((rt0.c0) ISNULL))OR((((v0.c0)) NOT BETWEEN (('1681621364')) AND ((rt0.c0))))))AND(CAST(v0.c2 AS BLOB))) ASC  NULLS LAST, '-394681003' ASC;
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT vt0.c0) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (x'ebcb') ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((x'ebcb') IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT * FROM rt0 WHERE (x'ebcb') ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((x'ebcb') IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT * FROM rt0 WHERE (x'ebcb') ORDER BY NULL DESC;
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)>=(v0.c2))  WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) END) ORDER BY (~ ((((v0.c0, v0.c1, x'', NULL, v0.c1)) BETWEEN ((0.9460721722682057, v0.c0, v0.c1, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c2, v0.c1, v0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)>=(v0.c2))  WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY (~ ((((v0.c0, v0.c1, x'', NULL, v0.c1)) BETWEEN ((0.9460721722682057, v0.c0, v0.c1, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c2, v0.c1, v0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)>=(v0.c2))  WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) END) ORDER BY (~ ((((v0.c0, v0.c1, x'', NULL, v0.c1)) BETWEEN ((0.9460721722682057, v0.c0, v0.c1, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c2, v0.c1, v0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)>=(v0.c2))  WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY (~ ((((v0.c0, v0.c1, x'', NULL, v0.c1)) BETWEEN ((0.9460721722682057, v0.c0, v0.c1, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c2, v0.c1, v0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)>=(v0.c2))  WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) END) ORDER BY (~ ((((v0.c0, v0.c1, x'', NULL, v0.c1)) BETWEEN ((0.9460721722682057, v0.c0, v0.c1, v0.c0, v0.c2)) AND ((v0.c1, v0.c2, v0.c2, v0.c1, v0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (CASE (('32290482') NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN CASE WHEN '\rs\u6h' THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE (('32290482') NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN CASE WHEN '\rs\u6h' THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE (('32290482') NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN CASE WHEN '\rs\u6h' THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE (('32290482') NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN CASE WHEN '\rs\u6h' THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE (('32290482') NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (rt0.c0)) WHEN ((rt0.c2)>=(rt0.c1)) THEN CASE WHEN '\rs\u6h' THEN rt0.c0 END WHEN (NOT (rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (NOT (NULL)) INNER JOIN vt0 ON ((v0.c1) NOT BETWEEN (1975032047) AND (v0.c1)) COLLATE RTRIM WHERE (rt0.c0) ORDER BY CASE CASE WHEN rt0.c0 THEN vt0.c0 END  WHEN ((((v0.c2)OR(vt0.c0)))AND(v0.c0)) THEN ((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))OR(0.425795315728412)))AND(rt0.c2)) ELSE CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (NOT (NULL)) INNER JOIN vt0 ON ((v0.c1) NOT BETWEEN (1975032047) AND (v0.c1)) COLLATE RTRIM ORDER BY CASE CASE WHEN rt0.c0 THEN vt0.c0 END  WHEN ((((v0.c2)OR(vt0.c0)))AND(v0.c0)) THEN ((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))OR(0.425795315728412)))AND(rt0.c2)) ELSE CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (NOT (NULL)) INNER JOIN vt0 ON ((v0.c1) NOT BETWEEN (1975032047) AND (v0.c1)) COLLATE RTRIM WHERE (rt0.c0) ORDER BY CASE CASE WHEN rt0.c0 THEN vt0.c0 END  WHEN ((((v0.c2)OR(vt0.c0)))AND(v0.c0)) THEN ((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))OR(0.425795315728412)))AND(rt0.c2)) ELSE CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (NOT (NULL)) INNER JOIN vt0 ON ((v0.c1) NOT BETWEEN (1975032047) AND (v0.c1)) COLLATE RTRIM ORDER BY CASE CASE WHEN rt0.c0 THEN vt0.c0 END  WHEN ((((v0.c2)OR(vt0.c0)))AND(v0.c0)) THEN ((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))OR(0.425795315728412)))AND(rt0.c2)) ELSE CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (NOT (NULL)) INNER JOIN vt0 ON ((v0.c1) NOT BETWEEN (1975032047) AND (v0.c1)) COLLATE RTRIM WHERE (rt0.c0) ORDER BY CASE CASE WHEN rt0.c0 THEN vt0.c0 END  WHEN ((((v0.c2)OR(vt0.c0)))AND(v0.c0)) THEN ((((((((v0.c2)OR(v0.c1)))AND(rt0.c2)))OR(0.425795315728412)))AND(rt0.c2)) ELSE CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END  NULLS FIRST, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-1192084732' COLLATE NOCASE) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (((0.5166950496069914) BETWEEN (NULL) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1192084732' COLLATE NOCASE) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (((0.5166950496069914) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-1192084732' COLLATE NOCASE) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (((0.5166950496069914) BETWEEN (NULL) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1192084732' COLLATE NOCASE) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (((0.5166950496069914) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-1192084732' COLLATE NOCASE) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (((0.5166950496069914) BETWEEN (NULL) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ()));
SELECT ALL * FROM vt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (v0.c2);
SELECT * FROM vt0, v0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))OR('-394681003')))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(vt0.c0)))OR('-394681003'))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))OR('-394681003')))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(vt0.c0)))OR('-394681003'))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))OR('-394681003')))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (x'') ORDER BY ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST, NULL, CASE TRIM(v0.c2)  WHEN rt0.c0 COLLATE NOCASE THEN ((v0.c0)<(x'a22a')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST, NULL, CASE TRIM(v0.c2)  WHEN rt0.c0 COLLATE NOCASE THEN ((v0.c0)<(x'a22a')) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (x'') ORDER BY ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST, NULL, CASE TRIM(v0.c2)  WHEN rt0.c0 COLLATE NOCASE THEN ((v0.c0)<(x'a22a')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST, NULL, CASE TRIM(v0.c2)  WHEN rt0.c0 COLLATE NOCASE THEN ((v0.c0)<(x'a22a')) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (x'') ORDER BY ((rt0.c1) BETWEEN (v0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST, NULL, CASE TRIM(v0.c2)  WHEN rt0.c0 COLLATE NOCASE THEN ((v0.c0)<(x'a22a')) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT * FROM v0, vt0 WHERE (((((((((((((v0.c2)OR(x'')))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(0X4a1e9155)) COLLATE RTRIM) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c2)OR(x'')))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(0x4a1e9155)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((((((((((v0.c2)OR(x'')))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(0X4a1e9155)) COLLATE RTRIM) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c2)OR(x'')))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(0x4a1e9155)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((((((((((v0.c2)OR(x'')))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(0X4a1e9155)) COLLATE RTRIM) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c0) NOT NULL), ((rt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (json_patch(((((rt0.c2)AND(1.452267736E9)))AND(rt0.c2)), ((((((((x'')AND(v0.c0)))OR(rt0.c2)))AND(v0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((((rt0.c2)AND(1.452267736E9)))AND(rt0.c2)), ((((((((x'')AND(v0.c0)))OR(rt0.c2)))AND(v0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (json_patch(((((rt0.c2)AND(1.452267736E9)))AND(rt0.c2)), ((((((((x'')AND(v0.c0)))OR(rt0.c2)))AND(v0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((((rt0.c2)AND(1.452267736E9)))AND(rt0.c2)), ((((((((x'')AND(v0.c0)))OR(rt0.c2)))AND(v0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (json_patch(((((rt0.c2)AND(1.452267736E9)))AND(rt0.c2)), ((((((((x'')AND(v0.c0)))OR(rt0.c2)))AND(v0.c1)))OR(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c1)) AS REAL)) ORDER BY ((v0.c2)<(((v0.c0) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST, (+ (json_object(v0.c1, v0.c1, v0.c0, v0.c2))) DESC  NULLS LAST, (v0.c0 COLLATE RTRIM IN (((((v0.c2)OR(v0.c2)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)<(((v0.c0) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST, (+ (json_object(v0.c1, v0.c1, v0.c0, v0.c2))) DESC  NULLS LAST, (v0.c0 COLLATE RTRIM IN (((((v0.c2)OR(v0.c2)))OR(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c1)) AS REAL)) ORDER BY ((v0.c2)<(((v0.c0) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST, (+ (json_object(v0.c1, v0.c1, v0.c0, v0.c2))) DESC  NULLS LAST, (v0.c0 COLLATE RTRIM IN (((((v0.c2)OR(v0.c2)))OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)<(((v0.c0) BETWEEN (v0.c0) AND (v0.c2))))  NULLS LAST, (+ (json_object(v0.c1, v0.c1, v0.c0, v0.c2))) DESC  NULLS LAST, (v0.c0 COLLATE RTRIM IN (((((v0.c2)OR(v0.c2)))OR(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN (- (rt0.c1)) END) ORDER BY (x'' IN ())  NULLS FIRST, ((CAST('-568480372' AS NUMERIC))>(((rt0.c2) IS FALSE))), (((((rt0.c1))==((x'')))) NOT BETWEEN (((rt0.c1)<<(rt0.c0))) AND (rt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT NULL) THEN (- (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (x'' IN ())  NULLS FIRST, ((CAST('-568480372' AS NUMERIC))>(((rt0.c2) IS FALSE))), (((((rt0.c1))=((x'')))) NOT BETWEEN (((rt0.c1)<<(rt0.c0))) AND (rt0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN (- (rt0.c1)) END) ORDER BY (x'' IN ())  NULLS FIRST, ((CAST('-568480372' AS NUMERIC))>(((rt0.c2) IS FALSE))), (((((rt0.c1))==((x'')))) NOT BETWEEN (((rt0.c1)<<(rt0.c0))) AND (rt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT NULL) THEN (- (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (x'' IN ())  NULLS FIRST, ((CAST('-568480372' AS NUMERIC))>(((rt0.c2) IS FALSE))), (((((rt0.c1))=((x'')))) NOT BETWEEN (((rt0.c1)<<(rt0.c0))) AND (rt0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN (- (rt0.c1)) END) ORDER BY (x'' IN ())  NULLS FIRST, ((CAST('-568480372' AS NUMERIC))>(((rt0.c2) IS FALSE))), (((((rt0.c1))==((x'')))) NOT BETWEEN (((rt0.c1)<<(rt0.c0))) AND (rt0.c0 COLLATE RTRIM)) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT ALL * FROM v0 WHERE ('0.6713057850939063') ORDER BY ((v0.c0)<(CAST(v0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.6713057850939063') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<(CAST(v0.c2 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ('0.6713057850939063') ORDER BY ((v0.c0)<(CAST(v0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.6713057850939063') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<(CAST(v0.c2 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ('0.6713057850939063') ORDER BY ((v0.c0)<(CAST(v0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(0.9349646838170157)))OR((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c1)))))) ORDER BY (('-394681003')%(rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c2)LIKE(rt0.c2))) BETWEEN (((((0xffffffffc154f1f6)OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c0)<=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(0.9349646838170157)))OR((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (('-394681003')%(rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c2)LIKE(rt0.c2))) BETWEEN (((((0Xffffffffc154f1f6)OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c0)<=(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(0.9349646838170157)))OR((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c1)))))) ORDER BY (('-394681003')%(rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c2)LIKE(rt0.c2))) BETWEEN (((((0xffffffffc154f1f6)OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c0)<=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(0.9349646838170157)))OR((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (('-394681003')%(rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c2)LIKE(rt0.c2))) BETWEEN (((((0Xffffffffc154f1f6)OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c0)<=(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))AND((rt0.c2 IN ()))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(0.9349646838170157)))OR((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c1)))))) ORDER BY (('-394681003')%(rt0.c2 COLLATE BINARY)) ASC, ((((rt0.c2)LIKE(rt0.c2))) BETWEEN (((((0xffffffffc154f1f6)OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c0)<=(rt0.c0)))) DESC;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((((((((+ (rt0.c1)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)&(rt0.c0)))))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c1)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)&(rt0.c0)))))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((((((((+ (rt0.c1)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)&(rt0.c0)))))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c1)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)&(rt0.c0)))))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE ((((((((((+ (rt0.c1)))OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)&(rt0.c0)))))AND((((rt0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((((v0.c1)AND(v0.c2)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (('' IN (((((((((rt0.c0)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)), ((v0.c2) BETWEEN ('714732536') AND (vt0.c0))))) ORDER BY (- (((rt0.c1)=(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((('' IN (((((((((rt0.c0)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)), ((v0.c2) BETWEEN ('714732536') AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (- (((rt0.c1)=(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (('' IN (((((((((rt0.c0)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)), ((v0.c2) BETWEEN ('714732536') AND (vt0.c0))))) ORDER BY (- (((rt0.c1)=(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((('' IN (((((((((rt0.c0)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)), ((v0.c2) BETWEEN ('714732536') AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (- (((rt0.c1)=(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (('' IN (((((((((rt0.c0)OR(v0.c2)))OR(v0.c2)))AND(rt0.c2)))AND(v0.c1)), ((v0.c2) BETWEEN ('714732536') AND (vt0.c0))))) ORDER BY (- (((rt0.c1)=(v0.c0)))) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(x'd31c'))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(x'd31c')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(x'd31c'))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(x'd31c')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) AND ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(x'd31c'))))));
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (- (CAST(x'' AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(x'' AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (- (CAST(x'' AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(x'' AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (- (CAST(x'' AS TEXT))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY NULL DESC  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST, vt0.c0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY NULL DESC  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST, vt0.c0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY NULL DESC  NULLS LAST, vt0.c0;
SELECT ALL * FROM v0, rt0 INNER JOIN vt0 ON ((CAST(0.3408355185291698 AS TEXT))>>(rt0.c2 COLLATE NOCASE)) WHERE (NULL) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c1 END) BETWEEN (x'') AND ((~ (v0.c1)))), 0.20736080445515537 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON ((CAST(0.3408355185291698 AS TEXT))>>(rt0.c2 COLLATE NOCASE)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c1 END) BETWEEN (x'') AND ((~ (v0.c1)))), 0.20736080445515537 DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 INNER JOIN vt0 ON ((CAST(0.3408355185291698 AS TEXT))>>(rt0.c2 COLLATE NOCASE)) WHERE (NULL) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c1 END) BETWEEN (x'') AND ((~ (v0.c1)))), 0.20736080445515537 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 INNER JOIN vt0 ON ((CAST(0.3408355185291698 AS TEXT))>>(rt0.c2 COLLATE NOCASE)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c1 END) BETWEEN (x'') AND ((~ (v0.c1)))), 0.20736080445515537 DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 INNER JOIN vt0 ON ((CAST(0.3408355185291698 AS TEXT))>>(rt0.c2 COLLATE NOCASE)) WHERE (NULL) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c1 END) BETWEEN (x'') AND ((~ (v0.c1)))), 0.20736080445515537 DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)<(v0.c0)))%(v0.c0 COLLATE BINARY))) ORDER BY ((((v0.c2) IS FALSE)) IS FALSE)  NULLS FIRST, ((NULLIF(v0.c1, v0.c2)) BETWEEN ((v0.c1 IN ())) AND ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))))) DESC, CAST(CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN '' WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<(v0.c0)))%(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS FALSE)) IS FALSE)  NULLS FIRST, ((NULLIF(v0.c1, v0.c2)) BETWEEN ((v0.c1 IN ())) AND ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))))) DESC, CAST(CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN '' WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END AS NUMERIC) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)<(v0.c0)))%(v0.c0 COLLATE BINARY))) ORDER BY ((((v0.c2) IS FALSE)) IS FALSE)  NULLS FIRST, ((NULLIF(v0.c1, v0.c2)) BETWEEN ((v0.c1 IN ())) AND ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))))) DESC, CAST(CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN '' WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)<(v0.c0)))%(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) IS FALSE)) IS FALSE)  NULLS FIRST, ((NULLIF(v0.c1, v0.c2)) BETWEEN ((v0.c1 IN ())) AND ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))))) DESC, CAST(CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN '' WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END AS NUMERIC) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)<(v0.c0)))%(v0.c0 COLLATE BINARY))) ORDER BY ((((v0.c2) IS FALSE)) IS FALSE)  NULLS FIRST, ((NULLIF(v0.c1, v0.c2)) BETWEEN ((v0.c1 IN ())) AND ((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2))))) DESC, CAST(CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN '' WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c1)OR(v0.c1)))AND(v0.c1)))>>(CAST(v0.c2 AS REAL)))) ORDER BY 'B ' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)OR(v0.c1)))AND(v0.c1)))>>(CAST(v0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY 'B ' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c1)OR(v0.c1)))AND(v0.c1)))>>(CAST(v0.c2 AS REAL)))) ORDER BY 'B ' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)OR(v0.c1)))AND(v0.c1)))>>(CAST(v0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY 'B ' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c1)OR(v0.c1)))AND(v0.c1)))>>(CAST(v0.c2 AS REAL)))) ORDER BY 'B ' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((0.6968292212616248)) NOT BETWEEN (((((v0.c2))=((v0.c1))))) AND ((((((v0.c1)OR(vt0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((0.6968292212616248)) NOT BETWEEN (((((v0.c2))==((v0.c1))))) AND ((((((v0.c1)OR(vt0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((0.6968292212616248)) NOT BETWEEN (((((v0.c2))=((v0.c1))))) AND ((((((v0.c1)OR(vt0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((0.6968292212616248)) NOT BETWEEN (((((v0.c2))==((v0.c1))))) AND ((((((v0.c1)OR(vt0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((0.6968292212616248)) NOT BETWEEN (((((v0.c2))=((v0.c1))))) AND ((((((v0.c1)OR(vt0.c0)))AND(v0.c0))))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((- ((((0xfffffffff44ed025))>=((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((0Xfffffffff44ed025))>=((v0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- ((((0xfffffffff44ed025))>=((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((0Xfffffffff44ed025))>=((v0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- ((((0xfffffffff44ed025))>=((v0.c2))))));
SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c0 COLLATE BINARY))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c0 COLLATE BINARY))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND(rt0.c0 COLLATE BINARY))) ORDER BY rt0.c1;
SELECT * FROM v0 CROSS JOIN rt0 ON (((+ (v0.c1)))IS NOT(((((v0.c1)OR(x'')))OR(v0.c0)))) WHERE ((+ (json_extract(rt0.c2, rt0.c0)))) ORDER BY (((rt0.c1)) BETWEEN (('')) AND ((((v0.c0) ISNULL)))), (((v0.c2 COLLATE NOCASE))<>((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c1)))AND(rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (json_extract(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((+ (v0.c1)))IS NOT(((((v0.c1)OR(x'')))OR(v0.c0)))) ORDER BY (((rt0.c1)) BETWEEN (('')) AND ((((v0.c0) ISNULL)))), (((v0.c2 COLLATE NOCASE))!=((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c1)))AND(rt0.c2))))) DESC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN rt0 ON (((+ (v0.c1)))IS NOT(((((v0.c1)OR(x'')))OR(v0.c0)))) WHERE ((+ (json_extract(rt0.c2, rt0.c0)))) ORDER BY (((rt0.c1)) BETWEEN (('')) AND ((((v0.c0) ISNULL)))), (((v0.c2 COLLATE NOCASE))<>((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c1)))AND(rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (json_extract(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((+ (v0.c1)))IS NOT(((((v0.c1)OR(x'')))OR(v0.c0)))) ORDER BY (((rt0.c1)) BETWEEN (('')) AND ((((v0.c0) ISNULL)))), (((v0.c2 COLLATE NOCASE))!=((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c1)))AND(rt0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN rt0.c2 THEN (+ (rt0.c0)) ELSE v0.c1 END) ORDER BY CASE rt0.c1  WHEN v0.c1 THEN v0.c1 ELSE rt0.c1 END COLLATE NOCASE COLLATE NOCASE, (((rt0.c1, v0.c1, v0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), (((v0.c2))>=(('1113033890'))), v0.c2 COLLATE NOCASE)) AND ((CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c2 ELSE 'r' END, rt0.c0, (rt0.c1 IN (x'f429')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN (+ (rt0.c0)) ELSE v0.c1 END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE rt0.c1  WHEN v0.c1 THEN v0.c1 ELSE rt0.c1 END COLLATE NOCASE COLLATE NOCASE, (((rt0.c1, v0.c1, v0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), (((v0.c2))>=(('1113033890'))), v0.c2 COLLATE NOCASE)) AND ((CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c2 ELSE 'r' END, rt0.c0, (rt0.c1 IN (x'f429')))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN rt0.c2 THEN (+ (rt0.c0)) ELSE v0.c1 END) ORDER BY CASE rt0.c1  WHEN v0.c1 THEN v0.c1 ELSE rt0.c1 END COLLATE NOCASE COLLATE NOCASE, (((rt0.c1, v0.c1, v0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), (((v0.c2))>=(('1113033890'))), v0.c2 COLLATE NOCASE)) AND ((CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c2 ELSE 'r' END, rt0.c0, (rt0.c1 IN (x'f429')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 THEN (+ (rt0.c0)) ELSE v0.c1 END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE rt0.c1  WHEN v0.c1 THEN v0.c1 ELSE rt0.c1 END COLLATE NOCASE COLLATE NOCASE, (((rt0.c1, v0.c1, v0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), (((v0.c2))>=(('1113033890'))), v0.c2 COLLATE NOCASE)) AND ((CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c2 ELSE 'r' END, rt0.c0, (rt0.c1 IN (x'f429')))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN rt0.c2 THEN (+ (rt0.c0)) ELSE v0.c1 END) ORDER BY CASE rt0.c1  WHEN v0.c1 THEN v0.c1 ELSE rt0.c1 END COLLATE NOCASE COLLATE NOCASE, (((rt0.c1, v0.c1, v0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), (((v0.c2))>=(('1113033890'))), v0.c2 COLLATE NOCASE)) AND ((CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN rt0.c2 ELSE 'r' END, rt0.c0, (rt0.c1 IN (x'f429')))))  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c1)))>((((rt0.c2, v0.c0, rt0.c2))>((v0.c1, v0.c0, rt0.c1))))) INNER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)=(rt0.c0 COLLATE BINARY)) WHERE (CASE WHEN '\rzyb' THEN ((rt0.c0) NOT NULL) WHEN (- (rt0.c2)) THEN ((vt0.c0)<>(rt0.c2)) WHEN SQLITE_SOURCE_ID() THEN CASE rt0.c0  WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 END ELSE 0Xffffffffabb64205 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '\rzyb' THEN ((rt0.c0) NOT NULL) WHEN (- (rt0.c2)) THEN ((vt0.c0)!=(rt0.c2)) WHEN SQLITE_SOURCE_ID() THEN CASE rt0.c0  WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 END ELSE 0Xffffffffabb64205 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c1)))>((((rt0.c2, v0.c0, rt0.c2))>((v0.c1, v0.c0, rt0.c1))))) INNER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)==(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c1)))>((((rt0.c2, v0.c0, rt0.c2))>((v0.c1, v0.c0, rt0.c1))))) INNER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)=(rt0.c0 COLLATE BINARY)) WHERE (CASE WHEN '\rzyb' THEN ((rt0.c0) NOT NULL) WHEN (- (rt0.c2)) THEN ((vt0.c0)<>(rt0.c2)) WHEN SQLITE_SOURCE_ID() THEN CASE rt0.c0  WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 END ELSE 0Xffffffffabb64205 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '\rzyb' THEN ((rt0.c0) NOT NULL) WHEN (- (rt0.c2)) THEN ((vt0.c0)!=(rt0.c2)) WHEN SQLITE_SOURCE_ID() THEN CASE rt0.c0  WHEN v0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c1 END ELSE 0Xffffffffabb64205 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((- (rt0.c1)))>((((rt0.c2, v0.c0, rt0.c2))>((v0.c1, v0.c0, rt0.c1))))) INNER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)==(rt0.c0 COLLATE BINARY)));
SELECT * FROM vt0, rt0 WHERE (json_array_length(((rt0.c2) NOTNULL))) ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) DESC, (('-1051397642')*(((vt0.c0)>=(rt0.c2)))) DESC, 0Xffffffff97504e93  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c2) NOTNULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) DESC, (('-1051397642')*(((vt0.c0)>=(rt0.c2)))) DESC, 0xffffffff97504e93  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (json_array_length(((rt0.c2) NOTNULL))) ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) DESC, (('-1051397642')*(((vt0.c0)>=(rt0.c2)))) DESC, 0Xffffffff97504e93  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c2) NOTNULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) DESC, (('-1051397642')*(((vt0.c0)>=(rt0.c2)))) DESC, 0xffffffff97504e93  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (json_array_length(((rt0.c2) NOTNULL))) ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) DESC, (('-1051397642')*(((vt0.c0)>=(rt0.c2)))) DESC, 0Xffffffff97504e93  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON json_remove(CAST(rt0.c1 AS TEXT), rt0.c1) WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c0 IN ()) THEN ((((((((v0.c0)AND(v0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c0 IN ()) THEN ((((((((v0.c0)AND(v0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON json_remove(CAST(rt0.c1 AS TEXT), rt0.c1));
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON json_remove(CAST(rt0.c1 AS TEXT), rt0.c1) WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c0 IN ()) THEN ((((((((v0.c0)AND(v0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN (rt0.c0 IN ()) THEN ((((((((v0.c0)AND(v0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)) ELSE rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON json_remove(CAST(rt0.c1 AS TEXT), rt0.c1));
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c2)))) NOTNULL)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c2)))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c2 ASC);
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c2)))) NOTNULL)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c2)))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c2 ASC);
SELECT * FROM v0, rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c2)))) NOTNULL)) ORDER BY rt0.c2 ASC;
SELECT ALL * FROM vt0 WHERE (((((UNICODE(vt0.c0))OR((((vt0.c0))>=((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((UNICODE(vt0.c0))OR((((vt0.c0))>=((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((UNICODE(vt0.c0))OR((((vt0.c0))>=((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((UNICODE(vt0.c0))OR((((vt0.c0))>=((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((UNICODE(vt0.c0))OR((((vt0.c0))>=((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c0))==((vt0.c0)))) ISNULL) WHERE (rt0.c2) ORDER BY ((ABS(vt0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c0))==((vt0.c0)))) ISNULL) ORDER BY ((ABS(vt0.c0)) ISNULL) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c0))==((vt0.c0)))) ISNULL) WHERE (rt0.c2) ORDER BY ((ABS(vt0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c0))==((vt0.c0)))) ISNULL) ORDER BY ((ABS(vt0.c0)) ISNULL) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c0))==((vt0.c0)))) ISNULL) WHERE (rt0.c2) ORDER BY ((ABS(vt0.c0)) ISNULL) DESC;
SELECT * FROM rt0, v0, vt0 WHERE ((((~ (rt0.c1)))>=(vt0.c0))) ORDER BY CASE WHEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) THEN (- (v0.c2)) WHEN CASE v0.c1  WHEN v0.c1 THEN rt0.c1 END THEN -394681003 WHEN TYPEOF(rt0.c0) THEN rt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c2 AS INTEGER) END, (((((rt0.c1)OR(v0.c0)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))>=(vt0.c0))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE WHEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) THEN (- (v0.c2)) WHEN CASE v0.c1  WHEN v0.c1 THEN rt0.c1 END THEN -394681003 WHEN TYPEOF(rt0.c0) THEN rt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c2 AS INTEGER) END, (((((rt0.c1)OR(v0.c0)))OR(vt0.c0)) IN ()));
SELECT * FROM rt0, v0, vt0 WHERE ((((~ (rt0.c1)))>=(vt0.c0))) ORDER BY CASE WHEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) THEN (- (v0.c2)) WHEN CASE v0.c1  WHEN v0.c1 THEN rt0.c1 END THEN -394681003 WHEN TYPEOF(rt0.c0) THEN rt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c2 AS INTEGER) END, (((((rt0.c1)OR(v0.c0)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))>=(vt0.c0))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE WHEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) THEN (- (v0.c2)) WHEN CASE v0.c1  WHEN v0.c1 THEN rt0.c1 END THEN -394681003 WHEN TYPEOF(rt0.c0) THEN rt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c2 AS INTEGER) END, (((((rt0.c1)OR(v0.c0)))OR(vt0.c0)) IN ()));
SELECT * FROM rt0, v0, vt0 WHERE ((((~ (rt0.c1)))>=(vt0.c0))) ORDER BY CASE WHEN (((v0.c1)) BETWEEN ((v0.c1)) AND ((rt0.c2))) THEN (- (v0.c2)) WHEN CASE v0.c1  WHEN v0.c1 THEN rt0.c1 END THEN -394681003 WHEN TYPEOF(rt0.c0) THEN rt0.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN NULL WHEN CAST(rt0.c2 AS REAL) THEN CAST(rt0.c2 AS INTEGER) END, (((((rt0.c1)OR(v0.c0)))OR(vt0.c0)) IN ());
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0)) COLLATE NOCASE);
SELECT * FROM vt0, rt0, v0 WHERE (((CASE 0.12112990534784185  WHEN rt0.c2 THEN rt0.c0 ELSE x'6197' END) IS FALSE)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.12112990534784185  WHEN rt0.c2 THEN rt0.c0 ELSE x'6197' END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, rt0, v0 WHERE (((CASE 0.12112990534784185  WHEN rt0.c2 THEN rt0.c0 ELSE x'6197' END) IS FALSE)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.12112990534784185  WHEN rt0.c2 THEN rt0.c0 ELSE x'6197' END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, rt0, v0 WHERE (((CASE 0.12112990534784185  WHEN rt0.c2 THEN rt0.c0 ELSE x'6197' END) IS FALSE)) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 END)OR(((vt0.c0) IS FALSE))))OR(((v0.c1)>=(v0.c0)))) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)))OR(((v0.c2)=(v0.c1)))))OR('-1938759341' COLLATE BINARY))) ORDER BY (((((v0.c1))<((x'')))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)))OR(((v0.c2)==(v0.c1)))))OR('-1938759341' COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 END)OR(((vt0.c0) IS FALSE))))OR(((v0.c1)>=(v0.c0)))) ORDER BY (((((v0.c1))<((x'')))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 END)OR(((vt0.c0) IS FALSE))))OR(((v0.c1)>=(v0.c0)))) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)))OR(((v0.c2)=(v0.c1)))))OR('-1938759341' COLLATE BINARY))) ORDER BY (((((v0.c1))<((x'')))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)))OR(((v0.c2)==(v0.c1)))))OR('-1938759341' COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 END)OR(((vt0.c0) IS FALSE))))OR(((v0.c1)>=(v0.c0)))) ORDER BY (((((v0.c1))<((x'')))) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 END)OR(((vt0.c0) IS FALSE))))OR(((v0.c1)>=(v0.c0)))) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)))OR(((v0.c2)=(v0.c1)))))OR('-1938759341' COLLATE BINARY))) ORDER BY (((((v0.c1))<((x'')))) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND(((rt0.c1)>>(rt0.c2)))))AND(((x'')|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((rt0.c1)>>(rt0.c2)))))AND(((x'')|(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND(((rt0.c1)>>(rt0.c2)))))AND(((x'')|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((rt0.c1)>>(rt0.c2)))))AND(((x'')|(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND(((rt0.c1)>>(rt0.c2)))))AND(((x'')|(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)+(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)+(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1)+(rt0.c2))) ISNULL));
SELECT * FROM rt0, v0 WHERE (((((v0.c1)OR((((v0.c0))>((v0.c1))))))OR(LIKELIHOOD('138355544', 0.09224331623598137)))) ORDER BY 0.037450750239041986  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)OR((((v0.c0))>((v0.c1))))))OR(LIKELIHOOD('138355544', 0.09224331623598137)))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.037450750239041986  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((v0.c1)OR((((v0.c0))>((v0.c1))))))OR(LIKELIHOOD('138355544', 0.09224331623598137)))) ORDER BY 0.037450750239041986  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)OR((((v0.c0))>((v0.c1))))))OR(LIKELIHOOD('138355544', 0.09224331623598137)))) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.037450750239041986  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((v0.c1)OR((((v0.c0))>((v0.c1))))))OR(LIKELIHOOD('138355544', 0.09224331623598137)))) ORDER BY 0.037450750239041986  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT ((((v0.c0))!=((rt0.c2)))))) ORDER BY (~ (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (~ (rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT ((((v0.c0))!=((rt0.c2)))))) ORDER BY (~ (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (~ (rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((NOT ((((v0.c0))!=((rt0.c2)))))) ORDER BY (~ (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN ((((rt0.c1))<=((v0.c0)))) AND (v0.c2))) ORDER BY ((v0.c0) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) NOT BETWEEN ((((rt0.c1))<=((v0.c0)))) AND (v0.c2))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c0) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN ((((rt0.c1))<=((v0.c0)))) AND (v0.c2))) ORDER BY ((v0.c0) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL)) NOT BETWEEN ((((rt0.c1))<=((v0.c0)))) AND (v0.c2))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c0) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN ((((rt0.c1))<=((v0.c0)))) AND (v0.c2))) ORDER BY ((v0.c0) IS FALSE) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (x'13c0') ORDER BY ((((v0.c1)>>(v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END) AND (((((v0.c2)OR(v0.c1)))OR(v0.c1)))) DESC, ((v0.c2 COLLATE BINARY)/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((x'13c0') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c1)>>(v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END) AND (((((v0.c2)OR(v0.c1)))OR(v0.c1)))) DESC, ((v0.c2 COLLATE BINARY)/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM v0, vt0 WHERE (x'13c0') ORDER BY ((((v0.c1)>>(v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END) AND (((((v0.c2)OR(v0.c1)))OR(v0.c1)))) DESC, ((v0.c2 COLLATE BINARY)/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((x'13c0') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c1)>>(v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END) AND (((((v0.c2)OR(v0.c1)))OR(v0.c1)))) DESC, ((v0.c2 COLLATE BINARY)/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM v0, vt0 WHERE (x'13c0') ORDER BY ((((v0.c1)>>(v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 END) AND (((((v0.c2)OR(v0.c1)))OR(v0.c1)))) DESC, ((v0.c2 COLLATE BINARY)/(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)OR(v0.c2)))OR(((v0.c0)=(v0.c0)))))OR((- (v0.c1)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)OR(v0.c2)))OR(((v0.c0)=(v0.c0)))))OR((- (v0.c1)))))AND(NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)OR(v0.c2)))OR(((v0.c0)=(v0.c0)))))OR((- (v0.c1)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)OR(v0.c2)))OR(((v0.c0)=(v0.c0)))))OR((- (v0.c1)))))AND(NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c2  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END)OR(v0.c2)))OR(((v0.c0)=(v0.c0)))))OR((- (v0.c1)))))AND(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.4099213402600579) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB), ((((vt0.c0)-(vt0.c0)))+(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4099213402600579) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB), ((((vt0.c0)-(vt0.c0)))+(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.4099213402600579) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB), ((((vt0.c0)-(vt0.c0)))+(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4099213402600579) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB), ((((vt0.c0)-(vt0.c0)))+(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0.4099213402600579) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS BLOB), ((((vt0.c0)-(vt0.c0)))+(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c1)!=(v0.c1))) BETWEEN ((v0.c2 IN (v0.c1))) AND (IFNULL(DISTINCT v0.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)!=(v0.c1))) BETWEEN ((v0.c2 IN (v0.c1))) AND (IFNULL(DISTINCT v0.c0, v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)!=(v0.c1))) BETWEEN ((v0.c2 IN (v0.c1))) AND (IFNULL(DISTINCT v0.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)!=(v0.c1))) BETWEEN ((v0.c2 IN (v0.c1))) AND (IFNULL(DISTINCT v0.c0, v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)!=(v0.c1))) BETWEEN ((v0.c2 IN (v0.c1))) AND (IFNULL(DISTINCT v0.c0, v0.c1))));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON (rt0.c1 IN ()) WHERE (((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON (rt0.c1 IN ()));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON (rt0.c1 IN ()) WHERE (((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON (rt0.c1 IN ()));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON (rt0.c1 IN ()) WHERE (((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)) IN ((((1578563578))<((rt0.c0))), ((rt0.c1)GLOB(rt0.c1)))) WHERE (((((vt0.c0)||(vt0.c0)))<=(TRIM(rt0.c2, vt0.c0)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c0)))<=(TRIM(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)) IN ((((1578563578))<((rt0.c0))), ((rt0.c1)GLOB(rt0.c1)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)) IN ((((1578563578))<((rt0.c0))), ((rt0.c1)GLOB(rt0.c1)))) WHERE (((((vt0.c0)||(vt0.c0)))<=(TRIM(rt0.c2, vt0.c0)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c0)))<=(TRIM(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)) IN ((((1578563578))<((rt0.c0))), ((rt0.c1)GLOB(rt0.c1)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)) IN ((((1578563578))<((rt0.c0))), ((rt0.c1)GLOB(rt0.c1)))) WHERE (((((vt0.c0)||(vt0.c0)))<=(TRIM(rt0.c2, vt0.c0)))) ORDER BY (rt0.c0 IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON ((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((rt0.c2)>=(v0.c2)))) WHERE (v0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON ((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((rt0.c2)>=(v0.c2)))));
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON ((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((rt0.c2)>=(v0.c2)))) WHERE (v0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON ((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((rt0.c2)>=(v0.c2)))));
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON ((((((vt0.c0)OR(rt0.c0)))OR(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (((rt0.c2)>=(v0.c2)))) WHERE (v0.c1 COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)<(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c0)<(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN ((((x'')AND('\rZ')))AND(rt0.c0)) THEN (~ (rt0.c0)) WHEN CASE WHEN '' THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN NULL THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE x'ac34' END END) ORDER BY json_insert(CAST(rt0.c2 AS TEXT), '\nK<lPN', (rt0.c1 IN ()), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c0)<(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN ((((x'')AND('\rZ')))AND(rt0.c0)) THEN (~ (rt0.c0)) WHEN CASE WHEN '' THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN NULL THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE x'ac34' END END) IS TRUE)  as count FROM rt0 ORDER BY json_insert(CAST(rt0.c2 AS TEXT), '\nK<lPN', (rt0.c1 IN ()), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), rt0.c0));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1)<(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c0)<(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN ((((x'')AND('\rZ')))AND(rt0.c0)) THEN (~ (rt0.c0)) WHEN CASE WHEN '' THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN NULL THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE x'ac34' END END) ORDER BY json_insert(CAST(rt0.c2 AS TEXT), '\nK<lPN', (rt0.c1 IN ()), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)<(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c0)<(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN ((((x'')AND('\rZ')))AND(rt0.c0)) THEN (~ (rt0.c0)) WHEN CASE WHEN '' THEN rt0.c0 END THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN NULL THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE x'ac34' END END) IS TRUE)  as count FROM rt0 ORDER BY json_insert(CAST(rt0.c2 AS TEXT), '\nK<lPN', (rt0.c1 IN ()), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), rt0.c0));
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN (((-3.94681003E8 IN ()))) AND ((((v0.c0)IS(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN (((-3.94681003E8 IN ()))) AND ((((v0.c0)IS(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN (((-3.94681003E8 IN ()))) AND ((((v0.c0)IS(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN (((-3.94681003E8 IN ()))) AND ((((v0.c0)IS(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN (((-3.94681003E8 IN ()))) AND ((((v0.c0)IS(v0.c1))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((0.6713057850939063)AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6713057850939063)AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((0.6713057850939063)AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6713057850939063)AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((0.6713057850939063)AND(rt0.c2)))OR(vt0.c0)) COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.16158471016174691)IS NOT(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((0.16158471016174691)IS NOT(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.16158471016174691)IS NOT(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((0.16158471016174691)IS NOT(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.16158471016174691)IS NOT(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TRIM(((rt0.c0) IS FALSE), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c0) IS FALSE), (rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TRIM(((rt0.c0) IS FALSE), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c0) IS FALSE), (rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TRIM(((rt0.c0) IS FALSE), (rt0.c2 IN ())));
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (v0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c2) AND (v0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (v0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c2) AND (v0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c2) AND (v0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((x'')>>(v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c2 COLLATE BINARY))) ORDER BY CASE WHEN ((v0.c2)IS(vt0.c0)) THEN ((v0.c2)-(vt0.c0)) WHEN v0.c2 THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 THEN ((vt0.c0)>>(v0.c0)) ELSE x'8996' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')>>(v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c2)IS(vt0.c0)) THEN ((v0.c2)-(vt0.c0)) WHEN v0.c2 THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 THEN ((vt0.c0)>>(v0.c0)) ELSE x'8996' END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((x'')>>(v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c2 COLLATE BINARY))) ORDER BY CASE WHEN ((v0.c2)IS(vt0.c0)) THEN ((v0.c2)-(vt0.c0)) WHEN v0.c2 THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 THEN ((vt0.c0)>>(v0.c0)) ELSE x'8996' END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'')>>(v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((v0.c2)IS(vt0.c0)) THEN ((v0.c2)-(vt0.c0)) WHEN v0.c2 THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 THEN ((vt0.c0)>>(v0.c0)) ELSE x'8996' END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((x'')>>(v0.c2))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (v0.c2 COLLATE BINARY))) ORDER BY CASE WHEN ((v0.c2)IS(vt0.c0)) THEN ((v0.c2)-(vt0.c0)) WHEN v0.c2 THEN ((vt0.c0) IS FALSE) WHEN vt0.c0 THEN ((vt0.c0)>>(v0.c0)) ELSE x'8996' END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT * FROM v0 INNER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE)) RIGHT OUTER JOIN rt0 ON (CAST(v0.c1 AS REAL) IN ()) WHERE (CAST(((v0.c0) BETWEEN (vt0.c0) AND (x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (vt0.c0) AND (x'')) AS NUMERIC)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE)) RIGHT OUTER JOIN rt0 ON (CAST(v0.c1 AS REAL) IN ()));
SELECT * FROM v0 INNER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE)) RIGHT OUTER JOIN rt0 ON (CAST(v0.c1 AS REAL) IN ()) WHERE (CAST(((v0.c0) BETWEEN (vt0.c0) AND (x'')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (vt0.c0) AND (x'')) AS NUMERIC)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE)) RIGHT OUTER JOIN rt0 ON (CAST(v0.c1 AS REAL) IN ()));
SELECT * FROM rt0 WHERE (((x'')<<(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)-(rt0.c2)), ((MAX(rt0.c2, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((~ (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')<<(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)-(rt0.c2)), ((MAX(rt0.c2, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((~ (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((x'')<<(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)-(rt0.c2)), ((MAX(rt0.c2, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((~ (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')<<(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)-(rt0.c2)), ((MAX(rt0.c2, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((~ (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((x'')<<(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)-(rt0.c2)), ((MAX(rt0.c2, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ((~ (rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c1 WHEN (rt0.c0 IN (v0.c0, vt0.c0)) THEN x'9b0a' WHEN ((rt0.c1)<(v0.c0)) THEN CAST(v0.c2 AS INTEGER) END) ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (0.8118212973202709)))&((((rt0.c0))<((v0.c1))))) DESC  NULLS FIRST, (- (CAST(v0.c1 AS INTEGER))), CASE WHEN ((rt0.c2)||(rt0.c1)) THEN 1681621364 ELSE ((rt0.c0) IS FALSE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c1 WHEN (rt0.c0 IN (v0.c0, vt0.c0)) THEN x'9b0a' WHEN ((rt0.c1)<(v0.c0)) THEN CAST(v0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (0.8118212973202709)))&((((rt0.c0))<((v0.c1))))) DESC  NULLS FIRST, (- (CAST(v0.c1 AS INTEGER))), CASE WHEN ((rt0.c2)||(rt0.c1)) THEN 1681621364 ELSE ((rt0.c0) IS FALSE) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c1 WHEN (rt0.c0 IN (v0.c0, vt0.c0)) THEN x'9b0a' WHEN ((rt0.c1)<(v0.c0)) THEN CAST(v0.c2 AS INTEGER) END) ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (0.8118212973202709)))&((((rt0.c0))<((v0.c1))))) DESC  NULLS FIRST, (- (CAST(v0.c1 AS INTEGER))), CASE WHEN ((rt0.c2)||(rt0.c1)) THEN 1681621364 ELSE ((rt0.c0) IS FALSE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c1 WHEN (rt0.c0 IN (v0.c0, vt0.c0)) THEN x'9b0a' WHEN ((rt0.c1)<(v0.c0)) THEN CAST(v0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (0.8118212973202709)))&((((rt0.c0))<((v0.c1))))) DESC  NULLS FIRST, (- (CAST(v0.c1 AS INTEGER))), CASE WHEN ((rt0.c2)||(rt0.c1)) THEN 1681621364 ELSE ((rt0.c0) IS FALSE) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN rt0.c1 WHEN (rt0.c0 IN (v0.c0, vt0.c0)) THEN x'9b0a' WHEN ((rt0.c1)<(v0.c0)) THEN CAST(v0.c2 AS INTEGER) END) ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (0.8118212973202709)))&((((rt0.c0))<((v0.c1))))) DESC  NULLS FIRST, (- (CAST(v0.c1 AS INTEGER))), CASE WHEN ((rt0.c2)||(rt0.c1)) THEN 1681621364 ELSE ((rt0.c0) IS FALSE) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((((~ (rt0.c1)))OR(NULLIF(DISTINCT 1876324705, '610427200'))))OR(vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON 0.32554292573708077 WHERE (((vt0.c0 COLLATE RTRIM)>=(ABS(vt0.c0)))) ORDER BY CAST(((vt0.c0)*(x'')) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)>=(ABS(vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((((~ (rt0.c1)))OR(NULLIF(DISTINCT 1876324705, '610427200'))))OR(vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON 0.32554292573708077 ORDER BY CAST(((vt0.c0)*(x'')) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((((~ (rt0.c1)))OR(NULLIF(DISTINCT 1876324705, '610427200'))))OR(vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON 0.32554292573708077 WHERE (((vt0.c0 COLLATE RTRIM)>=(ABS(vt0.c0)))) ORDER BY CAST(((vt0.c0)*(x'')) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)>=(ABS(vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((((~ (rt0.c1)))OR(NULLIF(DISTINCT 1876324705, '610427200'))))OR(vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON 0.32554292573708077 ORDER BY CAST(((vt0.c0)*(x'')) AS BLOB)  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c2)LIKE(rt0.c1))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((rt0.c2)LIKE(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)LIKE(rt0.c1))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((rt0.c2)LIKE(v0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c2)LIKE(rt0.c1))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((rt0.c2)LIKE(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)LIKE(rt0.c1))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((rt0.c2)LIKE(v0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c2)LIKE(rt0.c1))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((rt0.c2)LIKE(v0.c2)))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY ((json_valid(NULL))<<((+ (rt0.c0))))  NULLS FIRST, (~ (v0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS BLOB)  WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((json_valid(NULL))<<((+ (rt0.c0))))  NULLS FIRST, (~ (v0.c2)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY ((json_valid(NULL))<<((+ (rt0.c0))))  NULLS FIRST, (~ (v0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS BLOB)  WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((json_valid(NULL))<<((+ (rt0.c0))))  NULLS FIRST, (~ (v0.c2)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY ((json_valid(NULL))<<((+ (rt0.c0))))  NULLS FIRST, (~ (v0.c2)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (TRIM(((vt0.c0)/('')), CAST(vt0.c0 AS NUMERIC))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0)/('')), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (TRIM(((vt0.c0)/('')), CAST(vt0.c0 AS NUMERIC))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0)/('')), CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (TRIM(((vt0.c0)/('')), CAST(vt0.c0 AS NUMERIC))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN (x''))))) ORDER BY 'bOY'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN (x''))))) IS TRUE)  as count FROM v0 ORDER BY 'bOY'  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN (x''))))) ORDER BY 'bOY'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN (x''))))) IS TRUE)  as count FROM v0 ORDER BY 'bOY'  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN (x''))))) ORDER BY 'bOY'  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c2)<(v0.c1))) NOT BETWEEN ((+ (0.35186324432374405))) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<(v0.c1))) NOT BETWEEN ((+ (0.35186324432374405))) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2)<(v0.c1))) NOT BETWEEN ((+ (0.35186324432374405))) AND ((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)<(v0.c1))) NOT BETWEEN ((+ (0.35186324432374405))) AND ((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c2)<(v0.c1))) NOT BETWEEN ((+ (0.35186324432374405))) AND ((- (v0.c0)))));
SELECT ALL * FROM v0, rt0 CROSS JOIN vt0 ON ((v0.c1) NOTNULL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((v0.c1) NOTNULL));
SELECT ALL * FROM v0, rt0 CROSS JOIN vt0 ON ((v0.c1) NOTNULL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((v0.c1) NOTNULL));
SELECT ALL * FROM v0, rt0 CROSS JOIN vt0 ON ((v0.c1) NOTNULL) WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST('0.9349646838170157' AS REAL))<<(((rt0.c2)||(rt0.c1))))) ORDER BY ((((((((((((rt0.c0)OR(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))))AND(LIKELIHOOD(DISTINCT rt0.c1, 0.16393730237658322))))AND(((rt0.c1)IS(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('0.9349646838170157' AS REAL))<<(((rt0.c2)||(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c0)OR(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))))AND(LIKELIHOOD(DISTINCT rt0.c1, 0.16393730237658322))))AND(((rt0.c1)IS(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST('0.9349646838170157' AS REAL))<<(((rt0.c2)||(rt0.c1))))) ORDER BY ((((((((((((rt0.c0)OR(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))))AND(LIKELIHOOD(DISTINCT rt0.c1, 0.16393730237658322))))AND(((rt0.c1)IS(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('0.9349646838170157' AS REAL))<<(((rt0.c2)||(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((rt0.c0)OR(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))))AND(LIKELIHOOD(DISTINCT rt0.c1, 0.16393730237658322))))AND(((rt0.c1)IS(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST('0.9349646838170157' AS REAL))<<(((rt0.c2)||(rt0.c1))))) ORDER BY ((((((((((((rt0.c0)OR(((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))))AND(LIKELIHOOD(DISTINCT rt0.c1, 0.16393730237658322))))AND(((rt0.c1)IS(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))) ASC;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (0x5e16f7fa)))GLOB(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (0X5e16f7fa)))GLOB(rt0.c2))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (0x5e16f7fa)))GLOB(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (0X5e16f7fa)))GLOB(rt0.c2))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (0x5e16f7fa)))GLOB(rt0.c2)));
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT 0.6271543564709527, CAST(v0.c1 AS TEXT))) ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(v0.c1)) AS BLOB), (- ((~ (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT 0.6271543564709527, CAST(v0.c1 AS TEXT))) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(v0.c1)) AS BLOB), (- ((~ (v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT 0.6271543564709527, CAST(v0.c1 AS TEXT))) ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(v0.c1)) AS BLOB), (- ((~ (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT 0.6271543564709527, CAST(v0.c1 AS TEXT))) IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(v0.c1)) AS BLOB), (- ((~ (v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT 0.6271543564709527, CAST(v0.c1 AS TEXT))) ORDER BY CAST(((((v0.c0)OR(v0.c0)))OR(v0.c1)) AS BLOB), (- ((~ (v0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c2 AS INTEGER)) NOT BETWEEN (CASE WHEN v0.c2 THEN rt0.c2 END) AND ((v0.c2 IN ()))) WHERE (((((((((((v0.c1)OR(v0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND('')))<(0Xffffffffe83859ab))) ORDER BY ((((((v0.c2)AND(v0.c1)))AND(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(v0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND('')))<(0Xffffffffe83859ab))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c2 AS INTEGER)) NOT BETWEEN (CASE WHEN v0.c2 THEN rt0.c2 END) AND ((v0.c2 IN ()))) ORDER BY ((((((v0.c2)AND(v0.c1)))AND(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c2 AS INTEGER)) NOT BETWEEN (CASE WHEN v0.c2 THEN rt0.c2 END) AND ((v0.c2 IN ()))) WHERE (((((((((((v0.c1)OR(v0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND('')))<(0Xffffffffe83859ab))) ORDER BY ((((((v0.c2)AND(v0.c1)))AND(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(v0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND('')))<(0Xffffffffe83859ab))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c2 AS INTEGER)) NOT BETWEEN (CASE WHEN v0.c2 THEN rt0.c2 END) AND ((v0.c2 IN ()))) ORDER BY ((((((v0.c2)AND(v0.c1)))AND(vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c2 AS INTEGER)) NOT BETWEEN (CASE WHEN v0.c2 THEN rt0.c2 END) AND ((v0.c2 IN ()))) WHERE (((((((((((v0.c1)OR(v0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND('')))<(0Xffffffffe83859ab))) ORDER BY ((((((v0.c2)AND(v0.c1)))AND(vt0.c0))) ISNULL);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c2) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c2) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c2) IS TRUE) AS REAL));
SELECT COUNT(*) FROM rt0, vt0 WHERE (load_extension(((rt0.c1)>(rt0.c0)), TRIM(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt0.c1)>(rt0.c0)), TRIM(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (load_extension(((rt0.c1)>(rt0.c0)), TRIM(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt0.c1)>(rt0.c0)), TRIM(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM vt0, rt0, v0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT * FROM v0, vt0, rt0 WHERE (((LIKELY(rt0.c1)) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END) AND (rtreenode(vt0.c0, rt0.c1)))) ORDER BY v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END) AND (rtreenode(vt0.c0, rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY v0.c2 DESC  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE (((LIKELY(rt0.c1)) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END) AND (rtreenode(vt0.c0, rt0.c1)))) ORDER BY v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END) AND (rtreenode(vt0.c0, rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY v0.c2 DESC  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE (((LIKELY(rt0.c1)) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 END) AND (rtreenode(vt0.c0, rt0.c1)))) ORDER BY v0.c2 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LTRIM(((vt0.c0) NOTNULL), ABS(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0) NOTNULL), ABS(rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LTRIM(((vt0.c0) NOTNULL), ABS(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0) NOTNULL), ABS(rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LTRIM(((vt0.c0) NOTNULL), ABS(rt0.c0)));
SELECT ALL * FROM vt0, rt0 WHERE (json_patch(NULLIF('138355544', rt0.c0), load_extension(rt0.c0, rt0.c0))) ORDER BY LIKELY(DISTINCT NULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((json_patch(NULLIF('138355544', rt0.c0), load_extension(rt0.c0, rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELY(DISTINCT NULL) COLLATE BINARY DESC);
SELECT ALL * FROM vt0, rt0 WHERE (json_patch(NULLIF('138355544', rt0.c0), load_extension(rt0.c0, rt0.c0))) ORDER BY LIKELY(DISTINCT NULL) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((json_patch(NULLIF('138355544', rt0.c0), load_extension(rt0.c0, rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELY(DISTINCT NULL) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((((x'') IS TRUE))*((vt0.c0 IN ()))) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS INTEGER) DESC, json_quote(((vt0.c0)AND(0.0648444758023593)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((x'') IS TRUE))*((vt0.c0 IN ()))) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS INTEGER) DESC, json_quote(((vt0.c0)AND(0.0648444758023593)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((((x'') IS TRUE))*((vt0.c0 IN ()))) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS INTEGER) DESC, json_quote(((vt0.c0)AND(0.0648444758023593)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((x'') IS TRUE))*((vt0.c0 IN ()))) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS INTEGER) DESC, json_quote(((vt0.c0)AND(0.0648444758023593)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY ((((x'') IS TRUE))*((vt0.c0 IN ()))) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS INTEGER) DESC, json_quote(((vt0.c0)AND(0.0648444758023593)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)&(rt0.c2)))OR(((rt0.c0)|(rt0.c2)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c2) ISNULL))))AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)&(rt0.c2)))OR(((rt0.c0)|(rt0.c2)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c2) ISNULL))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)&(rt0.c2)))OR(((rt0.c0)|(rt0.c2)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c2) ISNULL))))AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)&(rt0.c2)))OR(((rt0.c0)|(rt0.c2)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c2) ISNULL))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)&(rt0.c2)))OR(((rt0.c0)|(rt0.c2)))))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c2) ISNULL))))AND((rt0.c2 IN ())))) ORDER BY ((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CHAR(v0.c0, x'', v0.c2) AS NUMERIC)) ORDER BY (CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN '373555284' WHEN v0.c0 THEN v0.c1 END IN ('~避M'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CHAR(v0.c0, x'', v0.c2) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN '373555284' WHEN v0.c0 THEN v0.c1 END IN ('~避M'))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CHAR(v0.c0, x'', v0.c2) AS NUMERIC)) ORDER BY (CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN '373555284' WHEN v0.c0 THEN v0.c1 END IN ('~避M'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CHAR(v0.c0, x'', v0.c2) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN '373555284' WHEN v0.c0 THEN v0.c1 END IN ('~避M'))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CHAR(v0.c0, x'', v0.c2) AS NUMERIC)) ORDER BY (CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN '373555284' WHEN v0.c0 THEN v0.c1 END IN ('~避M'))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN -1414118907 THEN '' ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c1  WHEN -1414118907 THEN '' ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN -1414118907 THEN '' ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c1  WHEN -1414118907 THEN '' ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN -1414118907 THEN '' ELSE rt0.c2 END)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((v0.c1) IS TRUE)) NOTNULL) RIGHT OUTER JOIN v0 ON ((((((((((((((v0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))+(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (HEX(DISTINCT rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((v0.c1) IS TRUE)) NOTNULL) RIGHT OUTER JOIN v0 ON ((((((((((((((v0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))+(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((v0.c1) IS TRUE)) NOTNULL) RIGHT OUTER JOIN v0 ON ((((((((((((((v0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))+(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE (HEX(DISTINCT rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((v0.c1) IS TRUE)) NOTNULL) RIGHT OUTER JOIN v0 ON ((((((((((((((v0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))+(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (UNLIKELY(((rt0.c1)LIKE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c1)LIKE(rt0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (UNLIKELY(((rt0.c1)LIKE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c1)LIKE(rt0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (UNLIKELY(((rt0.c1)LIKE(rt0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE (json((- (rt0.c0)))) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE 0.9860307820989719 END ELSE ((vt0.c0)<=(rt0.c0)) END DESC  NULLS LAST, CAST(DATE(rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((json((- (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE 0.9860307820989719 END ELSE ((vt0.c0)<=(rt0.c0)) END DESC  NULLS LAST, CAST(DATE(rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1) AS NUMERIC) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (json((- (rt0.c0)))) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE 0.9860307820989719 END ELSE ((vt0.c0)<=(rt0.c0)) END DESC  NULLS LAST, CAST(DATE(rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((json((- (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE 0.9860307820989719 END ELSE ((vt0.c0)<=(rt0.c0)) END DESC  NULLS LAST, CAST(DATE(rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1) AS NUMERIC) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (json((- (rt0.c0)))) ORDER BY CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE 0.9860307820989719 END ELSE ((vt0.c0)<=(rt0.c0)) END DESC  NULLS LAST, CAST(DATE(rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c1) AS NUMERIC) DESC;
SELECT * FROM vt0 WHERE (json_extract(UPPER(vt0.c0), ((vt0.c0)OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract(UPPER(vt0.c0), ((vt0.c0)OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_extract(UPPER(vt0.c0), ((vt0.c0)OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract(UPPER(vt0.c0), ((vt0.c0)OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END))<((((((v0.c0)AND(v0.c2)))AND(v0.c2)))))) ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END))<((((((v0.c0)AND(v0.c2)))AND(v0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END))<((((((v0.c0)AND(v0.c2)))AND(v0.c2)))))) ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END))<((((((v0.c0)AND(v0.c2)))AND(v0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 END))<((((((v0.c0)AND(v0.c2)))AND(v0.c2)))))) ORDER BY CAST(v0.c2 COLLATE RTRIM AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((json_valid(rt0.c1))*('1897142689')));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c1))*('1897142689'))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((json_valid(rt0.c1))*('1897142689')));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c1))*('1897142689'))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((json_valid(rt0.c1))*('1897142689')));
SELECT * FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL));
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT ((('G~嘶d')LIKE(vt0.c0))))) ORDER BY (~ ((~ (v0.c0)))) DESC  NULLS LAST, (v0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT (((NOT ((('G~嘶d')LIKE(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY (~ ((~ (v0.c0)))) DESC  NULLS LAST, (v0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT ((('G~嘶d')LIKE(vt0.c0))))) ORDER BY (~ ((~ (v0.c0)))) DESC  NULLS LAST, (v0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT (((NOT ((('G~嘶d')LIKE(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY (~ ((~ (v0.c0)))) DESC  NULLS LAST, (v0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT ((('G~嘶d')LIKE(vt0.c0))))) ORDER BY (~ ((~ (v0.c0)))) DESC  NULLS LAST, (v0.c0 COLLATE BINARY IN ());
SELECT ALL * FROM v0, vt0, rt0 WHERE (((0.18365968186665937) BETWEEN ((((((((('37')AND(vt0.c0)))OR(v0.c2)))OR(NULL)))AND(v0.c2))) AND (((vt0.c0) IS FALSE)))) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((- (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.18365968186665937) BETWEEN ((((((((('37')AND(vt0.c0)))OR(v0.c2)))OR(NULL)))AND(v0.c2))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((- (x'')))) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((0.18365968186665937) BETWEEN ((((((((('37')AND(vt0.c0)))OR(v0.c2)))OR(NULL)))AND(v0.c2))) AND (((vt0.c0) IS FALSE)))) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((- (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((((0.18365968186665937) BETWEEN ((((((((('37')AND(vt0.c0)))OR(v0.c2)))OR(NULL)))AND(v0.c2))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((- (x'')))) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((0.18365968186665937) BETWEEN ((((((((('37')AND(vt0.c0)))OR(v0.c2)))OR(NULL)))AND(v0.c2))) AND (((vt0.c0) IS FALSE)))) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((- (x'')))) DESC;
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c2)))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((v0.c0 IN (vt0.c0))) NOTNULL)) ORDER BY highlight(rt0.c2, rt0.c0, v0.c0, v0.c0) COLLATE BINARY ASC, CAST(((v0.c0) IS TRUE) AS INTEGER)  NULLS FIRST, (((v0.c2 IN ()))<=(((rt0.c0)IS(0X83f2358))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY highlight(rt0.c2, rt0.c0, v0.c0, v0.c0) COLLATE BINARY ASC, CAST(((v0.c0) IS TRUE) AS INTEGER)  NULLS FIRST, (((v0.c2 IN ()))<=(((rt0.c0)IS(0x83f2358))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((v0.c0 IN (vt0.c0))) NOTNULL)) ORDER BY highlight(rt0.c2, rt0.c0, v0.c0, v0.c0) COLLATE BINARY ASC, CAST(((v0.c0) IS TRUE) AS INTEGER)  NULLS FIRST, (((v0.c2 IN ()))<=(((rt0.c0)IS(0X83f2358))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY highlight(rt0.c2, rt0.c0, v0.c0, v0.c0) COLLATE BINARY ASC, CAST(((v0.c0) IS TRUE) AS INTEGER)  NULLS FIRST, (((v0.c2 IN ()))<=(((rt0.c0)IS(0x83f2358))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((((rt0.c2) NOTNULL))OR(((rt0.c0) ISNULL))))OR((((v0.c1, v0.c1, vt0.c0))>=((v0.c0, vt0.c0, v0.c2))))))OR(((0X19d45208) NOT NULL))))AND(((((vt0.c0)AND(v0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOTNULL))OR(((rt0.c0) ISNULL))))OR((((v0.c1, v0.c1, vt0.c0))>=((v0.c0, vt0.c0, v0.c2))))))OR(((0x19d45208) NOT NULL))))AND(((((vt0.c0)AND(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((((rt0.c2) NOTNULL))OR(((rt0.c0) ISNULL))))OR((((v0.c1, v0.c1, vt0.c0))>=((v0.c0, vt0.c0, v0.c2))))))OR(((0X19d45208) NOT NULL))))AND(((((vt0.c0)AND(v0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOTNULL))OR(((rt0.c0) ISNULL))))OR((((v0.c1, v0.c1, vt0.c0))>=((v0.c0, vt0.c0, v0.c2))))))OR(((0x19d45208) NOT NULL))))AND(((((vt0.c0)AND(v0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((((rt0.c2) NOTNULL))OR(((rt0.c0) ISNULL))))OR((((v0.c1, v0.c1, vt0.c0))>=((v0.c0, vt0.c0, v0.c2))))))OR(((0X19d45208) NOT NULL))))AND(((((vt0.c0)AND(v0.c0)))AND(v0.c2)))));
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN -1672099441 ELSE rt0.c0 END, ((rt0.c1) IS FALSE), TYPEOF(rt0.c2))) AND ((rt0.c1 COLLATE NOCASE, ((NULL) IS TRUE), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN -1672099441 ELSE rt0.c0 END, ((rt0.c1) IS FALSE), TYPEOF(rt0.c2))) AND ((rt0.c1 COLLATE NOCASE, ((NULL) IS TRUE), (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN -1672099441 ELSE rt0.c0 END, ((rt0.c1) IS FALSE), TYPEOF(rt0.c2))) AND ((rt0.c1 COLLATE NOCASE, ((NULL) IS TRUE), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN -1672099441 ELSE rt0.c0 END, ((rt0.c1) IS FALSE), TYPEOF(rt0.c2))) AND ((rt0.c1 COLLATE NOCASE, ((NULL) IS TRUE), (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN -1672099441 ELSE rt0.c0 END, ((rt0.c1) IS FALSE), TYPEOF(rt0.c2))) AND ((rt0.c1 COLLATE NOCASE, ((NULL) IS TRUE), (rt0.c1 IN ())))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((('-398960213' IN (v0.c2, vt0.c0)))GLOB(((vt0.c0)LIKE(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-398960213' IN (v0.c2, vt0.c0)))GLOB(((vt0.c0)LIKE(v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((('-398960213' IN (v0.c2, vt0.c0)))GLOB(((vt0.c0)LIKE(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-398960213' IN (v0.c2, vt0.c0)))GLOB(((vt0.c0)LIKE(v0.c1))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((('-398960213' IN (v0.c2, vt0.c0)))GLOB(((vt0.c0)LIKE(v0.c1)))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((- (((((((((((((rt0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(NULL)))OR(0.20736080445515537)))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((((((rt0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(NULL)))OR(0.20736080445515537)))OR(v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((- (((((((((((((rt0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(NULL)))OR(0.20736080445515537)))OR(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((((((rt0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(NULL)))OR(0.20736080445515537)))OR(v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((- (((((((((((((rt0.c2)OR(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(NULL)))OR(0.20736080445515537)))OR(v0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c2)GLOB(vt0.c0)) IN ()) WHERE ((((v0.c2)) BETWEEN ((UPPER(DISTINCT rt0.c1))) AND ((((rt0.c2)<=(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((UPPER(DISTINCT rt0.c1))) AND ((((rt0.c2)<=(v0.c0)))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c2)GLOB(vt0.c0)) IN ()));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c2)GLOB(vt0.c0)) IN ()) WHERE ((((v0.c2)) BETWEEN ((UPPER(DISTINCT rt0.c1))) AND ((((rt0.c2)<=(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((UPPER(DISTINCT rt0.c1))) AND ((((rt0.c2)<=(v0.c0)))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c2)GLOB(vt0.c0)) IN ()));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((rt0.c2)GLOB(vt0.c0)) IN ()) WHERE ((((v0.c2)) BETWEEN ((UPPER(DISTINCT rt0.c1))) AND ((((rt0.c2)<=(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((~ ('䟟Bo8'))))<>(((- (v0.c2))))) CROSS JOIN vt0 ON ((rt0.c0) BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE WHERE (((((x'')>=(vt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c2))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(vt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c2))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((~ ('䟟Bo8'))))<>(((- (v0.c2))))) CROSS JOIN vt0 ON ((rt0.c0) BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((~ ('䟟Bo8'))))<>(((- (v0.c2))))) CROSS JOIN vt0 ON ((rt0.c0) BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE WHERE (((((x'')>=(vt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c2))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(vt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c2))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((~ ('䟟Bo8'))))<>(((- (v0.c2))))) CROSS JOIN vt0 ON ((rt0.c0) BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((~ ('䟟Bo8'))))<>(((- (v0.c2))))) CROSS JOIN vt0 ON ((rt0.c0) BETWEEN (v0.c1) AND (v0.c0)) COLLATE NOCASE WHERE (((((x'')>=(vt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c2))) AND ((~ (rt0.c0)))));
SELECT * FROM v0, vt0, rt0 WHERE (CAST((((v0.c1)) BETWEEN ((0.9583005335999143)) AND ((rt0.c0))) AS NUMERIC)) ORDER BY CASE WHEN ((((((((v0.c2)OR(x'')))OR(v0.c1)))OR(rt0.c2)))AND(x'')) THEN (- (v0.c1)) ELSE v0.c0 END ASC, CASE ((rt0.c2)OR(0.8296079198032957))  WHEN (((v0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, 0.5493317299598844, rt0.c0)) AND ((v0.c0, v0.c2, v0.c0))) THEN ((rt0.c2)GLOB(v0.c1)) END;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c1)) BETWEEN ((0.9583005335999143)) AND ((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((((((((v0.c2)OR(x'')))OR(v0.c1)))OR(rt0.c2)))AND(x'')) THEN (- (v0.c1)) ELSE v0.c0 END ASC, CASE ((rt0.c2)OR(0.8296079198032957))  WHEN (((v0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, 0.5493317299598844, rt0.c0)) AND ((v0.c0, v0.c2, v0.c0))) THEN ((rt0.c2)GLOB(v0.c1)) END);
SELECT * FROM v0, vt0, rt0 WHERE (CAST((((v0.c1)) BETWEEN ((0.9583005335999143)) AND ((rt0.c0))) AS NUMERIC)) ORDER BY CASE WHEN ((((((((v0.c2)OR(x'')))OR(v0.c1)))OR(rt0.c2)))AND(x'')) THEN (- (v0.c1)) ELSE v0.c0 END ASC, CASE ((rt0.c2)OR(0.8296079198032957))  WHEN (((v0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, 0.5493317299598844, rt0.c0)) AND ((v0.c0, v0.c2, v0.c0))) THEN ((rt0.c2)GLOB(v0.c1)) END;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c1)) BETWEEN ((0.9583005335999143)) AND ((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((((((((v0.c2)OR(x'')))OR(v0.c1)))OR(rt0.c2)))AND(x'')) THEN (- (v0.c1)) ELSE v0.c0 END ASC, CASE ((rt0.c2)OR(0.8296079198032957))  WHEN (((v0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, 0.5493317299598844, rt0.c0)) AND ((v0.c0, v0.c2, v0.c0))) THEN ((rt0.c2)GLOB(v0.c1)) END);
SELECT * FROM v0, vt0, rt0 WHERE (CAST((((v0.c1)) BETWEEN ((0.9583005335999143)) AND ((rt0.c0))) AS NUMERIC)) ORDER BY CASE WHEN ((((((((v0.c2)OR(x'')))OR(v0.c1)))OR(rt0.c2)))AND(x'')) THEN (- (v0.c1)) ELSE v0.c0 END ASC, CASE ((rt0.c2)OR(0.8296079198032957))  WHEN (((v0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c1, 0.5493317299598844, rt0.c0)) AND ((v0.c0, v0.c2, v0.c0))) THEN ((rt0.c2)GLOB(v0.c1)) END;
SELECT * FROM rt0, v0 WHERE (CASE 0X19e5fe26  WHEN (rt0.c1 IN (v0.c1, v0.c1)) THEN ((-1449112684)|(rt0.c2)) ELSE (+ (rt0.c1)) END) ORDER BY (((((rt0.c2) IS FALSE), ((v0.c2) ISNULL), (~ (rt0.c0))))<((UPPER(DISTINCT rt0.c1), ((rt0.c1) IS FALSE), CASE WHEN rt0.c2 THEN '931063520' ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((CASE 0X19e5fe26  WHEN (rt0.c1 IN (v0.c1, v0.c1)) THEN ((-1449112684)|(rt0.c2)) ELSE (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2) IS FALSE), ((v0.c2) ISNULL), (~ (rt0.c0))))<((UPPER(DISTINCT rt0.c1), ((rt0.c1) IS FALSE), CASE WHEN rt0.c2 THEN '931063520' ELSE v0.c1 END))));
SELECT * FROM rt0, v0 WHERE (CASE 0X19e5fe26  WHEN (rt0.c1 IN (v0.c1, v0.c1)) THEN ((-1449112684)|(rt0.c2)) ELSE (+ (rt0.c1)) END) ORDER BY (((((rt0.c2) IS FALSE), ((v0.c2) ISNULL), (~ (rt0.c0))))<((UPPER(DISTINCT rt0.c1), ((rt0.c1) IS FALSE), CASE WHEN rt0.c2 THEN '931063520' ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((CASE 0X19e5fe26  WHEN (rt0.c1 IN (v0.c1, v0.c1)) THEN ((-1449112684)|(rt0.c2)) ELSE (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c2) IS FALSE), ((v0.c2) ISNULL), (~ (rt0.c0))))<((UPPER(DISTINCT rt0.c1), ((rt0.c1) IS FALSE), CASE WHEN rt0.c2 THEN '931063520' ELSE v0.c1 END))));
SELECT * FROM rt0, v0 WHERE (CASE 0X19e5fe26  WHEN (rt0.c1 IN (v0.c1, v0.c1)) THEN ((-1449112684)|(rt0.c2)) ELSE (+ (rt0.c1)) END) ORDER BY (((((rt0.c2) IS FALSE), ((v0.c2) ISNULL), (~ (rt0.c0))))<((UPPER(DISTINCT rt0.c1), ((rt0.c1) IS FALSE), CASE WHEN rt0.c2 THEN '931063520' ELSE v0.c1 END)));
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (((~ (v0.c2)))>=(IFNULL(DISTINCT v0.c1, v0.c1)));
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c2)))>=(IFNULL(DISTINCT v0.c1, v0.c1))));
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (((~ (v0.c2)))>=(IFNULL(DISTINCT v0.c1, v0.c1)));
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c2)))>=(IFNULL(DISTINCT v0.c1, v0.c1))));
SELECT COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (((~ (v0.c2)))>=(IFNULL(DISTINCT v0.c1, v0.c1)));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN ((vt0.c0)|(v0.c2)) WHEN ((vt0.c0)*(v0.c2)) THEN ((rt0.c2) NOTNULL) WHEN CASE v0.c1  WHEN v0.c1 THEN '-58859129' WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c2)|(vt0.c0)) ELSE ((((v0.c1)OR(v0.c0)))OR(vt0.c0)) END) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((vt0.c0)|(v0.c2)) WHEN ((vt0.c0)*(v0.c2)) THEN ((rt0.c2) NOTNULL) WHEN CASE v0.c1  WHEN v0.c1 THEN '-58859129' WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c2)|(vt0.c0)) ELSE ((((v0.c1)OR(v0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN ((vt0.c0)|(v0.c2)) WHEN ((vt0.c0)*(v0.c2)) THEN ((rt0.c2) NOTNULL) WHEN CASE v0.c1  WHEN v0.c1 THEN '-58859129' WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c2)|(vt0.c0)) ELSE ((((v0.c1)OR(v0.c0)))OR(vt0.c0)) END) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((vt0.c0)|(v0.c2)) WHEN ((vt0.c0)*(v0.c2)) THEN ((rt0.c2) NOTNULL) WHEN CASE v0.c1  WHEN v0.c1 THEN '-58859129' WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c2)|(vt0.c0)) ELSE ((((v0.c1)OR(v0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE WHEN rt0.c2 THEN ((vt0.c0)|(v0.c2)) WHEN ((vt0.c0)*(v0.c2)) THEN ((rt0.c2) NOTNULL) WHEN CASE v0.c1  WHEN v0.c1 THEN '-58859129' WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END THEN ((v0.c2)|(vt0.c0)) ELSE ((((v0.c1)OR(v0.c0)))OR(vt0.c0)) END) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((- (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) IS FALSE)))  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) IS FALSE)))  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((- (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) IS FALSE)))  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) IS FALSE)))  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((- (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) IS FALSE)))  NULLS FIRST, NULL;
SELECT ALL * FROM vt0, rt0, v0 WHERE (0.741880042352046) ORDER BY (((v0.c2)<<(rt0.c2)) IN (CAST(rt0.c0 AS BLOB), ((v0.c2)<=(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.741880042352046) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c2)<<(rt0.c2)) IN (CAST(rt0.c0 AS BLOB), ((v0.c2)<=(v0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (0.741880042352046) ORDER BY (((v0.c2)<<(rt0.c2)) IN (CAST(rt0.c0 AS BLOB), ((v0.c2)<=(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.741880042352046) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((v0.c2)<<(rt0.c2)) IN (CAST(rt0.c0 AS BLOB), ((v0.c2)<=(v0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (0.741880042352046) ORDER BY (((v0.c2)<<(rt0.c2)) IN (CAST(rt0.c0 AS BLOB), ((v0.c2)<=(v0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (LOWER((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) ORDER BY CASE (v0.c1 IN ())  WHEN (- (v0.c0)) THEN (((v0.c1)) BETWEEN (('')) AND ((v0.c2))) ELSE ((v0.c1)GLOB(v0.c2)) END DESC, 0Xffffffff97504e93 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c1 IN ())  WHEN (- (v0.c0)) THEN (((v0.c1)) BETWEEN (('')) AND ((v0.c2))) ELSE ((v0.c1)GLOB(v0.c2)) END DESC, 0xffffffff97504e93 ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (LOWER((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) ORDER BY CASE (v0.c1 IN ())  WHEN (- (v0.c0)) THEN (((v0.c1)) BETWEEN (('')) AND ((v0.c2))) ELSE ((v0.c1)GLOB(v0.c2)) END DESC, 0Xffffffff97504e93 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c1 IN ())  WHEN (- (v0.c0)) THEN (((v0.c1)) BETWEEN (('')) AND ((v0.c2))) ELSE ((v0.c1)GLOB(v0.c2)) END DESC, 0xffffffff97504e93 ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (LOWER((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) ORDER BY CASE (v0.c1 IN ())  WHEN (- (v0.c0)) THEN (((v0.c1)) BETWEEN (('')) AND ((v0.c2))) ELSE ((v0.c1)GLOB(v0.c2)) END DESC, 0Xffffffff97504e93 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))>((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))>((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))>((CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))>((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))>((CAST(vt0.c0 AS BLOB)))));
SELECT * FROM v0 WHERE (((((v0.c2)OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN -82514626 THEN NULL WHEN NULL THEN '-0.0' ELSE v0.c0 END)))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))))) ORDER BY ((9.3106352E8) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN -82514626 THEN NULL WHEN NULL THEN '-0.0' ELSE v0.c0 END)))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((9.3106352E8) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM v0 WHERE (((((v0.c2)OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN -82514626 THEN NULL WHEN NULL THEN '-0.0' ELSE v0.c0 END)))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))))) ORDER BY ((9.3106352E8) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN -82514626 THEN NULL WHEN NULL THEN '-0.0' ELSE v0.c0 END)))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY ((9.3106352E8) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM v0 WHERE (((((v0.c2)OR(CASE v0.c1  WHEN v0.c1 THEN v0.c0 WHEN -82514626 THEN NULL WHEN NULL THEN '-0.0' ELSE v0.c0 END)))AND(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))))) ORDER BY ((9.3106352E8) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE NOCASE)) ASC;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((rt0.c0)) BETWEEN ((CAST(x'' AS BLOB))) AND (((rt0.c2 IN ())))) ASC  NULLS LAST, (((- (rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) BETWEEN ((CAST(x'' AS BLOB))) AND (((rt0.c2 IN ())))) ASC  NULLS LAST, (((- (rt0.c2))) IS FALSE));
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((rt0.c0)) BETWEEN ((CAST(x'' AS BLOB))) AND (((rt0.c2 IN ())))) ASC  NULLS LAST, (((- (rt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) BETWEEN ((CAST(x'' AS BLOB))) AND (((rt0.c2 IN ())))) ASC  NULLS LAST, (((- (rt0.c2))) IS FALSE));
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((rt0.c0)) BETWEEN ((CAST(x'' AS BLOB))) AND (((rt0.c2 IN ())))) ASC  NULLS LAST, (((- (rt0.c2))) IS FALSE);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) ORDER BY ((((v0.c0) NOTNULL)) IS FALSE)  NULLS FIRST, (((((rt0.c1)<>(rt0.c1)), vt0.c0 COLLATE RTRIM, (((v0.c2)) BETWEEN (('(&6f0')) AND ((v0.c1)))))<=(((((v0.c2))!=((v0.c2))), NULL, (0x49466326 IN ())))) ASC, CAST(((rt0.c2)IS(v0.c2)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((v0.c0) NOTNULL)) IS FALSE)  NULLS FIRST, (((((rt0.c1)<>(rt0.c1)), vt0.c0 COLLATE RTRIM, (((v0.c2)) BETWEEN (('(&6f0')) AND ((v0.c1)))))<=(((((v0.c2))<>((v0.c2))), NULL, (0X49466326 IN ())))) ASC, CAST(((rt0.c2)IS(v0.c2)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) ORDER BY ((((v0.c0) NOTNULL)) IS FALSE)  NULLS FIRST, (((((rt0.c1)<>(rt0.c1)), vt0.c0 COLLATE RTRIM, (((v0.c2)) BETWEEN (('(&6f0')) AND ((v0.c1)))))<=(((((v0.c2))!=((v0.c2))), NULL, (0x49466326 IN ())))) ASC, CAST(((rt0.c2)IS(v0.c2)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((v0.c0) NOTNULL)) IS FALSE)  NULLS FIRST, (((((rt0.c1)<>(rt0.c1)), vt0.c0 COLLATE RTRIM, (((v0.c2)) BETWEEN (('(&6f0')) AND ((v0.c1)))))<=(((((v0.c2))<>((v0.c2))), NULL, (0X49466326 IN ())))) ASC, CAST(((rt0.c2)IS(v0.c2)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) ORDER BY ((((v0.c0) NOTNULL)) IS FALSE)  NULLS FIRST, (((((rt0.c1)<>(rt0.c1)), vt0.c0 COLLATE RTRIM, (((v0.c2)) BETWEEN (('(&6f0')) AND ((v0.c1)))))<=(((((v0.c2))!=((v0.c2))), NULL, (0x49466326 IN ())))) ASC, CAST(((rt0.c2)IS(v0.c2)) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((v0.c1, v0.c2, v0.c2))) COLLATE RTRIM LEFT OUTER JOIN rt0 ON SQLITE_VERSION() COLLATE RTRIM WHERE ((((rt0.c0 IN ()))IS(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((v0.c1, v0.c2, v0.c2))) COLLATE RTRIM LEFT OUTER JOIN rt0 ON SQLITE_VERSION() COLLATE RTRIM);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((v0.c1, v0.c2, v0.c2))) COLLATE RTRIM LEFT OUTER JOIN rt0 ON SQLITE_VERSION() COLLATE RTRIM WHERE ((((rt0.c0 IN ()))IS(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((v0.c1, v0.c2, v0.c2))) COLLATE RTRIM LEFT OUTER JOIN rt0 ON SQLITE_VERSION() COLLATE RTRIM);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, vt0.c0)) AND ((v0.c1, v0.c2, v0.c2))) COLLATE RTRIM LEFT OUTER JOIN rt0 ON SQLITE_VERSION() COLLATE RTRIM WHERE ((((rt0.c0 IN ()))IS(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))));
SELECT * FROM rt0 INNER JOIN v0 ON (((- (v0.c0)))<>(CAST(vt0.c0 AS INTEGER))) INNER JOIN vt0 ON ((((rt0.c2) NOTNULL)) ISNULL) WHERE (((0.8513343077944064)*('0.5493317299598844' COLLATE RTRIM))) ORDER BY ((x'')<<(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) DESC, ((((rt0.c2)+('')))+(CAST(v0.c0 AS TEXT))), ((((json_quote(vt0.c0))AND((NOT (rt0.c0)))))AND(UNICODE(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.8513343077944064)*('0.5493317299598844' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((- (v0.c0)))<>(CAST(vt0.c0 AS INTEGER))) INNER JOIN vt0 ON ((((rt0.c2) NOTNULL)) ISNULL) ORDER BY ((x'')<<(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) DESC, ((((rt0.c2)+('')))+(CAST(v0.c0 AS TEXT))), ((((json_quote(vt0.c0))AND((NOT (rt0.c0)))))AND(UNICODE(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON (((- (v0.c0)))<>(CAST(vt0.c0 AS INTEGER))) INNER JOIN vt0 ON ((((rt0.c2) NOTNULL)) ISNULL) WHERE (((0.8513343077944064)*('0.5493317299598844' COLLATE RTRIM))) ORDER BY ((x'')<<(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) DESC, ((((rt0.c2)+('')))+(CAST(v0.c0 AS TEXT))), ((((json_quote(vt0.c0))AND((NOT (rt0.c0)))))AND(UNICODE(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.8513343077944064)*('0.5493317299598844' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((- (v0.c0)))<>(CAST(vt0.c0 AS INTEGER))) INNER JOIN vt0 ON ((((rt0.c2) NOTNULL)) ISNULL) ORDER BY ((x'')<<(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) DESC, ((((rt0.c2)+('')))+(CAST(v0.c0 AS TEXT))), ((((json_quote(vt0.c0))AND((NOT (rt0.c0)))))AND(UNICODE(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON (((- (v0.c0)))<>(CAST(vt0.c0 AS INTEGER))) INNER JOIN vt0 ON ((((rt0.c2) NOTNULL)) ISNULL) WHERE (((0.8513343077944064)*('0.5493317299598844' COLLATE RTRIM))) ORDER BY ((x'')<<(((v0.c0) BETWEEN (vt0.c0) AND (x'')))) DESC, ((((rt0.c2)+('')))+(CAST(v0.c0 AS TEXT))), ((((json_quote(vt0.c0))AND((NOT (rt0.c0)))))AND(UNICODE(vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c0 DESC);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY rt0.c0 DESC);
SELECT * FROM vt0, rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY rt0.c0 DESC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND((NOT ('1578563578')))))AND(((rt0.c0)&(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND((NOT ('1578563578')))))AND(((rt0.c0)&(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND((NOT ('1578563578')))))AND(((rt0.c0)&(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND((NOT ('1578563578')))))AND(((rt0.c0)&(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)AND((NOT ('1578563578')))))AND(((rt0.c0)&(rt0.c1)))) ASC;
SELECT * FROM v0, rt0, vt0 WHERE (CASE (v0.c2 IN ())  WHEN rt0.c1 COLLATE RTRIM THEN (((vt0.c0))>=(('냏PL熷B9'))) END);
SELECT SUM(count) FROM (SELECT ((CASE (v0.c2 IN ())  WHEN rt0.c1 COLLATE RTRIM THEN (((vt0.c0))>=(('냏PL熷B9'))) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CASE (v0.c2 IN ())  WHEN rt0.c1 COLLATE RTRIM THEN (((vt0.c0))>=(('냏PL熷B9'))) END);
SELECT SUM(count) FROM (SELECT ((CASE (v0.c2 IN ())  WHEN rt0.c1 COLLATE RTRIM THEN (((vt0.c0))>=(('냏PL熷B9'))) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (CASE (v0.c2 IN ())  WHEN rt0.c1 COLLATE RTRIM THEN (((vt0.c0))>=(('냏PL熷B9'))) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))OR(vt0.c0 COLLATE BINARY))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON (((v0.c0)<>(rt0.c1)) IN ()) WHERE ((((+ (v0.c0))) NOTNULL)) ORDER BY ((((UNICODE(rt0.c2))AND(((v0.c1)+(v0.c2)))))AND(ABS(0.016872244156278415)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON (((v0.c0)!=(rt0.c1)) IN ()) ORDER BY ((((UNICODE(rt0.c2))AND(((v0.c1)+(v0.c2)))))AND(ABS(0.016872244156278415))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON (((v0.c0)<>(rt0.c1)) IN ()) WHERE ((((+ (v0.c0))) NOTNULL)) ORDER BY ((((UNICODE(rt0.c2))AND(((v0.c1)+(v0.c2)))))AND(ABS(0.016872244156278415)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON (((v0.c0)!=(rt0.c1)) IN ()) ORDER BY ((((UNICODE(rt0.c2))AND(((v0.c1)+(v0.c2)))))AND(ABS(0.016872244156278415))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON (((v0.c0)<>(rt0.c1)) IN ()) WHERE ((((+ (v0.c0))) NOTNULL)) ORDER BY ((((UNICODE(rt0.c2))AND(((v0.c1)+(v0.c2)))))AND(ABS(0.016872244156278415)));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NULL IN ()), rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NULL IN ()), rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NULL IN ()), rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NULL IN ()), rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN ((NULL IN ()), rt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ('1652901909');
SELECT SUM(count) FROM (SELECT (('1652901909') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ('1652901909');
SELECT SUM(count) FROM (SELECT (('1652901909') IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ('1652901909');
SELECT * FROM v0 CROSS JOIN vt0 ON CASE WHEN '-1210876942' THEN HEX(v0.c0) END WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END AS NUMERIC)) ORDER BY UNLIKELY(CAST(v0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END AS NUMERIC)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN '-1210876942' THEN HEX(v0.c0) END ORDER BY UNLIKELY(CAST(v0.c1 AS REAL)));
SELECT * FROM v0 CROSS JOIN vt0 ON CASE WHEN '-1210876942' THEN HEX(v0.c0) END WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END AS NUMERIC)) ORDER BY UNLIKELY(CAST(v0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END AS NUMERIC)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN '-1210876942' THEN HEX(v0.c0) END ORDER BY UNLIKELY(CAST(v0.c1 AS REAL)));
SELECT * FROM v0 CROSS JOIN vt0 ON CASE WHEN '-1210876942' THEN HEX(v0.c0) END WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END AS NUMERIC)) ORDER BY UNLIKELY(CAST(v0.c1 AS REAL));
SELECT * FROM v0 WHERE (((v0.c1 COLLATE RTRIM)&(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM)&(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1 COLLATE RTRIM)&(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE RTRIM)&(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c1 COLLATE RTRIM)&(((v0.c0) ISNULL))));
SELECT * FROM v0, rt0 WHERE ((('-398960213') NOT BETWEEN (((v0.c1) NOTNULL)) AND (((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-398960213') NOT BETWEEN (((v0.c1) NOTNULL)) AND (((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((('-398960213') NOT BETWEEN (((v0.c1) NOTNULL)) AND (((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-398960213') NOT BETWEEN (((v0.c1) NOTNULL)) AND (((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((('-398960213') NOT BETWEEN (((v0.c1) NOTNULL)) AND (((v0.c0)<(v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((1.639157887E9 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((1.639157887E9 IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((1.639157887E9 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((1.639157887E9 IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((1.639157887E9 IN ()));
SELECT * FROM rt0, vt0 INNER JOIN v0 ON (((('{}') IS FALSE))-(CAST(x'd77c' AS REAL))) WHERE ((((CAST(rt0.c2 AS TEXT), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)), v0.c1 COLLATE NOCASE))<((CAST(v0.c2 AS TEXT), v0.c2, ((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS TEXT), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)), v0.c1 COLLATE NOCASE))<((CAST(v0.c2 AS TEXT), v0.c2, ((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((('{}') IS FALSE))-(CAST(x'd77c' AS REAL))));
SELECT * FROM rt0, vt0 INNER JOIN v0 ON (((('{}') IS FALSE))-(CAST(x'd77c' AS REAL))) WHERE ((((CAST(rt0.c2 AS TEXT), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)), v0.c1 COLLATE NOCASE))<((CAST(v0.c2 AS TEXT), v0.c2, ((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c2 AS TEXT), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)), v0.c1 COLLATE NOCASE))<((CAST(v0.c2 AS TEXT), v0.c2, ((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((('{}') IS FALSE))-(CAST(x'd77c' AS REAL))));
SELECT * FROM rt0, vt0 INNER JOIN v0 ON (((('{}') IS FALSE))-(CAST(x'd77c' AS REAL))) WHERE ((((CAST(rt0.c2 AS TEXT), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)), v0.c1 COLLATE NOCASE))<((CAST(v0.c2 AS TEXT), v0.c2, ((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (x'' IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (x'' IN ()) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (x'' IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (x'' IN ()) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (x'' IN ()) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0, v0, rt0 WHERE ((+ (LIKELIHOOD(DISTINCT v0.c0, 0.7948663733174836))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(DISTINCT v0.c0, 0.7948663733174836)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((+ (LIKELIHOOD(DISTINCT v0.c0, 0.7948663733174836))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(DISTINCT v0.c0, 0.7948663733174836)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((+ (LIKELIHOOD(DISTINCT v0.c0, 0.7948663733174836))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND('')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (((((vt0.c0) ISNULL), vt0.c0, ((NULL) NOTNULL)))==(((~ (vt0.c0)), ((((vt0.c0)AND(0.12347729382489059)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND('')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL), vt0.c0, ((NULL) NOTNULL)))==(((~ (vt0.c0)), ((((vt0.c0)AND(0.12347729382489059)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND('')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (((((vt0.c0) ISNULL), vt0.c0, ((NULL) NOTNULL)))==(((~ (vt0.c0)), ((((vt0.c0)AND(0.12347729382489059)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND('')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) ISNULL), vt0.c0, ((NULL) NOTNULL)))==(((~ (vt0.c0)), ((((vt0.c0)AND(0.12347729382489059)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND('')))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (((((vt0.c0) ISNULL), vt0.c0, ((NULL) NOTNULL)))==(((~ (vt0.c0)), ((((vt0.c0)AND(0.12347729382489059)))AND(vt0.c0)), ((vt0.c0)+(vt0.c0))))) ASC;
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((0.4452409029986636) NOTNULL) WHERE (CASE ((v0.c0)-(vt0.c0))  WHEN ((0.755167444290701)!=(rt0.c1)) THEN x'' COLLATE BINARY ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)-(vt0.c0))  WHEN ((0.755167444290701)<>(rt0.c1)) THEN x'' COLLATE BINARY ELSE rt0.c0 END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((0.4452409029986636) NOTNULL));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((0.4452409029986636) NOTNULL) WHERE (CASE ((v0.c0)-(vt0.c0))  WHEN ((0.755167444290701)!=(rt0.c1)) THEN x'' COLLATE BINARY ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)-(vt0.c0))  WHEN ((0.755167444290701)<>(rt0.c1)) THEN x'' COLLATE BINARY ELSE rt0.c0 END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((0.4452409029986636) NOTNULL));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((0.4452409029986636) NOTNULL) WHERE (CASE ((v0.c0)-(vt0.c0))  WHEN ((0.755167444290701)!=(rt0.c1)) THEN x'' COLLATE BINARY ELSE rt0.c0 END);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((('-1844620761') BETWEEN (v0.c1) AND (v0.c0))) IS FALSE)) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT (((((('-1844620761') BETWEEN (v0.c1) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY '' DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((('-1844620761') BETWEEN (v0.c1) AND (v0.c0))) IS FALSE)) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT (((((('-1844620761') BETWEEN (v0.c1) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY '' DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((('-1844620761') BETWEEN (v0.c1) AND (v0.c0))) IS FALSE)) ORDER BY '' DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0))<>((v0.c1)))))) ORDER BY CAST(((rt0.c0) BETWEEN (v0.c2) AND (rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0))!=((v0.c1)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c0) BETWEEN (v0.c2) AND (rt0.c1)) AS REAL) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0))<>((v0.c1)))))) ORDER BY CAST(((rt0.c0) BETWEEN (v0.c2) AND (rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0))!=((v0.c1)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c0) BETWEEN (v0.c2) AND (rt0.c1)) AS REAL) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND ((((rt0.c0))<>((v0.c1)))))) ORDER BY CAST(((rt0.c0) BETWEEN (v0.c2) AND (rt0.c1)) AS REAL) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c1))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((rt0.c2) NOT NULL) IN (((0.5493317299598844)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((rt0.c2) NOT NULL) IN (((0.5493317299598844)>>(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c1))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((rt0.c2) NOT NULL) IN (((0.5493317299598844)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((rt0.c2) NOT NULL) IN (((0.5493317299598844)>>(rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c1))) ORDER BY CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((rt0.c2) NOT NULL) IN (((0.5493317299598844)>>(rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((433345032)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))OR(v0.c2)))OR(vt0.c0)))AND(v0.c2)))%(NULL)) WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((433345032)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))OR(v0.c2)))OR(vt0.c0)))AND(v0.c2)))%(NULL)));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((433345032)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))OR(v0.c2)))OR(vt0.c0)))AND(v0.c2)))%(NULL)) WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((433345032)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))OR(v0.c2)))OR(vt0.c0)))AND(v0.c2)))%(NULL)));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((((((((((433345032)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))OR(v0.c2)))OR(vt0.c0)))AND(v0.c2)))%(NULL)) WHERE (((((rt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c2))) IS FALSE));
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0) IS FALSE) AS REAL)) ORDER BY NULL, v0.c1 ASC  NULLS LAST, (((((((((((vt0.c0, v0.c1, v0.c0))!=((v0.c1, v0.c1, 0.6511011865429569))))AND(x'038a')))AND(CASE WHEN v0.c1 THEN v0.c2 END)))OR(CASE WHEN 0.9349437571426968 THEN v0.c1 END)))OR(((v0.c0)|(v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL, v0.c1 ASC  NULLS LAST, (((((((((((vt0.c0, v0.c1, v0.c0))<>((v0.c1, v0.c1, 0.6511011865429569))))AND(x'038a')))AND(CASE WHEN v0.c1 THEN v0.c2 END)))OR(CASE WHEN 0.9349437571426968 THEN v0.c1 END)))OR(((v0.c0)|(v0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0) IS FALSE) AS REAL)) ORDER BY NULL, v0.c1 ASC  NULLS LAST, (((((((((((vt0.c0, v0.c1, v0.c0))!=((v0.c1, v0.c1, 0.6511011865429569))))AND(x'038a')))AND(CASE WHEN v0.c1 THEN v0.c2 END)))OR(CASE WHEN 0.9349437571426968 THEN v0.c1 END)))OR(((v0.c0)|(v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL, v0.c1 ASC  NULLS LAST, (((((((((((vt0.c0, v0.c1, v0.c0))<>((v0.c1, v0.c1, 0.6511011865429569))))AND(x'038a')))AND(CASE WHEN v0.c1 THEN v0.c2 END)))OR(CASE WHEN 0.9349437571426968 THEN v0.c1 END)))OR(((v0.c0)|(v0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0) IS FALSE) AS REAL)) ORDER BY NULL, v0.c1 ASC  NULLS LAST, (((((((((((vt0.c0, v0.c1, v0.c0))!=((v0.c1, v0.c1, 0.6511011865429569))))AND(x'038a')))AND(CASE WHEN v0.c1 THEN v0.c2 END)))OR(CASE WHEN 0.9349437571426968 THEN v0.c1 END)))OR(((v0.c0)|(v0.c2)))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((((v0.c2)AND(NULL)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)AND(NULL)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c2)AND(NULL)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)AND(NULL)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c2)AND(NULL)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE rt0.c1  WHEN CAST(rt0.c1 AS BLOB) THEN ((x'3abe')/(rt0.c2)) END) ORDER BY (UNLIKELY(DISTINCT rt0.c1) IN ('1694600885'))  NULLS LAST, CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN (rt0.c2 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'adb7')) ELSE ((v0.c0)LIKE(rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN CAST(rt0.c1 AS BLOB) THEN ((x'3abe')/(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (UNLIKELY(DISTINCT rt0.c1) IN ('1694600885'))  NULLS LAST, CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN (rt0.c2 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'adb7')) ELSE ((v0.c0)LIKE(rt0.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE rt0.c1  WHEN CAST(rt0.c1 AS BLOB) THEN ((x'3abe')/(rt0.c2)) END) ORDER BY (UNLIKELY(DISTINCT rt0.c1) IN ('1694600885'))  NULLS LAST, CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN (rt0.c2 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'adb7')) ELSE ((v0.c0)LIKE(rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN CAST(rt0.c1 AS BLOB) THEN ((x'3abe')/(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (UNLIKELY(DISTINCT rt0.c1) IN ('1694600885'))  NULLS LAST, CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN (rt0.c2 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'adb7')) ELSE ((v0.c0)LIKE(rt0.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE rt0.c1  WHEN CAST(rt0.c1 AS BLOB) THEN ((x'3abe')/(rt0.c2)) END) ORDER BY (UNLIKELY(DISTINCT rt0.c1) IN ('1694600885'))  NULLS LAST, CASE CASE WHEN rt0.c0 THEN rt0.c0 END  WHEN (rt0.c2 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (x'adb7')) ELSE ((v0.c0)LIKE(rt0.c2)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.35186324432374405);
SELECT SUM(count) FROM (SELECT ((0.35186324432374405) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.35186324432374405);
SELECT SUM(count) FROM (SELECT ((0.35186324432374405) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.35186324432374405);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(0.17184688940446224)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))>>(CHAR(v0.c0, vt0.c0, v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(0.17184688940446224)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))>>(CHAR(v0.c0, vt0.c0, v0.c2)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(0.17184688940446224)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))>>(CHAR(v0.c0, vt0.c0, v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(0.17184688940446224)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))>>(CHAR(v0.c0, vt0.c0, v0.c2)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(0.17184688940446224)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))>>(CHAR(v0.c0, vt0.c0, v0.c2))));
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON v0.c1 WHERE ((+ (CASE WHEN '373555284' THEN vt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN '373555284' THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON v0.c1);
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON v0.c1 WHERE ((+ (CASE WHEN '373555284' THEN vt0.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN '373555284' THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON v0.c1);
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON v0.c1 WHERE ((+ (CASE WHEN '373555284' THEN vt0.c0 ELSE NULL END)));
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2))<>((rt0.c2, 0X5e9aa3a4, rt0.c2))))||(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND ((rt0.c2 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, rt0.c2))!=((rt0.c2, 0x5e9aa3a4, rt0.c2))))||(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND ((rt0.c2 IN (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2))<>((rt0.c2, 0X5e9aa3a4, rt0.c2))))||(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND ((rt0.c2 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, rt0.c2))!=((rt0.c2, 0x5e9aa3a4, rt0.c2))))||(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND ((rt0.c2 IN (rt0.c1)))));
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2))<>((rt0.c2, 0X5e9aa3a4, rt0.c2))))||(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND ((rt0.c2 IN (rt0.c1))));
SELECT * FROM v0 WHERE (0.3207546354340882) ORDER BY ((CAST(v0.c0 AS NUMERIC))=(((v0.c2) BETWEEN (v0.c1) AND (0.6386829682648615))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3207546354340882) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC))=(((v0.c2) BETWEEN (v0.c1) AND (0.6386829682648615))))  NULLS FIRST);
SELECT * FROM v0 WHERE (0.3207546354340882) ORDER BY ((CAST(v0.c0 AS NUMERIC))=(((v0.c2) BETWEEN (v0.c1) AND (0.6386829682648615))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3207546354340882) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC))=(((v0.c2) BETWEEN (v0.c1) AND (0.6386829682648615))))  NULLS FIRST);
SELECT * FROM v0 WHERE (0.3207546354340882) ORDER BY ((CAST(v0.c0 AS NUMERIC))=(((v0.c2) BETWEEN (v0.c1) AND (0.6386829682648615))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((((((vt0.c0 IN ()))OR((- (vt0.c0)))))AND((((vt0.c0))==((vt0.c0))))))AND(x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(1348375110))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((vt0.c0 IN ()))OR((- (vt0.c0)))))AND((((vt0.c0))==((vt0.c0))))))AND(x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(1348375110))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((((((vt0.c0 IN ()))OR((- (vt0.c0)))))AND((((vt0.c0))==((vt0.c0))))))AND(x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(1348375110))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((vt0.c0 IN ()))OR((- (vt0.c0)))))AND((((vt0.c0))==((vt0.c0))))))AND(x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(1348375110))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((((((((((vt0.c0 IN ()))OR((- (vt0.c0)))))AND((((vt0.c0))==((vt0.c0))))))AND(x'')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(1348375110))  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN 1587192740 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END ELSE (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN 1587192740 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN 1587192740 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END ELSE (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN 1587192740 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c1 THEN 1587192740 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END ELSE (- (rt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (UNICODE(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNICODE(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UNICODE(vt0.c0));
SELECT ALL * FROM v0 WHERE (((v0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c1) IS FALSE));
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))) AND ((CAST(rt0.c0 AS NUMERIC)))));
SELECT ALL * FROM vt0 WHERE (((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0) IS TRUE)))) ORDER BY (((((vt0.c0))<((vt0.c0))))AND((((vt0.c0, vt0.c0, '1897142689')) NOT BETWEEN ((vt0.c0, '1672562655', vt0.c0)) AND ((vt0.c0, 'G~嘶d', vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<((vt0.c0))))AND((((vt0.c0, vt0.c0, '1897142689')) NOT BETWEEN ((vt0.c0, '1672562655', vt0.c0)) AND ((vt0.c0, 'G~嘶d', vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0) IS TRUE)))) ORDER BY (((((vt0.c0))<((vt0.c0))))AND((((vt0.c0, vt0.c0, '1897142689')) NOT BETWEEN ((vt0.c0, '1672562655', vt0.c0)) AND ((vt0.c0, 'G~嘶d', vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<((vt0.c0))))AND((((vt0.c0, vt0.c0, '1897142689')) NOT BETWEEN ((vt0.c0, '1672562655', vt0.c0)) AND ((vt0.c0, 'G~嘶d', vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0) IS TRUE)))) ORDER BY (((((vt0.c0))<((vt0.c0))))AND((((vt0.c0, vt0.c0, '1897142689')) NOT BETWEEN ((vt0.c0, '1672562655', vt0.c0)) AND ((vt0.c0, 'G~嘶d', vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((x'') NOT BETWEEN (rt0.c0) AND (v0.c1))  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END ELSE rt0.c2 END) ORDER BY CASE WHEN NULL THEN (v0.c0 IN ()) END  NULLS FIRST, rt0.c2  NULLS FIRST, CAST(v0.c2 COLLATE NOCASE AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') NOT BETWEEN (rt0.c0) AND (v0.c1))  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END ELSE rt0.c2 END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN NULL THEN (v0.c0 IN ()) END  NULLS FIRST, rt0.c2  NULLS FIRST, CAST(v0.c2 COLLATE NOCASE AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((x'') NOT BETWEEN (rt0.c0) AND (v0.c1))  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END ELSE rt0.c2 END) ORDER BY CASE WHEN NULL THEN (v0.c0 IN ()) END  NULLS FIRST, rt0.c2  NULLS FIRST, CAST(v0.c2 COLLATE NOCASE AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') NOT BETWEEN (rt0.c0) AND (v0.c1))  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END ELSE rt0.c2 END) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN NULL THEN (v0.c0 IN ()) END  NULLS FIRST, rt0.c2  NULLS FIRST, CAST(v0.c2 COLLATE NOCASE AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((x'') NOT BETWEEN (rt0.c0) AND (v0.c1))  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN v0.c1 THEN rt0.c2 ELSE v0.c1 END ELSE rt0.c2 END) ORDER BY CASE WHEN NULL THEN (v0.c0 IN ()) END  NULLS FIRST, rt0.c2  NULLS FIRST, CAST(v0.c2 COLLATE NOCASE AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((x'')|(''))) ORDER BY ((((vt0.c0)/(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, CASE WHEN ((vt0.c0) ISNULL) THEN (NOT (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')|(''))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)/(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, CASE WHEN ((vt0.c0) ISNULL) THEN (NOT (vt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((x'')|(''))) ORDER BY ((((vt0.c0)/(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, CASE WHEN ((vt0.c0) ISNULL) THEN (NOT (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')|(''))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)/(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, CASE WHEN ((vt0.c0) ISNULL) THEN (NOT (vt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((x'')|(''))) ORDER BY ((((vt0.c0)/(vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC, CASE WHEN ((vt0.c0) ISNULL) THEN (NOT (vt0.c0)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c2)%(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c2)%(v0.c2)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c2)%(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c2)%(v0.c2)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c1)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c2)%(v0.c2))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE NOCASE)LIKE(x''))) ORDER BY (((('' IN ()), (+ (v0.c0)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2))))>(((('b%')+(v0.c2)), ((v0.c0) NOT NULL), (((v0.c0))<>((v0.c1)))))), (~ (((v0.c1)+(v0.c1)))) ASC  NULLS LAST, CASE (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END THEN '' WHEN ((0.39739398161764417) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN CASE '922606885'  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1639157887' WHEN v0.c2 THEN x'' ELSE NULL END THEN (((x'9abb'))<=((v0.c1))) ELSE (+ (v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE NOCASE)LIKE(x''))) IS TRUE)  as count FROM v0 ORDER BY (((('' IN ()), (+ (v0.c0)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2))))>(((('b%')+(v0.c2)), ((v0.c0) NOT NULL), (((v0.c0))!=((v0.c1)))))), (~ (((v0.c1)+(v0.c1)))) ASC  NULLS LAST, CASE (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END THEN '' WHEN ((0.39739398161764417) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN CASE '922606885'  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1639157887' WHEN v0.c2 THEN x'' ELSE NULL END THEN (((x'9abb'))<=((v0.c1))) ELSE (+ (v0.c1)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE NOCASE)LIKE(x''))) ORDER BY (((('' IN ()), (+ (v0.c0)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2))))>(((('b%')+(v0.c2)), ((v0.c0) NOT NULL), (((v0.c0))<>((v0.c1)))))), (~ (((v0.c1)+(v0.c1)))) ASC  NULLS LAST, CASE (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END THEN '' WHEN ((0.39739398161764417) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN CASE '922606885'  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1639157887' WHEN v0.c2 THEN x'' ELSE NULL END THEN (((x'9abb'))<=((v0.c1))) ELSE (+ (v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE NOCASE)LIKE(x''))) IS TRUE)  as count FROM v0 ORDER BY (((('' IN ()), (+ (v0.c0)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2))))>(((('b%')+(v0.c2)), ((v0.c0) NOT NULL), (((v0.c0))!=((v0.c1)))))), (~ (((v0.c1)+(v0.c1)))) ASC  NULLS LAST, CASE (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END THEN '' WHEN ((0.39739398161764417) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN CASE '922606885'  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1639157887' WHEN v0.c2 THEN x'' ELSE NULL END THEN (((x'9abb'))<=((v0.c1))) ELSE (+ (v0.c1)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE NOCASE)LIKE(x''))) ORDER BY (((('' IN ()), (+ (v0.c0)), ((NULL) NOT BETWEEN (v0.c2) AND (v0.c2))))>(((('b%')+(v0.c2)), ((v0.c0) NOT NULL), (((v0.c0))<>((v0.c1)))))), (~ (((v0.c1)+(v0.c1)))) ASC  NULLS LAST, CASE (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))  WHEN CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END THEN '' WHEN ((0.39739398161764417) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN CASE '922606885'  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN '1639157887' WHEN v0.c2 THEN x'' ELSE NULL END THEN (((x'9abb'))<=((v0.c1))) ELSE (+ (v0.c1)) END;
SELECT COUNT(*) FROM v0, rt0 WHERE (HEX(DISTINCT CAST(v0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(v0.c2 AS NUMERIC))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (HEX(DISTINCT CAST(v0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(v0.c2 AS NUMERIC))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (HEX(DISTINCT CAST(v0.c2 AS NUMERIC)));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((((vt0.c0) BETWEEN (rt0.c0) AND (v0.c1)))AND(v0.c1)))OR(x'1c7d')) RIGHT OUTER JOIN vt0 ON ((x'7290') NOT BETWEEN ((((v0.c0))<=((v0.c1)))) AND ((v0.c0 IN ()))) WHERE (load_extension((v0.c2 IN (rt0.c2, v0.c2)), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((v0.c2 IN (rt0.c2, v0.c2)), (NOT (vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((vt0.c0) BETWEEN (rt0.c0) AND (v0.c1)))AND(v0.c1)))OR(x'1c7d')) RIGHT OUTER JOIN vt0 ON ((x'7290') NOT BETWEEN ((((v0.c0))<=((v0.c1)))) AND ((v0.c0 IN ()))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON ((((((vt0.c0) BETWEEN (rt0.c0) AND (v0.c1)))AND(v0.c1)))OR(x'1c7d')) RIGHT OUTER JOIN vt0 ON ((x'7290') NOT BETWEEN ((((v0.c0))<=((v0.c1)))) AND ((v0.c0 IN ()))) WHERE (load_extension((v0.c2 IN (rt0.c2, v0.c2)), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((v0.c2 IN (rt0.c2, v0.c2)), (NOT (vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((((vt0.c0) BETWEEN (rt0.c0) AND (v0.c1)))AND(v0.c1)))OR(x'1c7d')) RIGHT OUTER JOIN vt0 ON ((x'7290') NOT BETWEEN ((((v0.c0))<=((v0.c1)))) AND ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY '1694600885'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY '1694600885'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY '1694600885'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY '1694600885'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY '1694600885'  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CAST((((v0.c0))<>((rt0.c1))) AS TEXT)) ORDER BY (((v0.c1 IN (x'ae44')))>>((((rt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))) ASC, (((('\rs\u6h')GLOB(rt0.c2)))/((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0))<>((rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c1 IN (x'ae44')))>>((((rt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))) ASC, (((('\rs\u6h')GLOB(rt0.c2)))/((NOT (rt0.c2))))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (CAST((((v0.c0))<>((rt0.c1))) AS TEXT)) ORDER BY (((v0.c1 IN (x'ae44')))>>((((rt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))) ASC, (((('\rs\u6h')GLOB(rt0.c2)))/((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0))<>((rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c1 IN (x'ae44')))>>((((rt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))) ASC, (((('\rs\u6h')GLOB(rt0.c2)))/((NOT (rt0.c2))))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (CAST((((v0.c0))<>((rt0.c1))) AS TEXT)) ORDER BY (((v0.c1 IN (x'ae44')))>>((((rt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt0.c1))))) ASC, (((('\rs\u6h')GLOB(rt0.c2)))/((NOT (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (MAX('\I', (((v0.c0))>((v0.c2)))));
SELECT SUM(count) FROM (SELECT ((MAX('\I', (((v0.c0))>((v0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (MAX('\I', (((v0.c0))>((v0.c2)))));
SELECT SUM(count) FROM (SELECT ((MAX('\I', (((v0.c0))>((v0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (MAX('\I', (((v0.c0))>((v0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOTNULL)) AND ((~ (x'866d7376')))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOTNULL)) AND ((~ (x'866d7376'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOTNULL)) AND ((~ (x'866d7376')))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOTNULL)) AND ((~ (x'866d7376'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOTNULL)) AND ((~ (x'866d7376')))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((v0.c2)+(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)+(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((v0.c2)+(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)+(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((v0.c2)+(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((((v0.c0) NOT BETWEEN (0.43316335410769924) AND (v0.c1)))GLOB(((((v0.c1)AND(x'1cf6')))OR(v0.c1))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (0.43316335410769924) AND (v0.c1)))GLOB(((((v0.c1)AND(x'1cf6')))OR(v0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY NULL);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((((v0.c0) NOT BETWEEN (0.43316335410769924) AND (v0.c1)))GLOB(((((v0.c1)AND(x'1cf6')))OR(v0.c1))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (0.43316335410769924) AND (v0.c1)))GLOB(((((v0.c1)AND(x'1cf6')))OR(v0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY NULL);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((((v0.c0) NOT BETWEEN (0.43316335410769924) AND (v0.c1)))GLOB(((((v0.c1)AND(x'1cf6')))OR(v0.c1))))) ORDER BY NULL;
SELECT * FROM v0 WHERE ((((0xffffffffc6ce5667))<((((v0.c2)GLOB(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffc6ce5667))<((((v0.c2)GLOB(v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((0xffffffffc6ce5667))<((((v0.c2)GLOB(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffc6ce5667))<((((v0.c2)GLOB(v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((0xffffffffc6ce5667))<((((v0.c2)GLOB(v0.c2))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((+ (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((+ (v0.c2)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((+ (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((+ (v0.c2)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((+ (v0.c2))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN ()) AS TEXT) RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT) WHERE (((vt0.c0)*(rt0.c2)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN ()) AS TEXT) RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN ()) AS TEXT) RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT) WHERE (((vt0.c0)*(rt0.c2)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN ()) AS TEXT) RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST((v0.c0 IN ()) AS TEXT) RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 AS TEXT) WHERE (((vt0.c0)*(rt0.c2)) COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((NULL IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((NULL IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((v0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((NULL IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(((rt0.c1)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(((rt0.c1)+(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(((rt0.c1)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(((rt0.c1)+(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))))AND(((rt0.c1)+(rt0.c1)))));
SELECT ALL * FROM v0, vt0 NATURAL JOIN rt0 WHERE (CAST(rt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT ALL * FROM v0, vt0 NATURAL JOIN rt0 WHERE (CAST(rt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT ALL * FROM v0, vt0 NATURAL JOIN rt0 WHERE (CAST(rt0.c0 AS INTEGER));
SELECT * FROM v0, rt0 WHERE ((- (rt0.c0 COLLATE NOCASE))) ORDER BY (- ((v0.c2 IN ())))  NULLS FIRST, (~ ('')) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- ((v0.c2 IN ())))  NULLS FIRST, (~ ('')) ASC);
SELECT * FROM v0, rt0 WHERE ((- (rt0.c0 COLLATE NOCASE))) ORDER BY (- ((v0.c2 IN ())))  NULLS FIRST, (~ ('')) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- ((v0.c2 IN ())))  NULLS FIRST, (~ ('')) ASC);
SELECT * FROM v0, rt0 WHERE ((- (rt0.c0 COLLATE NOCASE))) ORDER BY (- ((v0.c2 IN ())))  NULLS FIRST, (~ ('')) ASC;
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (vt0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))))) ORDER BY LIKELIHOOD(v0.c2 COLLATE RTRIM, 0.03042828292399191) DESC, (((rt0.c0 IN (v0.c1, rt0.c0))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('!3DQ-')<<(rt0.c0)))) DESC, ((~ (v0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (vt0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY LIKELIHOOD(v0.c2 COLLATE RTRIM, 0.03042828292399191) DESC, (((rt0.c0 IN (v0.c1, rt0.c0))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('!3DQ-')<<(rt0.c0)))) DESC, ((~ (v0.c2)) IN ())  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (vt0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))))) ORDER BY LIKELIHOOD(v0.c2 COLLATE RTRIM, 0.03042828292399191) DESC, (((rt0.c0 IN (v0.c1, rt0.c0))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('!3DQ-')<<(rt0.c0)))) DESC, ((~ (v0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (vt0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY LIKELIHOOD(v0.c2 COLLATE RTRIM, 0.03042828292399191) DESC, (((rt0.c0 IN (v0.c1, rt0.c0))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('!3DQ-')<<(rt0.c0)))) DESC, ((~ (v0.c2)) IN ())  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (vt0.c0) AND (NULL)))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))))) ORDER BY LIKELIHOOD(v0.c2 COLLATE RTRIM, 0.03042828292399191) DESC, (((rt0.c0 IN (v0.c1, rt0.c0))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('!3DQ-')<<(rt0.c0)))) DESC, ((~ (v0.c2)) IN ())  NULLS LAST;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c2, v0.c2, rt0.c0)) BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)), (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, v0.c1, v0.c1)) AND ((rt0.c2, v0.c2, 0.16098505876916003))), rt0.c2 COLLATE NOCASE)) AND (((0.0 IN ()), x'', (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c2, v0.c2, rt0.c0)) BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)), (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, v0.c1, v0.c1)) AND ((rt0.c2, v0.c2, 0.16098505876916003))), rt0.c2 COLLATE NOCASE)) AND (((0.0 IN ()), x'', (v0.c0 IN ()))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c2, v0.c2, rt0.c0)) BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)), (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, v0.c1, v0.c1)) AND ((rt0.c2, v0.c2, 0.16098505876916003))), rt0.c2 COLLATE NOCASE)) AND (((0.0 IN ()), x'', (v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c2, v0.c2, rt0.c0)) BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)), (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, v0.c1, v0.c1)) AND ((rt0.c2, v0.c2, 0.16098505876916003))), rt0.c2 COLLATE NOCASE)) AND (((0.0 IN ()), x'', (v0.c0 IN ()))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c2, v0.c2, rt0.c0)) BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(v0.c0)), (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, v0.c1, v0.c1)) AND ((rt0.c2, v0.c2, 0.16098505876916003))), rt0.c2 COLLATE NOCASE)) AND (((0.0 IN ()), x'', (v0.c0 IN ())))));
SELECT * FROM v0, vt0 WHERE ((1.897142689E9 IN ())) ORDER BY 0xffffffffe879a555 ASC;
SELECT SUM(count) FROM (SELECT ALL (((1.897142689E9 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY 0xffffffffe879a555 ASC);
SELECT * FROM v0, vt0 WHERE ((1.897142689E9 IN ())) ORDER BY 0xffffffffe879a555 ASC;
SELECT SUM(count) FROM (SELECT ALL (((1.897142689E9 IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY 0xffffffffe879a555 ASC);
SELECT * FROM v0, vt0 WHERE ((1.897142689E9 IN ())) ORDER BY 0xffffffffe879a555 ASC;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((('434503206')>=(rt0.c2)))OR(((rt0.c0)-(vt0.c0))))) ORDER BY (((rt0.c1, v0.c2, v0.c1)) NOT BETWEEN (((v0.c0 IN ()), ((v0.c0) ISNULL), vt0.c0 COLLATE RTRIM)) AND ((((rt0.c2)<(v0.c2)), (((vt0.c0, -9223372036854775808, v0.c2))=((rt0.c0, rt0.c2, v0.c2))), CAST(rt0.c0 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('434503206')>=(rt0.c2)))OR(((rt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c1, v0.c2, v0.c1)) NOT BETWEEN (((v0.c0 IN ()), ((v0.c0) ISNULL), vt0.c0 COLLATE RTRIM)) AND ((((rt0.c2)<(v0.c2)), (((vt0.c0, -9223372036854775808, v0.c2))==((rt0.c0, rt0.c2, v0.c2))), CAST(rt0.c0 AS NUMERIC))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((('434503206')>=(rt0.c2)))OR(((rt0.c0)-(vt0.c0))))) ORDER BY (((rt0.c1, v0.c2, v0.c1)) NOT BETWEEN (((v0.c0 IN ()), ((v0.c0) ISNULL), vt0.c0 COLLATE RTRIM)) AND ((((rt0.c2)<(v0.c2)), (((vt0.c0, -9223372036854775808, v0.c2))=((rt0.c0, rt0.c2, v0.c2))), CAST(rt0.c0 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('434503206')>=(rt0.c2)))OR(((rt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c1, v0.c2, v0.c1)) NOT BETWEEN (((v0.c0 IN ()), ((v0.c0) ISNULL), vt0.c0 COLLATE RTRIM)) AND ((((rt0.c2)<(v0.c2)), (((vt0.c0, -9223372036854775808, v0.c2))==((rt0.c0, rt0.c2, v0.c2))), CAST(rt0.c0 AS NUMERIC))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((('434503206')>=(rt0.c2)))OR(((rt0.c0)-(vt0.c0))))) ORDER BY (((rt0.c1, v0.c2, v0.c1)) NOT BETWEEN (((v0.c0 IN ()), ((v0.c0) ISNULL), vt0.c0 COLLATE RTRIM)) AND ((((rt0.c2)<(v0.c2)), (((vt0.c0, -9223372036854775808, v0.c2))=((rt0.c0, rt0.c2, v0.c2))), CAST(rt0.c0 AS NUMERIC))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((CASE x''  WHEN vt0.c0 THEN rt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN vt0.c0 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE x''  WHEN vt0.c0 THEN rt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN vt0.c0 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE x''  WHEN vt0.c0 THEN rt0.c0 END) NOT NULL));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((v0.c1)IS(v0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)IS(v0.c2)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((v0.c1)IS(v0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)IS(v0.c2)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((v0.c1)IS(v0.c2)) AS BLOB));
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((COALESCE(-568480372, 0.3350627267769698, v0.c0, rt0.c2)) NOT BETWEEN (0.47112235608205055) AND (CASE WHEN v0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(-568480372, 0.3350627267769698, v0.c0, rt0.c2)) NOT BETWEEN (0.47112235608205055) AND (CASE WHEN v0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((COALESCE(-568480372, 0.3350627267769698, v0.c0, rt0.c2)) NOT BETWEEN (0.47112235608205055) AND (CASE WHEN v0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(-568480372, 0.3350627267769698, v0.c0, rt0.c2)) NOT BETWEEN (0.47112235608205055) AND (CASE WHEN v0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((COALESCE(-568480372, 0.3350627267769698, v0.c0, rt0.c2)) NOT BETWEEN (0.47112235608205055) AND (CASE WHEN v0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ('2125754807') ORDER BY ((((((rt0.c0)||(rt0.c2)))OR(((rt0.c1)<=(rt0.c0)))))OR((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('2125754807') IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)||(rt0.c2)))OR(((rt0.c1)<=(rt0.c0)))))OR((+ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('2125754807') ORDER BY ((((((rt0.c0)||(rt0.c2)))OR(((rt0.c1)<=(rt0.c0)))))OR((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('2125754807') IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)||(rt0.c2)))OR(((rt0.c1)<=(rt0.c0)))))OR((+ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('2125754807') ORDER BY ((((((rt0.c0)||(rt0.c2)))OR(((rt0.c1)<=(rt0.c0)))))OR((+ (rt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((UNLIKELY(vt0.c0))OR(2020552511)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.15664008330972123, vt0.c0, '0.47112235608205055'))))))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((((UNLIKELY(vt0.c0))OR(2020552511)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.15664008330972123, vt0.c0, '0.47112235608205055'))))))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((UNLIKELY(vt0.c0))OR(2020552511)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.15664008330972123, vt0.c0, '0.47112235608205055'))))))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((((UNLIKELY(vt0.c0))OR(2020552511)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.15664008330972123, vt0.c0, '0.47112235608205055'))))))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((UNLIKELY(vt0.c0))OR(2020552511)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.15664008330972123, vt0.c0, '0.47112235608205055'))))))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)OR(NULL)), rt0.c0 COLLATE NOCASE, ((vt0.c0)>(vt0.c0))))==((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0)), (rt0.c2 IN ()), ((0.3012533183502112)*(rt0.c0))))) WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((x'802b')) AND ((rt0.c0))) THEN ((NULL) NOTNULL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(x'')) WHEN (rt0.c2 IN ()) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((x'802b')) AND ((rt0.c0))) THEN ((NULL) NOTNULL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(x'')) WHEN (rt0.c2 IN ()) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)OR(NULL)), rt0.c0 COLLATE NOCASE, ((vt0.c0)>(vt0.c0))))==((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0)), (rt0.c2 IN ()), ((0.3012533183502112)*(rt0.c0))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)OR(NULL)), rt0.c0 COLLATE NOCASE, ((vt0.c0)>(vt0.c0))))==((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0)), (rt0.c2 IN ()), ((0.3012533183502112)*(rt0.c0))))) WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((x'802b')) AND ((rt0.c0))) THEN ((NULL) NOTNULL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(x'')) WHEN (rt0.c2 IN ()) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((x'802b')) AND ((rt0.c0))) THEN ((NULL) NOTNULL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(x'')) WHEN (rt0.c2 IN ()) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)OR(NULL)), rt0.c0 COLLATE NOCASE, ((vt0.c0)>(vt0.c0))))==((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0)), (rt0.c2 IN ()), ((0.3012533183502112)*(rt0.c0))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((vt0.c0)OR(NULL)), rt0.c0 COLLATE NOCASE, ((vt0.c0)>(vt0.c0))))==((((((rt0.c0)OR(rt0.c1)))OR(vt0.c0)), (rt0.c2 IN ()), ((0.3012533183502112)*(rt0.c0))))) WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((x'802b')) AND ((rt0.c0))) THEN ((NULL) NOTNULL) WHEN CAST(rt0.c2 AS INTEGER) THEN ((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c0)))OR(x'')) WHEN (rt0.c2 IN ()) THEN rt0.c2 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))  WHEN (~ (rt0.c1)) THEN rt0.c2 END) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))  WHEN (~ (rt0.c1)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))  WHEN (~ (rt0.c1)) THEN rt0.c2 END) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))  WHEN (~ (rt0.c1)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))  WHEN (~ (rt0.c1)) THEN rt0.c2 END) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)*('輴mN*')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)*('輴mN*')) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)*('輴mN*')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)*('輴mN*')) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)*('輴mN*')) AS BLOB));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(x'')))OR(((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(x'')))OR(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(x'')))OR(((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(x'')))OR(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(LOWER(vt0.c0))))AND(x'')))OR(((vt0.c0)&(vt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((MIN(vt0.c0, v0.c1))OR((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((v0.c1) NOT BETWEEN ('䟟5篲j(<i') AND (v0.c0)))) WHERE (ABS(((v0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((v0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((MIN(vt0.c0, v0.c1))OR((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((v0.c1) NOT BETWEEN ('䟟5篲j(<i') AND (v0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((MIN(vt0.c0, v0.c1))OR((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((v0.c1) NOT BETWEEN ('䟟5篲j(<i') AND (v0.c0)))) WHERE (ABS(((v0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((v0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((MIN(vt0.c0, v0.c1))OR((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((v0.c1) NOT BETWEEN ('䟟5篲j(<i') AND (v0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((MIN(vt0.c0, v0.c1))OR((((v0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((v0.c1) NOT BETWEEN ('䟟5篲j(<i') AND (v0.c0)))) WHERE (ABS(((v0.c0)%(vt0.c0))));
SELECT * FROM vt0 WHERE (0Xffffffffcf1655c2);
SELECT SUM(count) FROM (SELECT ((0Xffffffffcf1655c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0Xffffffffcf1655c2);
SELECT SUM(count) FROM (SELECT ((0Xffffffffcf1655c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0Xffffffffcf1655c2);
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN (rt0.c2 IN (rt0.c1)) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c1)<(rt0.c2)) THEN (NOT (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN rt0.c0 WHEN ((rt0.c2) NOT NULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (0Xffffffffe7da370d)) THEN ((rt0.c2)>>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN (rt0.c2 IN (rt0.c1)) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c1)<(rt0.c2)) THEN (NOT (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN rt0.c0 WHEN ((rt0.c2) NOT NULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (0Xffffffffe7da370d)) THEN ((rt0.c2)>>(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN (rt0.c2 IN (rt0.c1)) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c1)<(rt0.c2)) THEN (NOT (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN rt0.c0 WHEN ((rt0.c2) NOT NULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (0Xffffffffe7da370d)) THEN ((rt0.c2)>>(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN (rt0.c2 IN (rt0.c1)) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c1)<(rt0.c2)) THEN (NOT (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN rt0.c0 WHEN ((rt0.c2) NOT NULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (0Xffffffffe7da370d)) THEN ((rt0.c2)>>(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN (rt0.c2 IN (rt0.c1)) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c1)<(rt0.c2)) THEN (NOT (rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN rt0.c0 WHEN ((rt0.c2) NOT NULL) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (0Xffffffffe7da370d)) THEN ((rt0.c2)>>(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1))) NOT BETWEEN (TYPEOF(v0.c0)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1))) NOT BETWEEN (TYPEOF(v0.c0)) AND (NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1))) NOT BETWEEN (TYPEOF(v0.c0)) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1))) NOT BETWEEN (TYPEOF(v0.c0)) AND (NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((((((((((v0.c1)OR(v0.c0)))AND(rt0.c1)))AND(v0.c0)))OR(rt0.c1))) NOT BETWEEN (TYPEOF(v0.c0)) AND (NULL)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END))<>((((((rt0.c2)OR(225695216)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END))!=((((((rt0.c2)OR(225695216)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END))<>((((((rt0.c2)OR(225695216)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END))!=((((((rt0.c2)OR(225695216)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 END))<>((((((rt0.c2)OR(225695216)))AND(vt0.c0))))));
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(0.47112235608205055)))OR(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((((rt0.c0))<=((rt0.c0)))))) ORDER BY ((((rt0.c1)AND(CAST(rt0.c1 AS INTEGER))))OR(2009290294)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(0.47112235608205055)))OR(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((((rt0.c0))<=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND(CAST(rt0.c1 AS INTEGER))))OR(2009290294)) ASC);
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(0.47112235608205055)))OR(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((((rt0.c0))<=((rt0.c0)))))) ORDER BY ((((rt0.c1)AND(CAST(rt0.c1 AS INTEGER))))OR(2009290294)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(0.47112235608205055)))OR(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((((rt0.c0))<=((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND(CAST(rt0.c1 AS INTEGER))))OR(2009290294)) ASC);
SELECT * FROM rt0 WHERE (((((((((rt0.c1)AND(0.47112235608205055)))OR(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR((((rt0.c0))<=((rt0.c0)))))) ORDER BY ((((rt0.c1)AND(CAST(rt0.c1 AS INTEGER))))OR(2009290294)) ASC;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED, rt0 WHERE (TRIM((+ (rt0.c1)))) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((+ (rt0.c1)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED, rt0 WHERE (TRIM((+ (rt0.c1)))) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((+ (rt0.c1)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED, rt0 WHERE (TRIM((+ (rt0.c1)))) ORDER BY ((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN ((((((((v0.c0)AND(0xffffffff84dd958c)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c1) BETWEEN ('N_') AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((((((((v0.c0)AND(0xffffffff84dd958c)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c1) BETWEEN ('N_') AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN ((((((((v0.c0)AND(0xffffffff84dd958c)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c1) BETWEEN ('N_') AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((((((((v0.c0)AND(0xffffffff84dd958c)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c1) BETWEEN ('N_') AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN ((((((((v0.c0)AND(0xffffffff84dd958c)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c1) BETWEEN ('N_') AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (0.8903524213368078 COLLATE BINARY))) ORDER BY (((v0.c2 IN ()))LIKE(((vt0.c0)||(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.8903524213368078 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2 IN ()))LIKE(((vt0.c0)||(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (0.8903524213368078 COLLATE BINARY))) ORDER BY (((v0.c2 IN ()))LIKE(((vt0.c0)||(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.8903524213368078 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c2 IN ()))LIKE(((vt0.c0)||(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((~ (0.8903524213368078 COLLATE BINARY))) ORDER BY (((v0.c2 IN ()))LIKE(((vt0.c0)||(v0.c0)))) DESC;
SELECT * FROM vt0, v0, rt0 WHERE (((((((rt0.c1) IS TRUE))AND(((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))AND(((v0.c1) NOT BETWEEN (x'3c4c') AND (v0.c0))))) ORDER BY ((((((v0.c2) BETWEEN (rt0.c0) AND (v0.c0)))AND(((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((v0.c1 IN ()))) ASC  NULLS FIRST, ((((v0.c1) IS FALSE))>=((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS TRUE))AND(((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))AND(((v0.c1) NOT BETWEEN (x'3c4c') AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((v0.c2) BETWEEN (rt0.c0) AND (v0.c0)))AND(((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((v0.c1 IN ()))) ASC  NULLS FIRST, ((((v0.c1) IS FALSE))>=((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE (((((((rt0.c1) IS TRUE))AND(((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))AND(((v0.c1) NOT BETWEEN (x'3c4c') AND (v0.c0))))) ORDER BY ((((((v0.c2) BETWEEN (rt0.c0) AND (v0.c0)))AND(((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((v0.c1 IN ()))) ASC  NULLS FIRST, ((((v0.c1) IS FALSE))>=((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS TRUE))AND(((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))AND(((v0.c1) NOT BETWEEN (x'3c4c') AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((v0.c2) BETWEEN (rt0.c0) AND (v0.c0)))AND(((v0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((v0.c1 IN ()))) ASC  NULLS FIRST, ((((v0.c1) IS FALSE))>=((rt0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE BINARY) ORDER BY (~ (v0.c2)) COLLATE NOCASE, ((((v0.c2)/(v0.c0)))*((((v0.c0))>((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c2)) COLLATE NOCASE, ((((v0.c2)/(v0.c0)))*((((v0.c0))>((v0.c0))))) DESC);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE BINARY) ORDER BY (~ (v0.c2)) COLLATE NOCASE, ((((v0.c2)/(v0.c0)))*((((v0.c0))>((v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c2)) COLLATE NOCASE, ((((v0.c2)/(v0.c0)))*((((v0.c0))>((v0.c0))))) DESC);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE BINARY) ORDER BY (~ (v0.c2)) COLLATE NOCASE, ((((v0.c2)/(v0.c0)))*((((v0.c0))>((v0.c0))))) DESC;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((rt0.c0) BETWEEN (x'') AND (((((-2136764620)AND(v0.c2)))AND(NULL))))) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (x'') AND (((((-2136764620)AND(v0.c2)))AND(NULL))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC) DESC);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((rt0.c0) BETWEEN (x'') AND (((((-2136764620)AND(v0.c2)))AND(NULL))))) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (x'') AND (((((-2136764620)AND(v0.c2)))AND(NULL))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC) DESC);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((rt0.c0) BETWEEN (x'') AND (((((-2136764620)AND(v0.c2)))AND(NULL))))) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS NUMERIC) DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(NULL COLLATE NOCASE)))OR((('qg뾤mg') NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(NULL COLLATE NOCASE)))OR((('qg뾤mg') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(NULL COLLATE NOCASE)))OR((('qg뾤mg') NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(NULL COLLATE NOCASE)))OR((('qg뾤mg') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(NULL COLLATE NOCASE)))OR((('qg뾤mg') NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN '' END WHEN (NOT (v0.c2)) THEN ((NULL)LIKE(' V_')) WHEN CAST(v0.c2 AS INTEGER) THEN (0.04389506164989421 IN ()) END) ORDER BY v0.c1, CASE WHEN ((((vt0.c0)AND(v0.c2)))AND(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN (v0.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN '' END WHEN (NOT (v0.c2)) THEN ((NULL)LIKE(' V_')) WHEN CAST(v0.c2 AS INTEGER) THEN (0.04389506164989421 IN ()) END) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c1, CASE WHEN ((((vt0.c0)AND(v0.c2)))AND(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN (v0.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) END ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN '' END WHEN (NOT (v0.c2)) THEN ((NULL)LIKE(' V_')) WHEN CAST(v0.c2 AS INTEGER) THEN (0.04389506164989421 IN ()) END) ORDER BY v0.c1, CASE WHEN ((((vt0.c0)AND(v0.c2)))AND(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN (v0.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN '' END WHEN (NOT (v0.c2)) THEN ((NULL)LIKE(' V_')) WHEN CAST(v0.c2 AS INTEGER) THEN (0.04389506164989421 IN ()) END) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c1, CASE WHEN ((((vt0.c0)AND(v0.c2)))AND(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN (v0.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) END ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE WHEN ((v0.c2) IS TRUE) THEN CASE WHEN v0.c0 THEN '' END WHEN (NOT (v0.c2)) THEN ((NULL)LIKE(' V_')) WHEN CAST(v0.c2 AS INTEGER) THEN (0.04389506164989421 IN ()) END) ORDER BY v0.c1, CASE WHEN ((((vt0.c0)AND(v0.c2)))AND(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN (v0.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) WHEN (+ (v0.c1)) THEN ((((((((v0.c1)AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((- (UPPER(v0.c1)))) ORDER BY CAST(('XYdj#*v' IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT (((- (UPPER(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY CAST(('XYdj#*v' IN ()) AS REAL));
SELECT ALL * FROM v0 WHERE ((- (UPPER(v0.c1)))) ORDER BY CAST(('XYdj#*v' IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT (((- (UPPER(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY CAST(('XYdj#*v' IN ()) AS REAL));
SELECT ALL * FROM v0 WHERE ((- (UPPER(v0.c1)))) ORDER BY CAST(('XYdj#*v' IN ()) AS REAL);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)<=(vt0.c0))))=((((vt0.c0)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<=(vt0.c0))))=((((vt0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)<=(vt0.c0))))=((((vt0.c0)<=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<=(vt0.c0))))=((((vt0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)<=(vt0.c0))))=((((vt0.c0)<=(vt0.c0))))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON LOWER(DISTINCT NULLIF(v0.c2, vt0.c0)) LEFT OUTER JOIN v0 ON v0.c1 WHERE (('2125754807' IN ())) ORDER BY CASE ((v0.c0)-(v0.c2))  WHEN ABS(v0.c0) THEN rt0.c0 ELSE ((v0.c2) IS FALSE) END  NULLS LAST, ((rt0.c0) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((('2125754807' IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON LOWER(DISTINCT NULLIF(v0.c2, vt0.c0)) LEFT OUTER JOIN v0 ON v0.c1 ORDER BY CASE ((v0.c0)-(v0.c2))  WHEN ABS(v0.c0) THEN rt0.c0 ELSE ((v0.c2) IS FALSE) END  NULLS LAST, ((rt0.c0) NOT NULL) COLLATE NOCASE);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON LOWER(DISTINCT NULLIF(v0.c2, vt0.c0)) LEFT OUTER JOIN v0 ON v0.c1 WHERE (('2125754807' IN ())) ORDER BY CASE ((v0.c0)-(v0.c2))  WHEN ABS(v0.c0) THEN rt0.c0 ELSE ((v0.c2) IS FALSE) END  NULLS LAST, ((rt0.c0) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((('2125754807' IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON LOWER(DISTINCT NULLIF(v0.c2, vt0.c0)) LEFT OUTER JOIN v0 ON v0.c1 ORDER BY CASE ((v0.c0)-(v0.c2))  WHEN ABS(v0.c0) THEN rt0.c0 ELSE ((v0.c2) IS FALSE) END  NULLS LAST, ((rt0.c0) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))OR(0.7026002197725811)))OR(rt0.c0)) INNER JOIN rt0 ON ((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))) IN (((rt0.c0) BETWEEN (v0.c2) AND (v0.c0)), CAST(rt0.c1 AS NUMERIC))) WHERE (((v0.c1) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((v0.c2))>((v0.c0)))))) ORDER BY ((((v0.c1)IS(rt0.c2))) ISNULL) ASC, (- (((vt0.c0)>>(v0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((v0.c2))>((v0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))OR(0.7026002197725811)))OR(rt0.c0)) INNER JOIN rt0 ON ((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))) IN (((rt0.c0) BETWEEN (v0.c2) AND (v0.c0)), CAST(rt0.c1 AS NUMERIC))) ORDER BY ((((v0.c1)IS(rt0.c2))) ISNULL) ASC, (- (((vt0.c0)>>(v0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))OR(0.7026002197725811)))OR(rt0.c0)) INNER JOIN rt0 ON ((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))) IN (((rt0.c0) BETWEEN (v0.c2) AND (v0.c0)), CAST(rt0.c1 AS NUMERIC))) WHERE (((v0.c1) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((v0.c2))>((v0.c0)))))) ORDER BY ((((v0.c1)IS(rt0.c2))) ISNULL) ASC, (- (((vt0.c0)>>(v0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((v0.c2))>((v0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))OR(0.7026002197725811)))OR(rt0.c0)) INNER JOIN rt0 ON ((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))) IN (((rt0.c0) BETWEEN (v0.c2) AND (v0.c0)), CAST(rt0.c1 AS NUMERIC))) ORDER BY ((((v0.c1)IS(rt0.c2))) ISNULL) ASC, (- (((vt0.c0)>>(v0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c0)))OR(0.7026002197725811)))OR(rt0.c0)) INNER JOIN rt0 ON ((((v0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))) IN (((rt0.c0) BETWEEN (v0.c2) AND (v0.c0)), CAST(rt0.c1 AS NUMERIC))) WHERE (((v0.c1) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((v0.c2))>((v0.c0)))))) ORDER BY ((((v0.c1)IS(rt0.c2))) ISNULL) ASC, (- (((vt0.c0)>>(v0.c2)))) ASC  NULLS LAST, CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((NOT (0.4307209404765048)));
SELECT SUM(count) FROM (SELECT (((NOT (0.4307209404765048))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((NOT (0.4307209404765048)));
SELECT SUM(count) FROM (SELECT (((NOT (0.4307209404765048))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((NOT (0.4307209404765048)));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c2) IS TRUE)) IS FALSE)) ORDER BY CAST(((vt0.c0)<>(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c2) IS TRUE)) IS FALSE)) ORDER BY CAST(((vt0.c0)<>(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((vt0.c0)!=(vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c2) IS TRUE)) IS FALSE)) ORDER BY CAST(((vt0.c0)<>(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))>((CASE WHEN v0.c0 THEN '-76819347' ELSE v0.c2 END))) CROSS JOIN v0 ON CASE WHEN ((((vt0.c0)AND(v0.c0)))AND('-730175991')) THEN rt0.c2 COLLATE NOCASE ELSE ((v0.c0) IS FALSE) END WHERE (((((x'c722') IS FALSE))>=(((NULL)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'c722') IS FALSE))>=(((NULL)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))>((CASE WHEN v0.c0 THEN '-76819347' ELSE v0.c2 END))) CROSS JOIN v0 ON CASE WHEN ((((vt0.c0)AND(v0.c0)))AND('-730175991')) THEN rt0.c2 COLLATE NOCASE ELSE ((v0.c0) IS FALSE) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))>((CASE WHEN v0.c0 THEN '-76819347' ELSE v0.c2 END))) CROSS JOIN v0 ON CASE WHEN ((((vt0.c0)AND(v0.c0)))AND('-730175991')) THEN rt0.c2 COLLATE NOCASE ELSE ((v0.c0) IS FALSE) END WHERE (((((x'c722') IS FALSE))>=(((NULL)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'c722') IS FALSE))>=(((NULL)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0 IN ())))>((CASE WHEN v0.c0 THEN '-76819347' ELSE v0.c2 END))) CROSS JOIN v0 ON CASE WHEN ((((vt0.c0)AND(v0.c0)))AND('-730175991')) THEN rt0.c2 COLLATE NOCASE ELSE ((v0.c0) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))*(((rt0.c2)!=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))*(((rt0.c2)<>(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))*(((rt0.c2)!=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))*(((rt0.c2)<>(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))))*(((rt0.c2)!=(rt0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((~ (v0.c2)) IN ()) WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))!=(((((rt0.c2)AND(v0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))<>(((((rt0.c2)AND(v0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((~ (v0.c2)) IN ()));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((~ (v0.c2)) IN ()) WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))!=(((((rt0.c2)AND(v0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))<>(((((rt0.c2)AND(v0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((~ (v0.c2)) IN ()));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((~ (v0.c2)) IN ()) WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c1))))!=(((((rt0.c2)AND(v0.c0)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (~ (v0.c1)) COLLATE RTRIM WHERE (((((v0.c2)*(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)*(NULL))) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (~ (v0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (~ (v0.c1)) COLLATE RTRIM WHERE (((((v0.c2)*(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)*(NULL))) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (~ (v0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (~ (v0.c1)) COLLATE RTRIM WHERE (((((v0.c2)*(NULL))) IS FALSE));
SELECT ALL * FROM v0, rt0 WHERE (QUOTE((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))));
SELECT SUM(count) FROM (SELECT ((QUOTE((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (QUOTE((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))));
SELECT SUM(count) FROM (SELECT ((QUOTE((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (QUOTE((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c2)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c2 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c2 AS BLOB)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c2 AS BLOB)) IS TRUE));
SELECT * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN (('1309063935')) AND ((v0.c1))))/(v0.c2)));
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN (('1309063935')) AND ((v0.c1))))/(v0.c2))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN (('1309063935')) AND ((v0.c1))))/(v0.c2)));
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN (('1309063935')) AND ((v0.c1))))/(v0.c2))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN (('1309063935')) AND ((v0.c1))))/(v0.c2)));
SELECT * FROM rt0 WHERE ((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c0)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c1)|(CASE WHEN vt0.c0 THEN v0.c2 WHEN vt0.c0 THEN 4.34503206E8 WHEN v0.c1 THEN rt0.c2 ELSE vt0.c0 END)) LEFT OUTER JOIN rt0 ON ((CAST(v0.c2 AS REAL)) ISNULL) WHERE (((((((((((v0.c2)%(rt0.c0)))AND(x'')))OR(rt0.c1 COLLATE NOCASE)))OR(json_array(rt0.c1, '-820619838', v0.c1, v0.c2))))OR(v0.c2 COLLATE NOCASE))) ORDER BY ((((rt0.c0) ISNULL))&(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)%(rt0.c0)))AND(x'')))OR(rt0.c1 COLLATE NOCASE)))OR(json_array(rt0.c1, '-820619838', v0.c1, v0.c2))))OR(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c1)|(CASE WHEN vt0.c0 THEN v0.c2 WHEN vt0.c0 THEN 4.34503206E8 WHEN v0.c1 THEN rt0.c2 ELSE vt0.c0 END)) LEFT OUTER JOIN rt0 ON ((CAST(v0.c2 AS REAL)) ISNULL) ORDER BY ((((rt0.c0) ISNULL))&(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c1)|(CASE WHEN vt0.c0 THEN v0.c2 WHEN vt0.c0 THEN 4.34503206E8 WHEN v0.c1 THEN rt0.c2 ELSE vt0.c0 END)) LEFT OUTER JOIN rt0 ON ((CAST(v0.c2 AS REAL)) ISNULL) WHERE (((((((((((v0.c2)%(rt0.c0)))AND(x'')))OR(rt0.c1 COLLATE NOCASE)))OR(json_array(rt0.c1, '-820619838', v0.c1, v0.c2))))OR(v0.c2 COLLATE NOCASE))) ORDER BY ((((rt0.c0) ISNULL))&(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)%(rt0.c0)))AND(x'')))OR(rt0.c1 COLLATE NOCASE)))OR(json_array(rt0.c1, '-820619838', v0.c1, v0.c2))))OR(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c1)|(CASE WHEN vt0.c0 THEN v0.c2 WHEN vt0.c0 THEN 4.34503206E8 WHEN v0.c1 THEN rt0.c2 ELSE vt0.c0 END)) LEFT OUTER JOIN rt0 ON ((CAST(v0.c2 AS REAL)) ISNULL) ORDER BY ((((rt0.c0) ISNULL))&(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)) BETWEEN (('NQ')) AND ((vt0.c0))) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND ((CAST(rt0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN (('NQ')) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND ((CAST(rt0.c0 AS BLOB)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)) BETWEEN (('NQ')) AND ((vt0.c0))) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND ((CAST(rt0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN (('NQ')) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND ((CAST(rt0.c0 AS BLOB)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)) BETWEEN (('NQ')) AND ((vt0.c0))) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND ((CAST(rt0.c0 AS BLOB)))) ASC;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((v0.c2)IS NOT(vt0.c0)))) WHERE (((((((vt0.c0)OR(vt0.c0)))AND(v0.c1))) BETWEEN (((v0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(v0.c1))) BETWEEN (((v0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((v0.c2)IS NOT(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((v0.c2)IS NOT(vt0.c0)))) WHERE (((((((vt0.c0)OR(vt0.c0)))AND(v0.c1))) BETWEEN (((v0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(v0.c1))) BETWEEN (((v0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((v0.c2)IS NOT(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c0)AND(CAST(vt0.c0 AS REAL))))AND(((v0.c2)IS NOT(vt0.c0)))) WHERE (((((((vt0.c0)OR(vt0.c0)))AND(v0.c1))) BETWEEN (((v0.c1) NOT NULL)) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ('!<') ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN ('1113033890') AND (x'')))<=((('N_') IS FALSE))) DESC, CASE 0x4cba9457  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN '225695216' WHEN '876715321' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN NULL WHEN 0.06277664006611328 THEN CAST(vt0.c0 AS NUMERIC) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('!<') IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN ('1113033890') AND (x'')))<=((('N_') IS FALSE))) DESC, CASE 0x4cba9457  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN '225695216' WHEN '876715321' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN NULL WHEN 0.06277664006611328 THEN CAST(vt0.c0 AS NUMERIC) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('!<') ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN ('1113033890') AND (x'')))<=((('N_') IS FALSE))) DESC, CASE 0x4cba9457  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN '225695216' WHEN '876715321' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN NULL WHEN 0.06277664006611328 THEN CAST(vt0.c0 AS NUMERIC) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('!<') IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN ('1113033890') AND (x'')))<=((('N_') IS FALSE))) DESC, CASE 0x4cba9457  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN '225695216' WHEN '876715321' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN NULL WHEN 0.06277664006611328 THEN CAST(vt0.c0 AS NUMERIC) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('!<') ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((vt0.c0) NOT BETWEEN ('1113033890') AND (x'')))<=((('N_') IS FALSE))) DESC, CASE 0x4cba9457  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN '225695216' WHEN '876715321' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN NULL WHEN 0.06277664006611328 THEN CAST(vt0.c0 AS NUMERIC) END ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY (((NOT ('')))>(UPPER(vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC, (NOT (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT ('')))>(UPPER(vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC, (NOT (vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY (((NOT ('')))>(UPPER(vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC, (NOT (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT ('')))>(UPPER(vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC, (NOT (vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE)) ORDER BY (((NOT ('')))>(UPPER(vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC, (NOT (vt0.c0)) COLLATE BINARY DESC;
SELECT * FROM rt0 WHERE ((('61147995') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) ORDER BY (((NOT (rt0.c1)))+(('-1490518856' IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('61147995') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c1)))+(('-1490518856' IN ())))  NULLS LAST);
SELECT * FROM rt0 WHERE ((('61147995') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) ORDER BY (((NOT (rt0.c1)))+(('-1490518856' IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('61147995') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c1)))+(('-1490518856' IN ())))  NULLS LAST);
SELECT * FROM rt0 WHERE ((('61147995') NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c0 COLLATE RTRIM))) ORDER BY (((NOT (rt0.c1)))+(('-1490518856' IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((v0.c0)AND(((NULL) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))))AND(LIKELIHOOD(DISTINCT x'', 0.7755399369258175))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND(((NULL) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))))AND(LIKELIHOOD(DISTINCT x'', 0.7755399369258175))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((v0.c0)AND(((NULL) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))))AND(LIKELIHOOD(DISTINCT x'', 0.7755399369258175))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND(((NULL) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))))AND(LIKELIHOOD(DISTINCT x'', 0.7755399369258175))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((v0.c0)AND(((NULL) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c2)))))AND(LIKELIHOOD(DISTINCT x'', 0.7755399369258175))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND ((((v0.c2) ISNULL)))) WHERE ((~ (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND ((((v0.c2) ISNULL)))));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND ((((v0.c2) ISNULL)))) WHERE ((~ (v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND ((((v0.c2) ISNULL)))));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN (((NOT (v0.c1)))) AND ((((v0.c2) ISNULL)))) WHERE ((~ (v0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (NULLIF((((rt0.c0, v0.c2, v0.c1, NULL, rt0.c0)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c0, vt0.c0, v0.c0)) AND ((v0.c1, vt0.c0, vt0.c0, rt0.c2, v0.c2))), CAST(v0.c0 AS NUMERIC))) ORDER BY CHAR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt0.c0, v0.c2, v0.c1, NULL, rt0.c0)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c0, vt0.c0, v0.c0)) AND ((v0.c1, vt0.c0, vt0.c0, rt0.c2, v0.c2))), CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CHAR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (NULLIF((((rt0.c0, v0.c2, v0.c1, NULL, rt0.c0)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c0, vt0.c0, v0.c0)) AND ((v0.c1, vt0.c0, vt0.c0, rt0.c2, v0.c2))), CAST(v0.c0 AS NUMERIC))) ORDER BY CHAR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt0.c0, v0.c2, v0.c1, NULL, rt0.c0)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c0, vt0.c0, v0.c0)) AND ((v0.c1, vt0.c0, vt0.c0, rt0.c2, v0.c2))), CAST(v0.c0 AS NUMERIC))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CHAR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (NULLIF((((rt0.c0, v0.c2, v0.c1, NULL, rt0.c0)) NOT BETWEEN ((v0.c2, rt0.c0, v0.c0, vt0.c0, v0.c0)) AND ((v0.c1, vt0.c0, vt0.c0, rt0.c2, v0.c2))), CAST(v0.c0 AS NUMERIC))) ORDER BY CHAR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CAST(0x36f23ea6 AS TEXT) AS TEXT)) ORDER BY 0.7034204759764734;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0X36f23ea6 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.7034204759764734);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CAST(0x36f23ea6 AS TEXT) AS TEXT)) ORDER BY 0.7034204759764734;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0X36f23ea6 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.7034204759764734);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CAST(0x36f23ea6 AS TEXT) AS TEXT)) ORDER BY 0.7034204759764734;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN (((v0.c1 IN (v0.c1)))) AND ((((((v0.c2)OR(v0.c2)))AND(rt0.c1))))) WHERE (UNLIKELY((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN (((v0.c1 IN (v0.c1)))) AND ((((((v0.c2)OR(v0.c2)))AND(rt0.c1))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN (((v0.c1 IN (v0.c1)))) AND ((((((v0.c2)OR(v0.c2)))AND(rt0.c1))))) WHERE (UNLIKELY((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN (((v0.c1 IN (v0.c1)))) AND ((((((v0.c2)OR(v0.c2)))AND(rt0.c1))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN (((v0.c1 IN (v0.c1)))) AND ((((((v0.c2)OR(v0.c2)))AND(rt0.c1))))) WHERE (UNLIKELY((rt0.c0 IN ())));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))*(((rt0.c0)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))*(((rt0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))*(((rt0.c0)OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))*(((rt0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))*(((rt0.c0)OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CASE WHEN v0.c1 THEN v0.c0 END IN ())) ORDER BY (((v0.c0 IN (v0.c2)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c1 THEN v0.c0 END IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0 IN (v0.c2)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CASE WHEN v0.c1 THEN v0.c0 END IN ())) ORDER BY (((v0.c0 IN (v0.c2)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((CASE WHEN v0.c1 THEN v0.c0 END IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0 IN (v0.c2)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((CASE WHEN v0.c1 THEN v0.c0 END IN ())) ORDER BY (((v0.c0 IN (v0.c2)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT * FROM rt0, v0 WHERE (rt0.c0) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (rt0.c0) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (rt0.c0) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY) ORDER BY CAST((((vt0.c0, rt0.c2, vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, x'3c1d', rt0.c1, 0.47112235608205055))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0, rt0.c2, vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, x'3c1d', rt0.c1, 0.47112235608205055))) AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY) ORDER BY CAST((((vt0.c0, rt0.c2, vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, x'3c1d', rt0.c1, 0.47112235608205055))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0, rt0.c2, vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, x'3c1d', rt0.c1, 0.47112235608205055))) AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY) ORDER BY CAST((((vt0.c0, rt0.c2, vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c2, x'3c1d', rt0.c1, 0.47112235608205055))) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON 'S⭳' WHERE (((NULL) IS FALSE)) ORDER BY json_object(((v0.c0)==(v0.c2)), NULL, ((vt0.c0)<>(v0.c2)), v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON 'S⭳' ORDER BY json_object(((v0.c0)==(v0.c2)), NULL, ((vt0.c0)<>(v0.c2)), v0.c1));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON 'S⭳' WHERE (((NULL) IS FALSE)) ORDER BY json_object(((v0.c0)==(v0.c2)), NULL, ((vt0.c0)<>(v0.c2)), v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON 'S⭳' ORDER BY json_object(((v0.c0)==(v0.c2)), NULL, ((vt0.c0)<>(v0.c2)), v0.c1));
SELECT ALL COUNT(*) FROM v0 WHERE ('-') ORDER BY (~ (x'dac231f0'));
SELECT SUM(count) FROM (SELECT (('-') IS TRUE)  as count FROM v0 ORDER BY (~ (x'dac231f0')));
SELECT ALL COUNT(*) FROM v0 WHERE ('-') ORDER BY (~ (x'dac231f0'));
SELECT SUM(count) FROM (SELECT (('-') IS TRUE)  as count FROM v0 ORDER BY (~ (x'dac231f0')));
SELECT ALL COUNT(*) FROM v0 WHERE ('-') ORDER BY (~ (x'dac231f0'));
SELECT * FROM vt0, v0, rt0 WHERE (((((v0.c2)>>(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (v0.c0 COLLATE BINARY))) ORDER BY QUOTE(vt0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)>>(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY QUOTE(vt0.c0 COLLATE NOCASE) ASC);
SELECT * FROM vt0, v0, rt0 WHERE (((((v0.c2)>>(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (v0.c0 COLLATE BINARY))) ORDER BY QUOTE(vt0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)>>(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY QUOTE(vt0.c0 COLLATE NOCASE) ASC);
SELECT * FROM vt0, v0, rt0 WHERE (((((v0.c2)>>(rt0.c1))) BETWEEN (((rt0.c0) ISNULL)) AND (v0.c0 COLLATE BINARY))) ORDER BY QUOTE(vt0.c0 COLLATE NOCASE) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY (- (138355544))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY (- (138355544))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY (- (138355544))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY (- (138355544))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2)GLOB(vt0.c0)))-(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))) WHERE (json_quote(((v0.c0) IS TRUE))) ORDER BY ((((NULL)<=(v0.c0)))||((NOT (rt0.c2))))  NULLS FIRST, IFNULL(DISTINCT COALESCE(DISTINCT v0.c0, v0.c1, rt0.c2, v0.c1, v0.c1, v0.c2), ((rt0.c0) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((json_quote(((v0.c0) IS TRUE))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2)GLOB(vt0.c0)))-(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))) ORDER BY ((((NULL)<=(v0.c0)))||((NOT (rt0.c2))))  NULLS FIRST, IFNULL(DISTINCT COALESCE(DISTINCT v0.c0, v0.c1, rt0.c2, v0.c1, v0.c1, v0.c2), ((rt0.c0) NOT NULL)) DESC);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2)GLOB(vt0.c0)))-(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))) WHERE (json_quote(((v0.c0) IS TRUE))) ORDER BY ((((NULL)<=(v0.c0)))||((NOT (rt0.c2))))  NULLS FIRST, IFNULL(DISTINCT COALESCE(DISTINCT v0.c0, v0.c1, rt0.c2, v0.c1, v0.c1, v0.c2), ((rt0.c0) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((json_quote(((v0.c0) IS TRUE))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2)GLOB(vt0.c0)))-(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))) ORDER BY ((((NULL)<=(v0.c0)))||((NOT (rt0.c2))))  NULLS FIRST, IFNULL(DISTINCT COALESCE(DISTINCT v0.c0, v0.c1, rt0.c2, v0.c1, v0.c1, v0.c2), ((rt0.c0) NOT NULL)) DESC);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON ((((rt0.c2)GLOB(vt0.c0)))-(((v0.c2) NOT BETWEEN (v0.c2) AND (rt0.c1)))) WHERE (json_quote(((v0.c0) IS TRUE))) ORDER BY ((((NULL)<=(v0.c0)))||((NOT (rt0.c2))))  NULLS FIRST, IFNULL(DISTINCT COALESCE(DISTINCT v0.c0, v0.c1, rt0.c2, v0.c1, v0.c1, v0.c2), ((rt0.c0) NOT NULL)) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END)AND('Isi~s9pm')))AND(CASE v0.c1  WHEN vt0.c0 THEN x'' END)))AND('0.03518587346993296')))OR(((v0.c2) ISNULL)))) ORDER BY (- (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (- (((vt0.c0)>=(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END)AND('Isi~s9pm')))AND(CASE v0.c1  WHEN vt0.c0 THEN x'' END)))AND('0.03518587346993296')))OR(((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (- (((vt0.c0)>=(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END)AND('Isi~s9pm')))AND(CASE v0.c1  WHEN vt0.c0 THEN x'' END)))AND('0.03518587346993296')))OR(((v0.c2) ISNULL)))) ORDER BY (- (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (- (((vt0.c0)>=(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END)AND('Isi~s9pm')))AND(CASE v0.c1  WHEN vt0.c0 THEN x'' END)))AND('0.03518587346993296')))OR(((v0.c2) ISNULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (- (((vt0.c0)>=(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END)AND('Isi~s9pm')))AND(CASE v0.c1  WHEN vt0.c0 THEN x'' END)))AND('0.03518587346993296')))OR(((v0.c2) ISNULL)))) ORDER BY (- (vt0.c0)) COLLATE RTRIM  NULLS FIRST, (- (((vt0.c0)>=(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2))) NOTNULL));
SELECT * FROM v0 WHERE (x'd7a2') ORDER BY CAST(((((v0.c2)OR(v0.c2)))OR(v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((x'd7a2') IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c2)OR(v0.c2)))OR(v0.c0)) AS TEXT));
SELECT * FROM v0 WHERE (x'd7a2') ORDER BY CAST(((((v0.c2)OR(v0.c2)))OR(v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((x'd7a2') IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c2)OR(v0.c2)))OR(v0.c0)) AS TEXT));
SELECT * FROM v0 WHERE (x'd7a2') ORDER BY CAST(((((v0.c2)OR(v0.c2)))OR(v0.c0)) AS TEXT);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1)LIKE(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD((((rt0.c2))<=((rt0.c0))), 0.8000151210715103)) ORDER BY ((rt0.c2)>(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0))))), ((vt0.c0 COLLATE NOCASE) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt0.c2))<=((rt0.c0))), 0.8000151210715103)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)>(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0))))), ((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD((((rt0.c2))<=((rt0.c0))), 0.8000151210715103)) ORDER BY ((rt0.c2)>(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0))))), ((vt0.c0 COLLATE NOCASE) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt0.c2))<=((rt0.c0))), 0.8000151210715103)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)>(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0))))), ((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (LIKELIHOOD((((rt0.c2))<=((rt0.c0))), 0.8000151210715103)) ORDER BY ((rt0.c2)>(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST, (((vt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0))))), ((vt0.c0 COLLATE NOCASE) IS FALSE);
SELECT * FROM rt0 WHERE ((((- (rt0.c2)))>>(((rt0.c1)OR(rt0.c1))))) ORDER BY (((rt0.c0) ISNULL) IN (((rt0.c1) ISNULL), rt0.c0)), CASE rt0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (+ (0.16121319828993586)) ELSE ((rt0.c0)LIKE(rt0.c1)) END ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))>>(((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) ISNULL) IN (((rt0.c1) ISNULL), rt0.c0)), CASE rt0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (+ (0.16121319828993586)) ELSE ((rt0.c0)LIKE(rt0.c1)) END ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN ()) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((- (rt0.c2)))>>(((rt0.c1)OR(rt0.c1))))) ORDER BY (((rt0.c0) ISNULL) IN (((rt0.c1) ISNULL), rt0.c0)), CASE rt0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (+ (0.16121319828993586)) ELSE ((rt0.c0)LIKE(rt0.c1)) END ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))>>(((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) ISNULL) IN (((rt0.c1) ISNULL), rt0.c0)), CASE rt0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (+ (0.16121319828993586)) ELSE ((rt0.c0)LIKE(rt0.c1)) END ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN ()) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((- (rt0.c2)))>>(((rt0.c1)OR(rt0.c1))))) ORDER BY (((rt0.c0) ISNULL) IN (((rt0.c1) ISNULL), rt0.c0)), CASE rt0.c2  WHEN CAST(rt0.c0 AS REAL) THEN (+ (0.16121319828993586)) ELSE ((rt0.c0)LIKE(rt0.c1)) END ASC  NULLS FIRST, (rt0.c1 COLLATE BINARY IN ()) DESC  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) IN ((- (v0.c2)))) WHERE (((((rt0.c1)OR((NOT (v0.c0)))))OR(rt0.c2))) ORDER BY (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR((NOT (v0.c0)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) IN ((- (v0.c2)))) ORDER BY (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) IN ((- (v0.c2)))) WHERE (((((rt0.c1)OR((NOT (v0.c0)))))OR(rt0.c2))) ORDER BY (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR((NOT (v0.c0)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) IN ((- (v0.c2)))) ORDER BY (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c2))) IN ((- (v0.c2)))) WHERE (((((rt0.c1)OR((NOT (v0.c0)))))OR(rt0.c2))) ORDER BY (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((rt0.c2))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((x'1e1b'))<((x'')))) ORDER BY x'99b5' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'1e1b'))<((x'')))) IS TRUE)  as count FROM v0 ORDER BY x'99b5' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((x'1e1b'))<((x'')))) ORDER BY x'99b5' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'1e1b'))<((x'')))) IS TRUE)  as count FROM v0 ORDER BY x'99b5' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((x'1e1b'))<((x'')))) ORDER BY x'99b5' ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((CAST(v0.c1 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c1 AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c1 AS TEXT)) NOT NULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))) WHERE (((((((((((NULL)OR('Woo>n쑬#zF')))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)OR('Woo>n쑬#zF')))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))) WHERE (((((((((((NULL)OR('Woo>n쑬#zF')))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)OR('Woo>n쑬#zF')))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (NOT (((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))) WHERE (((((((((((NULL)OR('Woo>n쑬#zF')))AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST((((v0.c2, rt0.c0, x'')) BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c1, v0.c1, rt0.c2))) AS TEXT) CROSS JOIN v0 ON CASE WHEN ((rt0.c0)-(vt0.c0)) THEN v0.c2 WHEN ((((v0.c1)OR(v0.c0)))OR(v0.c2)) THEN (NOT (NULL)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE v0.c0 END THEN 2.25695216E8 ELSE CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END END WHERE (((rt0.c1)/(0.6968292212616248))) ORDER BY 0Xffffffffdd5ae061;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(0.6968292212616248))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST((((v0.c2, rt0.c0, x'')) BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c1, v0.c1, rt0.c2))) AS TEXT) CROSS JOIN v0 ON CASE WHEN ((rt0.c0)-(vt0.c0)) THEN v0.c2 WHEN ((((v0.c1)OR(v0.c0)))OR(v0.c2)) THEN (NOT (NULL)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE v0.c0 END THEN 2.25695216E8 ELSE CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END END ORDER BY 0Xffffffffdd5ae061);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST((((v0.c2, rt0.c0, x'')) BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c1, v0.c1, rt0.c2))) AS TEXT) CROSS JOIN v0 ON CASE WHEN ((rt0.c0)-(vt0.c0)) THEN v0.c2 WHEN ((((v0.c1)OR(v0.c0)))OR(v0.c2)) THEN (NOT (NULL)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE v0.c0 END THEN 2.25695216E8 ELSE CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END END WHERE (((rt0.c1)/(0.6968292212616248))) ORDER BY 0Xffffffffdd5ae061;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(0.6968292212616248))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST((((v0.c2, rt0.c0, x'')) BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c1, v0.c1, rt0.c2))) AS TEXT) CROSS JOIN v0 ON CASE WHEN ((rt0.c0)-(vt0.c0)) THEN v0.c2 WHEN ((((v0.c1)OR(v0.c0)))OR(v0.c2)) THEN (NOT (NULL)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE v0.c0 END THEN 2.25695216E8 ELSE CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END END ORDER BY 0Xffffffffdd5ae061);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST((((v0.c2, rt0.c0, x'')) BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c1, v0.c1, rt0.c2))) AS TEXT) CROSS JOIN v0 ON CASE WHEN ((rt0.c0)-(vt0.c0)) THEN v0.c2 WHEN ((((v0.c1)OR(v0.c0)))OR(v0.c2)) THEN (NOT (NULL)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE v0.c0 END THEN 2.25695216E8 ELSE CASE WHEN v0.c1 THEN v0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END END WHERE (((rt0.c1)/(0.6968292212616248))) ORDER BY 0Xffffffffdd5ae061;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>((rt0.c1)))) NOT BETWEEN (((rt0.c0)!=(rt0.c2))) AND ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((1235005472, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) ORDER BY ((((rt0.c1)=(rt0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((rt0.c1)))) NOT BETWEEN (((rt0.c0)!=(rt0.c2))) AND ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((1235005472, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)==(rt0.c1))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>((rt0.c1)))) NOT BETWEEN (((rt0.c0)!=(rt0.c2))) AND ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((1235005472, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) ORDER BY ((((rt0.c1)=(rt0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((rt0.c1)))) NOT BETWEEN (((rt0.c0)!=(rt0.c2))) AND ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((1235005472, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)==(rt0.c1))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))>((rt0.c1)))) NOT BETWEEN (((rt0.c0)!=(rt0.c2))) AND ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((1235005472, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))))) ORDER BY ((((rt0.c1)=(rt0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((((('-58859129')<>(NULL)))<(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END)GLOB(x'')) DESC, ((('' IN (v0.c0, v0.c1)))<=((- (0.6018219632284032)))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-58859129')<>(NULL)))<(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END)GLOB(x'')) DESC, ((('' IN (v0.c0, v0.c1)))<=((- (0.6018219632284032)))) ASC);
SELECT ALL * FROM v0, rt0 WHERE ((((('-58859129')<>(NULL)))<(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END)GLOB(x'')) DESC, ((('' IN (v0.c0, v0.c1)))<=((- (0.6018219632284032)))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-58859129')<>(NULL)))<(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END)GLOB(x'')) DESC, ((('' IN (v0.c0, v0.c1)))<=((- (0.6018219632284032)))) ASC);
SELECT ALL * FROM v0, rt0 WHERE ((((('-58859129')<>(NULL)))<(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 END)GLOB(x'')) DESC, ((('' IN (v0.c0, v0.c1)))<=((- (0.6018219632284032)))) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((-1.229274004E9)OR(NULL)))AND(rt0.c2)))OR('0.4307209404765048')))AND(rt0.c0)))IS((- (rt0.c1)))) WHERE ((NOT ((- (rt0.c2))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((-1.229274004E9)OR(NULL)))AND(rt0.c2)))OR('0.4307209404765048')))AND(rt0.c0)))IS((- (rt0.c1)))) ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((-1.229274004E9)OR(NULL)))AND(rt0.c2)))OR('0.4307209404765048')))AND(rt0.c0)))IS((- (rt0.c1)))) WHERE ((NOT ((- (rt0.c2))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((-1.229274004E9)OR(NULL)))AND(rt0.c2)))OR('0.4307209404765048')))AND(rt0.c0)))IS((- (rt0.c1)))) ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((-1.229274004E9)OR(NULL)))AND(rt0.c2)))OR('0.4307209404765048')))AND(rt0.c0)))IS((- (rt0.c1)))) WHERE ((NOT ((- (rt0.c2))))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE (x'');
SELECT * FROM v0 WHERE (((((CAST(v0.c2 AS NUMERIC))OR(((((((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)))))AND(v0.c1))) ORDER BY ((v0.c1 COLLATE RTRIM) NOT NULL) ASC, (~ (((((v0.c1)OR(NULL)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c2 AS NUMERIC))OR(((((((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)))))AND(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE RTRIM) NOT NULL) ASC, (~ (((((v0.c1)OR(NULL)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((CAST(v0.c2 AS NUMERIC))OR(((((((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)))))AND(v0.c1))) ORDER BY ((v0.c1 COLLATE RTRIM) NOT NULL) ASC, (~ (((((v0.c1)OR(NULL)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c2 AS NUMERIC))OR(((((((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)))))AND(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE RTRIM) NOT NULL) ASC, (~ (((((v0.c1)OR(NULL)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((CAST(v0.c2 AS NUMERIC))OR(((((((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c2)))AND(v0.c1)))))AND(v0.c1))) ORDER BY ((v0.c1 COLLATE RTRIM) NOT NULL) ASC, (~ (((((v0.c1)OR(NULL)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((((''))>=((v0.c0)))) ORDER BY CASE WHEN ((v0.c1) NOTNULL) THEN ((v0.c0) ISNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((''))>=((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c1) NOTNULL) THEN ((v0.c0) ISNULL) END ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((''))>=((v0.c0)))) ORDER BY CASE WHEN ((v0.c1) NOTNULL) THEN ((v0.c0) ISNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((''))>=((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c1) NOTNULL) THEN ((v0.c0) ISNULL) END ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((''))>=((v0.c0)))) ORDER BY CASE WHEN ((v0.c1) NOTNULL) THEN ((v0.c0) ISNULL) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((('1371235690')*(v0.c1)))AND('︦\n ᝽ ')))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END))) ORDER BY (((((v0.c2)OR('걘]')))AND(v0.c2)) IN (((v0.c2) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('1371235690')*(v0.c1)))AND('︦\n ᝽ ')))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2)OR('걘]')))AND(v0.c2)) IN (((v0.c2) ISNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((('1371235690')*(v0.c1)))AND('︦\n ᝽ ')))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END))) ORDER BY (((((v0.c2)OR('걘]')))AND(v0.c2)) IN (((v0.c2) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((('1371235690')*(v0.c1)))AND('︦\n ᝽ ')))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2)OR('걘]')))AND(v0.c2)) IN (((v0.c2) ISNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((('1371235690')*(v0.c1)))AND('︦\n ᝽ ')))AND(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END))) ORDER BY (((((v0.c2)OR('걘]')))AND(v0.c2)) IN (((v0.c2) ISNULL))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS REAL));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c2)))AND(v0.c0))) IS FALSE)) ORDER BY highlight(x'', ((v0.c2)IS(v0.c1)), CAST(v0.c1 AS TEXT), CASE v0.c2  WHEN v0.c1 THEN v0.c2 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c2)))AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY highlight(x'', ((v0.c2)IS(v0.c1)), CAST(v0.c1 AS TEXT), CASE v0.c2  WHEN v0.c1 THEN v0.c2 END) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c2)))AND(v0.c0))) IS FALSE)) ORDER BY highlight(x'', ((v0.c2)IS(v0.c1)), CAST(v0.c1 AS TEXT), CASE v0.c2  WHEN v0.c1 THEN v0.c2 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c2)))AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY highlight(x'', ((v0.c2)IS(v0.c1)), CAST(v0.c1 AS TEXT), CASE v0.c2  WHEN v0.c1 THEN v0.c2 END) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((rt0.c1)) BETWEEN (((v0.c0 IN (rt0.c2)))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (NULL)))))) ORDER BY (((CASE v0.c0  WHEN rt0.c0 THEN 0.5802319093771567 END))==((v0.c1 COLLATE RTRIM))) ASC, ((((rt0.c0)) BETWEEN ((v0.c1)) AND ((rt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((v0.c0 IN (rt0.c2)))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (NULL)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((CASE v0.c0  WHEN rt0.c0 THEN 0.5802319093771567 END))=((v0.c1 COLLATE RTRIM))) ASC, ((((rt0.c0)) BETWEEN ((v0.c1)) AND ((rt0.c0))) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((rt0.c1)) BETWEEN (((v0.c0 IN (rt0.c2)))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (NULL)))))) ORDER BY (((CASE v0.c0  WHEN rt0.c0 THEN 0.5802319093771567 END))==((v0.c1 COLLATE RTRIM))) ASC, ((((rt0.c0)) BETWEEN ((v0.c1)) AND ((rt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((v0.c0 IN (rt0.c2)))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (NULL)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((CASE v0.c0  WHEN rt0.c0 THEN 0.5802319093771567 END))=((v0.c1 COLLATE RTRIM))) ASC, ((((rt0.c0)) BETWEEN ((v0.c1)) AND ((rt0.c0))) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((rt0.c1)) BETWEEN (((v0.c0 IN (rt0.c2)))) AND ((((v0.c1) NOT BETWEEN (v0.c2) AND (NULL)))))) ORDER BY (((CASE v0.c0  WHEN rt0.c0 THEN 0.5802319093771567 END))==((v0.c1 COLLATE RTRIM))) ASC, ((((rt0.c0)) BETWEEN ((v0.c1)) AND ((rt0.c0))) IN ())  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c0) NOTNULL)))<=((CAST(rt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOTNULL)))<=((CAST(rt0.c0 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0) NOTNULL)))<=((CAST(rt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOTNULL)))<=((CAST(rt0.c0 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0) NOTNULL)))<=((CAST(rt0.c0 AS TEXT)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c0)*(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c0)*(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c0)*(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c0)*(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c0)*(rt0.c2)) END);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((-555587972)>=(v0.c1 COLLATE NOCASE))) ORDER BY (+ (((('gQC\nx'))>=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-555587972)>=(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (+ (((('gQC\nx'))>=((vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((-555587972)>=(v0.c1 COLLATE NOCASE))) ORDER BY (+ (((('gQC\nx'))>=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-555587972)>=(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (+ (((('gQC\nx'))>=((vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((-555587972)>=(v0.c1 COLLATE NOCASE))) ORDER BY (+ (((('gQC\nx'))>=((vt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c1  WHEN '-1784732046' THEN ((v0.c1) NOT NULL) END) ORDER BY v0.c1, (((((v0.c0, v0.c0, v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c0, v0.c1, v0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2, v0.c0, x'')))) BETWEEN ((+ (v0.c2))) AND (((((v0.c1)OR(v0.c0)))OR(v0.c1))))  NULLS FIRST, '57' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1  WHEN '-1784732046' THEN ((v0.c1) NOT NULL) END) IS TRUE)  as count FROM v0 ORDER BY v0.c1, (((((v0.c0, v0.c0, v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c0, v0.c1, v0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2, v0.c0, x'')))) BETWEEN ((+ (v0.c2))) AND (((((v0.c1)OR(v0.c0)))OR(v0.c1))))  NULLS FIRST, '57' DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c1  WHEN '-1784732046' THEN ((v0.c1) NOT NULL) END) ORDER BY v0.c1, (((((v0.c0, v0.c0, v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c0, v0.c1, v0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2, v0.c0, x'')))) BETWEEN ((+ (v0.c2))) AND (((((v0.c1)OR(v0.c0)))OR(v0.c1))))  NULLS FIRST, '57' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1  WHEN '-1784732046' THEN ((v0.c1) NOT NULL) END) IS TRUE)  as count FROM v0 ORDER BY v0.c1, (((((v0.c0, v0.c0, v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c0, v0.c1, v0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2, v0.c0, x'')))) BETWEEN ((+ (v0.c2))) AND (((((v0.c1)OR(v0.c0)))OR(v0.c1))))  NULLS FIRST, '57' DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE v0.c1  WHEN '-1784732046' THEN ((v0.c1) NOT NULL) END) ORDER BY v0.c1, (((((v0.c0, v0.c0, v0.c2, v0.c2, v0.c1)) BETWEEN ((v0.c0, v0.c1, v0.c0, v0.c1, v0.c1)) AND ((v0.c1, v0.c1, v0.c2, v0.c0, x'')))) BETWEEN ((+ (v0.c2))) AND (((((v0.c1)OR(v0.c0)))OR(v0.c1))))  NULLS FIRST, '57' DESC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) IS TRUE) WHERE ((+ (((rt0.c0)<<(rt0.c1))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) IS TRUE) ORDER BY rt0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) IS TRUE) WHERE ((+ (((rt0.c0)<<(rt0.c1))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) IS TRUE) ORDER BY rt0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) IS TRUE) WHERE ((+ (((rt0.c0)<<(rt0.c1))))) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE ('0!cK');
SELECT SUM(count) FROM (SELECT ALL (('0!cK') IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE ('0!cK');
SELECT SUM(count) FROM (SELECT ALL (('0!cK') IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE ('0!cK');
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c1))) BETWEEN ((v0.c0 IN (v0.c2))) AND (GLOB(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c1))) BETWEEN ((v0.c0 IN (v0.c2))) AND (GLOB(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c1))) BETWEEN ((v0.c0 IN (v0.c2))) AND (GLOB(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c1))) BETWEEN ((v0.c0 IN (v0.c2))) AND (GLOB(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c0) AND (v0.c1))) BETWEEN ((v0.c0 IN (v0.c2))) AND (GLOB(vt0.c0, vt0.c0)));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN '-107669131' WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END  WHEN ((((rt0.c1)OR(0.006686042486054422)))AND(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END) ORDER BY ((v0.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN rt0.c2 THEN '-107669131' WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END  WHEN ((((rt0.c1)OR(0.006686042486054422)))AND(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((v0.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN '-107669131' WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END  WHEN ((((rt0.c1)OR(0.006686042486054422)))AND(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END) ORDER BY ((v0.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c1  WHEN rt0.c2 THEN '-107669131' WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END  WHEN ((((rt0.c1)OR(0.006686042486054422)))AND(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((v0.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN '-107669131' WHEN rt0.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 ELSE v0.c0 END  WHEN ((((rt0.c1)OR(0.006686042486054422)))AND(v0.c2)) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END) ORDER BY ((v0.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM)=((((('0.755167444290701')AND(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)==((((('0.755167444290701')AND(vt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM)=((((('0.755167444290701')AND(vt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)==((((('0.755167444290701')AND(vt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE RTRIM)=((((('0.755167444290701')AND(vt0.c0)))OR(rt0.c2)))));
SELECT * FROM v0, vt0 WHERE (json(((v0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((json(((v0.c1) IS TRUE))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (json(((v0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((json(((v0.c1) IS TRUE))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (json(((v0.c1) IS TRUE)));
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (NULL)));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)) IN ()));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) ISNULL) INNER JOIN vt0 ON ((rt0.c0)&(vt0.c0)) COLLATE RTRIM WHERE (CASE (((rt0.c1, v0.c2, vt0.c0, v0.c2, rt0.c2)) BETWEEN ((NULL, v0.c1, NULL, v0.c2, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c1, rt0.c0, v0.c2)))  WHEN rt0.c0 COLLATE RTRIM THEN '4E^)' WHEN v0.c2 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c2)||(rt0.c2)) THEN ((((vt0.c0)OR(rt0.c1)))OR(v0.c2)) ELSE CASE WHEN v0.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1, v0.c2, vt0.c0, v0.c2, rt0.c2)) BETWEEN ((NULL, v0.c1, NULL, v0.c2, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c1, rt0.c0, v0.c2)))  WHEN rt0.c0 COLLATE RTRIM THEN '4E^)' WHEN v0.c2 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c2)||(rt0.c2)) THEN ((((vt0.c0)OR(rt0.c1)))OR(v0.c2)) ELSE CASE WHEN v0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) ISNULL) INNER JOIN vt0 ON ((rt0.c0)&(vt0.c0)) COLLATE RTRIM);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) ISNULL) INNER JOIN vt0 ON ((rt0.c0)&(vt0.c0)) COLLATE RTRIM WHERE (CASE (((rt0.c1, v0.c2, vt0.c0, v0.c2, rt0.c2)) BETWEEN ((NULL, v0.c1, NULL, v0.c2, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c1, rt0.c0, v0.c2)))  WHEN rt0.c0 COLLATE RTRIM THEN '4E^)' WHEN v0.c2 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c2)||(rt0.c2)) THEN ((((vt0.c0)OR(rt0.c1)))OR(v0.c2)) ELSE CASE WHEN v0.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1, v0.c2, vt0.c0, v0.c2, rt0.c2)) BETWEEN ((NULL, v0.c1, NULL, v0.c2, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c1, rt0.c0, v0.c2)))  WHEN rt0.c0 COLLATE RTRIM THEN '4E^)' WHEN v0.c2 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c2)||(rt0.c2)) THEN ((((vt0.c0)OR(rt0.c1)))OR(v0.c2)) ELSE CASE WHEN v0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) ISNULL) INNER JOIN vt0 ON ((rt0.c0)&(vt0.c0)) COLLATE RTRIM);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) ISNULL) INNER JOIN vt0 ON ((rt0.c0)&(vt0.c0)) COLLATE RTRIM WHERE (CASE (((rt0.c1, v0.c2, vt0.c0, v0.c2, rt0.c2)) BETWEEN ((NULL, v0.c1, NULL, v0.c2, rt0.c0)) AND ((rt0.c2, v0.c0, rt0.c1, rt0.c0, v0.c2)))  WHEN rt0.c0 COLLATE RTRIM THEN '4E^)' WHEN v0.c2 THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c2)||(rt0.c2)) THEN ((((vt0.c0)OR(rt0.c1)))OR(v0.c2)) ELSE CASE WHEN v0.c0 THEN rt0.c0 END END);
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON (((vt0.c0)LIKE(rt0.c2)) IN ()) WHERE (CASE (- (rt0.c0))  WHEN (('g^}M(>')>=(vt0.c0)) THEN v0.c2 WHEN (NOT (0.30006332744964925)) THEN ((v0.c0)||(v0.c1)) WHEN (~ (rt0.c0)) THEN json_type(v0.c0) ELSE (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN (('g^}M(>')>=(vt0.c0)) THEN v0.c2 WHEN (NOT (0.30006332744964925)) THEN ((v0.c0)||(v0.c1)) WHEN (~ (rt0.c0)) THEN json_type(v0.c0) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (((vt0.c0)LIKE(rt0.c2)) IN ()));
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON (((vt0.c0)LIKE(rt0.c2)) IN ()) WHERE (CASE (- (rt0.c0))  WHEN (('g^}M(>')>=(vt0.c0)) THEN v0.c2 WHEN (NOT (0.30006332744964925)) THEN ((v0.c0)||(v0.c1)) WHEN (~ (rt0.c0)) THEN json_type(v0.c0) ELSE (- (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN (('g^}M(>')>=(vt0.c0)) THEN v0.c2 WHEN (NOT (0.30006332744964925)) THEN ((v0.c0)||(v0.c1)) WHEN (~ (rt0.c0)) THEN json_type(v0.c0) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (((vt0.c0)LIKE(rt0.c2)) IN ()));
SELECT ALL * FROM vt0, rt0 CROSS JOIN v0 ON (((vt0.c0)LIKE(rt0.c2)) IN ()) WHERE (CASE (- (rt0.c0))  WHEN (('g^}M(>')>=(vt0.c0)) THEN v0.c2 WHEN (NOT (0.30006332744964925)) THEN ((v0.c0)||(v0.c1)) WHEN (~ (rt0.c0)) THEN json_type(v0.c0) ELSE (- (rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((((((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))OR(61147995)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) AS BLOB)) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (rt0.c2) AND (((rt0.c1)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))OR(61147995)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (rt0.c2) AND (((rt0.c1)||(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((((((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))OR(61147995)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) AS BLOB)) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (rt0.c2) AND (((rt0.c1)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))OR(61147995)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (rt0.c2) AND (((rt0.c1)||(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((((((((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))OR(61147995)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) AS BLOB)) ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (rt0.c2) AND (((rt0.c1)||(vt0.c0))));
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<((-58859129 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<((-58859129 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<((-58859129 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<((-58859129 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))<((-58859129 IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((x'')OR(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((x'')OR(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((x'')OR(vt0.c0)) AS REAL));
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN vt0 ON ((v0.c1 COLLATE NOCASE) NOT NULL) WHERE (((((rt0.c2)<(rt0.c2))) ISNULL)) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((- (rt0.c2))) AND (LENGTH(v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON ((v0.c1 COLLATE NOCASE) NOT NULL) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((- (rt0.c2))) AND (LENGTH(v0.c2))) DESC);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN vt0 ON ((v0.c1 COLLATE NOCASE) NOT NULL) WHERE (((((rt0.c2)<(rt0.c2))) ISNULL)) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((- (rt0.c2))) AND (LENGTH(v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON ((v0.c1 COLLATE NOCASE) NOT NULL) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((- (rt0.c2))) AND (LENGTH(v0.c2))) DESC);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN vt0 ON ((v0.c1 COLLATE NOCASE) NOT NULL) WHERE (((((rt0.c2)<(rt0.c2))) ISNULL)) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((- (rt0.c2))) AND (LENGTH(v0.c2))) DESC;
SELECT * FROM v0, rt0 WHERE (((v0.c1)OR(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c1)OR(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((v0.c1)OR(rt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((TYPEOF(vt0.c0)))==(((rt0.c2 IN ())))) WHERE ((((CAST(vt0.c0 AS NUMERIC)))>((v0.c2 COLLATE NOCASE)))) ORDER BY ((((rt0.c2) IS FALSE))|(((0.39577767843828515) NOT BETWEEN (v0.c2) AND (vt0.c0)))) DESC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS NUMERIC)))>((v0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((TYPEOF(vt0.c0)))==(((rt0.c2 IN ())))) ORDER BY ((((rt0.c2) IS FALSE))|(((0.39577767843828515) NOT BETWEEN (v0.c2) AND (vt0.c0)))) DESC, rt0.c0  NULLS FIRST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((TYPEOF(vt0.c0)))==(((rt0.c2 IN ())))) WHERE ((((CAST(vt0.c0 AS NUMERIC)))>((v0.c2 COLLATE NOCASE)))) ORDER BY ((((rt0.c2) IS FALSE))|(((0.39577767843828515) NOT BETWEEN (v0.c2) AND (vt0.c0)))) DESC, rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS NUMERIC)))>((v0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((TYPEOF(vt0.c0)))==(((rt0.c2 IN ())))) ORDER BY ((((rt0.c2) IS FALSE))|(((0.39577767843828515) NOT BETWEEN (v0.c2) AND (vt0.c0)))) DESC, rt0.c0  NULLS FIRST);
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((TYPEOF(vt0.c0)))==(((rt0.c2 IN ())))) WHERE ((((CAST(vt0.c0 AS NUMERIC)))>((v0.c2 COLLATE NOCASE)))) ORDER BY ((((rt0.c2) IS FALSE))|(((0.39577767843828515) NOT BETWEEN (v0.c2) AND (vt0.c0)))) DESC, rt0.c0  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) ORDER BY ((((rt0.c1 IN ()), CAST(rt0.c0 AS TEXT), ((rt0.c1)+(0.28341750262540144))))>=(((- (rt0.c2)), rt0.c2, json_object(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 IN ()), CAST(rt0.c0 AS TEXT), ((rt0.c1)+(0.28341750262540144))))>=(((- (rt0.c2)), rt0.c2, json_object(rt0.c2, rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) ORDER BY ((((rt0.c1 IN ()), CAST(rt0.c0 AS TEXT), ((rt0.c1)+(0.28341750262540144))))>=(((- (rt0.c2)), rt0.c2, json_object(rt0.c2, rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 IN ()), CAST(rt0.c0 AS TEXT), ((rt0.c1)+(0.28341750262540144))))>=(((- (rt0.c2)), rt0.c2, json_object(rt0.c2, rt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN ())) NOTNULL)) ORDER BY ((v0.c2) BETWEEN ((~ (0.8393482211276114))) AND (v0.c1 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c2) BETWEEN ((~ (0.8393482211276114))) AND (v0.c1 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN ())) NOTNULL)) ORDER BY ((v0.c2) BETWEEN ((~ (0.8393482211276114))) AND (v0.c1 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c2) BETWEEN ((~ (0.8393482211276114))) AND (v0.c1 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN ())) NOTNULL)) ORDER BY ((v0.c2) BETWEEN ((~ (0.8393482211276114))) AND (v0.c1 COLLATE BINARY)) DESC;
SELECT * FROM vt0, rt0, v0 WHERE (((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(CAST(rt0.c1 AS INTEGER))))AND((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(CAST(rt0.c1 AS INTEGER))))AND((~ (v0.c2))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(CAST(rt0.c1 AS INTEGER))))AND((~ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(CAST(rt0.c1 AS INTEGER))))AND((~ (v0.c2))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c1)))AND(CAST(rt0.c1 AS INTEGER))))AND((~ (v0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ (((((v0.c2)OR('q)')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c2)OR('q)')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ (((((v0.c2)OR('q)')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((v0.c2)OR('q)')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ (((((v0.c2)OR('q)')))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE (((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c1)))  WHEN 0.8393482211276114 THEN ((v0.c0) NOTNULL) ELSE ((v0.c0)<=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c1)))  WHEN 0.8393482211276114 THEN ((v0.c0) NOTNULL) ELSE ((v0.c0)<=(v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE (((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c1)))  WHEN 0.8393482211276114 THEN ((v0.c0) NOTNULL) ELSE ((v0.c0)<=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c1)))  WHEN 0.8393482211276114 THEN ((v0.c0) NOTNULL) ELSE ((v0.c0)<=(v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE (((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c1)))  WHEN 0.8393482211276114 THEN ((v0.c0) NOTNULL) ELSE ((v0.c0)<=(v0.c0)) END);
SELECT ALL * FROM v0, vt0 WHERE ((~ (((vt0.c0) NOT NULL)))) ORDER BY LIKELY(v0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(v0.c1 COLLATE NOCASE));
SELECT ALL * FROM v0, vt0 WHERE ((~ (((vt0.c0) NOT NULL)))) ORDER BY LIKELY(v0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELY(v0.c1 COLLATE NOCASE));
SELECT ALL * FROM v0, vt0 WHERE ((~ (((vt0.c0) NOT NULL)))) ORDER BY LIKELY(v0.c1 COLLATE NOCASE);
SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (JULIANDAY('', (~ (rt0.c0)), ((v0.c0)<>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY('', (~ (rt0.c0)), ((v0.c0)<>(v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (JULIANDAY('', (~ (rt0.c0)), ((v0.c0)<>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY('', (~ (rt0.c0)), ((v0.c0)<>(v0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0 NOT INDEXED, v0 WHERE (JULIANDAY('', (~ (rt0.c0)), ((v0.c0)<>(v0.c0))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (CAST(v0.c0 AS TEXT))) WHERE (((((((0.5802319093771567)>=(v0.c0)))AND(((v0.c2) NOTNULL))))AND(v0.c2))) ORDER BY ((((v0.c1) ISNULL))IS(((v0.c1)*(v0.c2))))  NULLS FIRST, (~ (((v0.c1)IS(x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.5802319093771567)>=(v0.c0)))AND(((v0.c2) NOTNULL))))AND(v0.c2))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (CAST(v0.c0 AS TEXT))) ORDER BY ((((v0.c1) ISNULL))IS(((v0.c1)*(v0.c2))))  NULLS FIRST, (~ (((v0.c1)IS(x'')))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (CAST(v0.c0 AS TEXT))) WHERE (((((((0.5802319093771567)>=(v0.c0)))AND(((v0.c2) NOTNULL))))AND(v0.c2))) ORDER BY ((((v0.c1) ISNULL))IS(((v0.c1)*(v0.c2))))  NULLS FIRST, (~ (((v0.c1)IS(x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.5802319093771567)>=(v0.c0)))AND(((v0.c2) NOTNULL))))AND(v0.c2))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (CAST(v0.c0 AS TEXT))) ORDER BY ((((v0.c1) ISNULL))IS(((v0.c1)*(v0.c2))))  NULLS FIRST, (~ (((v0.c1)IS(x'')))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (CAST(v0.c0 AS TEXT))) WHERE (((((((0.5802319093771567)>=(v0.c0)))AND(((v0.c2) NOTNULL))))AND(v0.c2))) ORDER BY ((((v0.c1) ISNULL))IS(((v0.c1)*(v0.c2))))  NULLS FIRST, (~ (((v0.c1)IS(x''))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((NULL)!=(''))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((NULL)<>('')))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((NULL)!=(''))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((NULL)<>('')))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((NULL)!=(''))))));
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((NULL)>>('1191778173')), ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((NULL)>>('1191778173')), ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((NULL)>>('1191778173')), ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((NULL)>>('1191778173')), ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((NULL)>>('1191778173')), ((vt0.c0) NOTNULL), vt0.c0 COLLATE NOCASE)) AND (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((CAST(rt0.c1 AS BLOB))AND((('1113033890')%(rt0.c0)))))AND(((rt0.c0)-(rt0.c0)))))AND((+ ('M''HSD3TJ<')))))AND(json_remove(v0.c1, v0.c2)))) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS BLOB))AND((('1113033890')%(rt0.c0)))))AND(((rt0.c0)-(rt0.c0)))))AND((+ ('M''HSD3TJ<')))))AND(json_remove(v0.c1, v0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((CAST(rt0.c1 AS BLOB))AND((('1113033890')%(rt0.c0)))))AND(((rt0.c0)-(rt0.c0)))))AND((+ ('M''HSD3TJ<')))))AND(json_remove(v0.c1, v0.c2)))) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS BLOB))AND((('1113033890')%(rt0.c0)))))AND(((rt0.c0)-(rt0.c0)))))AND((+ ('M''HSD3TJ<')))))AND(json_remove(v0.c1, v0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS REAL)  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2) ISNULL)) BETWEEN (((vt0.c0)|(v0.c2))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((x'8375' IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) ISNULL)) BETWEEN (((vt0.c0)|(v0.c2))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((x'8375' IN ())) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2) ISNULL)) BETWEEN (((vt0.c0)|(v0.c2))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((x'8375' IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) ISNULL)) BETWEEN (((vt0.c0)|(v0.c2))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((x'8375' IN ())) NOTNULL)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2) ISNULL)) BETWEEN (((vt0.c0)|(v0.c2))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (((x'8375' IN ())) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6092213352955365)) IN ())) ORDER BY CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC), (+ (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6092213352955365)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC), (+ (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6092213352955365)) IN ())) ORDER BY CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC), (+ (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6092213352955365)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC), (+ (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.6092213352955365)) IN ())) ORDER BY CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC), (+ (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT * FROM v0, vt0 WHERE (CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) WHEN CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END THEN ((((v0.c1)AND(v0.c2)))AND('0.9527375244207535')) WHEN ((v0.c0)IS NOT(0X4df509bc)) THEN (~ (v0.c2)) WHEN ((((((((v0.c1)AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c1)>>(vt0.c0)) THEN (((x''))>((vt0.c0))) ELSE (((v0.c1)) BETWEEN ((NULL)) AND ((v0.c2))) END) ORDER BY ((((((v0.c0) NOTNULL))OR(CAST(v0.c0 AS NUMERIC))))AND(SQLITE_COMPILEOPTION_USED('1313231719')));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) WHEN CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END THEN ((((v0.c1)AND(v0.c2)))AND('0.9527375244207535')) WHEN ((v0.c0)IS NOT(0x4df509bc)) THEN (~ (v0.c2)) WHEN ((((((((v0.c1)AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c1)>>(vt0.c0)) THEN (((x''))>((vt0.c0))) ELSE (((v0.c1)) BETWEEN ((NULL)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0) NOTNULL))OR(CAST(v0.c0 AS NUMERIC))))AND(SQLITE_COMPILEOPTION_USED('1313231719'))));
SELECT * FROM v0, vt0 WHERE (CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) WHEN CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END THEN ((((v0.c1)AND(v0.c2)))AND('0.9527375244207535')) WHEN ((v0.c0)IS NOT(0X4df509bc)) THEN (~ (v0.c2)) WHEN ((((((((v0.c1)AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c1)>>(vt0.c0)) THEN (((x''))>((vt0.c0))) ELSE (((v0.c1)) BETWEEN ((NULL)) AND ((v0.c2))) END) ORDER BY ((((((v0.c0) NOTNULL))OR(CAST(v0.c0 AS NUMERIC))))AND(SQLITE_COMPILEOPTION_USED('1313231719')));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) WHEN CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END THEN ((((v0.c1)AND(v0.c2)))AND('0.9527375244207535')) WHEN ((v0.c0)IS NOT(0x4df509bc)) THEN (~ (v0.c2)) WHEN ((((((((v0.c1)AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c1)>>(vt0.c0)) THEN (((x''))>((vt0.c0))) ELSE (((v0.c1)) BETWEEN ((NULL)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0) NOTNULL))OR(CAST(v0.c0 AS NUMERIC))))AND(SQLITE_COMPILEOPTION_USED('1313231719'))));
SELECT * FROM v0, vt0 WHERE (CASE WHEN (v0.c1 IN ()) THEN (+ (v0.c0)) WHEN CASE v0.c2  WHEN v0.c2 THEN vt0.c0 END THEN ((((v0.c1)AND(v0.c2)))AND('0.9527375244207535')) WHEN ((v0.c0)IS NOT(0X4df509bc)) THEN (~ (v0.c2)) WHEN ((((((((v0.c1)AND(v0.c1)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END WHEN ((v0.c1)>>(vt0.c0)) THEN (((x''))>((vt0.c0))) ELSE (((v0.c1)) BETWEEN ((NULL)) AND ((v0.c2))) END) ORDER BY ((((((v0.c0) NOTNULL))OR(CAST(v0.c0 AS NUMERIC))))AND(SQLITE_COMPILEOPTION_USED('1313231719')));
SELECT * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)/(((rt0.c2)=(rt0.c0))))  NULLS LAST, (((((rt0.c0))<=((rt0.c0))))==((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)/(((rt0.c2)==(rt0.c0))))  NULLS LAST, (((((rt0.c0))<=((rt0.c0))))==((rt0.c0 IN ()))));
SELECT * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)/(((rt0.c2)=(rt0.c0))))  NULLS LAST, (((((rt0.c0))<=((rt0.c0))))==((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)/(((rt0.c2)==(rt0.c0))))  NULLS LAST, (((((rt0.c0))<=((rt0.c0))))==((rt0.c0 IN ()))));
SELECT * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)/(((rt0.c2)=(rt0.c0))))  NULLS LAST, (((((rt0.c0))<=((rt0.c0))))==((rt0.c0 IN ())));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))<=((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE (NOT (vt0.c0))  WHEN ((1478461281)|(v0.c2)) THEN rt0.c1 COLLATE RTRIM ELSE (v0.c1 IN ()) END WHERE (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))<=((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE (NOT (vt0.c0))  WHEN ((1478461281)|(v0.c2)) THEN rt0.c1 COLLATE RTRIM ELSE (v0.c1 IN ()) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))<=((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE (NOT (vt0.c0))  WHEN ((1478461281)|(v0.c2)) THEN rt0.c1 COLLATE RTRIM ELSE (v0.c1 IN ()) END WHERE (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))<=((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE (NOT (vt0.c0))  WHEN ((1478461281)|(v0.c2)) THEN rt0.c1 COLLATE RTRIM ELSE (v0.c1 IN ()) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))<=((NOT (vt0.c0)))) RIGHT OUTER JOIN v0 ON CASE (NOT (vt0.c0))  WHEN ((1478461281)|(v0.c2)) THEN rt0.c1 COLLATE RTRIM ELSE (v0.c1 IN ()) END WHERE (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ()));
SELECT ALL * FROM v0, vt0 WHERE (v0.c0) ORDER BY (((v0.c0 IN ()))*((+ (v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))*((+ (v0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0) ORDER BY (((v0.c0 IN ()))*((+ (v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))*((+ (v0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (v0.c0) ORDER BY (((v0.c0 IN ()))*((+ (v0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c1)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM WHERE (-1547324672);
SELECT SUM(count) FROM (SELECT ALL ((-1547324672) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c1)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c1)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM WHERE (-1547324672);
SELECT SUM(count) FROM (SELECT ALL ((-1547324672) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((v0.c1)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((v0.c1)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM WHERE (-1547324672);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c1)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c1)>>(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c1)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c1)>>(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c1)>>(v0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (INSTR(CAST(rt0.c1 AS NUMERIC), vt0.c0 COLLATE NOCASE)) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(rt0.c1 AS NUMERIC), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY '' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (INSTR(CAST(rt0.c1 AS NUMERIC), vt0.c0 COLLATE NOCASE)) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(rt0.c1 AS NUMERIC), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY '' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (INSTR(CAST(rt0.c1 AS NUMERIC), vt0.c0 COLLATE NOCASE)) ORDER BY '' DESC  NULLS LAST;
SELECT * FROM vt0, v0, rt0 WHERE ((~ (((rt0.c2)>(v0.c0))))) ORDER BY CASE (((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))  WHEN ((((((((v0.c0)AND(NULL)))AND(v0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN x'1043' WHEN json_extract(rt0.c1, rt0.c1, v0.c0, rt0.c2) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) WHEN CAST(v0.c1 AS INTEGER) THEN ((((((((v0.c2)AND(rt0.c0)))AND(v0.c1)))OR(vt0.c0)))OR(v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)>(v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE (((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))  WHEN ((((((((v0.c0)AND(NULL)))AND(v0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN x'1043' WHEN json_extract(rt0.c1, rt0.c1, v0.c0, rt0.c2) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) WHEN CAST(v0.c1 AS INTEGER) THEN ((((((((v0.c2)AND(rt0.c0)))AND(v0.c1)))OR(vt0.c0)))OR(v0.c2)) END  NULLS FIRST);
SELECT * FROM vt0, v0, rt0 WHERE ((~ (((rt0.c2)>(v0.c0))))) ORDER BY CASE (((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))  WHEN ((((((((v0.c0)AND(NULL)))AND(v0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN x'1043' WHEN json_extract(rt0.c1, rt0.c1, v0.c0, rt0.c2) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) WHEN CAST(v0.c1 AS INTEGER) THEN ((((((((v0.c2)AND(rt0.c0)))AND(v0.c1)))OR(vt0.c0)))OR(v0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)>(v0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE (((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))  WHEN ((((((((v0.c0)AND(NULL)))AND(v0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN x'1043' WHEN json_extract(rt0.c1, rt0.c1, v0.c0, rt0.c2) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) WHEN CAST(v0.c1 AS INTEGER) THEN ((((((((v0.c2)AND(rt0.c0)))AND(v0.c1)))OR(vt0.c0)))OR(v0.c2)) END  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (~ (((v0.c0)>=(v0.c2)))) WHERE (CASE WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (+ (rt0.c2)) THEN (+ (rt0.c1)) WHEN (rt0.c0 IN ()) THEN ((NULL) NOT NULL) END) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c1, v0.c0, rt0.c2)) AND ((v0.c2, x'', rt0.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (+ (rt0.c2)) THEN (+ (rt0.c1)) WHEN (rt0.c0 IN ()) THEN ((NULL) NOT NULL) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (~ (((v0.c0)>=(v0.c2)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c1, v0.c0, rt0.c2)) AND ((v0.c2, x'', rt0.c1))) COLLATE NOCASE);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (~ (((v0.c0)>=(v0.c2)))) WHERE (CASE WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (+ (rt0.c2)) THEN (+ (rt0.c1)) WHEN (rt0.c0 IN ()) THEN ((NULL) NOT NULL) END) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c1, v0.c0, rt0.c2)) AND ((v0.c2, x'', rt0.c1))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (+ (rt0.c2)) THEN (+ (rt0.c1)) WHEN (rt0.c0 IN ()) THEN ((NULL) NOT NULL) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (~ (((v0.c0)>=(v0.c2)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c1, v0.c0, rt0.c2)) AND ((v0.c2, x'', rt0.c1))) COLLATE NOCASE);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON (~ (((v0.c0)>=(v0.c2)))) WHERE (CASE WHEN rt0.c1 THEN v0.c0 COLLATE NOCASE WHEN (+ (rt0.c2)) THEN (+ (rt0.c1)) WHEN (rt0.c0 IN ()) THEN ((NULL) NOT NULL) END) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((v0.c1, v0.c0, rt0.c2)) AND ((v0.c2, x'', rt0.c1))) COLLATE NOCASE;
SELECT COUNT(*) FROM v0 WHERE ((CAST(v0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((CAST(v0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((CAST(v0.c1 AS INTEGER) IN ()));
SELECT ALL * FROM vt0, v0, rt0 WHERE (load_extension((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), x''));
SELECT SUM(count) FROM (SELECT ((load_extension((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), x'')) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (load_extension((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), x''));
SELECT SUM(count) FROM (SELECT ((load_extension((((v0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), x'')) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM rt0, vt0 WHERE (((140582419) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((140582419) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((140582419) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((140582419) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((140582419) NOTNULL));
SELECT * FROM vt0 WHERE (((((((((NULL)AND(json_array_length('SJ'))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(TOTAL_CHANGES())))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0, CAST((((vt0.c0))>=((vt0.c0))) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(json_array_length('SJ'))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(TOTAL_CHANGES())))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, CAST((((vt0.c0))>=((vt0.c0))) AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((NULL)AND(json_array_length('SJ'))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(TOTAL_CHANGES())))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0, CAST((((vt0.c0))>=((vt0.c0))) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(json_array_length('SJ'))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(TOTAL_CHANGES())))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, CAST((((vt0.c0))>=((vt0.c0))) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c0 COLLATE BINARY)) WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY (((((((x'')) BETWEEN (('910800391')) AND ((v0.c1))))OR(((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))))OR((- (vt0.c0)))) ASC, ((vt0.c0 COLLATE BINARY)<<('~')) ASC, HEX((v0.c2 IN ())) ASC, ((((((((((v0.c1)OR(v0.c2)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (((v0.c1)=(v0.c1))) AND (((((v0.c2)OR(v0.c1)))OR(v0.c2)))), (((v0.c2 IN ())) NOT BETWEEN ((v0.c0 IN ())) AND (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c0 COLLATE BINARY)) ORDER BY (((((((x'')) BETWEEN (('910800391')) AND ((v0.c1))))OR(((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))))OR((- (vt0.c0)))) ASC, ((vt0.c0 COLLATE BINARY)<<('~')) ASC, HEX((v0.c2 IN ())) ASC, ((((((((((v0.c1)OR(v0.c2)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (((v0.c1)==(v0.c1))) AND (((((v0.c2)OR(v0.c1)))OR(v0.c2)))), (((v0.c2 IN ())) NOT BETWEEN ((v0.c0 IN ())) AND (NULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c0 COLLATE BINARY)) WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY (((((((x'')) BETWEEN (('910800391')) AND ((v0.c1))))OR(((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))))OR((- (vt0.c0)))) ASC, ((vt0.c0 COLLATE BINARY)<<('~')) ASC, HEX((v0.c2 IN ())) ASC, ((((((((((v0.c1)OR(v0.c2)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (((v0.c1)=(v0.c1))) AND (((((v0.c2)OR(v0.c1)))OR(v0.c2)))), (((v0.c2 IN ())) NOT BETWEEN ((v0.c0 IN ())) AND (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c0 COLLATE BINARY)) ORDER BY (((((((x'')) BETWEEN (('910800391')) AND ((v0.c1))))OR(((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))))OR((- (vt0.c0)))) ASC, ((vt0.c0 COLLATE BINARY)<<('~')) ASC, HEX((v0.c2 IN ())) ASC, ((((((((((v0.c1)OR(v0.c2)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (((v0.c1)==(v0.c1))) AND (((((v0.c2)OR(v0.c1)))OR(v0.c2)))), (((v0.c2 IN ())) NOT BETWEEN ((v0.c0 IN ())) AND (NULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c0 COLLATE BINARY)) WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY (((((((x'')) BETWEEN (('910800391')) AND ((v0.c1))))OR(((v0.c0) BETWEEN (v0.c1) AND (v0.c0)))))OR((- (vt0.c0)))) ASC, ((vt0.c0 COLLATE BINARY)<<('~')) ASC, HEX((v0.c2 IN ())) ASC, ((((((((((v0.c1)OR(v0.c2)))OR(v0.c2)))OR(v0.c0)))OR(v0.c0))) NOT BETWEEN (((v0.c1)=(v0.c1))) AND (((((v0.c2)OR(v0.c1)))OR(v0.c2)))), (((v0.c2 IN ())) NOT BETWEEN ((v0.c0 IN ())) AND (NULL)) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS TEXT) WHERE (CASE (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, v0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, v0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN (((rt0.c0))==((x''))) END) ORDER BY CASE (rt0.c0 IN (rt0.c1))  WHEN v0.c2 THEN CAST(v0.c2 AS REAL) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, v0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, v0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN (((rt0.c0))=((x''))) END) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS TEXT) ORDER BY CASE (rt0.c0 IN (rt0.c1))  WHEN v0.c2 THEN CAST(v0.c2 AS REAL) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS TEXT) WHERE (CASE (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, v0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, v0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN (((rt0.c0))==((x''))) END) ORDER BY CASE (rt0.c0 IN (rt0.c1))  WHEN v0.c2 THEN CAST(v0.c2 AS REAL) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, v0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, v0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN (((rt0.c0))=((x''))) END) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS TEXT) ORDER BY CASE (rt0.c0 IN (rt0.c1))  WHEN v0.c2 THEN CAST(v0.c2 AS REAL) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON CAST((vt0.c0 IN ()) AS TEXT) WHERE (CASE (((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, v0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, v0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) THEN (((rt0.c0))==((x''))) END) ORDER BY CASE (rt0.c0 IN (rt0.c1))  WHEN v0.c2 THEN CAST(v0.c2 AS REAL) ELSE v0.c1 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE 0.19617821311618522  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND (((rt0.c1)<(v0.c1)))) LEFT OUTER JOIN vt0 ON (((v0.c0 COLLATE BINARY))>((UPPER(DISTINCT '-898359132')))) WHERE (((((((((CAST(rt0.c0 AS TEXT))AND((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0))!=((v0.c1))))))AND(((rt0.c1)%(v0.c2)))))AND(LIKELIHOOD(DISTINCT v0.c1, 0.7709265070682757))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS TEXT))AND((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0))!=((v0.c1))))))AND(((rt0.c1)%(v0.c2)))))AND(LIKELIHOOD(DISTINCT v0.c1, 0.7709265070682757)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE 0.19617821311618522  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND (((rt0.c1)<(v0.c1)))) LEFT OUTER JOIN vt0 ON (((v0.c0 COLLATE BINARY))>((UPPER(DISTINCT '-898359132')))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE 0.19617821311618522  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND (((rt0.c1)<(v0.c1)))) LEFT OUTER JOIN vt0 ON (((v0.c0 COLLATE BINARY))>((UPPER(DISTINCT '-898359132')))) WHERE (((((((((CAST(rt0.c0 AS TEXT))AND((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0))!=((v0.c1))))))AND(((rt0.c1)%(v0.c2)))))AND(LIKELIHOOD(DISTINCT v0.c1, 0.7709265070682757))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c0 AS TEXT))AND((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0))!=((v0.c1))))))AND(((rt0.c1)%(v0.c2)))))AND(LIKELIHOOD(DISTINCT v0.c1, 0.7709265070682757)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE 0.19617821311618522  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND (((rt0.c1)<(v0.c1)))) LEFT OUTER JOIN vt0 ON (((v0.c0 COLLATE BINARY))>((UPPER(DISTINCT '-898359132')))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE 0.19617821311618522  WHEN v0.c2 THEN rt0.c1 ELSE rt0.c1 END) AND (((rt0.c1)<(v0.c1)))) LEFT OUTER JOIN vt0 ON (((v0.c0 COLLATE BINARY))>((UPPER(DISTINCT '-898359132')))) WHERE (((((((((CAST(rt0.c0 AS TEXT))AND((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0))!=((v0.c1))))))AND(((rt0.c1)%(v0.c2)))))AND(LIKELIHOOD(DISTINCT v0.c1, 0.7709265070682757))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((0.5095955619499971, '-1055075300', rt0.c1))>=((rt0.c2, v0.c0, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((0.5095955619499971, '-1055075300', rt0.c1))>=((rt0.c2, v0.c0, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((0.5095955619499971, '-1055075300', rt0.c1))>=((rt0.c2, v0.c0, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((0.5095955619499971, '-1055075300', rt0.c1))>=((rt0.c2, v0.c0, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((((0.5095955619499971, '-1055075300', rt0.c1))>=((rt0.c2, v0.c0, rt0.c0))) IN ()));
SELECT * FROM vt0 WHERE (((x'')<(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((x'')<(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')<(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((x'')<(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')<(((vt0.c0) NOT NULL))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (((v0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOT NULL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((v0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOT NULL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((v0.c2) NOT NULL));
SELECT * FROM v0, vt0, rt0 WHERE (((((v0.c1)) BETWEEN (('︦\n ᝽ ')) AND ((NULL))) IN (v0.c0, ((v0.c1) NOTNULL)))) ORDER BY (((NULL)IS(rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)) BETWEEN (('︦\n ᝽ ')) AND ((NULL))) IN (v0.c0, ((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((NULL)IS(rt0.c2)) IN ()) ASC);
SELECT * FROM v0, vt0, rt0 WHERE (((((v0.c1)) BETWEEN (('︦\n ᝽ ')) AND ((NULL))) IN (v0.c0, ((v0.c1) NOTNULL)))) ORDER BY (((NULL)IS(rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)) BETWEEN (('︦\n ᝽ ')) AND ((NULL))) IN (v0.c0, ((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((NULL)IS(rt0.c2)) IN ()) ASC);
SELECT * FROM v0, vt0, rt0 WHERE (((((v0.c1)) BETWEEN (('︦\n ᝽ ')) AND ((NULL))) IN (v0.c0, ((v0.c1) NOTNULL)))) ORDER BY (((NULL)IS(rt0.c2)) IN ()) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)IS NOT(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY ((((rt0.c0) IS TRUE))|(((rt0.c0)GLOB(rt0.c1))))  NULLS LAST, ((((rt0.c0 IN ()), ((rt0.c1)<>(rt0.c2)), CAST(rt0.c0 AS TEXT)))>((CASE WHEN rt0.c1 THEN x'' END, ((0.9438693051078234) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE))|(((rt0.c0)GLOB(rt0.c1))))  NULLS LAST, ((((rt0.c0 IN ()), ((rt0.c1)<>(rt0.c2)), CAST(rt0.c0 AS TEXT)))>((CASE WHEN rt0.c1 THEN x'' END, ((0.9438693051078234) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN (rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)IS NOT(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY ((((rt0.c0) IS TRUE))|(((rt0.c0)GLOB(rt0.c1))))  NULLS LAST, ((((rt0.c0 IN ()), ((rt0.c1)<>(rt0.c2)), CAST(rt0.c0 AS TEXT)))>((CASE WHEN rt0.c1 THEN x'' END, ((0.9438693051078234) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE))|(((rt0.c0)GLOB(rt0.c1))))  NULLS LAST, ((((rt0.c0 IN ()), ((rt0.c1)<>(rt0.c2)), CAST(rt0.c0 AS TEXT)))>((CASE WHEN rt0.c1 THEN x'' END, ((0.9438693051078234) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN (rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)IS NOT(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY ((((rt0.c0) IS TRUE))|(((rt0.c0)GLOB(rt0.c1))))  NULLS LAST, ((((rt0.c0 IN ()), ((rt0.c1)<>(rt0.c2)), CAST(rt0.c0 AS TEXT)))>((CASE WHEN rt0.c1 THEN x'' END, ((0.9438693051078234) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN (rt0.c1))))) DESC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt0 ON (((v0.c0 IN ()))*(((v0.c1)!=(NULL)))) WHERE (((CAST(v0.c2 AS TEXT))GLOB(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((((rt0.c0)<<(rt0.c0)))OR(((v0.c1) NOTNULL))))OR(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS TEXT))GLOB(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt0 ON (((v0.c0 IN ()))*(((v0.c1)!=(NULL)))) ORDER BY ((((((rt0.c0)<<(rt0.c0)))OR(((v0.c1) NOTNULL))))OR(x'')) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt0 ON (((v0.c0 IN ()))*(((v0.c1)!=(NULL)))) WHERE (((CAST(v0.c2 AS TEXT))GLOB(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((((rt0.c0)<<(rt0.c0)))OR(((v0.c1) NOTNULL))))OR(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS TEXT))GLOB(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt0 ON (((v0.c0 IN ()))*(((v0.c1)!=(NULL)))) ORDER BY ((((((rt0.c0)<<(rt0.c0)))OR(((v0.c1) NOTNULL))))OR(x'')) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON rt0.c2 RIGHT OUTER JOIN vt0 ON (((v0.c0 IN ()))*(((v0.c1)!=(NULL)))) WHERE (((CAST(v0.c2 AS TEXT))GLOB(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((((rt0.c0)<<(rt0.c0)))OR(((v0.c1) NOTNULL))))OR(x'')) DESC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))LIKE(((v0.c2) IS TRUE)))) ORDER BY ((LIKE(v0.c1, v0.c1, '-'))%((- (v0.c1))))  NULLS FIRST, TRIM(DISTINCT ((NULL) BETWEEN (v0.c0) AND (v0.c1))) DESC, v0.c2 COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))LIKE(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((LIKE(v0.c1, v0.c1, '-'))%((- (v0.c1))))  NULLS FIRST, TRIM(DISTINCT ((NULL) BETWEEN (v0.c0) AND (v0.c1))) DESC, v0.c2 COLLATE RTRIM COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))LIKE(((v0.c2) IS TRUE)))) ORDER BY ((LIKE(v0.c1, v0.c1, '-'))%((- (v0.c1))))  NULLS FIRST, TRIM(DISTINCT ((NULL) BETWEEN (v0.c0) AND (v0.c1))) DESC, v0.c2 COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))LIKE(((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((LIKE(v0.c1, v0.c1, '-'))%((- (v0.c1))))  NULLS FIRST, TRIM(DISTINCT ((NULL) BETWEEN (v0.c0) AND (v0.c1))) DESC, v0.c2 COLLATE RTRIM COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))LIKE(((v0.c2) IS TRUE)))) ORDER BY ((LIKE(v0.c1, v0.c1, '-'))%((- (v0.c1))))  NULLS FIRST, TRIM(DISTINCT ((NULL) BETWEEN (v0.c0) AND (v0.c1))) DESC, v0.c2 COLLATE RTRIM COLLATE BINARY DESC;
SELECT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON INSTR(vt0.c0, vt0.c0) COLLATE NOCASE WHERE (((((((((((v0.c2)AND(v0.c2)))OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))-(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)AND(v0.c2)))OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))-(v0.c2))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON INSTR(vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON INSTR(vt0.c0, vt0.c0) COLLATE NOCASE WHERE (((((((((((v0.c2)AND(v0.c2)))OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))-(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)AND(v0.c2)))OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))-(v0.c2))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON INSTR(vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON INSTR(vt0.c0, vt0.c0) COLLATE NOCASE WHERE (((((((((((v0.c2)AND(v0.c2)))OR(v0.c2)))AND(rt0.c0)))AND(rt0.c0)))-(v0.c2)));
SELECT * FROM vt0, v0 WHERE (TRIM(((vt0.c0) IS FALSE))) ORDER BY (((((v0.c0 IN ()))OR(((vt0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN ' >q' ELSE v0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0 IN ()))OR(((vt0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN ' >q' ELSE v0.c1 END)) ASC);
SELECT * FROM vt0, v0 WHERE (TRIM(((vt0.c0) IS FALSE))) ORDER BY (((((v0.c0 IN ()))OR(((vt0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN ' >q' ELSE v0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0 IN ()))OR(((vt0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN ' >q' ELSE v0.c1 END)) ASC);
SELECT * FROM vt0, v0 WHERE (TRIM(((vt0.c0) IS FALSE))) ORDER BY (((((v0.c0 IN ()))OR(((vt0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN ' >q' ELSE v0.c1 END)) ASC;
SELECT ALL * FROM rt0, v0 WHERE ((((((((((((((((((rt0.c2 IN ()))OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN 0.3543609477909041 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE v0.c1  WHEN rt0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c2 END)))OR(((((v0.c0)AND(v0.c2)))AND(rt0.c0)))))OR(v0.c2 COLLATE NOCASE)))OR(CASE rt0.c2  WHEN '0.3350627267769698' THEN v0.c0 END)))AND((((rt0.c0))>((NULL))))))OR(7.14732536E8 COLLATE BINARY)))AND(((rt0.c2)-(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((((rt0.c2 IN ()))OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN 0.3543609477909041 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE v0.c1  WHEN rt0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c2 END)))OR(((((v0.c0)AND(v0.c2)))AND(rt0.c0)))))OR(v0.c2 COLLATE NOCASE)))OR(CASE rt0.c2  WHEN '0.3350627267769698' THEN v0.c0 END)))AND((((rt0.c0))>((NULL))))))OR(7.14732536E8 COLLATE BINARY)))AND(((rt0.c2)-(v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((((((((((((((rt0.c2 IN ()))OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN 0.3543609477909041 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE v0.c1  WHEN rt0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c2 END)))OR(((((v0.c0)AND(v0.c2)))AND(rt0.c0)))))OR(v0.c2 COLLATE NOCASE)))OR(CASE rt0.c2  WHEN '0.3350627267769698' THEN v0.c0 END)))AND((((rt0.c0))>((NULL))))))OR(7.14732536E8 COLLATE BINARY)))AND(((rt0.c2)-(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((((rt0.c2 IN ()))OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN 0.3543609477909041 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE v0.c1  WHEN rt0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c2 END)))OR(((((v0.c0)AND(v0.c2)))AND(rt0.c0)))))OR(v0.c2 COLLATE NOCASE)))OR(CASE rt0.c2  WHEN '0.3350627267769698' THEN v0.c0 END)))AND((((rt0.c0))>((NULL))))))OR(7.14732536E8 COLLATE BINARY)))AND(((rt0.c2)-(v0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((((((((((((((rt0.c2 IN ()))OR(CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN 0.3543609477909041 THEN rt0.c1 ELSE rt0.c1 END)))OR(CASE v0.c1  WHEN rt0.c0 THEN v0.c2 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c2 END)))OR(((((v0.c0)AND(v0.c2)))AND(rt0.c0)))))OR(v0.c2 COLLATE NOCASE)))OR(CASE rt0.c2  WHEN '0.3350627267769698' THEN v0.c0 END)))AND((((rt0.c0))>((NULL))))))OR(7.14732536E8 COLLATE BINARY)))AND(((rt0.c2)-(v0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN ())))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN ())))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN ())))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) DESC;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (v0.c0)))) WHERE (CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (v0.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (v0.c0)))) WHERE (CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (v0.c0)))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON (- (((v0.c0) BETWEEN (v0.c2) AND (v0.c0)))) WHERE (CAST((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))) AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c1 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c1 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c1 AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN ((((vt0.c0))==(('CX<[uXw')))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN ((((vt0.c0))==(('CX<[uXw')))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN ((((vt0.c0))==(('CX<[uXw')))) AND (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN ((((vt0.c0))==(('CX<[uXw')))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN ((((vt0.c0))==(('CX<[uXw')))) AND (CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c0)LIKE(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c0)LIKE(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((vt0.c0)LIKE(rt0.c1)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE BINARY)));
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB)) ORDER BY CASE (((v0.c2))<>((v0.c1)))  WHEN COALESCE(v0.c1, v0.c2) THEN LIKELIHOOD(v0.c0, 0.22984349371828416) WHEN ((v0.c0)!=(v0.c0)) THEN (v0.c0 IN ()) WHEN v0.c0 THEN LIKELIHOOD(DISTINCT v0.c2, 0.6121897902115035) ELSE ((v0.c2) ISNULL) END, ((v0.c1) ISNULL) COLLATE NOCASE  NULLS FIRST, (('') NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((v0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c2))!=((v0.c1)))  WHEN COALESCE(v0.c1, v0.c2) THEN LIKELIHOOD(v0.c0, 0.22984349371828416) WHEN ((v0.c0)<>(v0.c0)) THEN (v0.c0 IN ()) WHEN v0.c0 THEN LIKELIHOOD(DISTINCT v0.c2, 0.6121897902115035) ELSE ((v0.c2) ISNULL) END, ((v0.c1) ISNULL) COLLATE NOCASE  NULLS FIRST, (('') NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((v0.c2 IN ()))));
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB)) ORDER BY CASE (((v0.c2))<>((v0.c1)))  WHEN COALESCE(v0.c1, v0.c2) THEN LIKELIHOOD(v0.c0, 0.22984349371828416) WHEN ((v0.c0)!=(v0.c0)) THEN (v0.c0 IN ()) WHEN v0.c0 THEN LIKELIHOOD(DISTINCT v0.c2, 0.6121897902115035) ELSE ((v0.c2) ISNULL) END, ((v0.c1) ISNULL) COLLATE NOCASE  NULLS FIRST, (('') NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((v0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c2))!=((v0.c1)))  WHEN COALESCE(v0.c1, v0.c2) THEN LIKELIHOOD(v0.c0, 0.22984349371828416) WHEN ((v0.c0)<>(v0.c0)) THEN (v0.c0 IN ()) WHEN v0.c0 THEN LIKELIHOOD(DISTINCT v0.c2, 0.6121897902115035) ELSE ((v0.c2) ISNULL) END, ((v0.c1) ISNULL) COLLATE NOCASE  NULLS FIRST, (('') NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((v0.c2 IN ()))));
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS BLOB)) ORDER BY CASE (((v0.c2))<>((v0.c1)))  WHEN COALESCE(v0.c1, v0.c2) THEN LIKELIHOOD(v0.c0, 0.22984349371828416) WHEN ((v0.c0)!=(v0.c0)) THEN (v0.c0 IN ()) WHEN v0.c0 THEN LIKELIHOOD(DISTINCT v0.c2, 0.6121897902115035) ELSE ((v0.c2) ISNULL) END, ((v0.c1) ISNULL) COLLATE NOCASE  NULLS FIRST, (('') NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((v0.c2 IN ())));
SELECT ALL * FROM vt0 WHERE (CAST(x'c6205f35' AS NUMERIC)) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'c6205f35' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM vt0 WHERE (CAST(x'c6205f35' AS NUMERIC)) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'c6205f35' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM vt0 WHERE (CAST(x'c6205f35' AS NUMERIC)) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON json_array_length(((rt0.c1) NOTNULL)) WHERE (((((- (rt0.c0))))<(((~ (rt0.c1)))))) ORDER BY ((CAST(rt0.c0 AS REAL))||((- (vt0.c0)))) DESC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c0))))<(((~ (rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON json_array_length(((rt0.c1) NOTNULL)) ORDER BY ((CAST(rt0.c0 AS REAL))||((- (vt0.c0)))) DESC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON json_array_length(((rt0.c1) NOTNULL)) WHERE (((((- (rt0.c0))))<(((~ (rt0.c1)))))) ORDER BY ((CAST(rt0.c0 AS REAL))||((- (vt0.c0)))) DESC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c0))))<(((~ (rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON json_array_length(((rt0.c1) NOTNULL)) ORDER BY ((CAST(rt0.c0 AS REAL))||((- (vt0.c0)))) DESC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON json_array_length(((rt0.c1) NOTNULL)) WHERE (((((- (rt0.c0))))<(((~ (rt0.c1)))))) ORDER BY ((CAST(rt0.c0 AS REAL))||((- (vt0.c0)))) DESC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(rt0.c2 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)||(((v0.c0)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)||(((v0.c0)|(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)||(((v0.c0)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)||(((v0.c0)|(v0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)||(((v0.c0)|(v0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)<(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (-609655110 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((-609655110 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (-609655110 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((-609655110 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (-609655110 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c1, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, 0.35337889162626845, vt0.c0, 0xffffffff8dd5b7c0)))) AND (((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c1, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, 0.35337889162626845, vt0.c0, 0xffffffff8dd5b7c0)))) AND (((((rt0.c1)AND(rt0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c1, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, 0.35337889162626845, vt0.c0, 0xffffffff8dd5b7c0)))) AND (((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c1, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, 0.35337889162626845, vt0.c0, 0xffffffff8dd5b7c0)))) AND (((((rt0.c1)AND(rt0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c1, vt0.c0, v0.c0))>=((v0.c0, vt0.c0, 0.35337889162626845, vt0.c0, 0xffffffff8dd5b7c0)))) AND (((((rt0.c1)AND(rt0.c2)))AND(v0.c0)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON LIKE(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)), CASE v0.c2  WHEN rt0.c2 THEN v0.c1 END) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END) ISNULL) WHERE (((((((v0.c0)OR(vt0.c0)))OR(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON LIKE(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)), CASE v0.c2  WHEN rt0.c2 THEN v0.c1 END) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON LIKE(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)), CASE v0.c2  WHEN rt0.c2 THEN v0.c1 END) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END) ISNULL) WHERE (((((((v0.c0)OR(vt0.c0)))OR(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(vt0.c0)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON LIKE(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)), CASE v0.c2  WHEN rt0.c2 THEN v0.c1 END) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON LIKE(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)), CASE v0.c2  WHEN rt0.c2 THEN v0.c1 END) FULL OUTER JOIN vt0 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 END) ISNULL) WHERE (((((((v0.c0)OR(vt0.c0)))OR(rt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY (~ ((NOT (rt0.c0)))), json_array_length(((rt0.c0)=(rt0.c1)), (((x'c0f8', rt0.c2, 672853669))<((rt0.c2, rt0.c0, rt0.c2)))) DESC, (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))<((((rt0.c2)OR(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (~ ((NOT (rt0.c0)))), json_array_length(((rt0.c0)==(rt0.c1)), (((x'c0f8', rt0.c2, 672853669))<((rt0.c2, rt0.c0, rt0.c2)))) DESC, (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))<((((rt0.c2)OR(rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY (~ ((NOT (rt0.c0)))), json_array_length(((rt0.c0)=(rt0.c1)), (((x'c0f8', rt0.c2, 672853669))<((rt0.c2, rt0.c0, rt0.c2)))) DESC, (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))<((((rt0.c2)OR(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (~ ((NOT (rt0.c0)))), json_array_length(((rt0.c0)==(rt0.c1)), (((x'c0f8', rt0.c2, 672853669))<((rt0.c2, rt0.c0, rt0.c2)))) DESC, (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))))<((((rt0.c2)OR(rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ('-398960213');
SELECT SUM(count) FROM (SELECT ALL (('-398960213') IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ('-398960213');
SELECT SUM(count) FROM (SELECT ALL (('-398960213') IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ('-398960213');
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT * FROM v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c1))%(6.16345807E8))) ORDER BY (((((v0.c1, x'', v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((NULL, '', v0.c1))))<((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(v0.c1))%(6.16345807E8))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1, x'', v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((NULL, '', v0.c1))))<((v0.c0 IN ()))) ASC);
SELECT * FROM v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c1))%(6.16345807E8))) ORDER BY (((((v0.c1, x'', v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((NULL, '', v0.c1))))<((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(v0.c1))%(6.16345807E8))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1, x'', v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((NULL, '', v0.c1))))<((v0.c0 IN ()))) ASC);
SELECT * FROM v0 WHERE (((SQLITE_COMPILEOPTION_USED(v0.c1))%(6.16345807E8))) ORDER BY (((((v0.c1, x'', v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((NULL, '', v0.c1))))<((v0.c0 IN ()))) ASC;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON 0Xfffffffff45de971 WHERE (((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))AND(((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))AND(((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))))OR(v0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON 0xfffffffff45de971);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON 0Xfffffffff45de971 WHERE (((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))AND(((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))AND(((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))))OR(v0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON 0xfffffffff45de971);
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((('876715321', rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((931063520, rt0.c2, rt0.c0)))) BETWEEN (((v0.c1)AND(rt0.c1))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))) WHERE ((((((((('128328634')AND(((v0.c2) NOT NULL))))AND((v0.c0 IN (rt0.c2, rt0.c1)))))OR(NULL COLLATE RTRIM)))AND(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('128328634')AND(((v0.c2) NOT NULL))))AND((v0.c0 IN (rt0.c2, rt0.c1)))))OR(NULL COLLATE RTRIM)))AND(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((('876715321', rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((931063520, rt0.c2, rt0.c0)))) BETWEEN (((v0.c1)AND(rt0.c1))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((('876715321', rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((931063520, rt0.c2, rt0.c0)))) BETWEEN (((v0.c1)AND(rt0.c1))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))) WHERE ((((((((('128328634')AND(((v0.c2) NOT NULL))))AND((v0.c0 IN (rt0.c2, rt0.c1)))))OR(NULL COLLATE RTRIM)))AND(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('128328634')AND(((v0.c2) NOT NULL))))AND((v0.c0 IN (rt0.c2, rt0.c1)))))OR(NULL COLLATE RTRIM)))AND(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((((('876715321', rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((931063520, rt0.c2, rt0.c0)))) BETWEEN (((v0.c1)AND(rt0.c1))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON ((((('876715321', rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((931063520, rt0.c2, rt0.c0)))) BETWEEN (((v0.c1)AND(rt0.c1))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))) WHERE ((((((((('128328634')AND(((v0.c2) NOT NULL))))AND((v0.c0 IN (rt0.c2, rt0.c1)))))OR(NULL COLLATE RTRIM)))AND(CAST(rt0.c0 AS INTEGER))));
SELECT ALL * FROM rt0, v0 WHERE (((v0.c2 COLLATE NOCASE)IS(rt0.c0 COLLATE BINARY))) ORDER BY ((LIKELY(DISTINCT rt0.c0)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)IS(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY ((LIKELY(DISTINCT rt0.c0)) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c2 COLLATE NOCASE)IS(rt0.c0 COLLATE BINARY))) ORDER BY ((LIKELY(DISTINCT rt0.c0)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)IS(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY ((LIKELY(DISTINCT rt0.c0)) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((v0.c2 COLLATE NOCASE)IS(rt0.c0 COLLATE BINARY))) ORDER BY ((LIKELY(DISTINCT rt0.c0)) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CAST(0.5657231463084545 AS TEXT) COLLATE NOCASE COLLATE BINARY WHERE (((((((vt0.c0) NOT NULL))OR(((x'7c97') IS TRUE))))OR((((0x49466326)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(((x'7c97') IS TRUE))))OR((((0X49466326)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CAST(0.5657231463084545 AS TEXT) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CAST(0.5657231463084545 AS TEXT) COLLATE NOCASE COLLATE BINARY WHERE (((((((vt0.c0) NOT NULL))OR(((x'7c97') IS TRUE))))OR((((0x49466326)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(((x'7c97') IS TRUE))))OR((((0X49466326)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CAST(0.5657231463084545 AS TEXT) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON CAST(0.5657231463084545 AS TEXT) COLLATE NOCASE COLLATE BINARY WHERE (((((((vt0.c0) NOT NULL))OR(((x'7c97') IS TRUE))))OR((((0x49466326)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CASE WHEN x'' THEN v0.c2 END) BETWEEN (TYPEOF(v0.c1)) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c0))))) ORDER BY CASE WHEN 0.1469246086151308 THEN rt0.c1 ELSE RTRIM(rt0.c0) END ASC  NULLS FIRST, (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST, ' w' ASC  NULLS LAST, TRIM(DISTINCT '212714076', ((v0.c2)&(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN v0.c2 END) BETWEEN (TYPEOF(v0.c1)) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN 0.1469246086151308 THEN rt0.c1 ELSE RTRIM(rt0.c0) END ASC  NULLS FIRST, (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST, ' w' ASC  NULLS LAST, TRIM(DISTINCT '212714076', ((v0.c2)&(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CASE WHEN x'' THEN v0.c2 END) BETWEEN (TYPEOF(v0.c1)) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c0))))) ORDER BY CASE WHEN 0.1469246086151308 THEN rt0.c1 ELSE RTRIM(rt0.c0) END ASC  NULLS FIRST, (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST, ' w' ASC  NULLS LAST, TRIM(DISTINCT '212714076', ((v0.c2)&(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN v0.c2 END) BETWEEN (TYPEOF(v0.c1)) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN 0.1469246086151308 THEN rt0.c1 ELSE RTRIM(rt0.c0) END ASC  NULLS FIRST, (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST, ' w' ASC  NULLS LAST, TRIM(DISTINCT '212714076', ((v0.c2)&(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((CASE WHEN x'' THEN v0.c2 END) BETWEEN (TYPEOF(v0.c1)) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c0))))) ORDER BY CASE WHEN 0.1469246086151308 THEN rt0.c1 ELSE RTRIM(rt0.c0) END ASC  NULLS FIRST, (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST, ' w' ASC  NULLS LAST, TRIM(DISTINCT '212714076', ((v0.c2)&(v0.c0))) DESC;
SELECT * FROM v0, vt0, rt0 WHERE (((CASE x''  WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c1, 0.7566945230571)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c1, 0.7566945230571)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((CASE x''  WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c1, 0.7566945230571)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c1, 0.7566945230571)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((CASE x''  WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c1, 0.7566945230571)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((0.6157967735118981, vt0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))<=(((vt0.c0 IN (vt0.c0)), ((vt0.c0)+(x'3b7c')), ((((v0.c0)OR(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.6157967735118981, vt0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))<=(((vt0.c0 IN (vt0.c0)), ((vt0.c0)+(x'3b7c')), ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((0.6157967735118981, vt0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))<=(((vt0.c0 IN (vt0.c0)), ((vt0.c0)+(x'3b7c')), ((((v0.c0)OR(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.6157967735118981, vt0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))<=(((vt0.c0 IN (vt0.c0)), ((vt0.c0)+(x'3b7c')), ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((0.6157967735118981, vt0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))<=(((vt0.c0 IN (vt0.c0)), ((vt0.c0)+(x'3b7c')), ((((v0.c0)OR(rt0.c1)))OR(rt0.c0))))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1) ISNULL)) NOTNULL)) ORDER BY (((('0.5568197254585902')AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c2)))))AND((~ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((('0.5568197254585902')AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c2)))))AND((~ (rt0.c1)))) DESC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1) ISNULL)) NOTNULL)) ORDER BY (((('0.5568197254585902')AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c2)))))AND((~ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((('0.5568197254585902')AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c2)))))AND((~ (rt0.c1)))) DESC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1) ISNULL)) NOTNULL)) ORDER BY (((('0.5568197254585902')AND(((((rt0.c1)AND(vt0.c0)))OR(rt0.c2)))))AND((~ (rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c1 COLLATE RTRIM, ((((v0.c2)OR(v0.c0)))AND(v0.c0)), ((((((((((((rt0.c2)AND(rt0.c0)))OR('-425269579')))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), v0.c2 COLLATE RTRIM))=((((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))OR(v0.c0)))AND(rt0.c0)), (NOT (v0.c1)), (- (rt0.c1)), ((v0.c2) NOT NULL), (rt0.c0 IN ()))))) ORDER BY (((rt0.c0)IS NOT(v0.c1)) IN (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 COLLATE RTRIM, ((((v0.c2)OR(v0.c0)))AND(v0.c0)), ((((((((((((rt0.c2)AND(rt0.c0)))OR('-425269579')))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), v0.c2 COLLATE RTRIM))=((((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))OR(v0.c0)))AND(rt0.c0)), (NOT (v0.c1)), (- (rt0.c1)), ((v0.c2) NOT NULL), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0)IS NOT(v0.c1)) IN (rt0.c2)) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c1 COLLATE RTRIM, ((((v0.c2)OR(v0.c0)))AND(v0.c0)), ((((((((((((rt0.c2)AND(rt0.c0)))OR('-425269579')))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), v0.c2 COLLATE RTRIM))=((((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))OR(v0.c0)))AND(rt0.c0)), (NOT (v0.c1)), (- (rt0.c1)), ((v0.c2) NOT NULL), (rt0.c0 IN ()))))) ORDER BY (((rt0.c0)IS NOT(v0.c1)) IN (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 COLLATE RTRIM, ((((v0.c2)OR(v0.c0)))AND(v0.c0)), ((((((((((((rt0.c2)AND(rt0.c0)))OR('-425269579')))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), v0.c2 COLLATE RTRIM))=((((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))OR(v0.c0)))AND(rt0.c0)), (NOT (v0.c1)), (- (rt0.c1)), ((v0.c2) NOT NULL), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0)IS NOT(v0.c1)) IN (rt0.c2)) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c1 COLLATE RTRIM, ((((v0.c2)OR(v0.c0)))AND(v0.c0)), ((((((((((((rt0.c2)AND(rt0.c0)))OR('-425269579')))OR(v0.c0)))OR(v0.c1)))AND(rt0.c2)))AND(rt0.c1)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), v0.c2 COLLATE RTRIM))=((((((((((rt0.c2)OR(rt0.c2)))AND(v0.c1)))OR(v0.c0)))AND(rt0.c0)), (NOT (v0.c1)), (- (rt0.c1)), ((v0.c2) NOT NULL), (rt0.c0 IN ()))))) ORDER BY (((rt0.c0)IS NOT(v0.c1)) IN (rt0.c2)) DESC;
SELECT * FROM rt0, v0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)));
SELECT * FROM rt0, v0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))GLOB(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))GLOB(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))GLOB(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))GLOB(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0);
SELECT * FROM rt0, v0 WHERE (((((rt0.c2) NOT BETWEEN (v0.c1) AND (rt0.c2)))GLOB(rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c0;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((v0.c1)<(v0.c2)) ELSE (v0.c2 IN ()) END) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOTNULL) THEN ((v0.c1)<(v0.c2)) ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c2);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((v0.c1)<(v0.c2)) ELSE (v0.c2 IN ()) END) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOTNULL) THEN ((v0.c1)<(v0.c2)) ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c2);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((v0.c1)<(v0.c2)) ELSE (v0.c2 IN ()) END) ORDER BY v0.c2;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (json_valid(v0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json_valid(v0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (json_valid(v0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((json_valid(v0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (json_valid(v0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)*(rt0.c0))) ISNULL)) ORDER BY ((((v0.c0) ISNULL))IS NOT(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0) ISNULL))IS NOT(rt0.c1)) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)*(rt0.c0))) ISNULL)) ORDER BY ((((v0.c0) ISNULL))IS NOT(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((v0.c0) ISNULL))IS NOT(rt0.c1)) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c2)*(rt0.c0))) ISNULL)) ORDER BY ((((v0.c0) ISNULL))IS NOT(rt0.c1)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c0)))))=((SQLITE_SOURCE_ID())))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))<=((vt0.c0)))))=((SQLITE_SOURCE_ID())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c0)))))=((SQLITE_SOURCE_ID())))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0))<=((vt0.c0)))))=((SQLITE_SOURCE_ID())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0))<=((vt0.c0)))))=((SQLITE_SOURCE_ID())))) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS TRUE))));
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT NULL));
SELECT ALL * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON GLOB(((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c1) WHERE ((- (((rt0.c0)AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)AND(v0.c1))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON GLOB(((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c1));
SELECT ALL * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON GLOB(((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c1) WHERE ((- (((rt0.c0)AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)AND(v0.c1))))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON GLOB(((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c1));
SELECT ALL * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON GLOB(((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c1) WHERE ((- (((rt0.c0)AND(v0.c1)))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c2)||(NULL)))LIKE((v0.c2 IN (v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(NULL)))LIKE((v0.c2 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c2)||(NULL)))LIKE((v0.c2 IN (v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(NULL)))LIKE((v0.c2 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((((rt0.c2)||(NULL)))LIKE((v0.c2 IN (v0.c0, v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (LTRIM(((((v0.c0)AND(v0.c1)))AND(x'7736')))) ORDER BY UPPER(DISTINCT (('N_') ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(((((v0.c0)AND(v0.c1)))AND(x'7736')))) IS TRUE)  as count FROM v0 ORDER BY UPPER(DISTINCT (('N_') ISNULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (LTRIM(((((v0.c0)AND(v0.c1)))AND(x'7736')))) ORDER BY UPPER(DISTINCT (('N_') ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(((((v0.c0)AND(v0.c1)))AND(x'7736')))) IS TRUE)  as count FROM v0 ORDER BY UPPER(DISTINCT (('N_') ISNULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (LTRIM(((((v0.c0)AND(v0.c1)))AND(x'7736')))) ORDER BY UPPER(DISTINCT (('N_') ISNULL))  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE ((rt0.c1 IN ())) ORDER BY LIKELIHOOD(rt0.c0 COLLATE NOCASE, 0.7029002805195228) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY LIKELIHOOD(rt0.c0 COLLATE NOCASE, 0.7029002805195228) ASC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE ((rt0.c1 IN ())) ORDER BY LIKELIHOOD(rt0.c0 COLLATE NOCASE, 0.7029002805195228) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY LIKELIHOOD(rt0.c0 COLLATE NOCASE, 0.7029002805195228) ASC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE ((rt0.c1 IN ())) ORDER BY LIKELIHOOD(rt0.c0 COLLATE NOCASE, 0.7029002805195228) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY ((TRIM(DISTINCT vt0.c0))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(DISTINCT vt0.c0))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY ((TRIM(DISTINCT vt0.c0))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(DISTINCT vt0.c0))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY ((TRIM(DISTINCT vt0.c0))<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c1 AS REAL)))) ORDER BY (- (CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c1 AS REAL)))) ORDER BY (- (CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c1 AS REAL)))) ORDER BY (- (CAST(v0.c0 AS BLOB)));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (+ (((rt0.c2) NOT NULL))) WHERE ((v0.c1 COLLATE RTRIM IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((v0.c1 COLLATE RTRIM IN (rt0.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (+ (((rt0.c2) NOT NULL))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (+ (((rt0.c2) NOT NULL))) WHERE ((v0.c1 COLLATE RTRIM IN (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((v0.c1 COLLATE RTRIM IN (rt0.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (+ (((rt0.c2) NOT NULL))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (+ (((rt0.c2) NOT NULL))) WHERE ((v0.c1 COLLATE RTRIM IN (rt0.c2)));
SELECT * FROM v0, rt0 WHERE ((((rt0.c2) IS FALSE) IN (((((rt0.c1)AND(v0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS FALSE) IN (((((rt0.c1)AND(v0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c2) IS FALSE) IN (((((rt0.c1)AND(v0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS FALSE) IN (((((rt0.c1)AND(v0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c2) IS FALSE) IN (((((rt0.c1)AND(v0.c2)))OR(rt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE ('-1539596153') ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1539596153') IS TRUE)  as count FROM v0 ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ('-1539596153') ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1539596153') IS TRUE)  as count FROM v0 ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ('-1539596153') ORDER BY (((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))LIKE(((v0.c0)||(rt0.c1)))) WHERE (TYPEOF(((rt0.c2)>>(rt0.c2)))) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS NOT(v0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c2)>>(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))LIKE(((v0.c0)||(rt0.c1)))) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS NOT(v0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))LIKE(((v0.c0)||(rt0.c1)))) WHERE (TYPEOF(((rt0.c2)>>(rt0.c2)))) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS NOT(v0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c2)>>(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))LIKE(((v0.c0)||(rt0.c1)))) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS NOT(v0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((+ (rt0.c0)))LIKE(((v0.c0)||(rt0.c1)))) WHERE (TYPEOF(((rt0.c2)>>(rt0.c2)))) ORDER BY ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS NOT(v0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END))==((CAST(NULL AS NUMERIC)))) WHERE ((((rt0.c1) IS FALSE) IN (json_extract(rt0.c2, rt0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c1)))) ORDER BY ((((rt0.c1)>=(rt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS FALSE) IN (json_extract(rt0.c2, rt0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END))=((CAST(NULL AS NUMERIC)))) ORDER BY ((((rt0.c1)>=(rt0.c0))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END))==((CAST(NULL AS NUMERIC)))) WHERE ((((rt0.c1) IS FALSE) IN (json_extract(rt0.c2, rt0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c1)))) ORDER BY ((((rt0.c1)>=(rt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS FALSE) IN (json_extract(rt0.c2, rt0.c0, rt0.c2, rt0.c0, vt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END))=((CAST(NULL AS NUMERIC)))) ORDER BY ((((rt0.c1)>=(rt0.c0))) ISNULL)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((((CAST(v0.c1 AS INTEGER), ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)), (v0.c0 IN ())))<=((CASE WHEN '-82514626' THEN vt0.c0 END, (((v0.c2))<((vt0.c0))), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c1 AS INTEGER), ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)), (v0.c0 IN ())))<=((CASE WHEN '-82514626' THEN vt0.c0 END, (((v0.c2))<((vt0.c0))), (vt0.c0 IN ()))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((CAST(v0.c1 AS INTEGER), ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)), (v0.c0 IN ())))<=((CASE WHEN '-82514626' THEN vt0.c0 END, (((v0.c2))<((vt0.c0))), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c1 AS INTEGER), ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)), (v0.c0 IN ())))<=((CASE WHEN '-82514626' THEN vt0.c0 END, (((v0.c2))<((vt0.c0))), (vt0.c0 IN ()))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((CAST(v0.c1 AS INTEGER), ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)), (v0.c0 IN ())))<=((CASE WHEN '-82514626' THEN vt0.c0 END, (((v0.c2))<((vt0.c0))), (vt0.c0 IN ())))));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((((rt0.c0)AND(v0.c0)))OR(rt0.c1)))AND((v0.c1 IN (v0.c0)))))AND((v0.c1 IN (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(v0.c0)))OR(rt0.c1)))AND((v0.c1 IN (v0.c0)))))AND((v0.c1 IN (v0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((((rt0.c0)AND(v0.c0)))OR(rt0.c1)))AND((v0.c1 IN (v0.c0)))))AND((v0.c1 IN (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(v0.c0)))OR(rt0.c1)))AND((v0.c1 IN (v0.c0)))))AND((v0.c1 IN (v0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((((((rt0.c0)AND(v0.c0)))OR(rt0.c1)))AND((v0.c1 IN (v0.c0)))))AND((v0.c1 IN (v0.c1)))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (v0.c2);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (TYPEOF(v0.c1));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(v0.c1)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (TYPEOF(v0.c1));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(v0.c1)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (TYPEOF(v0.c1));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c1)))<=(((v0.c1) NOTNULL)))) ORDER BY (((v0.c0 IN (v0.c0)))%(((((v0.c2)AND(v0.c1)))AND(v0.c2)))), (((((v0.c1, v0.c2, v0.c0))>((v0.c0, v0.c1, v0.c2))))AND(((v0.c0)&(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c1)))<=(((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))%(((((v0.c2)AND(v0.c1)))AND(v0.c2)))), (((((v0.c1, v0.c2, v0.c0))>((v0.c0, v0.c1, v0.c2))))AND(((v0.c0)&(v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c1)))<=(((v0.c1) NOTNULL)))) ORDER BY (((v0.c0 IN (v0.c0)))%(((((v0.c2)AND(v0.c1)))AND(v0.c2)))), (((((v0.c1, v0.c2, v0.c0))>((v0.c0, v0.c1, v0.c2))))AND(((v0.c0)&(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c1)))<=(((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))%(((((v0.c2)AND(v0.c1)))AND(v0.c2)))), (((((v0.c1, v0.c2, v0.c0))>((v0.c0, v0.c1, v0.c2))))AND(((v0.c0)&(v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((NOT (v0.c1)))<=(((v0.c1) NOTNULL)))) ORDER BY (((v0.c0 IN (v0.c0)))%(((((v0.c2)AND(v0.c1)))AND(v0.c2)))), (((((v0.c1, v0.c2, v0.c0))>((v0.c0, v0.c1, v0.c2))))AND(((v0.c0)&(v0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (SUBSTR(json_remove(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '', vt0.c0), ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((SUBSTR(json_remove(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '', vt0.c0), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (SUBSTR(json_remove(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '', vt0.c0), ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((SUBSTR(json_remove(vt0.c0, vt0.c0, vt0.c0, vt0.c0, '', vt0.c0), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c1))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c1))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c1))) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c0)) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c1  WHEN v0.c2 THEN v0.c0 END AS NUMERIC)) ORDER BY (v0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c1  WHEN v0.c2 THEN v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (v0.c1 IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c1  WHEN v0.c2 THEN v0.c0 END AS NUMERIC)) ORDER BY (v0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c1  WHEN v0.c2 THEN v0.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (v0.c1 IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c1  WHEN v0.c2 THEN v0.c0 END AS NUMERIC)) ORDER BY (v0.c1 IN ()) ASC;
SELECT * FROM v0 WHERE (v0.c1) ORDER BY ((((NULL) IS FALSE)) BETWEEN (NULLIF(v0.c0, v0.c0)) AND (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY ((((NULL) IS FALSE)) BETWEEN (NULLIF(v0.c0, v0.c0)) AND (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY ((((NULL) IS FALSE)) BETWEEN (NULLIF(v0.c0, v0.c0)) AND (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY ((((NULL) IS FALSE)) BETWEEN (NULLIF(v0.c0, v0.c0)) AND (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC);
SELECT * FROM v0 WHERE (v0.c1) ORDER BY ((((NULL) IS FALSE)) BETWEEN (NULLIF(v0.c0, v0.c0)) AND (((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) ASC;
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) IS FALSE) ASC, ((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c0)))))AND((NOT (rt0.c2))))  NULLS LAST, (((((((((0x2116afc9)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) IS FALSE) ASC, ((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c0)))))AND((NOT (rt0.c2))))  NULLS LAST, (((((((((0X2116afc9)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ()));
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) IS FALSE) ASC, ((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c0)))))AND((NOT (rt0.c2))))  NULLS LAST, (((((((((0x2116afc9)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) IS FALSE) ASC, ((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c0)))))AND((NOT (rt0.c2))))  NULLS LAST, (((((((((0X2116afc9)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ()));
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) IS FALSE) ASC, ((((CAST(rt0.c2 AS TEXT))AND((- (rt0.c0)))))AND((NOT (rt0.c2))))  NULLS LAST, (((((((((0x2116afc9)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)) IN ());
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST((- ('-898359132')) AS NUMERIC) WHERE ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))==((vt0.c0, vt0.c0, x'', rt0.c0, rt0.c1, rt0.c0, rt0.c2))), (vt0.c0 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (('' COLLATE RTRIM, vt0.c0, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))=((vt0.c0, vt0.c0, x'', rt0.c0, rt0.c1, rt0.c0, rt0.c2))), (vt0.c0 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (('' COLLATE RTRIM, vt0.c0, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST((- ('-898359132')) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST((- ('-898359132')) AS NUMERIC) WHERE ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))==((vt0.c0, vt0.c0, x'', rt0.c0, rt0.c1, rt0.c0, rt0.c2))), (vt0.c0 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (('' COLLATE RTRIM, vt0.c0, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))=((vt0.c0, vt0.c0, x'', rt0.c0, rt0.c1, rt0.c0, rt0.c2))), (vt0.c0 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (('' COLLATE RTRIM, vt0.c0, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST((- ('-898359132')) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST((- ('-898359132')) AS NUMERIC) WHERE ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))==((vt0.c0, vt0.c0, x'', rt0.c0, rt0.c1, rt0.c0, rt0.c2))), (vt0.c0 IN (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (('' COLLATE RTRIM, vt0.c0, ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)=(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c1) NOT NULL))) WHERE ((((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))!=((((((vt0.c0)OR(rt0.c0)))AND(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))<>((((((vt0.c0)OR(rt0.c0)))AND(v0.c2)))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)==(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)=(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c1) NOT NULL))) WHERE ((((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))!=((((((vt0.c0)OR(rt0.c0)))AND(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))<>((((((vt0.c0)OR(rt0.c0)))AND(v0.c2)))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)==(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)=(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((v0.c1) NOT NULL))) WHERE ((((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))!=((((((vt0.c0)OR(rt0.c0)))AND(v0.c2))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)OR(v0.c1)))OR(v0.c2)) COLLATE NOCASE COLLATE BINARY) ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(v0.c1)))OR(v0.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)OR(v0.c1)))OR(v0.c2)) COLLATE NOCASE COLLATE BINARY) ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(v0.c1)))OR(v0.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)OR(v0.c1)))OR(v0.c2)) COLLATE NOCASE COLLATE BINARY) ORDER BY (~ (((v0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON 0.02240701854928273 LEFT OUTER JOIN vt0 ON ((vt0.c0)IS NOT(((vt0.c0)||(v0.c1)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON 0.02240701854928273 LEFT OUTER JOIN vt0 ON ((vt0.c0)IS NOT(((vt0.c0)||(v0.c1)))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON 0.02240701854928273 LEFT OUTER JOIN vt0 ON ((vt0.c0)IS NOT(((vt0.c0)||(v0.c1)))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON 0.02240701854928273 LEFT OUTER JOIN vt0 ON ((vt0.c0)IS NOT(((vt0.c0)||(v0.c1)))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON 0.02240701854928273 LEFT OUTER JOIN vt0 ON ((vt0.c0)IS NOT(((vt0.c0)||(v0.c1)))) WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c1))>=((((v0.c1) IS FALSE))))) ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))>=((((v0.c1) IS FALSE))))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, vt0 ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c1))>=((((v0.c1) IS FALSE))))) ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1))>=((((v0.c1) IS FALSE))))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, vt0 ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((rt0.c1))>=((((v0.c1) IS FALSE))))) ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)|(rt0.c1)))OR((+ (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))AND(((x'') NOT BETWEEN ('-1784732046') AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY ((0.07312240832370998) ISNULL), (((((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)|(rt0.c1)))OR((+ (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))AND(((x'') NOT BETWEEN ('-1784732046') AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.07312240832370998) ISNULL), (((((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)) ASC);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)|(rt0.c1)))OR((+ (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))AND(((x'') NOT BETWEEN ('-1784732046') AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY ((0.07312240832370998) ISNULL), (((((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)|(rt0.c1)))OR((+ (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))AND(((x'') NOT BETWEEN ('-1784732046') AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.07312240832370998) ISNULL), (((((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)) ASC);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)|(rt0.c1)))OR((+ (rt0.c1)))))AND(CAST(rt0.c0 AS REAL))))AND(((x'') NOT BETWEEN ('-1784732046') AND (rt0.c2)))))OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))))) ORDER BY ((0.07312240832370998) ISNULL), (((((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c1))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)) ASC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((v0.c2) NOTNULL) LEFT OUTER JOIN v0 ON '!3dq-' WHERE ((((- (x''))) NOTNULL)) ORDER BY (((+ (738533220)))|(((v0.c1)==(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (x''))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((v0.c2) NOTNULL) LEFT OUTER JOIN v0 ON '!3dq-' ORDER BY (((+ (738533220)))|(((v0.c1)=(v0.c1)))) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((v0.c2) NOTNULL) LEFT OUTER JOIN v0 ON '!3dq-' WHERE ((((- (x''))) NOTNULL)) ORDER BY (((+ (738533220)))|(((v0.c1)==(v0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (x''))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((v0.c2) NOTNULL) LEFT OUTER JOIN v0 ON '!3dq-' ORDER BY (((+ (738533220)))|(((v0.c1)=(v0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC) WHERE ((((- (v0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) ORDER BY ((((vt0.c0) IS FALSE))<<(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC) ORDER BY ((((vt0.c0) IS FALSE))<<(rt0.c2)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC) WHERE ((((- (v0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) ORDER BY ((((vt0.c0) IS FALSE))<<(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC) ORDER BY ((((vt0.c0) IS FALSE))<<(rt0.c2)) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c2 THEN v0.c2 WHEN v0.c0 THEN NULL WHEN v0.c2 THEN rt0.c1 ELSE vt0.c0 END AS NUMERIC) WHERE ((((- (v0.c1)))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) ORDER BY ((((vt0.c0) IS FALSE))<<(rt0.c2)) DESC;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((CAST(rt0.c1 AS REAL))OR((vt0.c0 IN (rt0.c2, v0.c1)))))OR(((rt0.c1) IS TRUE))))AND(TRIM(rt0.c1))))OR(rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON CASE ((('672853669', rt0.c2, rt0.c1))!=(('', v0.c2, rt0.c0)))  WHEN (((rt0.c2, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, rt0.c2, '138355544')) AND ((v0.c0, v0.c1, rt0.c1))) THEN CASE x'6c33'  WHEN 0x711419a1 THEN v0.c1 END END WHERE (json_extract(((((rt0.c1)OR(v0.c2)))AND(rt0.c0)), ((((rt0.c2)OR(v0.c1)))OR(rt0.c1)))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((((rt0.c1)OR(v0.c2)))AND(rt0.c0)), ((((rt0.c2)OR(v0.c1)))OR(rt0.c1)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((CAST(rt0.c1 AS REAL))OR((vt0.c0 IN (rt0.c2, v0.c1)))))OR(((rt0.c1) IS TRUE))))AND(TRIM(rt0.c1))))OR(rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON CASE ((('672853669', rt0.c2, rt0.c1))!=(('', v0.c2, rt0.c0)))  WHEN (((rt0.c2, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, rt0.c2, '138355544')) AND ((v0.c0, v0.c1, rt0.c1))) THEN CASE x'6c33'  WHEN 0x711419a1 THEN v0.c1 END END ORDER BY CAST(rt0.c0 COLLATE RTRIM AS INTEGER) DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((CAST(rt0.c1 AS REAL))OR((vt0.c0 IN (rt0.c2, v0.c1)))))OR(((rt0.c1) IS TRUE))))AND(TRIM(rt0.c1))))OR(rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON CASE ((('672853669', rt0.c2, rt0.c1))!=(('', v0.c2, rt0.c0)))  WHEN (((rt0.c2, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, rt0.c2, '138355544')) AND ((v0.c0, v0.c1, rt0.c1))) THEN CASE x'6c33'  WHEN 0x711419a1 THEN v0.c1 END END WHERE (json_extract(((((rt0.c1)OR(v0.c2)))AND(rt0.c0)), ((((rt0.c2)OR(v0.c1)))OR(rt0.c1)))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((((rt0.c1)OR(v0.c2)))AND(rt0.c0)), ((((rt0.c2)OR(v0.c1)))OR(rt0.c1)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((CAST(rt0.c1 AS REAL))OR((vt0.c0 IN (rt0.c2, v0.c1)))))OR(((rt0.c1) IS TRUE))))AND(TRIM(rt0.c1))))OR(rt0.c0 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON CASE ((('672853669', rt0.c2, rt0.c1))!=(('', v0.c2, rt0.c0)))  WHEN (((rt0.c2, rt0.c0, v0.c0)) BETWEEN ((rt0.c0, rt0.c2, '138355544')) AND ((v0.c0, v0.c1, rt0.c1))) THEN CASE x'6c33'  WHEN 0x711419a1 THEN v0.c1 END END ORDER BY CAST(rt0.c0 COLLATE RTRIM AS INTEGER) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST('1243517269' AS NUMERIC))) AND ((((vt0.c0)+(vt0.c0)))))) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN json_quote(vt0.c0) THEN ((vt0.c0)<<(vt0.c0)) WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST('1243517269' AS NUMERIC))) AND ((((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN json_quote(vt0.c0) THEN ((vt0.c0)<<(vt0.c0)) WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST('1243517269' AS NUMERIC))) AND ((((vt0.c0)+(vt0.c0)))))) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN json_quote(vt0.c0) THEN ((vt0.c0)<<(vt0.c0)) WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST('1243517269' AS NUMERIC))) AND ((((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN json_quote(vt0.c0) THEN ((vt0.c0)<<(vt0.c0)) WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST('1243517269' AS NUMERIC))) AND ((((vt0.c0)+(vt0.c0)))))) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN json_quote(vt0.c0) THEN ((vt0.c0)<<(vt0.c0)) WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) END ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(vt0.c0)))OR(rt0.c1)))) WHERE (HEX(((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(vt0.c0)))OR(rt0.c1)))));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(vt0.c0)))OR(rt0.c1)))) WHERE (HEX(((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(vt0.c0)))OR(rt0.c1)))));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON (NOT (((((v0.c0)AND(vt0.c0)))OR(rt0.c1)))) WHERE (HEX(((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (0.463742760865677);
SELECT SUM(count) FROM (SELECT ((0.463742760865677) IS TRUE)  as count FROM rt0, vt0, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (0.463742760865677);
SELECT SUM(count) FROM (SELECT ((0.463742760865677) IS TRUE)  as count FROM rt0, vt0, v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (0.463742760865677);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0, v0.c1, v0.c2))!=((v0.c2, vt0.c0, v0.c1))))IS('mW')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, v0.c1, v0.c2))!=((v0.c2, vt0.c0, v0.c1))))IS('mW'))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0, v0.c1, v0.c2))!=((v0.c2, vt0.c0, v0.c1))))IS('mW')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, v0.c1, v0.c2))!=((v0.c2, vt0.c0, v0.c1))))IS('mW'))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0, v0.c1, v0.c2))!=((v0.c2, vt0.c0, v0.c1))))IS('mW')));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c1)), ((rt0.c0) BETWEEN ('-888695013') AND (vt0.c0)), (vt0.c0 IN (v0.c1))))>((CASE WHEN vt0.c0 THEN v0.c2 END, ((((((((v0.c2)AND(v0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0)IS(v0.c0))))) WHERE ((((v0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((((v0.c0)AND('-609655110')))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((((v0.c0)AND('-609655110')))AND(v0.c1)))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c1)), ((rt0.c0) BETWEEN ('-888695013') AND (vt0.c0)), (vt0.c0 IN (v0.c1))))>((CASE WHEN vt0.c0 THEN v0.c2 END, ((((((((v0.c2)AND(v0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0)IS(v0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c1)), ((rt0.c0) BETWEEN ('-888695013') AND (vt0.c0)), (vt0.c0 IN (v0.c1))))>((CASE WHEN vt0.c0 THEN v0.c2 END, ((((((((v0.c2)AND(v0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0)IS(v0.c0))))) WHERE ((((v0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((((v0.c0)AND('-609655110')))AND(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((((v0.c0)AND('-609655110')))AND(v0.c1)))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c1)), ((rt0.c0) BETWEEN ('-888695013') AND (vt0.c0)), (vt0.c0 IN (v0.c1))))>((CASE WHEN vt0.c0 THEN v0.c2 END, ((((((((v0.c2)AND(v0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0)IS(v0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON (((((rt0.c2)/(rt0.c1)), ((rt0.c0) BETWEEN ('-888695013') AND (vt0.c0)), (vt0.c0 IN (v0.c1))))>((CASE WHEN vt0.c0 THEN v0.c2 END, ((((((((v0.c2)AND(v0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0)IS(v0.c0))))) WHERE ((((v0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((((((v0.c0)AND('-609655110')))AND(v0.c1))))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(0X63ba98e2 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X63ba98e2 AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(0X63ba98e2 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0X63ba98e2 AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(0X63ba98e2 AS BLOB));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), '1372965472', TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('粸3', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (NOT (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), '1372965472', TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('粸3', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (NOT (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), '1372965472', TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('粸3', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (NOT (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), '1372965472', TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('粸3', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (NOT (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), '1372965472', TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('粸3', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (NOT (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON (- (((rt0.c2)>(v0.c1)))) WHERE ((+ (CASE v0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE v0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON (- (((rt0.c2)>(v0.c1)))));
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON (- (((rt0.c2)>(v0.c1)))) WHERE ((+ (CASE v0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE v0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON (- (((rt0.c2)>(v0.c1)))));
SELECT * FROM vt0, v0 CROSS JOIN rt0 ON (- (((rt0.c2)>(v0.c1)))) WHERE ((+ (CASE v0.c0  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c2)<>(v0.c1)) AS INTEGER)) ORDER BY ((((((v0.c1)AND(v0.c1)))OR(v0.c0))) BETWEEN (((v0.c1)&(v0.c2))) AND (((v0.c1)=(v0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)!=(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)AND(v0.c1)))OR(v0.c0))) BETWEEN (((v0.c1)&(v0.c2))) AND (((v0.c1)=(v0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c2)<>(v0.c1)) AS INTEGER)) ORDER BY ((((((v0.c1)AND(v0.c1)))OR(v0.c0))) BETWEEN (((v0.c1)&(v0.c2))) AND (((v0.c1)=(v0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2)!=(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)AND(v0.c1)))OR(v0.c0))) BETWEEN (((v0.c1)&(v0.c2))) AND (((v0.c1)=(v0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c2)<>(v0.c1)) AS INTEGER)) ORDER BY ((((((v0.c1)AND(v0.c1)))OR(v0.c0))) BETWEEN (((v0.c1)&(v0.c2))) AND (((v0.c1)=(v0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((((('')AND(CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC, ((((v0.c2)>(v0.c1)))IS NOT(TOTAL_CHANGES())), (~ (CAST(v0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((('')AND(CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC, ((((v0.c2)>(v0.c1)))IS NOT(TOTAL_CHANGES())), (~ (CAST(v0.c2 AS INTEGER))) ASC);
SELECT ALL * FROM v0, vt0 WHERE ((((('')AND(CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC, ((((v0.c2)>(v0.c1)))IS NOT(TOTAL_CHANGES())), (~ (CAST(v0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((('')AND(CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC, ((((v0.c2)>(v0.c1)))IS NOT(TOTAL_CHANGES())), (~ (CAST(v0.c2 AS INTEGER))) ASC);
SELECT ALL * FROM v0, vt0 WHERE ((((('')AND(CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) ISNULL)))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC, ((((v0.c2)>(v0.c1)))IS NOT(TOTAL_CHANGES())), (~ (CAST(v0.c2 AS INTEGER))) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN '' THEN v0.c2 ELSE v0.c0 END IN ())) ORDER BY (((vt0.c0) NOT BETWEEN (x'') AND (v0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN '' THEN v0.c2 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((vt0.c0) NOT BETWEEN (x'') AND (v0.c2)) IN ()));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN '' THEN v0.c2 ELSE v0.c0 END IN ())) ORDER BY (((vt0.c0) NOT BETWEEN (x'') AND (v0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN '' THEN v0.c2 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((vt0.c0) NOT BETWEEN (x'') AND (v0.c2)) IN ()));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN '' THEN v0.c2 ELSE v0.c0 END IN ())) ORDER BY (((vt0.c0) NOT BETWEEN (x'') AND (v0.c2)) IN ());
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c1)+(v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)+(v0.c1)) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c1)+(v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)+(v0.c1)) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c1)+(v0.c1)) AS REAL));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM v0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((('ᦡ') BETWEEN (0.5645086157200604) AND (v0.c2))) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN ((('ᦡ') BETWEEN (0.5645086157200604) AND (v0.c2))) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((('ᦡ') BETWEEN (0.5645086157200604) AND (v0.c2))) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN ((('ᦡ') BETWEEN (0.5645086157200604) AND (v0.c2))) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((('ᦡ') BETWEEN (0.5645086157200604) AND (v0.c2))) AND (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CASE WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END) CROSS JOIN rt0 ON (CASE WHEN rt0.c1 THEN rt0.c0 ELSE NULL END IN ()) WHERE ((~ (((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CASE WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END) CROSS JOIN rt0 ON (CASE WHEN rt0.c1 THEN rt0.c0 ELSE NULL END IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CASE WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END) CROSS JOIN rt0 ON (CASE WHEN rt0.c1 THEN rt0.c0 ELSE NULL END IN ()) WHERE ((~ (((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CASE WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END) CROSS JOIN rt0 ON (CASE WHEN rt0.c1 THEN rt0.c0 ELSE NULL END IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON LOWER(DISTINCT CASE WHEN v0.c1 THEN v0.c0 ELSE rt0.c0 END) CROSS JOIN rt0 ON (CASE WHEN rt0.c1 THEN rt0.c0 ELSE NULL END IN ()) WHERE ((~ (((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((0.5493317299598844))==((UPPER(DISTINCT v0.c2))))) ORDER BY 0.35214444858815597 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.5493317299598844))==((UPPER(DISTINCT v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.35214444858815597 DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((0.5493317299598844))==((UPPER(DISTINCT v0.c2))))) ORDER BY 0.35214444858815597 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.5493317299598844))==((UPPER(DISTINCT v0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY 0.35214444858815597 DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((0.5493317299598844))==((UPPER(DISTINCT v0.c2))))) ORDER BY 0.35214444858815597 DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('597456587') ORDER BY GLOB(rt0.c0 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('597456587') IS TRUE)  as count FROM v0, rt0 ORDER BY GLOB(rt0.c0 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('597456587') ORDER BY GLOB(rt0.c0 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('597456587') IS TRUE)  as count FROM v0, rt0 ORDER BY GLOB(rt0.c0 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('597456587') ORDER BY GLOB(rt0.c0 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (v0.c2) AND (rt0.c0))) ASC  NULLS LAST;
SELECT * FROM vt0, rt0, v0 WHERE (json_quote(((((rt0.c0)OR(rt0.c2)))OR(v0.c1))));
SELECT SUM(count) FROM (SELECT ((json_quote(((((rt0.c0)OR(rt0.c2)))OR(v0.c1)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (json_quote(((((rt0.c0)OR(rt0.c2)))OR(v0.c1))));
SELECT SUM(count) FROM (SELECT ((json_quote(((((rt0.c0)OR(rt0.c2)))OR(v0.c1)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (json_quote(((((rt0.c0)OR(rt0.c2)))OR(v0.c1))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS TEXT))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((rt0.c2)||(vt0.c0))))) ORDER BY v0.c2 ASC, ((rt0.c2 COLLATE BINARY) BETWEEN ((NOT (v0.c2))) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2)))) ASC  NULLS LAST, ((((v0.c0) IS TRUE))%(((v0.c0)IS(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)||(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY v0.c2 ASC, ((rt0.c2 COLLATE BINARY) BETWEEN ((NOT (v0.c2))) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2)))) ASC  NULLS LAST, ((((v0.c0) IS TRUE))%(((v0.c0)IS(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((rt0.c2)||(vt0.c0))))) ORDER BY v0.c2 ASC, ((rt0.c2 COLLATE BINARY) BETWEEN ((NOT (v0.c2))) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2)))) ASC  NULLS LAST, ((((v0.c0) IS TRUE))%(((v0.c0)IS(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)||(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY v0.c2 ASC, ((rt0.c2 COLLATE BINARY) BETWEEN ((NOT (v0.c2))) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2)))) ASC  NULLS LAST, ((((v0.c0) IS TRUE))%(((v0.c0)IS(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((rt0.c2)||(vt0.c0))))) ORDER BY v0.c2 ASC, ((rt0.c2 COLLATE BINARY) BETWEEN ((NOT (v0.c2))) AND (((v0.c1) NOT BETWEEN (rt0.c2) AND (v0.c2)))) ASC  NULLS LAST, ((((v0.c0) IS TRUE))%(((v0.c0)IS(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c2 END)>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c2 END)>(NULL))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c2 END)>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c2 END)>(NULL))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN v0.c1 THEN rt0.c1 ELSE v0.c2 END)>(NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (('-196161499', COALESCE(DISTINCT rt0.c0, rt0.c1), UPPER(DISTINCT rt0.c1))) AND (('}2', CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)-(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (('-196161499', COALESCE(DISTINCT rt0.c0, rt0.c1), UPPER(DISTINCT rt0.c1))) AND (('}2', CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)-(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (('-196161499', COALESCE(DISTINCT rt0.c0, rt0.c1), UPPER(DISTINCT rt0.c1))) AND (('}2', CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)-(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (('-196161499', COALESCE(DISTINCT rt0.c0, rt0.c1), UPPER(DISTINCT rt0.c1))) AND (('}2', CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)-(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN (('-196161499', COALESCE(DISTINCT rt0.c0, rt0.c1), UPPER(DISTINCT rt0.c1))) AND (('}2', CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)-(rt0.c2))))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((v0.c0)>>(v0.c1))  WHEN HEX(rt0.c1) THEN v0.c0 END) ORDER BY (((rt0.c0)) BETWEEN ((((x'a7a0')<(v0.c1)))) AND ((((rt0.c2)|(v0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)>>(v0.c1))  WHEN HEX(rt0.c1) THEN v0.c0 END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((x'a7a0')<(v0.c1)))) AND ((((rt0.c2)|(v0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((v0.c0)>>(v0.c1))  WHEN HEX(rt0.c1) THEN v0.c0 END) ORDER BY (((rt0.c0)) BETWEEN ((((x'a7a0')<(v0.c1)))) AND ((((rt0.c2)|(v0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)>>(v0.c1))  WHEN HEX(rt0.c1) THEN v0.c0 END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((x'a7a0')<(v0.c1)))) AND ((((rt0.c2)|(v0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((v0.c0)>>(v0.c1))  WHEN HEX(rt0.c1) THEN v0.c0 END) ORDER BY (((rt0.c0)) BETWEEN ((((x'a7a0')<(v0.c1)))) AND ((((rt0.c2)|(v0.c1)))))  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c2 COLLATE RTRIM)OR(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE RTRIM)OR(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c2 COLLATE RTRIM)OR(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE RTRIM)OR(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c2 COLLATE RTRIM)OR(CAST(v0.c0 AS TEXT))));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL)) ORDER BY ((MAX(rt0.c2, rt0.c1))-(((rt0.c1)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((MAX(rt0.c2, rt0.c1))-(((rt0.c1)IS NOT(rt0.c2)))));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL)) ORDER BY ((MAX(rt0.c2, rt0.c1))-(((rt0.c1)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((MAX(rt0.c2, rt0.c1))-(((rt0.c1)IS NOT(rt0.c2)))));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL)) ORDER BY ((MAX(rt0.c2, rt0.c1))-(((rt0.c1)IS NOT(rt0.c2))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c2)))<=(((((v0.c2)AND(v0.c1)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))<=(((((v0.c2)AND(v0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c2)))<=(((((v0.c2)AND(v0.c1)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))<=(((((v0.c2)AND(v0.c1)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c2)))<=(((((v0.c2)AND(v0.c1)))AND(v0.c0)))));
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c2)&(rt0.c0))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('-461457023')!=(v0.c2))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))))-(((v0.c2)|(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)&(rt0.c0))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('-461457023')<>(v0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))))-(((v0.c2)|(rt0.c1))))  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c2)&(rt0.c0))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('-461457023')!=(v0.c2))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))))-(((v0.c2)|(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)&(rt0.c0))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('-461457023')<>(v0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))))-(((v0.c2)|(rt0.c1))))  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (((((v0.c2)&(rt0.c0))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((('-461457023')!=(v0.c2))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c2))))-(((v0.c2)|(rt0.c1))))  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0)|(vt0.c0)) END) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (- (vt0.c0)) WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0)|(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (- (vt0.c0)) WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0)|(vt0.c0)) END) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (- (vt0.c0)) WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0)|(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (- (vt0.c0)) WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0)|(vt0.c0)) END) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()), CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (- (vt0.c0)) WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((~ ((v0.c2 IN (v0.c1, v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c2 IN (v0.c1, v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ ((v0.c2 IN (v0.c1, v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c2 IN (v0.c1, v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ ((v0.c2 IN (v0.c1, v0.c1)))));
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) IS FALSE));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((- (v0.c2)))<=((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c2)))<=((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((- (v0.c2)))<=((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c2)))<=((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((- (v0.c2)))<=((v0.c0 IN ()))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)AND(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))OR(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN rt0 ON ((((rt0.c1)>>(rt0.c0))) IS TRUE) WHERE (NULLIF(((v0.c2)+('q\')), x'')) ORDER BY ((- (1277007419)) IN (((((((((rt0.c1)AND(0.1469246086151308)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)), CASE rt0.c0  WHEN v0.c1 THEN v0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((v0.c2)+('q\')), x'')) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)AND(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))OR(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN rt0 ON ((((rt0.c1)>>(rt0.c0))) IS TRUE) ORDER BY ((- (1277007419)) IN (((((((((rt0.c1)AND(0.1469246086151308)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)), CASE rt0.c0  WHEN v0.c1 THEN v0.c2 END)) DESC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)AND(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))OR(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN rt0 ON ((((rt0.c1)>>(rt0.c0))) IS TRUE) WHERE (NULLIF(((v0.c2)+('q\')), x'')) ORDER BY ((- (1277007419)) IN (((((((((rt0.c1)AND(0.1469246086151308)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)), CASE rt0.c0  WHEN v0.c1 THEN v0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((v0.c2)+('q\')), x'')) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)AND(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))OR(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN rt0 ON ((((rt0.c1)>>(rt0.c0))) IS TRUE) ORDER BY ((- (1277007419)) IN (((((((((rt0.c1)AND(0.1469246086151308)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)), CASE rt0.c0  WHEN v0.c1 THEN v0.c2 END)) DESC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((v0.c0)AND(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))))OR(v0.c0 COLLATE NOCASE)) LEFT OUTER JOIN rt0 ON ((((rt0.c1)>>(rt0.c0))) IS TRUE) WHERE (NULLIF(((v0.c2)+('q\')), x'')) ORDER BY ((- (1277007419)) IN (((((((((rt0.c1)AND(0.1469246086151308)))OR(v0.c0)))AND(v0.c1)))OR(v0.c2)), CASE rt0.c0  WHEN v0.c1 THEN v0.c2 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (json_remove(((((v0.c0)AND(1.243517269E9)))OR(v0.c1)), v0.c2 COLLATE NOCASE, (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))), COALESCE(rt0.c2, v0.c1))) ORDER BY ((((((((((v0.c1)GLOB('-1915373632')))AND((((('Iv')AND(rt0.c2)))AND(rt0.c0)))))OR(CASE 0Xffffffffb726bc36  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(CAST(rt0.c0 AS REAL))))OR(((rt0.c1)>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((((v0.c0)AND(1.243517269E9)))OR(v0.c1)), v0.c2 COLLATE NOCASE, (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))), COALESCE(rt0.c2, v0.c1))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((v0.c1)GLOB('-1915373632')))AND((((('Iv')AND(rt0.c2)))AND(rt0.c0)))))OR(CASE 0Xffffffffb726bc36  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(CAST(rt0.c0 AS REAL))))OR(((rt0.c1)>(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (json_remove(((((v0.c0)AND(1.243517269E9)))OR(v0.c1)), v0.c2 COLLATE NOCASE, (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))), COALESCE(rt0.c2, v0.c1))) ORDER BY ((((((((((v0.c1)GLOB('-1915373632')))AND((((('Iv')AND(rt0.c2)))AND(rt0.c0)))))OR(CASE 0Xffffffffb726bc36  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(CAST(rt0.c0 AS REAL))))OR(((rt0.c1)>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((((v0.c0)AND(1.243517269E9)))OR(v0.c1)), v0.c2 COLLATE NOCASE, (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))), COALESCE(rt0.c2, v0.c1))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((v0.c1)GLOB('-1915373632')))AND((((('Iv')AND(rt0.c2)))AND(rt0.c0)))))OR(CASE 0Xffffffffb726bc36  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)))AND(CAST(rt0.c0 AS REAL))))OR(((rt0.c1)>(v0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((((v0.c0)AND(v0.c1)))OR(x'dfa9c001')))) AND ((((v0.c2)&(NULL)))))) ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((((((v0.c0)AND(v0.c1)))OR(x'dfa9c001')))) AND ((((v0.c2)&(NULL)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((((v0.c0)AND(v0.c1)))OR(x'dfa9c001')))) AND ((((v0.c2)&(NULL)))))) ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c2)) NOT BETWEEN ((((((v0.c0)AND(v0.c1)))OR(x'dfa9c001')))) AND ((((v0.c2)&(NULL)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c2)) NOT BETWEEN ((((((v0.c0)AND(v0.c1)))OR(x'dfa9c001')))) AND ((((v0.c2)&(NULL)))))) ORDER BY (~ (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))-((vt0.c0 IN ())))) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((NULL)&(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((NULL)&(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))-((vt0.c0 IN ())))) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((NULL)&(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))-((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((NULL)&(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))-((vt0.c0 IN ())))) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((NULL)&(vt0.c0))) AND (((vt0.c0)IS(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (((v0.c0 IN (v0.c2, v0.c1)) IN ())) ORDER BY (((vt0.c0 IN (v0.c0))) IS TRUE), (NOT (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((((NULL, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((vt0.c0, v0.c0, v0.c2))))AND(CASE NULL  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)))OR(((v0.c0)%(v0.c2))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN (v0.c2, v0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN (v0.c0))) IS TRUE), (NOT (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((((NULL, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((vt0.c0, v0.c0, v0.c2))))AND(CASE NULL  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)))OR(((v0.c0)%(v0.c2)))));
SELECT * FROM vt0, v0 WHERE (((v0.c0 IN (v0.c2, v0.c1)) IN ())) ORDER BY (((vt0.c0 IN (v0.c0))) IS TRUE), (NOT (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((((NULL, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((vt0.c0, v0.c0, v0.c2))))AND(CASE NULL  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)))OR(((v0.c0)%(v0.c2))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN (v0.c2, v0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0 IN (v0.c0))) IS TRUE), (NOT (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((((NULL, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((vt0.c0, v0.c0, v0.c2))))AND(CASE NULL  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)))OR(((v0.c0)%(v0.c2)))));
SELECT * FROM vt0, v0 WHERE (((v0.c0 IN (v0.c2, v0.c1)) IN ())) ORDER BY (((vt0.c0 IN (v0.c0))) IS TRUE), (NOT (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((((NULL, vt0.c0, v0.c2)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((vt0.c0, v0.c0, v0.c2))))AND(CASE NULL  WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END)))OR(((v0.c0)%(v0.c2))));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON CASE ((((v0.c2)AND(vt0.c0)))OR(v0.c1))  WHEN ((rt0.c0) IS TRUE) THEN v0.c0 COLLATE RTRIM ELSE ((((rt0.c0)OR(vt0.c0)))AND(v0.c0)) END WHERE (CAST((v0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON CASE ((((v0.c2)AND(vt0.c0)))OR(v0.c1))  WHEN ((rt0.c0) IS TRUE) THEN v0.c0 COLLATE RTRIM ELSE ((((rt0.c0)OR(vt0.c0)))AND(v0.c0)) END);
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON CASE ((((v0.c2)AND(vt0.c0)))OR(v0.c1))  WHEN ((rt0.c0) IS TRUE) THEN v0.c0 COLLATE RTRIM ELSE ((((rt0.c0)OR(vt0.c0)))AND(v0.c0)) END WHERE (CAST((v0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON CASE ((((v0.c2)AND(vt0.c0)))OR(v0.c1))  WHEN ((rt0.c0) IS TRUE) THEN v0.c0 COLLATE RTRIM ELSE ((((rt0.c0)OR(vt0.c0)))AND(v0.c0)) END);
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON CASE ((((v0.c2)AND(vt0.c0)))OR(v0.c1))  WHEN ((rt0.c0) IS TRUE) THEN v0.c0 COLLATE RTRIM ELSE ((((rt0.c0)OR(vt0.c0)))AND(v0.c0)) END WHERE (CAST((v0.c2 IN ()) AS INTEGER));
SELECT * FROM v0, rt0 WHERE (CASE WHEN v0.c2 THEN (~ (rt0.c0)) WHEN (((v0.c0))<((rt0.c1))) THEN rt0.c0 WHEN rt0.c0 THEN (- (v0.c2)) END) ORDER BY ((((rt0.c0)) BETWEEN ((NULL)) AND ((v0.c1))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c2 THEN (~ (rt0.c0)) WHEN (((v0.c0))<((rt0.c1))) THEN rt0.c0 WHEN rt0.c0 THEN (- (v0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)) BETWEEN ((NULL)) AND ((v0.c1))) IN ()) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CASE WHEN v0.c2 THEN (~ (rt0.c0)) WHEN (((v0.c0))<((rt0.c1))) THEN rt0.c0 WHEN rt0.c0 THEN (- (v0.c2)) END) ORDER BY ((((rt0.c0)) BETWEEN ((NULL)) AND ((v0.c1))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c2 THEN (~ (rt0.c0)) WHEN (((v0.c0))<((rt0.c1))) THEN rt0.c0 WHEN rt0.c0 THEN (- (v0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c0)) BETWEEN ((NULL)) AND ((v0.c1))) IN ()) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CASE WHEN v0.c2 THEN (~ (rt0.c0)) WHEN (((v0.c0))<((rt0.c1))) THEN rt0.c0 WHEN rt0.c0 THEN (- (v0.c2)) END) ORDER BY ((((rt0.c0)) BETWEEN ((NULL)) AND ((v0.c1))) IN ()) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (-1.210876942E9) ORDER BY v0.c2  NULLS LAST, '1191778173' ASC  NULLS LAST, ((v0.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.210876942E9) IS TRUE)  as count FROM v0 ORDER BY v0.c2  NULLS LAST, '1191778173' ASC  NULLS LAST, ((v0.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST);
SELECT * FROM v0 WHERE (-1.210876942E9) ORDER BY v0.c2  NULLS LAST, '1191778173' ASC  NULLS LAST, ((v0.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.210876942E9) IS TRUE)  as count FROM v0 ORDER BY v0.c2  NULLS LAST, '1191778173' ASC  NULLS LAST, ((v0.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST);
SELECT * FROM v0 WHERE (-1.210876942E9) ORDER BY v0.c2  NULLS LAST, '1191778173' ASC  NULLS LAST, ((v0.c2 COLLATE NOCASE) IS TRUE)  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) NOTNULL) THEN (+ (v0.c2)) END) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) NOTNULL) THEN (+ (v0.c2)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c2  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) NOTNULL) THEN (+ (v0.c2)) END) ORDER BY v0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) NOTNULL) THEN (+ (v0.c2)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c2  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) NOTNULL) THEN (+ (v0.c2)) END) ORDER BY v0.c2  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT * FROM rt0 WHERE ((((UNLIKELY(DISTINCT rt0.c0), CAST(rt0.c1 AS REAL), (- (rt0.c2)), (rt0.c0 IN (rt0.c2)), rt0.c2 COLLATE BINARY))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END, (rt0.c0 IN ('+'))))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(DISTINCT rt0.c0), CAST(rt0.c1 AS REAL), (- (rt0.c2)), (rt0.c0 IN (rt0.c2)), rt0.c2 COLLATE BINARY))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END, (rt0.c0 IN ('+')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((UNLIKELY(DISTINCT rt0.c0), CAST(rt0.c1 AS REAL), (- (rt0.c2)), (rt0.c0 IN (rt0.c2)), rt0.c2 COLLATE BINARY))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END, (rt0.c0 IN ('+'))))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(DISTINCT rt0.c0), CAST(rt0.c1 AS REAL), (- (rt0.c2)), (rt0.c0 IN (rt0.c2)), rt0.c2 COLLATE BINARY))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END, (rt0.c0 IN ('+')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((UNLIKELY(DISTINCT rt0.c0), CAST(rt0.c1 AS REAL), (- (rt0.c2)), (rt0.c0 IN (rt0.c2)), rt0.c2 COLLATE BINARY))<=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, rt0.c0 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END, (rt0.c0 IN ('+'))))));
SELECT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))AND(0.9394283600336634))))) ORDER BY ((((((((CAST(vt0.c0 AS INTEGER))OR(((v0.c0)&(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM)))AND((((x''))!=((v0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))AND(0.9394283600336634))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS INTEGER))OR(((v0.c0)&(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM)))AND((((x''))<>((v0.c1))))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))AND(0.9394283600336634))))) ORDER BY ((((((((CAST(vt0.c0 AS INTEGER))OR(((v0.c0)&(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM)))AND((((x''))!=((v0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))AND(0.9394283600336634))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS INTEGER))OR(((v0.c0)&(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM)))AND((((x''))<>((v0.c1))))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((((((((v0.c0)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))AND(0.9394283600336634))))) ORDER BY ((((((((CAST(vt0.c0 AS INTEGER))OR(((v0.c0)&(v0.c2)))))OR(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE RTRIM)))AND((((x''))!=((v0.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (SQLITE_COMPILEOPTION_USED(rt0.c2) IN ()) WHERE (vt0.c0) ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END)AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))))AND((- (vt0.c0)))))OR(JULIANDAY(x'', rt0.c0, rt0.c2, '910800391', rt0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0xffffffffc4c65b2f END))  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (SQLITE_COMPILEOPTION_USED(rt0.c2) IN ()) ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END)AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))))AND((- (vt0.c0)))))OR(JULIANDAY(x'', rt0.c0, rt0.c2, '910800391', rt0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0Xffffffffc4c65b2f END))  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) ISNULL) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (SQLITE_COMPILEOPTION_USED(rt0.c2) IN ()) WHERE (vt0.c0) ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END)AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))))AND((- (vt0.c0)))))OR(JULIANDAY(x'', rt0.c0, rt0.c2, '910800391', rt0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0xffffffffc4c65b2f END))  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (SQLITE_COMPILEOPTION_USED(rt0.c2) IN ()) ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END)AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))))AND((- (vt0.c0)))))OR(JULIANDAY(x'', rt0.c0, rt0.c2, '910800391', rt0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0Xffffffffc4c65b2f END))  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) ISNULL) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (SQLITE_COMPILEOPTION_USED(rt0.c2) IN ()) WHERE (vt0.c0) ORDER BY ((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 END)AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))))AND((- (vt0.c0)))))OR(JULIANDAY(x'', rt0.c0, rt0.c2, '910800391', rt0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0xffffffffc4c65b2f END))  NULLS FIRST, ((rt0.c1 COLLATE RTRIM) ISNULL) DESC;
SELECT ALL * FROM rt0, v0 WHERE ((+ ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((x'' IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((+ ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((x'' IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((+ ((x'' IN ()))));
SELECT COUNT(*) FROM v0 WHERE (GLOB(((v0.c2)<=(v0.c2)), CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c0)>(v0.c1))) AND (v0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((v0.c2)<=(v0.c2)), CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c0)>(v0.c1))) AND (v0.c2)) DESC);
SELECT COUNT(*) FROM v0 WHERE (GLOB(((v0.c2)<=(v0.c2)), CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c0)>(v0.c1))) AND (v0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((v0.c2)<=(v0.c2)), CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c0)>(v0.c1))) AND (v0.c2)) DESC);
SELECT COUNT(*) FROM v0 WHERE (GLOB(((v0.c2)<=(v0.c2)), CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) ORDER BY (((v0.c1 IN ())) NOT BETWEEN (((v0.c0)>(v0.c1))) AND (v0.c2)) DESC;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c2)>(v0.c0)))OR((- (v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))) ORDER BY ((v0.c2) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)>(v0.c0)))OR((- (v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c2)>(v0.c0)))OR((- (v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))) ORDER BY ((v0.c2) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)>(v0.c0)))OR((- (v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c2)>(v0.c0)))OR((- (v0.c1)))))AND((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))) ORDER BY ((v0.c2) BETWEEN (v0.c0 COLLATE NOCASE) AND ((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c1))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))==((('-1747148374' IN ()))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))=((('-1747148374' IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))==((('-1747148374' IN ()))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))=((('-1747148374' IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))==((('-1747148374' IN ()))))) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((0.9320636851281472))>((rt0.c0)))))<=((rt0.c0)))) ORDER BY TYPEOF(rt0.c1) COLLATE NOCASE  NULLS FIRST, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.9320636851281472))>((rt0.c0)))))<=((rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(rt0.c1) COLLATE NOCASE  NULLS FIRST, rt0.c2 ASC);
SELECT ALL * FROM rt0 WHERE (((((((0.9320636851281472))>((rt0.c0)))))<=((rt0.c0)))) ORDER BY TYPEOF(rt0.c1) COLLATE NOCASE  NULLS FIRST, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.9320636851281472))>((rt0.c0)))))<=((rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(rt0.c1) COLLATE NOCASE  NULLS FIRST, rt0.c2 ASC);
SELECT ALL * FROM rt0 WHERE (((((((0.9320636851281472))>((rt0.c0)))))<=((rt0.c0)))) ORDER BY TYPEOF(rt0.c1) COLLATE NOCASE  NULLS FIRST, rt0.c2 ASC;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c2)<<(rt0.c0)) IN ())) ORDER BY (((NOT (rt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (v0.c1)), CAST(rt0.c1 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<<(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((NOT (rt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (v0.c1)), CAST(rt0.c1 AS INTEGER) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c2)<<(rt0.c0)) IN ())) ORDER BY (((NOT (rt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (v0.c1)), CAST(rt0.c1 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<<(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((NOT (rt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (v0.c1)), CAST(rt0.c1 AS INTEGER) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c2)<<(rt0.c0)) IN ())) ORDER BY (((NOT (rt0.c1))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (v0.c1)), CAST(rt0.c1 AS INTEGER) COLLATE BINARY;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((~ (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.8016551627484869) ORDER BY ((((((v0.c2)OR(0.5493317299598844)))AND(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((0.8016551627484869) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c2)OR(0.5493317299598844)))AND(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.8016551627484869) ORDER BY ((((((v0.c2)OR(0.5493317299598844)))AND(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((0.8016551627484869) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c2)OR(0.5493317299598844)))AND(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.8016551627484869) ORDER BY ((((((v0.c2)OR(0.5493317299598844)))AND(vt0.c0))) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('0.3012533183502112');
SELECT SUM(count) FROM (SELECT (('0.3012533183502112') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('0.3012533183502112');
SELECT SUM(count) FROM (SELECT (('0.3012533183502112') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('0.3012533183502112');
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c2)-(v0.c0))))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c2)-(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NULL IN ()) ASC);
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c2)-(v0.c0))))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c2)-(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NULL IN ()) ASC);
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c2)-(v0.c0))))) ORDER BY (NULL IN ()) ASC;
SELECT * FROM v0, rt0 WHERE (((((v0.c1) IS TRUE)) NOTNULL)) ORDER BY (((v0.c1)) NOT BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((RTRIM(v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c1)) NOT BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((RTRIM(v0.c2)))) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((v0.c1) IS TRUE)) NOTNULL)) ORDER BY (((v0.c1)) NOT BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((RTRIM(v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c1)) NOT BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((RTRIM(v0.c2)))) DESC  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (((((v0.c1) IS TRUE)) NOTNULL)) ORDER BY (((v0.c1)) NOT BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((RTRIM(v0.c2)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((NULLIF(DISTINCT vt0.c0, rt0.c0))<=((rt0.c1 IN (vt0.c0, rt0.c2))))) ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt0.c0, rt0.c0))<=((rt0.c1 IN (vt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((NULLIF(DISTINCT vt0.c0, rt0.c0))<=((rt0.c1 IN (vt0.c0, rt0.c2))))) ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt0.c0, rt0.c0))<=((rt0.c1 IN (vt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((NULLIF(DISTINCT vt0.c0, rt0.c0))<=((rt0.c1 IN (vt0.c0, rt0.c2))))) ORDER BY ((vt0.c0)*(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((v0.c0))<(((rt0.c0 IN ()))))) ORDER BY CASE ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c1 AS REAL) ELSE (((v0.c2, rt0.c2, v0.c0))==((rt0.c2, v0.c0, rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))<(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c1 AS REAL) ELSE (((v0.c2, rt0.c2, v0.c0))=((rt0.c2, v0.c0, rt0.c2))) END);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((v0.c0))<(((rt0.c0 IN ()))))) ORDER BY CASE ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c1 AS REAL) ELSE (((v0.c2, rt0.c2, v0.c0))==((rt0.c2, v0.c0, rt0.c2))) END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))<(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CASE ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c1 AS REAL) ELSE (((v0.c2, rt0.c2, v0.c0))=((rt0.c2, v0.c0, rt0.c2))) END);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((v0.c0))<(((rt0.c0 IN ()))))) ORDER BY CASE ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN CAST(rt0.c0 AS INTEGER) THEN CAST(rt0.c1 AS REAL) ELSE (((v0.c2, rt0.c2, v0.c0))==((rt0.c2, v0.c0, rt0.c2))) END;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c1 THEN (((v0.c2, v0.c0, NULL)) BETWEEN ((v0.c1, v0.c2, v0.c2)) AND ((v0.c2, v0.c2, v0.c1))) WHEN CAST(v0.c1 AS INTEGER) THEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END WHEN (((v0.c2))>((v0.c2))) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 THEN (((v0.c2, v0.c0, NULL)) BETWEEN ((v0.c1, v0.c2, v0.c2)) AND ((v0.c2, v0.c2, v0.c1))) WHEN CAST(v0.c1 AS INTEGER) THEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END WHEN (((v0.c2))>((v0.c2))) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c1 THEN (((v0.c2, v0.c0, NULL)) BETWEEN ((v0.c1, v0.c2, v0.c2)) AND ((v0.c2, v0.c2, v0.c1))) WHEN CAST(v0.c1 AS INTEGER) THEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END WHEN (((v0.c2))>((v0.c2))) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c1 THEN (((v0.c2, v0.c0, NULL)) BETWEEN ((v0.c1, v0.c2, v0.c2)) AND ((v0.c2, v0.c2, v0.c1))) WHEN CAST(v0.c1 AS INTEGER) THEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END WHEN (((v0.c2))>((v0.c2))) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c1 THEN (((v0.c2, v0.c0, NULL)) BETWEEN ((v0.c1, v0.c2, v0.c2)) AND ((v0.c2, v0.c2, v0.c1))) WHEN CAST(v0.c1 AS INTEGER) THEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END WHEN (((v0.c2))>((v0.c2))) THEN (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))) END);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE));
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE (CASE (((v0.c1))>(('0.0')))  WHEN CAST(rt0.c1 AS REAL) THEN x'' COLLATE RTRIM ELSE ((v0.c1)|(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c1))>(('0.0')))  WHEN CAST(rt0.c1 AS REAL) THEN x'' COLLATE RTRIM ELSE ((v0.c1)|(v0.c0)) END) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE (CASE (((v0.c1))>(('0.0')))  WHEN CAST(rt0.c1 AS REAL) THEN x'' COLLATE RTRIM ELSE ((v0.c1)|(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c1))>(('0.0')))  WHEN CAST(rt0.c1 AS REAL) THEN x'' COLLATE RTRIM ELSE ((v0.c1)|(v0.c0)) END) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN v0 WHERE (CASE (((v0.c1))>(('0.0')))  WHEN CAST(rt0.c1 AS REAL) THEN x'' COLLATE RTRIM ELSE ((v0.c1)|(v0.c0)) END);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR('-92031248')))AND((rt0.c1 IN ()))))AND(((vt0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR('-92031248')))AND((rt0.c1 IN ()))))AND(((vt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR('-92031248')))AND((rt0.c1 IN ()))))AND(((vt0.c0)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR('-92031248')))AND((rt0.c1 IN ()))))AND(((vt0.c0)*(rt0.c2))))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c0)OR(v0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR('-92031248')))AND((rt0.c1 IN ()))))AND(((vt0.c0)*(rt0.c2)))));
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (LOWER(v0.c2)) AND ((NULL IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (LOWER(v0.c2)) AND ((NULL IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (LOWER(v0.c2)) AND ((NULL IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (LOWER(v0.c2)) AND ((NULL IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN (LOWER(v0.c2)) AND ((NULL IN (v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((HEX(DISTINCT vt0.c0), ((vt0.c0)-(vt0.c0)), ((vt0.c0)&(vt0.c0))))<>((CAST(vt0.c0 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(DISTINCT vt0.c0), ((vt0.c0)-(vt0.c0)), ((vt0.c0)&(vt0.c0))))<>((CAST(vt0.c0 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((HEX(DISTINCT vt0.c0), ((vt0.c0)-(vt0.c0)), ((vt0.c0)&(vt0.c0))))<>((CAST(vt0.c0 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(DISTINCT vt0.c0), ((vt0.c0)-(vt0.c0)), ((vt0.c0)&(vt0.c0))))<>((CAST(vt0.c0 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((HEX(DISTINCT vt0.c0), ((vt0.c0)-(vt0.c0)), ((vt0.c0)&(vt0.c0))))<>((CAST(vt0.c0 AS TEXT), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS REAL)) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(NULL)))OR(((v0.c1)>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(NULL)))OR(((v0.c1)>(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS REAL)) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(NULL)))OR(((v0.c1)>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(NULL)))OR(((v0.c1)>(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS REAL)) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(NULL)))OR(((v0.c1)>(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (HEX((((v0.c0))<=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((v0.c0))<=((vt0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (HEX((((v0.c0))<=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((v0.c0))<=((vt0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (HEX((((v0.c0))<=((vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (NULL))) NOT NULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (NULL))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (NULL))) NOT NULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (NULL))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (NULL))) NOT NULL)) ORDER BY vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (-1486937881) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN rt0.c0 THEN 0.13359761822262395 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END)) DESC, (((((rt0.c0) NOT NULL)))>=((vt0.c0)));
SELECT SUM(count) FROM (SELECT ((-1486937881) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN rt0.c0 THEN 0.13359761822262395 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END)) DESC, (((((rt0.c0) NOT NULL)))>=((vt0.c0))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (-1486937881) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN rt0.c0 THEN 0.13359761822262395 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END)) DESC, (((((rt0.c0) NOT NULL)))>=((vt0.c0)));
SELECT SUM(count) FROM (SELECT ((-1486937881) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN rt0.c0 THEN 0.13359761822262395 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END)) DESC, (((((rt0.c0) NOT NULL)))>=((vt0.c0))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (-1486937881) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN rt0.c0 THEN 0.13359761822262395 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 END)) DESC, (((((rt0.c0) NOT NULL)))>=((vt0.c0)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND ((rt0.c1))) INNER JOIN rt0 ON v0.c0 WHERE (CASE WHEN ((v0.c2)AND(x'')) THEN (- (rt0.c1)) ELSE ((v0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2)AND(x'')) THEN (- (rt0.c1)) ELSE ((v0.c1) NOT NULL) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND ((rt0.c1))) INNER JOIN rt0 ON v0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND ((rt0.c1))) INNER JOIN rt0 ON v0.c0 WHERE (CASE WHEN ((v0.c2)AND(x'')) THEN (- (rt0.c1)) ELSE ((v0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2)AND(x'')) THEN (- (rt0.c1)) ELSE ((v0.c1) NOT NULL) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND ((rt0.c1))) INNER JOIN rt0 ON v0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c1) AND (rt0.c2)))) AND ((rt0.c1))) INNER JOIN rt0 ON v0.c0 WHERE (CASE WHEN ((v0.c2)AND(x'')) THEN (- (rt0.c1)) ELSE ((v0.c1) NOT NULL) END);
SELECT ALL * FROM v0, rt0 WHERE (NULL) ORDER BY (~ (('?v땈' IN ()))) DESC, rt0.c2 ASC  NULLS LAST, ((rt0.c2) BETWEEN (-58859129) AND (((v0.c0)<<(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (('?v땈' IN ()))) DESC, rt0.c2 ASC  NULLS LAST, ((rt0.c2) BETWEEN (-58859129) AND (((v0.c0)<<(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (NULL) ORDER BY (~ (('?v땈' IN ()))) DESC, rt0.c2 ASC  NULLS LAST, ((rt0.c2) BETWEEN (-58859129) AND (((v0.c0)<<(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (~ (('?v땈' IN ()))) DESC, rt0.c2 ASC  NULLS LAST, ((rt0.c2) BETWEEN (-58859129) AND (((v0.c0)<<(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (NULL) ORDER BY (~ (('?v땈' IN ()))) DESC, rt0.c2 ASC  NULLS LAST, ((rt0.c2) BETWEEN (-58859129) AND (((v0.c0)<<(rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c1))) IN (CAST(0.6968292212616248 AS REAL), ((v0.c2) IS FALSE), CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN v0 ON ((rt0.c0)IS NOT(NULL)) COLLATE RTRIM WHERE ((((~ (v0.c0))) BETWEEN (CASE rt0.c1  WHEN v0.c1 THEN rt0.c2 END) AND (((v0.c1)!=(v0.c0))))) ORDER BY (((((v0.c1))<=((rt0.c0)))) BETWEEN ((v0.c2 IN ())) AND (v0.c2)) DESC, ((v0.c2)AND(rt0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ('0.16121319828993586' IN (((v0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) BETWEEN (CASE rt0.c1  WHEN v0.c1 THEN rt0.c2 END) AND (((v0.c1)!=(v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c1))) IN (CAST(0.6968292212616248 AS REAL), ((v0.c2) IS FALSE), CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN v0 ON ((rt0.c0)IS NOT(NULL)) COLLATE RTRIM ORDER BY (((((v0.c1))<=((rt0.c0)))) BETWEEN ((v0.c2 IN ())) AND (v0.c2)) DESC, ((v0.c2)AND(rt0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ('0.16121319828993586' IN (((v0.c2) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c1))) IN (CAST(0.6968292212616248 AS REAL), ((v0.c2) IS FALSE), CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN v0 ON ((rt0.c0)IS NOT(NULL)) COLLATE RTRIM WHERE ((((~ (v0.c0))) BETWEEN (CASE rt0.c1  WHEN v0.c1 THEN rt0.c2 END) AND (((v0.c1)!=(v0.c0))))) ORDER BY (((((v0.c1))<=((rt0.c0)))) BETWEEN ((v0.c2 IN ())) AND (v0.c2)) DESC, ((v0.c2)AND(rt0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ('0.16121319828993586' IN (((v0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) BETWEEN (CASE rt0.c1  WHEN v0.c1 THEN rt0.c2 END) AND (((v0.c1)!=(v0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)) NOT BETWEEN ((v0.c1)) AND ((rt0.c1))) IN (CAST(0.6968292212616248 AS REAL), ((v0.c2) IS FALSE), CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN v0 ON ((rt0.c0)IS NOT(NULL)) COLLATE RTRIM ORDER BY (((((v0.c1))<=((rt0.c0)))) BETWEEN ((v0.c2 IN ())) AND (v0.c2)) DESC, ((v0.c2)AND(rt0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ('0.16121319828993586' IN (((v0.c2) NOTNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN NULLIF(DISTINCT rt0.c2, 'B&') THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END END WHERE (load_extension((((('0.6968292212616248')AND(x'')))AND('')), CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((('0.6968292212616248')AND(x'')))AND('')), CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN NULLIF(DISTINCT rt0.c2, 'B&') THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN NULLIF(DISTINCT rt0.c2, 'B&') THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END END WHERE (load_extension((((('0.6968292212616248')AND(x'')))AND('')), CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((('0.6968292212616248')AND(x'')))AND('')), CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN NULLIF(DISTINCT rt0.c2, 'B&') THEN CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END END);
SELECT ALL * FROM v0 WHERE ((((((((v0.c0)OR(0.4149950923478465)))OR(v0.c2)), ((NULL) BETWEEN (v0.c2) AND (v0.c1)), (- (x''))))<(((v0.c1 IN ()), (v0.c1 IN ()), ((v0.c0)=(v0.c1)))))) ORDER BY v0.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)OR(0.4149950923478465)))OR(v0.c2)), ((NULL) BETWEEN (v0.c2) AND (v0.c1)), (- (x''))))<(((v0.c1 IN ()), (v0.c1 IN ()), ((v0.c0)=(v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c2 COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((((v0.c0)OR(0.4149950923478465)))OR(v0.c2)), ((NULL) BETWEEN (v0.c2) AND (v0.c1)), (- (x''))))<(((v0.c1 IN ()), (v0.c1 IN ()), ((v0.c0)=(v0.c1)))))) ORDER BY v0.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)OR(0.4149950923478465)))OR(v0.c2)), ((NULL) BETWEEN (v0.c2) AND (v0.c1)), (- (x''))))<(((v0.c1 IN ()), (v0.c1 IN ()), ((v0.c0)=(v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c2 COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((((v0.c0)OR(0.4149950923478465)))OR(v0.c2)), ((NULL) BETWEEN (v0.c2) AND (v0.c1)), (- (x''))))<(((v0.c1 IN ()), (v0.c1 IN ()), ((v0.c0)=(v0.c1)))))) ORDER BY v0.c2 COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(v0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2)) IN ((- (vt0.c0)), (((v0.c2, v0.c0, v0.c2, vt0.c0, v0.c0))<((v0.c0, rt0.c2, rt0.c1, rt0.c1, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2)) IN ((- (vt0.c0)), (((v0.c2, v0.c0, v0.c2, vt0.c0, v0.c0))<((v0.c0, rt0.c2, rt0.c1, rt0.c1, vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(v0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2)) IN ((- (vt0.c0)), (((v0.c2, v0.c0, v0.c2, vt0.c0, v0.c0))<((v0.c0, rt0.c2, rt0.c1, rt0.c1, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2)) IN ((- (vt0.c0)), (((v0.c2, v0.c0, v0.c2, vt0.c0, v0.c0))<((v0.c0, rt0.c2, rt0.c1, rt0.c1, vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(v0.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (((rt0.c0) BETWEEN (rt0.c2) AND (v0.c2)) IN ((- (vt0.c0)), (((v0.c2, v0.c0, v0.c2, vt0.c0, v0.c0))<((v0.c0, rt0.c2, rt0.c1, rt0.c1, vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((TYPEOF(DISTINCT v0.c2)) IS FALSE)) ORDER BY (CAST(rt0.c2 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT v0.c2)) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (CAST(rt0.c2 AS REAL) IN ()));
SELECT ALL * FROM rt0, v0 WHERE (((TYPEOF(DISTINCT v0.c2)) IS FALSE)) ORDER BY (CAST(rt0.c2 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT v0.c2)) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (CAST(rt0.c2 AS REAL) IN ()));
SELECT ALL * FROM rt0, v0 WHERE (((TYPEOF(DISTINCT v0.c2)) IS FALSE)) ORDER BY (CAST(rt0.c2 AS REAL) IN ());
SELECT COUNT(*) FROM v0 WHERE (0.28341750262540144);
SELECT SUM(count) FROM (SELECT ((0.28341750262540144) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.28341750262540144);
SELECT SUM(count) FROM (SELECT ((0.28341750262540144) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.28341750262540144);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c1 IN (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c1 IN (rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c1 IN (rt0.c1))) ISNULL));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)AND(NULL)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)) ORDER BY 0xffffffffd238a5f6 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(NULL)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffffd238a5f6 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)AND(NULL)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)) ORDER BY 0xffffffffd238a5f6 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(NULL)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY 0xffffffffd238a5f6 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)AND(NULL)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)) ORDER BY 0xffffffffd238a5f6 DESC  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (+ (((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS('0.4099213402600579')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS('0.4099213402600579'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS('0.4099213402600579')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS('0.4099213402600579'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS('0.4099213402600579')));
SELECT * FROM vt0, rt0, v0 WHERE (((v0.c2 COLLATE BINARY)=(((((((((1.673173218E9)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))) ORDER BY 'Ny'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY)==(((((((((1.673173218E9)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY 'Ny'  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (((v0.c2 COLLATE BINARY)=(((((((((1.673173218E9)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))) ORDER BY 'Ny'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE BINARY)==(((((((((1.673173218E9)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY 'Ny'  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (((v0.c2 COLLATE BINARY)=(((((((((1.673173218E9)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))) ORDER BY 'Ny'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (highlight(((v0.c1) NOT NULL), vt0.c0 COLLATE NOCASE, (NOT (vt0.c0)), 0x4709177d)) ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN v0.c0 END) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((~ (v0.c1)))) DESC, (~ (((((v0.c0)OR(v0.c1)))OR(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((highlight(((v0.c1) NOT NULL), vt0.c0 COLLATE NOCASE, (NOT (vt0.c0)), 0X4709177d)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN v0.c0 END) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((~ (v0.c1)))) DESC, (~ (((((v0.c0)OR(v0.c1)))OR(v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (highlight(((v0.c1) NOT NULL), vt0.c0 COLLATE NOCASE, (NOT (vt0.c0)), 0x4709177d)) ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN v0.c0 END) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((~ (v0.c1)))) DESC, (~ (((((v0.c0)OR(v0.c1)))OR(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((highlight(((v0.c1) NOT NULL), vt0.c0 COLLATE NOCASE, (NOT (vt0.c0)), 0X4709177d)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE v0.c1  WHEN v0.c2 THEN v0.c0 END) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND ((~ (v0.c1)))) DESC, (~ (((((v0.c0)OR(v0.c1)))OR(v0.c2)))) ASC);
SELECT * FROM vt0, v0 WHERE (((vt0.c0) BETWEEN (v0.c2) AND ('9223372036854775807')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (v0.c2) AND ('9223372036854775807')) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((vt0.c0) BETWEEN (v0.c2) AND ('9223372036854775807')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (v0.c2) AND ('9223372036854775807')) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((vt0.c0) BETWEEN (v0.c2) AND ('9223372036854775807')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((1.307904444E9)%(v0.c0))  WHEN ((v0.c1)IS NOT(v0.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((1.307904444E9)%(v0.c0))  WHEN ((v0.c1)IS NOT(v0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((1.307904444E9)%(v0.c0))  WHEN ((v0.c1)IS NOT(v0.c0)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ((1.307904444E9)%(v0.c0))  WHEN ((v0.c1)IS NOT(v0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((1.307904444E9)%(v0.c0))  WHEN ((v0.c1)IS NOT(v0.c0)) THEN vt0.c0 END);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE json_array_length(vt0.c0)  WHEN ((((rt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE ((((rt0.c1)OR(v0.c0)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(vt0.c0)  WHEN ((((rt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE ((((rt0.c1)OR(v0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON rt0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE json_array_length(vt0.c0)  WHEN ((((rt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE ((((rt0.c1)OR(v0.c0)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE json_array_length(vt0.c0)  WHEN ((((rt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE ((((rt0.c1)OR(v0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0 LEFT OUTER JOIN vt0 ON 0.3721039010720324 WHERE (HEX(DISTINCT ((((((((v0.c1)OR(x'')))OR(x'')))AND(v0.c1)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((((((v0.c1)OR(x'')))OR(x'')))AND(v0.c1)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON 0.3721039010720324);
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0 LEFT OUTER JOIN vt0 ON 0.3721039010720324 WHERE (HEX(DISTINCT ((((((((v0.c1)OR(x'')))OR(x'')))AND(v0.c1)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((((((((v0.c1)OR(x'')))OR(x'')))AND(v0.c1)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON 0.3721039010720324);
SELECT COUNT(*) FROM rt0 NOT INDEXED, v0 LEFT OUTER JOIN vt0 ON 0.3721039010720324 WHERE (HEX(DISTINCT ((((((((v0.c1)OR(x'')))OR(x'')))AND(v0.c1)))AND(rt0.c2))));
SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0)))<<(ABS(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0)))<<(ABS(v0.c1)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0)))<<(ABS(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0)))<<(ABS(v0.c1)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((rt0.c1) BETWEEN (v0.c1) AND (vt0.c0)))<<(ABS(v0.c1))));
SELECT ALL * FROM rt0 WHERE ((NOT ('-1539596153'))) ORDER BY (NOT (((rt0.c0)<(rt0.c0)))) DESC  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('-1539596153'))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c0)<(rt0.c0)))) DESC  NULLS LAST, rt0.c0);
SELECT ALL * FROM rt0 WHERE ((NOT ('-1539596153'))) ORDER BY (NOT (((rt0.c0)<(rt0.c0)))) DESC  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('-1539596153'))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c0)<(rt0.c0)))) DESC  NULLS LAST, rt0.c0);
SELECT ALL * FROM rt0 WHERE ((NOT ('-1539596153'))) ORDER BY (NOT (((rt0.c0)<(rt0.c0)))) DESC  NULLS LAST, rt0.c0;
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ ((NOT (rt0.c1)))) WHERE ((((v0.c1 IN (rt0.c0, vt0.c0)))<>(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c0)GLOB(vt0.c0))) NOT BETWEEN (CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END) AND (((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (rt0.c0, vt0.c0)))<>(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ ((NOT (rt0.c1)))) ORDER BY ((((rt0.c0)GLOB(vt0.c0))) NOT BETWEEN (CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END) AND (((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ ((NOT (rt0.c1)))) WHERE ((((v0.c1 IN (rt0.c0, vt0.c0)))<>(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c0)GLOB(vt0.c0))) NOT BETWEEN (CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END) AND (((v0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN (rt0.c0, vt0.c0)))<>(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ ((NOT (rt0.c1)))) ORDER BY ((((rt0.c0)GLOB(vt0.c0))) NOT BETWEEN (CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END) AND (((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON (+ ((NOT (rt0.c1)))) WHERE ((((v0.c1 IN (rt0.c0, vt0.c0)))<>(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c0)GLOB(vt0.c0))) NOT BETWEEN (CASE v0.c1  WHEN v0.c2 THEN vt0.c0 ELSE v0.c0 END) AND (((v0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY (((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))OR(((v0.c2) IS FALSE))) DESC  NULLS FIRST, (((v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((v0.c1))) DESC  NULLS FIRST, ((((v0.c0)>>(v0.c0))) ISNULL) DESC  NULLS FIRST, ((((((((((x'') ISNULL))OR((('4Uod') NOTNULL))))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0) ISNULL))))AND(ABS(v0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))OR(((v0.c2) IS FALSE))) DESC  NULLS FIRST, (((v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((v0.c1))) DESC  NULLS FIRST, ((((v0.c0)>>(v0.c0))) ISNULL) DESC  NULLS FIRST, ((((((((((x'') ISNULL))OR((('4Uod') NOTNULL))))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0) ISNULL))))AND(ABS(v0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY (((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))OR(((v0.c2) IS FALSE))) DESC  NULLS FIRST, (((v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((v0.c1))) DESC  NULLS FIRST, ((((v0.c0)>>(v0.c0))) ISNULL) DESC  NULLS FIRST, ((((((((((x'') ISNULL))OR((('4Uod') NOTNULL))))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0) ISNULL))))AND(ABS(v0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))OR(((v0.c2) IS FALSE))) DESC  NULLS FIRST, (((v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((v0.c1))) DESC  NULLS FIRST, ((((v0.c0)>>(v0.c0))) ISNULL) DESC  NULLS FIRST, ((((((((((x'') ISNULL))OR((('4Uod') NOTNULL))))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0) ISNULL))))AND(ABS(v0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c2) ORDER BY (((((vt0.c0)) NOT BETWEEN ((v0.c1)) AND ((vt0.c0))))OR(((v0.c2) IS FALSE))) DESC  NULLS FIRST, (((v0.c2)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND ((v0.c1))) DESC  NULLS FIRST, ((((v0.c0)>>(v0.c0))) ISNULL) DESC  NULLS FIRST, ((((((((((x'') ISNULL))OR((('4Uod') NOTNULL))))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0) ISNULL))))AND(ABS(v0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))||(((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0)))||(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))||(((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0)))||(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))||(((vt0.c0)AND(vt0.c0)))));
SELECT * FROM v0, rt0, vt0 WHERE (vt0.c0) ORDER BY (((((NOT (rt0.c0)))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))AND(((vt0.c0)<<(v0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((NOT (rt0.c0)))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))AND(((vt0.c0)<<(v0.c0)))));
SELECT * FROM v0, rt0, vt0 WHERE (vt0.c0) ORDER BY (((((NOT (rt0.c0)))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))AND(((vt0.c0)<<(v0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((NOT (rt0.c0)))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))AND(((vt0.c0)<<(v0.c0)))));
SELECT * FROM v0, rt0, vt0 WHERE (vt0.c0) ORDER BY (((((NOT (rt0.c0)))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))))AND(((vt0.c0)<<(v0.c0))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON v0.c1 WHERE (LIKELY(DISTINCT vt0.c0)) ORDER BY 0.09931556290514043 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT vt0.c0)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON v0.c1 ORDER BY 0.09931556290514043 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON v0.c1 WHERE (LIKELY(DISTINCT vt0.c0)) ORDER BY 0.09931556290514043 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT vt0.c0)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON v0.c1 ORDER BY 0.09931556290514043 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON v0.c1 WHERE (LIKELY(DISTINCT vt0.c0)) ORDER BY 0.09931556290514043 DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((NULLIF(DISTINCT v0.c0, v0.c0))>(CAST(v0.c2 AS TEXT)))) ORDER BY CAST(((v0.c1)>=(v0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT v0.c0, v0.c0))>(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c1)>=(v0.c0)) AS INTEGER)  NULLS LAST);
SELECT * FROM v0 WHERE (((NULLIF(DISTINCT v0.c0, v0.c0))>(CAST(v0.c2 AS TEXT)))) ORDER BY CAST(((v0.c1)>=(v0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT v0.c0, v0.c0))>(CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c1)>=(v0.c0)) AS INTEGER)  NULLS LAST);
SELECT * FROM v0 WHERE (((NULLIF(DISTINCT v0.c0, v0.c0))>(CAST(v0.c2 AS TEXT)))) ORDER BY CAST(((v0.c1)>=(v0.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((((((((((rt0.c2)AND('f,5120ug른')))OR('MW')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0.20662317908234984)))OR(((rt0.c2)>>(rt0.c1)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))))AND(((rt0.c1)%(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((+ (rt0.c0)))<>(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((((((rt0.c2)AND('f,5120ug른')))OR('MW')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0.20662317908234984)))OR(((rt0.c2)>>(rt0.c1)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))))AND(((rt0.c1)%(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c0)))!=(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((((((((((rt0.c2)AND('f,5120ug른')))OR('MW')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0.20662317908234984)))OR(((rt0.c2)>>(rt0.c1)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))))AND(((rt0.c1)%(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((+ (rt0.c0)))<>(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((((((rt0.c2)AND('f,5120ug른')))OR('MW')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0.20662317908234984)))OR(((rt0.c2)>>(rt0.c1)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))))AND(((rt0.c1)%(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c0)))!=(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((((((((((rt0.c2)AND('f,5120ug른')))OR('MW')))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(0.20662317908234984)))OR(((rt0.c2)>>(rt0.c1)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))))AND(((rt0.c1)%(rt0.c0)))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((+ (rt0.c0)))<>(CAST(rt0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rtreenode(rt0.c1, rt0.c1))GLOB(CAST(rt0.c0 AS REAL)))) ORDER BY (((rt0.c1)<=(rt0.c0)) IN ((((rt0.c2, rt0.c1, 'IJ'))==((rt0.c0, rt0.c2, '1378546051')))));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt0.c1, rt0.c1))GLOB(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)<=(rt0.c0)) IN ((((rt0.c2, rt0.c1, 'IJ'))=((rt0.c0, rt0.c2, '1378546051'))))));
SELECT * FROM rt0 WHERE (((rtreenode(rt0.c1, rt0.c1))GLOB(CAST(rt0.c0 AS REAL)))) ORDER BY (((rt0.c1)<=(rt0.c0)) IN ((((rt0.c2, rt0.c1, 'IJ'))==((rt0.c0, rt0.c2, '1378546051')))));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt0.c1, rt0.c1))GLOB(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)<=(rt0.c0)) IN ((((rt0.c2, rt0.c1, 'IJ'))=((rt0.c0, rt0.c2, '1378546051'))))));
SELECT * FROM rt0 WHERE (((rtreenode(rt0.c1, rt0.c1))GLOB(CAST(rt0.c0 AS REAL)))) ORDER BY (((rt0.c1)<=(rt0.c0)) IN ((((rt0.c2, rt0.c1, 'IJ'))==((rt0.c0, rt0.c2, '1378546051')))));
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c1 COLLATE RTRIM)OR((NOT (v0.c2)))))OR((((-8.20619838E8)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((v0.c0) NOTNULL))))AND(v0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c1 COLLATE RTRIM)OR((NOT (v0.c2)))))OR((((-8.20619838E8)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((v0.c0) NOTNULL))))AND(v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c1 COLLATE RTRIM)OR((NOT (v0.c2)))))OR((((-8.20619838E8)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((v0.c0) NOTNULL))))AND(v0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c1 COLLATE RTRIM)OR((NOT (v0.c2)))))OR((((-8.20619838E8)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((v0.c0) NOTNULL))))AND(v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c1 COLLATE RTRIM)OR((NOT (v0.c2)))))OR((((-8.20619838E8)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(((v0.c0) NOTNULL))))AND(v0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((((v0.c1 IN ()))AND(((v0.c2)/(v0.c2)))))AND((rt0.c1 IN (v0.c2))))) ORDER BY (((((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(rt0.c0)))OR(v0.c2)), ((((rt0.c2)AND(v0.c1)))OR(rt0.c1)), (~ (rt0.c0))))>(((+ (-5.81246879E8)), (((vt0.c0))==((v0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))))) DESC, CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c1) NOT NULL) THEN (v0.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1 IN ()))AND(((v0.c2)/(v0.c2)))))AND((rt0.c1 IN (v0.c2))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0 ORDER BY (((((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(rt0.c0)))OR(v0.c2)), ((((rt0.c2)AND(v0.c1)))OR(rt0.c1)), (~ (rt0.c0))))>(((+ (-5.81246879E8)), (((vt0.c0))==((v0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))))) DESC, CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c1) NOT NULL) THEN (v0.c0 IN ()) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((((v0.c1 IN ()))AND(((v0.c2)/(v0.c2)))))AND((rt0.c1 IN (v0.c2))))) ORDER BY (((((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(rt0.c0)))OR(v0.c2)), ((((rt0.c2)AND(v0.c1)))OR(rt0.c1)), (~ (rt0.c0))))>(((+ (-5.81246879E8)), (((vt0.c0))==((v0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))))) DESC, CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c1) NOT NULL) THEN (v0.c0 IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1 IN ()))AND(((v0.c2)/(v0.c2)))))AND((rt0.c1 IN (v0.c2))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0 ORDER BY (((((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(rt0.c0)))OR(v0.c2)), ((((rt0.c2)AND(v0.c1)))OR(rt0.c1)), (~ (rt0.c0))))>(((+ (-5.81246879E8)), (((vt0.c0))==((v0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))))) DESC, CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c1) NOT NULL) THEN (v0.c0 IN ()) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((((v0.c1 IN ()))AND(((v0.c2)/(v0.c2)))))AND((rt0.c1 IN (v0.c2))))) ORDER BY (((((((((((v0.c1)OR(v0.c0)))AND(v0.c2)))OR(rt0.c0)))OR(v0.c2)), ((((rt0.c2)AND(v0.c1)))OR(rt0.c1)), (~ (rt0.c0))))>(((+ (-5.81246879E8)), (((vt0.c0))==((v0.c2))), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1))))) DESC, CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c1) NOT NULL) THEN (v0.c0 IN ()) END DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((((v0.c1)AND(v0.c2)))AND(rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (0.1341273908914279) AND (rt0.c2)) THEN ((rt0.c1)+(rt0.c2)) WHEN TRIM(DISTINCT v0.c0) THEN rt0.c2 COLLATE RTRIM ELSE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY CAST(load_extension(rt0.c0, rt0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN ((((v0.c1)AND(v0.c2)))AND(rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (0.1341273908914279) AND (rt0.c2)) THEN ((rt0.c1)+(rt0.c2)) WHEN TRIM(DISTINCT v0.c0) THEN rt0.c2 COLLATE RTRIM ELSE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(load_extension(rt0.c0, rt0.c0) AS REAL));
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((((v0.c1)AND(v0.c2)))AND(rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (0.1341273908914279) AND (rt0.c2)) THEN ((rt0.c1)+(rt0.c2)) WHEN TRIM(DISTINCT v0.c0) THEN rt0.c2 COLLATE RTRIM ELSE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY CAST(load_extension(rt0.c0, rt0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN ((((v0.c1)AND(v0.c2)))AND(rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (0.1341273908914279) AND (rt0.c2)) THEN ((rt0.c1)+(rt0.c2)) WHEN TRIM(DISTINCT v0.c0) THEN rt0.c2 COLLATE RTRIM ELSE ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(load_extension(rt0.c0, rt0.c0) AS REAL));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((((NULL) NOTNULL))GLOB((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c2, v0.c2, rt0.c2))))) INNER JOIN rt0 ON ((UPPER(vt0.c0)) BETWEEN ((((vt0.c0))>=((v0.c2)))) AND ((v0.c0 IN (rt0.c0)))) WHERE (CAST(v0.c2 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((NULL) NOTNULL))GLOB((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c2, v0.c2, rt0.c2))))) INNER JOIN rt0 ON ((UPPER(vt0.c0)) BETWEEN ((((vt0.c0))>=((v0.c2)))) AND ((v0.c0 IN (rt0.c0)))));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((((NULL) NOTNULL))GLOB((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c2, v0.c2, rt0.c2))))) INNER JOIN rt0 ON ((UPPER(vt0.c0)) BETWEEN ((((vt0.c0))>=((v0.c2)))) AND ((v0.c0 IN (rt0.c0)))) WHERE (CAST(v0.c2 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((NULL) NOTNULL))GLOB((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c2, v0.c2, rt0.c2))))) INNER JOIN rt0 ON ((UPPER(vt0.c0)) BETWEEN ((((vt0.c0))>=((v0.c2)))) AND ((v0.c0 IN (rt0.c0)))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((rt0.c1 IN (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((rt0.c1 IN (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((rt0.c1 IN (v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2 IN ()))AND(((((v0.c0)AND(v0.c0)))OR(v0.c2)))))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0))) IS TRUE), ((('q?')) NOT BETWEEN (((('')IS NOT(v0.c0)))) AND ((v0.c2 COLLATE BINARY))) DESC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c2 IN ()))AND(((((v0.c0)AND(v0.c0)))OR(v0.c2)))))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0))) IS TRUE), ((('q?')) NOT BETWEEN (((('')IS NOT(v0.c0)))) AND ((v0.c2 COLLATE BINARY))) DESC  NULLS FIRST, x'' ASC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2 IN ()))AND(((((v0.c0)AND(v0.c0)))OR(v0.c2)))))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0))) IS TRUE), ((('q?')) NOT BETWEEN (((('')IS NOT(v0.c0)))) AND ((v0.c2 COLLATE BINARY))) DESC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c2 IN ()))AND(((((v0.c0)AND(v0.c0)))OR(v0.c2)))))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0))) IS TRUE), ((('q?')) NOT BETWEEN (((('')IS NOT(v0.c0)))) AND ((v0.c2 COLLATE BINARY))) DESC  NULLS FIRST, x'' ASC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c2 IN ()))AND(((((v0.c0)AND(v0.c0)))OR(v0.c2)))))OR(CASE v0.c1  WHEN v0.c2 THEN v0.c2 END))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0))) IS TRUE), ((('q?')) NOT BETWEEN (((('')IS NOT(v0.c0)))) AND ((v0.c2 COLLATE BINARY))) DESC  NULLS FIRST, x'' ASC;
