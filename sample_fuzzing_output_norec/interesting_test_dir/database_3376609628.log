-- Time: 2024/06/09 14:51:48
-- Database: database28
-- Database version: 3.40.0
-- seed value: 3376609628
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1, c2, c3 UNINDEXED); -- 0ms;
END; -- 2ms;
UPDATE vt1 SET c1=0.04117482334110745; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt1(c0, c2, c1) VALUES (NULL, NULL, x'0941'); -- 1ms;
PRAGMA checkpoint_fullfsync = true; -- 1ms;
PRAGMA main.short_column_names = false; -- 0ms;
PRAGMA cache_size; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt2 SET (c0, c0)=('N>', '-1935006206'); -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES (0xfffffffff1ab3b01); -- 1ms;
INSERT OR IGNORE INTO vt2 VALUES (NULL); -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA incremental_vacuum(9223372036854775807); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA temp.busy_timeout = 0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('0.04117482334110745'), (-2037370148); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (COALESCE(0.04117482334110745, 0X67b23730, x'', '-1434952106') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1749031584 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.04117482334110745)AND(x'')))AND(x''))))<=(((x'1f6d' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1249335854') NOT BETWEEN (x'ea64') AND (NULL)))IS NOT(CAST('' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-718610957 sz=1829721063 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1434952106 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1749031584 -1434952106 -1146086254 1829721063'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=896779635 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1354022661' COLLATE RTRIM  WHEN NULL COLLATE RTRIM THEN '(Გr0w9뼅)ድ' WHEN CASE '-1249335854'  WHEN 0x761b3287 THEN NULL END THEN ((0.35862099996945773) NOT BETWEEN ('') AND ('-1749031584')) WHEN CASE WHEN NULL THEN 0.35862099996945773 WHEN NULL THEN 0.9939344219522932 WHEN 0.5864767225498817 THEN 0.0 END THEN ((NULL) IS FALSE) ELSE x'ed86' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'D'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('FALSE') BETWEEN ('2뻜2S{Გ') AND (NULL)))AND(((x'')AND(NULL)))))AND(((((NULL)OR(x'')))AND(0.18737427758534075)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1249335854 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2064645207'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (x'2995')) THEN INSTR('(Გr0w9뼅)ድ', '63843311') ELSE (('') NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1042375612 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('2073253264')))OR(((('94149923')) NOT BETWEEN ((-1434952106)) AND ((''))))))AND(CASE 0.6672534443585266  WHEN 'Ot' THEN x'' WHEN x'' THEN x'' WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1130279511 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Ꝁ'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=862056729 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '820057972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS(-91814654))) BETWEEN (((NULL)+('0.5864767225498817'))) AND ((((NULL, NULL, x''))<>((NULL, '2039165583', 'a蕪6,'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1935006206 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1094950004 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-103578069 sz=510141378 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1102042632 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1649760757 -382577081 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -63221801; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (x'd7e3')))AND((NULL IN (NULL)))))AND(((((x'')AND(NULL)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2059275545 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '443290603 sz=-1935006206 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=690938653 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-103578069 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.4354686110851256)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.45936811249842513) NOT BETWEEN ((('2')|(NULL))) AND ((((x'', x'', 'ạgj}O'''))<((0.12691418483062045, x'', '-200249318'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-627119661'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1501111579 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1501111579 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1777100673 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-704023402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-704023402 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.0047823607917601985) IS FALSE)))>=((((0.0047823607917601985) NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('#p\n||dL')); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'Dnx혈'  WHEN '381202284' THEN x'382e' ELSE '1829721063' END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') BETWEEN (x'536a') AND (x'63f9')), (((8.96779635E8)) NOT BETWEEN (('')) AND (('鱒(YBo%ᄱ꥙f'))), ((((((((((((x'61aaf110')AND(x'')))OR('*.7	')))OR('1476848753')))AND(0.45936811249842513)))OR(x'')))OR('rY'))))>((json_valid(NULL), CAST(NULL AS REAL), x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1777100673 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((0.683321964097564)) NOT BETWEEN ((-3.82577081E8)) AND ((0.11784477980483254))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1130279511 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.623609802013011)<=('')))!=(((0X41439c74) BETWEEN (0.9222750210531072) AND ('968144507')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1415003478 sz=1354022661 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-91814654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 2 sz=1051001579 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1769807492 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1769807492 1611455365 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1493651347 -522577146 sz=2093483315 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffa4d2f5ee COLLATE BINARY) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT 0x513940e9 COLLATE RTRIM, '2093483315'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-91814654'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT CAST('1152086382' AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1460758260'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -866877071 sz=-382577081 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-373273485 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE('qO*', 0.5864767225498817, '1'))<((((0.8112696269574404))>((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 657614764; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=463513408'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-43085176 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1094950004'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')>>(1.042375612E9)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1152086382 sz=-1579180511'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.26607540077966696 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1094950004 -373273485 sz=2123721992 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 2 sz=1874769896 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1874769896 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1 sz=1434739070'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('1354022661' IN (0.5673317359561072, x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1344515879 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1529678354'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0xffffffffc1deca00)OR((('1415003478') NOT BETWEEN (-2.063760022E9) AND (x'd890')))))OR(((NULL) IS TRUE))))OR((('-917824902')==(NULL)))))AND((- (0Xffffffff8ee6da4b)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1219974338'))<((x''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0x30291ee7 ELSE x'' END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2101354617 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.434952106E9)) NOT BETWEEN ((((x'') BETWEEN ('-103578069') AND (0.560219048922078)))) AND ((((0X3ea502eb)GLOB(0.4554386636681146))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-329519964 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'N3lv4'  WHEN x'' THEN 'qJ%0jUkXi' ELSE '()鱒a' END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('') NOTNULL))OR(((x'') NOT BETWEEN ('12') AND (NULL)))))OR(NULL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=969043843'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=820057972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2056112514 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xfffffffffadbf49c))<((']^F	Q '''))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=1169078687 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2001365827 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1579180511 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1185595190 sz=-1630569605'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME((('50964442') NOT BETWEEN (0.8364910019666139) AND ('')), CAST(0.16060974635985392 AS INTEGER), DATE(NULL, NULL, 0.8112696269574404)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=733577723 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1219974338')IS NOT(0.5953179171317324)) COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=1874769896 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 sz=-62420599 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1836587229 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0l#sXP肌')<=(x'')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (IFNULL(DISTINCT '0.04117482334110745', '-1527516848'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))<((0.04117482334110745))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-918150090) IS FALSE) THEN NULL COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=91980692'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(UNICODE(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('')=('')))AND('0.11784477980483254' COLLATE RTRIM)))OR(((x'') NOT BETWEEN (0.17802229450873241) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1705129173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((((((((('-1146086254')AND(NULL)))OR('C\a3A')))OR(NULL)))AND(NULL)))) AND ((((x'0e24')<<(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1791078641') BETWEEN (x'') AND ('0.4354686110851256'))) BETWEEN (CAST('-522577146' AS REAL)) AND (((0Xfffffffff7cf3d93)>>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND ('1^RD\nbcX'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=1354022661 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-481177121 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'6d47' IN ())) BETWEEN (x'' COLLATE BINARY) AND ('-481177121' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('L}')OR('')))AND(NULL)))||((0x292ee31d IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1649760757 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1324710834')OR(((((-1.016914271E9)AND(NULL)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN (x'') AND ('m	')))OR((((x'')) NOT BETWEEN ((1.051001579E9)) AND ((0.9304999690479067))))))AND(CAST(0X4c75f71e AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1777100673 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 -1606829631 sz=-1072482008 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1154573291922556)/(1.668005596E9))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffff8ee6da4b) BETWEEN ('0.683321964097564') AND (x'')), (((0.22347905633318854)) BETWEEN (('-1848326347')) AND ((x'c91258e7'))), '(Გr0w9뼅)ድ', (((532314829))<>((-2140833914))), (((8.20057972E8))!=(('鱒(YBo%ᄱ꥙f')))))<(((((1874769896))=((x'80fe'))), ((x'') NOT BETWEEN (NULL) AND ('-784270331')), (x'' IN ('.')), TOTAL_CHANGES(), (('-2037370148') ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-63044734 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 9.69043843E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.31123753093497264)) NOT BETWEEN (('')) AND (('-701664055')))  WHEN (NOT (NULL)) THEN x'' ELSE NULL COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2047934877 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-522698346 sz=-58731566 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1705129173 sz=50964442 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-635211079 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1578068638; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2039165583 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1e500)) BETWEEN ((x'bc67')) AND (('45198545'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-103578069 sz=-1820012415 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-255142373 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-2011686671 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)) NOT BETWEEN ((NULL)) AND ((x''))))AND(NULL)))AND((((NULL)) BETWEEN (('')) AND (('FALSE'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1205778660 512647090 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.419536200364654 COLLATE NOCASE)OR(((('1219974338', x'', x'', 0x7a8dc982, ''))>((NULL, ' Z3␶ ', x'', '?''#% K,', 0x41439c74))))))OR('U' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-547690176 2 sz=-1544194898'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '294955234 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-401125874'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM((+ (-1943670279))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-445818629'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-718610957 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1663691121'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 -1773213388 sz=-1848326347'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'6b76' IN ()))IS(((((0X4bcbe930)AND(0.3584550290291949)))AND(x'c789')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((4.43290603E8 IN (NULL)))AND((((-1.749031584E9)) BETWEEN (('?0l^\n剋vd')) AND ((NULL))))))AND(((-2135427750) NOT BETWEEN ('1319917936') AND ('0.9304999690479067')))))AND((NOT (NULL)))))AND(((((0.062037033810449116)AND(x'7aef')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-86248292 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND((((x'')) BETWEEN (('1102042632')) AND ((x''))), (('?0l^\n剋vd') IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1344515879 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1786207329 1957257525 sz=-329519964'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOTNULL)  WHEN ((x'') NOTNULL) THEN (((((((('oF')AND(x'')))OR('Lh녋a')))AND('KuX*Uy4')))AND('1769807492')) WHEN (((((((((((('&H')AND(0.5455001137569657)))OR(x'')))OR('Tక')))AND(x'')))AND(-1.434952106E9)))AND(NULL)) THEN (0.8637094995552415 IN ('1948033030', -259285934)) WHEN x'' THEN (~ ('C)a3A')) ELSE NULL END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '701692298 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')+(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1769807492 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-449005203 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1609454266 -474201797 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-245330040') NOT NULL); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '675738217 901397739 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2001365827'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1051001579'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-8531477 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1144673203 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-267215264 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2059275545'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '733577723 -200784005 sz=2025111136'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.12691418483062045)%(-561426123)))>=((+ ('-1016914271')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1754171494'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT ((NULL)LIKE('')), 0.19160773541410703 COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-91814654 sz=-1527516848 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2046309407'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1154573291922556)!=('-1060488951'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.560219048922078) BETWEEN (NULL) AND ('-228478'))) BETWEEN ((+ (NULL))) AND ((('-2101354617')LIKE(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.17802229450873241 COLLATE NOCASE AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1575632928 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch('', CASE 0X1819ac82  WHEN 0.8241098330415672 THEN NULL ELSE NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=2132564738'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-956787003') NOT BETWEEN ('-1630569605') AND ('-1791078641')))AND(CAST(x'' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '883444838 sz=-56367516 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\&5q') IS FALSE) IN ((('Q+')LIKE(x'a180')), CAST('1861629562' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8390581271877107) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x''))LIKE(((('<เ')) NOT BETWEEN ((x'77db')) AND (('460879726'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((x'')AND('r')))OR('YDOl|')))OR(0.7518296297181969)))AND(NULL)) THEN ((NULL)=(NULL)) ELSE (NULL IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-63221801'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 1102042632 sz=-1749031584 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'3d78' THEN '1358173454' ELSE x'' END)-(((x'b93e')<<('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=385916329'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '258913738 sz=1084149449'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=896779635 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.05962309564472701) BETWEEN (NULL) AND ('s0')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1252727331 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN x'' THEN NULL WHEN '-1579180511' THEN '-163131962' WHEN NULL THEN 859211299 END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(' CZ' AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT x'' COLLATE RTRIM); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=63843311'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1503450585 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(CASE WHEN x'' THEN 0.7780572355736858 END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-918150090'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0X27f1231c) NOTNULL)) BETWEEN (NULL COLLATE NOCASE) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('C' IN ())) BETWEEN ((('836355976') NOT NULL)) AND (((NULL)<<(0.29172155985359993)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('QxP\n0r4' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELY(0Xffffffffa4aaa959) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1249335854 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=657614764'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.4953585640533179 IN (x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1705691105 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1323729036 0 sz=-259285934 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-1380070642'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-989027163 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN x'' THEN x'2eca' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((((('0.8637094995552415')OR(x'76c1bc26')))AND(0.20459228291812215)), ((0.5673317359561072)*(NULL)), ((0.20666927308650118) NOT BETWEEN (NULL) AND (x'4076')), (~ (1169078687))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1000220107 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL IN (x'a307348e')))AND(((x'')OR(1196718514)))))OR((('504592010')>=('')))))AND((+ (0.9647128281878554)))))OR(((((x'')AND(-3.73273485E8)))OR('<Pp''{')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=428796815 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1357310194 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'e374' IN (CASE '2093483315'  WHEN 1.051001579E9 THEN 58029071 WHEN x'' THEN '-89399408' WHEN 0x30c6b920 THEN '0.04117482334110745' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL))<((1052666746))) THEN CASE x''  WHEN NULL THEN x'b920' ELSE 0X7cc80533 END WHEN (('sa') BETWEEN (x'') AND (x'')) THEN ((NULL)<=(0.7571800699974651)) WHEN CAST('1354022661' AS BLOB) THEN CASE NULL  WHEN 0.6891857313281142 THEN x'3dd0' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('314621477') BETWEEN (x'174ded4c') AND (x'')), (('')&('2039165583')), (NOT ('-1150559422'))))>((0.15333978410022242, (NOT (x'1b99')), (~ (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (LENGTH(2066577601))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=447580837 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(SQLITE_COMPILEOPTION_USED(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (0.31123753093497264) AND (-584271657)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)-(('ydol|' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(COALESCE(DISTINCT 'QxP\n0r4', x'') AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (0.5036547740628236 IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((((((((((((1.668005596E9)OR('8o')))AND(0.19370427040267768)))AND('')))AND('鱒(ybo%ᄱ꥙f')))AND(-1.7976931348623157E308)))AND(x'6b34'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 -424863524 sz=-791304676 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2123721992 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 sz=78789611'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=2039165583'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('㫎fJ䴙Y㌡[7' IN ()) THEN 'A0' ELSE CAST(NULL AS BLOB) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1783769719 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x7b935590 COLLATE BINARY)|((0.35105689860183165 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (((-1078043411) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0X7cb424a8 THEN 862903622 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('MY0D[s'))>((0xffffffffc720886f))) THEN (((NULL, 7.33577723E8, NULL, '1', NULL, 0.8816298586155552, x'ccc8')) NOT BETWEEN ((NULL, 1.7976931348623157E308, '', 'OV 혈DM', NULL, 0.6891857313281142, '1497805445')) AND ((',Ꚉ6VAㆰ', x'', NULL, NULL, 0.560219048922078, x'', 0.8112696269574404))) ELSE CASE 0.6164079252491896  WHEN '.' THEN NULL END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(((NULL) NOTNULL), CASE NULL  WHEN x'' THEN 'pEW蘫+' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=115344724 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('/W,cVL	/' AS INTEGER) IN ((((('2056112514')AND(3.81202284E8)))AND(0.7433254144232918)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=524452572'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(4.63513408E8 COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((x'22bd')OR(NULL)))AND(0.5276654332945475)))AND(0.08390704140983418)))AND(NULL))  WHEN '-1248719426' THEN (('-1523486443')=(NULL)) WHEN RTRIM(x'') THEN (('[]') BETWEEN (0x1e6823c2) AND (0.7156285253514331)) WHEN (('!N')LIKE('H1')) THEN (((NULL)) BETWEEN ((0Xffffffffb95540ca)) AND ((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2037122399 4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (x'')))AND(CAST('s0' AS TEXT))))AND('H')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x73352224)-(NULL)))<<(((0.44015593759346294)>=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.8637094995552415')&(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-212436638 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(0xffffffff82269311 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'aa1f' IN (x'b8964b33', NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1848326347 -834845942'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1138314871 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN NULL THEN 0.5681535753709173 ELSE 'zo' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) NOT BETWEEN (((-2064645207) BETWEEN ('-77282897') AND (x''))) AND (CASE 0xffffffff843c8234  WHEN NULL THEN '-1689160865' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1278152769 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1829721063 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '6 -81939833 sz=-1392268763 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1362706665 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN (((x'8e7b078e') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '443290603 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.0047823607917601985 THEN '-481177121' WHEN 0.8059625705261722 THEN 0Xffffffffd025fea6 WHEN '973195875' THEN NULL END)OR(((((NULL)AND(NULL)))OR(0.30962053695725433)))))AND((('%f') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (COALESCE(0.6591332062639266, -1.791078641E9))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN x'' THEN x'' WHEN 0xf6bab9a THEN x'eb994530' WHEN 0.6591332062639266 THEN NULL ELSE ' 뤮/U!' END)AND(CAST(150841778 AS BLOB))))AND(NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1328302541 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('', '-991636295')) NOT BETWEEN (((0xffffffff986c8447) NOTNULL)) AND ((NOT ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<>('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7575356203274511, -2.063760022E9, x''))=((NULL, 0.6474811815477024, '-1185595190'))))<(((0.41928294663650256)<<(0.810054544304019)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN 0.6227515559204446 THEN 0.23267021606768612 END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 'KC}y{\nG<p', NULL))>((x'', NULL, NULL))))IS(CAST('-714073228' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1529678354'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)!=(0.23500434349894206))) NOT BETWEEN (((0.7760855370374725) NOT NULL)) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-832442808'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=405157033'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-704023402 2123721992 sz=-1974488673 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE '-87228961' COLLATE BINARY  WHEN (('510141378') BETWEEN (x'b185') AND (-973033503)) THEN ((((NULL)OR('')))AND(x'')) ELSE '-2101354617' COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 2 sz=1769807492 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-156677035 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT 0.9222750210531072); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1848326347 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1856458075'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1611455365'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=688982512 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.810054544304019) ISNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('')) BETWEEN (((((((((0.9420919200899137)OR(0.6380372839968342)))AND(0.9675948756914449)))AND('0.623609802013011')))AND(-303641022))) AND (((x'')>=(x'02b1feaa1480')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('0.5036547740628236') BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-271982047 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1820788478'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=9223372036854775807'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.5526457901425568  WHEN 0.7201174446844959 THEN 1.43473907E9 ELSE NULL END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2132908659 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-4.81177121E8 COLLATE NOCASE) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1451126363 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1072482008 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1611455365)<('-172167206'))) NOT BETWEEN (('1042375612' IN ())) AND (('/*' IN (x'3d24', 0.5383387473096363)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.8637094995552415  WHEN NULL THEN 0.4423603979228704 ELSE 0.6942254172740322 END)>(CASE WHEN x'9132' THEN x'dfd0' ELSE 0.37149695012545614 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'8fec' COLLATE BINARY)OR(('1274554181' IN ('+O', '183123570')))))AND((x'' IN (x'1c8a')))))OR(((0.7575356203274511) NOT NULL))))OR((((('(r5{}n')AND(0.7433254144232918)))AND(-747718732)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3991486638407308))=((x'')))) BETWEEN ('0.8390581271877107') AND (((x'') BETWEEN (NULL) AND ('+4D~')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2045002607 sz=741460345 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((-1119118075)||('90108563')))) AND ((((((0.4423603979228704)OR(')P9\r')))AND(0.5557679391673003))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)OR(NULL)))OR(0.9222750210531072)) THEN LIKELIHOOD(DISTINCT NULL, 0.5306350922010373) ELSE (~ (x'96ba')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=380433898 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1630569605 2 sz=735373916'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8112696269574404)AND(0.931433211991362)))AND(x'')))<>((('') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'b08b' IN (x'', 'zo')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1492579223 808001255 sz=-1660036456 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1732886200 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))/(((x'6462') NOT BETWEEN (0.9304999690479067) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1903473459 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 938872114 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffda79da4a COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1667022632 sz=969043843 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1610452276 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')LIKE(NULL)))OR(((x'')<=(0.1075167419055526)))))OR((- (x'')))))AND(((((NULL)AND(NULL)))AND(NULL)))))AND(((('R4', NULL, '瀚xmr{G''Lo')) NOT BETWEEN ((NULL, NULL, '-716032538')) AND ((0.010176265393618933, '', NULL))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2084562891 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7201174446844959, NULL, '')) BETWEEN ((((((0x309a7da)AND(0.35862099996945773)))OR('1769557280')), (x'3165' IN ()), CASE 'TjEw,殎_P0'  WHEN '820057972' THEN 0.4423603979228704 WHEN '-1779180211' THEN '1175204935' WHEN 0.7201174446844959 THEN NULL ELSE -1.434952106E9 END)) AND ((CASE WHEN x'' THEN 'e\n' END, ((x'')IS('-2001365827')), ((NULL)&(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN (x'') AND (''))) BETWEEN ((('276210161') NOT NULL)) AND ((((0.05940075191201699, 0.19370427040267768, '4k')) NOT BETWEEN (('', x'6703', '1434739070')) AND ((NULL, 0.32270767501214137, ''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '604892399'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((NULL) NOTNULL), NULL, (+ (NULL)), TRIM(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((x'')) AND ((CASE WHEN '(瓚mK\7c0' THEN -453770441 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1691627436 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN NULL WHEN -548052921 THEN '㶓YXs-5508341789719164687-677T1707107097367888172T724:1137 6512784634439985317:1966:1532TCfo' WHEN NULL THEN 0.07183686549572876 ELSE NULL END COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=809453034 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.18429577098402972 IN (-1164220799)))<(CASE ''  WHEN 'WRmI' THEN '-1714216381' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (IFNULL(0.37428781502250097, '222651402') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=335886863 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1259244787 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1934395316'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '291410027 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=827816284 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CAST(-733125081 AS INTEGER))) AND ((x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2051008851 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=91980692 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1042375612 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN HEX(DISTINCT NULL) THEN 0x6552385c ELSE CASE WHEN 0.8506681273989212 THEN x'' ELSE '31761718' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=63843311 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-662316332 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-188268976 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)&(x'2411')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=387370633 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE RTRIM THEN CAST(x'' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '689661726' THEN NULL WHEN 0.321521463690865 THEN 2.123721992E9 WHEN '' THEN '0.20459228291812215' END)%(TYPEOF(DISTINCT '-939305228'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-802571164'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>(CASE NULL  WHEN 94149923 THEN x'34ff' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.8788770286445728) IS TRUE)  WHEN ((0.2655354623118935)GLOB(x'')) THEN ('' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=606009394'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2118932194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-373239161'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(((-1504071644) NOT NULL), ((NULL) NOTNULL), ((0.2001191638908555)LIKE(x'')), IFNULL(-2034323213, '-1705129173'), (('0.23500434349894206') NOT BETWEEN ('969043843') AND (x'9c18782d'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'574d3aff')OR('')))AND(1132728811)))AND((((('')AND(0.1593240971923604)))OR('?''#% K,')))))AND(((6.90938653E8)IS NOT('I^ZI\Ax(Y*)')))))OR((((('0.623609802013011')OR(x'')))AND(0.010176265393618933)))))OR(((0.9995571854663352)OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '798453476 -1870148779 sz=1769807492 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'bae7')<<('瀚O')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('1981493895' AS INTEGER) IN (((((0.17085443193171945)OR(0.05978837551673899)))OR('1004535044')), CAST(0.321521463690865 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1777100673 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=463513408 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-63221801 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1668005596 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=695038592 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1527516848 sz=956940210 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1944928072'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '820057972 1051001579 sz=-1692777433'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('B)j7u)')-(NULL))  WHEN NULL COLLATE NOCASE THEN x'488a' COLLATE BINARY ELSE ((0.21700855866999957) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1829721063 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '883721534 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-684393794 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT 0x3abf5284))&(((x'5171') BETWEEN (NULL) AND (0.15740873733495098)))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1893779192 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=376836572 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.25672199621028213)))+(CAST('862056729' AS BLOB))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x313c8ddf; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=491641130 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1799077277'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))<<(((((x'')AND(0.36472416453799816)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-718610957 297808649 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT ('1489933763')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '4 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 0.810054544304019, ']^!90a'))>=(('', NULL, x'')))) BETWEEN (((NULL)IS(NULL))) AND (('0jwBG/33' IN (-329519964)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1193672344 1201900874 sz=-1847481326 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.6334467628771466 THEN '1829721063' ELSE x'9106' END) BETWEEN (NULL COLLATE RTRIM) AND (((0.7069290486446208)<(7.33577723E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-112626799'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '21145187'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1822830888 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1777100673'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1623190502'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1752058801 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'f3ab') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2071671972 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(x''))) BETWEEN (LOWER(DISTINCT 0.8794290221219069)) AND (((0X62da7af0)||(NULL)))); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1049006373 sz=-1236238834 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8280328543260741 IN (x'')), CAST(NULL AS TEXT), UPPER('979998535')))=((CAST('-481177121' AS REAL), (+ (x'')), (('1476848753') NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULLIF(DISTINCT 'Q', '-1130279511')  WHEN ((0Xfffffffff256607f) BETWEEN (-2135563390) AND (x'')) THEN ((((((((0X65fa693d)AND(0.9713672336404384)))AND(0.9448508911639207)))AND(NULL)))AND(0.8349956026077935)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>(x'')))AND(((0Xffffffffe6fd57b8) NOT BETWEEN (x'79c9') AND (0.44015593759346294)))))AND(((NULL)GLOB(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)*(((((((((((((NULL)AND(NULL)))AND(0xfffffffff780881e)))AND(0.706523254046824)))AND('1649760757')))OR('')))AND('-2133418408')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-994223384 sz=1534049789 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((0.8574913292977903 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=531561996 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOTNULL))AND(((((x'')OR(x'')))AND('6aN_婽~')))))OR('?|2O㵖hX')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1168216333 sz=251407845 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2077006580 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-103578069'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((969043843) ISNULL)))<=((((NULL) NOT BETWEEN ('') AND (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL, 1.323729036E9, '-1514534070'))<>((0Xffffffff845063ab, NULL, NULL))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1042375612 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-522577146 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'' THEN x'' WHEN '381202284' THEN NULL WHEN '' THEN 0.9647128281878554 ELSE 0.4219265697319532 END)OR(CAST(1476848753 AS BLOB))))AND(0.5467035051836019)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELIHOOD(DISTINCT x'', 0.5047361516479969)  WHEN CAST('9v⏂6.婯14' AS TEXT) THEN ((((0.9763221312289514)AND(NULL)))OR(0.7210349755051441)) ELSE CAST(NULL AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-851159482 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') NOT BETWEEN (0Xffffffffe32323dc) AND (-949604579)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 2 sz=2039165583 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((LOWER(x''))OR(((NULL) IS TRUE))))OR(UPPER(DISTINCT NULL))))OR(((NULL) NOT NULL))))OR((('')IS(0.7224861562462955)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (~ (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1151458586 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2123721992 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0x3c19715) AND (NULL)))>=(((x'') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1282799390 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('0.623609802013011')OR(1.152086382E9)))OR(NULL)))OR(x'eeedbaf8' COLLATE BINARY)))AND(0.4085512130356985 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-522577146 1042375612 0 sz=1747015210 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 1382107245'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.00420578401569871  WHEN NULL THEN 0x7a8dc982 WHEN NULL THEN x'' WHEN 0.45590124542127464 THEN '-1527516848' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1888977145 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '752616708 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1902544063'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '1729138506'  WHEN x'' THEN -55483031 END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-481177121 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1014417557 sz=-53597106 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE '0l#sXP肌'  WHEN ']\n萔^!diF%' THEN '' WHEN NULL THEN x'' WHEN 0.0047823607917601985 THEN x'' END  WHEN (- ('1021477360')) THEN LENGTH(x'') ELSE ABS(NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'a71f')IS(x'')) IN (0.5581240302570419 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1836587229'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.17085443193171945 IN ()))&(json_insert('8*J', '', '-1130279511', x'', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1933505877 sz=-1916332237 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1770166696'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(((((0.1550031698703156)AND(NULL)))OR('-1606829631')), ((('-3')) NOT BETWEEN ((0.2829375556494449)) AND (('\r\n')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2079519376'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-9309850 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (LOWER(x'')) AND ('kux*uy4')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE x'4ed0'  WHEN 1129549814 THEN x'' END  WHEN HEX(DISTINCT 0.9222750210531072) THEN (NULL IN (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1705629120 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)<<(((NULL) NOT BETWEEN (0x29d8ef39) AND ('(25{}n')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1584995589 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-200249318'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(x''))))=((((x'') BETWEEN (x'') AND ('(	OM㜰!y6x'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)||(0.32270767501214137)))OR(CAST(x'' AS TEXT))))AND((('%Y') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1668426902 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((',\a-xp.{埊' IN (NULL, '2127132799')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)||(0.47414675977477394)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((~ (0.09115201100174508)))AND((0.04165573882767193 IN ()))))AND((NULL IN ()))))AND(((NULL)>>(x'')))))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1324710834 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) BETWEEN ((+ (0.23267021606768612))) AND (((0.7845320021356217)*(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=510141378'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1739732784 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=94149923 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.10126218823221034) BETWEEN ('0') AND (0.6164079252491896)) THEN CAST('.VAFb' AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-9.1814654E7) ISNULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('281068878' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-627119661 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1958129937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN CASE 1.362706665E9  WHEN 0.7386298364488778 THEN 0.08490928457264701 ELSE x'424d' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1611455365', NULL, 0Xfffffffffa870502, '754338748', 'WRmI')) NOT BETWEEN ((2.056112514E9, 2.093483315E9, 0.8292299810044361, NULL, '')) AND ((0.17632554927414978, x'b548', x'', x'd636', '(,'))))!=(((('-1756492347'))>((''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1043027206 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (1476848753)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1879535644 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE NOCASE))>=(((('0.9939344219522932') NOT BETWEEN (x'') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '958324146'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UNLIKELY('-1869016151') IN ('-782020693')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1301980702 sz=-522577146 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1232181834 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1769807492 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1800094685 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1613172218 1686054805 sz=2125983076'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(DISTINCT '0.5383387473096363') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-62420599 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2059275545 -251175221 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-559444932 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('㜋%Dq[Ԃ>ej' AS BLOB)) NOT BETWEEN (((((434018916)OR(x'26ed')))OR(0.5230048837026215))) AND (((('\nc㨅r'))>((0.23109713477515126))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1594677424 690938653 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1498389136 -1848326347 sz=-792133664 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -373273485; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-391845280 sz=-1851731607 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1047873395 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1908380745 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1785117189 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-137413229 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5857671846272747)) BETWEEN ((CASE WHEN '-1605255047' THEN NULL WHEN x'5638' THEN ']E' WHEN ')F' THEN x'' WHEN '0.5455001137569657' THEN 0x7a8dc982 WHEN 0.6114718007891945 THEN 0X1e6823c2 END)) AND ((CAST(NULL AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1891273313 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1777100673 sz=-1527516848 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=397378746 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '/%*'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-157971325'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -1606829631 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-93244430 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.45370446532874065)OR(x'')))<>(((NULL)AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-166741277 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((2.073253264E9))<>((0.9351302451942116)))  WHEN (((x''))>=(('2014248864'))) THEN NULL WHEN ('0.5673317359561072' IN ()) THEN (('-1016914271') NOT NULL) WHEN 0.4540424712262665 COLLATE NOCASE THEN ((((0xffffffffb3b46208)AND(NULL)))AND(NULL)) ELSE ((0.2436543509680944)|('-2020268385')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1e500 AS TEXT)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.1024292157533575; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1599874089 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 165318660 2 sz=862056729 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-86248292 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1649760757 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 -956401926 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -1576573344 sz=-395350270'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=808001255 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1315960770'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6628599479268651) BETWEEN (0.622230168514757) AND (0X4adb5c48)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('657614764' AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-302592450 sz=2008787370 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-470494699 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('' AS BLOB) IN (CAST(x'' AS NUMERIC), CAST(0xffffffffb2f98962 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-240436479 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2064645207 sz=2123721992 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1378114174 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1354022661'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '752814577 2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1525764890 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=972421986'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'yp'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT CASE WHEN '-2001365827' THEN x'32f8' END, 0.3220890455599572); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-570001010'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=443290603 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2014898282'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Q9')OR('&O')))AND('-1529678354')) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1518638523 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -2023761213'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '\nc㨅r' THEN 0xffffffffc1deca00 WHEN '' THEN 1042375612 WHEN 'bj' THEN x'' WHEN '-397099931' THEN x'' WHEN x'6f10' THEN 0.9306122151457511 END)>=(json_patch(NULL, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1538215319 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-240436479 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') BETWEEN (0.1538921465427845) AND (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1659049249 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1769807492 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0.36597547780678574) AND (-1374185003))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((9.1980692E7) BETWEEN (NULL) AND (NULL)))-(rtreenode(x'', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(0X48b754c2); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL, '', '1282799390'))>((0X513940e9, '891598816', '733577723')))  WHEN 2122764414 THEN x'' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1935006206 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1090748995'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-2101354617') NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>=((0.8200736540780548))))>((0.7175347676193164 IN (0.9304999690479067, '*9')))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
END; -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6483'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 0ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c2, c3) VALUES (NULL, 0.2317826190118355, '463513408'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
REINDEX NOCASE; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL), (x'd4bc'), (0.5276654332945475); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (-625255691), (0.6340105737086217), ('ES'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'25cd'; -- 1ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1(c3) VALUES (NULL), ('()鱒a'), (x'7b24'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
REINDEX; -- 0ms;
DELETE FROM rt0 WHERE (((((((((x'e7fe')AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)) IN ()); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.9579068978217123), (-1449433909), (NULL); -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0)=(0.9659234611409635) WHERE ((json_array(vt1.c1, '-1072482008'))+((+ (vt1.c0)))); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=(0.07183686549572876) WHERE x''; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (NULL); -- 1ms;
VACUUM temp; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1) VALUES (x'4a66', x'6401'); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('1898588202'), ('-200249318'), (0.40068126561386785); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c3)=('1649760757', '') WHERE CAST((((1.649760757E9)) NOT BETWEEN (('vjT!%')) AND ((vt1.c3))) AS TEXT); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1975753552); -- 0ms;
UPDATE OR IGNORE vt1 SET c3=0.7725015342260788, c0='H', c3=NULL WHERE ((((vt1.c2)GLOB(vt1.c2))) NOT BETWEEN (LOWER(DISTINCT vt1.c3)) AND (((vt1.c2)GLOB(vt1.c0)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c1))<=((IFNULL(vt1.c0, vt1.c3)))) WHERE ((((((vt1.c2))<((vt1.c3))))<=(NULLIF(DISTINCT vt1.c0, vt1.c0)))) ORDER BY (((+ (rt0.c1)))GLOB(((NULL) NOTNULL))) DESC  NULLS LAST, CAST((- (vt1.c3)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2))<((vt1.c3))))<=(NULLIF(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c1))<=((IFNULL(vt1.c0, vt1.c3)))) ORDER BY (((+ (rt0.c1)))GLOB(((NULL) NOTNULL))) DESC  NULLS LAST, CAST((- (vt1.c3)) AS NUMERIC));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c1))<=((IFNULL(vt1.c0, vt1.c3)))) WHERE ((((((vt1.c2))<((vt1.c3))))<=(NULLIF(DISTINCT vt1.c0, vt1.c0)))) ORDER BY (((+ (rt0.c1)))GLOB(((NULL) NOTNULL))) DESC  NULLS LAST, CAST((- (vt1.c3)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2))<((vt1.c3))))<=(NULLIF(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c1))<=((IFNULL(vt1.c0, vt1.c3)))) ORDER BY (((+ (rt0.c1)))GLOB(((NULL) NOTNULL))) DESC  NULLS LAST, CAST((- (vt1.c3)) AS NUMERIC));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((vt1.c1))<=((IFNULL(vt1.c0, vt1.c3)))) WHERE ((((((vt1.c2))<((vt1.c3))))<=(NULLIF(DISTINCT vt1.c0, vt1.c0)))) ORDER BY (((+ (rt0.c1)))GLOB(((NULL) NOTNULL))) DESC  NULLS LAST, CAST((- (vt1.c3)) AS NUMERIC);
SELECT ALL * FROM vt1 WHERE ((((((((((+ (vt1.c0)))AND(CASE ''  WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c2 END)))AND((((vt1.c3)) BETWEEN ((0xffffffffdbc7d107)) AND ((vt1.c3))))))AND(((vt1.c3)/(vt1.c2)))))AND(((vt1.c2)+(vt1.c3))))) ORDER BY CASE WHEN JULIANDAY(vt1.c0, vt1.c2, vt1.c2) THEN ((x'')<=(vt1.c0)) ELSE (~ (vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt1.c0)))AND(CASE ''  WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c2 END)))AND((((vt1.c3)) BETWEEN ((0xffffffffdbc7d107)) AND ((vt1.c3))))))AND(((vt1.c3)/(vt1.c2)))))AND(((vt1.c2)+(vt1.c3))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN JULIANDAY(vt1.c0, vt1.c2, vt1.c2) THEN ((x'')<=(vt1.c0)) ELSE (~ (vt1.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((((((+ (vt1.c0)))AND(CASE ''  WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c2 END)))AND((((vt1.c3)) BETWEEN ((0xffffffffdbc7d107)) AND ((vt1.c3))))))AND(((vt1.c3)/(vt1.c2)))))AND(((vt1.c2)+(vt1.c3))))) ORDER BY CASE WHEN JULIANDAY(vt1.c0, vt1.c2, vt1.c2) THEN ((x'')<=(vt1.c0)) ELSE (~ (vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (vt1.c0)))AND(CASE ''  WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c2 END)))AND((((vt1.c3)) BETWEEN ((0xffffffffdbc7d107)) AND ((vt1.c3))))))AND(((vt1.c3)/(vt1.c2)))))AND(((vt1.c2)+(vt1.c3))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN JULIANDAY(vt1.c0, vt1.c2, vt1.c2) THEN ((x'')<=(vt1.c0)) ELSE (~ (vt1.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((((((+ (vt1.c0)))AND(CASE ''  WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c2 END)))AND((((vt1.c3)) BETWEEN ((0xffffffffdbc7d107)) AND ((vt1.c3))))))AND(((vt1.c3)/(vt1.c2)))))AND(((vt1.c2)+(vt1.c3))))) ORDER BY CASE WHEN JULIANDAY(vt1.c0, vt1.c2, vt1.c2) THEN ((x'')<=(vt1.c0)) ELSE (~ (vt1.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN ((0.2867749495197466) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN 0.44831912410088903 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (- (rt0.c1)) THEN 0.9692758676323388 COLLATE RTRIM ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END) ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((0.8002340645567771, rt0.c0, rt0.c2))) THEN ((rt0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN ((0.2867749495197466) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN 0.44831912410088903 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (- (rt0.c1)) THEN 0.9692758676323388 COLLATE RTRIM ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((0.8002340645567771, rt0.c0, rt0.c2))) THEN ((rt0.c2) ISNULL) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN ((0.2867749495197466) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN 0.44831912410088903 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (- (rt0.c1)) THEN 0.9692758676323388 COLLATE RTRIM ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END) ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((0.8002340645567771, rt0.c0, rt0.c2))) THEN ((rt0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN ((0.2867749495197466) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN 0.44831912410088903 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (- (rt0.c1)) THEN 0.9692758676323388 COLLATE RTRIM ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((0.8002340645567771, rt0.c0, rt0.c2))) THEN ((rt0.c2) ISNULL) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)>=(rt0.c0)) THEN ((0.2867749495197466) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN 0.44831912410088903 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (- (rt0.c1)) THEN 0.9692758676323388 COLLATE RTRIM ELSE CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END END) ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((0.8002340645567771, rt0.c0, rt0.c2))) THEN ((rt0.c2) ISNULL) END;
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON CAST((((vt1.c2, rt0.c2, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))) AS BLOB) WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(vt1.c2)) THEN LIKELIHOOD(vt1.c3, 0.5881174134976812) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(vt1.c2)) THEN LIKELIHOOD(vt1.c3, 0.5881174134976812) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST((((vt1.c2, rt0.c2, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))) AS BLOB));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON CAST((((vt1.c2, rt0.c2, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))) AS BLOB) WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(vt1.c2)) THEN LIKELIHOOD(vt1.c3, 0.5881174134976812) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(vt1.c2)) THEN LIKELIHOOD(vt1.c3, 0.5881174134976812) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST((((vt1.c2, rt0.c2, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))) AS BLOB));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON CAST((((vt1.c2, rt0.c2, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))) AS BLOB) WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(vt1.c2)) THEN LIKELIHOOD(vt1.c3, 0.5881174134976812) END);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (((((rt0.c2) ISNULL)))>=((CAST(vt1.c2 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((((rt0.c2) ISNULL)))>=((CAST(vt1.c2 AS REAL))))  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (((((rt0.c2) ISNULL)))>=((CAST(vt1.c2 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((((rt0.c2) ISNULL)))>=((CAST(vt1.c2 AS REAL))))  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY (((((rt0.c2) ISNULL)))>=((CAST(vt1.c2 AS REAL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN '*เ' COLLATE NOCASE THEN vt1.c2 END) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '*เ' COLLATE NOCASE THEN vt1.c2 END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN '*เ' COLLATE NOCASE THEN vt1.c2 END) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '*เ' COLLATE NOCASE THEN vt1.c2 END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN '*เ' COLLATE NOCASE THEN vt1.c2 END) ORDER BY ''  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c2 AS TEXT));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY COLLATE BINARY) ORDER BY (- ((rt0.c2 IN (rt0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c2 IN (rt0.c1, rt0.c2)))));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY COLLATE BINARY) ORDER BY (- ((rt0.c2 IN (rt0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c2 IN (rt0.c1, rt0.c2)))));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY COLLATE BINARY) ORDER BY (- ((rt0.c2 IN (rt0.c1, rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((CAST(vt1.c2 AS NUMERIC) IN ())) ORDER BY (((rt0.c1 IN ()))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))), ((((vt1.c3)==(vt1.c3))) IS TRUE) DESC  NULLS LAST, CAST((((vt1.c0))!=((0.8849360588176486))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1 IN ()))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))), ((((vt1.c3)=(vt1.c3))) IS TRUE) DESC  NULLS LAST, CAST((((vt1.c0))!=((0.8849360588176486))) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((CAST(vt1.c2 AS NUMERIC) IN ())) ORDER BY (((rt0.c1 IN ()))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))), ((((vt1.c3)==(vt1.c3))) IS TRUE) DESC  NULLS LAST, CAST((((vt1.c0))!=((0.8849360588176486))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1 IN ()))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))), ((((vt1.c3)=(vt1.c3))) IS TRUE) DESC  NULLS LAST, CAST((((vt1.c0))!=((0.8849360588176486))) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((CAST(vt1.c2 AS NUMERIC) IN ())) ORDER BY (((rt0.c1 IN ()))>>(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))), ((((vt1.c3)==(vt1.c3))) IS TRUE) DESC  NULLS LAST, CAST((((vt1.c0))!=((0.8849360588176486))) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) ISNULL))&(((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))&(((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) ISNULL))&(((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))&(((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) ISNULL))&(((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c0)))));
SELECT * FROM vt1, rt0 WHERE ((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c3))))AND(vt1.c0)))AND(CASE WHEN vt1.c2 THEN vt1.c2 ELSE rt0.c1 END)))AND(((vt1.c1) ISNULL))))OR(LIKELIHOOD(rt0.c0, 0.2743359183119136)))) ORDER BY ((((rt0.c2)+(''))) BETWEEN (((rt0.c0)>=(vt1.c1))) AND (((rt0.c2)|(vt1.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c3))))AND(vt1.c0)))AND(CASE WHEN vt1.c2 THEN vt1.c2 ELSE rt0.c1 END)))AND(((vt1.c1) ISNULL))))OR(LIKELIHOOD(rt0.c0, 0.2743359183119136)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)+(''))) BETWEEN (((rt0.c0)>=(vt1.c1))) AND (((rt0.c2)|(vt1.c3)))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c3))))AND(vt1.c0)))AND(CASE WHEN vt1.c2 THEN vt1.c2 ELSE rt0.c1 END)))AND(((vt1.c1) ISNULL))))OR(LIKELIHOOD(rt0.c0, 0.2743359183119136)))) ORDER BY ((((rt0.c2)+(''))) BETWEEN (((rt0.c0)>=(vt1.c1))) AND (((rt0.c2)|(vt1.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c3))))AND(vt1.c0)))AND(CASE WHEN vt1.c2 THEN vt1.c2 ELSE rt0.c1 END)))AND(((vt1.c1) ISNULL))))OR(LIKELIHOOD(rt0.c0, 0.2743359183119136)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)+(''))) BETWEEN (((rt0.c0)>=(vt1.c1))) AND (((rt0.c2)|(vt1.c3)))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c3))))AND(vt1.c0)))AND(CASE WHEN vt1.c2 THEN vt1.c2 ELSE rt0.c1 END)))AND(((vt1.c1) ISNULL))))OR(LIKELIHOOD(rt0.c0, 0.2743359183119136)))) ORDER BY ((((rt0.c2)+(''))) BETWEEN (((rt0.c0)>=(vt1.c1))) AND (((rt0.c2)|(vt1.c3)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)GLOB(TRIM(DISTINCT rt0.c1, ']!t㽨,(3#,')))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)GLOB(TRIM(DISTINCT rt0.c1, ']!t㽨,(3#,')))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)GLOB(TRIM(DISTINCT rt0.c1, ']!t㽨,(3#,')))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)GLOB(TRIM(DISTINCT rt0.c1, ']!t㽨,(3#,')))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)GLOB(TRIM(DISTINCT rt0.c1, ']!t㽨,(3#,')))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ())  NULLS LAST;
SELECT * FROM vt1 WHERE ('612730367') ORDER BY ((((((((((((((((vt1.c3)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2)))AND('yV')))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND((vt1.c0 IN (vt1.c3, vt1.c0)))))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC  NULLS LAST, (((vt1.c3 IN (vt1.c1)))>=((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (('612730367') IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((((((vt1.c3)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2)))AND('yV')))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND((vt1.c0 IN (vt1.c3, vt1.c0)))))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC  NULLS LAST, (((vt1.c3 IN (vt1.c1)))>=((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c1))))) ASC);
SELECT * FROM vt1 WHERE ('612730367') ORDER BY ((((((((((((((((vt1.c3)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2)))AND('yV')))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND((vt1.c0 IN (vt1.c3, vt1.c0)))))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC  NULLS LAST, (((vt1.c3 IN (vt1.c1)))>=((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (('612730367') IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((((((vt1.c3)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2)))AND('yV')))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND((vt1.c0 IN (vt1.c3, vt1.c0)))))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC  NULLS LAST, (((vt1.c3 IN (vt1.c1)))>=((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c1))))) ASC);
SELECT * FROM vt1 WHERE ('612730367') ORDER BY ((((((((((((((((vt1.c3)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2)))AND('yV')))OR(CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND((vt1.c0 IN (vt1.c3, vt1.c0)))))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC  NULLS LAST, (((vt1.c3 IN (vt1.c1)))>=((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c1))))) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c0)GLOB((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB((+ (vt1.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c0)GLOB((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB((+ (vt1.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c0)GLOB((+ (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c2) ORDER BY ((rt0.c0 IN (vt1.c0, rt0.c2)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c2 THEN 0.4814810467461802 ELSE rt0.c0 END) AND (((vt1.c1)<(NULL)))) ASC, json_array_length((~ (vt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0 IN (vt1.c0, rt0.c2)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c2 THEN 0.4814810467461802 ELSE rt0.c0 END) AND (((vt1.c1)<(NULL)))) ASC, json_array_length((~ (vt1.c2))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c2) ORDER BY ((rt0.c0 IN (vt1.c0, rt0.c2)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c2 THEN 0.4814810467461802 ELSE rt0.c0 END) AND (((vt1.c1)<(NULL)))) ASC, json_array_length((~ (vt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0 IN (vt1.c0, rt0.c2)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c2 THEN 0.4814810467461802 ELSE rt0.c0 END) AND (((vt1.c1)<(NULL)))) ASC, json_array_length((~ (vt1.c2))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c2) ORDER BY ((rt0.c0 IN (vt1.c0, rt0.c2)) IN ())  NULLS LAST, ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c2 THEN 0.4814810467461802 ELSE rt0.c0 END) AND (((vt1.c1)<(NULL)))) ASC, json_array_length((~ (vt1.c2))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c3 COLLATE NOCASE) ORDER BY 0Xffffffffc3631ea1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3 COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY 0Xffffffffc3631ea1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c3 COLLATE NOCASE) ORDER BY 0Xffffffffc3631ea1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3 COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY 0Xffffffffc3631ea1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c3 COLLATE NOCASE) ORDER BY 0Xffffffffc3631ea1 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY ((CAST(vt1.c1 AS INTEGER))&(((-933449554) NOT BETWEEN (vt1.c3) AND (vt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS INTEGER))&(((-933449554) NOT BETWEEN (vt1.c3) AND (vt1.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY ((CAST(vt1.c1 AS INTEGER))&(((-933449554) NOT BETWEEN (vt1.c3) AND (vt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c1 AS INTEGER))&(((-933449554) NOT BETWEEN (vt1.c3) AND (vt1.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY ((CAST(vt1.c1 AS INTEGER))&(((-933449554) NOT BETWEEN (vt1.c3) AND (vt1.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c1)<(vt1.c2)) WHEN (NOT (vt1.c0)) THEN NULL WHEN ((vt1.c3) NOTNULL) THEN (NOT (vt1.c3)) END) ORDER BY CASE WHEN (((vt1.c0))=((vt1.c2))) THEN (((vt1.c3)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c3))) ELSE (- (vt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c1)<(vt1.c2)) WHEN (NOT (vt1.c0)) THEN NULL WHEN ((vt1.c3) NOTNULL) THEN (NOT (vt1.c3)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (((vt1.c0))==((vt1.c2))) THEN (((vt1.c3)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c3))) ELSE (- (vt1.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c1)<(vt1.c2)) WHEN (NOT (vt1.c0)) THEN NULL WHEN ((vt1.c3) NOTNULL) THEN (NOT (vt1.c3)) END) ORDER BY CASE WHEN (((vt1.c0))=((vt1.c2))) THEN (((vt1.c3)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c3))) ELSE (- (vt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c1)<(vt1.c2)) WHEN (NOT (vt1.c0)) THEN NULL WHEN ((vt1.c3) NOTNULL) THEN (NOT (vt1.c3)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (((vt1.c0))==((vt1.c2))) THEN (((vt1.c3)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c3))) ELSE (- (vt1.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c1)<(vt1.c2)) WHEN (NOT (vt1.c0)) THEN NULL WHEN ((vt1.c3) NOTNULL) THEN (NOT (vt1.c3)) END) ORDER BY CASE WHEN (((vt1.c0))=((vt1.c2))) THEN (((vt1.c3)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c3))) ELSE (- (vt1.c1)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (+ ((((rt0.c2, '1169078687', rt0.c1))<>((x'1731', -373273485, '934081628'))))) WHERE (((CAST(vt1.c0 AS TEXT))AND(((((((((vt1.c2)OR(vt1.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))AND(((((((((vt1.c2)OR(vt1.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (+ ((((rt0.c2, '1169078687', rt0.c1))<>((x'1731', -373273485, '934081628'))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (+ ((((rt0.c2, '1169078687', rt0.c1))<>((x'1731', -373273485, '934081628'))))) WHERE (((CAST(vt1.c0 AS TEXT))AND(((((((((vt1.c2)OR(vt1.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))AND(((((((((vt1.c2)OR(vt1.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (+ ((((rt0.c2, '1169078687', rt0.c1))<>((x'1731', -373273485, '934081628'))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (+ ((((rt0.c2, '1169078687', rt0.c1))<>((x'1731', -373273485, '934081628'))))) WHERE (((CAST(vt1.c0 AS TEXT))AND(((((((((vt1.c2)OR(vt1.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c2)>(vt1.c3)))))) ORDER BY vt1.c3 DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c2)>(vt1.c3)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c3 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c2)>(vt1.c3)))))) ORDER BY vt1.c3 DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c2)>(vt1.c3)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c3 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c2)>(vt1.c3)))))) ORDER BY vt1.c3 DESC;
SELECT * FROM rt0, vt1 WHERE (((vt1.c2 COLLATE RTRIM)<>((+ (rt0.c2))))) ORDER BY ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE vt1.c1 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2 COLLATE RTRIM)!=((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE vt1.c1 END) NOT NULL)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((vt1.c2 COLLATE RTRIM)<>((+ (rt0.c2))))) ORDER BY ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE vt1.c1 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2 COLLATE RTRIM)!=((+ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE vt1.c1 END) NOT NULL)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((vt1.c2 COLLATE RTRIM)<>((+ (rt0.c2))))) ORDER BY ((CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE vt1.c1 END) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((COALESCE(rt0.c2, rt0.c0)) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)AND(-1009552579)))AND(((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0))))) ORDER BY CASE WHEN ((vt1.c3)*(vt1.c2)) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN 0.4079708318284371 THEN ((((vt1.c0)AND(vt1.c2)))OR(vt1.c1)) WHEN ((((vt1.c2)AND(vt1.c3)))AND(vt1.c3)) THEN vt1.c2 WHEN vt1.c3 THEN vt1.c0 COLLATE NOCASE WHEN MAX(vt1.c1, vt1.c2) THEN ((vt1.c1)IS(vt1.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND(-1009552579)))AND(((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c3)*(vt1.c2)) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN 0.4079708318284371 THEN ((((vt1.c0)AND(vt1.c2)))OR(vt1.c1)) WHEN ((((vt1.c2)AND(vt1.c3)))AND(vt1.c3)) THEN vt1.c2 WHEN vt1.c3 THEN vt1.c0 COLLATE NOCASE WHEN MAX(vt1.c1, vt1.c2) THEN ((vt1.c1)IS(vt1.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)AND(-1009552579)))AND(((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0))))) ORDER BY CASE WHEN ((vt1.c3)*(vt1.c2)) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN 0.4079708318284371 THEN ((((vt1.c0)AND(vt1.c2)))OR(vt1.c1)) WHEN ((((vt1.c2)AND(vt1.c3)))AND(vt1.c3)) THEN vt1.c2 WHEN vt1.c3 THEN vt1.c0 COLLATE NOCASE WHEN MAX(vt1.c1, vt1.c2) THEN ((vt1.c1)IS(vt1.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND(-1009552579)))AND(((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c3)*(vt1.c2)) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN 0.4079708318284371 THEN ((((vt1.c0)AND(vt1.c2)))OR(vt1.c1)) WHEN ((((vt1.c2)AND(vt1.c3)))AND(vt1.c3)) THEN vt1.c2 WHEN vt1.c3 THEN vt1.c0 COLLATE NOCASE WHEN MAX(vt1.c1, vt1.c2) THEN ((vt1.c1)IS(vt1.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)AND(-1009552579)))AND(((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0))))) ORDER BY CASE WHEN ((vt1.c3)*(vt1.c2)) THEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) WHEN 0.4079708318284371 THEN ((((vt1.c0)AND(vt1.c2)))OR(vt1.c1)) WHEN ((((vt1.c2)AND(vt1.c3)))AND(vt1.c3)) THEN vt1.c2 WHEN vt1.c3 THEN vt1.c0 COLLATE NOCASE WHEN MAX(vt1.c1, vt1.c2) THEN ((vt1.c1)IS(vt1.c2)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c0)), vt1.c0, (((vt1.c3))!=((NULL))))) AND ((CHAR(vt1.c3), ((vt1.c0)<=(vt1.c2)), (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c0)), vt1.c0, (((vt1.c3))!=((NULL))))) AND ((CHAR(vt1.c3), ((vt1.c0)<=(vt1.c2)), (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c0)), vt1.c0, (((vt1.c3))!=((NULL))))) AND ((CHAR(vt1.c3), ((vt1.c0)<=(vt1.c2)), (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c0)), vt1.c0, (((vt1.c3))!=((NULL))))) AND ((CHAR(vt1.c3), ((vt1.c0)<=(vt1.c2)), (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c0)), vt1.c0, (((vt1.c3))!=((NULL))))) AND ((CHAR(vt1.c3), ((vt1.c0)<=(vt1.c2)), (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2)))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT ((NOT (vt1.c1))))) ORDER BY (((((((x'b918')OR(vt1.c2)))OR(rt0.c2))))<>((((rt0.c2) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((x'b918')OR(vt1.c2)))OR(rt0.c2))))<>((((rt0.c2) NOTNULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT ((NOT (vt1.c1))))) ORDER BY (((((((x'b918')OR(vt1.c2)))OR(rt0.c2))))<>((((rt0.c2) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((x'b918')OR(vt1.c2)))OR(rt0.c2))))<>((((rt0.c2) NOTNULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT ((NOT (vt1.c1))))) ORDER BY (((((((x'b918')OR(vt1.c2)))OR(rt0.c2))))<>((((rt0.c2) NOTNULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'880d') ORDER BY ((((rt0.c2)&(rt0.c2)))IS('c')) ASC, ((~ (rt0.c0)) IN (x'4ef8')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'880d') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(rt0.c2)))IS('c')) ASC, ((~ (rt0.c0)) IN (x'4ef8')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'880d') ORDER BY ((((rt0.c2)&(rt0.c2)))IS('c')) ASC, ((~ (rt0.c0)) IN (x'4ef8')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'880d') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(rt0.c2)))IS('c')) ASC, ((~ (rt0.c0)) IN (x'4ef8')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'880d') ORDER BY ((((rt0.c2)&(rt0.c2)))IS('c')) ASC, ((~ (rt0.c0)) IN (x'4ef8')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN -1249335854 THEN ((vt1.c3)>=(vt1.c3)) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c3) IS FALSE) WHEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)) THEN vt1.c2 ELSE ((vt1.c1)<<(vt1.c1)) END) ORDER BY CAST(((1981493895) IS FALSE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1249335854 THEN ((vt1.c3)>=(vt1.c3)) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c3) IS FALSE) WHEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)) THEN vt1.c2 ELSE ((vt1.c1)<<(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(((1981493895) IS FALSE) AS TEXT) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN -1249335854 THEN ((vt1.c3)>=(vt1.c3)) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c3) IS FALSE) WHEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)) THEN vt1.c2 ELSE ((vt1.c1)<<(vt1.c1)) END) ORDER BY CAST(((1981493895) IS FALSE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -1249335854 THEN ((vt1.c3)>=(vt1.c3)) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c3) IS FALSE) WHEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)) THEN vt1.c2 ELSE ((vt1.c1)<<(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(((1981493895) IS FALSE) AS TEXT) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN -1249335854 THEN ((vt1.c3)>=(vt1.c3)) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c3) IS FALSE) WHEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c2)) THEN vt1.c2 ELSE ((vt1.c1)<<(vt1.c1)) END) ORDER BY CAST(((1981493895) IS FALSE) AS TEXT) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (CAST(vt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (CAST(vt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (CAST(vt1.c2 AS INTEGER))));
SELECT * FROM vt1, rt0 WHERE ((+ ((((rt0.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((+ ((((rt0.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((+ ((((rt0.c0))<((vt1.c0))))));
SELECT * FROM vt1 WHERE (CAST((('(l5{cf䚠/8')||(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('(l5{cf䚠/8')||(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((('(l5{cf䚠/8')||(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('(l5{cf䚠/8')||(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((('(l5{cf䚠/8')||(vt1.c0)) AS INTEGER));
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)=(vt1.c0)) THEN ((vt1.c2) IS TRUE) END) ORDER BY (((('R튕3ejI\n+0') ISNULL))>>(CAST(vt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)=(vt1.c0)) THEN ((vt1.c2) IS TRUE) END) IS TRUE)  as count FROM vt1 ORDER BY (((('R튕3ejI\n+0') ISNULL))>>(CAST(vt1.c1 AS BLOB))));
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)=(vt1.c0)) THEN ((vt1.c2) IS TRUE) END) ORDER BY (((('R튕3ejI\n+0') ISNULL))>>(CAST(vt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)=(vt1.c0)) THEN ((vt1.c2) IS TRUE) END) IS TRUE)  as count FROM vt1 ORDER BY (((('R튕3ejI\n+0') ISNULL))>>(CAST(vt1.c1 AS BLOB))));
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)=(vt1.c0)) THEN ((vt1.c2) IS TRUE) END) ORDER BY (((('R튕3ejI\n+0') ISNULL))>>(CAST(vt1.c1 AS BLOB)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c3))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) ISNULL) WHEN ((0.5537202045089881)IS NOT(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN CASE WHEN rt0.c0 THEN x'' END ELSE 'F?+UZ' END) ORDER BY NULL, vt1.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c3))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) ISNULL) WHEN ((0.5537202045089881)IS NOT(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN CASE WHEN rt0.c0 THEN x'' END ELSE 'F?+UZ' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL, vt1.c3 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c3))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) ISNULL) WHEN ((0.5537202045089881)IS NOT(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN CASE WHEN rt0.c0 THEN x'' END ELSE 'F?+UZ' END) ORDER BY NULL, vt1.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c3))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) ISNULL) WHEN ((0.5537202045089881)IS NOT(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN CASE WHEN rt0.c0 THEN x'' END ELSE 'F?+UZ' END) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL, vt1.c3 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c3))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) ISNULL) WHEN ((0.5537202045089881)IS NOT(vt1.c2)) THEN vt1.c2 COLLATE RTRIM WHEN ((x'') NOT NULL) THEN CASE WHEN rt0.c0 THEN x'' END ELSE 'F?+UZ' END) ORDER BY NULL, vt1.c3 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON LIKELY(DISTINCT 0.7780572355736858) WHERE (CAST(((x'651c4e4f2fcd') BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT)) ORDER BY (NOT (((vt1.c0)LIKE(rt0.c2)))) ASC  NULLS LAST, (((NOT (rt0.c1)))>>((rt0.c2 IN (rt0.c1, vt1.c3, vt1.c2))))  NULLS LAST, 0.7200010804511088 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((x'651c4e4f2fcd') BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON LIKELY(DISTINCT 0.7780572355736858) ORDER BY (NOT (((vt1.c0)LIKE(rt0.c2)))) ASC  NULLS LAST, (((NOT (rt0.c1)))>>((rt0.c2 IN (rt0.c1, vt1.c3, vt1.c2))))  NULLS LAST, 0.7200010804511088 ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON LIKELY(DISTINCT 0.7780572355736858) WHERE (CAST(((x'651c4e4f2fcd') BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT)) ORDER BY (NOT (((vt1.c0)LIKE(rt0.c2)))) ASC  NULLS LAST, (((NOT (rt0.c1)))>>((rt0.c2 IN (rt0.c1, vt1.c3, vt1.c2))))  NULLS LAST, 0.7200010804511088 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((x'651c4e4f2fcd') BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON LIKELY(DISTINCT 0.7780572355736858) ORDER BY (NOT (((vt1.c0)LIKE(rt0.c2)))) ASC  NULLS LAST, (((NOT (rt0.c1)))>>((rt0.c2 IN (rt0.c1, vt1.c3, vt1.c2))))  NULLS LAST, 0.7200010804511088 ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON LIKELY(DISTINCT 0.7780572355736858) WHERE (CAST(((x'651c4e4f2fcd') BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT)) ORDER BY (NOT (((vt1.c0)LIKE(rt0.c2)))) ASC  NULLS LAST, (((NOT (rt0.c1)))>>((rt0.c2 IN (rt0.c1, vt1.c3, vt1.c2))))  NULLS LAST, 0.7200010804511088 ASC;
SELECT * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0)) BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(vt1.c0, vt1.c0)) BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0)) BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(vt1.c0, vt1.c0)) BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((ROUND(vt1.c0, vt1.c0)) BETWEEN (TRIM(DISTINCT vt1.c0, vt1.c1)) AND (CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((vt1.c2) NOTNULL))));
SELECT ALL * FROM vt1 WHERE (COALESCE(((((((((vt1.c2)OR(vt1.c3)))AND('/7pee!')))OR(vt1.c1)))OR(vt1.c3)), ((NULL)<=(vt1.c0)))) ORDER BY ((((vt1.c2 IN ()), vt1.c0, ((vt1.c1)+(NULL))))>=((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), HEX(DISTINCT vt1.c1), ((vt1.c1)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((((((vt1.c2)OR(vt1.c3)))AND('/7pee!')))OR(vt1.c1)))OR(vt1.c3)), ((NULL)<=(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2 IN ()), vt1.c0, ((vt1.c1)+(NULL))))>=((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), HEX(DISTINCT vt1.c1), ((vt1.c1)<<(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (COALESCE(((((((((vt1.c2)OR(vt1.c3)))AND('/7pee!')))OR(vt1.c1)))OR(vt1.c3)), ((NULL)<=(vt1.c0)))) ORDER BY ((((vt1.c2 IN ()), vt1.c0, ((vt1.c1)+(NULL))))>=((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), HEX(DISTINCT vt1.c1), ((vt1.c1)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((((((vt1.c2)OR(vt1.c3)))AND('/7pee!')))OR(vt1.c1)))OR(vt1.c3)), ((NULL)<=(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2 IN ()), vt1.c0, ((vt1.c1)+(NULL))))>=((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), HEX(DISTINCT vt1.c1), ((vt1.c1)<<(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (COALESCE(((((((((vt1.c2)OR(vt1.c3)))AND('/7pee!')))OR(vt1.c1)))OR(vt1.c3)), ((NULL)<=(vt1.c0)))) ORDER BY ((((vt1.c2 IN ()), vt1.c0, ((vt1.c1)+(NULL))))>=((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), HEX(DISTINCT vt1.c1), ((vt1.c1)<<(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)IS NOT(rt0.c2))))>=((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)IS NOT(rt0.c2))))>=((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)IS NOT(rt0.c2))))>=((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)IS NOT(rt0.c2))))>=((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)IS NOT(rt0.c2))))>=((rt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((NULL) NOT BETWEEN (vt1.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((rt0.c2, vt1.c3, rt0.c2))!=((vt1.c1, vt1.c3, rt0.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, vt1.c3, rt0.c2))<>((vt1.c1, vt1.c3, rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((rt0.c2, vt1.c3, rt0.c2))!=((vt1.c1, vt1.c3, rt0.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, vt1.c3, rt0.c2))<>((vt1.c1, vt1.c3, rt0.c2))) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((((rt0.c2, vt1.c3, rt0.c2))!=((vt1.c1, vt1.c3, rt0.c2))) AS REAL));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON vt1.c2 WHERE ((((((+ (vt1.c1)))AND(rt0.c0)))OR(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c1)))AND(rt0.c0)))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON vt1.c2);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON vt1.c2 WHERE ((((((+ (vt1.c1)))AND(rt0.c0)))OR(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c1)))AND(rt0.c0)))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON vt1.c2);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON vt1.c2 WHERE ((((((+ (vt1.c1)))AND(rt0.c0)))OR(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((CAST(NULL AS TEXT))AND(((0.5557460515051291)!=(vt1.c1)))))AND((~ (rt0.c0)))))OR(NULL)))OR(((((rt0.c2)OR(vt1.c2)))AND(rt0.c1))))) ORDER BY (((((vt1.c3, rt0.c1, rt0.c0, vt1.c3, vt1.c3))<((rt0.c2, rt0.c2, vt1.c1, rt0.c2, vt1.c0)))) NOT BETWEEN (((((0.21426499336983995)AND(rt0.c2)))OR(vt1.c3))) AND ((((rt0.c2, rt0.c2, vt1.c2))<=((vt1.c3, vt1.c0, x'')))))  NULLS LAST, 'nf9m' COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(NULL AS TEXT))AND(((0.5557460515051291)<>(vt1.c1)))))AND((~ (rt0.c0)))))OR(NULL)))OR(((((rt0.c2)OR(vt1.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c3, rt0.c1, rt0.c0, vt1.c3, vt1.c3))<((rt0.c2, rt0.c2, vt1.c1, rt0.c2, vt1.c0)))) NOT BETWEEN (((((0.21426499336983995)AND(rt0.c2)))OR(vt1.c3))) AND ((((rt0.c2, rt0.c2, vt1.c2))<=((vt1.c3, vt1.c0, x'')))))  NULLS LAST, 'nf9m' COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((CAST(NULL AS TEXT))AND(((0.5557460515051291)!=(vt1.c1)))))AND((~ (rt0.c0)))))OR(NULL)))OR(((((rt0.c2)OR(vt1.c2)))AND(rt0.c1))))) ORDER BY (((((vt1.c3, rt0.c1, rt0.c0, vt1.c3, vt1.c3))<((rt0.c2, rt0.c2, vt1.c1, rt0.c2, vt1.c0)))) NOT BETWEEN (((((0.21426499336983995)AND(rt0.c2)))OR(vt1.c3))) AND ((((rt0.c2, rt0.c2, vt1.c2))<=((vt1.c3, vt1.c0, x'')))))  NULLS LAST, 'nf9m' COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(NULL AS TEXT))AND(((0.5557460515051291)<>(vt1.c1)))))AND((~ (rt0.c0)))))OR(NULL)))OR(((((rt0.c2)OR(vt1.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c3, rt0.c1, rt0.c0, vt1.c3, vt1.c3))<((rt0.c2, rt0.c2, vt1.c1, rt0.c2, vt1.c0)))) NOT BETWEEN (((((0.21426499336983995)AND(rt0.c2)))OR(vt1.c3))) AND ((((rt0.c2, rt0.c2, vt1.c2))<=((vt1.c3, vt1.c0, x'')))))  NULLS LAST, 'nf9m' COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((CAST(NULL AS TEXT))AND(((0.5557460515051291)!=(vt1.c1)))))AND((~ (rt0.c0)))))OR(NULL)))OR(((((rt0.c2)OR(vt1.c2)))AND(rt0.c1))))) ORDER BY (((((vt1.c3, rt0.c1, rt0.c0, vt1.c3, vt1.c3))<((rt0.c2, rt0.c2, vt1.c1, rt0.c2, vt1.c0)))) NOT BETWEEN (((((0.21426499336983995)AND(rt0.c2)))OR(vt1.c3))) AND ((((rt0.c2, rt0.c2, vt1.c2))<=((vt1.c3, vt1.c0, x'')))))  NULLS LAST, 'nf9m' COLLATE RTRIM COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(DISTINCT CASE WHEN vt1.c2 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c3 THEN 'AB/b䘁H' ELSE vt1.c3 END, ((vt1.c0)>=(vt1.c3)))) ORDER BY ((vt1.c3)=(vt1.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CASE WHEN vt1.c2 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c3 THEN 'AB/b䘁H' ELSE vt1.c3 END, ((vt1.c0)>=(vt1.c3)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c3)=(vt1.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(DISTINCT CASE WHEN vt1.c2 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c3 THEN 'AB/b䘁H' ELSE vt1.c3 END, ((vt1.c0)>=(vt1.c3)))) ORDER BY ((vt1.c3)=(vt1.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CASE WHEN vt1.c2 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c3 THEN 'AB/b䘁H' ELSE vt1.c3 END, ((vt1.c0)>=(vt1.c3)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c3)=(vt1.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULLIF(DISTINCT CASE WHEN vt1.c2 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c3 THEN 'AB/b䘁H' ELSE vt1.c3 END, ((vt1.c0)>=(vt1.c3)))) ORDER BY ((vt1.c3)=(vt1.c3)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY '%y!d \r+mF' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY '%y!d \r+mF' DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY '%y!d \r+mF' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY '%y!d \r+mF' DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY '%y!d \r+mF' DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (TRIM(((0.2673523585749368) NOT NULL))) ORDER BY ((vt1.c1)<(vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(((0.2673523585749368) NOT NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c1)<(vt1.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, vt1 WHERE (TRIM(((0.2673523585749368) NOT NULL))) ORDER BY ((vt1.c1)<(vt1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(((0.2673523585749368) NOT NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c1)<(vt1.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, vt1 WHERE (TRIM(((0.2673523585749368) NOT NULL))) ORDER BY ((vt1.c1)<(vt1.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.11784477980483254)<=(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((0.11784477980483254)<=(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.11784477980483254)<=(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((0.11784477980483254)<=(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.11784477980483254)<=(CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM rt0, vt1 WHERE (((- (0.17665851429836)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (0.17665851429836)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((- (0.17665851429836)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (0.17665851429836)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((- (0.17665851429836)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (0Xffffffffd47a7063) ORDER BY ((((rt0.c2) NOTNULL))|(CAST(rt0.c2 AS INTEGER))) DESC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd47a7063) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL))|(CAST(rt0.c2 AS INTEGER))) DESC, NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0Xffffffffd47a7063) ORDER BY ((((rt0.c2) NOTNULL))|(CAST(rt0.c2 AS INTEGER))) DESC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd47a7063) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL))|(CAST(rt0.c2 AS INTEGER))) DESC, NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0Xffffffffd47a7063) ORDER BY ((((rt0.c2) NOTNULL))|(CAST(rt0.c2 AS INTEGER))) DESC, NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1)<<(vt1.c0)) THEN 0.15718595554636816 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1)<<(vt1.c0)) THEN 0.15718595554636816 END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1)<<(vt1.c0)) THEN 0.15718595554636816 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1)<<(vt1.c0)) THEN 0.15718595554636816 END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1)<<(vt1.c0)) THEN 0.15718595554636816 END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)>>(vt1.c1)))IS NOT(0.5257965823306442)) WHERE ((((vt1.c3 IN ())) BETWEEN (CASE WHEN vt1.c2 THEN vt1.c2 END) AND (CASE WHEN vt1.c3 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c3 WHEN 630181485 THEN rt0.c0 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c3 IN ())) BETWEEN (CASE WHEN vt1.c2 THEN vt1.c2 END) AND (CASE WHEN vt1.c3 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c3 WHEN 630181485 THEN rt0.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)>>(vt1.c1)))IS NOT(0.5257965823306442)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)>>(vt1.c1)))IS NOT(0.5257965823306442)) WHERE ((((vt1.c3 IN ())) BETWEEN (CASE WHEN vt1.c2 THEN vt1.c2 END) AND (CASE WHEN vt1.c3 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c3 WHEN 630181485 THEN rt0.c0 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c3 IN ())) BETWEEN (CASE WHEN vt1.c2 THEN vt1.c2 END) AND (CASE WHEN vt1.c3 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c3 WHEN 630181485 THEN rt0.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)>>(vt1.c1)))IS NOT(0.5257965823306442)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)>>(vt1.c1)))IS NOT(0.5257965823306442)) WHERE ((((vt1.c3 IN ())) BETWEEN (CASE WHEN vt1.c2 THEN vt1.c2 END) AND (CASE WHEN vt1.c3 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c3 WHEN 630181485 THEN rt0.c0 ELSE vt1.c1 END)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((((((((vt1.c0)OR(vt1.c3)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt1.c3)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((((((((vt1.c0)OR(vt1.c3)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt1.c0)OR(vt1.c3)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((((((((vt1.c0)OR(vt1.c3)))OR(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)) AS INTEGER));
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((HEX(DISTINCT x''))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))AND((((rt0.c2))!=((rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((HEX(DISTINCT x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))AND((((rt0.c2))!=((rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((HEX(DISTINCT x''))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))AND((((rt0.c2))!=((rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((HEX(DISTINCT x''))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))AND((((rt0.c2))!=((rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((HEX(DISTINCT x''))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))AND((((rt0.c2))!=((rt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (ABS((('1323729036') NOT NULL)));
SELECT SUM(count) FROM (SELECT ((ABS((('1323729036') NOT NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (ABS((('1323729036') NOT NULL)));
SELECT SUM(count) FROM (SELECT ((ABS((('1323729036') NOT NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (ABS((('1323729036') NOT NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('锌|*+*QM' AS BLOB)) ORDER BY CASE WHEN ((0.005170339829069337)>(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(NULL)) ELSE rt0.c0 END, (((NULL)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((rt0.c0))) DESC, ((rt0.c1)OR(((((0.37428781502250097)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('锌|*+*QM' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((0.005170339829069337)>(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(NULL)) ELSE rt0.c0 END, (((NULL)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((rt0.c0))) DESC, ((rt0.c1)OR(((((0.37428781502250097)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('锌|*+*QM' AS BLOB)) ORDER BY CASE WHEN ((0.005170339829069337)>(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(NULL)) ELSE rt0.c0 END, (((NULL)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((rt0.c0))) DESC, ((rt0.c1)OR(((((0.37428781502250097)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('锌|*+*QM' AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((0.005170339829069337)>(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(NULL)) ELSE rt0.c0 END, (((NULL)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((rt0.c0))) DESC, ((rt0.c1)OR(((((0.37428781502250097)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('锌|*+*QM' AS BLOB)) ORDER BY CASE WHEN ((0.005170339829069337)>(rt0.c1)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(NULL)) ELSE rt0.c0 END, (((NULL)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((rt0.c0))) DESC, ((rt0.c1)OR(((((0.37428781502250097)OR(rt0.c2)))AND(rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1)))) AND (((vt1.c0) ISNULL)))) ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c2)<>(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1)))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c2)!=(rt0.c0))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1)))) AND (((vt1.c0) ISNULL)))) ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c2)<>(rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1)))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c2)!=(rt0.c0))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) BETWEEN ((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1)))) AND (((vt1.c0) ISNULL)))) ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c2)<>(rt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (('-1130279511', rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), (rt0.c0 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND (('-306809785', (~ (rt0.c1)), rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) ORDER BY (((((rt0.c1)<(rt0.c2))))<=((((rt0.c1)%(1.769807492E9)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (('-1130279511', rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), (rt0.c0 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND (('-306809785', (~ (rt0.c1)), rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)<(rt0.c2))))<=((((rt0.c1)%(1.769807492E9)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (('-1130279511', rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), (rt0.c0 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND (('-306809785', (~ (rt0.c1)), rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) ORDER BY (((((rt0.c1)<(rt0.c2))))<=((((rt0.c1)%(1.769807492E9)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (('-1130279511', rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), (rt0.c0 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND (('-306809785', (~ (rt0.c1)), rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)<(rt0.c2))))<=((((rt0.c1)%(1.769807492E9)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (('-1130279511', rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), (rt0.c0 IN ()), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND (('-306809785', (~ (rt0.c1)), rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) ORDER BY (((((rt0.c1)<(rt0.c2))))<=((((rt0.c1)%(1.769807492E9)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY (~ ('1649760757')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ ('1649760757')) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY (~ ('1649760757')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ ('1649760757')) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (NULL) ORDER BY (~ ('1649760757')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c2);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c0))%(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c0))%(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c0))%(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c0))%(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(rt0.c0))%(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(DISTINCT LIKELY(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT LIKELY(DISTINCT rt0.c1))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(DISTINCT LIKELY(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT LIKELY(DISTINCT rt0.c1))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(DISTINCT LIKELY(DISTINCT rt0.c1)));
SELECT * FROM vt1 WHERE (((vt1.c3)%(NULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c3)%(NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c3)%(NULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c3)%(NULL))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c3)%(NULL)));
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB));
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c1)LIKE('1152086382'))))<=((((rt0.c2)<=(vt1.c2)))))) ORDER BY x'' DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN ((- (-2080772298))) AND (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)LIKE('1152086382'))))<=((((rt0.c2)<=(vt1.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN ((- (-2080772298))) AND (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c1)LIKE('1152086382'))))<=((((rt0.c2)<=(vt1.c2)))))) ORDER BY x'' DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN ((- (-2080772298))) AND (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)LIKE('1152086382'))))<=((((rt0.c2)<=(vt1.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN ((- (-2080772298))) AND (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((((rt0.c1)LIKE('1152086382'))))<=((((rt0.c2)<=(vt1.c2)))))) ORDER BY x'' DESC  NULLS LAST, rt0.c0 ASC  NULLS LAST, ((CAST(vt1.c1 AS REAL)) NOT BETWEEN ((- (-2080772298))) AND (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS NOT(vt1.c1)))*(CAST(vt1.c2 AS NUMERIC))) WHERE (((vt1.c3)>=(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3)>=(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS NOT(vt1.c1)))*(CAST(vt1.c2 AS NUMERIC))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS NOT(vt1.c1)))*(CAST(vt1.c2 AS NUMERIC))) WHERE (((vt1.c3)>=(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3)>=(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS NOT(vt1.c1)))*(CAST(vt1.c2 AS NUMERIC))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS NOT(vt1.c1)))*(CAST(vt1.c2 AS NUMERIC))) WHERE (((vt1.c3)>=(rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN (((vt1.c3 IN ()))) AND ((CAST(vt1.c0 AS INTEGER))))) ORDER BY ((vt1.c1 IN ()) IN ()) ASC  NULLS FIRST, ((vt1.c0) BETWEEN ((vt1.c3 IN ())) AND (((((((((x'')AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c2)))) ASC  NULLS LAST, vt1.c1;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)) NOT BETWEEN (((vt1.c3 IN ()))) AND ((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 IN ()) IN ()) ASC  NULLS FIRST, ((vt1.c0) BETWEEN ((vt1.c3 IN ())) AND (((((((((x'')AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c2)))) ASC  NULLS LAST, vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN (((vt1.c3 IN ()))) AND ((CAST(vt1.c0 AS INTEGER))))) ORDER BY ((vt1.c1 IN ()) IN ()) ASC  NULLS FIRST, ((vt1.c0) BETWEEN ((vt1.c3 IN ())) AND (((((((((x'')AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c2)))) ASC  NULLS LAST, vt1.c1;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)) NOT BETWEEN (((vt1.c3 IN ()))) AND ((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 IN ()) IN ()) ASC  NULLS FIRST, ((vt1.c0) BETWEEN ((vt1.c3 IN ())) AND (((((((((x'')AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c2)))) ASC  NULLS LAST, vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN (((vt1.c3 IN ()))) AND ((CAST(vt1.c0 AS INTEGER))))) ORDER BY ((vt1.c1 IN ()) IN ()) ASC  NULLS FIRST, ((vt1.c0) BETWEEN ((vt1.c3 IN ())) AND (((((((((x'')AND(vt1.c2)))AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c2)))) ASC  NULLS LAST, vt1.c1;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c3) NOT BETWEEN (rt0.c1) AND (vt1.c1)) AS BLOB) WHERE (vt1.c3 COLLATE NOCASE) ORDER BY NULL  NULLS FIRST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3 COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c3) NOT BETWEEN (rt0.c1) AND (vt1.c1)) AS BLOB) ORDER BY NULL  NULLS FIRST, rt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c3) NOT BETWEEN (rt0.c1) AND (vt1.c1)) AS BLOB) WHERE (vt1.c3 COLLATE NOCASE) ORDER BY NULL  NULLS FIRST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3 COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c3) NOT BETWEEN (rt0.c1) AND (vt1.c1)) AS BLOB) ORDER BY NULL  NULLS FIRST, rt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c3) NOT BETWEEN (rt0.c1) AND (vt1.c1)) AS BLOB) WHERE (vt1.c3 COLLATE NOCASE) ORDER BY NULL  NULLS FIRST, rt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c3))<((vt1.c0))))OR((((vt1.c1, vt1.c0, vt1.c3, vt1.c2, vt1.c1)) BETWEEN ((vt1.c3, x'', vt1.c3, vt1.c3, vt1.c2)) AND ((NULL, '-1696299200', 0.9994748127142132, vt1.c2, vt1.c1))))))OR((('733577723')IS(vt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c3))<((vt1.c0))))OR((((vt1.c1, vt1.c0, vt1.c3, vt1.c2, vt1.c1)) BETWEEN ((vt1.c3, x'', vt1.c3, vt1.c3, vt1.c2)) AND ((NULL, '-1696299200', 0.9994748127142132, vt1.c2, vt1.c1))))))OR((('733577723')IS(vt1.c3))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c3))<((vt1.c0))))OR((((vt1.c1, vt1.c0, vt1.c3, vt1.c2, vt1.c1)) BETWEEN ((vt1.c3, x'', vt1.c3, vt1.c3, vt1.c2)) AND ((NULL, '-1696299200', 0.9994748127142132, vt1.c2, vt1.c1))))))OR((('733577723')IS(vt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c3))<((vt1.c0))))OR((((vt1.c1, vt1.c0, vt1.c3, vt1.c2, vt1.c1)) BETWEEN ((vt1.c3, x'', vt1.c3, vt1.c3, vt1.c2)) AND ((NULL, '-1696299200', 0.9994748127142132, vt1.c2, vt1.c1))))))OR((('733577723')IS(vt1.c3))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((vt1.c3))<((vt1.c0))))OR((((vt1.c1, vt1.c0, vt1.c3, vt1.c2, vt1.c1)) BETWEEN ((vt1.c3, x'', vt1.c3, vt1.c3, vt1.c2)) AND ((NULL, '-1696299200', 0.9994748127142132, vt1.c2, vt1.c1))))))OR((('733577723')IS(vt1.c3)))));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((TRIM(rt0.c2))OR(((vt1.c2)||(vt1.c0)))))OR(-1501111579)))AND(((((((((rt0.c2)AND(rt0.c0)))AND(vt1.c2)))OR(vt1.c2)))OR(rt0.c0)))))AND('?''#% k,')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(rt0.c2))OR(((vt1.c2)||(vt1.c0)))))OR(-1501111579)))AND(((((((((rt0.c2)AND(rt0.c0)))AND(vt1.c2)))OR(vt1.c2)))OR(rt0.c0)))))AND('?''#% k,'))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((TRIM(rt0.c2))OR(((vt1.c2)||(vt1.c0)))))OR(-1501111579)))AND(((((((((rt0.c2)AND(rt0.c0)))AND(vt1.c2)))OR(vt1.c2)))OR(rt0.c0)))))AND('?''#% k,')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(rt0.c2))OR(((vt1.c2)||(vt1.c0)))))OR(-1501111579)))AND(((((((((rt0.c2)AND(rt0.c0)))AND(vt1.c2)))OR(vt1.c2)))OR(rt0.c0)))))AND('?''#% k,'))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((TRIM(rt0.c2))OR(((vt1.c2)||(vt1.c0)))))OR(-1501111579)))AND(((((((((rt0.c2)AND(rt0.c0)))AND(vt1.c2)))OR(vt1.c2)))OR(rt0.c0)))))AND('?''#% k,')));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 WHERE (((0.11784477980483254)AND(CASE 0.4034352856710277  WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) ORDER BY ((rt0.c1)>=(((vt1.c1) BETWEEN (rt0.c1) AND (0xffffffffbc3ec748))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.11784477980483254)AND(CASE 0.4034352856710277  WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 ORDER BY ((rt0.c1)>=(((vt1.c1) BETWEEN (rt0.c1) AND (0Xffffffffbc3ec748))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 WHERE (((0.11784477980483254)AND(CASE 0.4034352856710277  WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) ORDER BY ((rt0.c1)>=(((vt1.c1) BETWEEN (rt0.c1) AND (0xffffffffbc3ec748))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.11784477980483254)AND(CASE 0.4034352856710277  WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 ORDER BY ((rt0.c1)>=(((vt1.c1) BETWEEN (rt0.c1) AND (0Xffffffffbc3ec748))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 WHERE (((0.11784477980483254)AND(CASE 0.4034352856710277  WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END))) ORDER BY ((rt0.c1)>=(((vt1.c1) BETWEEN (rt0.c1) AND (0xffffffffbc3ec748))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON -1963588166 WHERE (CAST(((rt0.c0) BETWEEN ('0.7518296297181969') AND (rt0.c0)) AS BLOB)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN ('0.7518296297181969') AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON -1963588166 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON -1963588166 WHERE (CAST(((rt0.c0) BETWEEN ('0.7518296297181969') AND (rt0.c0)) AS BLOB)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN ('0.7518296297181969') AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON -1963588166 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON -1963588166 WHERE (CAST(((rt0.c0) BETWEEN ('0.7518296297181969') AND (rt0.c0)) AS BLOB)) ORDER BY x'' DESC;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN ()))=((+ (vt1.c1)))) WHERE ('-892139748') ORDER BY (((json(vt1.c0), '510141378', (vt1.c1 IN ())))==((rt0.c1, CASE rt0.c0  WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c0 END, (- (0.5036547740628236)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-892139748') IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN ()))==((+ (vt1.c1)))) ORDER BY (((json(vt1.c0), '510141378', (vt1.c1 IN ())))==((rt0.c1, CASE rt0.c0  WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c0 END, (- (0.5036547740628236)))))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN ()))=((+ (vt1.c1)))) WHERE ('-892139748') ORDER BY (((json(vt1.c0), '510141378', (vt1.c1 IN ())))==((rt0.c1, CASE rt0.c0  WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c0 END, (- (0.5036547740628236)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-892139748') IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN ()))==((+ (vt1.c1)))) ORDER BY (((json(vt1.c0), '510141378', (vt1.c1 IN ())))==((rt0.c1, CASE rt0.c0  WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c0 END, (- (0.5036547740628236)))))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN ()))=((+ (vt1.c1)))) WHERE ('-892139748') ORDER BY (((json(vt1.c0), '510141378', (vt1.c1 IN ())))==((rt0.c1, CASE rt0.c0  WHEN vt1.c1 THEN vt1.c2 ELSE rt0.c0 END, (- (0.5036547740628236)))))  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c2)!=((((rt0.c2))>((rt0.c2)))))) ORDER BY (((rt0.c2)<>(rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)!=((((rt0.c2))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2)<>(rt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c2)!=((((rt0.c2))>((rt0.c2)))))) ORDER BY (((rt0.c2)<>(rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)!=((((rt0.c2))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2)<>(rt0.c0)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c2)!=((((rt0.c2))>((rt0.c2)))))) ORDER BY (((rt0.c2)<>(rt0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt1.c3, rt0.c1)) AND ((rt0.c0, vt1.c0, 'C퇟9UO%ﷱ'))))+((NOT (rt0.c2))))) ORDER BY (((x''))>=(((rt0.c1 IN ())))), CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((((((vt1.c2)OR(rt0.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt1.c3, rt0.c1)) AND ((rt0.c0, vt1.c0, 'C퇟9UO%ﷱ'))))+((NOT (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((x''))>=(((rt0.c1 IN ())))), CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((((((vt1.c2)OR(rt0.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(rt0.c1)) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt1.c3, rt0.c1)) AND ((rt0.c0, vt1.c0, 'C퇟9UO%ﷱ'))))+((NOT (rt0.c2))))) ORDER BY (((x''))>=(((rt0.c1 IN ())))), CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((((((vt1.c2)OR(rt0.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt1.c3, rt0.c1)) AND ((rt0.c0, vt1.c0, 'C퇟9UO%ﷱ'))))+((NOT (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((x''))>=(((rt0.c1 IN ())))), CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((((((vt1.c2)OR(rt0.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(rt0.c1)) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt1.c3, rt0.c1)) AND ((rt0.c0, vt1.c0, 'C퇟9UO%ﷱ'))))+((NOT (rt0.c2))))) ORDER BY (((x''))>=(((rt0.c1 IN ())))), CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((((((vt1.c2)OR(rt0.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(rt0.c1)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) IS TRUE))+(((vt1.c1)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))+(((vt1.c1)>=(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) IS TRUE))+(((vt1.c1)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE))+(((vt1.c1)>=(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c0) IS TRUE))+(((vt1.c1)>=(rt0.c0)))));
SELECT * FROM rt0, vt1 WHERE (TRIM(TYPEOF(rt0.c2), ((rt0.c0)>=(vt1.c3)))) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND(UNLIKELY(vt1.c2))))AND(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TYPEOF(rt0.c2), ((rt0.c0)>=(vt1.c3)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND(UNLIKELY(vt1.c2))))AND(rt0.c0)) DESC);
SELECT * FROM rt0, vt1 WHERE (TRIM(TYPEOF(rt0.c2), ((rt0.c0)>=(vt1.c3)))) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND(UNLIKELY(vt1.c2))))AND(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TYPEOF(rt0.c2), ((rt0.c0)>=(vt1.c3)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND(UNLIKELY(vt1.c2))))AND(rt0.c0)) DESC);
SELECT * FROM rt0, vt1 WHERE (TRIM(TYPEOF(rt0.c2), ((rt0.c0)>=(vt1.c3)))) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))AND(UNLIKELY(vt1.c2))))AND(rt0.c0)) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY QUOTE(CAST(0.42360199661954345 AS REAL))  NULLS LAST, ((((((vt1.c2) NOT NULL))OR(((vt1.c0) NOT NULL))))OR(((rt0.c2)==(vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY QUOTE(CAST(0.42360199661954345 AS REAL))  NULLS LAST, ((((((vt1.c2) NOT NULL))OR(((vt1.c0) NOT NULL))))OR(((rt0.c2)==(vt1.c2)))) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY QUOTE(CAST(0.42360199661954345 AS REAL))  NULLS LAST, ((((((vt1.c2) NOT NULL))OR(((vt1.c0) NOT NULL))))OR(((rt0.c2)==(vt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY QUOTE(CAST(0.42360199661954345 AS REAL))  NULLS LAST, ((((((vt1.c2) NOT NULL))OR(((vt1.c0) NOT NULL))))OR(((rt0.c2)==(vt1.c2)))) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY QUOTE(CAST(0.42360199661954345 AS REAL))  NULLS LAST, ((((((vt1.c2) NOT NULL))OR(((vt1.c0) NOT NULL))))OR(((rt0.c2)==(vt1.c2)))) DESC;
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c2, vt1.c2))>=((vt1.c3, vt1.c3, vt1.c1))))>(0.07193303774569115)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c2, vt1.c2))>=((vt1.c3, vt1.c3, vt1.c1))))>(0.07193303774569115))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c2, vt1.c2))>=((vt1.c3, vt1.c3, vt1.c1))))>(0.07193303774569115)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c2, vt1.c2))>=((vt1.c3, vt1.c3, vt1.c1))))>(0.07193303774569115))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c2, vt1.c2))>=((vt1.c3, vt1.c3, vt1.c1))))>(0.07193303774569115)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) AND ((CAST(0.5063387396955668 AS NUMERIC))))) ORDER BY MIN(rt0.c2 COLLATE NOCASE, ((rt0.c2)>=(rt0.c1))), ((rt0.c1)AND(MAX(rt0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) AND ((CAST(0.5063387396955668 AS NUMERIC))))) IS TRUE)  as count FROM rt0 ORDER BY MIN(rt0.c2 COLLATE NOCASE, ((rt0.c2)>=(rt0.c1))), ((rt0.c1)AND(MAX(rt0.c2, rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) AND ((CAST(0.5063387396955668 AS NUMERIC))))) ORDER BY MIN(rt0.c2 COLLATE NOCASE, ((rt0.c2)>=(rt0.c1))), ((rt0.c1)AND(MAX(rt0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) AND ((CAST(0.5063387396955668 AS NUMERIC))))) IS TRUE)  as count FROM rt0 ORDER BY MIN(rt0.c2 COLLATE NOCASE, ((rt0.c2)>=(rt0.c1))), ((rt0.c1)AND(MAX(rt0.c2, rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) AND ((CAST(0.5063387396955668 AS NUMERIC))))) ORDER BY MIN(rt0.c2 COLLATE NOCASE, ((rt0.c2)>=(rt0.c1))), ((rt0.c1)AND(MAX(rt0.c2, rt0.c1))) ASC;
SELECT * FROM vt1 WHERE (((CAST(vt1.c3 AS INTEGER))>=(((vt1.c2) IS FALSE)))) ORDER BY (((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1))))>=((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c3 AS INTEGER))>=(((vt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1))))>=((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3))))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c3 AS INTEGER))>=(((vt1.c2) IS FALSE)))) ORDER BY (((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1))))>=((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c3 AS INTEGER))>=(((vt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1))))>=((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3))))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c3 AS INTEGER))>=(((vt1.c2) IS FALSE)))) ORDER BY (((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1))))>=((((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3)))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((CAST(rt0.c1 AS TEXT))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) ORDER BY ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC, ((((((0xffffffffcc548171) IS TRUE))AND(((vt1.c0) NOT NULL))))AND(CHAR(rt0.c1))) ASC  NULLS FIRST, (((NULL))==((LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC, ((((((0xffffffffcc548171) IS TRUE))AND(((vt1.c0) NOT NULL))))AND(CHAR(rt0.c1))) ASC  NULLS FIRST, (((NULL))==((LIKELY(DISTINCT rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((CAST(rt0.c1 AS TEXT))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) ORDER BY ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC, ((((((0xffffffffcc548171) IS TRUE))AND(((vt1.c0) NOT NULL))))AND(CHAR(rt0.c1))) ASC  NULLS FIRST, (((NULL))==((LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC, ((((((0xffffffffcc548171) IS TRUE))AND(((vt1.c0) NOT NULL))))AND(CHAR(rt0.c1))) ASC  NULLS FIRST, (((NULL))==((LIKELY(DISTINCT rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((CAST(rt0.c1 AS TEXT))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) ORDER BY ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) DESC, ((((((0xffffffffcc548171) IS TRUE))AND(((vt1.c0) NOT NULL))))AND(CHAR(rt0.c1))) ASC  NULLS FIRST, (((NULL))==((LIKELY(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY ((((- (vt1.c3))))<=((((vt1.c3)>>(rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((- (vt1.c3))))<=((((vt1.c3)>>(rt0.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY ((((- (vt1.c3))))<=((((vt1.c3)>>(rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((- (vt1.c3))))<=((((vt1.c3)>>(rt0.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY ((((- (vt1.c3))))<=((((vt1.c3)>>(rt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((((- (0.6964369782443142)), IFNULL(rt0.c2, vt1.c1), ((vt1.c3)>=(rt0.c2)), ((rt0.c0)AND(vt1.c2)), (NOT (rt0.c2))))<>((((vt1.c3) BETWEEN (rt0.c2) AND (rt0.c0)), vt1.c0, (~ (rt0.c0)), (rt0.c0 IN (vt1.c2)), CAST(vt1.c2 AS TEXT))))) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) END  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((((vt1.c2)=(vt1.c2)))) AND ((((((vt1.c3)OR(vt1.c1)))OR(vt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((- (0.6964369782443142)), IFNULL(rt0.c2, vt1.c1), ((vt1.c3)>=(rt0.c2)), ((rt0.c0)AND(vt1.c2)), (NOT (rt0.c2))))<>((((vt1.c3) BETWEEN (rt0.c2) AND (rt0.c0)), vt1.c0, (~ (rt0.c0)), (rt0.c0 IN (vt1.c2)), CAST(vt1.c2 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) END  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((((vt1.c2)=(vt1.c2)))) AND ((((((vt1.c3)OR(vt1.c1)))OR(vt1.c1)))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((- (0.6964369782443142)), IFNULL(rt0.c2, vt1.c1), ((vt1.c3)>=(rt0.c2)), ((rt0.c0)AND(vt1.c2)), (NOT (rt0.c2))))<>((((vt1.c3) BETWEEN (rt0.c2) AND (rt0.c0)), vt1.c0, (~ (rt0.c0)), (rt0.c0 IN (vt1.c2)), CAST(vt1.c2 AS TEXT))))) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) END  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((((vt1.c2)=(vt1.c2)))) AND ((((((vt1.c3)OR(vt1.c1)))OR(vt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((- (0.6964369782443142)), IFNULL(rt0.c2, vt1.c1), ((vt1.c3)>=(rt0.c2)), ((rt0.c0)AND(vt1.c2)), (NOT (rt0.c2))))<>((((vt1.c3) BETWEEN (rt0.c2) AND (rt0.c0)), vt1.c0, (~ (rt0.c0)), (rt0.c0 IN (vt1.c2)), CAST(vt1.c2 AS TEXT))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) END  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((((vt1.c2)=(vt1.c2)))) AND ((((((vt1.c3)OR(vt1.c1)))OR(vt1.c1)))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((- (0.6964369782443142)), IFNULL(rt0.c2, vt1.c1), ((vt1.c3)>=(rt0.c2)), ((rt0.c0)AND(vt1.c2)), (NOT (rt0.c2))))<>((((vt1.c3) BETWEEN (rt0.c2) AND (rt0.c0)), vt1.c0, (~ (rt0.c0)), (rt0.c0 IN (vt1.c2)), CAST(vt1.c2 AS TEXT))))) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) END  NULLS LAST, (((rt0.c0)) NOT BETWEEN ((((vt1.c2)=(vt1.c2)))) AND ((((((vt1.c3)OR(vt1.c1)))OR(vt1.c1)))))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (((((((((((vt1.c1)AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c0)))<(((vt1.c2)IS(vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c0)))<(((vt1.c2)IS(vt1.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((((vt1.c1)AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c0)))<(((vt1.c2)IS(vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c0)))<(((vt1.c2)IS(vt1.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((((vt1.c1)AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c0)))<(((vt1.c2)IS(vt1.c3)))));
SELECT ALL * FROM vt1, rt0 WHERE ((x'' IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((x'' IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((x'' IN ()) COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c2)==(vt1.c2))))==(((x'f7b5' IN ()))))) ORDER BY (- (((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)==(vt1.c2))))=(((x'f7b5' IN ()))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (- (((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c2)==(vt1.c2))))==(((x'f7b5' IN ()))))) ORDER BY (- (((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)==(vt1.c2))))=(((x'f7b5' IN ()))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (- (((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c2)==(vt1.c2))))==(((x'f7b5' IN ()))))) ORDER BY (- (((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((UNLIKELY(DISTINCT rt0.c2))) AND (((rt0.c1 IN ()))))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((UNLIKELY(DISTINCT rt0.c2))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((UNLIKELY(DISTINCT rt0.c2))) AND (((rt0.c1 IN ()))))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((UNLIKELY(DISTINCT rt0.c2))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((UNLIKELY(DISTINCT rt0.c2))) AND (((rt0.c1 IN ()))))) ORDER BY rt0.c2  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<(((rt0.c1) BETWEEN (NULL) AND (rt0.c1))))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<(((rt0.c1) BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<(((rt0.c1) BETWEEN (NULL) AND (rt0.c1))))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<(((rt0.c1) BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<(((rt0.c1) BETWEEN (NULL) AND (rt0.c1))))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c0 END)OR(((vt1.c0) NOTNULL))))AND(CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 ELSE x'' END)) WHERE (((CASE vt1.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN rt0.c2 WHEN vt1.c3 THEN vt1.c0 END) NOTNULL)) ORDER BY (TIME(rt0.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1, vt1.c3) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((2.056112514E9)<=(vt1.c1)) IN ((((rt0.c2)) BETWEEN ((vt1.c3)) AND ((rt0.c0))))) ASC, CAST(rt0.c0 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN rt0.c2 WHEN vt1.c3 THEN vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c0 END)OR(((vt1.c0) NOTNULL))))AND(CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 ELSE x'' END)) ORDER BY (TIME(rt0.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1, vt1.c3) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((2.056112514E9)<=(vt1.c1)) IN ((((rt0.c2)) BETWEEN ((vt1.c3)) AND ((rt0.c0))))) ASC, CAST(rt0.c0 AS BLOB) DESC);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c0 END)OR(((vt1.c0) NOTNULL))))AND(CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 ELSE x'' END)) WHERE (((CASE vt1.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN rt0.c2 WHEN vt1.c3 THEN vt1.c0 END) NOTNULL)) ORDER BY (TIME(rt0.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1, vt1.c3) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((2.056112514E9)<=(vt1.c1)) IN ((((rt0.c2)) BETWEEN ((vt1.c3)) AND ((rt0.c0))))) ASC, CAST(rt0.c0 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN rt0.c2 WHEN vt1.c3 THEN vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c0 END)OR(((vt1.c0) NOTNULL))))AND(CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 ELSE x'' END)) ORDER BY (TIME(rt0.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1, vt1.c3) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((2.056112514E9)<=(vt1.c1)) IN ((((rt0.c2)) BETWEEN ((vt1.c3)) AND ((rt0.c0))))) ASC, CAST(rt0.c0 AS BLOB) DESC);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c0 END)OR(((vt1.c0) NOTNULL))))AND(CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 ELSE x'' END)) WHERE (((CASE vt1.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN rt0.c2 WHEN vt1.c3 THEN vt1.c0 END) NOTNULL)) ORDER BY (TIME(rt0.c0, vt1.c3, rt0.c2, vt1.c2, rt0.c1, vt1.c1, vt1.c3) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END)) DESC  NULLS FIRST, (((2.056112514E9)<=(vt1.c1)) IN ((((rt0.c2)) BETWEEN ((vt1.c3)) AND ((rt0.c0))))) ASC, CAST(rt0.c0 AS BLOB) DESC;
SELECT * FROM rt0, vt1 WHERE (load_extension(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c2 END, ((rt0.c2)>(vt1.c2)))) ORDER BY TRIM(DISTINCT (+ (rt0.c0)), vt1.c3), (x'' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c2 END, ((rt0.c2)>(vt1.c2)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY TRIM(DISTINCT (+ (rt0.c0)), vt1.c3), (x'' IN ())  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (load_extension(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c2 END, ((rt0.c2)>(vt1.c2)))) ORDER BY TRIM(DISTINCT (+ (rt0.c0)), vt1.c3), (x'' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c2 END, ((rt0.c2)>(vt1.c2)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY TRIM(DISTINCT (+ (rt0.c0)), vt1.c3), (x'' IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY CAST(((vt1.c1)>=(rt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((vt1.c1)>=(rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY CAST(((vt1.c1)>=(rt0.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((vt1.c1)>=(rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY CAST(((vt1.c1)>=(rt0.c1)) AS TEXT);
SELECT * FROM vt1 WHERE ((((((vt1.c2, vt1.c1, vt1.c0))=((vt1.c1, vt1.c2, vt1.c1))))>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2, vt1.c1, vt1.c0))=((vt1.c1, vt1.c2, vt1.c1))))>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c2, vt1.c1, vt1.c0))=((vt1.c1, vt1.c2, vt1.c1))))>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2, vt1.c1, vt1.c0))=((vt1.c1, vt1.c2, vt1.c1))))>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c2, vt1.c1, vt1.c0))=((vt1.c1, vt1.c2, vt1.c1))))>((vt1.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)OR(rt0.c1)) IN ())) ORDER BY ((x'')-(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((x'')-(rt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)OR(rt0.c1)) IN ())) ORDER BY ((x'')-(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((x'')-(rt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)OR(rt0.c1)) IN ())) ORDER BY ((x'')-(rt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(',>O엡RxT')))OR(vt1.c2)))AND(vt1.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(',>O엡RxT')))OR(vt1.c2)))AND(vt1.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(',>O엡RxT')))OR(vt1.c2)))AND(vt1.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(',>O엡RxT')))OR(vt1.c2)))AND(vt1.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))AND(',>O엡RxT')))OR(vt1.c2)))AND(vt1.c2))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY ((((~ (vt1.c0)), (NULL IN ()), ((NULL)IS NOT(vt1.c2))))==((CAST(vt1.c0 AS TEXT), (~ (0.3314784630944627)), vt1.c3 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY ((((~ (vt1.c0)), (NULL IN ()), ((NULL)IS NOT(vt1.c2))))=((CAST(vt1.c0 AS TEXT), (~ (0.3314784630944627)), vt1.c3 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY ((((~ (vt1.c0)), (NULL IN ()), ((NULL)IS NOT(vt1.c2))))==((CAST(vt1.c0 AS TEXT), (~ (0.3314784630944627)), vt1.c3 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY ((((~ (vt1.c0)), (NULL IN ()), ((NULL)IS NOT(vt1.c2))))=((CAST(vt1.c0 AS TEXT), (~ (0.3314784630944627)), vt1.c3 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c2) ORDER BY ((((~ (vt1.c0)), (NULL IN ()), ((NULL)IS NOT(vt1.c2))))==((CAST(vt1.c0 AS TEXT), (~ (0.3314784630944627)), vt1.c3 COLLATE NOCASE)))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((- (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(vt1.c3))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(vt1.c3))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c2)))OR(vt1.c1)))AND(vt1.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c1 END, vt1.c0)) ORDER BY (((vt1.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((COALESCE(DISTINCT vt1.c3, rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c1 END, vt1.c0)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((COALESCE(DISTINCT vt1.c3, rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c1 END, vt1.c0)) ORDER BY (((vt1.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((COALESCE(DISTINCT vt1.c3, rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c1 END, vt1.c0)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((COALESCE(DISTINCT vt1.c3, rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(CASE WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c1 END, vt1.c0)) ORDER BY (((vt1.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((COALESCE(DISTINCT vt1.c3, rt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)-(rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c1)-(rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)-(rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c1)-(rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)-(rt0.c0)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c3) NOTNULL) COLLATE RTRIM) ORDER BY ((+ (vt1.c3)) IN (((vt1.c1)>(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((+ (vt1.c3)) IN (((vt1.c1)>(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c3) NOTNULL) COLLATE RTRIM) ORDER BY ((+ (vt1.c3)) IN (((vt1.c1)>(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((+ (vt1.c3)) IN (((vt1.c1)>(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c3) NOTNULL) COLLATE RTRIM) ORDER BY ((+ (vt1.c3)) IN (((vt1.c1)>(vt1.c0)))) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)) IN (((((vt1.c1)AND(vt1.c2)))AND(vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)) IN (((((vt1.c1)AND(vt1.c2)))AND(vt1.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)) IN (((((vt1.c1)AND(vt1.c2)))AND(vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)) IN (((((vt1.c1)AND(vt1.c2)))AND(vt1.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)) IN (((((vt1.c1)AND(vt1.c2)))AND(vt1.c3)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((+ (vt1.c0)))=(CHANGES())));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))=(CHANGES()))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((+ (vt1.c0)))=(CHANGES())));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))=(CHANGES()))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((+ (vt1.c0)))=(CHANGES())));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (CAST(vt1.c2 AS TEXT) IN (vt1.c3)) WHERE (((((0.9422570667578896)AND(((vt1.c3)&(vt1.c3)))))AND(0.6414576822826836)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9422570667578896)AND(((vt1.c3)&(vt1.c3)))))AND(0.6414576822826836))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (CAST(vt1.c2 AS TEXT) IN (vt1.c3)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (CAST(vt1.c2 AS TEXT) IN (vt1.c3)) WHERE (((((0.9422570667578896)AND(((vt1.c3)&(vt1.c3)))))AND(0.6414576822826836)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9422570667578896)AND(((vt1.c3)&(vt1.c3)))))AND(0.6414576822826836))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (CAST(vt1.c2 AS TEXT) IN (vt1.c3)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (CAST(vt1.c2 AS TEXT) IN (vt1.c3)) WHERE (((((0.9422570667578896)AND(((vt1.c3)&(vt1.c3)))))AND(0.6414576822826836)));
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)GLOB(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)GLOB(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)GLOB(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)GLOB(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0 COLLATE RTRIM)GLOB(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT ALL * FROM vt1 WHERE (vt1.c3 COLLATE RTRIM) ORDER BY ((((vt1.c1)>>(vt1.c2)))<(vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c3 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)>>(vt1.c2)))<(vt1.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c3 COLLATE RTRIM) ORDER BY ((((vt1.c1)>>(vt1.c2)))<(vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c3 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)>>(vt1.c2)))<(vt1.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c3 COLLATE RTRIM) ORDER BY ((((vt1.c1)>>(vt1.c2)))<(vt1.c0 COLLATE RTRIM)) ASC;
SELECT * FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN '' THEN NULL WHEN rt0.c2 THEN (((((((('_w')OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(x'261a')) WHEN '1574734524' THEN ((rt0.c1)AND(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c2))  WHEN '' THEN NULL WHEN rt0.c2 THEN (((((((('_w')OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(x'261a')) WHEN '1574734524' THEN ((rt0.c1)AND(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN '' THEN NULL WHEN rt0.c2 THEN (((((((('_w')OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(x'261a')) WHEN '1574734524' THEN ((rt0.c1)AND(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c2))  WHEN '' THEN NULL WHEN rt0.c2 THEN (((((((('_w')OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(x'261a')) WHEN '1574734524' THEN ((rt0.c1)AND(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN '' THEN NULL WHEN rt0.c2 THEN (((((((('_w')OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(x'261a')) WHEN '1574734524' THEN ((rt0.c1)AND(rt0.c1)) ELSE rt0.c1 COLLATE BINARY END);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c3)+(rt0.c1)))GLOB((vt1.c0 IN ())))) ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c2 WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1)||(vt1.c1)) THEN ((vt1.c1)-(vt1.c2)) WHEN (NOT ('')) THEN (- (vt1.c3)) ELSE ((rt0.c2)+(rt0.c1)) END DESC  NULLS FIRST, CAST(vt1.c1 COLLATE BINARY AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3)+(rt0.c1)))GLOB((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c2 WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1)||(vt1.c1)) THEN ((vt1.c1)-(vt1.c2)) WHEN (NOT ('')) THEN (- (vt1.c3)) ELSE ((rt0.c2)+(rt0.c1)) END DESC  NULLS FIRST, CAST(vt1.c1 COLLATE BINARY AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c3)+(rt0.c1)))GLOB((vt1.c0 IN ())))) ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c2 WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1)||(vt1.c1)) THEN ((vt1.c1)-(vt1.c2)) WHEN (NOT ('')) THEN (- (vt1.c3)) ELSE ((rt0.c2)+(rt0.c1)) END DESC  NULLS FIRST, CAST(vt1.c1 COLLATE BINARY AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3)+(rt0.c1)))GLOB((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c2 WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1)||(vt1.c1)) THEN ((vt1.c1)-(vt1.c2)) WHEN (NOT ('')) THEN (- (vt1.c3)) ELSE ((rt0.c2)+(rt0.c1)) END DESC  NULLS FIRST, CAST(vt1.c1 COLLATE BINARY AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c3)+(rt0.c1)))GLOB((vt1.c0 IN ())))) ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c2 AS TEXT) THEN CASE rt0.c1  WHEN rt0.c1 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c2 WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1)||(vt1.c1)) THEN ((vt1.c1)-(vt1.c2)) WHEN (NOT ('')) THEN (- (vt1.c3)) ELSE ((rt0.c2)+(rt0.c1)) END DESC  NULLS FIRST, CAST(vt1.c1 COLLATE BINARY AS REAL) ASC  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)<(rt0.c1)))&((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c1)))&((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)<(rt0.c1)))&((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c1)))&((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)<(rt0.c1)))&((vt1.c1 IN ()))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN (~ (rt0.c0)) WHEN (+ (rt0.c1)) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c3)) WHEN ((vt1.c2)<=(vt1.c1)) THEN rt0.c1 ELSE CASE vt1.c1  WHEN vt1.c3 THEN rt0.c2 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TOTAL_CHANGES() THEN (~ (rt0.c0)) WHEN (+ (rt0.c1)) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c3)) WHEN ((vt1.c2)<=(vt1.c1)) THEN rt0.c1 ELSE CASE vt1.c1  WHEN vt1.c3 THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN (~ (rt0.c0)) WHEN (+ (rt0.c1)) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c3)) WHEN ((vt1.c2)<=(vt1.c1)) THEN rt0.c1 ELSE CASE vt1.c1  WHEN vt1.c3 THEN rt0.c2 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TOTAL_CHANGES() THEN (~ (rt0.c0)) WHEN (+ (rt0.c1)) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c3)) WHEN ((vt1.c2)<=(vt1.c1)) THEN rt0.c1 ELSE CASE vt1.c1  WHEN vt1.c3 THEN rt0.c2 ELSE rt0.c2 END END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN (~ (rt0.c0)) WHEN (+ (rt0.c1)) THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c3)) WHEN ((vt1.c2)<=(vt1.c1)) THEN rt0.c1 ELSE CASE vt1.c1  WHEN vt1.c3 THEN rt0.c2 ELSE rt0.c2 END END);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))IS NOT(((vt1.c2)/(NULL))))) ORDER BY (0.6606932564490653 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt0.c2)))IS NOT(((vt1.c2)/(NULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (0.6606932564490653 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))IS NOT(((vt1.c2)/(NULL))))) ORDER BY (0.6606932564490653 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt0.c2)))IS NOT(((vt1.c2)/(NULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (0.6606932564490653 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))IS NOT(((vt1.c2)/(NULL))))) ORDER BY (0.6606932564490653 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ('[]');
SELECT SUM(count) FROM (SELECT ALL (('[]') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ('[]');
SELECT SUM(count) FROM (SELECT ALL (('[]') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ('[]');
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c2))) NOTNULL));
SELECT * FROM rt0, vt1 WHERE (CASE WHEN (~ (rt0.c2)) THEN ((vt1.c2) BETWEEN (vt1.c1) AND (rt0.c0)) END) ORDER BY ((((rt0.c1) NOT NULL))IS NOT(vt1.c3 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c2)) THEN ((vt1.c2) BETWEEN (vt1.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) NOT NULL))IS NOT(vt1.c3 COLLATE NOCASE)) ASC);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN (~ (rt0.c2)) THEN ((vt1.c2) BETWEEN (vt1.c1) AND (rt0.c0)) END) ORDER BY ((((rt0.c1) NOT NULL))IS NOT(vt1.c3 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c2)) THEN ((vt1.c2) BETWEEN (vt1.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) NOT NULL))IS NOT(vt1.c3 COLLATE NOCASE)) ASC);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN (~ (rt0.c2)) THEN ((vt1.c2) BETWEEN (vt1.c1) AND (rt0.c0)) END) ORDER BY ((((rt0.c1) NOT NULL))IS NOT(vt1.c3 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1))) NOT BETWEEN ((((vt1.c1, rt0.c1, vt1.c2)) NOT BETWEEN ((vt1.c0, rt0.c1, vt1.c1)) AND ((vt1.c2, rt0.c1, NULL)))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1))) NOT BETWEEN ((((vt1.c1, rt0.c1, vt1.c2)) NOT BETWEEN ((vt1.c0, rt0.c1, vt1.c1)) AND ((vt1.c2, rt0.c1, NULL)))) AND (x''))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1))) NOT BETWEEN ((((vt1.c1, rt0.c1, vt1.c2)) NOT BETWEEN ((vt1.c0, rt0.c1, vt1.c1)) AND ((vt1.c2, rt0.c1, NULL)))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1))) NOT BETWEEN ((((vt1.c1, rt0.c1, vt1.c2)) NOT BETWEEN ((vt1.c0, rt0.c1, vt1.c1)) AND ((vt1.c2, rt0.c1, NULL)))) AND (x''))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c1))) NOT BETWEEN ((((vt1.c1, rt0.c1, vt1.c2)) NOT BETWEEN ((vt1.c0, rt0.c1, vt1.c1)) AND ((vt1.c2, rt0.c1, NULL)))) AND (x'')));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (vt1.c3) AND (rt0.c2))) NOTNULL)) ORDER BY ((rt0.c0)+(vt1.c1)) COLLATE BINARY, ((x'6f02') NOT BETWEEN (((vt1.c2)!=(rt0.c2))) AND (((vt1.c1)-(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(rt0.c1)))OR(vt1.c3)))OR(vt1.c1))) AND (((((vt1.c0)AND(x'')))AND(vt1.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (vt1.c3) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0)+(vt1.c1)) COLLATE BINARY, ((x'6f02') NOT BETWEEN (((vt1.c2)!=(rt0.c2))) AND (((vt1.c1)-(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(rt0.c1)))OR(vt1.c3)))OR(vt1.c1))) AND (((((vt1.c0)AND(x'')))AND(vt1.c3)))));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (vt1.c3) AND (rt0.c2))) NOTNULL)) ORDER BY ((rt0.c0)+(vt1.c1)) COLLATE BINARY, ((x'6f02') NOT BETWEEN (((vt1.c2)!=(rt0.c2))) AND (((vt1.c1)-(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(rt0.c1)))OR(vt1.c3)))OR(vt1.c1))) AND (((((vt1.c0)AND(x'')))AND(vt1.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (vt1.c3) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0)+(vt1.c1)) COLLATE BINARY, ((x'6f02') NOT BETWEEN (((vt1.c2)!=(rt0.c2))) AND (((vt1.c1)-(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(rt0.c1)))OR(vt1.c3)))OR(vt1.c1))) AND (((((vt1.c0)AND(x'')))AND(vt1.c3)))));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (vt1.c3) AND (rt0.c2))) NOTNULL)) ORDER BY ((rt0.c0)+(vt1.c1)) COLLATE BINARY, ((x'6f02') NOT BETWEEN (((vt1.c2)!=(rt0.c2))) AND (((vt1.c1)-(rt0.c1)))) ASC  NULLS LAST, ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(rt0.c1)))OR(vt1.c3)))OR(vt1.c1))) AND (((((vt1.c0)AND(x'')))AND(vt1.c3))));
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)-(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL * FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS TEXT)) ORDER BY (((463513408, json_array_length(rt0.c2, rt0.c2), ((rt0.c1)&(rt0.c2)), (- (rt0.c2)), (rt0.c2 IN (rt0.c2))))<>((rt0.c0, HEX(rt0.c0), rt0.c0, CAST(rt0.c1 AS BLOB), ((rt0.c0) BETWEEN (NULL) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((463513408, json_array_length(rt0.c2, rt0.c2), ((rt0.c1)&(rt0.c2)), (- (rt0.c2)), (rt0.c2 IN (rt0.c2))))!=((rt0.c0, HEX(rt0.c0), rt0.c0, CAST(rt0.c1 AS BLOB), ((rt0.c0) BETWEEN (NULL) AND (rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS TEXT)) ORDER BY (((463513408, json_array_length(rt0.c2, rt0.c2), ((rt0.c1)&(rt0.c2)), (- (rt0.c2)), (rt0.c2 IN (rt0.c2))))<>((rt0.c0, HEX(rt0.c0), rt0.c0, CAST(rt0.c1 AS BLOB), ((rt0.c0) BETWEEN (NULL) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((463513408, json_array_length(rt0.c2, rt0.c2), ((rt0.c1)&(rt0.c2)), (- (rt0.c2)), (rt0.c2 IN (rt0.c2))))!=((rt0.c0, HEX(rt0.c0), rt0.c0, CAST(rt0.c1 AS BLOB), ((rt0.c0) BETWEEN (NULL) AND (rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS TEXT)) ORDER BY (((463513408, json_array_length(rt0.c2, rt0.c2), ((rt0.c1)&(rt0.c2)), (- (rt0.c2)), (rt0.c2 IN (rt0.c2))))<>((rt0.c0, HEX(rt0.c0), rt0.c0, CAST(rt0.c1 AS BLOB), ((rt0.c0) BETWEEN (NULL) AND (rt0.c0)))));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))) ORDER BY ((((vt1.c3)<<(vt1.c2)))IS NOT(CASE rt0.c2  WHEN vt1.c2 THEN vt1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c3)<<(vt1.c2)))IS NOT(CASE rt0.c2  WHEN vt1.c2 THEN vt1.c1 END))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))) ORDER BY ((((vt1.c3)<<(vt1.c2)))IS NOT(CASE rt0.c2  WHEN vt1.c2 THEN vt1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c3)<<(vt1.c2)))IS NOT(CASE rt0.c2  WHEN vt1.c2 THEN vt1.c1 END))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE)))) ORDER BY ((((vt1.c3)<<(vt1.c2)))IS NOT(CASE rt0.c2  WHEN vt1.c2 THEN vt1.c1 END))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((((vt1.c2))<((vt1.c3))))) AND ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN (((((vt1.c2))<((vt1.c3))))) AND ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((((vt1.c2))<((vt1.c3))))) AND ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN (((((vt1.c2))<((vt1.c3))))) AND ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((((vt1.c2))<((vt1.c3))))) AND ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c3)AND(CASE WHEN vt1.c3 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c2 END)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c3)AND(CASE WHEN vt1.c3 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c2 END)))AND(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c3)AND(CASE WHEN vt1.c3 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c2 END)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c3)AND(CASE WHEN vt1.c3 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c2 END)))AND(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c3)AND(CASE WHEN vt1.c3 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 ELSE vt1.c2 END)))AND(NULL)));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c2 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0 WHERE (x'') ORDER BY CASE WHEN NULL THEN rt0.c0 ELSE vt1.c1 END  NULLS LAST, ((vt1.c2) BETWEEN (((rt0.c1)+(rt0.c2))) AND (rt0.c1 COLLATE NOCASE))  NULLS LAST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN NULL THEN rt0.c0 ELSE vt1.c1 END  NULLS LAST, ((vt1.c2) BETWEEN (((rt0.c1)+(rt0.c2))) AND (rt0.c1 COLLATE NOCASE))  NULLS LAST, vt1.c1 ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (x'') ORDER BY CASE WHEN NULL THEN rt0.c0 ELSE vt1.c1 END  NULLS LAST, ((vt1.c2) BETWEEN (((rt0.c1)+(rt0.c2))) AND (rt0.c1 COLLATE NOCASE))  NULLS LAST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN NULL THEN rt0.c0 ELSE vt1.c1 END  NULLS LAST, ((vt1.c2) BETWEEN (((rt0.c1)+(rt0.c2))) AND (rt0.c1 COLLATE NOCASE))  NULLS LAST, vt1.c1 ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (x'') ORDER BY CASE WHEN NULL THEN rt0.c0 ELSE vt1.c1 END  NULLS LAST, ((vt1.c2) BETWEEN (((rt0.c1)+(rt0.c2))) AND (rt0.c1 COLLATE NOCASE))  NULLS LAST, vt1.c1 ASC;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c2) BETWEEN (vt1.c3) AND (vt1.c3)), CAST(rt0.c2 AS BLOB), (((vt1.c1))>=((vt1.c1)))))<>((((((rt0.c2)OR(vt1.c1)))OR(rt0.c0)), '-1529678354', (~ (rt0.c1)))))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (vt1.c3) AND (vt1.c3)), CAST(rt0.c2 AS BLOB), (((vt1.c1))>=((vt1.c1)))))!=((((((rt0.c2)OR(vt1.c1)))OR(rt0.c0)), '-1529678354', (~ (rt0.c1)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY vt1.c0 DESC);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c2) BETWEEN (vt1.c3) AND (vt1.c3)), CAST(rt0.c2 AS BLOB), (((vt1.c1))>=((vt1.c1)))))<>((((((rt0.c2)OR(vt1.c1)))OR(rt0.c0)), '-1529678354', (~ (rt0.c1)))))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (vt1.c3) AND (vt1.c3)), CAST(rt0.c2 AS BLOB), (((vt1.c1))>=((vt1.c1)))))!=((((((rt0.c2)OR(vt1.c1)))OR(rt0.c0)), '-1529678354', (~ (rt0.c1)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY vt1.c0 DESC);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c2) BETWEEN (vt1.c3) AND (vt1.c3)), CAST(rt0.c2 AS BLOB), (((vt1.c1))>=((vt1.c1)))))<>((((((rt0.c2)OR(vt1.c1)))OR(rt0.c0)), '-1529678354', (~ (rt0.c1)))))) ORDER BY vt1.c0 DESC;
SELECT * FROM rt0, vt1 WHERE (vt1.c2) ORDER BY ((vt1.c3)GLOB(-1653466335)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c3)GLOB(-1653466335)) ASC);
SELECT * FROM rt0, vt1 WHERE (vt1.c2) ORDER BY ((vt1.c3)GLOB(-1653466335)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c3)GLOB(-1653466335)) ASC);
SELECT * FROM rt0, vt1 WHERE (vt1.c2) ORDER BY ((vt1.c3)GLOB(-1653466335)) ASC;
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c3) ORDER BY TIME('657614764', CAST(vt1.c2 AS REAL), ((rt0.c2)IS NOT(rt0.c2))), (NOT (vt1.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3) IS TRUE)  as count FROM vt1, rt0 ORDER BY TIME('657614764', CAST(vt1.c2 AS REAL), ((rt0.c2)IS NOT(rt0.c2))), (NOT (vt1.c3 COLLATE NOCASE)));
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c3) ORDER BY TIME('657614764', CAST(vt1.c2 AS REAL), ((rt0.c2)IS NOT(rt0.c2))), (NOT (vt1.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3) IS TRUE)  as count FROM vt1, rt0 ORDER BY TIME('657614764', CAST(vt1.c2 AS REAL), ((rt0.c2)IS NOT(rt0.c2))), (NOT (vt1.c3 COLLATE NOCASE)));
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c3) ORDER BY TIME('657614764', CAST(vt1.c2 AS REAL), ((rt0.c2)IS NOT(rt0.c2))), (NOT (vt1.c3 COLLATE NOCASE));
SELECT * FROM rt0, vt1 WHERE (((((((((vt1.c3 COLLATE BINARY)OR(((0Xffffffffe9325647)<<(rt0.c2)))))AND(((vt1.c3) BETWEEN (rt0.c2) AND (vt1.c2)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2)))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c3 COLLATE BINARY)OR(((0Xffffffffe9325647)<<(rt0.c2)))))AND(((vt1.c3) BETWEEN (rt0.c2) AND (vt1.c2)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2)))))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((vt1.c3 COLLATE BINARY)OR(((0Xffffffffe9325647)<<(rt0.c2)))))AND(((vt1.c3) BETWEEN (rt0.c2) AND (vt1.c2)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2)))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c3 COLLATE BINARY)OR(((0Xffffffffe9325647)<<(rt0.c2)))))AND(((vt1.c3) BETWEEN (rt0.c2) AND (vt1.c2)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2)))))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((vt1.c3 COLLATE BINARY)OR(((0Xffffffffe9325647)<<(rt0.c2)))))AND(((vt1.c3) BETWEEN (rt0.c2) AND (vt1.c2)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2)))))AND(rt0.c1)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((rt0.c0)OR(0.7050498062553061)))AND(vt1.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c2)))GLOB(((rt0.c2)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0)OR(0.7050498062553061)))AND(vt1.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c2)))GLOB(((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((rt0.c0)OR(0.7050498062553061)))AND(vt1.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c2)))GLOB(((rt0.c2)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0)OR(0.7050498062553061)))AND(vt1.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c2)))GLOB(((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((rt0.c0)OR(0.7050498062553061)))AND(vt1.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c2)))GLOB(((rt0.c2)&(rt0.c1)))));
SELECT ALL * FROM rt0, vt1 WHERE (CAST(QUOTE(rt0.c1) AS BLOB)) ORDER BY ((((rt0.c0)GLOB(rt0.c1)))<<(LTRIM('L}'))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(QUOTE(rt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0)GLOB(rt0.c1)))<<(LTRIM('L}'))), NULL DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(QUOTE(rt0.c1) AS BLOB)) ORDER BY ((((rt0.c0)GLOB(rt0.c1)))<<(LTRIM('L}'))), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(QUOTE(rt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0)GLOB(rt0.c1)))<<(LTRIM('L}'))), NULL DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(QUOTE(rt0.c1) AS BLOB)) ORDER BY ((((rt0.c0)GLOB(rt0.c1)))<<(LTRIM('L}'))), NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((COALESCE(-1749031584, vt1.c2))OR(vt1.c1)))AND((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c3)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(-1749031584, vt1.c2))OR(vt1.c1)))AND((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c3)))))) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((COALESCE(-1749031584, vt1.c2))OR(vt1.c1)))AND((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c3)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(-1749031584, vt1.c2))OR(vt1.c1)))AND((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c3)))))) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((COALESCE(-1749031584, vt1.c2))OR(vt1.c1)))AND((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c3)))))) ORDER BY x''  NULLS FIRST;
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c1 END) ISNULL)) ORDER BY ((((vt1.c3)>(-0.0))) BETWEEN (vt1.c2 COLLATE BINARY) AND ((('Dnx혈') NOT BETWEEN (vt1.c0) AND (vt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c1 END) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c3)>(-0.0))) BETWEEN (vt1.c2 COLLATE BINARY) AND ((('Dnx혈') NOT BETWEEN (vt1.c0) AND (vt1.c3))))  NULLS LAST);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c1 END) ISNULL)) ORDER BY ((((vt1.c3)>(-0.0))) BETWEEN (vt1.c2 COLLATE BINARY) AND ((('Dnx혈') NOT BETWEEN (vt1.c0) AND (vt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c1 END) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c3)>(-0.0))) BETWEEN (vt1.c2 COLLATE BINARY) AND ((('Dnx혈') NOT BETWEEN (vt1.c0) AND (vt1.c3))))  NULLS LAST);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c1 END) ISNULL)) ORDER BY ((((vt1.c3)>(-0.0))) BETWEEN (vt1.c2 COLLATE BINARY) AND ((('Dnx혈') NOT BETWEEN (vt1.c0) AND (vt1.c3))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD((- (vt1.c1)), 0.46240298514905054)) ORDER BY CAST(((NULL) NOTNULL) AS BLOB) DESC, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (vt1.c1)), 0.46240298514905054)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((NULL) NOTNULL) AS BLOB) DESC, vt1.c1 ASC);
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD((- (vt1.c1)), 0.46240298514905054)) ORDER BY CAST(((NULL) NOTNULL) AS BLOB) DESC, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (vt1.c1)), 0.46240298514905054)) IS TRUE)  as count FROM vt1 ORDER BY CAST(((NULL) NOTNULL) AS BLOB) DESC, vt1.c1 ASC);
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD((- (vt1.c1)), 0.46240298514905054)) ORDER BY CAST(((NULL) NOTNULL) AS BLOB) DESC, vt1.c1 ASC;
SELECT * FROM vt1, rt0 WHERE (((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((((rt0.c2)OR(vt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((((rt0.c2)OR(vt1.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ()))AND(((rt0.c1)!=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))AND(((rt0.c1)!=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ()))AND(((rt0.c1)!=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))AND(((rt0.c1)!=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ()))AND(((rt0.c1)!=(rt0.c1)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c2)) AND ((CASE WHEN vt1.c1 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c2)) AND ((CASE WHEN vt1.c1 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c2)) AND ((CASE WHEN vt1.c1 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c2)) AND ((CASE WHEN vt1.c1 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c2)) AND ((CASE WHEN vt1.c1 THEN rt0.c1 END))));
SELECT * FROM vt1, rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (CASE WHEN rt0.c2 THEN vt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (CASE WHEN rt0.c2 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (CASE WHEN rt0.c2 THEN vt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (CASE WHEN rt0.c2 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c0)>=(rt0.c1))) AND (CASE WHEN rt0.c2 THEN vt1.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)<>(((rt0.c1)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)<>(((rt0.c1)*(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)<>(((rt0.c1)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)<>(((rt0.c1)*(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)<>(((rt0.c1)*(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c3) NOT BETWEEN (vt1.c0) AND (NULL)))||(vt1.c1))) ORDER BY (('2123721992')IS NOT(((vt1.c2) NOTNULL)))  NULLS FIRST, (((- (rt0.c0))) NOT BETWEEN (((rt0.c2)<(vt1.c2))) AND (((vt1.c2)>(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3) NOT BETWEEN (vt1.c0) AND (NULL)))||(vt1.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('2123721992')IS NOT(((vt1.c2) NOTNULL)))  NULLS FIRST, (((- (rt0.c0))) NOT BETWEEN (((rt0.c2)<(vt1.c2))) AND (((vt1.c2)>(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c3) NOT BETWEEN (vt1.c0) AND (NULL)))||(vt1.c1))) ORDER BY (('2123721992')IS NOT(((vt1.c2) NOTNULL)))  NULLS FIRST, (((- (rt0.c0))) NOT BETWEEN (((rt0.c2)<(vt1.c2))) AND (((vt1.c2)>(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3) NOT BETWEEN (vt1.c0) AND (NULL)))||(vt1.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('2123721992')IS NOT(((vt1.c2) NOTNULL)))  NULLS FIRST, (((- (rt0.c0))) NOT BETWEEN (((rt0.c2)<(vt1.c2))) AND (((vt1.c2)>(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c3) NOT BETWEEN (vt1.c0) AND (NULL)))||(vt1.c1))) ORDER BY (('2123721992')IS NOT(((vt1.c2) NOTNULL)))  NULLS FIRST, (((- (rt0.c0))) NOT BETWEEN (((rt0.c2)<(vt1.c2))) AND (((vt1.c2)>(vt1.c1))));
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(vt1.c3 COLLATE NOCASE)))AND((rt0.c0 IN ())))) ORDER BY CASE WHEN TRIM(DISTINCT vt1.c1, vt1.c0) THEN CASE '3}CLID'  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c2) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE NOCASE)AND(vt1.c3 COLLATE NOCASE)))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN TRIM(DISTINCT vt1.c1, vt1.c0) THEN CASE '3}CLID'  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c2) IS FALSE) END  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(vt1.c3 COLLATE NOCASE)))AND((rt0.c0 IN ())))) ORDER BY CASE WHEN TRIM(DISTINCT vt1.c1, vt1.c0) THEN CASE '3}CLID'  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c2) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE NOCASE)AND(vt1.c3 COLLATE NOCASE)))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN TRIM(DISTINCT vt1.c1, vt1.c0) THEN CASE '3}CLID'  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c2) IS FALSE) END  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(vt1.c3 COLLATE NOCASE)))AND((rt0.c0 IN ())))) ORDER BY CASE WHEN TRIM(DISTINCT vt1.c1, vt1.c0) THEN CASE '3}CLID'  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END ELSE ((vt1.c2) IS FALSE) END  NULLS LAST;
SELECT * FROM vt1 WHERE (CASE LOWER(vt1.c2)  WHEN (vt1.c0 IN (vt1.c3)) THEN (((vt1.c1))<((vt1.c1))) WHEN (+ (vt1.c3)) THEN (~ (vt1.c1)) WHEN ((vt1.c3) BETWEEN (vt1.c2) AND (x'e775')) THEN vt1.c1 WHEN (- (vt1.c2)) THEN vt1.c2 COLLATE NOCASE WHEN ((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)) THEN (((x'')) NOT BETWEEN ((vt1.c3)) AND ((vt1.c1))) ELSE CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c2 END END) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN TYPEOF(vt1.c3) WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c3)) WHEN vt1.c1 COLLATE RTRIM THEN MIN(vt1.c2, vt1.c0, vt1.c3, vt1.c2, vt1.c0, vt1.c3) ELSE (+ (vt1.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE LOWER(vt1.c2)  WHEN (vt1.c0 IN (vt1.c3)) THEN (((vt1.c1))<((vt1.c1))) WHEN (+ (vt1.c3)) THEN (~ (vt1.c1)) WHEN ((vt1.c3) BETWEEN (vt1.c2) AND (x'e775')) THEN vt1.c1 WHEN (- (vt1.c2)) THEN vt1.c2 COLLATE NOCASE WHEN ((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)) THEN (((x'')) NOT BETWEEN ((vt1.c3)) AND ((vt1.c1))) ELSE CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c2 END END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN TYPEOF(vt1.c3) WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c3)) WHEN vt1.c1 COLLATE RTRIM THEN MIN(vt1.c2, vt1.c0, vt1.c3, vt1.c2, vt1.c0, vt1.c3) ELSE (+ (vt1.c1)) END  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE LOWER(vt1.c2)  WHEN (vt1.c0 IN (vt1.c3)) THEN (((vt1.c1))<((vt1.c1))) WHEN (+ (vt1.c3)) THEN (~ (vt1.c1)) WHEN ((vt1.c3) BETWEEN (vt1.c2) AND (x'e775')) THEN vt1.c1 WHEN (- (vt1.c2)) THEN vt1.c2 COLLATE NOCASE WHEN ((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)) THEN (((x'')) NOT BETWEEN ((vt1.c3)) AND ((vt1.c1))) ELSE CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c2 END END) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN TYPEOF(vt1.c3) WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c3)) WHEN vt1.c1 COLLATE RTRIM THEN MIN(vt1.c2, vt1.c0, vt1.c3, vt1.c2, vt1.c0, vt1.c3) ELSE (+ (vt1.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE LOWER(vt1.c2)  WHEN (vt1.c0 IN (vt1.c3)) THEN (((vt1.c1))<((vt1.c1))) WHEN (+ (vt1.c3)) THEN (~ (vt1.c1)) WHEN ((vt1.c3) BETWEEN (vt1.c2) AND (x'e775')) THEN vt1.c1 WHEN (- (vt1.c2)) THEN vt1.c2 COLLATE NOCASE WHEN ((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)) THEN (((x'')) NOT BETWEEN ((vt1.c3)) AND ((vt1.c1))) ELSE CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c2 END END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN TYPEOF(vt1.c3) WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c3)) WHEN vt1.c1 COLLATE RTRIM THEN MIN(vt1.c2, vt1.c0, vt1.c3, vt1.c2, vt1.c0, vt1.c3) ELSE (+ (vt1.c1)) END  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE LOWER(vt1.c2)  WHEN (vt1.c0 IN (vt1.c3)) THEN (((vt1.c1))<((vt1.c1))) WHEN (+ (vt1.c3)) THEN (~ (vt1.c1)) WHEN ((vt1.c3) BETWEEN (vt1.c2) AND (x'e775')) THEN vt1.c1 WHEN (- (vt1.c2)) THEN vt1.c2 COLLATE NOCASE WHEN ((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)) THEN (((x'')) NOT BETWEEN ((vt1.c3)) AND ((vt1.c1))) ELSE CASE WHEN vt1.c1 THEN vt1.c3 ELSE vt1.c2 END END) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN TYPEOF(vt1.c3) WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c3)) WHEN vt1.c1 COLLATE RTRIM THEN MIN(vt1.c2, vt1.c0, vt1.c3, vt1.c2, vt1.c0, vt1.c3) ELSE (+ (vt1.c1)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c3) ORDER BY CAST(((vt1.c3) IS TRUE) AS TEXT)  NULLS LAST, LOWER(DISTINCT json_array_length('?|2O㵖hX', vt1.c0)) ASC, CAST(vt1.c1 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c3) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c3) IS TRUE) AS TEXT)  NULLS LAST, LOWER(DISTINCT json_array_length('?|2O㵖hX', vt1.c0)) ASC, CAST(vt1.c1 AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c3) ORDER BY CAST(((vt1.c3) IS TRUE) AS TEXT)  NULLS LAST, LOWER(DISTINCT json_array_length('?|2O㵖hX', vt1.c0)) ASC, CAST(vt1.c1 AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c3) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c3) IS TRUE) AS TEXT)  NULLS LAST, LOWER(DISTINCT json_array_length('?|2O㵖hX', vt1.c0)) ASC, CAST(vt1.c1 AS BLOB) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c3)*(rt0.c0)) IN (NULLIF('-240436479', rt0.c1))) WHERE ((((vt1.c0))<=((NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=((NULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c3)*(rt0.c0)) IN (NULLIF('-240436479', rt0.c1))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c3)*(rt0.c0)) IN (NULLIF('-240436479', rt0.c1))) WHERE ((((vt1.c0))<=((NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=((NULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c3)*(rt0.c0)) IN (NULLIF('-240436479', rt0.c1))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((vt1.c3)*(rt0.c0)) IN (NULLIF('-240436479', rt0.c1))) WHERE ((((vt1.c0))<=((NULL))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(vt1.c3 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c3 AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(vt1.c3 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c3 AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(vt1.c3 AS BLOB));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE))>=(((NULL IN (vt1.c0)))))) ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c3)))OR(((vt1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE NOCASE))>=(((NULL IN (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c3)))OR(((vt1.c0) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE))>=(((NULL IN (vt1.c0)))))) ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c3)))OR(((vt1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE NOCASE))>=(((NULL IN (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c3)))OR(((vt1.c0) IS FALSE)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE))>=(((NULL IN (vt1.c0)))))) ORDER BY TOTAL_CHANGES() ASC  NULLS FIRST, ((((((vt1.c1)OR(vt1.c2)))AND(vt1.c3)))OR(((vt1.c0) IS FALSE)))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((~ (rt0.c1)))<=(((rt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((~ (rt0.c1)))<=(((rt0.c0) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((~ (rt0.c1)))<=(((rt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((~ (rt0.c1)))<=(((rt0.c0) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((~ (rt0.c1)))<=(((rt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE COLLATE NOCASE) ORDER BY NULLIF(LIKELIHOOD(DISTINCT vt1.c2, 0.0026646163307011417), ((vt1.c0)+(vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULLIF(LIKELIHOOD(DISTINCT vt1.c2, 0.0026646163307011417), ((vt1.c0)+(vt1.c1)))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE COLLATE NOCASE) ORDER BY NULLIF(LIKELIHOOD(DISTINCT vt1.c2, 0.0026646163307011417), ((vt1.c0)+(vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULLIF(LIKELIHOOD(DISTINCT vt1.c2, 0.0026646163307011417), ((vt1.c0)+(vt1.c1)))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE COLLATE NOCASE) ORDER BY NULLIF(LIKELIHOOD(DISTINCT vt1.c2, 0.0026646163307011417), ((vt1.c0)+(vt1.c1)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c2))>=((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2))>=((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c2))>=((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2))>=((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c2))>=((vt1.c0)))) IS TRUE));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CAST(HEX(rt0.c1) AS REAL) WHERE (LIKELY(((vt1.c2) IS TRUE))) ORDER BY (((((vt1.c2)/(rt0.c1))))==((UNLIKELY(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt1.c2) IS TRUE))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CAST(HEX(rt0.c1) AS REAL) ORDER BY (((((vt1.c2)/(rt0.c1))))==((UNLIKELY(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CAST(HEX(rt0.c1) AS REAL) WHERE (LIKELY(((vt1.c2) IS TRUE))) ORDER BY (((((vt1.c2)/(rt0.c1))))==((UNLIKELY(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt1.c2) IS TRUE))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CAST(HEX(rt0.c1) AS REAL) ORDER BY (((((vt1.c2)/(rt0.c1))))==((UNLIKELY(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON CAST(HEX(rt0.c1) AS REAL) WHERE (LIKELY(((vt1.c2) IS TRUE))) ORDER BY (((((vt1.c2)/(rt0.c1))))==((UNLIKELY(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CASE LOWER(DISTINCT rt0.c0)  WHEN x'' THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CASE LOWER(DISTINCT rt0.c0)  WHEN x'' THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CASE LOWER(DISTINCT rt0.c0)  WHEN x'' THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY CASE LOWER(DISTINCT rt0.c0)  WHEN x'' THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY CASE LOWER(DISTINCT rt0.c0)  WHEN x'' THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c2)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c2)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c2))))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (rt0.c2) AND (vt1.c3))) IS TRUE) WHERE (((CAST(vt1.c1 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (rt0.c2) AND (vt1.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (rt0.c2) AND (vt1.c3))) IS TRUE) WHERE (((CAST(vt1.c1 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (rt0.c2) AND (vt1.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (rt0.c2) AND (vt1.c3))) IS TRUE) WHERE (((CAST(vt1.c1 AS TEXT)) NOTNULL));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1) IS FALSE))));
SELECT * FROM rt0 NOT INDEXED WHERE ((- (CASE WHEN rt0.c0 THEN '1526448474' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (521921947)))IS((NOT (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c0 THEN '1526448474' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (521921947)))IS((NOT (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 NOT INDEXED WHERE ((- (CASE WHEN rt0.c0 THEN '1526448474' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (521921947)))IS((NOT (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c0 THEN '1526448474' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (521921947)))IS((NOT (rt0.c0))))  NULLS LAST);
SELECT * FROM rt0 NOT INDEXED WHERE ((- (CASE WHEN rt0.c0 THEN '1526448474' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (521921947)))IS((NOT (rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (COALESCE(vt1.c2, vt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((COALESCE(vt1.c2, vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (COALESCE(vt1.c2, vt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((COALESCE(vt1.c2, vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (COALESCE(vt1.c2, vt1.c0) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c3)))OR(vt1.c0))  WHEN (+ (vt1.c3)) THEN (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) WHEN CAST(vt1.c3 AS REAL) THEN NULL WHEN ((vt1.c1) IS TRUE) THEN vt1.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)AND(vt1.c3)))OR(vt1.c0))  WHEN (+ (vt1.c3)) THEN (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) WHEN CAST(vt1.c3 AS REAL) THEN NULL WHEN ((vt1.c1) IS TRUE) THEN vt1.c3 COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c3)))OR(vt1.c0))  WHEN (+ (vt1.c3)) THEN (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) WHEN CAST(vt1.c3 AS REAL) THEN NULL WHEN ((vt1.c1) IS TRUE) THEN vt1.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)AND(vt1.c3)))OR(vt1.c0))  WHEN (+ (vt1.c3)) THEN (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) WHEN CAST(vt1.c3 AS REAL) THEN NULL WHEN ((vt1.c1) IS TRUE) THEN vt1.c3 COLLATE BINARY END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c3)))OR(vt1.c0))  WHEN (+ (vt1.c3)) THEN (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) WHEN CAST(vt1.c3 AS REAL) THEN NULL WHEN ((vt1.c1) IS TRUE) THEN vt1.c3 COLLATE BINARY END);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1)OR(rt0.c0)))) AND ((((rt0.c0) NOTNULL))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c1)OR(rt0.c0)))) AND ((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' ASC);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1)OR(rt0.c0)))) AND ((((rt0.c0) NOTNULL))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c1)OR(rt0.c0)))) AND ((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' ASC);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c1)OR(rt0.c0)))) AND ((((rt0.c0) NOTNULL))))) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON NULL WHERE (((((((((((((((((((vt1.c1) IS TRUE))AND(IFNULL(x'', vt1.c3))))AND(UPPER(DISTINCT rt0.c0))))AND(((rt0.c2)GLOB(vt1.c2)))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))AND(CAST(vt1.c3 AS BLOB))))OR(LIKELY(DISTINCT rt0.c2))))OR(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c2)<(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((vt1.c1) IS TRUE))AND(IFNULL(x'', vt1.c3))))AND(UPPER(DISTINCT rt0.c0))))AND(((rt0.c2)GLOB(vt1.c2)))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))AND(CAST(vt1.c3 AS BLOB))))OR(LIKELY(DISTINCT rt0.c2))))OR(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c2)<(vt1.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON NULL);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON NULL WHERE (((((((((((((((((((vt1.c1) IS TRUE))AND(IFNULL(x'', vt1.c3))))AND(UPPER(DISTINCT rt0.c0))))AND(((rt0.c2)GLOB(vt1.c2)))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))AND(CAST(vt1.c3 AS BLOB))))OR(LIKELY(DISTINCT rt0.c2))))OR(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c2)<(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((vt1.c1) IS TRUE))AND(IFNULL(x'', vt1.c3))))AND(UPPER(DISTINCT rt0.c0))))AND(((rt0.c2)GLOB(vt1.c2)))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))AND(CAST(vt1.c3 AS BLOB))))OR(LIKELY(DISTINCT rt0.c2))))OR(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c2)<(vt1.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON NULL);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON NULL WHERE (((((((((((((((((((vt1.c1) IS TRUE))AND(IFNULL(x'', vt1.c3))))AND(UPPER(DISTINCT rt0.c0))))AND(((rt0.c2)GLOB(vt1.c2)))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)))))AND(CAST(vt1.c3 AS BLOB))))OR(LIKELY(DISTINCT rt0.c2))))OR(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c2)<(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE (~ (vt1.c3))  WHEN rt0.c0 COLLATE BINARY THEN ((vt1.c2)*(vt1.c1)) WHEN json_array(0xfffffffff1ab3b01, rt0.c2) THEN ((rt0.c1)<<(vt1.c2)) WHEN 0.4953585640533179 THEN ((vt1.c0)||(vt1.c0)) END) ORDER BY ((((rt0.c2)!=(vt1.c2))) BETWEEN ((+ (rt0.c0))) AND ((+ (vt1.c0))))  NULLS FIRST, (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt1.c3))  WHEN rt0.c0 COLLATE BINARY THEN ((vt1.c2)*(vt1.c1)) WHEN json_array(0xfffffffff1ab3b01, rt0.c2) THEN ((rt0.c1)<<(vt1.c2)) WHEN 0.4953585640533179 THEN ((vt1.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)!=(vt1.c2))) BETWEEN ((+ (rt0.c0))) AND ((+ (vt1.c0))))  NULLS FIRST, (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE (~ (vt1.c3))  WHEN rt0.c0 COLLATE BINARY THEN ((vt1.c2)*(vt1.c1)) WHEN json_array(0xfffffffff1ab3b01, rt0.c2) THEN ((rt0.c1)<<(vt1.c2)) WHEN 0.4953585640533179 THEN ((vt1.c0)||(vt1.c0)) END) ORDER BY ((((rt0.c2)!=(vt1.c2))) BETWEEN ((+ (rt0.c0))) AND ((+ (vt1.c0))))  NULLS FIRST, (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt1.c3))  WHEN rt0.c0 COLLATE BINARY THEN ((vt1.c2)*(vt1.c1)) WHEN json_array(0xfffffffff1ab3b01, rt0.c2) THEN ((rt0.c1)<<(vt1.c2)) WHEN 0.4953585640533179 THEN ((vt1.c0)||(vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)!=(vt1.c2))) BETWEEN ((+ (rt0.c0))) AND ((+ (vt1.c0))))  NULLS FIRST, (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE (~ (vt1.c3))  WHEN rt0.c0 COLLATE BINARY THEN ((vt1.c2)*(vt1.c1)) WHEN json_array(0xfffffffff1ab3b01, rt0.c2) THEN ((rt0.c1)<<(vt1.c2)) WHEN 0.4953585640533179 THEN ((vt1.c0)||(vt1.c0)) END) ORDER BY ((((rt0.c2)!=(vt1.c2))) BETWEEN ((+ (rt0.c0))) AND ((+ (vt1.c0))))  NULLS FIRST, (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)-('-382577081'))) NOT BETWEEN (CASE WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c1 END) AND (vt1.c2 COLLATE RTRIM))) ORDER BY ((((vt1.c1) IS TRUE)) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt1.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)-('-382577081'))) NOT BETWEEN (CASE WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c1 END) AND (vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) IS TRUE)) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt1.c2) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)-('-382577081'))) NOT BETWEEN (CASE WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c1 END) AND (vt1.c2 COLLATE RTRIM))) ORDER BY ((((vt1.c1) IS TRUE)) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt1.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)-('-382577081'))) NOT BETWEEN (CASE WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c1 END) AND (vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) IS TRUE)) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt1.c2) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)-('-382577081'))) NOT BETWEEN (CASE WHEN vt1.c3 THEN vt1.c3 WHEN vt1.c0 THEN vt1.c3 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c1 END) AND (vt1.c2 COLLATE RTRIM))) ORDER BY ((((vt1.c1) IS TRUE)) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt1.c2) IS FALSE)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)) IN ()) WHERE ((('-152395759' COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('-152395759' COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)) IN ()) WHERE ((('-152395759' COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('-152395759' COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)) IN ()) WHERE ((('-152395759' COLLATE NOCASE) NOT NULL));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0) ISNULL)))<>(((rt0.c1 IN ())))) WHERE (((((vt1.c2)<=(rt0.c2)))<<(((vt1.c0)>>(vt1.c3))))) ORDER BY LOWER(DISTINCT CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)<=(rt0.c2)))<<(((vt1.c0)>>(vt1.c3))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0) ISNULL)))<>(((rt0.c1 IN ())))) ORDER BY LOWER(DISTINCT CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c2 END) DESC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0) ISNULL)))<>(((rt0.c1 IN ())))) WHERE (((((vt1.c2)<=(rt0.c2)))<<(((vt1.c0)>>(vt1.c3))))) ORDER BY LOWER(DISTINCT CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)<=(rt0.c2)))<<(((vt1.c0)>>(vt1.c3))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0) ISNULL)))<>(((rt0.c1 IN ())))) ORDER BY LOWER(DISTINCT CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c2 END) DESC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0) ISNULL)))<>(((rt0.c1 IN ())))) WHERE (((((vt1.c2)<=(rt0.c2)))<<(((vt1.c0)>>(vt1.c3))))) ORDER BY LOWER(DISTINCT CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c2 END) DESC;
SELECT ALL * FROM vt1, rt0 WHERE ((~ (((rt0.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((~ (((rt0.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((~ (((rt0.c0)GLOB(vt1.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON 'm	' COLLATE BINARY WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)) AND ((((((((((vt1.c2)OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c3)))OR(rt0.c0)))))) ORDER BY (((vt1.c3) NOTNULL) IN ()) ASC, ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c1)AND(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0))) AND (SQLITE_COMPILEOPTION_GET(rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)) AND ((((((((((vt1.c2)OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c3)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON 'm	' COLLATE BINARY ORDER BY (((vt1.c3) NOTNULL) IN ()) ASC, ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c1)AND(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0))) AND (SQLITE_COMPILEOPTION_GET(rt0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON 'm	' COLLATE BINARY WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)) AND ((((((((((vt1.c2)OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c3)))OR(rt0.c0)))))) ORDER BY (((vt1.c3) NOTNULL) IN ()) ASC, ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c1)AND(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0))) AND (SQLITE_COMPILEOPTION_GET(rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)) AND ((((((((((vt1.c2)OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c3)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON 'm	' COLLATE BINARY ORDER BY (((vt1.c3) NOTNULL) IN ()) ASC, ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c1)AND(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0))) AND (SQLITE_COMPILEOPTION_GET(rt0.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON 'm	' COLLATE BINARY WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END)) AND ((((((((((vt1.c2)OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c3)))OR(rt0.c0)))))) ORDER BY (((vt1.c3) NOTNULL) IN ()) ASC, ((((rt0.c1) IS FALSE)) NOT BETWEEN (((((((((rt0.c1)AND(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0))) AND (SQLITE_COMPILEOPTION_GET(rt0.c2))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY vt1.c1  NULLS FIRST, (((~ (rt0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c1  NULLS FIRST, (((~ (rt0.c1))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY vt1.c1  NULLS FIRST, (((~ (rt0.c1))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c1  NULLS FIRST, (((~ (rt0.c1))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY vt1.c1  NULLS FIRST, (((~ (rt0.c1))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM vt1 WHERE ((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c1 END IN (CAST(vt1.c2 AS TEXT)))) ORDER BY ((((vt1.c3)+(vt1.c2)))>(CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c3 END)), ((((vt1.c0 COLLATE BINARY)OR(vt1.c1 COLLATE NOCASE)))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c3 THEN vt1.c3 ELSE x'' END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c1 END IN (CAST(vt1.c2 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c3)+(vt1.c2)))>(CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c3 END)), ((((vt1.c0 COLLATE BINARY)OR(vt1.c1 COLLATE NOCASE)))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c3 THEN vt1.c3 ELSE x'' END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c1 END IN (CAST(vt1.c2 AS TEXT)))) ORDER BY ((((vt1.c3)+(vt1.c2)))>(CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c3 END)), ((((vt1.c0 COLLATE BINARY)OR(vt1.c1 COLLATE NOCASE)))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c3 THEN vt1.c3 ELSE x'' END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c1 END IN (CAST(vt1.c2 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c3)+(vt1.c2)))>(CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c3 END)), ((((vt1.c0 COLLATE BINARY)OR(vt1.c1 COLLATE NOCASE)))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c3 THEN vt1.c3 ELSE x'' END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((CASE vt1.c3  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c1 END IN (CAST(vt1.c2 AS TEXT)))) ORDER BY ((((vt1.c3)+(vt1.c2)))>(CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c3 END)), ((((vt1.c0 COLLATE BINARY)OR(vt1.c1 COLLATE NOCASE)))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c3 THEN vt1.c3 ELSE x'' END)) DESC  NULLS FIRST;
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL WHERE (((CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END) NOT BETWEEN (CAST(vt1.c2 AS TEXT)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c0)AND(((vt1.c0)GLOB(rt0.c0)))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))), CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN CASE WHEN vt1.c3 THEN vt1.c2 END THEN CAST(vt1.c2 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) ISNULL) WHEN (~ (vt1.c0)) THEN CAST(vt1.c1 AS TEXT) ELSE CASE WHEN vt1.c2 THEN rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END) NOT BETWEEN (CAST(vt1.c2 AS TEXT)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON NULL ORDER BY ((((rt0.c0)AND(((vt1.c0)GLOB(rt0.c0)))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))), CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN CASE WHEN vt1.c3 THEN vt1.c2 END THEN CAST(vt1.c2 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) ISNULL) WHEN (~ (vt1.c0)) THEN CAST(vt1.c1 AS TEXT) ELSE CASE WHEN vt1.c2 THEN rt0.c0 END END DESC);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL WHERE (((CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END) NOT BETWEEN (CAST(vt1.c2 AS TEXT)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c0)AND(((vt1.c0)GLOB(rt0.c0)))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))), CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN CASE WHEN vt1.c3 THEN vt1.c2 END THEN CAST(vt1.c2 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) ISNULL) WHEN (~ (vt1.c0)) THEN CAST(vt1.c1 AS TEXT) ELSE CASE WHEN vt1.c2 THEN rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END) NOT BETWEEN (CAST(vt1.c2 AS TEXT)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON NULL ORDER BY ((((rt0.c0)AND(((vt1.c0)GLOB(rt0.c0)))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))), CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN CASE WHEN vt1.c3 THEN vt1.c2 END THEN CAST(vt1.c2 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) ISNULL) WHEN (~ (vt1.c0)) THEN CAST(vt1.c1 AS TEXT) ELSE CASE WHEN vt1.c2 THEN rt0.c0 END END DESC);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL WHERE (((CASE vt1.c3  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END) NOT BETWEEN (CAST(vt1.c2 AS TEXT)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c0)AND(((vt1.c0)GLOB(rt0.c0)))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))), CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CAST(rt0.c0 AS TEXT) WHEN CASE WHEN vt1.c3 THEN vt1.c2 END THEN CAST(vt1.c2 AS NUMERIC) WHEN CAST(NULL AS INTEGER) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) ISNULL) WHEN (~ (vt1.c0)) THEN CAST(vt1.c1 AS TEXT) ELSE CASE WHEN vt1.c2 THEN rt0.c0 END END DESC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c3)>(0X41afd608)))<((x'' IN ())))) ORDER BY TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3)>(0x41afd608)))<((x'' IN ())))) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c3)>(0X41afd608)))<((x'' IN ())))) ORDER BY TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3)>(0x41afd608)))<((x'' IN ())))) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c3)>(0X41afd608)))<((x'' IN ())))) ORDER BY TYPEOF(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)IS(rt0.c1 COLLATE NOCASE)));
SELECT * FROM rt0, vt1 WHERE (((ABS(0.7598976861058094))+(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(0.7598976861058094))+(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((ABS(0.7598976861058094))+(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(0.7598976861058094))+(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((ABS(0.7598976861058094))+(vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('');
SELECT ALL * FROM rt0, vt1 WHERE ((vt1.c3 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c3 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((vt1.c3 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c3 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((vt1.c3 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY SQLITE_COMPILEOPTION_GET(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((((vt1.c3)OR(0Xfffffffff4b1392c)))OR(vt1.c2)) THEN json(x'178c') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c3)OR(0Xfffffffff4b1392c)))OR(vt1.c2)) THEN json(x'178c') END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((((vt1.c3)OR(0Xfffffffff4b1392c)))OR(vt1.c2)) THEN json(x'178c') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c3)OR(0Xfffffffff4b1392c)))OR(vt1.c2)) THEN json(x'178c') END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((vt1.c1) IS TRUE)) BETWEEN (((vt1.c3) NOT NULL)) AND (((vt1.c2)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS TRUE)) BETWEEN (((vt1.c3) NOT NULL)) AND (((vt1.c2)>>(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((vt1.c1) IS TRUE)) BETWEEN (((vt1.c3) NOT NULL)) AND (((vt1.c2)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS TRUE)) BETWEEN (((vt1.c3) NOT NULL)) AND (((vt1.c2)>>(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((vt1.c1) IS TRUE)) BETWEEN (((vt1.c3) NOT NULL)) AND (((vt1.c2)>>(rt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (CASE NULL  WHEN (vt1.c2 IN ()) THEN ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c3)) END) ORDER BY ((NULL COLLATE RTRIM) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN (vt1.c2 IN ()) THEN ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c3)) END) IS TRUE)  as count FROM vt1 ORDER BY ((NULL COLLATE RTRIM) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE NULL  WHEN (vt1.c2 IN ()) THEN ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c3)) END) ORDER BY ((NULL COLLATE RTRIM) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN (vt1.c2 IN ()) THEN ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c3)) END) IS TRUE)  as count FROM vt1 ORDER BY ((NULL COLLATE RTRIM) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CASE NULL  WHEN (vt1.c2 IN ()) THEN ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c3)) END) ORDER BY ((NULL COLLATE RTRIM) ISNULL)  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2 WHERE (TRIM(vt1.c3, ((((rt0.c0)OR(rt0.c2)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c3, ((((rt0.c0)OR(rt0.c2)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2 WHERE (TRIM(vt1.c3, ((((rt0.c0)OR(rt0.c2)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c3, ((((rt0.c0)OR(rt0.c2)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c2 WHERE (TRIM(vt1.c3, ((((rt0.c0)OR(rt0.c2)))AND(vt1.c0))));
SELECT * FROM vt1, rt0 WHERE (vt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c3);
SELECT * FROM rt0, vt1 WHERE (((vt1.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((vt1.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((vt1.c1) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE ((0X220e8c26 IN ())) ORDER BY (rt0.c1 COLLATE BINARY IN ()), NULLIF(DISTINCT ((rt0.c2)IS(rt0.c2)), ((rt0.c0) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0x220e8c26 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE BINARY IN ()), NULLIF(DISTINCT ((rt0.c2)IS(rt0.c2)), ((rt0.c0) IS FALSE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((0X220e8c26 IN ())) ORDER BY (rt0.c1 COLLATE BINARY IN ()), NULLIF(DISTINCT ((rt0.c2)IS(rt0.c2)), ((rt0.c0) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0x220e8c26 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE BINARY IN ()), NULLIF(DISTINCT ((rt0.c2)IS(rt0.c2)), ((rt0.c0) IS FALSE))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((0X220e8c26 IN ())) ORDER BY (rt0.c1 COLLATE BINARY IN ()), NULLIF(DISTINCT ((rt0.c2)IS(rt0.c2)), ((rt0.c0) IS FALSE))  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((vt1.c1) BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c1) BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((vt1.c1) BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c1) BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((vt1.c1) BETWEEN (vt1.c0) AND (NULL)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))<>(((((vt1.c3)OR(vt1.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))!=(((((vt1.c3)OR(vt1.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))<>(((((vt1.c3)OR(vt1.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))!=(((((vt1.c3)OR(vt1.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))<>(((((vt1.c3)OR(vt1.c0)))OR(rt0.c0)))));
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0) IS FALSE)) IS TRUE)) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c1 DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0) IS FALSE)) IS TRUE)) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c1 DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0) IS FALSE)) IS TRUE)) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE) ORDER BY (NOT ((- (rt0.c1)))) ASC, rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((- (rt0.c1)))) ASC, rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE) ORDER BY (NOT ((- (rt0.c1)))) ASC, rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((- (rt0.c1)))) ASC, rt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c2) COLLATE NOCASE) ORDER BY (NOT ((- (rt0.c1)))) ASC, rt0.c1 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND ('')) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) ELSE ((vt1.c0) IS TRUE) END) ORDER BY ((((vt1.c2)OR(vt1.c2)))OR(0.7783923656352082)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND ('')) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2)OR(vt1.c2)))OR(0.7783923656352082)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND ('')) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) ELSE ((vt1.c0) IS TRUE) END) ORDER BY ((((vt1.c2)OR(vt1.c2)))OR(0.7783923656352082)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND ('')) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2)OR(vt1.c2)))OR(0.7783923656352082)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND ('')) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) ELSE ((vt1.c0) IS TRUE) END) ORDER BY ((((vt1.c2)OR(vt1.c2)))OR(0.7783923656352082)) COLLATE BINARY;
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))) AND (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))) AND (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))) AND (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))) AND (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))) AND (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((x'735b')AND(vt1.c0)))OR(vt1.c0)) AS BLOB)) ORDER BY ((rt0.c2)&(CAST(rt0.c0 AS BLOB)))  NULLS FIRST, (((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL) DESC, ((HEX(vt1.c2))*(((vt1.c1)!=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'735b')AND(vt1.c0)))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2)&(CAST(rt0.c0 AS BLOB)))  NULLS FIRST, (((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL) DESC, ((HEX(vt1.c2))*(((vt1.c1)<>(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((x'735b')AND(vt1.c0)))OR(vt1.c0)) AS BLOB)) ORDER BY ((rt0.c2)&(CAST(rt0.c0 AS BLOB)))  NULLS FIRST, (((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL) DESC, ((HEX(vt1.c2))*(((vt1.c1)!=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'735b')AND(vt1.c0)))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2)&(CAST(rt0.c0 AS BLOB)))  NULLS FIRST, (((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL) DESC, ((HEX(vt1.c2))*(((vt1.c1)<>(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((x'735b')AND(vt1.c0)))OR(vt1.c0)) AS BLOB)) ORDER BY ((rt0.c2)&(CAST(rt0.c0 AS BLOB)))  NULLS FIRST, (((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT NULL) DESC, ((HEX(vt1.c2))*(((vt1.c1)!=(rt0.c1))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c3) NOT BETWEEN (vt1.c3) AND (vt1.c3))) ISNULL)) ORDER BY ((vt1.c1 COLLATE NOCASE) BETWEEN (CAST(vt1.c2 AS INTEGER)) AND (((vt1.c3)>(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3) NOT BETWEEN (vt1.c3) AND (vt1.c3))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE NOCASE) BETWEEN (CAST(vt1.c2 AS INTEGER)) AND (((vt1.c3)>(vt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c3) NOT BETWEEN (vt1.c3) AND (vt1.c3))) ISNULL)) ORDER BY ((vt1.c1 COLLATE NOCASE) BETWEEN (CAST(vt1.c2 AS INTEGER)) AND (((vt1.c3)>(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3) NOT BETWEEN (vt1.c3) AND (vt1.c3))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE NOCASE) BETWEEN (CAST(vt1.c2 AS INTEGER)) AND (((vt1.c3)>(vt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c3) NOT BETWEEN (vt1.c3) AND (vt1.c3))) ISNULL)) ORDER BY ((vt1.c1 COLLATE NOCASE) BETWEEN (CAST(vt1.c2 AS INTEGER)) AND (((vt1.c3)>(vt1.c1))))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE ((((((- (rt0.c0)))OR(CAST(vt1.c3 AS BLOB))))OR(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c0)))OR(CAST(vt1.c3 AS BLOB))))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((((- (rt0.c0)))OR(CAST(vt1.c3 AS BLOB))))OR(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c0)))OR(CAST(vt1.c3 AS BLOB))))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((((- (rt0.c0)))OR(CAST(vt1.c3 AS BLOB))))OR(rt0.c0 COLLATE RTRIM)));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c1)))) AND (((('?''#% k,') NOT BETWEEN (vt1.c3) AND (vt1.c2))))) WHERE ((((((vt1.c2 IN ()))OR(((rt0.c2)+(vt1.c3)))))AND(vt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2 IN ()))OR(((rt0.c2)+(vt1.c3)))))AND(vt1.c2))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c1)))) AND (((('?''#% k,') NOT BETWEEN (vt1.c3) AND (vt1.c2))))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c1)))) AND (((('?''#% k,') NOT BETWEEN (vt1.c3) AND (vt1.c2))))) WHERE ((((((vt1.c2 IN ()))OR(((rt0.c2)+(vt1.c3)))))AND(vt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2 IN ()))OR(((rt0.c2)+(vt1.c3)))))AND(vt1.c2))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c1)))) AND (((('?''#% k,') NOT BETWEEN (vt1.c3) AND (vt1.c2))))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c1)))) AND (((('?''#% k,') NOT BETWEEN (vt1.c3) AND (vt1.c2))))) WHERE ((((((vt1.c2 IN ()))OR(((rt0.c2)+(vt1.c3)))))AND(vt1.c2)));
SELECT * FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1)>=(vt1.c0)) COLLATE BINARY) ORDER BY vt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)>=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1)>=(vt1.c0)) COLLATE BINARY) ORDER BY vt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)>=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1)>=(vt1.c0)) COLLATE BINARY) ORDER BY vt1.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ((~ (rt0.c2)))) WHERE (vt1.c3);
SELECT SUM(count) FROM (SELECT ((vt1.c3) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ((~ (rt0.c2)))) WHERE (vt1.c3);
SELECT SUM(count) FROM (SELECT ((vt1.c3) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (CAST(rt0.c2 AS REAL) IN ((~ (rt0.c2)))) WHERE (vt1.c3);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (NOT (((vt1.c1) BETWEEN (vt1.c2) AND (rt0.c1)))) WHERE ((((rt0.c2)LIKE(vt1.c3)) IN ((rt0.c0 IN ()), ((x'cfdd')%(vt1.c2))))) ORDER BY CASE WHEN ((((((((vt1.c3)AND(rt0.c0)))AND(vt1.c1)))AND(vt1.c3)))AND(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c3 END END ASC, (~ (vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)LIKE(vt1.c3)) IN ((rt0.c0 IN ()), ((x'cfdd')%(vt1.c2))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (NOT (((vt1.c1) BETWEEN (vt1.c2) AND (rt0.c1)))) ORDER BY CASE WHEN ((((((((vt1.c3)AND(rt0.c0)))AND(vt1.c1)))AND(vt1.c3)))AND(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c3 END END ASC, (~ (vt1.c1)) DESC);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (NOT (((vt1.c1) BETWEEN (vt1.c2) AND (rt0.c1)))) WHERE ((((rt0.c2)LIKE(vt1.c3)) IN ((rt0.c0 IN ()), ((x'cfdd')%(vt1.c2))))) ORDER BY CASE WHEN ((((((((vt1.c3)AND(rt0.c0)))AND(vt1.c1)))AND(vt1.c3)))AND(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c3 END END ASC, (~ (vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)LIKE(vt1.c3)) IN ((rt0.c0 IN ()), ((x'cfdd')%(vt1.c2))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (NOT (((vt1.c1) BETWEEN (vt1.c2) AND (rt0.c1)))) ORDER BY CASE WHEN ((((((((vt1.c3)AND(rt0.c0)))AND(vt1.c1)))AND(vt1.c3)))AND(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c3 END END ASC, (~ (vt1.c1)) DESC);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON (NOT (((vt1.c1) BETWEEN (vt1.c2) AND (rt0.c1)))) WHERE ((((rt0.c2)LIKE(vt1.c3)) IN ((rt0.c0 IN ()), ((x'cfdd')%(vt1.c2))))) ORDER BY CASE WHEN ((((((((vt1.c3)AND(rt0.c0)))AND(vt1.c1)))AND(vt1.c3)))AND(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c3 END END ASC, (~ (vt1.c1)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(ROUND(vt1.c2, vt1.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(ROUND(vt1.c2, vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(ROUND(vt1.c2, vt1.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(ROUND(vt1.c2, vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(ROUND(vt1.c2, vt1.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN (rt0.c0, x'3d7c', vt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0, x'3d7c', vt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN (rt0.c0, x'3d7c', vt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0, x'3d7c', vt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN (rt0.c0, x'3d7c', vt1.c2))) IS FALSE));
SELECT * FROM rt0, vt1 WHERE (CAST(((vt1.c1) BETWEEN (5.10141378E8) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) BETWEEN (5.10141378E8) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(((vt1.c1) BETWEEN (5.10141378E8) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) BETWEEN (5.10141378E8) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(((vt1.c1) BETWEEN (5.10141378E8) AND (rt0.c1)) AS REAL));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND ('녖d_<2')))OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND ('녖d_<2')))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND ('녖d_<2')))OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND ('녖d_<2')))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND ('녖d_<2')))OR(((rt0.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((MAX(rt0.c2, rt0.c2))IS(((vt1.c1)IS NOT(rt0.c0))))) ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0.02568201052228336 END ELSE ((((((((rt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(rt0.c2, rt0.c2))IS(((vt1.c1)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0.02568201052228336 END ELSE ((((((((rt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((MAX(rt0.c2, rt0.c2))IS(((vt1.c1)IS NOT(rt0.c0))))) ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0.02568201052228336 END ELSE ((((((((rt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(rt0.c2, rt0.c2))IS(((vt1.c1)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0.02568201052228336 END ELSE ((((((((rt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((MAX(rt0.c2, rt0.c2))IS(((vt1.c1)IS NOT(rt0.c0))))) ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (x'' IN (vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c3 THEN rt0.c1 WHEN rt0.c1 THEN 0.02568201052228336 END ELSE ((((((((rt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((NULLIF(rt0.c1, rt0.c1))%(((rt0.c2)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c1, rt0.c1))%(((rt0.c2)IS(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULLIF(rt0.c1, rt0.c1))%(((rt0.c2)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c1, rt0.c1))%(((rt0.c2)IS(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULLIF(rt0.c1, rt0.c1))%(((rt0.c2)IS(rt0.c0)))));
SELECT * FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (LENGTH(((((x'63189d29')OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((((x'63189d29')OR(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LENGTH(((((x'63189d29')OR(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((((x'63189d29')OR(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LENGTH(((((x'63189d29')OR(vt1.c0)))AND(vt1.c0))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c0))) BETWEEN (((NULL)OR(rt0.c0))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) BETWEEN (((NULL)OR(rt0.c0))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c0))) BETWEEN (((NULL)OR(rt0.c0))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) BETWEEN (((NULL)OR(rt0.c0))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c0))) BETWEEN (((NULL)OR(rt0.c0))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (rt0.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)OR(vt1.c2))))<(('{')))) ORDER BY HEX(DISTINCT vt1.c0 COLLATE BINARY) DESC  NULLS FIRST, (CAST(vt1.c3 AS NUMERIC) IN ((x'' IN ()), ((vt1.c3)OR(vt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)OR(vt1.c2))))<(('{')))) IS TRUE)  as count FROM vt1 ORDER BY HEX(DISTINCT vt1.c0 COLLATE BINARY) DESC  NULLS FIRST, (CAST(vt1.c3 AS NUMERIC) IN ((x'' IN ()), ((vt1.c3)OR(vt1.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)OR(vt1.c2))))<(('{')))) ORDER BY HEX(DISTINCT vt1.c0 COLLATE BINARY) DESC  NULLS FIRST, (CAST(vt1.c3 AS NUMERIC) IN ((x'' IN ()), ((vt1.c3)OR(vt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)OR(vt1.c2))))<(('{')))) IS TRUE)  as count FROM vt1 ORDER BY HEX(DISTINCT vt1.c0 COLLATE BINARY) DESC  NULLS FIRST, (CAST(vt1.c3 AS NUMERIC) IN ((x'' IN ()), ((vt1.c3)OR(vt1.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)OR(vt1.c2))))<(('{')))) ORDER BY HEX(DISTINCT vt1.c0 COLLATE BINARY) DESC  NULLS FIRST, (CAST(vt1.c3 AS NUMERIC) IN ((x'' IN ()), ((vt1.c3)OR(vt1.c2)))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (vt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c3) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c3);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CAST(x'' AS BLOB))<=((((vt1.c0, vt1.c3, rt0.c1, rt0.c0, vt1.c2))==((vt1.c3, rt0.c1, vt1.c3, rt0.c0, x''))))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB))<=((((vt1.c0, vt1.c3, rt0.c1, rt0.c0, vt1.c2))==((vt1.c3, rt0.c1, vt1.c3, rt0.c0, x'')))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CAST(x'' AS BLOB))<=((((vt1.c0, vt1.c3, rt0.c1, rt0.c0, vt1.c2))==((vt1.c3, rt0.c1, vt1.c3, rt0.c0, x''))))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB))<=((((vt1.c0, vt1.c3, rt0.c1, rt0.c0, vt1.c2))==((vt1.c3, rt0.c1, vt1.c3, rt0.c0, x'')))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CAST(x'' AS BLOB))<=((((vt1.c0, vt1.c3, rt0.c1, rt0.c0, vt1.c2))==((vt1.c3, rt0.c1, vt1.c3, rt0.c0, x''))))));
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c3)>>(rt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(rt0.c2 COLLATE RTRIM))) ORDER BY rt0.c2 ASC  NULLS FIRST, (((NOT (rt0.c0)))>=(((vt1.c3)OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c3)>>(rt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 ASC  NULLS FIRST, (((NOT (rt0.c0)))>=(((vt1.c3)OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c3)>>(rt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(rt0.c2 COLLATE RTRIM))) ORDER BY rt0.c2 ASC  NULLS FIRST, (((NOT (rt0.c0)))>=(((vt1.c3)OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c3)>>(rt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 ASC  NULLS FIRST, (((NOT (rt0.c0)))>=(((vt1.c3)OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c3)>>(rt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND(rt0.c2 COLLATE RTRIM))) ORDER BY rt0.c2 ASC  NULLS FIRST, (((NOT (rt0.c0)))>=(((vt1.c3)OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.7817781457816055) THEN ((rt0.c1)-(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.7817781457816055) THEN ((rt0.c1)-(rt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.7817781457816055) THEN ((rt0.c1)-(rt0.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.7817781457816055) THEN ((rt0.c1)-(rt0.c2)) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.7817781457816055) THEN ((rt0.c1)-(rt0.c2)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (0.12747329409399943) ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.12747329409399943) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.12747329409399943) ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.12747329409399943) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.12747329409399943) ORDER BY CAST(NULL AS INTEGER)  NULLS FIRST;
SELECT * FROM vt1 WHERE ((+ ((vt1.c3 IN ())))) ORDER BY ((vt1.c2 COLLATE RTRIM) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt1.c3 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 COLLATE RTRIM) IS FALSE) ASC);
SELECT * FROM vt1 WHERE ((+ ((vt1.c3 IN ())))) ORDER BY ((vt1.c2 COLLATE RTRIM) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt1.c3 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 COLLATE RTRIM) IS FALSE) ASC);
SELECT * FROM vt1 WHERE ((+ ((vt1.c3 IN ())))) ORDER BY ((vt1.c2 COLLATE RTRIM) IS FALSE) ASC;
SELECT * FROM vt1 WHERE (QUOTE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))) ORDER BY (((vt1.c1 IN (vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((QUOTE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN (vt1.c0))) IS FALSE));
SELECT * FROM vt1 WHERE (QUOTE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))) ORDER BY (((vt1.c1 IN (vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((QUOTE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN (vt1.c0))) IS FALSE));
SELECT * FROM vt1 WHERE (QUOTE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0)))) ORDER BY (((vt1.c1 IN (vt1.c0))) IS FALSE);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1)*(rt0.c0)))));
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(-2.001365827E9 AS BLOB)) ORDER BY CASE WHEN ((rt0.c1)LIKE(rt0.c0)) THEN rt0.c2 ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(-2.001365827E9 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1)LIKE(rt0.c0)) THEN rt0.c2 ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(-2.001365827E9 AS BLOB)) ORDER BY CASE WHEN ((rt0.c1)LIKE(rt0.c0)) THEN rt0.c2 ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(-2.001365827E9 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1)LIKE(rt0.c0)) THEN rt0.c2 ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(-2.001365827E9 AS BLOB)) ORDER BY CASE WHEN ((rt0.c1)LIKE(rt0.c0)) THEN rt0.c2 ELSE rt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ((- ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, vt1.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, vt1.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt1.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((- ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, vt1.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, vt1.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt1.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((- ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, vt1.c3, rt0.c2)) AND ((rt0.c2, rt0.c1, vt1.c1))))));
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL * FROM vt1, rt0 WHERE (STRFTIME(((rt0.c2) NOTNULL), ((rt0.c1)*(NULL)), ((rt0.c0)IS NOT(1981493895)), (rt0.c1 IN ()), vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((rt0.c2) NOTNULL), ((rt0.c1)*(NULL)), ((rt0.c0)IS NOT(1981493895)), (rt0.c1 IN ()), vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (STRFTIME(((rt0.c2) NOTNULL), ((rt0.c1)*(NULL)), ((rt0.c0)IS NOT(1981493895)), (rt0.c1 IN ()), vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((rt0.c2) NOTNULL), ((rt0.c1)*(NULL)), ((rt0.c0)IS NOT(1981493895)), (rt0.c1 IN ()), vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (STRFTIME(((rt0.c2) NOTNULL), ((rt0.c1)*(NULL)), ((rt0.c0)IS NOT(1981493895)), (rt0.c1 IN ()), vt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END))));
SELECT * FROM rt0, vt1 WHERE (((vt1.c2) NOT BETWEEN (vt1.c3) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c2) NOT BETWEEN (vt1.c3) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((vt1.c2) NOT BETWEEN (vt1.c3) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c2) NOT BETWEEN (vt1.c3) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((vt1.c2) NOT BETWEEN (vt1.c3) AND (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (HEX(DISTINCT vt1.c3))));
SELECT SUM(count) FROM (SELECT (((+ (HEX(DISTINCT vt1.c3)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (HEX(DISTINCT vt1.c3))));
SELECT SUM(count) FROM (SELECT (((+ (HEX(DISTINCT vt1.c3)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (HEX(DISTINCT vt1.c3))));
SELECT * FROM rt0, vt1 WHERE (((TYPEOF(vt1.c2)) IS FALSE)) ORDER BY rt0.c1, x'177f';
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt1.c2)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1, x'177f');
SELECT * FROM rt0, vt1 WHERE (((TYPEOF(vt1.c2)) IS FALSE)) ORDER BY rt0.c1, x'177f';
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt1.c2)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1, x'177f');
SELECT * FROM rt0, vt1 WHERE (((TYPEOF(vt1.c2)) IS FALSE)) ORDER BY rt0.c1, x'177f';
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))>('?''#% K,')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))>('?''#% K,'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))>('?''#% K,')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))>('?''#% K,'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))>('?''#% K,')));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((- (rt0.c1)))||(((vt1.c3) ISNULL)))) ORDER BY (((((vt1.c1))<((rt0.c1))))LIKE(vt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))||(((vt1.c3) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c1))<((rt0.c1))))LIKE(vt1.c1)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((- (rt0.c1)))||(((vt1.c3) ISNULL)))) ORDER BY (((((vt1.c1))<((rt0.c1))))LIKE(vt1.c1));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))||(((vt1.c3) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c1))<((rt0.c1))))LIKE(vt1.c1)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((- (rt0.c1)))||(((vt1.c3) ISNULL)))) ORDER BY (((((vt1.c1))<((rt0.c1))))LIKE(vt1.c1));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c2 IN ()), ((vt1.c2) NOTNULL), CAST(vt1.c2 AS INTEGER)))>((vt1.c0, (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))), (+ (rt0.c1)))))) ORDER BY ((CAST(vt1.c0 AS BLOB))%((((0.7972576616602255, vt1.c3, rt0.c0, rt0.c0, x''))<=((vt1.c0, vt1.c0, rt0.c0, vt1.c1, NULL)))))  NULLS LAST, ((((vt1.c3) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((((rt0.c1))>=((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2 IN ()), ((vt1.c2) NOTNULL), CAST(vt1.c2 AS INTEGER)))>((vt1.c0, (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))), (+ (rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c0 AS BLOB))%((((0.7972576616602255, vt1.c3, rt0.c0, rt0.c0, x''))<=((vt1.c0, vt1.c0, rt0.c0, vt1.c1, NULL)))))  NULLS LAST, ((((vt1.c3) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((((rt0.c1))>=((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c2 IN ()), ((vt1.c2) NOTNULL), CAST(vt1.c2 AS INTEGER)))>((vt1.c0, (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))), (+ (rt0.c1)))))) ORDER BY ((CAST(vt1.c0 AS BLOB))%((((0.7972576616602255, vt1.c3, rt0.c0, rt0.c0, x''))<=((vt1.c0, vt1.c0, rt0.c0, vt1.c1, NULL)))))  NULLS LAST, ((((vt1.c3) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((((rt0.c1))>=((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2 IN ()), ((vt1.c2) NOTNULL), CAST(vt1.c2 AS INTEGER)))>((vt1.c0, (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))), (+ (rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c0 AS BLOB))%((((0.7972576616602255, vt1.c3, rt0.c0, rt0.c0, x''))<=((vt1.c0, vt1.c0, rt0.c0, vt1.c1, NULL)))))  NULLS LAST, ((((vt1.c3) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((((rt0.c1))>=((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c2 IN ()), ((vt1.c2) NOTNULL), CAST(vt1.c2 AS INTEGER)))>((vt1.c0, (((vt1.c3)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))), (+ (rt0.c1)))))) ORDER BY ((CAST(vt1.c0 AS BLOB))%((((0.7972576616602255, vt1.c3, rt0.c0, rt0.c0, x''))<=((vt1.c0, vt1.c0, rt0.c0, vt1.c1, NULL)))))  NULLS LAST, ((((vt1.c3) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(vt1.c2 AS NUMERIC)) AND ((((rt0.c1))>=((rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)<<(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<<(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)<<(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)<<(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)<<(vt1.c1)) IN ()));
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((vt1.c2)<=(rt0.c0))))) ORDER BY CASE WHEN (vt1.c2 IN ()) THEN ((vt1.c1) NOT NULL) WHEN x'bbdc' THEN 0x5023af27 COLLATE BINARY WHEN ((0.8170445184904888)&(rt0.c0)) THEN (+ (-1324710834)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (vt1.c2 IN ()) THEN ((vt1.c1) NOT NULL) WHEN x'bbdc' THEN 0x5023af27 COLLATE BINARY WHEN ((0.8170445184904888)&(rt0.c0)) THEN (+ (-1324710834)) END  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((vt1.c2)<=(rt0.c0))))) ORDER BY CASE WHEN (vt1.c2 IN ()) THEN ((vt1.c1) NOT NULL) WHEN x'bbdc' THEN 0x5023af27 COLLATE BINARY WHEN ((0.8170445184904888)&(rt0.c0)) THEN (+ (-1324710834)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (vt1.c2 IN ()) THEN ((vt1.c1) NOT NULL) WHEN x'bbdc' THEN 0x5023af27 COLLATE BINARY WHEN ((0.8170445184904888)&(rt0.c0)) THEN (+ (-1324710834)) END  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((vt1.c2)<=(rt0.c0))))) ORDER BY CASE WHEN (vt1.c2 IN ()) THEN ((vt1.c1) NOT NULL) WHEN x'bbdc' THEN 0x5023af27 COLLATE BINARY WHEN ((0.8170445184904888)&(rt0.c0)) THEN (+ (-1324710834)) END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c2)OR(vt1.c3)))&(vt1.c1)) WHERE ((- (CASE WHEN 'WI' THEN vt1.c0 END))) ORDER BY ((- (rt0.c1)) IN ())  NULLS FIRST, LOWER(((vt1.c3) NOT BETWEEN (rt0.c0) AND (vt1.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN 'WI' THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c2)OR(vt1.c3)))&(vt1.c1)) ORDER BY ((- (rt0.c1)) IN ())  NULLS FIRST, LOWER(((vt1.c3) NOT BETWEEN (rt0.c0) AND (vt1.c3))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c2)OR(vt1.c3)))&(vt1.c1)) WHERE ((- (CASE WHEN 'WI' THEN vt1.c0 END))) ORDER BY ((- (rt0.c1)) IN ())  NULLS FIRST, LOWER(((vt1.c3) NOT BETWEEN (rt0.c0) AND (vt1.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN 'WI' THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c2)OR(vt1.c3)))&(vt1.c1)) ORDER BY ((- (rt0.c1)) IN ())  NULLS FIRST, LOWER(((vt1.c3) NOT BETWEEN (rt0.c0) AND (vt1.c3))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((rt0.c2)OR(vt1.c3)))&(vt1.c1)) WHERE ((- (CASE WHEN 'WI' THEN vt1.c0 END))) ORDER BY ((- (rt0.c1)) IN ())  NULLS FIRST, LOWER(((vt1.c3) NOT BETWEEN (rt0.c0) AND (vt1.c3))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c3)>=(vt1.c3)))LIKE(TRIM(vt1.c0)))) ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c3)|(vt1.c1)), ((vt1.c3)AND(vt1.c3)), 0.12990662388526708 COLLATE RTRIM)) AND ((((vt1.c3) IS FALSE), TYPEOF(-871827020), TYPEOF(DISTINCT vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3)>=(vt1.c3)))LIKE(TRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c3)|(vt1.c1)), ((vt1.c3)AND(vt1.c3)), 0.12990662388526708 COLLATE RTRIM)) AND ((((vt1.c3) IS FALSE), TYPEOF(-871827020), TYPEOF(DISTINCT vt1.c1)))) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c3)>=(vt1.c3)))LIKE(TRIM(vt1.c0)))) ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c3)|(vt1.c1)), ((vt1.c3)AND(vt1.c3)), 0.12990662388526708 COLLATE RTRIM)) AND ((((vt1.c3) IS FALSE), TYPEOF(-871827020), TYPEOF(DISTINCT vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3)>=(vt1.c3)))LIKE(TRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c3)|(vt1.c1)), ((vt1.c3)AND(vt1.c3)), 0.12990662388526708 COLLATE RTRIM)) AND ((((vt1.c3) IS FALSE), TYPEOF(-871827020), TYPEOF(DISTINCT vt1.c1)))) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c3)>=(vt1.c3)))LIKE(TRIM(vt1.c0)))) ORDER BY (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c3)|(vt1.c1)), ((vt1.c3)AND(vt1.c3)), 0.12990662388526708 COLLATE RTRIM)) AND ((((vt1.c3) IS FALSE), TYPEOF(-871827020), TYPEOF(DISTINCT vt1.c1)))) DESC;
SELECT ALL * FROM vt1 WHERE ((((((NULL)<>(vt1.c1))))=((((vt1.c1) NOT NULL))))) ORDER BY ((((((((((0.04117482334110745) NOT NULL))OR(CASE WHEN 0.6591332062639266 THEN vt1.c3 ELSE vt1.c0 END)))AND((vt1.c3 IN (vt1.c1)))))AND(CASE vt1.c3  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c3 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c3 END)))OR(vt1.c3)) ASC, vt1.c3, json_array(((vt1.c0)>=(vt1.c3)), (((vt1.c2, vt1.c3, vt1.c2)) BETWEEN ((vt1.c0, vt1.c0, vt1.c3)) AND ((vt1.c1, vt1.c2, vt1.c2))), ((0.5919137903157075)*(vt1.c1)), (vt1.c1 IN (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL)<>(vt1.c1))))==((((vt1.c1) NOT NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((0.04117482334110745) NOT NULL))OR(CASE WHEN 0.6591332062639266 THEN vt1.c3 ELSE vt1.c0 END)))AND((vt1.c3 IN (vt1.c1)))))AND(CASE vt1.c3  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c3 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c3 END)))OR(vt1.c3)) ASC, vt1.c3, json_array(((vt1.c0)>=(vt1.c3)), (((vt1.c2, vt1.c3, vt1.c2)) BETWEEN ((vt1.c0, vt1.c0, vt1.c3)) AND ((vt1.c1, vt1.c2, vt1.c2))), ((0.5919137903157075)*(vt1.c1)), (vt1.c1 IN (vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((NULL)<>(vt1.c1))))=((((vt1.c1) NOT NULL))))) ORDER BY ((((((((((0.04117482334110745) NOT NULL))OR(CASE WHEN 0.6591332062639266 THEN vt1.c3 ELSE vt1.c0 END)))AND((vt1.c3 IN (vt1.c1)))))AND(CASE vt1.c3  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c3 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c3 END)))OR(vt1.c3)) ASC, vt1.c3, json_array(((vt1.c0)>=(vt1.c3)), (((vt1.c2, vt1.c3, vt1.c2)) BETWEEN ((vt1.c0, vt1.c0, vt1.c3)) AND ((vt1.c1, vt1.c2, vt1.c2))), ((0.5919137903157075)*(vt1.c1)), (vt1.c1 IN (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL)<>(vt1.c1))))==((((vt1.c1) NOT NULL))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((0.04117482334110745) NOT NULL))OR(CASE WHEN 0.6591332062639266 THEN vt1.c3 ELSE vt1.c0 END)))AND((vt1.c3 IN (vt1.c1)))))AND(CASE vt1.c3  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c3 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c3 END)))OR(vt1.c3)) ASC, vt1.c3, json_array(((vt1.c0)>=(vt1.c3)), (((vt1.c2, vt1.c3, vt1.c2)) BETWEEN ((vt1.c0, vt1.c0, vt1.c3)) AND ((vt1.c1, vt1.c2, vt1.c2))), ((0.5919137903157075)*(vt1.c1)), (vt1.c1 IN (vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((NULL)<>(vt1.c1))))=((((vt1.c1) NOT NULL))))) ORDER BY ((((((((((0.04117482334110745) NOT NULL))OR(CASE WHEN 0.6591332062639266 THEN vt1.c3 ELSE vt1.c0 END)))AND((vt1.c3 IN (vt1.c1)))))AND(CASE vt1.c3  WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c3 THEN vt1.c3 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c3 END)))OR(vt1.c3)) ASC, vt1.c3, json_array(((vt1.c0)>=(vt1.c3)), (((vt1.c2, vt1.c3, vt1.c2)) BETWEEN ((vt1.c0, vt1.c0, vt1.c3)) AND ((vt1.c1, vt1.c2, vt1.c2))), ((0.5919137903157075)*(vt1.c1)), (vt1.c1 IN (vt1.c0)))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (CASE ((vt1.c3) BETWEEN (x'') AND (x'd328'))  WHEN LIKELY(DISTINCT 1739732784) THEN ((rt0.c1)AND(vt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c3) BETWEEN (x'') AND (x'd328'))  WHEN LIKELY(DISTINCT 1739732784) THEN ((rt0.c1)AND(vt1.c3)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE ((vt1.c3) BETWEEN (x'') AND (x'd328'))  WHEN LIKELY(DISTINCT 1739732784) THEN ((rt0.c1)AND(vt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c3) BETWEEN (x'') AND (x'd328'))  WHEN LIKELY(DISTINCT 1739732784) THEN ((rt0.c1)AND(vt1.c3)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE ((vt1.c3) BETWEEN (x'') AND (x'd328'))  WHEN LIKELY(DISTINCT 1739732784) THEN ((rt0.c1)AND(vt1.c3)) END);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE))IS(LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))IS(LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE))IS(LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE))IS(LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE))IS(LOWER(vt1.c0))));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c1 COLLATE BINARY))) ORDER BY (CAST(rt0.c1 AS BLOB) IN ())  NULLS LAST, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS BLOB) IN ())  NULLS LAST, rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c1 COLLATE BINARY))) ORDER BY (CAST(rt0.c1 AS BLOB) IN ())  NULLS LAST, rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS BLOB) IN ())  NULLS LAST, rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c1 COLLATE BINARY))) ORDER BY (CAST(rt0.c1 AS BLOB) IN ())  NULLS LAST, rt0.c1  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((((vt1.c3 IN ()))>>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt1.c3 IN ()))>>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c3 IN ()))>>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt1.c3 IN ()))>>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c3 IN ()))>>((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (')F' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((')F' COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (')F' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((')F' COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (')F' COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c2) ORDER BY ((((vt1.c1) IS FALSE)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c1) IS FALSE)) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c2) ORDER BY ((((vt1.c1) IS FALSE)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c1) IS FALSE)) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c2) ORDER BY ((((vt1.c1) IS FALSE)) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c0)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c0)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((rt0.c0)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((vt1.c3 IN ())))=(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))))) WHERE (IFNULL((~ (vt1.c3)), ((vt1.c0)AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL((~ (vt1.c3)), ((vt1.c0)AND(vt1.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((vt1.c3 IN ())))=(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((vt1.c3 IN ())))=(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))))) WHERE (IFNULL((~ (vt1.c3)), ((vt1.c0)AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL((~ (vt1.c3)), ((vt1.c0)AND(vt1.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((vt1.c3 IN ())))=(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((vt1.c3 IN ())))=(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))))) WHERE (IFNULL((~ (vt1.c3)), ((vt1.c0)AND(vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((~ ((vt1.c3 IN ())))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c2) AND (x'6054'))) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND ((NOT (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c3 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c2) AND (x'6054'))) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND ((NOT (vt1.c2)))));
SELECT ALL * FROM vt1 WHERE ((~ ((vt1.c3 IN ())))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c2) AND (x'6054'))) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND ((NOT (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c3 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c2) AND (x'6054'))) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND ((NOT (vt1.c2)))));
SELECT ALL * FROM vt1 WHERE ((~ ((vt1.c3 IN ())))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c2) AND (x'6054'))) NOT BETWEEN (vt1.c2 COLLATE NOCASE) AND ((NOT (vt1.c2))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 AS TEXT)) ORDER BY ((((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c3)))AND(2.056112514E9))) BETWEEN (((vt1.c1) IS TRUE)) AND (CAST(vt1.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c3)))AND(2.056112514E9))) BETWEEN (((vt1.c1) IS TRUE)) AND (CAST(vt1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 AS TEXT)) ORDER BY ((((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c3)))AND(2.056112514E9))) BETWEEN (((vt1.c1) IS TRUE)) AND (CAST(vt1.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c3)))AND(2.056112514E9))) BETWEEN (((vt1.c1) IS TRUE)) AND (CAST(vt1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 AS TEXT)) ORDER BY ((((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c3)))AND(vt1.c3)))AND(2.056112514E9))) BETWEEN (((vt1.c1) IS TRUE)) AND (CAST(vt1.c1 AS NUMERIC)));
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)>=(CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM)>=(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)>=(CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM)>=(CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)>=(CAST(vt1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2))==((((vt1.c2) BETWEEN (vt1.c3) AND (vt1.c3)))))) ORDER BY (+ (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2))==((((vt1.c2) BETWEEN (vt1.c3) AND (vt1.c3)))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2))==((((vt1.c2) BETWEEN (vt1.c3) AND (vt1.c3)))))) ORDER BY (+ (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2))==((((vt1.c2) BETWEEN (vt1.c3) AND (vt1.c3)))))) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2))==((((vt1.c2) BETWEEN (vt1.c3) AND (vt1.c3)))))) ORDER BY (+ (vt1.c0))  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c2 COLLATE BINARY) NOT NULL)) ORDER BY load_extension((~ (vt1.c3)))  NULLS LAST, (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))|(x'c52b')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY load_extension((~ (vt1.c3)))  NULLS LAST, (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))|(x'c52b')) ASC);
SELECT * FROM vt1 WHERE (((vt1.c2 COLLATE BINARY) NOT NULL)) ORDER BY load_extension((~ (vt1.c3)))  NULLS LAST, (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))|(x'c52b')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY load_extension((~ (vt1.c3)))  NULLS LAST, (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))|(x'c52b')) ASC);
SELECT * FROM rt0, vt1 WHERE (json_patch(CAST(vt1.c2 AS BLOB), (vt1.c3 IN (vt1.c1)))) ORDER BY (((rt0.c0 COLLATE BINARY))>=((CASE WHEN vt1.c0 THEN rt0.c2 END))) DESC  NULLS LAST, CASE ((((vt1.c0)OR(vt1.c3)))AND(vt1.c2))  WHEN vt1.c0 COLLATE BINARY THEN rt0.c2 WHEN ((vt1.c2) NOTNULL) THEN rt0.c1 WHEN (((vt1.c3, vt1.c0, vt1.c3, vt1.c0, vt1.c2))>((rt0.c2, vt1.c3, rt0.c0, rt0.c2, vt1.c0))) THEN ((rt0.c0)LIKE(vt1.c0)) ELSE json_object(vt1.c0, rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(CAST(vt1.c2 AS BLOB), (vt1.c3 IN (vt1.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0 COLLATE BINARY))>=((CASE WHEN vt1.c0 THEN rt0.c2 END))) DESC  NULLS LAST, CASE ((((vt1.c0)OR(vt1.c3)))AND(vt1.c2))  WHEN vt1.c0 COLLATE BINARY THEN rt0.c2 WHEN ((vt1.c2) NOTNULL) THEN rt0.c1 WHEN (((vt1.c3, vt1.c0, vt1.c3, vt1.c0, vt1.c2))>((rt0.c2, vt1.c3, rt0.c0, rt0.c2, vt1.c0))) THEN ((rt0.c0)LIKE(vt1.c0)) ELSE json_object(vt1.c0, rt0.c2) END  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (json_patch(CAST(vt1.c2 AS BLOB), (vt1.c3 IN (vt1.c1)))) ORDER BY (((rt0.c0 COLLATE BINARY))>=((CASE WHEN vt1.c0 THEN rt0.c2 END))) DESC  NULLS LAST, CASE ((((vt1.c0)OR(vt1.c3)))AND(vt1.c2))  WHEN vt1.c0 COLLATE BINARY THEN rt0.c2 WHEN ((vt1.c2) NOTNULL) THEN rt0.c1 WHEN (((vt1.c3, vt1.c0, vt1.c3, vt1.c0, vt1.c2))>((rt0.c2, vt1.c3, rt0.c0, rt0.c2, vt1.c0))) THEN ((rt0.c0)LIKE(vt1.c0)) ELSE json_object(vt1.c0, rt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(CAST(vt1.c2 AS BLOB), (vt1.c3 IN (vt1.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0 COLLATE BINARY))>=((CASE WHEN vt1.c0 THEN rt0.c2 END))) DESC  NULLS LAST, CASE ((((vt1.c0)OR(vt1.c3)))AND(vt1.c2))  WHEN vt1.c0 COLLATE BINARY THEN rt0.c2 WHEN ((vt1.c2) NOTNULL) THEN rt0.c1 WHEN (((vt1.c3, vt1.c0, vt1.c3, vt1.c0, vt1.c2))>((rt0.c2, vt1.c3, rt0.c0, rt0.c2, vt1.c0))) THEN ((rt0.c0)LIKE(vt1.c0)) ELSE json_object(vt1.c0, rt0.c2) END  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (json_patch(CAST(vt1.c2 AS BLOB), (vt1.c3 IN (vt1.c1)))) ORDER BY (((rt0.c0 COLLATE BINARY))>=((CASE WHEN vt1.c0 THEN rt0.c2 END))) DESC  NULLS LAST, CASE ((((vt1.c0)OR(vt1.c3)))AND(vt1.c2))  WHEN vt1.c0 COLLATE BINARY THEN rt0.c2 WHEN ((vt1.c2) NOTNULL) THEN rt0.c1 WHEN (((vt1.c3, vt1.c0, vt1.c3, vt1.c0, vt1.c2))>((rt0.c2, vt1.c3, rt0.c0, rt0.c2, vt1.c0))) THEN ((rt0.c0)LIKE(vt1.c0)) ELSE json_object(vt1.c0, rt0.c2) END  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS REAL)) ORDER BY CAST(((rt0.c0)|(rt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)|(rt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS REAL)) ORDER BY CAST(((rt0.c0)|(rt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)|(rt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS REAL)) ORDER BY CAST(((rt0.c0)|(rt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((((+ (vt1.c3)))AND(CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN vt1.c0 END)))OR(x'')))OR((- (vt1.c2))))) ORDER BY ((((((vt1.c3)>>(rt0.c1)))OR(((((vt1.c1)OR(rt0.c1)))AND(NULL)))))AND(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt1.c3)))AND(CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN vt1.c0 END)))OR(x'')))OR((- (vt1.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c3)>>(rt0.c1)))OR(((((vt1.c1)OR(rt0.c1)))AND(NULL)))))AND(rt0.c2 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((((+ (vt1.c3)))AND(CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN vt1.c0 END)))OR(x'')))OR((- (vt1.c2))))) ORDER BY ((((((vt1.c3)>>(rt0.c1)))OR(((((vt1.c1)OR(rt0.c1)))AND(NULL)))))AND(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt1.c3)))AND(CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN vt1.c0 END)))OR(x'')))OR((- (vt1.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((vt1.c3)>>(rt0.c1)))OR(((((vt1.c1)OR(rt0.c1)))AND(NULL)))))AND(rt0.c2 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((((+ (vt1.c3)))AND(CASE rt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN vt1.c0 END)))OR(x'')))OR((- (vt1.c2))))) ORDER BY ((((((vt1.c3)>>(rt0.c1)))OR(((((vt1.c1)OR(rt0.c1)))AND(NULL)))))AND(rt0.c2 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((('1250025280' COLLATE BINARY)>=(CASE WHEN '4' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((('1250025280' COLLATE BINARY)>=(CASE WHEN '4' THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((('1250025280' COLLATE BINARY)>=(CASE WHEN '4' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((('1250025280' COLLATE BINARY)>=(CASE WHEN '4' THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((('1250025280' COLLATE BINARY)>=(CASE WHEN '4' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2)+(CASE vt1.c0  WHEN vt1.c3 THEN rt0.c1 WHEN -9.17824902E8 THEN vt1.c2 WHEN vt1.c1 THEN rt0.c2 END)) WHERE ((+ ((((rt0.c2))=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c2))==((rt0.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2)+(CASE vt1.c0  WHEN vt1.c3 THEN rt0.c1 WHEN -9.17824902E8 THEN vt1.c2 WHEN vt1.c1 THEN rt0.c2 END)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2)+(CASE vt1.c0  WHEN vt1.c3 THEN rt0.c1 WHEN -9.17824902E8 THEN vt1.c2 WHEN vt1.c1 THEN rt0.c2 END)) WHERE ((+ ((((rt0.c2))=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c2))==((rt0.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2)+(CASE vt1.c0  WHEN vt1.c3 THEN rt0.c1 WHEN -9.17824902E8 THEN vt1.c2 WHEN vt1.c1 THEN rt0.c2 END)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2)+(CASE vt1.c0  WHEN vt1.c3 THEN rt0.c1 WHEN -9.17824902E8 THEN vt1.c2 WHEN vt1.c1 THEN rt0.c2 END)) WHERE ((+ ((((rt0.c2))=((rt0.c1))))));
SELECT ALL * FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN rt0.c2 THEN '5Y' END)&((vt1.c3 IN ())))) ORDER BY (((vt1.c2 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c2 THEN '5Y' END)&((vt1.c3 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c2 IN ())) IS TRUE));
SELECT ALL * FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN rt0.c2 THEN '5Y' END)&((vt1.c3 IN ())))) ORDER BY (((vt1.c2 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c2 THEN '5Y' END)&((vt1.c3 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c2 IN ())) IS TRUE));
SELECT ALL * FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN rt0.c2 THEN '5Y' END)&((vt1.c3 IN ())))) ORDER BY (((vt1.c2 IN ())) IS TRUE);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c2 COLLATE RTRIM)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((NOT (vt1.c2))))) ORDER BY ((CAST(vt1.c2 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c0 END) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, ((((rt0.c1) ISNULL)) NOTNULL), ((((rt0.c1)<<(vt1.c2))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2 COLLATE RTRIM)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((NOT (vt1.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c2 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c0 END) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, ((((rt0.c1) ISNULL)) NOTNULL), ((((rt0.c1)<<(vt1.c2))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c2 COLLATE RTRIM)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((NOT (vt1.c2))))) ORDER BY ((CAST(vt1.c2 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c0 END) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, ((((rt0.c1) ISNULL)) NOTNULL), ((((rt0.c1)<<(vt1.c2))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2 COLLATE RTRIM)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((NOT (vt1.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c2 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c0 END) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, ((((rt0.c1) ISNULL)) NOTNULL), ((((rt0.c1)<<(vt1.c2))) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c2 COLLATE RTRIM)AND(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((NOT (vt1.c2))))) ORDER BY ((CAST(vt1.c2 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c0 END) AND ((rt0.c2 IN ()))) DESC  NULLS LAST, ((((rt0.c1) ISNULL)) NOTNULL), ((((rt0.c1)<<(vt1.c2))) ISNULL) DESC;
SELECT * FROM vt1 WHERE ((((vt1.c2 IN ())) NOT BETWEEN (0.012097292489707256) AND ((+ (vt1.c1))))) ORDER BY (((vt1.c2)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt1.c3 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ())) NOT BETWEEN (0.012097292489707256) AND ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt1.c3 COLLATE NOCASE))) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c2 IN ())) NOT BETWEEN (0.012097292489707256) AND ((+ (vt1.c1))))) ORDER BY (((vt1.c2)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt1.c3 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ())) NOT BETWEEN (0.012097292489707256) AND ((+ (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt1.c3 COLLATE NOCASE))) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c2 IN ())) NOT BETWEEN (0.012097292489707256) AND ((+ (vt1.c1))))) ORDER BY (((vt1.c2)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt1.c3 COLLATE NOCASE))) DESC;
SELECT * FROM vt1 WHERE ((((((vt1.c2)AND(vt1.c3)))OR(vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)AND(vt1.c3)))OR(vt1.c2)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c2)AND(vt1.c3)))OR(vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)AND(vt1.c3)))OR(vt1.c2)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c2)AND(vt1.c3)))OR(vt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ ((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ ((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ ((NOT (vt1.c1)))));
SELECT ALL * FROM rt0, vt1 WHERE (((NULL)IS(rt0.c1))) ORDER BY (((((+ (vt1.c1)))AND(NULL)))AND((rt0.c1 IN (rt0.c1, rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)IS(rt0.c1))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((+ (vt1.c1)))AND(NULL)))AND((rt0.c1 IN (rt0.c1, rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((NULL)IS(rt0.c1))) ORDER BY (((((+ (vt1.c1)))AND(NULL)))AND((rt0.c1 IN (rt0.c1, rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)IS(rt0.c1))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((+ (vt1.c1)))AND(NULL)))AND((rt0.c1 IN (rt0.c1, rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((NULL)IS(rt0.c1))) ORDER BY (((((+ (vt1.c1)))AND(NULL)))AND((rt0.c1 IN (rt0.c1, rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((0xffffffff9c5d7f2a) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0xffffffff9c5d7f2a) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0xffffffff9c5d7f2a) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0xffffffff9c5d7f2a) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0xffffffff9c5d7f2a) ISNULL));
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN vt1.c0 THEN (((rt0.c0)) NOT BETWEEN ((-33895955)) AND ((vt1.c0))) WHEN (((vt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((0.4968716177916572))) THEN 0.8242905453169781 WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c2)) THEN vt1.c3 COLLATE RTRIM ELSE (- (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN (((rt0.c0)) NOT BETWEEN ((-33895955)) AND ((vt1.c0))) WHEN (((vt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((0.4968716177916572))) THEN 0.8242905453169781 WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c2)) THEN vt1.c3 COLLATE RTRIM ELSE (- (vt1.c1)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN vt1.c0 THEN (((rt0.c0)) NOT BETWEEN ((-33895955)) AND ((vt1.c0))) WHEN (((vt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((0.4968716177916572))) THEN 0.8242905453169781 WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c2)) THEN vt1.c3 COLLATE RTRIM ELSE (- (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN (((rt0.c0)) NOT BETWEEN ((-33895955)) AND ((vt1.c0))) WHEN (((vt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((0.4968716177916572))) THEN 0.8242905453169781 WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c2)) THEN vt1.c3 COLLATE RTRIM ELSE (- (vt1.c1)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN vt1.c0 THEN (((rt0.c0)) NOT BETWEEN ((-33895955)) AND ((vt1.c0))) WHEN (((vt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((0.4968716177916572))) THEN 0.8242905453169781 WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c2)) THEN vt1.c3 COLLATE RTRIM ELSE (- (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2))>((vt1.c1, NULL, vt1.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c2))>((vt1.c1, NULL, vt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2))>((vt1.c1, NULL, vt1.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c2))>((vt1.c1, NULL, vt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c2))>((vt1.c1, NULL, vt1.c1))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY (((('-22300113')AND(x'14f6')))AND(((((vt1.c3)AND(vt1.c1)))OR(vt1.c3)))) DESC, (((((vt1.c1)AND(vt1.c0))))<=((((vt1.c1)<>(vt1.c3))))) DESC  NULLS LAST, 0.2655354623118935 DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((('-22300113')AND(x'14f6')))AND(((((vt1.c3)AND(vt1.c1)))OR(vt1.c3)))) DESC, (((((vt1.c1)AND(vt1.c0))))<=((((vt1.c1)!=(vt1.c3))))) DESC  NULLS LAST, 0.2655354623118935 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY (((('-22300113')AND(x'14f6')))AND(((((vt1.c3)AND(vt1.c1)))OR(vt1.c3)))) DESC, (((((vt1.c1)AND(vt1.c0))))<=((((vt1.c1)<>(vt1.c3))))) DESC  NULLS LAST, 0.2655354623118935 DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY (((('-22300113')AND(x'14f6')))AND(((((vt1.c3)AND(vt1.c1)))OR(vt1.c3)))) DESC, (((((vt1.c1)AND(vt1.c0))))<=((((vt1.c1)!=(vt1.c3))))) DESC  NULLS LAST, 0.2655354623118935 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY (((('-22300113')AND(x'14f6')))AND(((((vt1.c3)AND(vt1.c1)))OR(vt1.c3)))) DESC, (((((vt1.c1)AND(vt1.c0))))<=((((vt1.c1)<>(vt1.c3))))) DESC  NULLS LAST, 0.2655354623118935 DESC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (TIME(CAST(vt1.c2 AS TEXT), (+ (0.08390704140983418)), ((rt0.c0)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TIME(CAST(vt1.c2 AS TEXT), (+ (0.08390704140983418)), ((rt0.c0)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (TIME(CAST(vt1.c2 AS TEXT), (+ (0.08390704140983418)), ((rt0.c0)IS NOT(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TIME(CAST(vt1.c2 AS TEXT), (+ (0.08390704140983418)), ((rt0.c0)IS NOT(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (TIME(CAST(vt1.c2 AS TEXT), (+ (0.08390704140983418)), ((rt0.c0)IS NOT(rt0.c2))));
SELECT ALL * FROM vt1 WHERE (((NULL IN (vt1.c2, vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN (vt1.c2, vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL IN (vt1.c2, vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN (vt1.c2, vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL IN (vt1.c2, vt1.c1)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1)))));
SELECT ALL * FROM vt1, rt0 WHERE ((CAST(vt1.c3 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c3 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((CAST(vt1.c3 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c3 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((CAST(vt1.c3 AS INTEGER) IN ()));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)<=(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)<=(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)<=(rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c2 AS BLOB))))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (rt0.c0) AND ((- (rt0.c2)))), (IFNULL(rt0.c0, rt0.c0) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (rt0.c0) AND ((- (rt0.c2)))), (IFNULL(rt0.c0, rt0.c0) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c2 AS BLOB))))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (rt0.c0) AND ((- (rt0.c2)))), (IFNULL(rt0.c0, rt0.c0) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (rt0.c0) AND ((- (rt0.c2)))), (IFNULL(rt0.c0, rt0.c0) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 COLLATE RTRIM))<((CAST(rt0.c2 AS BLOB))))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (rt0.c0) AND ((- (rt0.c2)))), (IFNULL(rt0.c0, rt0.c0) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c3 END) BETWEEN (((vt1.c0)&(vt1.c1))) AND (CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c3 END) BETWEEN (((vt1.c0)&(vt1.c1))) AND (CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c3 END) BETWEEN (((vt1.c0)&(vt1.c1))) AND (CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c3 END) BETWEEN (((vt1.c0)&(vt1.c1))) AND (CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c3 END) BETWEEN (((vt1.c0)&(vt1.c1))) AND (CASE WHEN vt1.c3 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON rt0.c0 WHERE (NULLIF(68727065, (((vt1.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))) ORDER BY (((((rt0.c1)IS(vt1.c2))))>=((HEX(vt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(68727065, (((vt1.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON rt0.c0 ORDER BY (((((rt0.c1)IS(vt1.c2))))>=((HEX(vt1.c3))))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON rt0.c0 WHERE (NULLIF(68727065, (((vt1.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))) ORDER BY (((((rt0.c1)IS(vt1.c2))))>=((HEX(vt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(68727065, (((vt1.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON rt0.c0 ORDER BY (((((rt0.c1)IS(vt1.c2))))>=((HEX(vt1.c3))))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON rt0.c0 WHERE (NULLIF(68727065, (((vt1.c2)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))) ORDER BY (((((rt0.c1)IS(vt1.c2))))>=((HEX(vt1.c3))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c3)) NOT BETWEEN ((vt1.c1)) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c3)) NOT BETWEEN ((vt1.c1)) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c3)) NOT BETWEEN ((vt1.c1)) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c3)) NOT BETWEEN ((vt1.c1)) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c3)) NOT BETWEEN ((vt1.c1)) AND (((vt1.c0 IN ())))));
SELECT * FROM vt1 WHERE (json(CAST(vt1.c2 AS TEXT))) ORDER BY ((vt1.c0)IS NOT(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c2)<<(vt1.c3)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(CAST(vt1.c2 AS TEXT))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)IS NOT(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c2)<<(vt1.c3)) END DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (json(CAST(vt1.c2 AS TEXT))) ORDER BY ((vt1.c0)IS NOT(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c2)<<(vt1.c3)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json(CAST(vt1.c2 AS TEXT))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)IS NOT(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c2)<<(vt1.c3)) END DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (json(CAST(vt1.c2 AS TEXT))) ORDER BY ((vt1.c0)IS NOT(vt1.c1)) COLLATE NOCASE ASC  NULLS LAST, CASE WHEN (NOT (vt1.c2)) THEN ((vt1.c2)<<(vt1.c3)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT * FROM vt1 WHERE ((((- (vt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c2))) IS TRUE));
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) ORDER BY (~ (LOWER(vt1.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ (LOWER(vt1.c3)))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) ORDER BY (~ (LOWER(vt1.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ (LOWER(vt1.c3)))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((NULL)) AND (((NOT (rt0.c0)))))) ORDER BY (~ (LOWER(vt1.c3)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c1 AS TEXT))-(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))-(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c1 AS TEXT))-(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))-(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c1 AS TEXT))-(rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)<=((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)<=((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)<=((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c2 THEN vt1.c3 END AS BLOB)) ORDER BY 0xffffffffd7e09148 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c2 THEN vt1.c3 END AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY 0xffffffffd7e09148 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c2 THEN vt1.c3 END AS BLOB)) ORDER BY 0xffffffffd7e09148 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c2 THEN vt1.c3 END AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY 0xffffffffd7e09148 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c2 THEN vt1.c3 END AS BLOB)) ORDER BY 0xffffffffd7e09148 DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE ((((('2103624980'))>((rt0.c0))) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('2103624980'))>((rt0.c0))) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL DESC);
SELECT ALL * FROM rt0, vt1 WHERE ((((('2103624980'))>((rt0.c0))) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('2103624980'))>((rt0.c0))) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULL DESC);
SELECT ALL * FROM rt0, vt1 WHERE ((((('2103624980'))>((rt0.c0))) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY NULL DESC;
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c3)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c3)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c3)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c3)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c3)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((ABS('?B✓D{8ߕqz')) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS('?B✓D{8ߕqz')) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((ABS('?B✓D{8ߕqz')) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS('?B✓D{8ߕqz')) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((ABS('?B✓D{8ߕqz')) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)+(vt1.c0)))OR(((vt1.c1) NOT NULL))))OR((((vt1.c1, vt1.c2, vt1.c3, vt1.c2, vt1.c2))==((vt1.c3, vt1.c1, vt1.c2, vt1.c1, vt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)+(vt1.c0)))OR(((vt1.c1) NOT NULL))))OR((((vt1.c1, vt1.c2, vt1.c3, vt1.c2, vt1.c2))==((vt1.c3, vt1.c1, vt1.c2, vt1.c1, vt1.c3)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)+(vt1.c0)))OR(((vt1.c1) NOT NULL))))OR((((vt1.c1, vt1.c2, vt1.c3, vt1.c2, vt1.c2))==((vt1.c3, vt1.c1, vt1.c2, vt1.c1, vt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)+(vt1.c0)))OR(((vt1.c1) NOT NULL))))OR((((vt1.c1, vt1.c2, vt1.c3, vt1.c2, vt1.c2))==((vt1.c3, vt1.c1, vt1.c2, vt1.c1, vt1.c3)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)+(vt1.c0)))OR(((vt1.c1) NOT NULL))))OR((((vt1.c1, vt1.c2, vt1.c3, vt1.c2, vt1.c2))==((vt1.c3, vt1.c1, vt1.c2, vt1.c1, vt1.c3))))));
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE)) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))>>((~ (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))>>((~ (vt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE)) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))>>((~ (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))>>((~ (vt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1))) IS TRUE)) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))>>((~ (vt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((CASE vt1.c0  WHEN 0.5685954094127551 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c2 END IN (((rt0.c1) ISNULL), (vt1.c2 IN (vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN 0.5685954094127551 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c2 END IN (((rt0.c1) ISNULL), (vt1.c2 IN (vt1.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((CASE vt1.c0  WHEN 0.5685954094127551 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c2 END IN (((rt0.c1) ISNULL), (vt1.c2 IN (vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN 0.5685954094127551 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c2 END IN (((rt0.c1) ISNULL), (vt1.c2 IN (vt1.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((CASE vt1.c0  WHEN 0.5685954094127551 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c2 THEN rt0.c2 ELSE rt0.c2 END IN (((rt0.c1) ISNULL), (vt1.c2 IN (vt1.c2)))));
SELECT * FROM vt1 WHERE (((vt1.c1)<>(vt1.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)!=(vt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1)<>(vt1.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)!=(vt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1)<>(vt1.c3)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1) NOTNULL), (((vt1.c2, rt0.c1, vt1.c3)) NOT BETWEEN ((vt1.c2, vt1.c2, vt1.c2)) AND ((rt0.c0, vt1.c2, vt1.c0))), (vt1.c2 IN ())))==((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c3 END, (vt1.c0 IN ()), CASE vt1.c3  WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOTNULL), (((vt1.c2, rt0.c1, vt1.c3)) NOT BETWEEN ((vt1.c2, vt1.c2, vt1.c2)) AND ((rt0.c0, vt1.c2, vt1.c0))), (vt1.c2 IN ())))==((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c3 END, (vt1.c0 IN ()), CASE vt1.c3  WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1) NOTNULL), (((vt1.c2, rt0.c1, vt1.c3)) NOT BETWEEN ((vt1.c2, vt1.c2, vt1.c2)) AND ((rt0.c0, vt1.c2, vt1.c0))), (vt1.c2 IN ())))==((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c3 END, (vt1.c0 IN ()), CASE vt1.c3  WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOTNULL), (((vt1.c2, rt0.c1, vt1.c3)) NOT BETWEEN ((vt1.c2, vt1.c2, vt1.c2)) AND ((rt0.c0, vt1.c2, vt1.c0))), (vt1.c2 IN ())))==((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c3 END, (vt1.c0 IN ()), CASE vt1.c3  WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1) NOTNULL), (((vt1.c2, rt0.c1, vt1.c3)) NOT BETWEEN ((vt1.c2, vt1.c2, vt1.c2)) AND ((rt0.c0, vt1.c2, vt1.c0))), (vt1.c2 IN ())))==((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c3 END, (vt1.c0 IN ()), CASE vt1.c3  WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c0 END))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c1) ORDER BY ((TYPEOF(rt0.c1))GLOB(IFNULL(DISTINCT 0xfffffffffe86fb66, vt1.c1))), TYPEOF(DISTINCT ((vt1.c0) NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((TYPEOF(rt0.c1))GLOB(IFNULL(DISTINCT 0Xfffffffffe86fb66, vt1.c1))), TYPEOF(DISTINCT ((vt1.c0) NOT NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c1) ORDER BY ((TYPEOF(rt0.c1))GLOB(IFNULL(DISTINCT 0xfffffffffe86fb66, vt1.c1))), TYPEOF(DISTINCT ((vt1.c0) NOT NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((TYPEOF(rt0.c1))GLOB(IFNULL(DISTINCT 0Xfffffffffe86fb66, vt1.c1))), TYPEOF(DISTINCT ((vt1.c0) NOT NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c1) ORDER BY ((TYPEOF(rt0.c1))GLOB(IFNULL(DISTINCT 0xfffffffffe86fb66, vt1.c1))), TYPEOF(DISTINCT ((vt1.c0) NOT NULL))  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (((vt1.c2)<(vt1.c2)) COLLATE NOCASE COLLATE BINARY) ORDER BY (((((vt1.c2 IN ()))OR(-1682164531)))OR(SQLITE_SOURCE_ID())) DESC, (((vt1.c0 IN ())) BETWEEN (TOTAL_CHANGES()) AND (vt1.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)<(vt1.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c2 IN ()))OR(-1682164531)))OR(SQLITE_SOURCE_ID())) DESC, (((vt1.c0 IN ())) BETWEEN (TOTAL_CHANGES()) AND (vt1.c2 COLLATE NOCASE)) DESC);
SELECT * FROM vt1, rt0 WHERE (((vt1.c2)<(vt1.c2)) COLLATE NOCASE COLLATE BINARY) ORDER BY (((((vt1.c2 IN ()))OR(-1682164531)))OR(SQLITE_SOURCE_ID())) DESC, (((vt1.c0 IN ())) BETWEEN (TOTAL_CHANGES()) AND (vt1.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2)<(vt1.c2)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c2 IN ()))OR(-1682164531)))OR(SQLITE_SOURCE_ID())) DESC, (((vt1.c0 IN ())) BETWEEN (TOTAL_CHANGES()) AND (vt1.c2 COLLATE NOCASE)) DESC);
SELECT * FROM vt1, rt0 WHERE (((vt1.c2)<(vt1.c2)) COLLATE NOCASE COLLATE BINARY) ORDER BY (((((vt1.c2 IN ()))OR(-1682164531)))OR(SQLITE_SOURCE_ID())) DESC, (((vt1.c0 IN ())) BETWEEN (TOTAL_CHANGES()) AND (vt1.c2 COLLATE NOCASE)) DESC;
SELECT * FROM rt0, vt1 WHERE ((+ (CASE '-1491035138'  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY (((rt0.c1)) BETWEEN ((((((vt1.c0)OR(x'5419')))OR(0.32270767501214137)))) AND (((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (CASE '-1491035138'  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1)) BETWEEN ((((((vt1.c0)OR(x'5419')))OR(0.32270767501214137)))) AND (((~ (rt0.c2))))));
SELECT * FROM rt0, vt1 WHERE ((+ (CASE '-1491035138'  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY (((rt0.c1)) BETWEEN ((((((vt1.c0)OR(x'5419')))OR(0.32270767501214137)))) AND (((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (CASE '-1491035138'  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1)) BETWEEN ((((((vt1.c0)OR(x'5419')))OR(0.32270767501214137)))) AND (((~ (rt0.c2))))));
SELECT * FROM rt0, vt1 WHERE ((+ (CASE '-1491035138'  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) ORDER BY (((rt0.c1)) BETWEEN ((((((vt1.c0)OR(x'5419')))OR(0.32270767501214137)))) AND (((~ (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1))) BETWEEN (NULL) AND (((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY ((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1))) BETWEEN (NULL) AND (((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1))) BETWEEN (NULL) AND (((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY ((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1))) BETWEEN (NULL) AND (((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c1))) BETWEEN (NULL) AND (((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY ((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN rt0.c1 THEN NULL WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c0 ELSE vt1.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN NULL WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN rt0.c1 THEN NULL WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c0 ELSE vt1.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN NULL WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c0 ELSE vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN rt0.c1 THEN NULL WHEN vt1.c2 THEN rt0.c1 WHEN vt1.c3 THEN vt1.c0 ELSE vt1.c0 END) ISNULL));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c1 END)IS NOT(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c1 END)IS NOT(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c1 END)IS NOT(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c1 END)IS NOT(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c1 END)IS NOT(CAST(rt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0, vt1 NOT INDEXED WHERE ((((((vt1.c0)<(vt1.c3))))<=((((vt1.c3)<(vt1.c2)))))) ORDER BY ((HEX(vt1.c2)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)<(vt1.c3))))<=((((vt1.c3)<(vt1.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((HEX(vt1.c2)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 NOT INDEXED WHERE ((((((vt1.c0)<(vt1.c3))))<=((((vt1.c3)<(vt1.c2)))))) ORDER BY ((HEX(vt1.c2)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)<(vt1.c3))))<=((((vt1.c3)<(vt1.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((HEX(vt1.c2)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 NOT INDEXED WHERE ((((((vt1.c0)<(vt1.c3))))<=((((vt1.c3)<(vt1.c2)))))) ORDER BY ((HEX(vt1.c2)) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c3 IN ())) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c3 IN ())) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c3 IN ())) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c3 IN ())) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c3 IN ())) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((((((((rt0.c2)AND(vt1.c2)))AND(rt0.c2)))AND(vt1.c0)))OR(vt1.c1)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE (+ (rt0.c2))  WHEN (vt1.c3 IN (vt1.c0)) THEN LOWER(rt0.c0) END) ORDER BY ((((((((QUOTE(vt1.c2))AND(vt1.c2)))OR(rt0.c2 COLLATE NOCASE)))AND(CASE WHEN vt1.c3 THEN rt0.c2 END)))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC, (~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN (vt1.c3 IN (vt1.c0)) THEN LOWER(rt0.c0) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((QUOTE(vt1.c2))AND(vt1.c2)))OR(rt0.c2 COLLATE NOCASE)))AND(CASE WHEN vt1.c3 THEN rt0.c2 END)))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC, (~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE (+ (rt0.c2))  WHEN (vt1.c3 IN (vt1.c0)) THEN LOWER(rt0.c0) END) ORDER BY ((((((((QUOTE(vt1.c2))AND(vt1.c2)))OR(rt0.c2 COLLATE NOCASE)))AND(CASE WHEN vt1.c3 THEN rt0.c2 END)))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC, (~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN (vt1.c3 IN (vt1.c0)) THEN LOWER(rt0.c0) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((QUOTE(vt1.c2))AND(vt1.c2)))OR(rt0.c2 COLLATE NOCASE)))AND(CASE WHEN vt1.c3 THEN rt0.c2 END)))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC, (~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE (+ (rt0.c2))  WHEN (vt1.c3 IN (vt1.c0)) THEN LOWER(rt0.c0) END) ORDER BY ((((((((QUOTE(vt1.c2))AND(vt1.c2)))OR(rt0.c2 COLLATE NOCASE)))AND(CASE WHEN vt1.c3 THEN rt0.c2 END)))AND(((vt1.c2)IS NOT(vt1.c2)))) ASC, (~ (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ ((((rt0.c2, vt1.c3, rt0.c1)) BETWEEN ((rt0.c0, vt1.c3, vt1.c1)) AND ((vt1.c0, rt0.c0, '898740588'))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2, vt1.c3, rt0.c1)) BETWEEN ((rt0.c0, vt1.c3, vt1.c1)) AND ((vt1.c0, rt0.c0, '898740588')))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ ((((rt0.c2, vt1.c3, rt0.c1)) BETWEEN ((rt0.c0, vt1.c3, vt1.c1)) AND ((vt1.c0, rt0.c0, '898740588'))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2, vt1.c3, rt0.c1)) BETWEEN ((rt0.c0, vt1.c3, vt1.c1)) AND ((vt1.c0, rt0.c0, '898740588')))))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ ((((rt0.c2, vt1.c3, rt0.c1)) BETWEEN ((rt0.c0, vt1.c3, vt1.c1)) AND ((vt1.c0, rt0.c0, '898740588'))))));
SELECT COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) THEN CAST(rt0.c1 AS TEXT) END);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (((0.5355001737886992)OR(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.5355001737886992)OR(vt1.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (((0.5355001737886992)OR(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.5355001737886992)OR(vt1.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (((0.5355001737886992)OR(vt1.c2)))));
SELECT * FROM vt1 WHERE (TRIM(DISTINCT vt1.c2)) ORDER BY ((((json(vt1.c1))AND(vt1.c2)))AND(ABS(vt1.c2))) DESC  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt1.c2)) IS TRUE)  as count FROM vt1 ORDER BY ((((json(vt1.c1))AND(vt1.c2)))AND(ABS(vt1.c2))) DESC  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (TRIM(DISTINCT vt1.c2)) ORDER BY ((((json(vt1.c1))AND(vt1.c2)))AND(ABS(vt1.c2))) DESC  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt1.c2)) IS TRUE)  as count FROM vt1 ORDER BY ((((json(vt1.c1))AND(vt1.c2)))AND(ABS(vt1.c2))) DESC  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((~ (TYPEOF(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((~ (TYPEOF(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((~ (TYPEOF(DISTINCT rt0.c1))));
SELECT * FROM vt1, rt0 WHERE (DATE(x'' COLLATE RTRIM, UPPER(vt1.c3), (vt1.c2 IN ()))) ORDER BY (CASE WHEN vt1.c1 THEN rt0.c1 WHEN '-1022179641' THEN vt1.c3 WHEN rt0.c1 THEN vt1.c0 END IN ()) DESC, vt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((DATE(x'' COLLATE RTRIM, UPPER(vt1.c3), (vt1.c2 IN ()))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE WHEN vt1.c1 THEN rt0.c1 WHEN '-1022179641' THEN vt1.c3 WHEN rt0.c1 THEN vt1.c0 END IN ()) DESC, vt1.c1);
SELECT * FROM vt1, rt0 WHERE (DATE(x'' COLLATE RTRIM, UPPER(vt1.c3), (vt1.c2 IN ()))) ORDER BY (CASE WHEN vt1.c1 THEN rt0.c1 WHEN '-1022179641' THEN vt1.c3 WHEN rt0.c1 THEN vt1.c0 END IN ()) DESC, vt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((DATE(x'' COLLATE RTRIM, UPPER(vt1.c3), (vt1.c2 IN ()))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE WHEN vt1.c1 THEN rt0.c1 WHEN '-1022179641' THEN vt1.c3 WHEN rt0.c1 THEN vt1.c0 END IN ()) DESC, vt1.c1);
SELECT * FROM vt1, rt0 WHERE (DATE(x'' COLLATE RTRIM, UPPER(vt1.c3), (vt1.c2 IN ()))) ORDER BY (CASE WHEN vt1.c1 THEN rt0.c1 WHEN '-1022179641' THEN vt1.c3 WHEN rt0.c1 THEN vt1.c0 END IN ()) DESC, vt1.c1;
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND ((((rt0.c2)>=(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND ((((rt0.c2)>=(x'')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND ((((rt0.c2)>=(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND ((((rt0.c2)>=(x'')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((x'' COLLATE NOCASE)) AND ((((rt0.c2)>=(x''))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((0xfffffffff4e374ab)AND(vt1.c2)) THEN ((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c3)))OR('-917824902')))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0xfffffffff4e374ab)AND(vt1.c2)) THEN ((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c3)))OR('-917824902')))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((0xfffffffff4e374ab)AND(vt1.c2)) THEN ((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c3)))OR('-917824902')))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0xfffffffff4e374ab)AND(vt1.c2)) THEN ((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c3)))OR('-917824902')))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((0xfffffffff4e374ab)AND(vt1.c2)) THEN ((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c3)))OR('-917824902')))AND(vt1.c0)) END);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT * FROM vt1 WHERE (((((vt1.c3) ISNULL))AND(((vt1.c2) NOT BETWEEN (vt1.c3) AND (vt1.c2))))) ORDER BY ((vt1.c2)-(vt1.c3)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3) ISNULL))AND(((vt1.c2) NOT BETWEEN (vt1.c3) AND (vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2)-(vt1.c3)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c3) ISNULL))AND(((vt1.c2) NOT BETWEEN (vt1.c3) AND (vt1.c2))))) ORDER BY ((vt1.c2)-(vt1.c3)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c3) ISNULL))AND(((vt1.c2) NOT BETWEEN (vt1.c3) AND (vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2)-(vt1.c3)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c3) ISNULL))AND(((vt1.c2) NOT BETWEEN (vt1.c3) AND (vt1.c2))))) ORDER BY ((vt1.c2)-(vt1.c3)) COLLATE RTRIM COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt1 WHERE (PRINTF((NOT (vt1.c0)))) ORDER BY CAST((~ (NULL)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (NULL)) AS REAL) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (PRINTF((NOT (vt1.c0)))) ORDER BY CAST((~ (NULL)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF((NOT (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (NULL)) AS REAL) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (PRINTF((NOT (vt1.c0)))) ORDER BY CAST((~ (NULL)) AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))==((vt1.c2)))) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND (((vt1.c0)<(vt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((vt1.c2)))) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND (((vt1.c0)<(vt1.c3))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))==((vt1.c2)))) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND (((vt1.c0)<(vt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((vt1.c2)))) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND (((vt1.c0)<(vt1.c3))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))==((vt1.c2)))) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt1.c0 END) AND (((vt1.c0)<(vt1.c3)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((NOT (vt1.c1))) NOT NULL)) ORDER BY (((((x'') BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), (vt1.c2 IN ()), rt0.c0, ((rt0.c0) BETWEEN (0.2817615245709093) AND (vt1.c0))))>=((x'f5be', (rt0.c1 IN ()), (~ (vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((259894177))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((x'') BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), (vt1.c2 IN ()), rt0.c0, ((rt0.c0) BETWEEN (0.2817615245709093) AND (vt1.c0))))>=((x'f5be', (rt0.c1 IN ()), (~ (vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((259894177))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((NOT (vt1.c1))) NOT NULL)) ORDER BY (((((x'') BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), (vt1.c2 IN ()), rt0.c0, ((rt0.c0) BETWEEN (0.2817615245709093) AND (vt1.c0))))>=((x'f5be', (rt0.c1 IN ()), (~ (vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((259894177))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((x'') BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), (vt1.c2 IN ()), rt0.c0, ((rt0.c0) BETWEEN (0.2817615245709093) AND (vt1.c0))))>=((x'f5be', (rt0.c1 IN ()), (~ (vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((259894177))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((NOT (vt1.c1))) NOT NULL)) ORDER BY (((((x'') BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c2 AS BLOB), (vt1.c2 IN ()), rt0.c0, ((rt0.c0) BETWEEN (0.2817615245709093) AND (vt1.c0))))>=((x'f5be', (rt0.c1 IN ()), (~ (vt1.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((259894177))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c3, vt1.c3, vt1.c2)) BETWEEN ((((vt1.c3) IS TRUE), ((((vt1.c3)OR(vt1.c2)))AND(vt1.c0)), STRFTIME(vt1.c3, vt1.c3, vt1.c2, vt1.c3, NULL, vt1.c3, vt1.c3))) AND ((json_patch(vt1.c2, x''), ((vt1.c3)<=(vt1.c1)), (- (vt1.c3)))))) ORDER BY vt1.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c3, vt1.c3, vt1.c2)) BETWEEN ((((vt1.c3) IS TRUE), ((((vt1.c3)OR(vt1.c2)))AND(vt1.c0)), STRFTIME(vt1.c3, vt1.c3, vt1.c2, vt1.c3, NULL, vt1.c3, vt1.c3))) AND ((json_patch(vt1.c2, x''), ((vt1.c3)<=(vt1.c1)), (- (vt1.c3)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c3 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c3, vt1.c3, vt1.c2)) BETWEEN ((((vt1.c3) IS TRUE), ((((vt1.c3)OR(vt1.c2)))AND(vt1.c0)), STRFTIME(vt1.c3, vt1.c3, vt1.c2, vt1.c3, NULL, vt1.c3, vt1.c3))) AND ((json_patch(vt1.c2, x''), ((vt1.c3)<=(vt1.c1)), (- (vt1.c3)))))) ORDER BY vt1.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c3, vt1.c3, vt1.c2)) BETWEEN ((((vt1.c3) IS TRUE), ((((vt1.c3)OR(vt1.c2)))AND(vt1.c0)), STRFTIME(vt1.c3, vt1.c3, vt1.c2, vt1.c3, NULL, vt1.c3, vt1.c3))) AND ((json_patch(vt1.c2, x''), ((vt1.c3)<=(vt1.c1)), (- (vt1.c3)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c3 ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((vt1.c3 IN (vt1.c1)) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3 IN (vt1.c1)) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((vt1.c3 IN (vt1.c1)) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3 IN (vt1.c1)) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((vt1.c3 IN (vt1.c1)) IN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((LOWER(DISTINCT vt1.c0))))) ORDER BY '-1820229893', ((vt1.c3 IN ()) IN ()) DESC  NULLS LAST, ((((TRIM(vt1.c0))OR(LOWER(0xffffffff9098e4f7))))OR(((vt1.c3)||(vt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((LOWER(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY '-1820229893', ((vt1.c3 IN ()) IN ()) DESC  NULLS LAST, ((((TRIM(vt1.c0))OR(LOWER(0Xffffffff9098e4f7))))OR(((vt1.c3)||(vt1.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((LOWER(DISTINCT vt1.c0))))) ORDER BY '-1820229893', ((vt1.c3 IN ()) IN ()) DESC  NULLS LAST, ((((TRIM(vt1.c0))OR(LOWER(0xffffffff9098e4f7))))OR(((vt1.c3)||(vt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((LOWER(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY '-1820229893', ((vt1.c3 IN ()) IN ()) DESC  NULLS LAST, ((((TRIM(vt1.c0))OR(LOWER(0Xffffffff9098e4f7))))OR(((vt1.c3)||(vt1.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) BETWEEN ((vt1.c2)) AND ((LOWER(DISTINCT vt1.c0))))) ORDER BY '-1820229893', ((vt1.c3 IN ()) IN ()) DESC  NULLS LAST, ((((TRIM(vt1.c0))OR(LOWER(0xffffffff9098e4f7))))OR(((vt1.c3)||(vt1.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN vt1.c2 COLLATE BINARY THEN CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (((((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))AND(((rt0.c0)<=(vt1.c3)))))AND(((vt1.c0)==(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c2 COLLATE BINARY THEN CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))AND(((rt0.c0)<=(vt1.c3)))))AND(((vt1.c0)==(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN vt1.c2 COLLATE BINARY THEN CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (((((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))AND(((rt0.c0)<=(vt1.c3)))))AND(((vt1.c0)==(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c2 COLLATE BINARY THEN CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))AND(((rt0.c0)<=(vt1.c3)))))AND(((vt1.c0)==(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN vt1.c2 COLLATE BINARY THEN CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END END) ORDER BY (((((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))AND(((rt0.c0)<=(vt1.c3)))))AND(((vt1.c0)==(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('-109469418');
SELECT SUM(count) FROM (SELECT ALL (('-109469418') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('-109469418');
SELECT SUM(count) FROM (SELECT ALL (('-109469418') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('-109469418');
SELECT ALL * FROM vt1 WHERE (LIKELY(0.9570721705114006) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LIKELY(0.9570721705114006) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELY(0.9570721705114006) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LIKELY(0.9570721705114006) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELY(0.9570721705114006) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c1)));
SELECT * FROM rt0, vt1 WHERE ((- (LIKELIHOOD(DISTINCT rt0.c0, 0.41256020442181596))));
SELECT SUM(count) FROM (SELECT (((- (LIKELIHOOD(DISTINCT rt0.c0, 0.41256020442181596)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((- (LIKELIHOOD(DISTINCT rt0.c0, 0.41256020442181596))));
SELECT SUM(count) FROM (SELECT (((- (LIKELIHOOD(DISTINCT rt0.c0, 0.41256020442181596)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((- (LIKELIHOOD(DISTINCT rt0.c0, 0.41256020442181596))));
SELECT * FROM vt1 WHERE ((((('1945990380')IS NOT(NULL)))<<((vt1.c0 IN (vt1.c0, vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((('1945990380')IS NOT(NULL)))<<((vt1.c0 IN (vt1.c0, vt1.c3))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((('1945990380')IS NOT(NULL)))<<((vt1.c0 IN (vt1.c0, vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((('1945990380')IS NOT(NULL)))<<((vt1.c0 IN (vt1.c0, vt1.c3))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((('1945990380')IS NOT(NULL)))<<((vt1.c0 IN (vt1.c0, vt1.c3)))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2)) BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2)) BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c2)) BETWEEN (((rt0.c2 IN (rt0.c0)))) AND ((rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(ABS(DISTINCT vt1.c0) AS TEXT)) ORDER BY ((rt0.c0) BETWEEN (vt1.c3) AND (-2.59285934E8)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT vt1.c0) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0) BETWEEN (vt1.c3) AND (-2.59285934E8)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(ABS(DISTINCT vt1.c0) AS TEXT)) ORDER BY ((rt0.c0) BETWEEN (vt1.c3) AND (-2.59285934E8)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT vt1.c0) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0) BETWEEN (vt1.c3) AND (-2.59285934E8)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(ABS(DISTINCT vt1.c0) AS TEXT)) ORDER BY ((rt0.c0) BETWEEN (vt1.c3) AND (-2.59285934E8)) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, vt1 WHERE (0X697d1e84);
SELECT SUM(count) FROM (SELECT ((0x697d1e84) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (0X697d1e84);
SELECT SUM(count) FROM (SELECT ((0x697d1e84) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (0X697d1e84);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE), ((((rt0.c2)OR((- (rt0.c1)))))AND((rt0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE), ((((rt0.c2)OR((- (rt0.c1)))))AND((rt0.c2 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE), ((((rt0.c2)OR((- (rt0.c1)))))AND((rt0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT NULL)) IS TRUE), ((((rt0.c2)OR((- (rt0.c1)))))AND((rt0.c2 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2)!=(vt1.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)<>(vt1.c3)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2)!=(vt1.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)<>(vt1.c3)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2)!=(vt1.c3)) AS REAL));
SELECT ALL * FROM vt1, rt0 WHERE ((vt1.c3 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c3 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((vt1.c3 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c3 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((vt1.c3 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c3)-(vt1.c2))) NOT BETWEEN (NULLIF(DISTINCT rt0.c2, rt0.c2)) AND (0.5640898758709724))) ORDER BY (CASE WHEN vt1.c0 THEN rt0.c1 END IN ()) ASC, (((vt1.c3 IN (vt1.c3))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c3)-(vt1.c2))) NOT BETWEEN (NULLIF(DISTINCT rt0.c2, rt0.c2)) AND (0.5640898758709724))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE WHEN vt1.c0 THEN rt0.c1 END IN ()) ASC, (((vt1.c3 IN (vt1.c3))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c3)-(vt1.c2))) NOT BETWEEN (NULLIF(DISTINCT rt0.c2, rt0.c2)) AND (0.5640898758709724))) ORDER BY (CASE WHEN vt1.c0 THEN rt0.c1 END IN ()) ASC, (((vt1.c3 IN (vt1.c3))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c3)-(vt1.c2))) NOT BETWEEN (NULLIF(DISTINCT rt0.c2, rt0.c2)) AND (0.5640898758709724))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE WHEN vt1.c0 THEN rt0.c1 END IN ()) ASC, (((vt1.c3 IN (vt1.c3))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c3)-(vt1.c2))) NOT BETWEEN (NULLIF(DISTINCT rt0.c2, rt0.c2)) AND (0.5640898758709724))) ORDER BY (CASE WHEN vt1.c0 THEN rt0.c1 END IN ()) ASC, (((vt1.c3 IN (vt1.c3))) NOTNULL)  NULLS LAST;
SELECT * FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt1 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY '', IFNULL(DISTINCT (vt1.c0 IN ()), CAST(rt0.c2 AS BLOB)), CAST('862056729' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY '', IFNULL(DISTINCT (vt1.c0 IN ()), CAST(rt0.c2 AS BLOB)), CAST('862056729' AS NUMERIC) ASC);
SELECT * FROM rt0, vt1 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY '', IFNULL(DISTINCT (vt1.c0 IN ()), CAST(rt0.c2 AS BLOB)), CAST('862056729' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY '', IFNULL(DISTINCT (vt1.c0 IN ()), CAST(rt0.c2 AS BLOB)), CAST('862056729' AS NUMERIC) ASC);
SELECT * FROM rt0, vt1 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY '', IFNULL(DISTINCT (vt1.c0 IN ()), CAST(rt0.c2 AS BLOB)), CAST('862056729' AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((0.26607540077966696 IN ()))<>(((((0x513940e9)AND(rt0.c2)))AND(vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((0.26607540077966696 IN ()))<>(((((0X513940e9)AND(rt0.c2)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((0.26607540077966696 IN ()))<>(((((0x513940e9)AND(rt0.c2)))AND(vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((0.26607540077966696 IN ()))<>(((((0X513940e9)AND(rt0.c2)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((0.26607540077966696 IN ()))<>(((((0x513940e9)AND(rt0.c2)))AND(vt1.c2)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON LIKELY((+ (vt1.c0))) WHERE ((+ ((((vt1.c3))>=((rt0.c0)))))) ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c0)IS(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c3))>=((rt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON LIKELY((+ (vt1.c0))) ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c0)IS(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON LIKELY((+ (vt1.c0))) WHERE ((+ ((((vt1.c3))>=((rt0.c0)))))) ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c0)IS(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c3))>=((rt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON LIKELY((+ (vt1.c0))) ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c0)IS(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON LIKELY((+ (vt1.c0))) WHERE ((+ ((((vt1.c3))>=((rt0.c0)))))) ORDER BY CASE WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c0)IS(rt0.c2)) END;
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c1 COLLATE NOCASE)OR(((((vt1.c3)OR(vt1.c2)))AND(vt1.c3))))) ORDER BY 0.643183763195662 ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE)OR(((((vt1.c3)OR(vt1.c2)))AND(vt1.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0.643183763195662 ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c1 COLLATE NOCASE)OR(((((vt1.c3)OR(vt1.c2)))AND(vt1.c3))))) ORDER BY 0.643183763195662 ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE)OR(((((vt1.c3)OR(vt1.c2)))AND(vt1.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0.643183763195662 ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c1 COLLATE NOCASE)OR(((((vt1.c3)OR(vt1.c2)))AND(vt1.c3))))) ORDER BY 0.643183763195662 ASC;
SELECT * FROM rt0, vt1 WHERE ((((vt1.c3) NOT BETWEEN (rt0.c2) AND (vt1.c1)) IN ())) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c3) NOT BETWEEN (rt0.c2) AND (vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 ASC);
SELECT * FROM rt0, vt1 WHERE ((((vt1.c3) NOT BETWEEN (rt0.c2) AND (vt1.c1)) IN ())) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c3) NOT BETWEEN (rt0.c2) AND (vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 ASC);
SELECT * FROM rt0, vt1 WHERE ((((vt1.c3) NOT BETWEEN (rt0.c2) AND (vt1.c1)) IN ())) ORDER BY rt0.c0 ASC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)>=(vt1.c1)) IN ())) ORDER BY ((SQLITE_SOURCE_ID())-(vt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>=(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((SQLITE_SOURCE_ID())-(vt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)>=(vt1.c1)) IN ())) ORDER BY ((SQLITE_SOURCE_ID())-(vt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>=(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((SQLITE_SOURCE_ID())-(vt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)>=(vt1.c1)) IN ())) ORDER BY ((SQLITE_SOURCE_ID())-(vt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (LTRIM(CAST(vt1.c1 AS REAL), CAST(vt1.c1 AS TEXT))) ORDER BY ((CAST(vt1.c3 AS NUMERIC))-(vt1.c0 COLLATE NOCASE)), ((rt0.c1)&(vt1.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(CAST(vt1.c1 AS REAL), CAST(vt1.c1 AS TEXT))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c3 AS NUMERIC))-(vt1.c0 COLLATE NOCASE)), ((rt0.c1)&(vt1.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (LTRIM(CAST(vt1.c1 AS REAL), CAST(vt1.c1 AS TEXT))) ORDER BY ((CAST(vt1.c3 AS NUMERIC))-(vt1.c0 COLLATE NOCASE)), ((rt0.c1)&(vt1.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(CAST(vt1.c1 AS REAL), CAST(vt1.c1 AS TEXT))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c3 AS NUMERIC))-(vt1.c0 COLLATE NOCASE)), ((rt0.c1)&(vt1.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (LTRIM(CAST(vt1.c1 AS REAL), CAST(vt1.c1 AS TEXT))) ORDER BY ((CAST(vt1.c3 AS NUMERIC))-(vt1.c0 COLLATE NOCASE)), ((rt0.c1)&(vt1.c0 COLLATE NOCASE)) DESC;
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))AND(('-1564375923' IN ()))))OR(((vt1.c0)|(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(('-1564375923' IN ()))))OR(((vt1.c0)|(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))AND(('-1564375923' IN ()))))OR(((vt1.c0)|(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(('-1564375923' IN ()))))OR(((vt1.c0)|(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))AND(('-1564375923' IN ()))))OR(((vt1.c0)|(vt1.c1)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c1)))!=((((vt1.c3, vt1.c0, vt1.c2, rt0.c1, vt1.c3)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1, vt1.c1, vt1.c3)) AND ((vt1.c1, vt1.c0, vt1.c0, vt1.c2, vt1.c3))))) WHERE (x'') ORDER BY ((((((vt1.c2)OR(vt1.c1)))AND(vt1.c3)))%(CASE rt0.c0  WHEN vt1.c3 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c1)))!=((((vt1.c3, vt1.c0, vt1.c2, rt0.c1, vt1.c3)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1, vt1.c1, vt1.c3)) AND ((vt1.c1, vt1.c0, vt1.c0, vt1.c2, vt1.c3))))) ORDER BY ((((((vt1.c2)OR(vt1.c1)))AND(vt1.c3)))%(CASE rt0.c0  WHEN vt1.c3 THEN rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c1)))!=((((vt1.c3, vt1.c0, vt1.c2, rt0.c1, vt1.c3)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1, vt1.c1, vt1.c3)) AND ((vt1.c1, vt1.c0, vt1.c0, vt1.c2, vt1.c3))))) WHERE (x'') ORDER BY ((((((vt1.c2)OR(vt1.c1)))AND(vt1.c3)))%(CASE rt0.c0  WHEN vt1.c3 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c1)))!=((((vt1.c3, vt1.c0, vt1.c2, rt0.c1, vt1.c3)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1, vt1.c1, vt1.c3)) AND ((vt1.c1, vt1.c0, vt1.c0, vt1.c2, vt1.c3))))) ORDER BY ((((((vt1.c2)OR(vt1.c1)))AND(vt1.c3)))%(CASE rt0.c0  WHEN vt1.c3 THEN rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (((~ (rt0.c1)))!=((((vt1.c3, vt1.c0, vt1.c2, rt0.c1, vt1.c3)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1, vt1.c1, vt1.c3)) AND ((vt1.c1, vt1.c0, vt1.c0, vt1.c2, vt1.c3))))) WHERE (x'') ORDER BY ((((((vt1.c2)OR(vt1.c1)))AND(vt1.c3)))%(CASE rt0.c0  WHEN vt1.c3 THEN rt0.c2 END)) ASC;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2) NOTNULL) IN ())) ORDER BY ((NULL)AND(CAST(rt0.c0 AS BLOB))), (((rt0.c1, vt1.c1, '1094950004', vt1.c3, vt1.c3)) BETWEEN ((0.9566770053909981, ((vt1.c3)<=(rt0.c1)), (vt1.c3 IN ()), (vt1.c3 IN ()), CAST(rt0.c1 AS INTEGER))) AND ((((vt1.c2)|(vt1.c0)), (vt1.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1)), (~ (vt1.c3)), ((vt1.c0)+(vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NULL)AND(CAST(rt0.c0 AS BLOB))), (((rt0.c1, vt1.c1, '1094950004', vt1.c3, vt1.c3)) BETWEEN ((0.9566770053909981, ((vt1.c3)<=(rt0.c1)), (vt1.c3 IN ()), (vt1.c3 IN ()), CAST(rt0.c1 AS INTEGER))) AND ((((vt1.c2)|(vt1.c0)), (vt1.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1)), (~ (vt1.c3)), ((vt1.c0)+(vt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2) NOTNULL) IN ())) ORDER BY ((NULL)AND(CAST(rt0.c0 AS BLOB))), (((rt0.c1, vt1.c1, '1094950004', vt1.c3, vt1.c3)) BETWEEN ((0.9566770053909981, ((vt1.c3)<=(rt0.c1)), (vt1.c3 IN ()), (vt1.c3 IN ()), CAST(rt0.c1 AS INTEGER))) AND ((((vt1.c2)|(vt1.c0)), (vt1.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1)), (~ (vt1.c3)), ((vt1.c0)+(vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NULL)AND(CAST(rt0.c0 AS BLOB))), (((rt0.c1, vt1.c1, '1094950004', vt1.c3, vt1.c3)) BETWEEN ((0.9566770053909981, ((vt1.c3)<=(rt0.c1)), (vt1.c3 IN ()), (vt1.c3 IN ()), CAST(rt0.c1 AS INTEGER))) AND ((((vt1.c2)|(vt1.c0)), (vt1.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1)), (~ (vt1.c3)), ((vt1.c0)+(vt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2) NOTNULL) IN ())) ORDER BY ((NULL)AND(CAST(rt0.c0 AS BLOB))), (((rt0.c1, vt1.c1, '1094950004', vt1.c3, vt1.c3)) BETWEEN ((0.9566770053909981, ((vt1.c3)<=(rt0.c1)), (vt1.c3 IN ()), (vt1.c3 IN ()), CAST(rt0.c1 AS INTEGER))) AND ((((vt1.c2)|(vt1.c0)), (vt1.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1)), (~ (vt1.c3)), ((vt1.c0)+(vt1.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE rt0.c2  WHEN TRIM(DISTINCT NULL, vt1.c1) THEN rt0.c2 COLLATE BINARY END) ORDER BY NULLIF((- (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN vt1.c3 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN TRIM(DISTINCT NULL, vt1.c1) THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULLIF((- (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN vt1.c3 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE rt0.c2  WHEN TRIM(DISTINCT NULL, vt1.c1) THEN rt0.c2 COLLATE BINARY END) ORDER BY NULLIF((- (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN vt1.c3 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN TRIM(DISTINCT NULL, vt1.c1) THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULLIF((- (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN vt1.c3 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE rt0.c2  WHEN TRIM(DISTINCT NULL, vt1.c1) THEN rt0.c2 COLLATE BINARY END) ORDER BY NULLIF((- (rt0.c2)), CASE rt0.c2  WHEN vt1.c0 THEN vt1.c3 END) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c2 IN ()))IS NOT((- (vt1.c2))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c3 AS INTEGER) ELSE ((rt0.c0)>>(rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))IS NOT((- (vt1.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c3 AS INTEGER) ELSE ((rt0.c0)>>(rt0.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c2 IN ()))IS NOT((- (vt1.c2))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c3 AS INTEGER) ELSE ((rt0.c0)>>(rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))IS NOT((- (vt1.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c3 AS INTEGER) ELSE ((rt0.c0)>>(rt0.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c2 IN ()))IS NOT((- (vt1.c2))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c3 AS INTEGER) ELSE ((rt0.c0)>>(rt0.c1)) END ASC  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c1)AND(vt1.c2))) BETWEEN (CASE WHEN 0Xfffffffffa991fb1 THEN vt1.c2 ELSE NULL END) AND (vt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(vt1.c2))) BETWEEN (CASE WHEN 0xfffffffffa991fb1 THEN vt1.c2 ELSE NULL END) AND (vt1.c3))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c1)AND(vt1.c2))) BETWEEN (CASE WHEN 0Xfffffffffa991fb1 THEN vt1.c2 ELSE NULL END) AND (vt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(vt1.c2))) BETWEEN (CASE WHEN 0xfffffffffa991fb1 THEN vt1.c2 ELSE NULL END) AND (vt1.c3))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c1)AND(vt1.c2))) BETWEEN (CASE WHEN 0Xfffffffffa991fb1 THEN vt1.c2 ELSE NULL END) AND (vt1.c3)));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1))) NOTNULL)) ORDER BY '-1897473461'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY '-1897473461'  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1))) NOTNULL)) ORDER BY '-1897473461'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY '-1897473461'  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1))) NOTNULL)) ORDER BY '-1897473461'  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c1 AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c1 AS INTEGER)))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(COALESCE(rt0.c0, rt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt0.c0, rt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(COALESCE(rt0.c0, rt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(rt0.c0, rt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(COALESCE(rt0.c0, rt0.c1) AS INTEGER));
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)IS NOT(vt1.c0)) IN (vt1.c0, CASE WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END))) ORDER BY CAST(CAST(vt1.c3 AS TEXT) AS BLOB), (((((vt1.c1, vt1.c2, vt1.c1))==((vt1.c3, NULL, vt1.c0)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)IS NOT(vt1.c0)) IN (vt1.c0, CASE WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c3 AS TEXT) AS BLOB), (((((vt1.c1, vt1.c2, vt1.c1))=((vt1.c3, NULL, vt1.c0)))) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)IS NOT(vt1.c0)) IN (vt1.c0, CASE WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END))) ORDER BY CAST(CAST(vt1.c3 AS TEXT) AS BLOB), (((((vt1.c1, vt1.c2, vt1.c1))==((vt1.c3, NULL, vt1.c0)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)IS NOT(vt1.c0)) IN (vt1.c0, CASE WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c3 AS TEXT) AS BLOB), (((((vt1.c1, vt1.c2, vt1.c1))=((vt1.c3, NULL, vt1.c0)))) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)IS NOT(vt1.c0)) IN (vt1.c0, CASE WHEN vt1.c3 THEN vt1.c1 ELSE vt1.c3 END))) ORDER BY CAST(CAST(vt1.c3 AS TEXT) AS BLOB), (((((vt1.c1, vt1.c2, vt1.c1))==((vt1.c3, NULL, vt1.c0)))) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((load_extension(rt0.c0))||((rt0.c1 IN (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((load_extension(rt0.c0))||((rt0.c1 IN (rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((load_extension(rt0.c0))||((rt0.c1 IN (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((load_extension(rt0.c0))||((rt0.c1 IN (rt0.c1))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((+ (vt1.c3)))>=((+ (vt1.c2))))) ORDER BY (((- (rt0.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c3)))>=((+ (vt1.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((- (rt0.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c3 END))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((+ (vt1.c3)))>=((+ (vt1.c2))))) ORDER BY (((- (rt0.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c3 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c3)))>=((+ (vt1.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((- (rt0.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c3 END))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((+ (vt1.c3)))>=((+ (vt1.c2))))) ORDER BY (((- (rt0.c1))) NOT BETWEEN ((~ (vt1.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN vt1.c3 THEN rt0.c1 ELSE vt1.c3 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c3)GLOB(((vt1.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c3)GLOB(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c3)GLOB(((vt1.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c3)GLOB(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c3)GLOB(((vt1.c0)<<(vt1.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY (((((((((((vt1.c3))<>((rt0.c2))))AND(((vt1.c0) IS FALSE))))OR(((rt0.c1)AND(rt0.c1)))))OR((- (vt1.c3)))))OR(CASE rt0.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((((vt1.c3))<>((rt0.c2))))AND(((vt1.c0) IS FALSE))))OR(((rt0.c1)AND(rt0.c1)))))OR((- (vt1.c3)))))OR(CASE rt0.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c2 END)) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY (((((((((((vt1.c3))<>((rt0.c2))))AND(((vt1.c0) IS FALSE))))OR(((rt0.c1)AND(rt0.c1)))))OR((- (vt1.c3)))))OR(CASE rt0.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((((vt1.c3))<>((rt0.c2))))AND(((vt1.c0) IS FALSE))))OR(((rt0.c1)AND(rt0.c1)))))OR((- (vt1.c3)))))OR(CASE rt0.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c2 END)) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY (((((((((((vt1.c3))<>((rt0.c2))))AND(((vt1.c0) IS FALSE))))OR(((rt0.c1)AND(rt0.c1)))))OR((- (vt1.c3)))))OR(CASE rt0.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c2 END)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY vt1.c2 ASC  NULLS LAST, ((((((((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))OR((+ (vt1.c3)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)>=(vt1.c0)))))OR(((((rt0.c0)OR(vt1.c2)))AND('榀(*&d2U')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c2 ASC  NULLS LAST, ((((((((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))OR((+ (vt1.c3)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)>=(vt1.c0)))))OR(((((rt0.c0)OR(vt1.c2)))AND('榀(*&d2U')))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY vt1.c2 ASC  NULLS LAST, ((((((((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))OR((+ (vt1.c3)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)>=(vt1.c0)))))OR(((((rt0.c0)OR(vt1.c2)))AND('榀(*&d2U')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c2 ASC  NULLS LAST, ((((((((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))OR((+ (vt1.c3)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)>=(vt1.c0)))))OR(((((rt0.c0)OR(vt1.c2)))AND('榀(*&d2U')))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c0) ORDER BY vt1.c2 ASC  NULLS LAST, ((((((((((vt1.c3) BETWEEN (vt1.c0) AND (vt1.c0)))OR((+ (vt1.c3)))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt0.c2)>=(vt1.c0)))))OR(((((rt0.c0)OR(vt1.c2)))AND('榀(*&d2U')))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(-1.072482008E9 AS INTEGER) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(-1.072482008E9 AS INTEGER) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(-1.072482008E9 AS INTEGER) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(-1.072482008E9 AS INTEGER) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(-1.072482008E9 AS INTEGER) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((((vt1.c2)%(vt1.c3)))) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)) NOT BETWEEN ((((vt1.c2)%(vt1.c3)))) AND ((x'')))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((((vt1.c2)%(vt1.c3)))) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)) NOT BETWEEN ((((vt1.c2)%(vt1.c3)))) AND ((x'')))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((((vt1.c2)%(vt1.c3)))) AND ((x''))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (0.966840792554963);
SELECT SUM(count) FROM (SELECT ((0.966840792554963) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (0.966840792554963);
SELECT SUM(count) FROM (SELECT ((0.966840792554963) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (0.966840792554963);
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c2)AND(vt1.c3)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)AND(vt1.c3)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c2)AND(vt1.c3)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)AND(vt1.c3)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((vt1.c2)AND(vt1.c3)))AND(rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY UNICODE((0.4788641073488096 IN ())), CAST(LIKELY(vt1.c2) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY UNICODE((0.4788641073488096 IN ())), CAST(LIKELY(vt1.c2) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY UNICODE((0.4788641073488096 IN ())), CAST(LIKELY(vt1.c2) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY UNICODE((0.4788641073488096 IN ())), CAST(LIKELY(vt1.c2) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY UNICODE((0.4788641073488096 IN ())), CAST(LIKELY(vt1.c2) AS NUMERIC);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END) ISNULL));
SELECT * FROM rt0, vt1 WHERE (CAST(((vt1.c1) IS FALSE) AS TEXT)) ORDER BY ((((((((rt0.c0)AND(((vt1.c2) NOT NULL))))OR(((vt1.c2)!=(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3)))))AND(((rt0.c2)=(vt1.c2)))), ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))IS NOT(CAST(NULL AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((rt0.c0)AND(((vt1.c2) NOT NULL))))OR(((vt1.c2)<>(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3)))))AND(((rt0.c2)=(vt1.c2)))), ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))IS NOT(CAST(NULL AS TEXT))));
SELECT * FROM rt0, vt1 WHERE (CAST(((vt1.c1) IS FALSE) AS TEXT)) ORDER BY ((((((((rt0.c0)AND(((vt1.c2) NOT NULL))))OR(((vt1.c2)!=(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3)))))AND(((rt0.c2)=(vt1.c2)))), ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))IS NOT(CAST(NULL AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((rt0.c0)AND(((vt1.c2) NOT NULL))))OR(((vt1.c2)<>(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3)))))AND(((rt0.c2)=(vt1.c2)))), ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))IS NOT(CAST(NULL AS TEXT))));
SELECT * FROM rt0, vt1 WHERE (CAST(((vt1.c1) IS FALSE) AS TEXT)) ORDER BY ((((((((rt0.c0)AND(((vt1.c2) NOT NULL))))OR(((vt1.c2)!=(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (vt1.c2) AND (vt1.c3)))))AND(((rt0.c2)=(vt1.c2)))), ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))IS NOT(CAST(NULL AS TEXT)));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((')⿗[')OR((vt1.c3 IN ()))) WHERE ((NOT (((rt0.c2)<=(vt1.c1))))) ORDER BY CAST((- (' Z3␶ ')) AS REAL);
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)<=(vt1.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((')⿗[')OR((vt1.c3 IN ()))) ORDER BY CAST((- (' Z3␶ ')) AS REAL));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((')⿗[')OR((vt1.c3 IN ()))) WHERE ((NOT (((rt0.c2)<=(vt1.c1))))) ORDER BY CAST((- (' Z3␶ ')) AS REAL);
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)<=(vt1.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((')⿗[')OR((vt1.c3 IN ()))) ORDER BY CAST((- (' Z3␶ ')) AS REAL));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((')⿗[')OR((vt1.c3 IN ()))) WHERE ((NOT (((rt0.c2)<=(vt1.c1))))) ORDER BY CAST((- (' Z3␶ ')) AS REAL);
SELECT * FROM vt1 WHERE (CAST(vt1.c3 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c3 AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c3 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c3 AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c3 AS REAL));
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c1)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1)!=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c1)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1)!=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c1)!=(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c2)IS(rt0.c0)) THEN (((rt0.c1))<((vt1.c3))) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) ELSE (rt0.c1 IN (rt0.c1)) END) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c2)IS(rt0.c0)) THEN (((rt0.c1))<((vt1.c3))) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) ELSE (rt0.c1 IN (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c2)IS(rt0.c0)) THEN (((rt0.c1))<((vt1.c3))) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) ELSE (rt0.c1 IN (rt0.c1)) END) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c2)IS(rt0.c0)) THEN (((rt0.c1))<((vt1.c3))) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) ELSE (rt0.c1 IN (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c2)IS(rt0.c0)) THEN (((rt0.c1))<((vt1.c3))) WHEN CASE WHEN vt1.c2 THEN vt1.c3 ELSE vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c0) AND (rt0.c2)) WHEN rt0.c0 THEN (rt0.c2 IN ()) ELSE (rt0.c1 IN (rt0.c1)) END) ORDER BY vt1.c0 ASC;
SELECT * FROM rt0 WHERE (((((((rt0.c2)>=(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) IS FALSE)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>=(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c2)>=(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) IS FALSE)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>=(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c2)>=(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) IS FALSE)))) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE (CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c1)IS('')))) AND ((((((((((rt0.c0)OR(vt1.c1)))AND(rt0.c0)))OR(vt1.c0)))AND(vt1.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c1)IS('')))) AND ((((((((((rt0.c0)OR(vt1.c1)))AND(rt0.c0)))OR(vt1.c0)))AND(vt1.c3))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE (CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c1)IS('')))) AND ((((((((((rt0.c0)OR(vt1.c1)))AND(rt0.c0)))OR(vt1.c0)))AND(vt1.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c1)IS('')))) AND ((((((((((rt0.c0)OR(vt1.c1)))AND(rt0.c0)))OR(vt1.c0)))AND(vt1.c3))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE (CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c1)IS('')))) AND ((((((((((rt0.c0)OR(vt1.c1)))AND(rt0.c0)))OR(vt1.c0)))AND(vt1.c3))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY ((vt1.c1 COLLATE BINARY)*(((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c1 COLLATE BINARY)*(((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c3)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY ((vt1.c1 COLLATE BINARY)*(((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c1 COLLATE BINARY)*(((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c3)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY ((vt1.c1 COLLATE BINARY)*(((rt0.c0) BETWEEN (vt1.c2) AND (vt1.c3)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2, vt1.c3, rt0.c0)) BETWEEN ((x'', ((rt0.c1)<>(rt0.c0)), (NOT (x'')))) AND ((((vt1.c2)%(rt0.c1)), ((vt1.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, vt1.c3, rt0.c0)) BETWEEN ((x'', ((rt0.c1)!=(rt0.c0)), (NOT (x'')))) AND ((((vt1.c2)%(rt0.c1)), ((vt1.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), NULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2, vt1.c3, rt0.c0)) BETWEEN ((x'', ((rt0.c1)<>(rt0.c0)), (NOT (x'')))) AND ((((vt1.c2)%(rt0.c1)), ((vt1.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, vt1.c3, rt0.c0)) BETWEEN ((x'', ((rt0.c1)!=(rt0.c0)), (NOT (x'')))) AND ((((vt1.c2)%(rt0.c1)), ((vt1.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), NULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2, vt1.c3, rt0.c0)) BETWEEN ((x'', ((rt0.c1)<>(rt0.c0)), (NOT (x'')))) AND ((((vt1.c2)%(rt0.c1)), ((vt1.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)), NULL))));
SELECT * FROM rt0 INNER JOIN vt1 ON ((((vt1.c0 IN ())))<((CASE WHEN vt1.c1 THEN vt1.c0 END))) WHERE ((((((((((((((+ (vt1.c3)))AND((((vt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(rt0.c1)))AND(TYPEOF(DISTINCT vt1.c3))))OR(CAST(rt0.c2 AS BLOB))))AND(vt1.c2)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((+ (vt1.c3)))AND((((vt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(rt0.c1)))AND(TYPEOF(DISTINCT vt1.c3))))OR(CAST(rt0.c2 AS BLOB))))AND(vt1.c2)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0 IN ())))<((CASE WHEN vt1.c1 THEN vt1.c0 END))));
SELECT * FROM rt0 INNER JOIN vt1 ON ((((vt1.c0 IN ())))<((CASE WHEN vt1.c1 THEN vt1.c0 END))) WHERE ((((((((((((((+ (vt1.c3)))AND((((vt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(rt0.c1)))AND(TYPEOF(DISTINCT vt1.c3))))OR(CAST(rt0.c2 AS BLOB))))AND(vt1.c2)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((+ (vt1.c3)))AND((((vt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(rt0.c1)))AND(TYPEOF(DISTINCT vt1.c3))))OR(CAST(rt0.c2 AS BLOB))))AND(vt1.c2)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0 IN ())))<((CASE WHEN vt1.c1 THEN vt1.c0 END))));
SELECT * FROM rt0 INNER JOIN vt1 ON ((((vt1.c0 IN ())))<((CASE WHEN vt1.c1 THEN vt1.c0 END))) WHERE ((((((((((((((+ (vt1.c3)))AND((((vt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(rt0.c1)))AND(TYPEOF(DISTINCT vt1.c3))))OR(CAST(rt0.c2 AS BLOB))))AND(vt1.c2)))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c1)))));
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1 IN (vt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1 IN (vt1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1 IN (vt1.c1))) IS FALSE));
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)|(rt0.c1)), CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c0)|(rt0.c1)), CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)|(rt0.c1)), CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c0)|(rt0.c1)), CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)|(rt0.c1)), CAST(rt0.c0 AS BLOB)));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=((((x'')) BETWEEN ((rt0.c0)) AND ((0.17352441018357512))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=((((x'')) BETWEEN ((rt0.c0)) AND ((0.17352441018357512)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=((((x'')) BETWEEN ((rt0.c0)) AND ((0.17352441018357512))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=((((x'')) BETWEEN ((rt0.c0)) AND ((0.17352441018357512)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=((((x'')) BETWEEN ((rt0.c0)) AND ((0.17352441018357512))))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0 IN ()))%((((0Xffffffffbc88eebd))<((vt1.c2)))))) ORDER BY CAST(NULL AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))%((((0xffffffffbc88eebd))<((vt1.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(NULL AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0 IN ()))%((((0Xffffffffbc88eebd))<((vt1.c2)))))) ORDER BY CAST(NULL AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))%((((0xffffffffbc88eebd))<((vt1.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(NULL AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0 IN ()))%((((0Xffffffffbc88eebd))<((vt1.c2)))))) ORDER BY CAST(NULL AS BLOB);
SELECT ALL * FROM rt0, vt1 WHERE (((((6.3843311E7 COLLATE BINARY)OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((6.3843311E7 COLLATE BINARY)OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((6.3843311E7 COLLATE BINARY)OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((6.3843311E7 COLLATE BINARY)OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((6.3843311E7 COLLATE BINARY)OR(rt0.c0 COLLATE RTRIM)))AND(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c1) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOTNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c1) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOTNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c1) NOTNULL);
SELECT COUNT(*) FROM vt1 WHERE ('-1324710834');
SELECT SUM(count) FROM (SELECT (('-1324710834') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('-1324710834');
SELECT SUM(count) FROM (SELECT (('-1324710834') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('-1324710834');
SELECT * FROM vt1, rt0 WHERE ((((vt1.c1 IN ())) NOT BETWEEN (LIKELY(vt1.c2)) AND (((vt1.c0) NOTNULL)))) ORDER BY (+ ('1874769896')) ASC, '0.9675948756914449' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) NOT BETWEEN (LIKELY(vt1.c2)) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ ('1874769896')) ASC, '0.9675948756914449' DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c1 IN ())) NOT BETWEEN (LIKELY(vt1.c2)) AND (((vt1.c0) NOTNULL)))) ORDER BY (+ ('1874769896')) ASC, '0.9675948756914449' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) NOT BETWEEN (LIKELY(vt1.c2)) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ ('1874769896')) ASC, '0.9675948756914449' DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c1 IN ())) NOT BETWEEN (LIKELY(vt1.c2)) AND (((vt1.c0) NOTNULL)))) ORDER BY (+ ('1874769896')) ASC, '0.9675948756914449' DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE) ORDER BY CASE ((rt0.c1)*(vt1.c0))  WHEN ((vt1.c1) ISNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)) THEN ((((((((0.7515497104545322)AND(vt1.c1)))OR(rt0.c1)))AND(vt1.c2)))AND(rt0.c0)) WHEN ((vt1.c3) IS TRUE) THEN ((vt1.c0)<(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c1)*(vt1.c0))  WHEN ((vt1.c1) ISNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)) THEN ((((((((0.7515497104545322)AND(vt1.c1)))OR(rt0.c1)))AND(vt1.c2)))AND(rt0.c0)) WHEN ((vt1.c3) IS TRUE) THEN ((vt1.c0)<(rt0.c2)) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE) ORDER BY CASE ((rt0.c1)*(vt1.c0))  WHEN ((vt1.c1) ISNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)) THEN ((((((((0.7515497104545322)AND(vt1.c1)))OR(rt0.c1)))AND(vt1.c2)))AND(rt0.c0)) WHEN ((vt1.c3) IS TRUE) THEN ((vt1.c0)<(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c1)*(vt1.c0))  WHEN ((vt1.c1) ISNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)) THEN ((((((((0.7515497104545322)AND(vt1.c1)))OR(rt0.c1)))AND(vt1.c2)))AND(rt0.c0)) WHEN ((vt1.c3) IS TRUE) THEN ((vt1.c0)<(rt0.c2)) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE NOCASE) ORDER BY CASE ((rt0.c1)*(vt1.c0))  WHEN ((vt1.c1) ISNULL) THEN ((vt1.c0) NOTNULL) WHEN ((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)) THEN ((((((((0.7515497104545322)AND(vt1.c1)))OR(rt0.c1)))AND(vt1.c2)))AND(rt0.c0)) WHEN ((vt1.c3) IS TRUE) THEN ((vt1.c0)<(rt0.c2)) END;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((']^!90a') IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((']^!90a') IS FALSE) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((']^!90a') IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((']^!90a') IS FALSE) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((']^!90a') IS FALSE) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c1)>(vt1.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>(vt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c1)>(vt1.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>(vt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c1)>(vt1.c3)) AS NUMERIC));
SELECT ALL * FROM rt0, vt1 WHERE ((vt1.c2 IN ()) COLLATE BINARY) ORDER BY ((vt1.c3)==(vt1.c0 COLLATE BINARY))  NULLS LAST, (((((rt0.c0) ISNULL)))<=((CASE rt0.c2  WHEN vt1.c1 THEN 0.05386211675141095 END))), ((((vt1.c2) NOTNULL)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c3)==(vt1.c0 COLLATE BINARY))  NULLS LAST, (((((rt0.c0) ISNULL)))<=((CASE rt0.c2  WHEN vt1.c1 THEN 0.05386211675141095 END))), ((((vt1.c2) NOTNULL)) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((vt1.c2 IN ()) COLLATE BINARY) ORDER BY ((vt1.c3)==(vt1.c0 COLLATE BINARY))  NULLS LAST, (((((rt0.c0) ISNULL)))<=((CASE rt0.c2  WHEN vt1.c1 THEN 0.05386211675141095 END))), ((((vt1.c2) NOTNULL)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c3)==(vt1.c0 COLLATE BINARY))  NULLS LAST, (((((rt0.c0) ISNULL)))<=((CASE rt0.c2  WHEN vt1.c1 THEN 0.05386211675141095 END))), ((((vt1.c2) NOTNULL)) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((vt1.c2 IN ()) COLLATE BINARY) ORDER BY ((vt1.c3)==(vt1.c0 COLLATE BINARY))  NULLS LAST, (((((rt0.c0) ISNULL)))<=((CASE rt0.c2  WHEN vt1.c1 THEN 0.05386211675141095 END))), ((((vt1.c2) NOTNULL)) ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c3);
SELECT SUM(count) FROM (SELECT ((vt1.c3) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c3);
SELECT SUM(count) FROM (SELECT ((vt1.c3) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c3);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c0, rt0.c1, '-1310163986'))>=((vt1.c3, vt1.c2, vt1.c1)))) IS FALSE)) ORDER BY IFNULL(DISTINCT ((vt1.c2)!=(vt1.c0)), (((vt1.c2)) NOT BETWEEN (('-1935006206')) AND ((vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c1, '-1310163986'))>=((vt1.c3, vt1.c2, vt1.c1)))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY IFNULL(DISTINCT ((vt1.c2)!=(vt1.c0)), (((vt1.c2)) NOT BETWEEN (('-1935006206')) AND ((vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c0, rt0.c1, '-1310163986'))>=((vt1.c3, vt1.c2, vt1.c1)))) IS FALSE)) ORDER BY IFNULL(DISTINCT ((vt1.c2)!=(vt1.c0)), (((vt1.c2)) NOT BETWEEN (('-1935006206')) AND ((vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c1, '-1310163986'))>=((vt1.c3, vt1.c2, vt1.c1)))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY IFNULL(DISTINCT ((vt1.c2)!=(vt1.c0)), (((vt1.c2)) NOT BETWEEN (('-1935006206')) AND ((vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c0, rt0.c1, '-1310163986'))>=((vt1.c3, vt1.c2, vt1.c1)))) IS FALSE)) ORDER BY IFNULL(DISTINCT ((vt1.c2)!=(vt1.c0)), (((vt1.c2)) NOT BETWEEN (('-1935006206')) AND ((vt1.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (((+ (rt0.c0)) IN ())) ORDER BY ((x'f113fbc2')IS NOT(CASE rt0.c0  WHEN vt1.c2 THEN vt1.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((x'f113fbc2')IS NOT(CASE rt0.c0  WHEN vt1.c2 THEN vt1.c0 ELSE rt0.c0 END)));
SELECT * FROM vt1, rt0 WHERE (((+ (rt0.c0)) IN ())) ORDER BY ((x'f113fbc2')IS NOT(CASE rt0.c0  WHEN vt1.c2 THEN vt1.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((x'f113fbc2')IS NOT(CASE rt0.c0  WHEN vt1.c2 THEN vt1.c0 ELSE rt0.c0 END)));
SELECT * FROM vt1, rt0 WHERE (((+ (rt0.c0)) IN ())) ORDER BY ((x'f113fbc2')IS NOT(CASE rt0.c0  WHEN vt1.c2 THEN vt1.c0 ELSE rt0.c0 END));
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((vt1.c0) ISNULL))OR((((rt0.c1))==((rt0.c2))))))AND((rt0.c0 IN (vt1.c1, rt0.c2))))) ORDER BY (((0.0961464866128221) BETWEEN (vt1.c2) AND (vt1.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) ISNULL))OR((((rt0.c1))==((rt0.c2))))))AND((rt0.c0 IN (vt1.c1, rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((0.0961464866128221) BETWEEN (vt1.c2) AND (vt1.c2)) IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((vt1.c0) ISNULL))OR((((rt0.c1))==((rt0.c2))))))AND((rt0.c0 IN (vt1.c1, rt0.c2))))) ORDER BY (((0.0961464866128221) BETWEEN (vt1.c2) AND (vt1.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) ISNULL))OR((((rt0.c1))==((rt0.c2))))))AND((rt0.c0 IN (vt1.c1, rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((0.0961464866128221) BETWEEN (vt1.c2) AND (vt1.c2)) IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((vt1.c0) ISNULL))OR((((rt0.c1))==((rt0.c2))))))AND((rt0.c0 IN (vt1.c1, rt0.c2))))) ORDER BY (((0.0961464866128221) BETWEEN (vt1.c2) AND (vt1.c2)) IN ()) DESC;
SELECT * FROM rt0 WHERE ((((+ (-1.37413229E8))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0)>=(rt0.c1))))) ORDER BY TRIM((rt0.c2 IN ()), rt0.c1);
SELECT SUM(count) FROM (SELECT ALL (((((+ (-1.37413229E8))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM((rt0.c2 IN ()), rt0.c1));
SELECT * FROM rt0 WHERE ((((+ (-1.37413229E8))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0)>=(rt0.c1))))) ORDER BY TRIM((rt0.c2 IN ()), rt0.c1);
SELECT SUM(count) FROM (SELECT ALL (((((+ (-1.37413229E8))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM((rt0.c2 IN ()), rt0.c1));
SELECT * FROM rt0 WHERE ((((+ (-1.37413229E8))) BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0)>=(rt0.c1))))) ORDER BY TRIM((rt0.c2 IN ()), rt0.c1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0)||(vt1.c3)) IN (((rt0.c2)GLOB(vt1.c0)), CAST(vt1.c3 AS TEXT)))) ORDER BY CAST(((rt0.c2)/(vt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)||(vt1.c3)) IN (((rt0.c2)GLOB(vt1.c0)), CAST(vt1.c3 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c2)/(vt1.c1)) AS BLOB));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0)||(vt1.c3)) IN (((rt0.c2)GLOB(vt1.c0)), CAST(vt1.c3 AS TEXT)))) ORDER BY CAST(((rt0.c2)/(vt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)||(vt1.c3)) IN (((rt0.c2)GLOB(vt1.c0)), CAST(vt1.c3 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c2)/(vt1.c1)) AS BLOB));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0)||(vt1.c3)) IN (((rt0.c2)GLOB(vt1.c0)), CAST(vt1.c3 AS TEXT)))) ORDER BY CAST(((rt0.c2)/(vt1.c1)) AS BLOB);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0))>=((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c2)))OR(vt1.c0)))OR(0.4953585640533179))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))>=((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c2)))OR(vt1.c0)))OR(0.4953585640533179)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0))>=((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c2)))OR(vt1.c0)))OR(0.4953585640533179))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))>=((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c2)))OR(vt1.c0)))OR(0.4953585640533179)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0))>=((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c2)))OR(vt1.c0)))OR(0.4953585640533179))))));
SELECT * FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((0.739889305923987)AND(((vt1.c0)AND(vt1.c0)))))AND((((vt1.c0, rt0.c1, vt1.c2, vt1.c3, vt1.c1))<=((rt0.c0, rt0.c0, x'f412', rt0.c0, vt1.c3)))))) ORDER BY (NULL IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.739889305923987)AND(((vt1.c0)AND(vt1.c0)))))AND((((vt1.c0, rt0.c1, vt1.c2, vt1.c3, vt1.c1))<=((rt0.c0, rt0.c0, x'f412', rt0.c0, vt1.c3)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NULL IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((0.739889305923987)AND(((vt1.c0)AND(vt1.c0)))))AND((((vt1.c0, rt0.c1, vt1.c2, vt1.c3, vt1.c1))<=((rt0.c0, rt0.c0, x'f412', rt0.c0, vt1.c3)))))) ORDER BY (NULL IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.739889305923987)AND(((vt1.c0)AND(vt1.c0)))))AND((((vt1.c0, rt0.c1, vt1.c2, vt1.c3, vt1.c1))<=((rt0.c0, rt0.c0, x'f412', rt0.c0, vt1.c3)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NULL IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((0.739889305923987)AND(((vt1.c0)AND(vt1.c0)))))AND((((vt1.c0, rt0.c1, vt1.c2, vt1.c3, vt1.c1))<=((rt0.c0, rt0.c0, x'f412', rt0.c0, vt1.c3)))))) ORDER BY (NULL IN ()) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, x'', NULL)) AND ((rt0.c1, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, x'', NULL)) AND ((rt0.c1, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, x'', NULL)) AND ((rt0.c1, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, x'', NULL)) AND ((rt0.c1, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, x'', NULL)) AND ((rt0.c1, rt0.c1, rt0.c2))))));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)) ORDER BY ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)) ORDER BY ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS BLOB)) ORDER BY ((vt1.c3) BETWEEN (vt1.c3) AND (vt1.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((rt0.c0 COLLATE BINARY)>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY)>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((rt0.c0 COLLATE BINARY)>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY)>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((rt0.c0 COLLATE BINARY)>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE ((('-1643699057')*(CASE vt1.c1  WHEN rt0.c1 THEN vt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((('-1643699057')*(CASE vt1.c1  WHEN rt0.c1 THEN vt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((('-1643699057')*(CASE vt1.c1  WHEN rt0.c1 THEN vt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((('-1643699057')*(CASE vt1.c1  WHEN rt0.c1 THEN vt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((('-1643699057')*(CASE vt1.c1  WHEN rt0.c1 THEN vt1.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c2 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<=((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<=((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<=((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<=((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<=((rt0.c2))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c2))) COLLATE BINARY) ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c2))) COLLATE BINARY) ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c2))) COLLATE BINARY) ORDER BY rt0.c2, CASE WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 WHERE ((- (rt0.c0)) COLLATE BINARY) ORDER BY ((((((((rt0.c0)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1, rt0.c1, 0.84556821874028)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.7575356203274511, '-329519964', rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1, rt0.c1, 0.84556821874028)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.7575356203274511, '-329519964', rt0.c2))))) DESC);
SELECT * FROM rt0 WHERE ((- (rt0.c0)) COLLATE BINARY) ORDER BY ((((((((rt0.c0)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1, rt0.c1, 0.84556821874028)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.7575356203274511, '-329519964', rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1, rt0.c1, 0.84556821874028)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.7575356203274511, '-329519964', rt0.c2))))) DESC);
SELECT * FROM rt0 WHERE ((- (rt0.c0)) COLLATE BINARY) ORDER BY ((((((((rt0.c0)AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))OR((((rt0.c1, rt0.c1, 0.84556821874028)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.7575356203274511, '-329519964', rt0.c2))))) DESC;
SELECT ALL * FROM rt0, vt1 WHERE (((((((((CASE WHEN 0.6550808953652743 THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN NULL ELSE rt0.c2 END)OR(((rt0.c0)IS NOT(rt0.c1)))))AND(((((((((rt0.c1)AND(vt1.c2)))AND(rt0.c0)))AND(vt1.c2)))AND(vt1.c1)))))AND(((vt1.c0) NOT NULL))))OR(x'b0d4')));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN 0.6550808953652743 THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN NULL ELSE rt0.c2 END)OR(((rt0.c0)IS NOT(rt0.c1)))))AND(((((((((rt0.c1)AND(vt1.c2)))AND(rt0.c0)))AND(vt1.c2)))AND(vt1.c1)))))AND(((vt1.c0) NOT NULL))))OR(x'b0d4'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((CASE WHEN 0.6550808953652743 THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN NULL ELSE rt0.c2 END)OR(((rt0.c0)IS NOT(rt0.c1)))))AND(((((((((rt0.c1)AND(vt1.c2)))AND(rt0.c0)))AND(vt1.c2)))AND(vt1.c1)))))AND(((vt1.c0) NOT NULL))))OR(x'b0d4')));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN 0.6550808953652743 THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN NULL ELSE rt0.c2 END)OR(((rt0.c0)IS NOT(rt0.c1)))))AND(((((((((rt0.c1)AND(vt1.c2)))AND(rt0.c0)))AND(vt1.c2)))AND(vt1.c1)))))AND(((vt1.c0) NOT NULL))))OR(x'b0d4'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((CASE WHEN 0.6550808953652743 THEN vt1.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN NULL ELSE rt0.c2 END)OR(((rt0.c0)IS NOT(rt0.c1)))))AND(((((((((rt0.c1)AND(vt1.c2)))AND(rt0.c0)))AND(vt1.c2)))AND(vt1.c1)))))AND(((vt1.c0) NOT NULL))))OR(x'b0d4')));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON CAST(((vt1.c0)OR(rt0.c2)) AS TEXT) WHERE (CAST(MAX(NULL, vt1.c0, rt0.c2, rt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(MAX(NULL, vt1.c0, rt0.c2, rt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(((vt1.c0)OR(rt0.c2)) AS TEXT));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON CAST(((vt1.c0)OR(rt0.c2)) AS TEXT) WHERE (CAST(MAX(NULL, vt1.c0, rt0.c2, rt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(MAX(NULL, vt1.c0, rt0.c2, rt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(((vt1.c0)OR(rt0.c2)) AS TEXT));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON CAST(((vt1.c0)OR(rt0.c2)) AS TEXT) WHERE (CAST(MAX(NULL, vt1.c0, rt0.c2, rt0.c0) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (CASE vt1.c2  WHEN vt1.c0 THEN rt0.c2 END IN ()) WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (CASE vt1.c2  WHEN vt1.c0 THEN rt0.c2 END IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (CASE vt1.c2  WHEN vt1.c0 THEN rt0.c2 END IN ()) WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (CASE vt1.c2  WHEN vt1.c0 THEN rt0.c2 END IN ()));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (CASE vt1.c2  WHEN vt1.c0 THEN rt0.c2 END IN ()) WHERE (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((((vt1.c3)OR(vt1.c1)))AND(vt1.c1)) THEN HEX(DISTINCT vt1.c3) WHEN rt0.c0 THEN CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c2 THEN '1526663220' WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c3 WHEN rt0.c0 THEN vt1.c3 ELSE rt0.c2 END WHEN (vt1.c2 IN ('-86248292')) THEN CAST(vt1.c1 AS TEXT) END WHERE (CASE WHEN json_array_length(vt1.c1, rt0.c2) THEN ((vt1.c1)IS NOT(vt1.c0)) WHEN ((vt1.c2) NOT NULL) THEN CASE vt1.c1  WHEN '0.4354686110851256' THEN vt1.c3 ELSE vt1.c3 END WHEN ((((((((vt1.c0)AND(vt1.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) THEN (x'' IN ()) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN rt0.c1 COLLATE RTRIM WHEN (((rt0.c2, vt1.c2, vt1.c0, rt0.c2, rt0.c2))<((vt1.c1, vt1.c2, -1.606829631E9, vt1.c1, vt1.c2))) THEN ((vt1.c3)<(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_array_length(vt1.c1, rt0.c2) THEN ((vt1.c1)IS NOT(vt1.c0)) WHEN ((vt1.c2) NOT NULL) THEN CASE vt1.c1  WHEN '0.4354686110851256' THEN vt1.c3 ELSE vt1.c3 END WHEN ((((((((vt1.c0)AND(vt1.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) THEN (x'' IN ()) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN rt0.c1 COLLATE RTRIM WHEN (((rt0.c2, vt1.c2, vt1.c0, rt0.c2, rt0.c2))<((vt1.c1, vt1.c2, -1.606829631E9, vt1.c1, vt1.c2))) THEN ((vt1.c3)<(vt1.c0)) END) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((((vt1.c3)OR(vt1.c1)))AND(vt1.c1)) THEN HEX(DISTINCT vt1.c3) WHEN rt0.c0 THEN CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c2 THEN '1526663220' WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c3 WHEN rt0.c0 THEN vt1.c3 ELSE rt0.c2 END WHEN (vt1.c2 IN ('-86248292')) THEN CAST(vt1.c1 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((((vt1.c3)OR(vt1.c1)))AND(vt1.c1)) THEN HEX(DISTINCT vt1.c3) WHEN rt0.c0 THEN CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c2 THEN '1526663220' WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c3 WHEN rt0.c0 THEN vt1.c3 ELSE rt0.c2 END WHEN (vt1.c2 IN ('-86248292')) THEN CAST(vt1.c1 AS TEXT) END WHERE (CASE WHEN json_array_length(vt1.c1, rt0.c2) THEN ((vt1.c1)IS NOT(vt1.c0)) WHEN ((vt1.c2) NOT NULL) THEN CASE vt1.c1  WHEN '0.4354686110851256' THEN vt1.c3 ELSE vt1.c3 END WHEN ((((((((vt1.c0)AND(vt1.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) THEN (x'' IN ()) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN rt0.c1 COLLATE RTRIM WHEN (((rt0.c2, vt1.c2, vt1.c0, rt0.c2, rt0.c2))<((vt1.c1, vt1.c2, -1.606829631E9, vt1.c1, vt1.c2))) THEN ((vt1.c3)<(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_array_length(vt1.c1, rt0.c2) THEN ((vt1.c1)IS NOT(vt1.c0)) WHEN ((vt1.c2) NOT NULL) THEN CASE vt1.c1  WHEN '0.4354686110851256' THEN vt1.c3 ELSE vt1.c3 END WHEN ((((((((vt1.c0)AND(vt1.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) THEN (x'' IN ()) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN rt0.c1 COLLATE RTRIM WHEN (((rt0.c2, vt1.c2, vt1.c0, rt0.c2, rt0.c2))<((vt1.c1, vt1.c2, -1.606829631E9, vt1.c1, vt1.c2))) THEN ((vt1.c3)<(vt1.c0)) END) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE CAST(vt1.c0 AS TEXT)  WHEN ((((vt1.c3)OR(vt1.c1)))AND(vt1.c1)) THEN HEX(DISTINCT vt1.c3) WHEN rt0.c0 THEN CASE WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c2 THEN '1526663220' WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c3 WHEN rt0.c0 THEN vt1.c3 ELSE rt0.c2 END WHEN (vt1.c2 IN ('-86248292')) THEN CAST(vt1.c1 AS TEXT) END);
SELECT COUNT(*) FROM vt1 WHERE ((- ((NOT (x''))))) ORDER BY ((((vt1.c1)OR(((((x'')OR(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c3 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((NOT (x''))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)OR(((((x'')OR(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c3 AS INTEGER))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((- ((NOT (x''))))) ORDER BY ((((vt1.c1)OR(((((x'')OR(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c3 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((NOT (x''))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)OR(((((x'')OR(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c3 AS INTEGER))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((- ((NOT (x''))))) ORDER BY ((((vt1.c1)OR(((((x'')OR(vt1.c0)))AND(vt1.c1)))))AND(CAST(vt1.c3 AS INTEGER))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)OR(((vt1.c1) NOT BETWEEN ('᩺I') AND (vt1.c2)))))OR((((vt1.c2, vt1.c0, vt1.c0)) BETWEEN ((vt1.c3, vt1.c2, vt1.c2)) AND ((vt1.c3, vt1.c1, vt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(((vt1.c1) NOT BETWEEN ('᩺I') AND (vt1.c2)))))OR((((vt1.c2, vt1.c0, vt1.c0)) BETWEEN ((vt1.c3, vt1.c2, vt1.c2)) AND ((vt1.c3, vt1.c1, vt1.c3)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)OR(((vt1.c1) NOT BETWEEN ('᩺I') AND (vt1.c2)))))OR((((vt1.c2, vt1.c0, vt1.c0)) BETWEEN ((vt1.c3, vt1.c2, vt1.c2)) AND ((vt1.c3, vt1.c1, vt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(((vt1.c1) NOT BETWEEN ('᩺I') AND (vt1.c2)))))OR((((vt1.c2, vt1.c0, vt1.c0)) BETWEEN ((vt1.c3, vt1.c2, vt1.c2)) AND ((vt1.c3, vt1.c1, vt1.c3)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)OR(((vt1.c1) NOT BETWEEN ('᩺I') AND (vt1.c2)))))OR((((vt1.c2, vt1.c0, vt1.c0)) BETWEEN ((vt1.c3, vt1.c2, vt1.c2)) AND ((vt1.c3, vt1.c1, vt1.c3))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (((vt1.c3) BETWEEN (vt1.c1) AND (vt1.c3)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))OR(((vt1.c1) NOT BETWEEN (vt1.c3) AND (vt1.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((vt1.c2 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((vt1.c2 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST((vt1.c2 IN ()) AS BLOB));
SELECT ALL * FROM vt1 WHERE ((~ ((((vt1.c2))==((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt1.c2))==((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ ((((vt1.c2))==((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt1.c2))==((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ ((((vt1.c2))==((vt1.c0))))));
SELECT * FROM rt0 WHERE (((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)LIKE(rt0.c1)))IS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c1, vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (vt1.c1, vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c1, vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (vt1.c1, vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c1, vt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2 COLLATE RTRIM) BETWEEN (CASE WHEN vt1.c1 THEN rt0.c1 END) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))) WHERE ((((1.152086382E9)) NOT BETWEEN ((NULL)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END))));
SELECT SUM(count) FROM (SELECT (((((1.152086382E9)) NOT BETWEEN ((NULL)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2 COLLATE RTRIM) BETWEEN (CASE WHEN vt1.c1 THEN rt0.c1 END) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2 COLLATE RTRIM) BETWEEN (CASE WHEN vt1.c1 THEN rt0.c1 END) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))) WHERE ((((1.152086382E9)) NOT BETWEEN ((NULL)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END))));
SELECT SUM(count) FROM (SELECT (((((1.152086382E9)) NOT BETWEEN ((NULL)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2 COLLATE RTRIM) BETWEEN (CASE WHEN vt1.c1 THEN rt0.c1 END) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((vt1.c2 COLLATE RTRIM) BETWEEN (CASE WHEN vt1.c1 THEN rt0.c1 END) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))) WHERE ((((1.152086382E9)) NOT BETWEEN ((NULL)) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c2 END))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)==(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c2)>(rt0.c2)) THEN (NOT (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)==(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c2)>(rt0.c2)) THEN (NOT (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)==(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c2)>(rt0.c2)) THEN (NOT (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)==(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c2)>(rt0.c2)) THEN (NOT (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)==(rt0.c0)) THEN ((rt0.c0) IS TRUE) WHEN ((rt0.c2)>(rt0.c2)) THEN (NOT (rt0.c0)) WHEN rt0.c0 COLLATE NOCASE THEN rt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN NULL THEN 0X490cbfab END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 0X490cbfab END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN NULL THEN 0X490cbfab END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN 0X490cbfab END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN NULL THEN 0X490cbfab END);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY ((+ (vt1.c2)) IN ())  NULLS LAST, ((((~ (x''))))<=((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3)))));
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((+ (vt1.c2)) IN ())  NULLS LAST, ((((~ (x''))))<=((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY ((+ (vt1.c2)) IN ())  NULLS LAST, ((((~ (x''))))<=((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3)))));
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((+ (vt1.c2)) IN ())  NULLS LAST, ((((~ (x''))))<=((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY ((+ (vt1.c2)) IN ())  NULLS LAST, ((((~ (x''))))<=((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c3)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((NOT (rt0.c1)))&(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1)))&(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((NOT (rt0.c1)))&(rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1)))&(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((NOT (rt0.c1)))&(rt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES()) ORDER BY CASE ((rt0.c2)LIKE(NULL))  WHEN 107390989 THEN ',' WHEN (+ (rt0.c0)) THEN (~ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN (rt0.c1 IN ()) END DESC, UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2)LIKE(NULL))  WHEN 107390989 THEN ',' WHEN (+ (rt0.c0)) THEN (~ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN (rt0.c1 IN ()) END DESC, UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES()) ORDER BY CASE ((rt0.c2)LIKE(NULL))  WHEN 107390989 THEN ',' WHEN (+ (rt0.c0)) THEN (~ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN (rt0.c1 IN ()) END DESC, UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2)LIKE(NULL))  WHEN 107390989 THEN ',' WHEN (+ (rt0.c0)) THEN (~ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN (rt0.c1 IN ()) END DESC, UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES()) ORDER BY CASE ((rt0.c2)LIKE(NULL))  WHEN 107390989 THEN ',' WHEN (+ (rt0.c0)) THEN (~ (rt0.c1)) WHEN rt0.c1 COLLATE BINARY THEN (rt0.c1 IN ()) END DESC, UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(TYPEOF(vt1.c1) AS NUMERIC)) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c1 AS REAL)) AND (CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(vt1.c1) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c1 AS REAL)) AND (CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(TYPEOF(vt1.c1) AS NUMERIC)) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c1 AS REAL)) AND (CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(vt1.c1) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c1 AS REAL)) AND (CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(TYPEOF(vt1.c1) AS NUMERIC)) ORDER BY ((((vt1.c0) NOT NULL)) BETWEEN (CAST(vt1.c1 AS REAL)) AND (CASE WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END))  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rtreenode(x'', rt0.c2)) AND (TYPEOF(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rtreenode(x'', rt0.c2)) AND (TYPEOF(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rtreenode(x'', rt0.c2)) AND (TYPEOF(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rtreenode(x'', rt0.c2)) AND (TYPEOF(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rtreenode(x'', rt0.c2)) AND (TYPEOF(rt0.c2))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON LTRIM(CAST(vt1.c0 AS NUMERIC), (NOT (vt1.c2))) WHERE (((((vt1.c0) BETWEEN ('') AND (x'')))||((((vt1.c3))>=(('0.3584550290291949'))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN ('') AND (x'')))||((((vt1.c3))>=(('0.3584550290291949')))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON LTRIM(CAST(vt1.c0 AS NUMERIC), (NOT (vt1.c2))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON LTRIM(CAST(vt1.c0 AS NUMERIC), (NOT (vt1.c2))) WHERE (((((vt1.c0) BETWEEN ('') AND (x'')))||((((vt1.c3))>=(('0.3584550290291949'))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN ('') AND (x'')))||((((vt1.c3))>=(('0.3584550290291949')))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON LTRIM(CAST(vt1.c0 AS NUMERIC), (NOT (vt1.c2))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON LTRIM(CAST(vt1.c0 AS NUMERIC), (NOT (vt1.c2))) WHERE (((((vt1.c0) BETWEEN ('') AND (x'')))||((((vt1.c3))>=(('0.3584550290291949'))))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c2 IN ()))AND((+ (vt1.c1)))))OR(((vt1.c2)>('-567369916'))))) ORDER BY (~ (((((((((vt1.c1)OR(vt1.c3)))OR(vt1.c3)))OR(vt1.c2)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2 IN ()))AND((+ (vt1.c1)))))OR(((vt1.c2)>('-567369916'))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((((((((vt1.c1)OR(vt1.c3)))OR(vt1.c3)))OR(vt1.c2)))AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c2 IN ()))AND((+ (vt1.c1)))))OR(((vt1.c2)>('-567369916'))))) ORDER BY (~ (((((((((vt1.c1)OR(vt1.c3)))OR(vt1.c3)))OR(vt1.c2)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c2 IN ()))AND((+ (vt1.c1)))))OR(((vt1.c2)>('-567369916'))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((((((((vt1.c1)OR(vt1.c3)))OR(vt1.c3)))OR(vt1.c2)))AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c2 IN ()))AND((+ (vt1.c1)))))OR(((vt1.c2)>('-567369916'))))) ORDER BY (~ (((((((((vt1.c1)OR(vt1.c3)))OR(vt1.c3)))OR(vt1.c2)))AND(vt1.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((~ (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)AND(vt1.c0)))AND(rt0.c0)) COLLATE BINARY WHERE (((((vt1.c1)&(vt1.c1)))<<(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)&(vt1.c1)))<<(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)AND(vt1.c0)))AND(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)AND(vt1.c0)))AND(rt0.c0)) COLLATE BINARY WHERE (((((vt1.c1)&(vt1.c1)))<<(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)&(vt1.c1)))<<(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)AND(vt1.c0)))AND(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((vt1.c3)AND(vt1.c0)))AND(rt0.c0)) COLLATE BINARY WHERE (((((vt1.c1)&(vt1.c1)))<<(((vt1.c1) ISNULL))));
SELECT * FROM vt1 WHERE (0Xffffffffa7d7745b) ORDER BY (((CAST(vt1.c0 AS NUMERIC)))<((LOWER(vt1.c1))))  NULLS FIRST, CAST(vt1.c3 AS NUMERIC), NULLIF(DISTINCT ((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)), '-1529678354' COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffa7d7745b) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS NUMERIC)))<((LOWER(vt1.c1))))  NULLS FIRST, CAST(vt1.c3 AS NUMERIC), NULLIF(DISTINCT ((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)), '-1529678354' COLLATE NOCASE) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (0Xffffffffa7d7745b) ORDER BY (((CAST(vt1.c0 AS NUMERIC)))<((LOWER(vt1.c1))))  NULLS FIRST, CAST(vt1.c3 AS NUMERIC), NULLIF(DISTINCT ((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)), '-1529678354' COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffa7d7745b) IS TRUE)  as count FROM vt1 ORDER BY (((CAST(vt1.c0 AS NUMERIC)))<((LOWER(vt1.c1))))  NULLS FIRST, CAST(vt1.c3 AS NUMERIC), NULLIF(DISTINCT ((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)), '-1529678354' COLLATE NOCASE) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (0Xffffffffa7d7745b) ORDER BY (((CAST(vt1.c0 AS NUMERIC)))<((LOWER(vt1.c1))))  NULLS FIRST, CAST(vt1.c3 AS NUMERIC), NULLIF(DISTINCT ((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)), '-1529678354' COLLATE NOCASE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c2 COLLATE RTRIM)AND(((vt1.c2)==(vt1.c0)))))AND(CAST(vt1.c3 AS REAL)))) ORDER BY (((((vt1.c0))>=((vt1.c1)))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2 COLLATE RTRIM)AND(((vt1.c2)==(vt1.c0)))))AND(CAST(vt1.c3 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))>=((vt1.c1)))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c2 COLLATE RTRIM)AND(((vt1.c2)==(vt1.c0)))))AND(CAST(vt1.c3 AS REAL)))) ORDER BY (((((vt1.c0))>=((vt1.c1)))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2 COLLATE RTRIM)AND(((vt1.c2)==(vt1.c0)))))AND(CAST(vt1.c3 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))>=((vt1.c1)))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c2 COLLATE RTRIM)AND(((vt1.c2)==(vt1.c0)))))AND(CAST(vt1.c3 AS REAL)))) ORDER BY (((((vt1.c0))>=((vt1.c1)))) ISNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2) BETWEEN ('謒IQ') AND (vt1.c0))  WHEN ((0.6666089189380671)==(rt0.c0)) THEN (vt1.c3 IN ()) END) ORDER BY (((((vt1.c1, rt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND ((vt1.c0, NULL, vt1.c3)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) BETWEEN ('謒IQ') AND (vt1.c0))  WHEN ((0.6666089189380671)=(rt0.c0)) THEN (vt1.c3 IN ()) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c1, rt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND ((vt1.c0, NULL, vt1.c3)))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2) BETWEEN ('謒IQ') AND (vt1.c0))  WHEN ((0.6666089189380671)==(rt0.c0)) THEN (vt1.c3 IN ()) END) ORDER BY (((((vt1.c1, rt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND ((vt1.c0, NULL, vt1.c3)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) BETWEEN ('謒IQ') AND (vt1.c0))  WHEN ((0.6666089189380671)=(rt0.c0)) THEN (vt1.c3 IN ()) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c1, rt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND ((vt1.c0, NULL, vt1.c3)))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2) BETWEEN ('謒IQ') AND (vt1.c0))  WHEN ((0.6666089189380671)==(rt0.c0)) THEN (vt1.c3 IN ()) END) ORDER BY (((((vt1.c1, rt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND ((vt1.c0, NULL, vt1.c3)))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (vt1.c1) ORDER BY (((- (0.9690601860424044)))LIKE(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((- (0.9690601860424044)))LIKE(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (vt1.c1) ORDER BY (((- (0.9690601860424044)))LIKE(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((- (0.9690601860424044)))LIKE(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (vt1.c1) ORDER BY (((- (0.9690601860424044)))LIKE(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)AND(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)AND(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)AND(rt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (json_quote(((((((((vt1.c3)AND(vt1.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((((((((vt1.c3)AND(vt1.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(vt1.c2)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (json_quote(((((((((vt1.c3)AND(vt1.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((((((((vt1.c3)AND(vt1.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(vt1.c2)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (json_quote(((((((((vt1.c3)AND(vt1.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(vt1.c2))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE NOCASE AS REAL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE NOCASE AS REAL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY CAST(rt0.c1 COLLATE NOCASE AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ ((+ (NULL)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ ((+ (NULL)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ ((+ (NULL)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)+(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)+(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)+(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)+(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)+(rt0.c2)))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '0.07183686549572876' COLLATE RTRIM WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE ((rt0.c2)+(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '0.07183686549572876' COLLATE RTRIM WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE ((rt0.c2)+(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '0.07183686549572876' COLLATE RTRIM WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE ((rt0.c2)+(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '0.07183686549572876' COLLATE RTRIM WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE ((rt0.c2)+(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN '0.07183686549572876' COLLATE RTRIM WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'')) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE ((rt0.c2)+(rt0.c1)) END);
SELECT ALL * FROM rt0, vt1 WHERE ((((((vt1.c2 IN ()))OR((rt0.c1 IN ()))))AND(NULL))) ORDER BY (((vt1.c2) IS TRUE) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (0xffffffff9baf7256))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2 IN ()))OR((rt0.c1 IN ()))))AND(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c2) IS TRUE) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (0xffffffff9baf7256)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((((vt1.c2 IN ()))OR((rt0.c1 IN ()))))AND(NULL))) ORDER BY (((vt1.c2) IS TRUE) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (0xffffffff9baf7256))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2 IN ()))OR((rt0.c1 IN ()))))AND(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c2) IS TRUE) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (0xffffffff9baf7256)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((((vt1.c2 IN ()))OR((rt0.c1 IN ()))))AND(NULL))) ORDER BY (((vt1.c2) IS TRUE) IN (((vt1.c2) NOT BETWEEN (rt0.c1) AND (0xffffffff9baf7256))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'd3ca', rt0.c1, rt0.c0))<=((rt0.c1, 0.4235081303007997, rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((x'd3ca', rt0.c1, rt0.c0))<=((rt0.c1, 0.4235081303007997, rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'd3ca', rt0.c1, rt0.c0))<=((rt0.c1, 0.4235081303007997, rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((x'd3ca', rt0.c1, rt0.c0))<=((rt0.c1, 0.4235081303007997, rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'd3ca', rt0.c1, rt0.c0))<=((rt0.c1, 0.4235081303007997, rt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))>(((+ (rt0.c0))))), CAST((rt0.c0 IN ()) AS BLOB) ASC  NULLS LAST, '91980692' DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))>(((+ (rt0.c0))))), CAST((rt0.c0 IN ()) AS BLOB) ASC  NULLS LAST, '91980692' DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))>(((+ (rt0.c0))))), CAST((rt0.c0 IN ()) AS BLOB) ASC  NULLS LAST, '91980692' DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))>(((+ (rt0.c0))))), CAST((rt0.c0 IN ()) AS BLOB) ASC  NULLS LAST, '91980692' DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ())) ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))>(((+ (rt0.c0))))), CAST((rt0.c0 IN ()) AS BLOB) ASC  NULLS LAST, '91980692' DESC;
SELECT ALL * FROM rt0 WHERE ((- ((~ (rt0.c1))))) ORDER BY ((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1))>>(((((rt0.c2)OR(rt0.c2)))AND('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1))>>(((((rt0.c2)OR(rt0.c2)))AND('')))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- ((~ (rt0.c1))))) ORDER BY ((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1))>>(((((rt0.c2)OR(rt0.c2)))AND('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1))>>(((((rt0.c2)OR(rt0.c2)))AND('')))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((- ((~ (rt0.c1))))) ORDER BY ((COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c2, rt0.c1))>>(((((rt0.c2)OR(rt0.c2)))AND('')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('0.19160773541410703');
SELECT SUM(count) FROM (SELECT ALL (('0.19160773541410703') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('0.19160773541410703');
SELECT SUM(count) FROM (SELECT ALL (('0.19160773541410703') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('0.19160773541410703');
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c2)<>(vt1.c1)) THEN x'' WHEN ((rt0.c1) NOT NULL) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c3)LIKE(rt0.c1)) THEN ((rt0.c0)<<(rt0.c0)) ELSE ((rt0.c1)LIKE(vt1.c0)) END) ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN (rt0.c2 IN ()) THEN json_valid(rt0.c2) END  NULLS LAST, ((((0.43067248452370166)OR(((vt1.c1)&(rt0.c1)))))AND(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)!=(vt1.c1)) THEN x'' WHEN ((rt0.c1) NOT NULL) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c3)LIKE(rt0.c1)) THEN ((rt0.c0)<<(rt0.c0)) ELSE ((rt0.c1)LIKE(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN (rt0.c2 IN ()) THEN json_valid(rt0.c2) END  NULLS LAST, ((((0.43067248452370166)OR(((vt1.c1)&(rt0.c1)))))AND(NULL)) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c2)<>(vt1.c1)) THEN x'' WHEN ((rt0.c1) NOT NULL) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c3)LIKE(rt0.c1)) THEN ((rt0.c0)<<(rt0.c0)) ELSE ((rt0.c1)LIKE(vt1.c0)) END) ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN (rt0.c2 IN ()) THEN json_valid(rt0.c2) END  NULLS LAST, ((((0.43067248452370166)OR(((vt1.c1)&(rt0.c1)))))AND(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2)!=(vt1.c1)) THEN x'' WHEN ((rt0.c1) NOT NULL) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c3)LIKE(rt0.c1)) THEN ((rt0.c0)<<(rt0.c0)) ELSE ((rt0.c1)LIKE(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN (rt0.c2 IN ()) THEN json_valid(rt0.c2) END  NULLS LAST, ((((0.43067248452370166)OR(((vt1.c1)&(rt0.c1)))))AND(NULL)) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c2)<>(vt1.c1)) THEN x'' WHEN ((rt0.c1) NOT NULL) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c3)LIKE(rt0.c1)) THEN ((rt0.c0)<<(rt0.c0)) ELSE ((rt0.c1)LIKE(vt1.c0)) END) ORDER BY CASE CAST(rt0.c1 AS TEXT)  WHEN (rt0.c2 IN ()) THEN json_valid(rt0.c2) END  NULLS LAST, ((((0.43067248452370166)OR(((vt1.c1)&(rt0.c1)))))AND(NULL)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c2 ELSE vt1.c3 END IN (NULL, rt0.c1))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c2 ELSE vt1.c3 END IN (NULL, rt0.c1))) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c2 ELSE vt1.c3 END IN (NULL, rt0.c1))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c2 ELSE vt1.c3 END IN (NULL, rt0.c1))) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c2 ELSE vt1.c3 END IN (NULL, rt0.c1))) ORDER BY rt0.c2  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c2)<=(rt0.c1)) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)<=(rt0.c1)) IN (rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c2)<=(rt0.c1)) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2)<=(rt0.c1)) IN (rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c2)<=(rt0.c1)) IN (rt0.c1)));
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(vt1.c3));
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c3)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(vt1.c3));
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c3)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(vt1.c3));
SELECT * FROM vt1, rt0 WHERE (((((('-86248292', rt0.c0, rt0.c2)) BETWEEN ((x'5bd1', vt1.c0, rt0.c2)) AND ((rt0.c0, '', vt1.c3)))) NOT NULL)) ORDER BY (((vt1.c3) NOT BETWEEN (NULL) AND (vt1.c2)) IN (((vt1.c2) NOTNULL)))  NULLS LAST, CASE WHEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (rt0.c0 IN (rt0.c0)) ELSE CAST(vt1.c3 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ((((((('-86248292', rt0.c0, rt0.c2)) BETWEEN ((x'5bd1', vt1.c0, rt0.c2)) AND ((rt0.c0, '', vt1.c3)))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c3) NOT BETWEEN (NULL) AND (vt1.c2)) IN (((vt1.c2) NOTNULL)))  NULLS LAST, CASE WHEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (rt0.c0 IN (rt0.c0)) ELSE CAST(vt1.c3 AS REAL) END DESC);
SELECT * FROM vt1, rt0 WHERE (((((('-86248292', rt0.c0, rt0.c2)) BETWEEN ((x'5bd1', vt1.c0, rt0.c2)) AND ((rt0.c0, '', vt1.c3)))) NOT NULL)) ORDER BY (((vt1.c3) NOT BETWEEN (NULL) AND (vt1.c2)) IN (((vt1.c2) NOTNULL)))  NULLS LAST, CASE WHEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (rt0.c0 IN (rt0.c0)) ELSE CAST(vt1.c3 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ((((((('-86248292', rt0.c0, rt0.c2)) BETWEEN ((x'5bd1', vt1.c0, rt0.c2)) AND ((rt0.c0, '', vt1.c3)))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c3) NOT BETWEEN (NULL) AND (vt1.c2)) IN (((vt1.c2) NOTNULL)))  NULLS LAST, CASE WHEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (rt0.c0 IN (rt0.c0)) ELSE CAST(vt1.c3 AS REAL) END DESC);
SELECT * FROM vt1, rt0 WHERE (((((('-86248292', rt0.c0, rt0.c2)) BETWEEN ((x'5bd1', vt1.c0, rt0.c2)) AND ((rt0.c0, '', vt1.c3)))) NOT NULL)) ORDER BY (((vt1.c3) NOT BETWEEN (NULL) AND (vt1.c2)) IN (((vt1.c2) NOTNULL)))  NULLS LAST, CASE WHEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (rt0.c0 IN (rt0.c0)) ELSE CAST(vt1.c3 AS REAL) END DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))  WHEN (+ (vt1.c1)) THEN CAST('Գt' AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))  WHEN (+ (vt1.c1)) THEN CAST('Գt' AS TEXT) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))  WHEN (+ (vt1.c1)) THEN CAST('Գt' AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))  WHEN (+ (vt1.c1)) THEN CAST('Գt' AS TEXT) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))  WHEN (+ (vt1.c1)) THEN CAST('Գt' AS TEXT) END);
SELECT * FROM rt0, vt1 WHERE (((((((vt1.c2)AND(vt1.c0)))OR(0xffffffffe9325647))) NOTNULL)) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)AND(vt1.c0)))OR(0Xffffffffe9325647))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((((vt1.c2)AND(vt1.c0)))OR(0xffffffffe9325647))) NOTNULL)) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)AND(vt1.c0)))OR(0Xffffffffe9325647))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((((vt1.c2)AND(vt1.c0)))OR(0xffffffffe9325647))) NOTNULL)) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c1))))!=((LENGTH(vt1.c2))))) ORDER BY 'L2L.쨀㸫Cuc';
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)GLOB(vt1.c1))))<>((LENGTH(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY 'L2L.쨀㸫Cuc');
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c1))))!=((LENGTH(vt1.c2))))) ORDER BY 'L2L.쨀㸫Cuc';
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)GLOB(vt1.c1))))<>((LENGTH(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY 'L2L.쨀㸫Cuc');
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c1))))!=((LENGTH(vt1.c2))))) ORDER BY 'L2L.쨀㸫Cuc';
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c1) NOTNULL) IN ())  NULLS LAST, vt1.c0 DESC, CASE x''  WHEN (rt0.c1 IN (rt0.c2, x'')) THEN CASE WHEN NULL THEN vt1.c3 ELSE '1071935720' END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c1) NOTNULL) IN ())  NULLS LAST, vt1.c0 DESC, CASE x''  WHEN (rt0.c1 IN (rt0.c2, x'')) THEN CASE WHEN NULL THEN vt1.c3 ELSE '1071935720' END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c1) NOTNULL) IN ())  NULLS LAST, vt1.c0 DESC, CASE x''  WHEN (rt0.c1 IN (rt0.c2, x'')) THEN CASE WHEN NULL THEN vt1.c3 ELSE '1071935720' END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c1) NOTNULL) IN ())  NULLS LAST, vt1.c0 DESC, CASE x''  WHEN (rt0.c1 IN (rt0.c2, x'')) THEN CASE WHEN NULL THEN vt1.c3 ELSE '1071935720' END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c1) NOTNULL) IN ())  NULLS LAST, vt1.c0 DESC, CASE x''  WHEN (rt0.c1 IN (rt0.c2, x'')) THEN CASE WHEN NULL THEN vt1.c3 ELSE '1071935720' END END  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND ((vt1.c0)))) ORDER BY (vt1.c2 IN ()) COLLATE RTRIM, (((vt1.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(vt1.c1)))) AND ((((vt1.c0) NOTNULL))))  NULLS LAST, (((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ((+ (vt1.c1)), (vt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND ((vt1.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (vt1.c2 IN ()) COLLATE RTRIM, (((vt1.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(vt1.c1)))) AND ((((vt1.c0) NOTNULL))))  NULLS LAST, (((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ((+ (vt1.c1)), (vt1.c1 IN ()))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND ((vt1.c0)))) ORDER BY (vt1.c2 IN ()) COLLATE RTRIM, (((vt1.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(vt1.c1)))) AND ((((vt1.c0) NOTNULL))))  NULLS LAST, (((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ((+ (vt1.c1)), (vt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND ((vt1.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (vt1.c2 IN ()) COLLATE RTRIM, (((vt1.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(vt1.c1)))) AND ((((vt1.c0) NOTNULL))))  NULLS LAST, (((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ((+ (vt1.c1)), (vt1.c1 IN ()))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND ((vt1.c0)))) ORDER BY (vt1.c2 IN ()) COLLATE RTRIM, (((vt1.c0)) BETWEEN ((((((rt0.c2)OR(rt0.c0)))OR(vt1.c1)))) AND ((((vt1.c0) NOTNULL))))  NULLS LAST, (((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ((+ (vt1.c1)), (vt1.c1 IN ()))) ASC;
SELECT * FROM rt0, vt1 WHERE (NULLIF(LAST_INSERT_ROWID(), '-1042363904'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(LAST_INSERT_ROWID(), '-1042363904')) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULLIF(LAST_INSERT_ROWID(), '-1042363904'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(LAST_INSERT_ROWID(), '-1042363904')) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULLIF(LAST_INSERT_ROWID(), '-1042363904'));
SELECT * FROM vt1 WHERE ((~ (((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (((vt1.c2) NOTNULL))));
SELECT * FROM rt0 WHERE (((((rt0.c0 IN (rt0.c0)), ((((rt0.c2)OR(0X46a4f2f9)))OR(rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '-698228113' END, (- (rt0.c0)), TOTAL_CHANGES()))>((CASE ''  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c1)>=(rt0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), 'rP'))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN (rt0.c0)), ((((rt0.c2)OR(0X46a4f2f9)))OR(rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '-698228113' END, (- (rt0.c0)), TOTAL_CHANGES()))>((CASE ''  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c1)>=(rt0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), 'rP')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0 IN (rt0.c0)), ((((rt0.c2)OR(0X46a4f2f9)))OR(rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '-698228113' END, (- (rt0.c0)), TOTAL_CHANGES()))>((CASE ''  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c1)>=(rt0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), 'rP'))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN (rt0.c0)), ((((rt0.c2)OR(0X46a4f2f9)))OR(rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '-698228113' END, (- (rt0.c0)), TOTAL_CHANGES()))>((CASE ''  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c1)>=(rt0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), 'rP')))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0 IN (rt0.c0)), ((((rt0.c2)OR(0X46a4f2f9)))OR(rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '-698228113' END, (- (rt0.c0)), TOTAL_CHANGES()))>((CASE ''  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, ((rt0.c1)>=(rt0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()), 'rP'))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) NOTNULL)))==((CAST(rt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOTNULL)))==((CAST(rt0.c0 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) NOTNULL)))==((CAST(rt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOTNULL)))==((CAST(rt0.c0 AS TEXT))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1) NOTNULL)))==((CAST(rt0.c0 AS TEXT)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(rt0.c2 COLLATE BINARY))) ORDER BY ((((vt1.c1)LIKE(x''))) ISNULL)  NULLS FIRST, x'7ce1', (NOT ((~ (vt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c1)LIKE(x''))) ISNULL)  NULLS FIRST, x'7ce1', (NOT ((~ (vt1.c3)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(rt0.c2 COLLATE BINARY))) ORDER BY ((((vt1.c1)LIKE(x''))) ISNULL)  NULLS FIRST, x'7ce1', (NOT ((~ (vt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c1)LIKE(x''))) ISNULL)  NULLS FIRST, x'7ce1', (NOT ((~ (vt1.c3)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((x'')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(rt0.c2 COLLATE BINARY))) ORDER BY ((((vt1.c1)LIKE(x''))) ISNULL)  NULLS FIRST, x'7ce1', (NOT ((~ (vt1.c3)))) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c3 END IN (CAST(rt0.c1 AS TEXT)))) ORDER BY CASE vt1.c2  WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c3 END IN (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE vt1.c2  WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END COLLATE RTRIM DESC);
SELECT * FROM vt1, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c3 END IN (CAST(rt0.c1 AS TEXT)))) ORDER BY CASE vt1.c2  WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c3 END IN (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE vt1.c2  WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END COLLATE RTRIM DESC);
SELECT * FROM vt1, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c3 END IN (CAST(rt0.c1 AS TEXT)))) ORDER BY CASE vt1.c2  WHEN vt1.c3 THEN vt1.c3 ELSE vt1.c1 END COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE (rt0.c0) ORDER BY ((CAST(vt1.c2 AS REAL))>(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0)))) DESC, ((((rt0.c1) ISNULL))LIKE((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(vt1.c2 AS REAL))>(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0)))) DESC, ((((rt0.c1) ISNULL))LIKE((+ (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE (rt0.c0) ORDER BY ((CAST(vt1.c2 AS REAL))>(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0)))) DESC, ((((rt0.c1) ISNULL))LIKE((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(vt1.c2 AS REAL))>(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0)))) DESC, ((((rt0.c1) ISNULL))LIKE((+ (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED, vt1 WHERE (rt0.c0) ORDER BY ((CAST(vt1.c2 AS REAL))>(((vt1.c0) BETWEEN (vt1.c3) AND (rt0.c0)))) DESC, ((((rt0.c1) ISNULL))LIKE((+ (vt1.c0))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY ASC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY ASC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2 IN (vt1.c0)))<((rt0.c0 IN ())))) ORDER BY vt1.c0, (((((rt0.c0 IN (0.7872798327561288)))OR(((vt1.c2)>>(vt1.c0)))))OR((((rt0.c1))>=((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (vt1.c0)))<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0, (((((rt0.c0 IN (0.7872798327561288)))OR(((vt1.c2)>>(vt1.c0)))))OR((((rt0.c1))>=((rt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2 IN (vt1.c0)))<((rt0.c0 IN ())))) ORDER BY vt1.c0, (((((rt0.c0 IN (0.7872798327561288)))OR(((vt1.c2)>>(vt1.c0)))))OR((((rt0.c1))>=((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (vt1.c0)))<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c0, (((((rt0.c0 IN (0.7872798327561288)))OR(((vt1.c2)>>(vt1.c0)))))OR((((rt0.c1))>=((rt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2 IN (vt1.c0)))<((rt0.c0 IN ())))) ORDER BY vt1.c0, (((((rt0.c0 IN (0.7872798327561288)))OR(((vt1.c2)>>(vt1.c0)))))OR((((rt0.c1))>=((rt0.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c3) BETWEEN (rt0.c1) AND (vt1.c3)), ((vt1.c1)>=(vt1.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0))))>((CASE vt1.c3  WHEN rt0.c0 THEN rt0.c2 END, (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c3))), vt1.c0 COLLATE BINARY)))) ORDER BY ((((((rt0.c2)OR(vt1.c2)))OR(vt1.c0))) ISNULL), CASE WHEN ((rt0.c0)=(x'')) THEN CAST(NULL AS NUMERIC) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c3) BETWEEN (rt0.c1) AND (vt1.c3)), ((vt1.c1)>=(vt1.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0))))>((CASE vt1.c3  WHEN rt0.c0 THEN rt0.c2 END, (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c3))), vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c2)OR(vt1.c2)))OR(vt1.c0))) ISNULL), CASE WHEN ((rt0.c0)=(x'')) THEN CAST(NULL AS NUMERIC) END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c3) BETWEEN (rt0.c1) AND (vt1.c3)), ((vt1.c1)>=(vt1.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0))))>((CASE vt1.c3  WHEN rt0.c0 THEN rt0.c2 END, (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c3))), vt1.c0 COLLATE BINARY)))) ORDER BY ((((((rt0.c2)OR(vt1.c2)))OR(vt1.c0))) ISNULL), CASE WHEN ((rt0.c0)=(x'')) THEN CAST(NULL AS NUMERIC) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c3) BETWEEN (rt0.c1) AND (vt1.c3)), ((vt1.c1)>=(vt1.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0))))>((CASE vt1.c3  WHEN rt0.c0 THEN rt0.c2 END, (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c3))), vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c2)OR(vt1.c2)))OR(vt1.c0))) ISNULL), CASE WHEN ((rt0.c0)=(x'')) THEN CAST(NULL AS NUMERIC) END  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c3) BETWEEN (rt0.c1) AND (vt1.c3)), ((vt1.c1)>=(vt1.c2)), ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt1.c3)))AND(vt1.c1)))OR(vt1.c0))))>((CASE vt1.c3  WHEN rt0.c0 THEN rt0.c2 END, (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c3))), vt1.c0 COLLATE BINARY)))) ORDER BY ((((((rt0.c2)OR(vt1.c2)))OR(vt1.c0))) ISNULL), CASE WHEN ((rt0.c0)=(x'')) THEN CAST(NULL AS NUMERIC) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((0.164221631514476 IN ())) BETWEEN (LIKELY(vt1.c0)) AND ((- ('錧orG\h㗍餟#'))))) ORDER BY (((((rt0.c1))==((vt1.c3))))-(NULLIF(vt1.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((0.164221631514476 IN ())) BETWEEN (LIKELY(vt1.c0)) AND ((- ('錧orG\h㗍餟#'))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c1))=((vt1.c3))))-(NULLIF(vt1.c2, rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((0.164221631514476 IN ())) BETWEEN (LIKELY(vt1.c0)) AND ((- ('錧orG\h㗍餟#'))))) ORDER BY (((((rt0.c1))==((vt1.c3))))-(NULLIF(vt1.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((0.164221631514476 IN ())) BETWEEN (LIKELY(vt1.c0)) AND ((- ('錧orG\h㗍餟#'))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c1))=((vt1.c3))))-(NULLIF(vt1.c2, rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((0.164221631514476 IN ())) BETWEEN (LIKELY(vt1.c0)) AND ((- ('錧orG\h㗍餟#'))))) ORDER BY (((((rt0.c1))==((vt1.c3))))-(NULLIF(vt1.c2, rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (CAST(((vt1.c3)+(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c3)+(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (CAST(((vt1.c3)+(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c3)+(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (CAST(((vt1.c3)+(vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (((vt1.c1)>>(vt1.c1))))) ORDER BY (((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) BETWEEN (0.03338203244023852) AND (CAST(vt1.c3 AS TEXT))) DESC, (((vt1.c2 IN (rt0.c2)))LIKE((vt1.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c1)>>(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) BETWEEN (0.03338203244023852) AND (CAST(vt1.c3 AS TEXT))) DESC, (((vt1.c2 IN (rt0.c2)))LIKE((vt1.c2 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (((vt1.c1)>>(vt1.c1))))) ORDER BY (((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) BETWEEN (0.03338203244023852) AND (CAST(vt1.c3 AS TEXT))) DESC, (((vt1.c2 IN (rt0.c2)))LIKE((vt1.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c1)>>(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) BETWEEN (0.03338203244023852) AND (CAST(vt1.c3 AS TEXT))) DESC, (((vt1.c2 IN (rt0.c2)))LIKE((vt1.c2 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (((vt1.c1)>>(vt1.c1))))) ORDER BY (((((rt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) BETWEEN (0.03338203244023852) AND (CAST(vt1.c3 AS TEXT))) DESC, (((vt1.c2 IN (rt0.c2)))LIKE((vt1.c2 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c3 COLLATE NOCASE)<=(CASE WHEN vt1.c3 THEN vt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3 COLLATE NOCASE)<=(CASE WHEN vt1.c3 THEN vt1.c3 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c3 COLLATE NOCASE)<=(CASE WHEN vt1.c3 THEN vt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3 COLLATE NOCASE)<=(CASE WHEN vt1.c3 THEN vt1.c3 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c3 COLLATE NOCASE)<=(CASE WHEN vt1.c3 THEN vt1.c3 END)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (CAST(rt0.c1 AS NUMERIC) IN ()) WHERE (((CAST(vt1.c3 AS INTEGER))>(vt1.c3 COLLATE BINARY))) ORDER BY CAST((('0.11784477980483254')AND(vt1.c2)) AS BLOB) ASC, ((CAST(vt1.c2 AS REAL)) NOT NULL) DESC, rt0.c1;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c3 AS INTEGER))>(vt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (CAST(rt0.c1 AS NUMERIC) IN ()) ORDER BY CAST((('0.11784477980483254')AND(vt1.c2)) AS BLOB) ASC, ((CAST(vt1.c2 AS REAL)) NOT NULL) DESC, rt0.c1);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (CAST(rt0.c1 AS NUMERIC) IN ()) WHERE (((CAST(vt1.c3 AS INTEGER))>(vt1.c3 COLLATE BINARY))) ORDER BY CAST((('0.11784477980483254')AND(vt1.c2)) AS BLOB) ASC, ((CAST(vt1.c2 AS REAL)) NOT NULL) DESC, rt0.c1;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c3 AS INTEGER))>(vt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (CAST(rt0.c1 AS NUMERIC) IN ()) ORDER BY CAST((('0.11784477980483254')AND(vt1.c2)) AS BLOB) ASC, ((CAST(vt1.c2 AS REAL)) NOT NULL) DESC, rt0.c1);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (CAST(rt0.c1 AS NUMERIC) IN ()) WHERE (((CAST(vt1.c3 AS INTEGER))>(vt1.c3 COLLATE BINARY))) ORDER BY CAST((('0.11784477980483254')AND(vt1.c2)) AS BLOB) ASC, ((CAST(vt1.c2 AS REAL)) NOT NULL) DESC, rt0.c1;
SELECT * FROM vt1 WHERE (json_array(((vt1.c2)LIKE(vt1.c2)), (- (vt1.c3))));
SELECT SUM(count) FROM (SELECT ((json_array(((vt1.c2)LIKE(vt1.c2)), (- (vt1.c3)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (json_array(((vt1.c2)LIKE(vt1.c2)), (- (vt1.c3))));
SELECT SUM(count) FROM (SELECT ((json_array(((vt1.c2)LIKE(vt1.c2)), (- (vt1.c3)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (json_array(((vt1.c2)LIKE(vt1.c2)), (- (vt1.c3))));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) ORDER BY ((((rt0.c1)<=(rt0.c1)))GLOB(CAST(rt0.c2 AS INTEGER))), (- (((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))), (((CAST(rt0.c2 AS BLOB)))!=((CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<=(rt0.c1)))GLOB(CAST(rt0.c2 AS INTEGER))), (- (((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))), (((CAST(rt0.c2 AS BLOB)))<>((CAST(rt0.c0 AS BLOB)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) ORDER BY ((((rt0.c1)<=(rt0.c1)))GLOB(CAST(rt0.c2 AS INTEGER))), (- (((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))), (((CAST(rt0.c2 AS BLOB)))!=((CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<=(rt0.c1)))GLOB(CAST(rt0.c2 AS INTEGER))), (- (((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))), (((CAST(rt0.c2 AS BLOB)))<>((CAST(rt0.c0 AS BLOB)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) ORDER BY ((((rt0.c1)<=(rt0.c1)))GLOB(CAST(rt0.c2 AS INTEGER))), (- (((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))), (((CAST(rt0.c2 AS BLOB)))!=((CAST(rt0.c0 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt1.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt1.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt1.c3))) NOT NULL));
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c2)GLOB(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt0.c2)GLOB(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c2)GLOB(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt0.c2)GLOB(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c2)GLOB(rt0.c1))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END)<(vt1.c1 COLLATE RTRIM))) ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END)<(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END)<(vt1.c1 COLLATE RTRIM))) ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END)<(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END)<(vt1.c1 COLLATE RTRIM))) ORDER BY ((rt0.c0)&(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) WHERE (CASE WHEN json_array_length(vt1.c0) THEN CAST(vt1.c2 AS INTEGER) ELSE vt1.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array_length(vt1.c0) THEN CAST(vt1.c2 AS INTEGER) ELSE vt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) WHERE (CASE WHEN json_array_length(vt1.c0) THEN CAST(vt1.c2 AS INTEGER) ELSE vt1.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array_length(vt1.c0) THEN CAST(vt1.c2 AS INTEGER) ELSE vt1.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) WHERE (CASE WHEN json_array_length(vt1.c0) THEN CAST(vt1.c2 AS INTEGER) ELSE vt1.c2 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((x'')OR(vt1.c2))) NOT NULL)) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(vt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((x'')OR(vt1.c2))) NOT NULL)) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(vt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((x'')OR(vt1.c2))) NOT NULL)) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c3) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c3) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c3) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c3) NOTNULL) COLLATE BINARY);
SELECT ALL * FROM rt0, vt1 WHERE (((((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(((vt1.c0)>=(vt1.c2)))))OR((rt0.c0 IN ())))) ORDER BY ((((vt1.c1)>(rt0.c0))) BETWEEN (((((vt1.c3)AND(vt1.c3)))OR(vt1.c3))) AND (HEX(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(((vt1.c0)>=(vt1.c2)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c1)>(rt0.c0))) BETWEEN (((((vt1.c3)AND(vt1.c3)))OR(vt1.c3))) AND (HEX(rt0.c0))));
SELECT ALL * FROM rt0, vt1 WHERE (((((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(((vt1.c0)>=(vt1.c2)))))OR((rt0.c0 IN ())))) ORDER BY ((((vt1.c1)>(rt0.c0))) BETWEEN (((((vt1.c3)AND(vt1.c3)))OR(vt1.c3))) AND (HEX(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(((vt1.c0)>=(vt1.c2)))))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c1)>(rt0.c0))) BETWEEN (((((vt1.c3)AND(vt1.c3)))OR(vt1.c3))) AND (HEX(rt0.c0))));
SELECT ALL * FROM rt0, vt1 WHERE (((((CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 END)AND(((vt1.c0)>=(vt1.c2)))))OR((rt0.c0 IN ())))) ORDER BY ((((vt1.c1)>(rt0.c0))) BETWEEN (((((vt1.c3)AND(vt1.c3)))OR(vt1.c3))) AND (HEX(rt0.c0)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (- ((rt0.c2 IN (vt1.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- ((rt0.c2 IN (vt1.c2, rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (- ((rt0.c2 IN (vt1.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- ((rt0.c2 IN (vt1.c2, rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (- ((rt0.c2 IN (vt1.c2, rt0.c2))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) IS FALSE)) ORDER BY ((0.9306487687732123 COLLATE NOCASE) BETWEEN (((rt0.c1)|(rt0.c0))) AND (((rt0.c2)-(rt0.c0)))), (((rt0.c1)) BETWEEN ((highlight(rt0.c0, rt0.c0, rt0.c2, rt0.c1))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (')N66%QԂg')))))  NULLS FIRST, ((((CAST(rt0.c2 AS NUMERIC))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((0.9306487687732123 COLLATE NOCASE) BETWEEN (((rt0.c1)|(rt0.c0))) AND (((rt0.c2)-(rt0.c0)))), (((rt0.c1)) BETWEEN ((highlight(rt0.c0, rt0.c0, rt0.c2, rt0.c1))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (')N66%QԂg')))))  NULLS FIRST, ((((CAST(rt0.c2 AS NUMERIC))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) IS FALSE)) ORDER BY ((0.9306487687732123 COLLATE NOCASE) BETWEEN (((rt0.c1)|(rt0.c0))) AND (((rt0.c2)-(rt0.c0)))), (((rt0.c1)) BETWEEN ((highlight(rt0.c0, rt0.c0, rt0.c2, rt0.c1))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (')N66%QԂg')))))  NULLS FIRST, ((((CAST(rt0.c2 AS NUMERIC))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((0.9306487687732123 COLLATE NOCASE) BETWEEN (((rt0.c1)|(rt0.c0))) AND (((rt0.c2)-(rt0.c0)))), (((rt0.c1)) BETWEEN ((highlight(rt0.c0, rt0.c0, rt0.c2, rt0.c1))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (')N66%QԂg')))))  NULLS FIRST, ((((CAST(rt0.c2 AS NUMERIC))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((vt1.c3 COLLATE RTRIM)IS NOT(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c3 COLLATE RTRIM)IS NOT(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((vt1.c3 COLLATE RTRIM)IS NOT(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c3 COLLATE RTRIM)IS NOT(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((vt1.c3 COLLATE RTRIM)IS NOT(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE rt0.c1 END)));
SELECT ALL * FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c2);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((0x5746797)OR(rt0.c0)))AND(rt0.c2)))==(((((rt0.c0)OR(vt1.c3)))AND(rt0.c2)))) WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((0x5746797)OR(rt0.c0)))AND(rt0.c2)))=(((((rt0.c0)OR(vt1.c3)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((0x5746797)OR(rt0.c0)))AND(rt0.c2)))==(((((rt0.c0)OR(vt1.c3)))AND(rt0.c2)))) WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((0x5746797)OR(rt0.c0)))AND(rt0.c2)))=(((((rt0.c0)OR(vt1.c3)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((0x5746797)OR(rt0.c0)))AND(rt0.c2)))==(((((rt0.c0)OR(vt1.c3)))AND(rt0.c2)))) WHERE (((NULL) NOTNULL));
SELECT * FROM vt1 WHERE (((((((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c3)))AND(vt1.c1)))GLOB(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c3)))AND(vt1.c1)))GLOB(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c3)))AND(vt1.c1)))GLOB(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c3)))AND(vt1.c1)))GLOB(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c3)OR(vt1.c2)))AND(vt1.c1)))AND(vt1.c3)))AND(vt1.c1)))GLOB(((vt1.c0) IS FALSE))));
SELECT ALL * FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c3 THEN rt0.c2 ELSE vt1.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c3 THEN rt0.c2 ELSE vt1.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c3 THEN rt0.c2 ELSE vt1.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c3 THEN rt0.c2 ELSE vt1.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c3 THEN rt0.c2 ELSE vt1.c1 END) NOTNULL));
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, (+ ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, (+ ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, (+ ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, (+ ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST, (+ ((rt0.c2 IN ())));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)<<(rt0.c0)) IN ())) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<<(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)<<(rt0.c0)) IN ())) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<<(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)<<(rt0.c0)) IN ())) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((TRIM(rt0.c2))OR(CASE 0.4050562795772772  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '' END)))AND((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c2))OR(CASE 0.4050562795772772  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '' END)))AND((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((TRIM(rt0.c2))OR(CASE 0.4050562795772772  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '' END)))AND((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c2))OR(CASE 0.4050562795772772  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '' END)))AND((- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((TRIM(rt0.c2))OR(CASE 0.4050562795772772  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN '' END)))AND((- (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CASE x'7f0f'  WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c0)<<(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((CASE x'7f0f'  WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c0)<<(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CASE x'7f0f'  WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c0)<<(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((CASE x'7f0f'  WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c0)<<(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((CASE x'7f0f'  WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)AND(((rt0.c0)<<(rt0.c0)))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 END)) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 END)) AND ((rt0.c2)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 END)) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 END)) AND ((rt0.c2)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c2 END)) AND ((rt0.c2))));
SELECT ALL * FROM vt1 WHERE (((~ (vt1.c1)) IN ())) ORDER BY ((((NULL)>(vt1.c0))) NOT NULL) ASC, vt1.c2 ASC, (NOT ((- (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((NULL)>(vt1.c0))) NOT NULL) ASC, vt1.c2 ASC, (NOT ((- (vt1.c2))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((~ (vt1.c1)) IN ())) ORDER BY ((((NULL)>(vt1.c0))) NOT NULL) ASC, vt1.c2 ASC, (NOT ((- (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((NULL)>(vt1.c0))) NOT NULL) ASC, vt1.c2 ASC, (NOT ((- (vt1.c2))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((~ (vt1.c1)) IN ())) ORDER BY ((((NULL)>(vt1.c0))) NOT NULL) ASC, vt1.c2 ASC, (NOT ((- (vt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((COALESCE('+1yV//', rt0.c1)) NOT NULL)) ORDER BY (((0.49151163331191017)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x292ee31d END)) AND (('?哂kI9g/DP')))  NULLS FIRST, ((rt0.c0)>(rt0.c1)) COLLATE RTRIM DESC, ((rt0.c2)IS(x'9c7c')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE('+1yV//', rt0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((0.49151163331191017)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0X292ee31d END)) AND (('?哂kI9g/DP')))  NULLS FIRST, ((rt0.c0)>(rt0.c1)) COLLATE RTRIM DESC, ((rt0.c2)IS(x'9c7c')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((COALESCE('+1yV//', rt0.c1)) NOT NULL)) ORDER BY (((0.49151163331191017)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x292ee31d END)) AND (('?哂kI9g/DP')))  NULLS FIRST, ((rt0.c0)>(rt0.c1)) COLLATE RTRIM DESC, ((rt0.c2)IS(x'9c7c')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE('+1yV//', rt0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((0.49151163331191017)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0X292ee31d END)) AND (('?哂kI9g/DP')))  NULLS FIRST, ((rt0.c0)>(rt0.c1)) COLLATE RTRIM DESC, ((rt0.c2)IS(x'9c7c')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((COALESCE('+1yV//', rt0.c1)) NOT NULL)) ORDER BY (((0.49151163331191017)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x292ee31d END)) AND (('?哂kI9g/DP')))  NULLS FIRST, ((rt0.c0)>(rt0.c1)) COLLATE RTRIM DESC, ((rt0.c2)IS(x'9c7c')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c3)) THEN NULL WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN vt1.c2 ELSE rt0.c0 END WHEN ((rt0.c2)|(vt1.c2)) THEN CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c2 END ELSE ((vt1.c0)*(vt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c3)) THEN NULL WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN vt1.c2 ELSE rt0.c0 END WHEN ((rt0.c2)|(vt1.c2)) THEN CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c2 END ELSE ((vt1.c0)*(vt1.c3)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c3)) THEN NULL WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN vt1.c2 ELSE rt0.c0 END WHEN ((rt0.c2)|(vt1.c2)) THEN CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c2 END ELSE ((vt1.c0)*(vt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c3)) THEN NULL WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN vt1.c2 ELSE rt0.c0 END WHEN ((rt0.c2)|(vt1.c2)) THEN CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c2 END ELSE ((vt1.c0)*(vt1.c3)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c3) NOT BETWEEN (vt1.c2) AND (vt1.c3)) THEN NULL WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN vt1.c2 ELSE rt0.c0 END WHEN ((rt0.c2)|(vt1.c2)) THEN CASE rt0.c0  WHEN vt1.c3 THEN vt1.c2 ELSE rt0.c2 END ELSE ((vt1.c0)*(vt1.c3)) END);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c0)) NOT BETWEEN ((1.43473907E9)) AND ((((NULL)AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((1.43473907E9)) AND ((((NULL)AND(rt0.c1)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c0)) NOT BETWEEN ((1.43473907E9)) AND ((((NULL)AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((1.43473907E9)) AND ((((NULL)AND(rt0.c1)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c0)) NOT BETWEEN ((1.43473907E9)) AND ((((NULL)AND(rt0.c1))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0) ISNULL) IN ()) WHERE (CAST(rt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY ((((((((((vt1.c1) NOTNULL))OR((vt1.c3 IN (vt1.c0)))))OR(x'')))OR((vt1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))GLOB(CASE vt1.c0  WHEN vt1.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0) ISNULL) IN ()) ORDER BY ((((((((((vt1.c1) NOTNULL))OR((vt1.c3 IN (vt1.c0)))))OR(x'')))OR((vt1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))GLOB(CASE vt1.c0  WHEN vt1.c2 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0) ISNULL) IN ()) WHERE (CAST(rt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY ((((((((((vt1.c1) NOTNULL))OR((vt1.c3 IN (vt1.c0)))))OR(x'')))OR((vt1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))GLOB(CASE vt1.c0  WHEN vt1.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0) ISNULL) IN ()) ORDER BY ((((((((((vt1.c1) NOTNULL))OR((vt1.c3 IN (vt1.c0)))))OR(x'')))OR((vt1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))GLOB(CASE vt1.c0  WHEN vt1.c2 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c0) ISNULL) IN ()) WHERE (CAST(rt0.c0 COLLATE NOCASE AS BLOB)) ORDER BY ((((((((((vt1.c1) NOTNULL))OR((vt1.c3 IN (vt1.c0)))))OR(x'')))OR((vt1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))GLOB(CASE vt1.c0  WHEN vt1.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c2)))))OR(((((vt1.c3)OR(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c2)))))OR(((((vt1.c3)OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c2)))))OR(((((vt1.c3)OR(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c2)))))OR(((((vt1.c3)OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR((vt1.c0 IN (vt1.c2)))))OR(((((vt1.c3)OR(rt0.c2)))AND(rt0.c2)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((LIKELY(rt0.c0))<<(((vt1.c2)*(rt0.c0))))) ORDER BY rt0.c1 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0))<<(((vt1.c2)*(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((LIKELY(rt0.c0))<<(((vt1.c2)*(rt0.c0))))) ORDER BY rt0.c1 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0))<<(((vt1.c2)*(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((LIKELY(rt0.c0))<<(((vt1.c2)*(rt0.c0))))) ORDER BY rt0.c1 COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((('+o')AND(((rt0.c0)==(rt0.c2)))))OR(json_patch(rt0.c0, rt0.c1)))) ORDER BY (((NOT (rt0.c0)))IS NOT(rt0.c0)) ASC, (CAST(rt0.c0 AS TEXT) IN (('쯃.' IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('+o')AND(((rt0.c0)==(rt0.c2)))))OR(json_patch(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))IS NOT(rt0.c0)) ASC, (CAST(rt0.c0 AS TEXT) IN (('쯃.' IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((('+o')AND(((rt0.c0)==(rt0.c2)))))OR(json_patch(rt0.c0, rt0.c1)))) ORDER BY (((NOT (rt0.c0)))IS NOT(rt0.c0)) ASC, (CAST(rt0.c0 AS TEXT) IN (('쯃.' IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('+o')AND(((rt0.c0)==(rt0.c2)))))OR(json_patch(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))IS NOT(rt0.c0)) ASC, (CAST(rt0.c0 AS TEXT) IN (('쯃.' IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((('+o')AND(((rt0.c0)==(rt0.c2)))))OR(json_patch(rt0.c0, rt0.c1)))) ORDER BY (((NOT (rt0.c0)))IS NOT(rt0.c0)) ASC, (CAST(rt0.c0 AS TEXT) IN (('쯃.' IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))+(((vt1.c1)GLOB(vt1.c2))))) ORDER BY CASE vt1.c3  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC, (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))+(((vt1.c1)GLOB(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c3  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC, (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))+(((vt1.c1)GLOB(vt1.c2))))) ORDER BY CASE vt1.c3  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC, (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))+(((vt1.c1)GLOB(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c3  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC, (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c2)OR(vt1.c1)))AND(vt1.c0)))+(((vt1.c1)GLOB(vt1.c2))))) ORDER BY CASE vt1.c3  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM ASC, (((vt1.c0 IN (vt1.c0))) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c2) ORDER BY (CAST(vt1.c3 AS NUMERIC) IN ((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC, vt1.c3 ASC, CAST(((('-1016914271'))>=((vt1.c0))) AS BLOB) DESC  NULLS LAST, (((('91980692')OR((((vt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c3))))))AND(((vt1.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CAST(vt1.c3 AS NUMERIC) IN ((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC, vt1.c3 ASC, CAST(((('-1016914271'))>=((vt1.c0))) AS BLOB) DESC  NULLS LAST, (((('91980692')OR((((vt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c3))))))AND(((vt1.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c2) ORDER BY (CAST(vt1.c3 AS NUMERIC) IN ((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC, vt1.c3 ASC, CAST(((('-1016914271'))>=((vt1.c0))) AS BLOB) DESC  NULLS LAST, (((('91980692')OR((((vt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c3))))))AND(((vt1.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CAST(vt1.c3 AS NUMERIC) IN ((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC, vt1.c3 ASC, CAST(((('-1016914271'))>=((vt1.c0))) AS BLOB) DESC  NULLS LAST, (((('91980692')OR((((vt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c3))))))AND(((vt1.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c2) ORDER BY (CAST(vt1.c3 AS NUMERIC) IN ((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC, vt1.c3 ASC, CAST(((('-1016914271'))>=((vt1.c0))) AS BLOB) DESC  NULLS LAST, (((('91980692')OR((((vt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c3))))))AND(((vt1.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c3)|(vt1.c3)) THEN ((vt1.c2)<>(vt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c3)|(vt1.c3)) THEN ((vt1.c2)!=(vt1.c3)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c3)|(vt1.c3)) THEN ((vt1.c2)<>(vt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c3)|(vt1.c3)) THEN ((vt1.c2)!=(vt1.c3)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c3)|(vt1.c3)) THEN ((vt1.c2)<>(vt1.c3)) END);
SELECT ALL * FROM rt0 WHERE ('-1461576583');
SELECT SUM(count) FROM (SELECT (('-1461576583') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-1461576583');
SELECT SUM(count) FROM (SELECT (('-1461576583') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-1461576583');
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((((((((vt1.c0)OR(vt1.c3)))OR(rt0.c2)))OR(vt1.c1)))OR(x''))))<=((((((((((vt1.c3)AND(x'')))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c0)OR(vt1.c3)))OR(rt0.c2)))OR(vt1.c1)))OR(x''))))<=((((((((((vt1.c3)AND(x'')))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((((((((vt1.c0)OR(vt1.c3)))OR(rt0.c2)))OR(vt1.c1)))OR(x''))))<=((((((((((vt1.c3)AND(x'')))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c0)OR(vt1.c3)))OR(rt0.c2)))OR(vt1.c1)))OR(x''))))<=((((((((((vt1.c3)AND(x'')))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((((((((vt1.c0)OR(vt1.c3)))OR(rt0.c2)))OR(vt1.c1)))OR(x''))))<=((((((((((vt1.c3)AND(x'')))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c3))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN LTRIM(vt1.c2, vt1.c0) THEN ((vt1.c1)IS NOT(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LTRIM(vt1.c2, vt1.c0) THEN ((vt1.c1)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN LTRIM(vt1.c2, vt1.c0) THEN ((vt1.c1)IS NOT(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LTRIM(vt1.c2, vt1.c0) THEN ((vt1.c1)IS NOT(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN LTRIM(vt1.c2, vt1.c0) THEN ((vt1.c1)IS NOT(rt0.c1)) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (vt1.c2) AND (rt0.c0)))) WHERE (((NULL)%(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (vt1.c2) AND (rt0.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (vt1.c2) AND (rt0.c0)))) WHERE (((NULL)%(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (vt1.c2) AND (rt0.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (((rt0.c1) BETWEEN (vt1.c2) AND (rt0.c0)))) WHERE (((NULL)%(rt0.c2 COLLATE RTRIM)));
