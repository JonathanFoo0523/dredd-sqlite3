-- Time: 2024/06/10 06:39:52
-- Database: database52
-- Database version: 3.40.0
-- seed value: 2064110952
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM vt1; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0.6889571918971481, NULL) WHERE vt1.c0; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=NULL, c0=0.6889571918971481; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.6889571918971481; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1sc') WHERE ((((vt0.c0)!=(vt0.c0)))<(CAST(vt0.c0 AS NUMERIC))); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN (vt0.c0)); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1610383884);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(NULL) WHERE (~ (vt0.c0)) COLLATE RTRIM; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0) BETWEEN (x'') AND (x'52fb'))))); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 1ms;
UPDATE OR FAIL vt1 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(-7.24700649E8) WHERE LOWER(LOWER(DISTINCT vt1.c0)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT (((((vt1.c0 IN (vt1.c0)))OR(COUNT(*))))OR(SUM(vt1.c0))) FROM vt1, vt0 WHERE (((NULL)LIKE('')) COLLATE NOCASE); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1942995987); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1189684431); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 450939536);\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
REINDEX; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
ANALYZE vt0; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1766622626);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
UPDATE vt1 SET (c0, c0)=(0.8983550453188961, x'') WHERE CASE WHEN UNLIKELY(vt1.c0) THEN (vt1.c0 IN ()) END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 1ms;
UPDATE OR ABORT vt1 SET (c0, c0)=(NULL, '-1100592863'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-244290766, c0='?FDE', c0='T}S0-K-8(' WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0)))==(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 450939536);\n; -- 0ms;
REINDEX  vt1; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'0097'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
UPDATE vt1 SET (c0)=(-71774247); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0='' WHERE CASE WHEN vt1.c0 COLLATE RTRIM THEN NULL ELSE vt1.c0 END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0)=(NULL) WHERE (+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, v0, rt0 NATURAL JOIN vt1 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY '-668285598' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 NATURAL JOIN vt1 ORDER BY '-668285598' COLLATE NOCASE ASC);
SELECT * FROM vt0, v0, rt0 NATURAL JOIN vt1 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY '-668285598' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 NATURAL JOIN vt1 ORDER BY '-668285598' COLLATE NOCASE ASC);
SELECT * FROM vt0, v0, rt0 NATURAL JOIN vt1 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY '-668285598' COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) AS BLOB));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((v0.c0)) BETWEEN (((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((vt0.c0, 0.8983550453188961, NULL))))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((vt0.c0, 0.8983550453188961, NULL))))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))))AND(rt0.c1)));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((v0.c0)) BETWEEN (((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((vt0.c0, 0.8983550453188961, NULL))))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))))AND(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((vt0.c0, 0.8983550453188961, NULL))))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))))AND(rt0.c1)));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((v0.c0)) BETWEEN (((((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, rt0.c2)) AND ((vt0.c0, 0.8983550453188961, NULL))))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))) ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))))AND(rt0.c1));
SELECT ALL COUNT(*) FROM v0, rt0, vt1, vt0 WHERE (((LIKELY(rt0.c0))AND(((vt0.c0)%(rt0.c1))))) ORDER BY ((('831961993')) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c0)%(rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0))AND(((vt0.c0)%(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt1, vt0 ORDER BY ((('831961993')) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c0)%(rt0.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt1, vt0 WHERE (((LIKELY(rt0.c0))AND(((vt0.c0)%(rt0.c1))))) ORDER BY ((('831961993')) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c0)%(rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0))AND(((vt0.c0)%(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt1, vt0 ORDER BY ((('831961993')) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c0)%(rt0.c1))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt1, vt0 WHERE (((LIKELY(rt0.c0))AND(((vt0.c0)%(rt0.c1))))) ORDER BY ((('831961993')) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c0)%(rt0.c1))))) ASC  NULLS LAST;
SELECT * FROM vt1, v0 INNER JOIN rt0 ON ((x'ad90')OR('-724700649')) FULL OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE BINARY WHERE (MIN(((((rt0.c0)AND(rt0.c1)))AND(v0.c0)), ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(v0.c0)))) ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, 'P' DESC, ((CASE WHEN vt1.c0 THEN rt0.c2 END)IS NOT(((v0.c0)!=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((((rt0.c0)AND(rt0.c1)))AND(v0.c0)), ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(v0.c0)))) IS TRUE)  as count FROM vt1, v0 INNER JOIN rt0 ON ((x'ad90')OR('-724700649')) FULL OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE BINARY ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, 'P' DESC, ((CASE WHEN vt1.c0 THEN rt0.c2 END)IS NOT(((v0.c0)!=(vt0.c0)))) ASC);
SELECT * FROM vt1, v0 INNER JOIN rt0 ON ((x'ad90')OR('-724700649')) FULL OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE BINARY WHERE (MIN(((((rt0.c0)AND(rt0.c1)))AND(v0.c0)), ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(v0.c0)))) ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, 'P' DESC, ((CASE WHEN vt1.c0 THEN rt0.c2 END)IS NOT(((v0.c0)!=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((((rt0.c0)AND(rt0.c1)))AND(v0.c0)), ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(v0.c0)))) IS TRUE)  as count FROM vt1, v0 INNER JOIN rt0 ON ((x'ad90')OR('-724700649')) FULL OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE BINARY ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, 'P' DESC, ((CASE WHEN vt1.c0 THEN rt0.c2 END)IS NOT(((v0.c0)!=(vt0.c0)))) ASC);
SELECT * FROM vt1, v0 INNER JOIN rt0 ON ((x'ad90')OR('-724700649')) FULL OUTER JOIN vt0 ON ((rt0.c0) ISNULL) COLLATE BINARY WHERE (MIN(((((rt0.c0)AND(rt0.c1)))AND(v0.c0)), ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(v0.c0)))) ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))*(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST, 'P' DESC, ((CASE WHEN vt1.c0 THEN rt0.c2 END)IS NOT(((v0.c0)!=(vt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOTNULL))OR((+ (rt0.c2)))))AND(((rt0.c1)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOTNULL))OR((+ (rt0.c2)))))AND(((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOTNULL))OR((+ (rt0.c2)))))AND(((rt0.c1)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOTNULL))OR((+ (rt0.c2)))))AND(((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOTNULL))OR((+ (rt0.c2)))))AND(((rt0.c1)*(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))) ASC;
SELECT ALL * FROM vt1, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((rt0.c1)OR('0.6889571918971481')) THEN '5U' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((rt0.c1)OR('0.6889571918971481')) THEN '5U' END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((rt0.c1)OR('0.6889571918971481')) THEN '5U' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((rt0.c1)OR('0.6889571918971481')) THEN '5U' END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((rt0.c1)OR('0.6889571918971481')) THEN '5U' END);
SELECT COUNT(*) FROM v0, vt0, vt1, rt0 WHERE (CAST((NOT (v0.c0)) AS INTEGER)) ORDER BY ((rt0.c2 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, vt1, rt0 ORDER BY ((rt0.c2 IN ()) IN ()));
SELECT COUNT(*) FROM v0, vt0, vt1, rt0 WHERE (CAST((NOT (v0.c0)) AS INTEGER)) ORDER BY ((rt0.c2 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, vt1, rt0 ORDER BY ((rt0.c2 IN ()) IN ()));
SELECT COUNT(*) FROM v0, vt0, vt1, rt0 WHERE (CAST((NOT (v0.c0)) AS INTEGER)) ORDER BY ((rt0.c2 IN ()) IN ());
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((NULL)=(rt0.c1)))+(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((NULL)=(rt0.c1)))+(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((NULL)=(rt0.c1)))+(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((NULL)=(rt0.c1)))+(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((NULL)=(rt0.c1)))+(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT) CROSS JOIN v0 ON (- ('1SC')) INNER JOIN vt0 ON (NOT (CAST(rt0.c0 AS INTEGER))) WHERE (CAST(NULL AS REAL)) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT) CROSS JOIN v0 ON (- ('1SC')) INNER JOIN vt0 ON (NOT (CAST(rt0.c0 AS INTEGER))) ORDER BY rt0.c1 DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT) CROSS JOIN v0 ON (- ('1SC')) INNER JOIN vt0 ON (NOT (CAST(rt0.c0 AS INTEGER))) WHERE (CAST(NULL AS REAL)) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT) CROSS JOIN v0 ON (- ('1SC')) INNER JOIN vt0 ON (NOT (CAST(rt0.c0 AS INTEGER))) ORDER BY rt0.c1 DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c0) IS TRUE) AS TEXT) CROSS JOIN v0 ON (- ('1SC')) INNER JOIN vt0 ON (NOT (CAST(rt0.c0 AS INTEGER))) WHERE (CAST(NULL AS REAL)) ORDER BY rt0.c1 DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN '款' WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c1)|(vt0.c0)) WHEN ((rt0.c1)<=(vt0.c0)) THEN STRFTIME(rt0.c1, rt0.c0, vt0.c0, rt0.c1, vt0.c0) ELSE ((((rt0.c1)OR(rt0.c0)))OR('*e\{u')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN '款' WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c1)|(vt0.c0)) WHEN ((rt0.c1)<=(vt0.c0)) THEN STRFTIME(rt0.c1, rt0.c0, vt0.c0, rt0.c1, vt0.c0) ELSE ((((rt0.c1)OR(rt0.c0)))OR('*e\{u')) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN '款' WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c1)|(vt0.c0)) WHEN ((rt0.c1)<=(vt0.c0)) THEN STRFTIME(rt0.c1, rt0.c0, vt0.c0, rt0.c1, vt0.c0) ELSE ((((rt0.c1)OR(rt0.c0)))OR('*e\{u')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN '款' WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c1)|(vt0.c0)) WHEN ((rt0.c1)<=(vt0.c0)) THEN STRFTIME(rt0.c1, rt0.c0, vt0.c0, rt0.c1, vt0.c0) ELSE ((((rt0.c1)OR(rt0.c0)))OR('*e\{u')) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN '款' WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c1)|(vt0.c0)) WHEN ((rt0.c1)<=(vt0.c0)) THEN STRFTIME(rt0.c1, rt0.c0, vt0.c0, rt0.c1, vt0.c0) ELSE ((((rt0.c1)OR(rt0.c0)))OR('*e\{u')) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE (- (vt0.c0))  WHEN 0.07888186978951739 THEN ((vt0.c0)>(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)%(vt0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE TRIM(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN 0.07888186978951739 THEN ((vt0.c0)>(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)%(vt0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE TRIM(vt0.c0) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE (- (vt0.c0))  WHEN 0.07888186978951739 THEN ((vt0.c0)>(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)%(vt0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE TRIM(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN 0.07888186978951739 THEN ((vt0.c0)>(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)%(vt0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE TRIM(vt0.c0) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE (- (vt0.c0))  WHEN 0.07888186978951739 THEN ((vt0.c0)>(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)%(vt0.c0)) WHEN (v0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) ELSE TRIM(vt0.c0) END);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM v0, vt1 CROSS JOIN vt0 ON (((rt0.c1 IN ())) NOT NULL) FULL OUTER JOIN rt0 ON rtreenode(((v0.c0)||(rt0.c0)), ((vt1.c0)IS NOT(vt1.c0))) WHERE ((((- (rt0.c1)))%(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))%(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON (((rt0.c1 IN ())) NOT NULL) FULL OUTER JOIN rt0 ON rtreenode(((v0.c0)||(rt0.c0)), ((vt1.c0)IS NOT(vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt1 CROSS JOIN vt0 ON (((rt0.c1 IN ())) NOT NULL) FULL OUTER JOIN rt0 ON rtreenode(((v0.c0)||(rt0.c0)), ((vt1.c0)IS NOT(vt1.c0))) WHERE ((((- (rt0.c1)))%(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))%(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN vt0 ON (((rt0.c1 IN ())) NOT NULL) FULL OUTER JOIN rt0 ON rtreenode(((v0.c0)||(rt0.c0)), ((vt1.c0)IS NOT(vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt1 CROSS JOIN vt0 ON (((rt0.c1 IN ())) NOT NULL) FULL OUTER JOIN rt0 ON rtreenode(((v0.c0)||(rt0.c0)), ((vt1.c0)IS NOT(vt1.c0))) WHERE ((((- (rt0.c1)))%(CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, vt1, rt0, v0 WHERE (((LOWER(DISTINCT vt0.c0)) ISNULL)) ORDER BY ((rt0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0, v0 ORDER BY ((rt0.c0) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0, v0 WHERE (((LOWER(DISTINCT vt0.c0)) ISNULL)) ORDER BY ((rt0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0, v0 ORDER BY ((rt0.c0) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0, v0 WHERE (((LOWER(DISTINCT vt0.c0)) ISNULL)) ORDER BY ((rt0.c0) IS TRUE)  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (CAST((+ (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST((+ (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST((+ (rt0.c0)) AS TEXT));
SELECT * FROM vt1, rt0 INNER JOIN vt0 ON ((v0.c0) ISNULL) RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT ((rt0.c0) NOTNULL)) WHERE (((NULL COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON ((v0.c0) ISNULL) RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT ((rt0.c0) NOTNULL)));
SELECT * FROM vt1, rt0 INNER JOIN vt0 ON ((v0.c0) ISNULL) RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT ((rt0.c0) NOTNULL)) WHERE (((NULL COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON ((v0.c0) ISNULL) RIGHT OUTER JOIN v0 ON TYPEOF(DISTINCT ((rt0.c0) NOTNULL)));
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((v0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT (((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, v0 WHERE (((((vt1.c0)LIKE(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (((vt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (((vt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, v0 WHERE (((((vt1.c0)LIKE(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (((vt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (((vt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, v0 WHERE (((((vt1.c0)LIKE(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (((vt0.c0)%(rt0.c2)))));
SELECT * FROM v0, vt1, vt0 WHERE (((LOWER(DISTINCT vt1.c0))<((vt0.c0 IN (v0.c0, v0.c0))))) ORDER BY STRFTIME(vt1.c0, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), (((v0.c0))!=((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt1.c0))<((vt0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY STRFTIME(vt1.c0, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), (((v0.c0))<>((vt0.c0)))));
SELECT * FROM v0, vt1, vt0 WHERE (((LOWER(DISTINCT vt1.c0))<((vt0.c0 IN (v0.c0, v0.c0))))) ORDER BY STRFTIME(vt1.c0, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), (((v0.c0))!=((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt1.c0))<((vt0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY STRFTIME(vt1.c0, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), (((v0.c0))<>((vt0.c0)))));
SELECT * FROM v0, vt1, vt0 WHERE (((LOWER(DISTINCT vt1.c0))<((vt0.c0 IN (v0.c0, v0.c0))))) ORDER BY STRFTIME(vt1.c0, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), (((v0.c0))!=((vt0.c0))));
SELECT COUNT(*) FROM v0, vt1, vt0, rt0 WHERE (((CASE vt0.c0  WHEN 0.7074401732906059 THEN v0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)<=(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN 0.7074401732906059 THEN v0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)<=(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT COUNT(*) FROM v0, vt1, vt0, rt0 WHERE (((CASE vt0.c0  WHEN 0.7074401732906059 THEN v0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)<=(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN 0.7074401732906059 THEN v0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)<=(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT COUNT(*) FROM v0, vt1, vt0, rt0 WHERE (((CASE vt0.c0  WHEN 0.7074401732906059 THEN v0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)<=(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)AND(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)AND(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c2)AND(((rt0.c2)<=(rt0.c2)))))OR(((rt0.c2) ISNULL))));
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) WHERE (STRFTIME(((('1950376562'))>((vt0.c0))), ((vt1.c0)%(vt0.c0)), LTRIM(rt0.c2), CAST(rt0.c1 AS TEXT), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))) ORDER BY ((rt0.c0 IN ()) IN ()), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((('1950376562'))>((vt0.c0))), ((vt1.c0)%(vt0.c0)), LTRIM(rt0.c2), CAST(rt0.c1 AS TEXT), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) ORDER BY ((rt0.c0 IN ()) IN ()), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) WHERE (STRFTIME(((('1950376562'))>((vt0.c0))), ((vt1.c0)%(vt0.c0)), LTRIM(rt0.c2), CAST(rt0.c1 AS TEXT), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))) ORDER BY ((rt0.c0 IN ()) IN ()), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((('1950376562'))>((vt0.c0))), ((vt1.c0)%(vt0.c0)), LTRIM(rt0.c2), CAST(rt0.c1 AS TEXT), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) ORDER BY ((rt0.c0 IN ()) IN ()), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((vt0.c0)IS NOT(vt1.c0)))) WHERE (STRFTIME(((('1950376562'))>((vt0.c0))), ((vt1.c0)%(vt0.c0)), LTRIM(rt0.c2), CAST(rt0.c1 AS TEXT), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))) ORDER BY ((rt0.c0 IN ()) IN ()), ((((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) IS FALSE)) BETWEEN ((- (v0.c0))) AND (UNLIKELY(vt0.c0))) WHERE (CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR('831961993')))AND(v0.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0)OR(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (NOT (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN TYPEOF(v0.c0) WHEN vt1.c0 THEN vt1.c0 END) ORDER BY (v0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR('831961993')))AND(v0.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0)OR(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (NOT (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN TYPEOF(v0.c0) WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) IS FALSE)) BETWEEN ((- (v0.c0))) AND (UNLIKELY(vt0.c0))) ORDER BY (v0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) IS FALSE)) BETWEEN ((- (v0.c0))) AND (UNLIKELY(vt0.c0))) WHERE (CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR('831961993')))AND(v0.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0)OR(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (NOT (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN TYPEOF(v0.c0) WHEN vt1.c0 THEN vt1.c0 END) ORDER BY (v0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR('831961993')))AND(v0.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0)OR(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (NOT (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN TYPEOF(v0.c0) WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) IS FALSE)) BETWEEN ((- (v0.c0))) AND (UNLIKELY(vt0.c0))) ORDER BY (v0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) IS FALSE)) BETWEEN ((- (v0.c0))) AND (UNLIKELY(vt0.c0))) WHERE (CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR('831961993')))AND(v0.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0)OR(vt0.c0)) THEN (~ (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (NOT (vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN TYPEOF(v0.c0) WHEN vt1.c0 THEN vt1.c0 END) ORDER BY (v0.c0 IN ()) COLLATE BINARY;
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN (- (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) ORDER BY '2108072169' ASC, CASE x''  WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN (- (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY '2108072169' ASC, CASE x''  WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) IS TRUE) END DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN (- (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) ORDER BY '2108072169' ASC, CASE x''  WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN (- (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY '2108072169' ASC, CASE x''  WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) IS TRUE) END DESC);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN (- (v0.c0)) ELSE ((v0.c0)>(v0.c0)) END) ORDER BY '2108072169' ASC, CASE x''  WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((v0.c0) IS TRUE) END DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN vt0.c0 THEN 0.85049007354421 END ELSE (('-71774247')+(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN vt0.c0 THEN 0.85049007354421 END ELSE (('-71774247')+(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN vt0.c0 THEN 0.85049007354421 END ELSE (('-71774247')+(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN vt0.c0 THEN 0.85049007354421 END ELSE (('-71774247')+(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN CASE WHEN vt0.c0 THEN 0.85049007354421 END ELSE (('-71774247')+(vt0.c0)) END);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (LOWER(DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (LOWER(DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (LOWER(DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT ALL * FROM rt0, vt1 CROSS JOIN vt0 ON (((- (vt0.c0))) ISNULL) WHERE (((((rt0.c2 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END)))OR(((NULL)<(rt0.c0))))) ORDER BY (((rt0.c1 IN (rt0.c2)))>=(((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END)))OR(((NULL)<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON (((- (vt0.c0))) ISNULL) ORDER BY (((rt0.c1 IN (rt0.c2)))>=(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0, vt1 CROSS JOIN vt0 ON (((- (vt0.c0))) ISNULL) WHERE (((((rt0.c2 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END)))OR(((NULL)<(rt0.c0))))) ORDER BY (((rt0.c1 IN (rt0.c2)))>=(((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END)))OR(((NULL)<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON (((- (vt0.c0))) ISNULL) ORDER BY (((rt0.c1 IN (rt0.c2)))>=(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0, vt1 CROSS JOIN vt0 ON (((- (vt0.c0))) ISNULL) WHERE (((((rt0.c2 COLLATE NOCASE)AND(CASE NULL  WHEN rt0.c1 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 END)))OR(((NULL)<(rt0.c0))))) ORDER BY (((rt0.c1 IN (rt0.c2)))>=(((rt0.c1) IS FALSE)));
SELECT ALL * FROM vt0, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (rt0.c0);
SELECT * FROM rt0, vt0, v0 WHERE ((((((((((rt0.c2 IN ()))OR(IFNULL(rt0.c2, vt0.c0))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))))AND(CAST(rt0.c0 AS NUMERIC))))AND(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2 IN ()))OR(IFNULL(rt0.c2, vt0.c0))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))))AND(CAST(rt0.c0 AS NUMERIC))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((((((((rt0.c2 IN ()))OR(IFNULL(rt0.c2, vt0.c0))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))))AND(CAST(rt0.c0 AS NUMERIC))))AND(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2 IN ()))OR(IFNULL(rt0.c2, vt0.c0))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))))AND(CAST(rt0.c0 AS NUMERIC))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((((((((rt0.c2 IN ()))OR(IFNULL(rt0.c2, vt0.c0))))AND(((((rt0.c0)OR(v0.c0)))OR(rt0.c1)))))AND(CAST(rt0.c0 AS NUMERIC))))AND(((v0.c0) NOT NULL))));
SELECT * FROM rt0, vt0, vt1, v0 WHERE (COALESCE(vt1.c0 COLLATE BINARY, LOWER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt1.c0 COLLATE BINARY, LOWER(rt0.c2))) IS TRUE)  as count FROM rt0, vt0, vt1, v0);
SELECT * FROM rt0, vt0, vt1, v0 WHERE (COALESCE(vt1.c0 COLLATE BINARY, LOWER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt1.c0 COLLATE BINARY, LOWER(rt0.c2))) IS TRUE)  as count FROM rt0, vt0, vt1, v0);
SELECT * FROM rt0, vt0, vt1, v0 WHERE (COALESCE(vt1.c0 COLLATE BINARY, LOWER(rt0.c2)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)OR('-1100592863')))AND(((vt0.c0) NOT NULL))) LEFT OUTER JOIN rt0 ON (((((0.6889571918971481)) NOT BETWEEN (('')) AND ((rt0.c1))))OR((((vt1.c0, rt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((vt0.c0, vt0.c0, rt0.c0))))) LEFT OUTER JOIN v0 ON (NOT (v0.c0)) WHERE ((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END, ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)), ((1950376562) NOT NULL))) AND ((LIKELY(DISTINCT 1.766622626E9), ((((v0.c0)AND(rt0.c2)))AND(v0.c0)), ((vt1.c0) NOT NULL))))) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END)*(((((((((v0.c0)AND(rt0.c2)))OR(0xffffffffae3e2e29)))OR(vt1.c0)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END, ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)), ((1950376562) NOT NULL))) AND ((LIKELY(DISTINCT 1.766622626E9), ((((v0.c0)AND(rt0.c2)))AND(v0.c0)), ((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)OR('-1100592863')))AND(((vt0.c0) NOT NULL))) LEFT OUTER JOIN rt0 ON (((((0.6889571918971481)) NOT BETWEEN (('')) AND ((rt0.c1))))OR((((vt1.c0, rt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((vt0.c0, vt0.c0, rt0.c0))))) LEFT OUTER JOIN v0 ON (NOT (v0.c0)) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END)*(((((((((v0.c0)AND(rt0.c2)))OR(0xffffffffae3e2e29)))OR(vt1.c0)))AND(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)OR('-1100592863')))AND(((vt0.c0) NOT NULL))) LEFT OUTER JOIN rt0 ON (((((0.6889571918971481)) NOT BETWEEN (('')) AND ((rt0.c1))))OR((((vt1.c0, rt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((vt0.c0, vt0.c0, rt0.c0))))) LEFT OUTER JOIN v0 ON (NOT (v0.c0)) WHERE ((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END, ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)), ((1950376562) NOT NULL))) AND ((LIKELY(DISTINCT 1.766622626E9), ((((v0.c0)AND(rt0.c2)))AND(v0.c0)), ((vt1.c0) NOT NULL))))) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END)*(((((((((v0.c0)AND(rt0.c2)))OR(0xffffffffae3e2e29)))OR(vt1.c0)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END, ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)), ((1950376562) NOT NULL))) AND ((LIKELY(DISTINCT 1.766622626E9), ((((v0.c0)AND(rt0.c2)))AND(v0.c0)), ((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)OR('-1100592863')))AND(((vt0.c0) NOT NULL))) LEFT OUTER JOIN rt0 ON (((((0.6889571918971481)) NOT BETWEEN (('')) AND ((rt0.c1))))OR((((vt1.c0, rt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((vt0.c0, vt0.c0, rt0.c0))))) LEFT OUTER JOIN v0 ON (NOT (v0.c0)) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END)*(((((((((v0.c0)AND(rt0.c2)))OR(0xffffffffae3e2e29)))OR(vt1.c0)))AND(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (vt1.c0) ORDER BY CASE (NOT (v0.c0))  WHEN v0.c0 COLLATE BINARY THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.41601402707256097 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE (NOT (v0.c0))  WHEN v0.c0 COLLATE BINARY THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.41601402707256097 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (vt1.c0) ORDER BY CASE (NOT (v0.c0))  WHEN v0.c0 COLLATE BINARY THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.41601402707256097 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE (NOT (v0.c0))  WHEN v0.c0 COLLATE BINARY THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.41601402707256097 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (vt1.c0) ORDER BY CASE (NOT (v0.c0))  WHEN v0.c0 COLLATE BINARY THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.41601402707256097 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END;
SELECT * FROM vt0, v0, vt1, rt0 WHERE (LIKE(vt0.c0, rt0.c0, '{') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c0, rt0.c0, '{') COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt1, rt0);
SELECT * FROM vt0, v0, vt1, rt0 WHERE (LIKE(vt0.c0, rt0.c0, '{') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c0, rt0.c0, '{') COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt1, rt0);
SELECT * FROM vt0, v0, vt1, rt0 WHERE (LIKE(vt0.c0, rt0.c0, '{') COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE ((('') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('') NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((('') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('') NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((('') NOTNULL));
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN (- (vt0.c0)) WHEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS REAL) END) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN (- (vt0.c0)) WHEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN (- (vt0.c0)) WHEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS REAL) END) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN (- (vt0.c0)) WHEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN (- (vt0.c0)) WHEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS REAL) END) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ('0.8983550453188961'))) ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))==(LIKELY(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ('0.8983550453188961'))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))=(LIKELY(rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ('0.8983550453188961'))) ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))==(LIKELY(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ('0.8983550453188961'))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))=(LIKELY(rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ('0.8983550453188961'))) ORDER BY ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) COLLATE NOCASE, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))==(LIKELY(rt0.c1)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((rt0.c1 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((rt0.c1 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (v0.c0) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) IS FALSE))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(CASE WHEN v0.c0 THEN NULL END))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) IS FALSE))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(CASE WHEN v0.c0 THEN NULL END))) IS TRUE)  as count FROM v0 ORDER BY ''  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) IS FALSE))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(CASE WHEN v0.c0 THEN NULL END))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) IS FALSE))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(CASE WHEN v0.c0 THEN NULL END))) IS TRUE)  as count FROM v0 ORDER BY ''  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) IS FALSE))AND((v0.c0 IN (v0.c0, v0.c0)))))AND(CASE WHEN v0.c0 THEN NULL END))) ORDER BY ''  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)/(v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.41601402707256097 END END) ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-724700649 IN ()) THEN NULL WHEN (+ (v0.c0)) THEN ABS(v0.c0) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, 0.3254831405877009;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)/(v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.41601402707256097 END END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-724700649 IN ()) THEN NULL WHEN (+ (v0.c0)) THEN ABS(v0.c0) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, 0.3254831405877009);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)/(v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.41601402707256097 END END) ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-724700649 IN ()) THEN NULL WHEN (+ (v0.c0)) THEN ABS(v0.c0) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, 0.3254831405877009;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)/(v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.41601402707256097 END END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-724700649 IN ()) THEN NULL WHEN (+ (v0.c0)) THEN ABS(v0.c0) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, 0.3254831405877009);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)/(v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE 0.41601402707256097 END END) ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN (-724700649 IN ()) THEN NULL WHEN (+ (v0.c0)) THEN ABS(v0.c0) ELSE ((v0.c0) NOT NULL) END  NULLS FIRST, 0.3254831405877009;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))|((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))|((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))|((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))|((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))|((vt1.c0 IN ()))));
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt1 ON ((v0.c0)&(rt0.c1)) COLLATE BINARY WHERE (((((x'') ISNULL)) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((((rt0.c1)AND('-2093924235')))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((x'') ISNULL)) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((((rt0.c1)AND('-2093924235')))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt1 ON ((v0.c0)&(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt1 ON ((v0.c0)&(rt0.c1)) COLLATE BINARY WHERE (((((x'') ISNULL)) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((((rt0.c1)AND('-2093924235')))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((x'') ISNULL)) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((((rt0.c1)AND('-2093924235')))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt1 ON ((v0.c0)&(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt1 ON ((v0.c0)&(rt0.c1)) COLLATE BINARY WHERE (((((x'') ISNULL)) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((((rt0.c1)AND('-2093924235')))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (vt0.c0)));
SELECT ALL * FROM v0, vt1, rt0 WHERE (CASE WHEN rt0.c0 THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL * FROM v0, vt1, rt0 WHERE (CASE WHEN rt0.c0 THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT ALL * FROM v0, vt1, rt0 WHERE (CASE WHEN rt0.c0 THEN (rt0.c2 IN ()) END);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((CASE WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))) WHERE (NULLIF(((rt0.c0)%(rt0.c2)), ((x'8392')%(rt0.c2)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c0)%(rt0.c2)), ((x'8392')%(rt0.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((CASE WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))) ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((CASE WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))) WHERE (NULLIF(((rt0.c0)%(rt0.c2)), ((x'8392')%(rt0.c2)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c0)%(rt0.c2)), ((x'8392')%(rt0.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((CASE WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))) ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((CASE WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))) WHERE (NULLIF(((rt0.c0)%(rt0.c2)), ((x'8392')%(rt0.c2)))) ORDER BY rt0.c1  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1)&(rt0.c0)) IN (CAST(rt0.c1 AS TEXT), (~ (rt0.c2)))) WHERE ((+ (rt0.c0 COLLATE BINARY))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1)&(rt0.c0)) IN (CAST(rt0.c1 AS TEXT), (~ (rt0.c2)))) ORDER BY vt1.c0);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1)&(rt0.c0)) IN (CAST(rt0.c1 AS TEXT), (~ (rt0.c2)))) WHERE ((+ (rt0.c0 COLLATE BINARY))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1)&(rt0.c0)) IN (CAST(rt0.c1 AS TEXT), (~ (rt0.c2)))) ORDER BY vt1.c0);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((rt0.c1)&(rt0.c0)) IN (CAST(rt0.c1 AS TEXT), (~ (rt0.c2)))) WHERE ((+ (rt0.c0 COLLATE BINARY))) ORDER BY vt1.c0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) ORDER BY ((HEX(rt0.c1)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((HEX(rt0.c1)) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) ORDER BY ((HEX(rt0.c1)) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((HEX(rt0.c1)) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY) ORDER BY ((HEX(rt0.c1)) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)==(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE 0x1c8e3e9c END WHEN ((0.9263771597342229) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN 0.46269431645502357 ELSE UNLIKELY(DISTINCT v0.c0) END) ORDER BY ((((8.31961993E8) NOTNULL)) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0)%(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)=(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE 0x1c8e3e9c END WHEN ((0.9263771597342229) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN 0.46269431645502357 ELSE UNLIKELY(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY ((((8.31961993E8) NOTNULL)) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0)%(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)==(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE 0x1c8e3e9c END WHEN ((0.9263771597342229) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN 0.46269431645502357 ELSE UNLIKELY(DISTINCT v0.c0) END) ORDER BY ((((8.31961993E8) NOTNULL)) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0)%(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)=(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE 0x1c8e3e9c END WHEN ((0.9263771597342229) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN 0.46269431645502357 ELSE UNLIKELY(DISTINCT v0.c0) END) IS TRUE)  as count FROM v0 ORDER BY ((((8.31961993E8) NOTNULL)) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0)%(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)==(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE 0x1c8e3e9c END WHEN ((0.9263771597342229) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN 0.46269431645502357 ELSE UNLIKELY(DISTINCT v0.c0) END) ORDER BY ((((8.31961993E8) NOTNULL)) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0)%(v0.c0)))) DESC;
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (vt1.c0 IN ()) WHERE (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))OR(((1789119428)-(v0.c0)))))OR(((v0.c0)-(v0.c0)))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON (vt1.c0 IN ()) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))OR(((1789119428)-(v0.c0)))))OR(((v0.c0)-(v0.c0)))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (vt1.c0 IN ()) WHERE (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))OR(((1789119428)-(v0.c0)))))OR(((v0.c0)-(v0.c0)))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON (vt1.c0 IN ()) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))OR(((1789119428)-(v0.c0)))))OR(((v0.c0)-(v0.c0)))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (vt1.c0 IN ()) WHERE (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))OR(((1789119428)-(v0.c0)))))OR(((v0.c0)-(v0.c0)))) DESC  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE) DESC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt1 WHERE ((CAST(rt0.c2 AS NUMERIC) IN (rt0.c0 COLLATE RTRIM, (rt0.c1 IN ())))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c1 IN ()) ELSE CAST(NULL AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS NUMERIC) IN (rt0.c0 COLLATE RTRIM, (rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c1 IN ()) ELSE CAST(NULL AS REAL) END DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((CAST(rt0.c2 AS NUMERIC) IN (rt0.c0 COLLATE RTRIM, (rt0.c1 IN ())))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c1 IN ()) ELSE CAST(NULL AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS NUMERIC) IN (rt0.c0 COLLATE RTRIM, (rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c1 IN ()) ELSE CAST(NULL AS REAL) END DESC);
SELECT ALL * FROM v0, rt0, vt1 WHERE ((CAST(rt0.c2 AS NUMERIC) IN (rt0.c0 COLLATE RTRIM, (rt0.c1 IN ())))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c1 IN ()) ELSE CAST(NULL AS REAL) END DESC;
SELECT ALL * FROM vt1, v0, rt0 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 END THEN v0.c0 COLLATE NOCASE ELSE ((rt0.c1)<(0.14781368842191311)) END) ORDER BY (((vt1.c0)<=(rt0.c0)) IN ((+ (NULL))))  NULLS LAST, (((+ (rt0.c2)))>>(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS BLOB)  WHEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 END THEN v0.c0 COLLATE NOCASE ELSE ((rt0.c1)<(0.14781368842191311)) END) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (((vt1.c0)<=(rt0.c0)) IN ((+ (NULL))))  NULLS LAST, (((+ (rt0.c2)))>>(rt0.c1)) ASC);
SELECT ALL * FROM vt1, v0, rt0 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 END THEN v0.c0 COLLATE NOCASE ELSE ((rt0.c1)<(0.14781368842191311)) END) ORDER BY (((vt1.c0)<=(rt0.c0)) IN ((+ (NULL))))  NULLS LAST, (((+ (rt0.c2)))>>(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS BLOB)  WHEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 END THEN v0.c0 COLLATE NOCASE ELSE ((rt0.c1)<(0.14781368842191311)) END) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY (((vt1.c0)<=(rt0.c0)) IN ((+ (NULL))))  NULLS LAST, (((+ (rt0.c2)))>>(rt0.c1)) ASC);
SELECT ALL * FROM vt1, v0, rt0 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 END THEN v0.c0 COLLATE NOCASE ELSE ((rt0.c1)<(0.14781368842191311)) END) ORDER BY (((vt1.c0)<=(rt0.c0)) IN ((+ (NULL))))  NULLS LAST, (((+ (rt0.c2)))>>(rt0.c1)) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0 IN (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0 IN (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((v0.c0 IN (rt0.c2))) IS TRUE));
SELECT * FROM vt0, v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c2)OR(((rt0.c2) IS FALSE))))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY 0.622395169257713 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(((rt0.c2) IS FALSE))))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY 0.622395169257713 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c2)OR(((rt0.c2) IS FALSE))))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY 0.622395169257713 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(((rt0.c2) IS FALSE))))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY 0.622395169257713 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((rt0.c2)OR(((rt0.c2) IS FALSE))))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY 0.622395169257713 ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt1, vt0);
SELECT ALL * FROM rt0, v0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt1, vt0);
SELECT ALL * FROM rt0, v0, vt1, vt0 WHERE (NULL);
SELECT ALL * FROM rt0 INNER JOIN v0 ON '683424084' COLLATE RTRIM FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END COLLATE BINARY CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY WHERE (v0.c0) ORDER BY (~ (HEX(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN v0 ON '683424084' COLLATE RTRIM FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END COLLATE BINARY CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY ORDER BY (~ (HEX(v0.c0))) DESC);
SELECT ALL * FROM rt0 INNER JOIN v0 ON '683424084' COLLATE RTRIM FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END COLLATE BINARY CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY WHERE (v0.c0) ORDER BY (~ (HEX(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN v0 ON '683424084' COLLATE RTRIM FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END COLLATE BINARY CROSS JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE BINARY ORDER BY (~ (HEX(v0.c0))) DESC);
SELECT COUNT(*) FROM v0 WHERE (((((NOT (v0.c0))))<(((((v0.c0))<>((v0.c0))))))) ORDER BY ((CAST(1610383884 AS BLOB)) NOTNULL)  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NOT (v0.c0))))<(((((v0.c0))!=((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(1610383884 AS BLOB)) NOTNULL)  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((NOT (v0.c0))))<(((((v0.c0))<>((v0.c0))))))) ORDER BY ((CAST(1610383884 AS BLOB)) NOTNULL)  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NOT (v0.c0))))<(((((v0.c0))!=((v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(1610383884 AS BLOB)) NOTNULL)  NULLS LAST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((NOT (v0.c0))))<(((((v0.c0))<>((v0.c0))))))) ORDER BY ((CAST(1610383884 AS BLOB)) NOTNULL)  NULLS LAST, v0.c0  NULLS LAST;
SELECT * FROM vt1, vt0, rt0 WHERE (((CHANGES()) BETWEEN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CHANGES()) BETWEEN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((CHANGES()) BETWEEN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CHANGES()) BETWEEN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((CHANGES()) BETWEEN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (((CAST(vt0.c0 AS REAL)) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt1, vt0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))%(((vt0.c0) BETWEEN ('') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))%(((vt0.c0) BETWEEN ('') AND (rt0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))%(((vt0.c0) BETWEEN ('') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))%(((vt0.c0) BETWEEN ('') AND (rt0.c0))))) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))%(((vt0.c0) BETWEEN ('') AND (rt0.c0)))));
SELECT * FROM rt0 WHERE (((x'b17a')OR(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'b17a')OR(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'b17a')OR(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'b17a')OR(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'b17a')OR(((rt0.c0) NOTNULL))));
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2))==((rt0.c0))))*(ROUND(rt0.c2, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c0))))*(ROUND(rt0.c2, vt1.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2))==((rt0.c0))))*(ROUND(rt0.c2, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c0))))*(ROUND(rt0.c2, vt1.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2))==((rt0.c0))))*(ROUND(rt0.c2, vt1.c0))));
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))>>(((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))>>(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))>>(((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))>>(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))>>(((vt1.c0)IS(vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c0 AS INTEGER))) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c0 AS INTEGER))) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT CAST(vt0.c0 AS INTEGER))) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((rt0.c1 IN ()))>(v0.c0))) ORDER BY TRIM(DISTINCT CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))>(v0.c0))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY TRIM(DISTINCT CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((rt0.c1 IN ()))>(v0.c0))) ORDER BY TRIM(DISTINCT CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))>(v0.c0))) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY TRIM(DISTINCT CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE ((((rt0.c1 IN ()))>(v0.c0))) ORDER BY TRIM(DISTINCT CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE (rt0.c0) ORDER BY (~ ((((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, v0, vt1 ORDER BY (~ ((((vt1.c0))>=((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE (rt0.c0) ORDER BY (~ ((((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, v0, vt1 ORDER BY (~ ((((vt1.c0))>=((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE (rt0.c0) ORDER BY (~ ((((vt1.c0))>=((vt1.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) ORDER BY ((((v0.c0 COLLATE BINARY)AND(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE BINARY)AND(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) ORDER BY ((((v0.c0 COLLATE BINARY)AND(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE BINARY)AND(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ())) ORDER BY ((((v0.c0 COLLATE BINARY)AND(CAST(v0.c0 AS INTEGER))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC;
SELECT COUNT(*) FROM vt0, rt0, v0 NATURAL JOIN vt1 WHERE (((rt0.c2 COLLATE NOCASE)+(CASE WHEN -1526147306 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN '786746743' WHEN vt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)+(CASE WHEN -1526147306 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN '786746743' WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, rt0, v0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, rt0, v0 NATURAL JOIN vt1 WHERE (((rt0.c2 COLLATE NOCASE)+(CASE WHEN -1526147306 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN '786746743' WHEN vt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)+(CASE WHEN -1526147306 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN '786746743' WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, rt0, v0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0, rt0, v0 NATURAL JOIN vt1 WHERE (((rt0.c2 COLLATE NOCASE)+(CASE WHEN -1526147306 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN vt1.c0 THEN '786746743' WHEN vt0.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE ((((x'3fbc', rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN rt0.c1 THEN 0.3479743408870287 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((x''))))) AND ((((rt0.c0)LIKE('683424084')), CASE 'R'  WHEN rt0.c2 THEN rt0.c1 END, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((x'3fbc', rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN rt0.c1 THEN 0.3479743408870287 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((x''))))) AND ((((rt0.c0)LIKE('683424084')), CASE 'R'  WHEN rt0.c2 THEN rt0.c1 END, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((x'3fbc', rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN rt0.c1 THEN 0.3479743408870287 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((x''))))) AND ((((rt0.c0)LIKE('683424084')), CASE 'R'  WHEN rt0.c2 THEN rt0.c1 END, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((x'3fbc', rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN rt0.c1 THEN 0.3479743408870287 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((x''))))) AND ((((rt0.c0)LIKE('683424084')), CASE 'R'  WHEN rt0.c2 THEN rt0.c1 END, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((x'3fbc', rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY, CASE rt0.c0  WHEN rt0.c1 THEN 0.3479743408870287 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((x''))))) AND ((((rt0.c0)LIKE('683424084')), CASE 'R'  WHEN rt0.c2 THEN rt0.c1 END, ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))))));
SELECT ALL * FROM v0, rt0, vt1, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0);
SELECT ALL * FROM v0, rt0, vt1, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0);
SELECT ALL * FROM v0, rt0, vt1, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON CAST((rt0.c1 IN ()) AS TEXT) WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((512762956 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((512762956 IN ()))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON CAST((rt0.c1 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON CAST((rt0.c1 IN ()) AS TEXT) WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((512762956 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((512762956 IN ()))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON CAST((rt0.c1 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON CAST((rt0.c1 IN ()) AS TEXT) WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((512762956 IN ())))));
SELECT * FROM v0, vt1, rt0 WHERE (((0.9706166226135623) ISNULL)) ORDER BY CASE (((rt0.c0, rt0.c2, rt0.c1))!=((v0.c0, v0.c0, rt0.c0)))  WHEN ((((rt0.c1)AND(vt1.c0)))OR(rt0.c1)) THEN ((((rt0.c2)AND(rt0.c2)))AND(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ((((0.9706166226135623) ISNULL)) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CASE (((rt0.c0, rt0.c2, rt0.c1))!=((v0.c0, v0.c0, rt0.c0)))  WHEN ((((rt0.c1)AND(vt1.c0)))OR(rt0.c1)) THEN ((((rt0.c2)AND(rt0.c2)))AND(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END DESC);
SELECT * FROM v0, vt1, rt0 WHERE (((0.9706166226135623) ISNULL)) ORDER BY CASE (((rt0.c0, rt0.c2, rt0.c1))!=((v0.c0, v0.c0, rt0.c0)))  WHEN ((((rt0.c1)AND(vt1.c0)))OR(rt0.c1)) THEN ((((rt0.c2)AND(rt0.c2)))AND(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END DESC;
SELECT SUM(count) FROM (SELECT ((((0.9706166226135623) ISNULL)) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY CASE (((rt0.c0, rt0.c2, rt0.c1))!=((v0.c0, v0.c0, rt0.c0)))  WHEN ((((rt0.c1)AND(vt1.c0)))OR(rt0.c1)) THEN ((((rt0.c2)AND(rt0.c2)))AND(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END DESC);
SELECT * FROM v0, vt1, rt0 WHERE (((0.9706166226135623) ISNULL)) ORDER BY CASE (((rt0.c0, rt0.c2, rt0.c1))!=((v0.c0, v0.c0, rt0.c0)))  WHEN ((((rt0.c1)AND(vt1.c0)))OR(rt0.c1)) THEN ((((rt0.c2)AND(rt0.c2)))AND(v0.c0)) ELSE CAST(v0.c0 AS TEXT) END DESC;
SELECT * FROM vt0, v0 WHERE ((((NOT (v0.c0)))AND(((v0.c0)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))AND(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((NOT (v0.c0)))AND(((v0.c0)>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))AND(((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((NOT (v0.c0)))AND(((v0.c0)>=(v0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (TRIM(vt0.c0, vt0.c0)))) ORDER BY 0.5301741010906732  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (TRIM(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.5301741010906732  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (TRIM(vt0.c0, vt0.c0)))) ORDER BY 0.5301741010906732  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (TRIM(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.5301741010906732  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (TRIM(vt0.c0, vt0.c0)))) ORDER BY 0.5301741010906732  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (json_array_length(rt0.c1) COLLATE RTRIM) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (json_array_length(rt0.c1) COLLATE RTRIM) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1 WHERE (json_array_length(rt0.c1) COLLATE RTRIM) ORDER BY v0.c0  NULLS LAST;
SELECT * FROM vt1, v0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT COUNT(*) FROM vt0, rt0, vt1, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, vt1, v0);
SELECT COUNT(*) FROM vt0, rt0, vt1, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, vt1, v0);
SELECT COUNT(*) FROM vt0, rt0, vt1, v0 WHERE (rt0.c2);
SELECT * FROM vt1, vt0, rt0, v0 WHERE ((((((vt1.c0 IN (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((vt1.c0)<<(rt0.c0))))) ORDER BY '' ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))>=((((rt0.c1)>>(rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((vt1.c0)<<(rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, v0 ORDER BY '' ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))>=((((rt0.c1)>>(rt0.c2))))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, v0 WHERE ((((((vt1.c0 IN (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((vt1.c0)<<(rt0.c0))))) ORDER BY '' ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))>=((((rt0.c1)>>(rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((vt1.c0)<<(rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, v0 ORDER BY '' ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))>=((((rt0.c1)>>(rt0.c2))))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, v0 WHERE ((((((vt1.c0 IN (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((vt1.c0)<<(rt0.c0))))) ORDER BY '' ASC  NULLS FIRST, (((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))))>=((((rt0.c1)>>(rt0.c2))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c2)OR(rt0.c2)))AND(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE '-1526147306' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c2)))AND(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE '-1526147306' END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c2)OR(rt0.c2)))AND(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE '-1526147306' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c2)))AND(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE '-1526147306' END))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c2)OR(rt0.c2)))AND(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE '-1526147306' END)));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((rt0.c1) IS TRUE)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((rt0.c1) IS TRUE)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((rt0.c1) IS TRUE)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0 IN (vt1.c0))))<>((vt0.c0)))) ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))<=(CASE WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN (vt1.c0))))!=((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))<=(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0 IN (vt1.c0))))<>((vt0.c0)))) ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))<=(CASE WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN (vt1.c0))))!=((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))<=(CASE WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0 IN (vt1.c0))))<>((vt0.c0)))) ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))<=(CASE WHEN vt1.c0 THEN vt1.c0 END));
SELECT * FROM vt1, vt0, v0, rt0 WHERE (0.5301741010906732) ORDER BY CAST(((vt0.c0) IS FALSE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((0.5301741010906732) IS TRUE)  as count FROM vt1, vt0, v0, rt0 ORDER BY CAST(((vt0.c0) IS FALSE) AS TEXT) ASC);
SELECT * FROM vt1, vt0, v0, rt0 WHERE (0.5301741010906732) ORDER BY CAST(((vt0.c0) IS FALSE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((0.5301741010906732) IS TRUE)  as count FROM vt1, vt0, v0, rt0 ORDER BY CAST(((vt0.c0) IS FALSE) AS TEXT) ASC);
SELECT * FROM vt1, vt0, v0, rt0 WHERE (0.5301741010906732) ORDER BY CAST(((vt0.c0) IS FALSE) AS TEXT) ASC;
SELECT * FROM rt0, vt1 WHERE ((NOT (((rt0.c2)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((NOT (((rt0.c2)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)*(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((NOT (((rt0.c2)*(rt0.c0)))));
SELECT * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))/(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -300352875 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))/(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -300352875 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))/(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -300352875 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))/(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -300352875 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))/(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -300352875 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END ASC;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT * FROM vt1 NOT INDEXED, v0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, v0.c0, '271629490'))<((0xffffffffcbf38d07, vt1.c0, v0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffffba2a9e99)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffffba2a9e99)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, v0.c0, '271629490'))<((0Xffffffffcbf38d07, vt1.c0, v0.c0)))));
SELECT * FROM vt1 NOT INDEXED, v0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, v0.c0, '271629490'))<((0xffffffffcbf38d07, vt1.c0, v0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffffba2a9e99)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffffba2a9e99)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, v0.c0, '271629490'))<((0Xffffffffcbf38d07, vt1.c0, v0.c0)))));
SELECT * FROM vt1 NOT INDEXED, v0 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (((vt0.c0, v0.c0, '271629490'))<((0xffffffffcbf38d07, vt1.c0, v0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffffba2a9e99)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE));
SELECT * FROM v0, rt0, vt0, vt1 WHERE (((((v0.c0)/(v0.c0))) NOT BETWEEN (((rt0.c0)-(vt1.c0))) AND (vt1.c0))) ORDER BY TYPEOF(((v0.c0)<<('-1208074891'))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0))) NOT BETWEEN (((rt0.c0)-(vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM v0, rt0, vt0, vt1 ORDER BY TYPEOF(((v0.c0)<<('-1208074891'))) ASC);
SELECT * FROM v0, rt0, vt0, vt1 WHERE (((((v0.c0)/(v0.c0))) NOT BETWEEN (((rt0.c0)-(vt1.c0))) AND (vt1.c0))) ORDER BY TYPEOF(((v0.c0)<<('-1208074891'))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)/(v0.c0))) NOT BETWEEN (((rt0.c0)-(vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM v0, rt0, vt0, vt1 ORDER BY TYPEOF(((v0.c0)<<('-1208074891'))) ASC);
SELECT * FROM v0, rt0, vt0, vt1 WHERE (((((v0.c0)/(v0.c0))) NOT BETWEEN (((rt0.c0)-(vt1.c0))) AND (vt1.c0))) ORDER BY TYPEOF(((v0.c0)<<('-1208074891'))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN (rt0.c1 IN ()) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((((((((x'ca44')OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) END) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS INTEGER)  WHEN (rt0.c1 IN ()) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((((((((x'ca44')OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY x'');
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN (rt0.c1 IN ()) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((((((((x'ca44')OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) END) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS INTEGER)  WHEN (rt0.c1 IN ()) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((((((((x'ca44')OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY x'');
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN (rt0.c1 IN ()) THEN ((((rt0.c0)AND(v0.c0)))OR(rt0.c2)) ELSE ((((((((x'ca44')OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)) END) ORDER BY x'';
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT * FROM vt1, rt0, v0 WHERE (((CAST(rt0.c1 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (((CAST(rt0.c1 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (((CAST(rt0.c1 AS REAL)) IS FALSE));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER));
SELECT * FROM vt1, rt0, v0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0, v0, vt0);
SELECT * FROM vt1, rt0, v0, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0, v0, vt0);
SELECT * FROM vt1, rt0, v0, vt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ())) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (((((vt1.c0)OR(vt0.c0)))AND(v0.c0)))) ASC  NULLS LAST, (((- (vt1.c0)))|(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (((((vt1.c0)OR(vt0.c0)))AND(v0.c0)))) ASC  NULLS LAST, (((- (vt1.c0)))|(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ())) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (((((vt1.c0)OR(vt0.c0)))AND(v0.c0)))) ASC  NULLS LAST, (((- (vt1.c0)))|(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (((((vt1.c0)OR(vt0.c0)))AND(v0.c0)))) ASC  NULLS LAST, (((- (vt1.c0)))|(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ())) ORDER BY ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((NULL IN ())) AND (((((vt1.c0)OR(vt0.c0)))AND(v0.c0)))) ASC  NULLS LAST, (((- (vt1.c0)))|(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END))  NULLS FIRST;
SELECT ALL * FROM vt1, v0, rt0 WHERE (UPPER(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY UPPER((rt0.c0 IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((UPPER(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY UPPER((rt0.c0 IN (rt0.c1))));
SELECT ALL * FROM vt1, v0, rt0 WHERE (UPPER(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY UPPER((rt0.c0 IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((UPPER(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY UPPER((rt0.c0 IN (rt0.c1))));
SELECT ALL * FROM vt1, v0, rt0 WHERE (UPPER(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ORDER BY UPPER((rt0.c0 IN (rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN (rt0.c2))  WHEN ((rt0.c2)&(rt0.c2)) THEN (((NULL, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2)) AND ((NULL, rt0.c0, rt0.c0, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN LIKELIHOOD(rt0.c1, 0.8226053948713559) ELSE (rt0.c2 IN ()) END) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE UNLIKELY(rt0.c1) END;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN (rt0.c2))  WHEN ((rt0.c2)&(rt0.c2)) THEN (((NULL, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2)) AND ((NULL, rt0.c0, rt0.c0, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN LIKELIHOOD(rt0.c1, 0.8226053948713559) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE UNLIKELY(rt0.c1) END);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN (rt0.c2))  WHEN ((rt0.c2)&(rt0.c2)) THEN (((NULL, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2)) AND ((NULL, rt0.c0, rt0.c0, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN LIKELIHOOD(rt0.c1, 0.8226053948713559) ELSE (rt0.c2 IN ()) END) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE UNLIKELY(rt0.c1) END;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c0 IN (rt0.c2))  WHEN ((rt0.c2)&(rt0.c2)) THEN (((NULL, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2)) AND ((NULL, rt0.c0, rt0.c0, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN LIKELIHOOD(rt0.c1, 0.8226053948713559) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE UNLIKELY(rt0.c1) END);
SELECT COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN (rt0.c2))  WHEN ((rt0.c2)&(rt0.c2)) THEN (((NULL, rt0.c0, rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2)) AND ((NULL, rt0.c0, rt0.c0, rt0.c0, rt0.c2))) WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)) WHEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) THEN LIKELIHOOD(rt0.c1, 0.8226053948713559) ELSE (rt0.c2 IN ()) END) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE UNLIKELY(rt0.c1) END;
SELECT ALL COUNT(*) FROM vt1, v0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0) NOT NULL) AS REAL) FULL OUTER JOIN rt0 ON ((((v0.c0)IS(vt1.c0)))%(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0) NOT NULL) AS REAL) FULL OUTER JOIN rt0 ON ((((v0.c0)IS(vt1.c0)))%(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1, v0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0) NOT NULL) AS REAL) FULL OUTER JOIN rt0 ON ((((v0.c0)IS(vt1.c0)))%(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0) NOT NULL) AS REAL) FULL OUTER JOIN rt0 ON ((((v0.c0)IS(vt1.c0)))%(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND ((rt0.c2))));
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)|(vt1.c0)))/(CAST(vt1.c0 AS TEXT))) INNER JOIN v0 ON (+ (rt0.c2)) COLLATE RTRIM WHERE (((rt0.c1)OR((- (vt0.c0))))) ORDER BY (((- (vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR((- (vt0.c0))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)|(vt1.c0)))/(CAST(vt1.c0 AS TEXT))) INNER JOIN v0 ON (+ (rt0.c2)) COLLATE RTRIM ORDER BY (((- (vt0.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)|(vt1.c0)))/(CAST(vt1.c0 AS TEXT))) INNER JOIN v0 ON (+ (rt0.c2)) COLLATE RTRIM WHERE (((rt0.c1)OR((- (vt0.c0))))) ORDER BY (((- (vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR((- (vt0.c0))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)|(vt1.c0)))/(CAST(vt1.c0 AS TEXT))) INNER JOIN v0 ON (+ (rt0.c2)) COLLATE RTRIM ORDER BY (((- (vt0.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)|(vt1.c0)))/(CAST(vt1.c0 AS TEXT))) INNER JOIN v0 ON (+ (rt0.c2)) COLLATE RTRIM WHERE (((rt0.c1)OR((- (vt0.c0))))) ORDER BY (((- (vt0.c0))) NOT NULL) ASC;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((- (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE (((((((((((rt0.c2)LIKE(rt0.c1)))OR(v0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))OR(CAST(rt0.c1 AS REAL))))AND(NULL))) ORDER BY ((((rt0.c1)OR((+ (v0.c0)))))OR(((NULL) BETWEEN (vt1.c0) AND (NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)LIKE(rt0.c1)))OR(v0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))OR(CAST(rt0.c1 AS REAL))))AND(NULL))) IS TRUE)  as count FROM rt0, vt1, v0 NOT INDEXED, vt0 ORDER BY ((((rt0.c1)OR((+ (v0.c0)))))OR(((NULL) BETWEEN (vt1.c0) AND (NULL)))));
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE (((((((((((rt0.c2)LIKE(rt0.c1)))OR(v0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))OR(CAST(rt0.c1 AS REAL))))AND(NULL))) ORDER BY ((((rt0.c1)OR((+ (v0.c0)))))OR(((NULL) BETWEEN (vt1.c0) AND (NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)LIKE(rt0.c1)))OR(v0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))OR(CAST(rt0.c1 AS REAL))))AND(NULL))) IS TRUE)  as count FROM rt0, vt1, v0 NOT INDEXED, vt0 ORDER BY ((((rt0.c1)OR((+ (v0.c0)))))OR(((NULL) BETWEEN (vt1.c0) AND (NULL)))));
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE (((((((((((rt0.c2)LIKE(rt0.c1)))OR(v0.c0)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))OR(CAST(rt0.c1 AS REAL))))AND(NULL))) ORDER BY ((((rt0.c1)OR((+ (v0.c0)))))OR(((NULL) BETWEEN (vt1.c0) AND (NULL))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (- (((rt0.c0)>>(rt0.c2)))) WHERE (((((((rt0.c1) NOTNULL))AND(CAST(rt0.c0 AS REAL))))OR((NULL IN ())))) ORDER BY CAST(vt0.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))AND(CAST(rt0.c0 AS REAL))))OR((NULL IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- (((rt0.c0)>>(rt0.c2)))) ORDER BY CAST(vt0.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (- (((rt0.c0)>>(rt0.c2)))) WHERE (((((((rt0.c1) NOTNULL))AND(CAST(rt0.c0 AS REAL))))OR((NULL IN ())))) ORDER BY CAST(vt0.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))AND(CAST(rt0.c0 AS REAL))))OR((NULL IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (- (((rt0.c0)>>(rt0.c2)))) ORDER BY CAST(vt0.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (- (((rt0.c0)>>(rt0.c2)))) WHERE (((((((rt0.c1) NOTNULL))AND(CAST(rt0.c0 AS REAL))))OR((NULL IN ())))) ORDER BY CAST(vt0.c0 AS INTEGER);
SELECT * FROM v0, rt0 WHERE (TRIM(DISTINCT ((rt0.c0)IS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c0)IS(rt0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (TRIM(DISTINCT ((rt0.c0)IS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c0)IS(rt0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (TRIM(DISTINCT ((rt0.c0)IS(rt0.c0))));
SELECT * FROM vt0, rt0 NOT INDEXED, vt1 WHERE (CASE ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))  WHEN (('-430321980') NOT NULL) THEN COALESCE(DISTINCT rt0.c0, rt0.c0, vt0.c0, rt0.c0) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.8252338059637868) END) ORDER BY (((((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0))))<>(((vt1.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))  WHEN (('-430321980') NOT NULL) THEN COALESCE(DISTINCT rt0.c0, rt0.c0, vt0.c0, rt0.c0) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.8252338059637868) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0))))!=(((vt1.c0 IN ()))))  NULLS FIRST);
SELECT * FROM vt0, rt0 NOT INDEXED, vt1 WHERE (CASE ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))  WHEN (('-430321980') NOT NULL) THEN COALESCE(DISTINCT rt0.c0, rt0.c0, vt0.c0, rt0.c0) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.8252338059637868) END) ORDER BY (((((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0))))<>(((vt1.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))  WHEN (('-430321980') NOT NULL) THEN COALESCE(DISTINCT rt0.c0, rt0.c0, vt0.c0, rt0.c0) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.8252338059637868) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0))))!=(((vt1.c0 IN ()))))  NULLS FIRST);
SELECT * FROM vt0, rt0 NOT INDEXED, vt1 WHERE (CASE ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))  WHEN (('-430321980') NOT NULL) THEN COALESCE(DISTINCT rt0.c0, rt0.c0, vt0.c0, rt0.c0) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.8252338059637868) END) ORDER BY (((((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0))))<>(((vt1.c0 IN ()))))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((IFNULL(rt0.c0, -1162388828)))>(((((vt0.c0))==((rt0.c0)))))) WHERE (((((((((CASE '&5|ID'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)OR(((0xffffffffcbf38d07) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c1)|(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY LOWER(((rt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((CASE '&5|ID'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)OR(((0xffffffffcbf38d07) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c1)|(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((IFNULL(rt0.c0, -1162388828)))>(((((vt0.c0))=((rt0.c0)))))) ORDER BY LOWER(((rt0.c2) NOT NULL)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((IFNULL(rt0.c0, -1162388828)))>(((((vt0.c0))==((rt0.c0)))))) WHERE (((((((((CASE '&5|ID'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)OR(((0xffffffffcbf38d07) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c1)|(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY LOWER(((rt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((CASE '&5|ID'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)OR(((0xffffffffcbf38d07) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c1)|(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((IFNULL(rt0.c0, -1162388828)))>(((((vt0.c0))=((rt0.c0)))))) ORDER BY LOWER(((rt0.c2) NOT NULL)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((IFNULL(rt0.c0, -1162388828)))>(((((vt0.c0))==((rt0.c0)))))) WHERE (((((((((CASE '&5|ID'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)OR(((0xffffffffcbf38d07) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(((rt0.c1)|(rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY LOWER(((rt0.c2) NOT NULL));
SELECT COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ((NOT (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ((NOT (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0)>(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0)>(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0)>(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)==(((v0.c0)GLOB(v0.c0))))) ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (v0.c0)))&(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)==(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (v0.c0)))&(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)==(((v0.c0)GLOB(v0.c0))))) ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (v0.c0)))&(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)==(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (v0.c0)))&(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END)==(((v0.c0)GLOB(v0.c0))))) ORDER BY ((((x'') NOT BETWEEN (v0.c0) AND (v0.c0)))&(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), (+ (vt1.c0)))) AND (((('') NOT BETWEEN (rt0.c2) AND ('')), (((rt0.c1))==((v0.c0))), CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), (+ (vt1.c0)))) AND (((('') NOT BETWEEN (rt0.c2) AND ('')), (((rt0.c1))=((v0.c0))), CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0, v0, vt0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), (+ (vt1.c0)))) AND (((('') NOT BETWEEN (rt0.c2) AND ('')), (((rt0.c1))==((v0.c0))), CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), (+ (vt1.c0)))) AND (((('') NOT BETWEEN (rt0.c2) AND ('')), (((rt0.c1))=((v0.c0))), CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0, v0, vt0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), (+ (vt1.c0)))) AND (((('') NOT BETWEEN (rt0.c2) AND ('')), (((rt0.c1))==((v0.c0))), CAST(rt0.c2 AS INTEGER)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((-7.1774247E7)) BETWEEN ((STRFTIME(rt0.c2, x'', rt0.c2))) AND ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((-7.1774247E7)) BETWEEN ((STRFTIME(rt0.c2, x'', rt0.c2))) AND ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((-7.1774247E7)) BETWEEN ((STRFTIME(rt0.c2, x'', rt0.c2))) AND ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((-7.1774247E7)) BETWEEN ((STRFTIME(rt0.c2, x'', rt0.c2))) AND ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((-7.1774247E7)) BETWEEN ((STRFTIME(rt0.c2, x'', rt0.c2))) AND ((CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((TRIM(DISTINCT vt1.c0, vt0.c0)))<(((((vt1.c0))!=((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((TRIM(DISTINCT vt1.c0, vt0.c0)))<(((((vt1.c0))!=((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((TRIM(DISTINCT vt1.c0, vt0.c0)))<(((((vt1.c0))!=((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((TRIM(DISTINCT vt1.c0, vt0.c0)))<(((((vt1.c0))!=((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((TRIM(DISTINCT vt1.c0, vt0.c0)))<(((((vt1.c0))!=((vt1.c0)))))));
SELECT ALL * FROM vt0, vt1, v0, rt0 WHERE ((((vt0.c0 IN (rt0.c0)))IS((rt0.c2 IN (rt0.c2))))) ORDER BY ((vt0.c0 COLLATE NOCASE)<<((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c0)))IS((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, v0, rt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<((- (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0, rt0 WHERE ((((vt0.c0 IN (rt0.c0)))IS((rt0.c2 IN (rt0.c2))))) ORDER BY ((vt0.c0 COLLATE NOCASE)<<((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c0)))IS((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, vt1, v0, rt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<<((- (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0, rt0 WHERE ((((vt0.c0 IN (rt0.c0)))IS((rt0.c2 IN (rt0.c2))))) ORDER BY ((vt0.c0 COLLATE NOCASE)<<((- (vt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE (v0.c0) ORDER BY 0.622395169257713;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, vt1, v0, vt0 ORDER BY 0.622395169257713);
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE (v0.c0) ORDER BY 0.622395169257713;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, vt1, v0, vt0 ORDER BY 0.622395169257713);
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE (v0.c0) ORDER BY 0.622395169257713;
SELECT ALL * FROM v0, rt0, vt1, vt0 WHERE ((+ (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0);
SELECT ALL * FROM v0, rt0, vt1, vt0 WHERE ((+ (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0);
SELECT ALL * FROM v0, rt0, vt1, vt0 WHERE ((+ (CAST(v0.c0 AS REAL))));
SELECT ALL * FROM vt1, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(vt1.c0)))/(rt0.c2)) FULL OUTER JOIN vt0 ON CASE WHEN UNLIKELY(v0.c0) THEN CAST(rt0.c0 AS BLOB) END WHERE ((((rt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, NULL, ((v0.c0)==(rt0.c2)))) AND ((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)), ((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)), CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, NULL, ((v0.c0)=(rt0.c2)))) AND ((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)), ((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)), CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c2 END)))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(vt1.c0)))/(rt0.c2)) FULL OUTER JOIN vt0 ON CASE WHEN UNLIKELY(v0.c0) THEN CAST(rt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(vt1.c0)))/(rt0.c2)) FULL OUTER JOIN vt0 ON CASE WHEN UNLIKELY(v0.c0) THEN CAST(rt0.c0 AS BLOB) END WHERE ((((rt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, NULL, ((v0.c0)==(rt0.c2)))) AND ((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)), ((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)), CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, NULL, ((v0.c0)=(rt0.c2)))) AND ((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)), ((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)), CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c2 END)))) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(vt1.c0)))/(rt0.c2)) FULL OUTER JOIN vt0 ON CASE WHEN UNLIKELY(v0.c0) THEN CAST(rt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM vt1, v0 FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))AND(vt1.c0)))/(rt0.c2)) FULL OUTER JOIN vt0 ON CASE WHEN UNLIKELY(v0.c0) THEN CAST(rt0.c0 AS BLOB) END WHERE ((((rt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, NULL, ((v0.c0)==(rt0.c2)))) AND ((((((rt0.c0)OR(rt0.c0)))AND(vt1.c0)), ((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)), CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c2 END))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, v0 WHERE ('}k');
SELECT SUM(count) FROM (SELECT (('}k') IS TRUE)  as count FROM rt0, vt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, v0 WHERE ('}k');
SELECT SUM(count) FROM (SELECT (('}k') IS TRUE)  as count FROM rt0, vt1, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, v0 WHERE ('}k');
SELECT COUNT(*) FROM vt1, vt0, v0, rt0 WHERE (-873231097) ORDER BY (((((v0.c0, 8.31961993E8, rt0.c2))>=((rt0.c1, rt0.c2, 'ep')))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((-873231097) IS TRUE)  as count FROM vt1, vt0, v0, rt0 ORDER BY (((((v0.c0, 8.31961993E8, rt0.c2))>=((rt0.c1, rt0.c2, 'ep')))) IS TRUE));
SELECT COUNT(*) FROM vt1, vt0, v0, rt0 WHERE (-873231097) ORDER BY (((((v0.c0, 8.31961993E8, rt0.c2))>=((rt0.c1, rt0.c2, 'ep')))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((-873231097) IS TRUE)  as count FROM vt1, vt0, v0, rt0 ORDER BY (((((v0.c0, 8.31961993E8, rt0.c2))>=((rt0.c1, rt0.c2, 'ep')))) IS TRUE));
SELECT COUNT(*) FROM vt1, vt0, v0, rt0 WHERE (-873231097) ORDER BY (((((v0.c0, 8.31961993E8, rt0.c2))>=((rt0.c1, rt0.c2, 'ep')))) IS TRUE);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((('zm舌jqc.l') NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('zm舌jqc.l') NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((('zm舌jqc.l') NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('zm舌jqc.l') NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((('zm舌jqc.l') NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((rt0.c2)>>(rt0.c1)))/(vt1.c0 COLLATE NOCASE))) ORDER BY (((x'3848'))<=((ABS(DISTINCT rt0.c0)))) ASC, (((rt0.c0 IN ()))<<(rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>>(rt0.c1)))/(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (((x'3848'))<=((ABS(DISTINCT rt0.c0)))) ASC, (((rt0.c0 IN ()))<<(rt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((rt0.c2)>>(rt0.c1)))/(vt1.c0 COLLATE NOCASE))) ORDER BY (((x'3848'))<=((ABS(DISTINCT rt0.c0)))) ASC, (((rt0.c0 IN ()))<<(rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>>(rt0.c1)))/(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY (((x'3848'))<=((ABS(DISTINCT rt0.c0)))) ASC, (((rt0.c0 IN ()))<<(rt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((rt0.c2)>>(rt0.c1)))/(vt1.c0 COLLATE NOCASE))) ORDER BY (((x'3848'))<=((ABS(DISTINCT rt0.c0)))) ASC, (((rt0.c0 IN ()))<<(rt0.c1 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (CASE '1824522407'  WHEN '-1252219591' THEN v0.c0 WHEN NULL THEN x'' WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1824522407'  WHEN '-1252219591' THEN v0.c0 WHEN NULL THEN x'' WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON rt0.c0);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (CASE '1824522407'  WHEN '-1252219591' THEN v0.c0 WHEN NULL THEN x'' WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1824522407'  WHEN '-1252219591' THEN v0.c0 WHEN NULL THEN x'' WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON rt0.c0);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (CASE '1824522407'  WHEN '-1252219591' THEN v0.c0 WHEN NULL THEN x'' WHEN ((rt0.c2) NOTNULL) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END END);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt1 ON (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) BETWEEN ((vt1.c0 IN (rt0.c2))) AND (NULL)) WHERE (json_patch(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)), v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)), v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt1 ON (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) BETWEEN ((vt1.c0 IN (rt0.c2))) AND (NULL)));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt1 ON (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) BETWEEN ((vt1.c0 IN (rt0.c2))) AND (NULL)) WHERE (json_patch(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)), v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)), v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt1 ON (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) BETWEEN ((vt1.c0 IN (rt0.c2))) AND (NULL)));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt1 ON (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) INNER JOIN rt0 ON ((((rt0.c2) IS TRUE)) BETWEEN ((vt1.c0 IN (rt0.c2))) AND (NULL)) WHERE (json_patch(((rt0.c2) NOT BETWEEN (rt0.c0) AND (v0.c0)), v0.c0 COLLATE BINARY));
SELECT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (SQLITE_VERSION()))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (SQLITE_VERSION()))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0);
SELECT * FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (SQLITE_VERSION()))) ORDER BY v0.c0;
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (CASE WHEN ((v0.c0)<(vt1.c0)) THEN v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<(vt1.c0)) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1 INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (CASE WHEN ((v0.c0)<(vt1.c0)) THEN v0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)<(vt1.c0)) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1 INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN v0 ON (~ (vt1.c0 COLLATE NOCASE)) WHERE (CASE WHEN ((v0.c0)<(vt1.c0)) THEN v0.c0 COLLATE BINARY END);
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE (((v0.c0) NOT BETWEEN (vt0.c0) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1, v0, vt0);
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE (((v0.c0) NOT BETWEEN (vt0.c0) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1, v0, vt0);
SELECT ALL * FROM rt0, vt1, v0, vt0 WHERE (((v0.c0) NOT BETWEEN (vt0.c0) AND (((vt1.c0) NOTNULL))));
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))>>(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))>>(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))>>(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))>>(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))>>(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN 'eBWj\nR.6' THEN ((v0.c0) NOT NULL) END) ORDER BY ((x'ac60') IS TRUE) COLLATE RTRIM  NULLS FIRST, ((((((((v0.c0 COLLATE NOCASE)OR(CAST(rt0.c0 AS INTEGER))))AND((vt1.c0 IN ()))))AND(LIKELY(rt0.c1))))AND((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS BLOB)  WHEN 'eBWj\nR.6' THEN ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((x'ac60') IS TRUE) COLLATE RTRIM  NULLS FIRST, ((((((((v0.c0 COLLATE NOCASE)OR(CAST(rt0.c0 AS INTEGER))))AND((vt1.c0 IN ()))))AND(LIKELY(rt0.c1))))AND((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0, vt1 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN 'eBWj\nR.6' THEN ((v0.c0) NOT NULL) END) ORDER BY ((x'ac60') IS TRUE) COLLATE RTRIM  NULLS FIRST, ((((((((v0.c0 COLLATE NOCASE)OR(CAST(rt0.c0 AS INTEGER))))AND((vt1.c0 IN ()))))AND(LIKELY(rt0.c1))))AND((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS BLOB)  WHEN 'eBWj\nR.6' THEN ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM v0, rt0, vt1 ORDER BY ((x'ac60') IS TRUE) COLLATE RTRIM  NULLS FIRST, ((((((((v0.c0 COLLATE NOCASE)OR(CAST(rt0.c0 AS INTEGER))))AND((vt1.c0 IN ()))))AND(LIKELY(rt0.c1))))AND((((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY ((((rt0.c2)*(rt0.c0))) BETWEEN (rt0.c2) AND ((((x''))==((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)*(rt0.c0))) BETWEEN (rt0.c2) AND ((((x''))==((rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY ((((rt0.c2)*(rt0.c0))) BETWEEN (rt0.c2) AND ((((x''))==((rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)*(rt0.c0))) BETWEEN (rt0.c2) AND ((((x''))==((rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY) ORDER BY ((((rt0.c2)*(rt0.c0))) BETWEEN (rt0.c2) AND ((((x''))==((rt0.c2))))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1, v0, vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, v0, vt0 ORDER BY (((vt0.c0)) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0) ISNULL))))  NULLS FIRST);
SELECT * FROM rt0, vt1, v0, vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, v0, vt0 ORDER BY (((vt0.c0)) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0) ISNULL))))  NULLS FIRST);
SELECT * FROM rt0, vt1, v0, vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0) ISNULL))))  NULLS FIRST;
SELECT * FROM v0 WHERE ((((NULL, v0.c0, '')) NOT BETWEEN ((((v0.c0)%(v0.c0)), (v0.c0 IN ()), ((v0.c0)|(v0.c0)))) AND (((~ (v0.c0)), CAST(v0.c0 AS REAL), x'c8a5')))) ORDER BY (NOT (v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL, v0.c0, '')) NOT BETWEEN ((((v0.c0)%(v0.c0)), (v0.c0 IN ()), ((v0.c0)|(v0.c0)))) AND (((~ (v0.c0)), CAST(v0.c0 AS REAL), x'c8a5')))) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM v0 WHERE ((((NULL, v0.c0, '')) NOT BETWEEN ((((v0.c0)%(v0.c0)), (v0.c0 IN ()), ((v0.c0)|(v0.c0)))) AND (((~ (v0.c0)), CAST(v0.c0 AS REAL), x'c8a5')))) ORDER BY (NOT (v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL, v0.c0, '')) NOT BETWEEN ((((v0.c0)%(v0.c0)), (v0.c0 IN ()), ((v0.c0)|(v0.c0)))) AND (((~ (v0.c0)), CAST(v0.c0 AS REAL), x'c8a5')))) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM v0 WHERE ((((NULL, v0.c0, '')) NOT BETWEEN ((((v0.c0)%(v0.c0)), (v0.c0 IN ()), ((v0.c0)|(v0.c0)))) AND (((~ (v0.c0)), CAST(v0.c0 AS REAL), x'c8a5')))) ORDER BY (NOT (v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END IN ())) ORDER BY ((CAST(1.766622626E9 AS INTEGER))>(((('-430321980', rt0.c2, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(1.766622626E9 AS INTEGER))>(((('-430321980', rt0.c2, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END IN ())) ORDER BY ((CAST(1.766622626E9 AS INTEGER))>(((('-430321980', rt0.c2, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(1.766622626E9 AS INTEGER))>(((('-430321980', rt0.c2, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END IN ())) ORDER BY ((CAST(1.766622626E9 AS INTEGER))>(((('-430321980', rt0.c2, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, vt1 WHERE (NULL) ORDER BY ((((x'') NOT BETWEEN (vt1.c0) AND (v0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((x'') NOT BETWEEN (vt1.c0) AND (v0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC);
SELECT ALL * FROM vt0, v0, vt1 WHERE (NULL) ORDER BY ((((x'') NOT BETWEEN (vt1.c0) AND (v0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((x'') NOT BETWEEN (vt1.c0) AND (v0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC);
SELECT ALL * FROM vt0, v0, vt1 WHERE (NULL) ORDER BY ((((x'') NOT BETWEEN (vt1.c0) AND (v0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, vt1, rt0, v0 WHERE (json_valid(NULL)) ORDER BY ((((((((v0.c0)AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(NULL)) IS TRUE)  as count FROM vt0, vt1, rt0, v0 ORDER BY ((((((((v0.c0)AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt0, v0 WHERE (json_valid(NULL)) ORDER BY ((((((((v0.c0)AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(NULL)) IS TRUE)  as count FROM vt0, vt1, rt0, v0 ORDER BY ((((((((v0.c0)AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt0, v0 WHERE (json_valid(NULL)) ORDER BY ((((((((v0.c0)AND(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((+ (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c1) ISNULL))));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (SUBSTR(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), ((rt0.c2) IS FALSE))) ORDER BY (((~ (vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), ((rt0.c2) IS FALSE))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((~ (vt0.c0))) NOT NULL));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (SUBSTR(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), ((rt0.c2) IS FALSE))) ORDER BY (((~ (vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), ((rt0.c2) IS FALSE))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((~ (vt0.c0))) NOT NULL));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (SUBSTR(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), ((rt0.c2) IS FALSE))) ORDER BY (((~ (vt0.c0))) NOT NULL);
SELECT * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)) ORDER BY ''  NULLS LAST, (('')&(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ''  NULLS LAST, (('')&(vt1.c0)) DESC);
SELECT * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)) ORDER BY ''  NULLS LAST, (('')&(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ''  NULLS LAST, (('')&(vt1.c0)) DESC);
SELECT * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)) ORDER BY ''  NULLS LAST, (('')&(vt1.c0)) DESC;
SELECT ALL * FROM rt0, vt0, v0, vt1 WHERE (CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) ORDER BY load_extension(((v0.c0) IS FALSE), ((vt0.c0) IS FALSE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0, vt1 ORDER BY load_extension(((v0.c0) IS FALSE), ((vt0.c0) IS FALSE)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0, vt1 WHERE (CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) ORDER BY load_extension(((v0.c0) IS FALSE), ((vt0.c0) IS FALSE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0, vt1 ORDER BY load_extension(((v0.c0) IS FALSE), ((vt0.c0) IS FALSE)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0, vt1 WHERE (CASE x''  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) ORDER BY load_extension(((v0.c0) IS FALSE), ((vt0.c0) IS FALSE)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<=(v0.c0))) NOT BETWEEN (rt0.c1) AND (vt1.c0)) WHERE ((((((rt0.c2 IN ()))OR(CHAR(rt0.c1, rt0.c1, v0.c0))))OR(vt1.c0))) ORDER BY HEX((((rt0.c2))<((rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))OR(CHAR(rt0.c1, rt0.c1, v0.c0))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<=(v0.c0))) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ORDER BY HEX((((rt0.c2))<((rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<=(v0.c0))) NOT BETWEEN (rt0.c1) AND (vt1.c0)) WHERE ((((((rt0.c2 IN ()))OR(CHAR(rt0.c1, rt0.c1, v0.c0))))OR(vt1.c0))) ORDER BY HEX((((rt0.c2))<((rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))OR(CHAR(rt0.c1, rt0.c1, v0.c0))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<=(v0.c0))) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ORDER BY HEX((((rt0.c2))<((rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN v0 ON ((((rt0.c2)<=(v0.c0))) NOT BETWEEN (rt0.c1) AND (vt1.c0)) WHERE ((((((rt0.c2 IN ()))OR(CHAR(rt0.c1, rt0.c1, v0.c0))))OR(vt1.c0))) ORDER BY HEX((((rt0.c2))<((rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((v0.c0)&(rt0.c1))) BETWEEN ('p.MUj') AND (CASE 0x7da6a0e9  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(rt0.c1))) BETWEEN ('p.MUj') AND (CASE 0x7da6a0e9  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((v0.c0)&(rt0.c1))) BETWEEN ('p.MUj') AND (CASE 0x7da6a0e9  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(rt0.c1))) BETWEEN ('p.MUj') AND (CASE 0x7da6a0e9  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC);
SELECT ALL * FROM vt1, rt0, v0 WHERE (((((v0.c0)&(rt0.c1))) BETWEEN ('p.MUj') AND (CASE 0x7da6a0e9  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((0.7877603116384156)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN 'l8Be萅\' THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((0.7877603116384156)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN 'l8Be萅\' THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((0.7877603116384156)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN 'l8Be萅\' THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((0.7877603116384156)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN 'l8Be萅\' THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN (((0.7877603116384156)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE CASE vt0.c0  WHEN 'l8Be萅\' THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'');
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((('')<=(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, x'' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')<=(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, x'' COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((('')<=(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, x'' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')<=(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, x'' COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((('')<=(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, x'' COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0, vt0, rt0 WHERE (LTRIM(((rt0.c0) IS FALSE), CAST(rt0.c2 AS TEXT))) ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND((rt0.c1 IN ()))))OR(((v0.c0) IS TRUE))))AND(((rt0.c1)<<(0.4158865601497823)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST, rt0.c2 ASC  NULLS FIRST, (vt1.c0 COLLATE NOCASE IN (LIKELIHOOD(DISTINCT vt0.c0, 0.5614685635950419))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c0) IS FALSE), CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM vt1, v0, vt0, rt0 ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND((rt0.c1 IN ()))))OR(((v0.c0) IS TRUE))))AND(((rt0.c1)<<(0.4158865601497823)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST, rt0.c2 ASC  NULLS FIRST, (vt1.c0 COLLATE NOCASE IN (LIKELIHOOD(DISTINCT vt0.c0, 0.5614685635950419))) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, rt0 WHERE (LTRIM(((rt0.c0) IS FALSE), CAST(rt0.c2 AS TEXT))) ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND((rt0.c1 IN ()))))OR(((v0.c0) IS TRUE))))AND(((rt0.c1)<<(0.4158865601497823)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST, rt0.c2 ASC  NULLS FIRST, (vt1.c0 COLLATE NOCASE IN (LIKELIHOOD(DISTINCT vt0.c0, 0.5614685635950419))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c0) IS FALSE), CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM vt1, v0, vt0, rt0 ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND((rt0.c1 IN ()))))OR(((v0.c0) IS TRUE))))AND(((rt0.c1)<<(0.4158865601497823)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST, rt0.c2 ASC  NULLS FIRST, (vt1.c0 COLLATE NOCASE IN (LIKELIHOOD(DISTINCT vt0.c0, 0.5614685635950419))) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0, rt0 WHERE (LTRIM(((rt0.c0) IS FALSE), CAST(rt0.c2 AS TEXT))) ORDER BY ((((((((CAST(v0.c0 AS NUMERIC))AND((rt0.c1 IN ()))))OR(((v0.c0) IS TRUE))))AND(((rt0.c1)<<(0.4158865601497823)))))OR((rt0.c0 IN ()))) ASC  NULLS FIRST, rt0.c2 ASC  NULLS FIRST, (vt1.c0 COLLATE NOCASE IN (LIKELIHOOD(DISTINCT vt0.c0, 0.5614685635950419))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c0))) IS TRUE)) ORDER BY (0.5711152575499095 IN ()), (((rt0.c2)) NOT BETWEEN ((ABS(DISTINCT rt0.c2))) AND (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (0.5711152575499095 IN ()), (((rt0.c2)) NOT BETWEEN ((ABS(DISTINCT rt0.c2))) AND (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c0))) IS TRUE)) ORDER BY (0.5711152575499095 IN ()), (((rt0.c2)) NOT BETWEEN ((ABS(DISTINCT rt0.c2))) AND (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (0.5711152575499095 IN ()), (((rt0.c2)) NOT BETWEEN ((ABS(DISTINCT rt0.c2))) AND (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c0))) IS TRUE)) ORDER BY (0.5711152575499095 IN ()), (((rt0.c2)) NOT BETWEEN ((ABS(DISTINCT rt0.c2))) AND (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, v0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, vt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, v0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM rt0, vt0, vt1, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, v0 WHERE (((NULL) ISNULL));
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE v0.c0 END) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE v0.c0 END) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE v0.c0 END);
SELECT * FROM vt1, rt0, v0 WHERE (MIN('Qh^o', CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((MIN('Qh^o', CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (MIN('Qh^o', CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((MIN('Qh^o', CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END)) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE (MIN('Qh^o', CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END));
SELECT COUNT(*) FROM vt0, vt1, rt0, v0 WHERE (((CAST(rt0.c0 AS INTEGER))<(((rt0.c0)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))<(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, v0);
SELECT COUNT(*) FROM vt0, vt1, rt0, v0 WHERE (((CAST(rt0.c0 AS INTEGER))<(((rt0.c0)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))<(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, v0);
SELECT COUNT(*) FROM vt0, vt1, rt0, v0 WHERE (((CAST(rt0.c0 AS INTEGER))<(((rt0.c0)AND(rt0.c0)))));
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)%(0.7074401732906059)))OR((vt1.c0 IN (vt1.c0)))))OR((- (vt1.c0)))))OR(0.8608580353464357)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)%(0.7074401732906059)))OR((vt1.c0 IN (vt1.c0)))))OR((- (vt1.c0)))))OR(0.8608580353464357)))OR(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)%(0.7074401732906059)))OR((vt1.c0 IN (vt1.c0)))))OR((- (vt1.c0)))))OR(0.8608580353464357)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)%(0.7074401732906059)))OR((vt1.c0 IN (vt1.c0)))))OR((- (vt1.c0)))))OR(0.8608580353464357)))OR(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)%(0.7074401732906059)))OR((vt1.c0 IN (vt1.c0)))))OR((- (vt1.c0)))))OR(0.8608580353464357)))OR(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT vt1.c0)) ORDER BY LTRIM(vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY LTRIM(vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT vt1.c0)) ORDER BY LTRIM(vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY LTRIM(vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT vt1.c0)) ORDER BY LTRIM(vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE RTRIM)  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE BINARY) NOTNULL) RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(json_patch(rt0.c1, vt1.c0)) WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))<>(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))<>(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE BINARY) NOTNULL) RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(json_patch(rt0.c1, vt1.c0)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE BINARY) NOTNULL) RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(json_patch(rt0.c1, vt1.c0)) WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))<>(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))<>(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON ((rt0.c1 COLLATE BINARY) NOTNULL) RIGHT OUTER JOIN rt0 ON NULL RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(json_patch(rt0.c1, vt1.c0)));
SELECT * FROM v0, vt0 WHERE (((((((x'00f49229')GLOB(v0.c0)))AND(((v0.c0) IS FALSE))))AND(UPPER('-430321980')))) ORDER BY v0.c0  NULLS FIRST, INSTR((NOT (v0.c0)), ((vt0.c0)<(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'00f49229')GLOB(v0.c0)))AND(((v0.c0) IS FALSE))))AND(UPPER('-430321980')))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS FIRST, INSTR((NOT (v0.c0)), ((vt0.c0)<(v0.c0))));
SELECT * FROM v0, vt0 WHERE (((((((x'00f49229')GLOB(v0.c0)))AND(((v0.c0) IS FALSE))))AND(UPPER('-430321980')))) ORDER BY v0.c0  NULLS FIRST, INSTR((NOT (v0.c0)), ((vt0.c0)<(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((x'00f49229')GLOB(v0.c0)))AND(((v0.c0) IS FALSE))))AND(UPPER('-430321980')))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS FIRST, INSTR((NOT (v0.c0)), ((vt0.c0)<(v0.c0))));
SELECT * FROM v0, vt0 WHERE (((((((x'00f49229')GLOB(v0.c0)))AND(((v0.c0) IS FALSE))))AND(UPPER('-430321980')))) ORDER BY v0.c0  NULLS FIRST, INSTR((NOT (v0.c0)), ((vt0.c0)<(v0.c0)));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS REAL))) AND (((~ (rt0.c0)), ((rt0.c0)==(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) DESC  NULLS LAST, (((NOT (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((('1280895580')||(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS REAL))) AND (((~ (rt0.c0)), ((rt0.c0)==(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) DESC  NULLS LAST, (((NOT (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((('1280895580')||(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS REAL))) AND (((~ (rt0.c0)), ((rt0.c0)==(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) DESC  NULLS LAST, (((NOT (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((('1280895580')||(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS REAL))) AND (((~ (rt0.c0)), ((rt0.c0)==(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) DESC  NULLS LAST, (((NOT (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((('1280895580')||(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM, CAST(rt0.c1 AS REAL))) AND (((~ (rt0.c0)), ((rt0.c0)==(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) DESC  NULLS LAST, (((NOT (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((('1280895580')||(rt0.c2))));
SELECT * FROM v0 WHERE (((((((v0.c0)&(v0.c0)))AND((~ (v0.c0)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)&(v0.c0)))AND((~ (v0.c0)))))AND(x''))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)&(v0.c0)))AND((~ (v0.c0)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)&(v0.c0)))AND((~ (v0.c0)))))AND(x''))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)&(v0.c0)))AND((~ (v0.c0)))))AND(x'')));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (LIKELIHOOD(vt1.c0, 0.5720772373237426));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt1.c0, 0.5720772373237426)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (LIKELIHOOD(vt1.c0, 0.5720772373237426));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(vt1.c0, 0.5720772373237426)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (LIKELIHOOD(vt1.c0, 0.5720772373237426));
SELECT ALL COUNT(*) FROM v0, vt1 CROSS JOIN rt0 ON (- (UNLIKELY(DISTINCT rt0.c2))) WHERE (((((((266277830) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((vt1.c0) NOTNULL))))AND(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((266277830) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((vt1.c0) NOTNULL))))AND(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt0 ON (- (UNLIKELY(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM v0, vt1 CROSS JOIN rt0 ON (- (UNLIKELY(DISTINCT rt0.c2))) WHERE (((((((266277830) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((vt1.c0) NOTNULL))))AND(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((266277830) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((vt1.c0) NOTNULL))))AND(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1 CROSS JOIN rt0 ON (- (UNLIKELY(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM v0, vt1 CROSS JOIN rt0 ON (- (UNLIKELY(DISTINCT rt0.c2))) WHERE (((((((266277830) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((vt1.c0) NOTNULL))))AND(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (0.24358545374630702)) IN ())) ORDER BY (CAST(rt0.c1 AS REAL) IN (((rt0.c0)-(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c2) AND (0.24358545374630702)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS REAL) IN (((rt0.c0)-(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (0.24358545374630702)) IN ())) ORDER BY (CAST(rt0.c1 AS REAL) IN (((rt0.c0)-(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c2) AND (0.24358545374630702)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c1 AS REAL) IN (((rt0.c0)-(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (0.24358545374630702)) IN ())) ORDER BY (CAST(rt0.c1 AS REAL) IN (((rt0.c0)-(rt0.c0)))) DESC;
SELECT COUNT(*) FROM v0, vt1, vt0 FULL OUTER JOIN rt0 ON ((NOT (vt1.c0)) IN ()) WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 FULL OUTER JOIN rt0 ON ((NOT (vt1.c0)) IN ()));
SELECT COUNT(*) FROM v0, vt1, vt0 FULL OUTER JOIN rt0 ON ((NOT (vt1.c0)) IN ()) WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM v0, vt1, vt0 FULL OUTER JOIN rt0 ON ((NOT (vt1.c0)) IN ()));
SELECT COUNT(*) FROM v0, vt1, vt0 FULL OUTER JOIN rt0 ON ((NOT (vt1.c0)) IN ()) WHERE ((~ ((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY (((+ (vt1.c0))) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0))) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY (((+ (vt1.c0))) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0))) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY (((+ (vt1.c0))) BETWEEN (((vt1.c0)&(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT * FROM vt1, v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((0.29071525126926046) BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY COALESCE(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS REAL)) DESC  NULLS LAST, (((((vt1.c0)!=(v0.c0))))!=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, CAST(((vt1.c0)&(vt1.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((0.29071525126926046) BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY COALESCE(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS REAL)) DESC  NULLS LAST, (((((vt1.c0)!=(v0.c0))))!=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, CAST(((vt1.c0)&(vt1.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((0.29071525126926046) BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY COALESCE(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS REAL)) DESC  NULLS LAST, (((((vt1.c0)!=(v0.c0))))!=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, CAST(((vt1.c0)&(vt1.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((0.29071525126926046) BETWEEN (vt1.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY COALESCE(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS REAL)) DESC  NULLS LAST, (((((vt1.c0)!=(v0.c0))))!=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, CAST(((vt1.c0)&(vt1.c0)) AS TEXT)  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((0.29071525126926046) BETWEEN (vt1.c0) AND (v0.c0))))) ORDER BY COALESCE(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS REAL)) DESC  NULLS LAST, (((((vt1.c0)!=(v0.c0))))!=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, CAST(((vt1.c0)&(vt1.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ((((((((((((((((vt0.c0, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((0.4785295761197935, vt0.c0, v0.c0))))AND(vt1.c0 COLLATE BINARY)))OR((- (vt0.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(vt0.c0)))OR(CASE WHEN '0.41601402707256097' THEN v0.c0 ELSE rt0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt0.c0, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((0.4785295761197935, vt0.c0, v0.c0))))AND(vt1.c0 COLLATE BINARY)))OR((- (vt0.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(vt0.c0)))OR(CASE WHEN '0.41601402707256097' THEN v0.c0 ELSE rt0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ((((((((((((((((vt0.c0, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((0.4785295761197935, vt0.c0, v0.c0))))AND(vt1.c0 COLLATE BINARY)))OR((- (vt0.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(vt0.c0)))OR(CASE WHEN '0.41601402707256097' THEN v0.c0 ELSE rt0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt0.c0, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((0.4785295761197935, vt0.c0, v0.c0))))AND(vt1.c0 COLLATE BINARY)))OR((- (vt0.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(vt0.c0)))OR(CASE WHEN '0.41601402707256097' THEN v0.c0 ELSE rt0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ((((((((((((((((vt0.c0, NULL, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((0.4785295761197935, vt0.c0, v0.c0))))AND(vt1.c0 COLLATE BINARY)))OR((- (vt0.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(vt0.c0)))OR(CASE WHEN '0.41601402707256097' THEN v0.c0 ELSE rt0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE WHEN -1061336200 THEN ((vt1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1061336200 THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE WHEN -1061336200 THEN ((vt1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN -1061336200 THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CASE WHEN -1061336200 THEN ((vt1.c0) ISNULL) END);
SELECT * FROM vt1, rt0, v0 WHERE (rt0.c0) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))%(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))%(((v0.c0) IS FALSE))) ASC);
SELECT * FROM vt1, rt0, v0 WHERE (rt0.c0) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))%(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))%(((v0.c0) IS FALSE))) ASC);
SELECT * FROM vt1, rt0, v0 WHERE (rt0.c0) ORDER BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))%(((v0.c0) IS FALSE))) ASC;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0 IN ())))>=((rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))>=((rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0 IN ())))>=((rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ())))>=((rt0.c2)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0 IN ())))>=((rt0.c2))));
SELECT ALL * FROM v0 NOT INDEXED, vt0 FULL OUTER JOIN vt1 ON CAST((rt0.c0 IN ()) AS TEXT) LEFT OUTER JOIN rt0 ON ((vt1.c0 COLLATE NOCASE)/((NOT (vt0.c0)))) WHERE (((((NULL) ISNULL))>(v0.c0))) ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((x'') BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) ISNULL))>(v0.c0))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON CAST((rt0.c0 IN ()) AS TEXT) LEFT OUTER JOIN rt0 ON ((vt1.c0 COLLATE NOCASE)/((NOT (vt0.c0)))) ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((x'') BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM v0 NOT INDEXED, vt0 FULL OUTER JOIN vt1 ON CAST((rt0.c0 IN ()) AS TEXT) LEFT OUTER JOIN rt0 ON ((vt1.c0 COLLATE NOCASE)/((NOT (vt0.c0)))) WHERE (((((NULL) ISNULL))>(v0.c0))) ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((x'') BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) ISNULL))>(v0.c0))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON CAST((rt0.c0 IN ()) AS TEXT) LEFT OUTER JOIN rt0 ON ((vt1.c0 COLLATE NOCASE)/((NOT (vt0.c0)))) ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((x'') BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM v0 NOT INDEXED, vt0 FULL OUTER JOIN vt1 ON CAST((rt0.c0 IN ()) AS TEXT) LEFT OUTER JOIN rt0 ON ((vt1.c0 COLLATE NOCASE)/((NOT (vt0.c0)))) WHERE (((((NULL) ISNULL))>(v0.c0))) ORDER BY CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((x'') BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((vt1.c0)/(rt0.c1)) ELSE ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) END  NULLS FIRST;
SELECT * FROM rt0 WHERE (TRIM(((rt0.c1)AND(rt0.c0)), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))) ORDER BY (- (((rt0.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1)AND(rt0.c0)), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c0) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM(((rt0.c1)AND(rt0.c0)), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))) ORDER BY (- (((rt0.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1)AND(rt0.c0)), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c0) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM(((rt0.c1)AND(rt0.c0)), ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))) ORDER BY (- (((rt0.c0) IS TRUE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((+ (((v0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (rt0.c2 IN ()), ((rt0.c2)<(vt1.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), json_array_length(v0.c0), ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) ORDER BY ((((rt0.c2)*(vt1.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (rt0.c2 IN ()), ((rt0.c2)<(vt1.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), json_array_length(v0.c0), ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0, vt1 ORDER BY ((((rt0.c2)*(vt1.c0))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (rt0.c2 IN ()), ((rt0.c2)<(vt1.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), json_array_length(v0.c0), ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) ORDER BY ((((rt0.c2)*(vt1.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (rt0.c2 IN ()), ((rt0.c2)<(vt1.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), json_array_length(v0.c0), ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0, vt1 ORDER BY ((((rt0.c2)*(vt1.c0))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)), (rt0.c2 IN ()), ((rt0.c2)<(vt1.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), json_array_length(v0.c0), ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) ORDER BY ((((rt0.c2)*(vt1.c0))) NOT NULL)  NULLS FIRST;
SELECT * FROM v0, vt0, rt0, vt1 WHERE ((((TYPEOF(rt0.c1)))>((((vt1.c0) NOT NULL))))) ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c0)))AND(0.6659875455045979)), CAST(rt0.c2 AS NUMERIC)), vt0.c0 ASC  NULLS LAST, (((CAST(vt0.c0 AS REAL), NULL, 0.6264480171812857))<((((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, v0.c0)) AND ((vt0.c0, v0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(rt0.c1)))>((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1 ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c0)))AND(0.6659875455045979)), CAST(rt0.c2 AS NUMERIC)), vt0.c0 ASC  NULLS LAST, (((CAST(vt0.c0 AS REAL), NULL, 0.6264480171812857))<((((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, v0.c0)) AND ((vt0.c0, v0.c0, rt0.c0)))))));
SELECT * FROM v0, vt0, rt0, vt1 WHERE ((((TYPEOF(rt0.c1)))>((((vt1.c0) NOT NULL))))) ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c0)))AND(0.6659875455045979)), CAST(rt0.c2 AS NUMERIC)), vt0.c0 ASC  NULLS LAST, (((CAST(vt0.c0 AS REAL), NULL, 0.6264480171812857))<((((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, v0.c0)) AND ((vt0.c0, v0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TYPEOF(rt0.c1)))>((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1 ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c0)))AND(0.6659875455045979)), CAST(rt0.c2 AS NUMERIC)), vt0.c0 ASC  NULLS LAST, (((CAST(vt0.c0 AS REAL), NULL, 0.6264480171812857))<((((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, v0.c0)) AND ((vt0.c0, v0.c0, rt0.c0)))))));
SELECT * FROM v0, vt0, rt0, vt1 WHERE ((((TYPEOF(rt0.c1)))>((((vt1.c0) NOT NULL))))) ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c0)))AND(0.6659875455045979)), CAST(rt0.c2 AS NUMERIC)), vt0.c0 ASC  NULLS LAST, (((CAST(vt0.c0 AS REAL), NULL, 0.6264480171812857))<((((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, v0.c0)) AND ((vt0.c0, v0.c0, rt0.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY ((((rt0.c1)<>(vt0.c0)))*(((rt0.c0)*(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)<>(vt0.c0)))*(((rt0.c0)*(rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY ((((rt0.c1)<>(vt0.c0)))*(((rt0.c0)*(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)<>(vt0.c0)))*(((rt0.c0)*(rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY ((((rt0.c1)<>(vt0.c0)))*(((rt0.c0)*(rt0.c0))));
SELECT * FROM vt1 INNER JOIN vt0 ON (((((vt1.c0))>=((rt0.c0))))OR((NOT (vt1.c0)))) CROSS JOIN rt0 ON IFNULL(rt0.c1, ((rt0.c1) ISNULL)) WHERE (TYPEOF(DISTINCT ((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c0)))) ORDER BY TYPEOF((vt1.c0 IN (vt0.c0, rt0.c2, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((vt1.c0))>=((rt0.c0))))OR((NOT (vt1.c0)))) CROSS JOIN rt0 ON IFNULL(rt0.c1, ((rt0.c1) ISNULL)) ORDER BY TYPEOF((vt1.c0 IN (vt0.c0, rt0.c2, vt0.c0)))  NULLS LAST);
SELECT * FROM vt1 INNER JOIN vt0 ON (((((vt1.c0))>=((rt0.c0))))OR((NOT (vt1.c0)))) CROSS JOIN rt0 ON IFNULL(rt0.c1, ((rt0.c1) ISNULL)) WHERE (TYPEOF(DISTINCT ((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c0)))) ORDER BY TYPEOF((vt1.c0 IN (vt0.c0, rt0.c2, vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((vt1.c0))>=((rt0.c0))))OR((NOT (vt1.c0)))) CROSS JOIN rt0 ON IFNULL(rt0.c1, ((rt0.c1) ISNULL)) ORDER BY TYPEOF((vt1.c0 IN (vt0.c0, rt0.c2, vt0.c0)))  NULLS LAST);
SELECT * FROM vt1 INNER JOIN vt0 ON (((((vt1.c0))>=((rt0.c0))))OR((NOT (vt1.c0)))) CROSS JOIN rt0 ON IFNULL(rt0.c1, ((rt0.c1) ISNULL)) WHERE (TYPEOF(DISTINCT ((((((((rt0.c1)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c0)))) ORDER BY TYPEOF((vt1.c0 IN (vt0.c0, rt0.c2, vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, v0, vt0 WHERE ('-1100592863') ORDER BY ((((((((CASE WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END)AND(((rt0.c2)/(vt1.c0)))))OR(json_quote(rt0.c2))))OR(INSTR(v0.c0, vt1.c0))))AND(0.7268373727230965)) DESC  NULLS LAST, (((v0.c0 IN ()))>(((rt0.c0)|(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (('-1100592863') IS TRUE)  as count FROM vt1, rt0, v0 NOT INDEXED, vt0 ORDER BY ((((((((CASE WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END)AND(((rt0.c2)/(vt1.c0)))))OR(json_quote(rt0.c2))))OR(INSTR(v0.c0, vt1.c0))))AND(0.7268373727230965)) DESC  NULLS LAST, (((v0.c0 IN ()))>(((rt0.c0)|(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0, v0, vt0 WHERE ('-1100592863') ORDER BY ((((((((CASE WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END)AND(((rt0.c2)/(vt1.c0)))))OR(json_quote(rt0.c2))))OR(INSTR(v0.c0, vt1.c0))))AND(0.7268373727230965)) DESC  NULLS LAST, (((v0.c0 IN ()))>(((rt0.c0)|(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (('-1100592863') IS TRUE)  as count FROM vt1, rt0, v0 NOT INDEXED, vt0 ORDER BY ((((((((CASE WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END)AND(((rt0.c2)/(vt1.c0)))))OR(json_quote(rt0.c2))))OR(INSTR(v0.c0, vt1.c0))))AND(0.7268373727230965)) DESC  NULLS LAST, (((v0.c0 IN ()))>(((rt0.c0)|(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0, v0, vt0 WHERE ('-1100592863') ORDER BY ((((((((CASE WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END)AND(((rt0.c2)/(vt1.c0)))))OR(json_quote(rt0.c2))))OR(INSTR(v0.c0, vt1.c0))))AND(0.7268373727230965)) DESC  NULLS LAST, (((v0.c0 IN ()))>(((rt0.c0)|(vt1.c0))));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)IS(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)IS(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)IS(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0)IS(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)IS(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (((((((((0.289646903711423)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) ORDER BY CASE ((v0.c0) IS TRUE)  WHEN json_type(v0.c0) THEN ((v0.c0)>=(v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.289646903711423)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) IS TRUE)  WHEN json_type(v0.c0) THEN ((v0.c0)>=(v0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((((0.289646903711423)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) ORDER BY CASE ((v0.c0) IS TRUE)  WHEN json_type(v0.c0) THEN ((v0.c0)>=(v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.289646903711423)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) IS TRUE)  WHEN json_type(v0.c0) THEN ((v0.c0)>=(v0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((((0.289646903711423)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) ORDER BY CASE ((v0.c0) IS TRUE)  WHEN json_type(v0.c0) THEN ((v0.c0)>=(v0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON x'' WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)||(((vt0.c0)>=(rt0.c1))))) ORDER BY ((vt1.c0)<(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)||(((vt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON x'' ORDER BY ((vt1.c0)<(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON x'' WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)||(((vt0.c0)>=(rt0.c1))))) ORDER BY ((vt1.c0)<(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)||(((vt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON x'' ORDER BY ((vt1.c0)<(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON x'' WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END)||(((vt0.c0)>=(rt0.c1))))) ORDER BY ((vt1.c0)<(rt0.c0)) COLLATE RTRIM  NULLS LAST, CAST(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END AS INTEGER);
SELECT ALL * FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND('-1100592863')))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((~ (vt0.c0)), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((0Xffffffffdc4e2838, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt0.c0)AND(vt0.c0)))AND('-1100592863')))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((~ (vt0.c0)), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((0Xffffffffdc4e2838, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND('-1100592863')))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((~ (vt0.c0)), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((0Xffffffffdc4e2838, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt0.c0)AND(vt0.c0)))AND('-1100592863')))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((~ (vt0.c0)), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((0Xffffffffdc4e2838, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (((((((((vt0.c0)AND(vt0.c0)))AND('-1100592863')))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((~ (vt0.c0)), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM)) AND ((0Xffffffffdc4e2838, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0))) ASC;
SELECT COUNT(*) FROM vt1, rt0, v0, vt0 WHERE (((vt0.c0)OR(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, v0, vt0);
SELECT COUNT(*) FROM vt1, rt0, v0, vt0 WHERE (((vt0.c0)OR(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, v0, vt0);
SELECT COUNT(*) FROM vt1, rt0, v0, vt0 WHERE (((vt0.c0)OR(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, v0 WHERE (((0.2476896816867098)IS(((rt0.c1) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.2476896816867098)IS(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0, v0 ORDER BY rt0.c2 DESC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, v0 WHERE (((0.2476896816867098)IS(((rt0.c1) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.2476896816867098)IS(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0, v0 ORDER BY rt0.c2 DESC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, v0 WHERE (((0.2476896816867098)IS(((rt0.c1) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0)|(v0.c0)))LIKE((((vt1.c0))<((v0.c0)))))) ORDER BY ((0.9419650778250037)*(((((((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0)))LIKE((((vt1.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((0.9419650778250037)*(((((((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0)|(v0.c0)))LIKE((((vt1.c0))<((v0.c0)))))) ORDER BY ((0.9419650778250037)*(((((((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)|(v0.c0)))LIKE((((vt1.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((0.9419650778250037)*(((((((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC);
SELECT ALL * FROM v0, vt1 WHERE (((((v0.c0)|(v0.c0)))LIKE((((vt1.c0))<((v0.c0)))))) ORDER BY ((0.9419650778250037)*(((((((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((v0.c0) BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS BLOB))) WHERE (0.4562803281600848);
SELECT SUM(count) FROM (SELECT ((0.4562803281600848) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((v0.c0) BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS BLOB))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((v0.c0) BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS BLOB))) WHERE (0.4562803281600848);
SELECT SUM(count) FROM (SELECT ((0.4562803281600848) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((((v0.c0) BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS BLOB))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((((v0.c0) BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (v0.c0) AND (CAST(v0.c0 AS BLOB))) WHERE (0.4562803281600848);
SELECT COUNT(*) FROM vt0, rt0, vt1, v0 WHERE ((((v0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c0)) AND ((0.3878692731623321, '0.0', vt1.c0))) COLLATE NOCASE) ORDER BY (((v0.c0, rt0.c1, rt0.c2, x'', rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c0)), HEX(DISTINCT vt0.c0), ((vt1.c0) NOTNULL), rt0.c0, rt0.c1)) AND (((((rt0.c0))>((rt0.c1))), (~ (rt0.c1)), rt0.c0 COLLATE RTRIM, ((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c2)), (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c0)) AND ((0.3878692731623321, '0.0', vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY (((v0.c0, rt0.c1, rt0.c2, x'', rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c0)), HEX(DISTINCT vt0.c0), ((vt1.c0) NOTNULL), rt0.c0, rt0.c1)) AND (((((rt0.c0))>((rt0.c1))), (~ (rt0.c1)), rt0.c0 COLLATE RTRIM, ((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c2)), (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1, v0 WHERE ((((v0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c0)) AND ((0.3878692731623321, '0.0', vt1.c0))) COLLATE NOCASE) ORDER BY (((v0.c0, rt0.c1, rt0.c2, x'', rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c0)), HEX(DISTINCT vt0.c0), ((vt1.c0) NOTNULL), rt0.c0, rt0.c1)) AND (((((rt0.c0))>((rt0.c1))), (~ (rt0.c1)), rt0.c0 COLLATE RTRIM, ((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c2)), (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c0)) AND ((0.3878692731623321, '0.0', vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY (((v0.c0, rt0.c1, rt0.c2, x'', rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c0)), HEX(DISTINCT vt0.c0), ((vt1.c0) NOTNULL), rt0.c0, rt0.c1)) AND (((((rt0.c0))>((rt0.c1))), (~ (rt0.c1)), rt0.c0 COLLATE RTRIM, ((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c2)), (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1, v0 WHERE ((((v0.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c0)) AND ((0.3878692731623321, '0.0', vt1.c0))) COLLATE NOCASE) ORDER BY (((v0.c0, rt0.c1, rt0.c2, x'', rt0.c2)) BETWEEN ((((rt0.c0)+(rt0.c0)), HEX(DISTINCT vt0.c0), ((vt1.c0) NOTNULL), rt0.c0, rt0.c1)) AND (((((rt0.c0))>((rt0.c1))), (~ (rt0.c1)), rt0.c0 COLLATE RTRIM, ((((((((vt0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c2)), (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN v0 ON (DATE(rt0.c0, rt0.c1, rt0.c1, vt0.c0, vt1.c0) IN ()) RIGHT OUTER JOIN rt0 ON (~ (((rt0.c0)/(v0.c0)))) WHERE ((~ (((vt1.c0)!=(rt0.c2))))) ORDER BY (NOT ((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON (DATE(rt0.c0, rt0.c1, rt0.c1, vt0.c0, vt1.c0) IN ()) RIGHT OUTER JOIN rt0 ON (~ (((rt0.c0)/(v0.c0)))) ORDER BY (NOT ((+ (vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN v0 ON (DATE(rt0.c0, rt0.c1, rt0.c1, vt0.c0, vt1.c0) IN ()) RIGHT OUTER JOIN rt0 ON (~ (((rt0.c0)/(v0.c0)))) WHERE ((~ (((vt1.c0)!=(rt0.c2))))) ORDER BY (NOT ((+ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON (DATE(rt0.c0, rt0.c1, rt0.c1, vt0.c0, vt1.c0) IN ()) RIGHT OUTER JOIN rt0 ON (~ (((rt0.c0)/(v0.c0)))) ORDER BY (NOT ((+ (vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN v0 ON (DATE(rt0.c0, rt0.c1, rt0.c1, vt0.c0, vt1.c0) IN ()) RIGHT OUTER JOIN rt0 ON (~ (((rt0.c0)/(v0.c0)))) WHERE ((~ (((vt1.c0)!=(rt0.c2))))) ORDER BY (NOT ((+ (vt1.c0))))  NULLS FIRST;
SELECT * FROM rt0, v0, vt1 WHERE (((((rt0.c1)+(rt0.c2))) BETWEEN (LOWER(rt0.c1)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'60b6')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(rt0.c2))) BETWEEN (LOWER(rt0.c1)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'60b6'))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE (((((rt0.c1)+(rt0.c2))) BETWEEN (LOWER(rt0.c1)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'60b6')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(rt0.c2))) BETWEEN (LOWER(rt0.c1)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'60b6'))))) IS TRUE)  as count FROM rt0, v0, vt1);
SELECT * FROM rt0, v0, vt1 WHERE (((((rt0.c1)+(rt0.c2))) BETWEEN (LOWER(rt0.c1)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (x'60b6')))));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)*(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*(v0.c0)) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)*(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*(v0.c0)) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)*(v0.c0)) IN ()));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ ((((v0.c0))<>((0.9906227423761553))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0))!=((0.9906227423761553)))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ ((((v0.c0))<>((0.9906227423761553))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((v0.c0))!=((0.9906227423761553)))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((~ ((((v0.c0))<>((0.9906227423761553))))));
SELECT ALL * FROM v0, vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))=((((((v0.c0)OR(vt1.c0)))OR(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)<=(vt1.c0))))=((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))=((((((v0.c0)OR(vt1.c0)))OR(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)<=(vt1.c0))))=((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))=((((((v0.c0)OR(vt1.c0)))OR(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((CAST(v0.c0 AS TEXT) IN ()));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0) BETWEEN (json_quote(rt0.c2)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (json_quote(rt0.c2)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0) BETWEEN (json_quote(rt0.c2)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (json_quote(rt0.c2)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c0) BETWEEN (json_quote(rt0.c2)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)) AS BLOB)  NULLS LAST;
SELECT * FROM v0, vt1 INNER JOIN vt0 ON vt1.c0 WHERE (((CAST('a䤡' AS INTEGER))-(CAST(vt1.c0 AS INTEGER)))) ORDER BY TRIM(vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('a䤡' AS INTEGER))-(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON vt1.c0 ORDER BY TRIM(vt0.c0) ASC);
SELECT * FROM v0, vt1 INNER JOIN vt0 ON vt1.c0 WHERE (((CAST('a䤡' AS INTEGER))-(CAST(vt1.c0 AS INTEGER)))) ORDER BY TRIM(vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('a䤡' AS INTEGER))-(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON vt1.c0 ORDER BY TRIM(vt0.c0) ASC);
SELECT * FROM v0, vt1 INNER JOIN vt0 ON vt1.c0 WHERE (((CAST('a䤡' AS INTEGER))-(CAST(vt1.c0 AS INTEGER)))) ORDER BY TRIM(vt0.c0) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)<=('}K')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)<=('}K'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)<=('}K')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)<=('}K'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)<=('}K')))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (x'7439') ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS FIRST, CASE (vt1.c0 IN (v0.c0, '-1526147306'))  WHEN 'xo' THEN (((0X2ee4cd77, v0.c0, vt1.c0))>((vt1.c0, v0.c0, v0.c0))) ELSE (((vt1.c0))>((vt1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'7439') IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS FIRST, CASE (vt1.c0 IN (v0.c0, '-1526147306'))  WHEN 'xo' THEN (((0X2ee4cd77, v0.c0, vt1.c0))>((vt1.c0, v0.c0, v0.c0))) ELSE (((vt1.c0))>((vt1.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (x'7439') ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS FIRST, CASE (vt1.c0 IN (v0.c0, '-1526147306'))  WHEN 'xo' THEN (((0X2ee4cd77, v0.c0, vt1.c0))>((vt1.c0, v0.c0, v0.c0))) ELSE (((vt1.c0))>((vt1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'7439') IS TRUE)  as count FROM vt1, v0 ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS FIRST, CASE (vt1.c0 IN (v0.c0, '-1526147306'))  WHEN 'xo' THEN (((0X2ee4cd77, v0.c0, vt1.c0))>((vt1.c0, v0.c0, v0.c0))) ELSE (((vt1.c0))>((vt1.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (x'7439') ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS FIRST, CASE (vt1.c0 IN (v0.c0, '-1526147306'))  WHEN 'xo' THEN (((0X2ee4cd77, v0.c0, vt1.c0))>((vt1.c0, v0.c0, v0.c0))) ELSE (((vt1.c0))>((vt1.c0))) END  NULLS LAST;
SELECT ALL * FROM v0 WHERE (JULIANDAY(CASE v0.c0  WHEN x'a596' THEN '' END, ((v0.c0)*(v0.c0)), LOWER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(CASE v0.c0  WHEN x'a596' THEN '' END, ((v0.c0)*(v0.c0)), LOWER(DISTINCT v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (JULIANDAY(CASE v0.c0  WHEN x'a596' THEN '' END, ((v0.c0)*(v0.c0)), LOWER(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(CASE v0.c0  WHEN x'a596' THEN '' END, ((v0.c0)*(v0.c0)), LOWER(DISTINCT v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (JULIANDAY(CASE v0.c0  WHEN x'a596' THEN '' END, ((v0.c0)*(v0.c0)), LOWER(DISTINCT v0.c0)));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR((('2琖{F')<(rt0.c2)))))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR((('2琖{F')<(rt0.c2)))))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR((('2琖{F')<(rt0.c2)))))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR((('2琖{F')<(rt0.c2)))))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR((('2琖{F')<(rt0.c2)))))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2 COLLATE BINARY)/((+ (777241602))))) ORDER BY LOWER((rt0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)/((+ (777241602))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY LOWER((rt0.c0 IN ())) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2 COLLATE BINARY)/((+ (777241602))))) ORDER BY LOWER((rt0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)/((+ (777241602))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY LOWER((rt0.c0 IN ())) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c2 COLLATE BINARY)/((+ (777241602))))) ORDER BY LOWER((rt0.c0 IN ())) ASC;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)<(vt1.c0))) NOT BETWEEN ((((vt0.c0))>((vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt1.c0))) NOT BETWEEN ((((vt0.c0))>((vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)<(vt1.c0))) NOT BETWEEN ((((vt0.c0))>((vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt1.c0))) NOT BETWEEN ((((vt0.c0))>((vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)<(vt1.c0))) NOT BETWEEN ((((vt0.c0))>((vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((NULLIF(DISTINCT vt1.c0, vt1.c0)) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8593045646053833)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8593045646053833)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8593045646053833)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8593045646053833)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(0.8593045646053833)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN vt1 ON ((NOT (v0.c0)) IN ()) WHERE (CASE WHEN json_remove(vt0.c0, x'') THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_remove(vt0.c0, x'') THEN vt0.c0 END) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON ((NOT (v0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN vt1 ON ((NOT (v0.c0)) IN ()) WHERE (CASE WHEN json_remove(vt0.c0, x'') THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_remove(vt0.c0, x'') THEN vt0.c0 END) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON ((NOT (v0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, v0 CROSS JOIN vt1 ON ((NOT (v0.c0)) IN ()) WHERE (CASE WHEN json_remove(vt0.c0, x'') THEN vt0.c0 END);
SELECT ALL COUNT(*) FROM v0, rt0, vt1, vt0 WHERE (((('()', CASE rt0.c0  WHEN vt1.c0 THEN 'ⲧA' ELSE vt0.c0 END, ((v0.c0)||(rt0.c0))))=((vt1.c0, vt1.c0 COLLATE NOCASE, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((('()', CASE rt0.c0  WHEN vt1.c0 THEN 'ⲧA' ELSE vt0.c0 END, ((v0.c0)||(rt0.c0))))=((vt1.c0, vt1.c0 COLLATE NOCASE, rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt1, vt0 WHERE (((('()', CASE rt0.c0  WHEN vt1.c0 THEN 'ⲧA' ELSE vt0.c0 END, ((v0.c0)||(rt0.c0))))=((vt1.c0, vt1.c0 COLLATE NOCASE, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((('()', CASE rt0.c0  WHEN vt1.c0 THEN 'ⲧA' ELSE vt0.c0 END, ((v0.c0)||(rt0.c0))))=((vt1.c0, vt1.c0 COLLATE NOCASE, rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt1, vt0 WHERE (((('()', CASE rt0.c0  WHEN vt1.c0 THEN 'ⲧA' ELSE vt0.c0 END, ((v0.c0)||(rt0.c0))))=((vt1.c0, vt1.c0 COLLATE NOCASE, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 COLLATE NOCASE, CAST(rt0.c0 AS NUMERIC), LIKELY(v0.c0)))<((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE NOCASE, ((rt0.c1)LIKE(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE NOCASE, CAST(rt0.c0 AS NUMERIC), LIKELY(v0.c0)))<((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE NOCASE, ((rt0.c1)LIKE(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 COLLATE NOCASE, CAST(rt0.c0 AS NUMERIC), LIKELY(v0.c0)))<((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE NOCASE, ((rt0.c1)LIKE(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE NOCASE, CAST(rt0.c0 AS NUMERIC), LIKELY(v0.c0)))<((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE NOCASE, ((rt0.c1)LIKE(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c1 COLLATE NOCASE, CAST(rt0.c0 AS NUMERIC), LIKELY(v0.c0)))<((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c1 COLLATE NOCASE, ((rt0.c1)LIKE(rt0.c0))))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt0.c0) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) WHERE (vt1.c0);
SELECT * FROM vt0, vt1, rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((0.07389013324994798)) AND (((((vt0.c0))>=((rt0.c1)))))) WHERE (((((vt1.c0) NOT BETWEEN (1275206458) AND (vt0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (1275206458) AND (vt0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((0.07389013324994798)) AND (((((vt0.c0))>=((rt0.c1)))))));
SELECT * FROM vt0, vt1, rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((0.07389013324994798)) AND (((((vt0.c0))>=((rt0.c1)))))) WHERE (((((vt1.c0) NOT BETWEEN (1275206458) AND (vt0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (1275206458) AND (vt0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((0.07389013324994798)) AND (((((vt0.c0))>=((rt0.c1)))))));
SELECT * FROM vt0, vt1, rt0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) BETWEEN ((0.07389013324994798)) AND (((((vt0.c0))>=((rt0.c1)))))) WHERE (((((vt1.c0) NOT BETWEEN (1275206458) AND (vt0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(rt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE 1033219332  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (IFNULL(DISTINCT vt0.c0, x'')))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (CASE 1033219332  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (IFNULL(DISTINCT vt0.c0, x'')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE 1033219332  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (IFNULL(DISTINCT vt0.c0, x'')))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (CASE 1033219332  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (IFNULL(DISTINCT vt0.c0, x'')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE 1033219332  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (IFNULL(DISTINCT vt0.c0, x'')))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((LIKELY(vt1.c0))))) ORDER BY (('-724700649')<>(((vt1.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((LIKELY(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (('-724700649')!=(((vt1.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((LIKELY(vt1.c0))))) ORDER BY (('-724700649')<>(((vt1.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((LIKELY(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (('-724700649')!=(((vt1.c0) IS TRUE)))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AND ((LIKELY(vt1.c0))))) ORDER BY (('-724700649')<>(((vt1.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (x'7b77');
SELECT SUM(count) FROM (SELECT ALL ((x'7b77') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'7b77');
SELECT SUM(count) FROM (SELECT ALL ((x'7b77') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'7b77');
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt1 ON x'83af' WHERE (UPPER(DISTINCT vt1.c0 COLLATE NOCASE)) ORDER BY CAST(((rt0.c2) NOT NULL) AS BLOB) DESC, (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, ((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((vt1.c0)-(rt0.c2)))) AND ((0xffffffffc0bd4b78, CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END, ((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt1 ON x'83af' ORDER BY CAST(((rt0.c2) NOT NULL) AS BLOB) DESC, (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, ((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((vt1.c0)-(rt0.c2)))) AND ((0Xffffffffc0bd4b78, CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END, ((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt1 ON x'83af' WHERE (UPPER(DISTINCT vt1.c0 COLLATE NOCASE)) ORDER BY CAST(((rt0.c2) NOT NULL) AS BLOB) DESC, (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, ((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((vt1.c0)-(rt0.c2)))) AND ((0xffffffffc0bd4b78, CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END, ((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt1 ON x'83af' ORDER BY CAST(((rt0.c2) NOT NULL) AS BLOB) DESC, (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, ((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((vt1.c0)-(rt0.c2)))) AND ((0Xffffffffc0bd4b78, CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END, ((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt1 ON x'83af' WHERE (UPPER(DISTINCT vt1.c0 COLLATE NOCASE)) ORDER BY CAST(((rt0.c2) NOT NULL) AS BLOB) DESC, (((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((NULL, ((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)), ((vt1.c0)-(rt0.c2)))) AND ((0xffffffffc0bd4b78, CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 END, ((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((((('1673192802')) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ())) ORDER BY CAST(CAST(0xffffffff8d1379ff AS NUMERIC) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('1673192802')) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CAST(0Xffffffff8d1379ff AS NUMERIC) AS BLOB) DESC);
SELECT * FROM rt0, v0 WHERE ((((('1673192802')) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ())) ORDER BY CAST(CAST(0xffffffff8d1379ff AS NUMERIC) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('1673192802')) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(CAST(0Xffffffff8d1379ff AS NUMERIC) AS BLOB) DESC);
SELECT * FROM rt0, v0 WHERE ((((('1673192802')) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ())) ORDER BY CAST(CAST(0xffffffff8d1379ff AS NUMERIC) AS BLOB) DESC;
SELECT * FROM vt1, v0 NOT INDEXED WHERE ((((- (v0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.9103122536927236 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.9103122536927236 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 NOT INDEXED WHERE ((((- (v0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.9103122536927236 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.9103122536927236 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 NOT INDEXED WHERE ((((- (v0.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.9103122536927236 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM rt0, v0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((((rt0.c2)OR(vt0.c0)))AND(v0.c0)), rt0.c1, vt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0))))) WHERE ((((((~ (x'')))AND(CAST(rt0.c0 AS TEXT))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (x'')))AND(CAST(rt0.c0 AS TEXT))))AND(v0.c0))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((((rt0.c2)OR(vt0.c0)))AND(v0.c0)), rt0.c1, vt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0))))));
SELECT ALL * FROM rt0, v0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((((rt0.c2)OR(vt0.c0)))AND(v0.c0)), rt0.c1, vt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0))))) WHERE ((((((~ (x'')))AND(CAST(rt0.c0 AS TEXT))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (x'')))AND(CAST(rt0.c0 AS TEXT))))AND(v0.c0))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((((rt0.c2)OR(vt0.c0)))AND(v0.c0)), rt0.c1, vt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0))))));
SELECT ALL * FROM rt0, v0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (((((rt0.c2)OR(vt0.c0)))AND(v0.c0)), rt0.c1, vt0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((v0.c0))))) WHERE ((((((~ (x'')))AND(CAST(rt0.c0 AS TEXT))))AND(v0.c0)));
SELECT ALL * FROM v0, vt1 INNER JOIN rt0 ON 'Hj' COLLATE RTRIM LEFT OUTER JOIN vt0 ON CAST((NOT (vt0.c0)) AS BLOB) WHERE (((CAST(rt0.c1 AS REAL))LIKE((vt1.c0 IN (rt0.c2, vt0.c0))))) ORDER BY (~ (rt0.c1)) COLLATE NOCASE COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL))LIKE((vt1.c0 IN (rt0.c2, vt0.c0))))) IS TRUE)  as count FROM v0, vt1 INNER JOIN rt0 ON 'Hj' COLLATE RTRIM LEFT OUTER JOIN vt0 ON CAST((NOT (vt0.c0)) AS BLOB) ORDER BY (~ (rt0.c1)) COLLATE NOCASE COLLATE RTRIM ASC);
SELECT ALL * FROM v0, vt1 INNER JOIN rt0 ON 'Hj' COLLATE RTRIM LEFT OUTER JOIN vt0 ON CAST((NOT (vt0.c0)) AS BLOB) WHERE (((CAST(rt0.c1 AS REAL))LIKE((vt1.c0 IN (rt0.c2, vt0.c0))))) ORDER BY (~ (rt0.c1)) COLLATE NOCASE COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL))LIKE((vt1.c0 IN (rt0.c2, vt0.c0))))) IS TRUE)  as count FROM v0, vt1 INNER JOIN rt0 ON 'Hj' COLLATE RTRIM LEFT OUTER JOIN vt0 ON CAST((NOT (vt0.c0)) AS BLOB) ORDER BY (~ (rt0.c1)) COLLATE NOCASE COLLATE RTRIM ASC);
SELECT ALL * FROM v0, vt1 INNER JOIN rt0 ON 'Hj' COLLATE RTRIM LEFT OUTER JOIN vt0 ON CAST((NOT (vt0.c0)) AS BLOB) WHERE (((CAST(rt0.c1 AS REAL))LIKE((vt1.c0 IN (rt0.c2, vt0.c0))))) ORDER BY (~ (rt0.c1)) COLLATE NOCASE COLLATE RTRIM ASC;
SELECT COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ((((((((((((vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c2))==((vt1.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c2))))AND(((v0.c0) NOTNULL))))OR((v0.c0 IN ()))))OR(((rt0.c0)<(v0.c0)))))OR(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c2))=((vt1.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c2))))AND(((v0.c0) NOTNULL))))OR((v0.c0 IN ()))))OR(((rt0.c0)<(v0.c0)))))OR(json_valid(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0, vt1);
SELECT COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ((((((((((((vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c2))==((vt1.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c2))))AND(((v0.c0) NOTNULL))))OR((v0.c0 IN ()))))OR(((rt0.c0)<(v0.c0)))))OR(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c2))=((vt1.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c2))))AND(((v0.c0) NOTNULL))))OR((v0.c0 IN ()))))OR(((rt0.c0)<(v0.c0)))))OR(json_valid(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0, vt1);
SELECT COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ((((((((((((vt1.c0, v0.c0, rt0.c2, rt0.c1, rt0.c2))==((vt1.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c2))))AND(((v0.c0) NOTNULL))))OR((v0.c0 IN ()))))OR(((rt0.c0)<(v0.c0)))))OR(json_valid(vt0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0)AND('2015790085')))AND(v0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND('2015790085')))AND(v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0)AND('2015790085')))AND(v0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND('2015790085')))AND(v0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((((v0.c0)AND('2015790085')))AND(v0.c0))) NOTNULL);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE));
SELECT ALL * FROM vt1, rt0 CROSS JOIN v0 ON ((((vt1.c0)<=(v0.c0))) ISNULL) WHERE (((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.7268373727230965)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.7268373727230965)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON ((((vt1.c0)<=(v0.c0))) ISNULL));
SELECT ALL * FROM vt1, rt0 CROSS JOIN v0 ON ((((vt1.c0)<=(v0.c0))) ISNULL) WHERE (((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.7268373727230965)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.7268373727230965)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON ((((vt1.c0)<=(v0.c0))) ISNULL));
SELECT ALL * FROM vt1, rt0 CROSS JOIN v0 ON ((((vt1.c0)<=(v0.c0))) ISNULL) WHERE (((vt1.c0) NOT BETWEEN (rt0.c2) AND (0.7268373727230965)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((((((rt0.c2)AND(0.17428707316126624)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))) ORDER BY (((rt0.c1)/(v0.c0)) IN ()) DESC, CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE BINARY ASC, (- ((~ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((((((rt0.c2)AND(0.17428707316126624)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1)/(v0.c0)) IN ()) DESC, CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE BINARY ASC, (- ((~ (v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((((((rt0.c2)AND(0.17428707316126624)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))) ORDER BY (((rt0.c1)/(v0.c0)) IN ()) DESC, CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE BINARY ASC, (- ((~ (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((((((rt0.c2)AND(0.17428707316126624)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1)/(v0.c0)) IN ()) DESC, CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE BINARY ASC, (- ((~ (v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((((((((rt0.c2)AND(0.17428707316126624)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))) ORDER BY (((rt0.c1)/(v0.c0)) IN ()) DESC, CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE BINARY ASC, (- ((~ (v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(((vt1.c0)OR(vt1.c0)))) WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (-1425353796)) ELSE (+ (v0.c0)) END) ORDER BY (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (-1425353796)) ELSE (+ (v0.c0)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(((vt1.c0)OR(vt1.c0)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(((vt1.c0)OR(vt1.c0)))) WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (-1425353796)) ELSE (+ (v0.c0)) END) ORDER BY (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (-1425353796)) ELSE (+ (v0.c0)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(((vt1.c0)OR(vt1.c0)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((((vt1.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))*(((vt1.c0)OR(vt1.c0)))) WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (-1425353796)) ELSE (+ (v0.c0)) END) ORDER BY (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0.6264480171812857)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))) ORDER BY (((((rt0.c2 IN (vt0.c0)))AND(x'')))OR(((((((((0.138820924154469)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c2)))) ASC, CAST(CAST(vt0.c0 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((0.6264480171812857)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((rt0.c2 IN (vt0.c0)))AND(x'')))OR(((((((((0.138820924154469)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c2)))) ASC, CAST(CAST(vt0.c0 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0.6264480171812857)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))) ORDER BY (((((rt0.c2 IN (vt0.c0)))AND(x'')))OR(((((((((0.138820924154469)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c2)))) ASC, CAST(CAST(vt0.c0 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((0.6264480171812857)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((rt0.c2 IN (vt0.c0)))AND(x'')))OR(((((((((0.138820924154469)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c2)))) ASC, CAST(CAST(vt0.c0 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((0.6264480171812857)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) AND ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))) ORDER BY (((((rt0.c2 IN (vt0.c0)))AND(x'')))OR(((((((((0.138820924154469)OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c2)))) ASC, CAST(CAST(vt0.c0 AS INTEGER) AS BLOB);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT rt0.c0, ((rt0.c0) IS FALSE)) WHERE (((((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT NULL)) ORDER BY LIKELY(TYPEOF(DISTINCT rt0.c1)) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE '1645054166' END)>(TRIM(DISTINCT v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT rt0.c0, ((rt0.c0) IS FALSE)) ORDER BY LIKELY(TYPEOF(DISTINCT rt0.c1)) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE '1645054166' END)>(TRIM(DISTINCT v0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT rt0.c0, ((rt0.c0) IS FALSE)) WHERE (((((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT NULL)) ORDER BY LIKELY(TYPEOF(DISTINCT rt0.c1)) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE '1645054166' END)>(TRIM(DISTINCT v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT rt0.c0, ((rt0.c0) IS FALSE)) ORDER BY LIKELY(TYPEOF(DISTINCT rt0.c1)) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE '1645054166' END)>(TRIM(DISTINCT v0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON vt0.c0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT rt0.c0, ((rt0.c0) IS FALSE)) WHERE (((((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT NULL)) ORDER BY LIKELY(TYPEOF(DISTINCT rt0.c1)) ASC  NULLS LAST, ((CASE WHEN v0.c0 THEN v0.c0 ELSE '1645054166' END)>(TRIM(DISTINCT v0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((LTRIM(rt0.c2, vt1.c0))-((0.8081559421521386 IN ())))) ORDER BY CAST(((vt0.c0) ISNULL) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c2, vt1.c0))-((0.8081559421521386 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST(((vt0.c0) ISNULL) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((LTRIM(rt0.c2, vt1.c0))-((0.8081559421521386 IN ())))) ORDER BY CAST(((vt0.c0) ISNULL) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c2, vt1.c0))-((0.8081559421521386 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST(((vt0.c0) ISNULL) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((LTRIM(rt0.c2, vt1.c0))-((0.8081559421521386 IN ())))) ORDER BY CAST(((vt0.c0) ISNULL) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (x'') AND ((+ (rt0.c2)))) FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) END WHERE (CAST((((rt0.c2))>=((rt0.c2))) AS BLOB)) ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))>=((rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (x'') AND ((+ (rt0.c2)))) FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) END ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (x'') AND ((+ (rt0.c2)))) FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) END WHERE (CAST((((rt0.c2))>=((rt0.c2))) AS BLOB)) ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))>=((rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (x'') AND ((+ (rt0.c2)))) FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) END ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (x'') AND ((+ (rt0.c2)))) FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) END WHERE (CAST((((rt0.c2))>=((rt0.c2))) AS BLOB)) ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((('0.5301741010906732')) BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((HEX(rt0.c1))))) ORDER BY ((('C3')IS NOT(rt0.c2)) IN (x'2534', (rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('0.5301741010906732')) BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((HEX(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY ((('C3')IS NOT(rt0.c2)) IN (x'2534', (rt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((('0.5301741010906732')) BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((HEX(rt0.c1))))) ORDER BY ((('C3')IS NOT(rt0.c2)) IN (x'2534', (rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('0.5301741010906732')) BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((HEX(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 ORDER BY ((('C3')IS NOT(rt0.c2)) IN (x'2534', (rt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((('0.5301741010906732')) BETWEEN ((((rt0.c2)&(rt0.c1)))) AND ((HEX(rt0.c1))))) ORDER BY ((('C3')IS NOT(rt0.c2)) IN (x'2534', (rt0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))>=(vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (NULLIF(0.3479743408870287, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))>=(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (NULLIF(0.3479743408870287, vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))>=(vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (NULLIF(0.3479743408870287, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))>=(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (NULLIF(0.3479743408870287, vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))>=(vt0.c0 COLLATE NOCASE))) ORDER BY (NOT (NULLIF(0.3479743408870287, vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0, vt1 WHERE (CHANGES() COLLATE BINARY) ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (NOT (v0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c2))<=((v0.c0, '', rt0.c1))) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (('') IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN x'' WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) BETWEEN ('') AND (vt0.c0)) WHEN (~ (v0.c0)) THEN RTRIM(vt1.c0) END;
SELECT SUM(count) FROM (SELECT ((CHANGES() COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0, vt1 ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (NOT (v0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c2))<=((v0.c0, '', rt0.c1))) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (('') IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN x'' WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) BETWEEN ('') AND (vt0.c0)) WHEN (~ (v0.c0)) THEN RTRIM(vt1.c0) END);
SELECT ALL * FROM rt0, vt0, v0, vt1 WHERE (CHANGES() COLLATE BINARY) ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (NOT (v0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c2))<=((v0.c0, '', rt0.c1))) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (('') IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN x'' WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) BETWEEN ('') AND (vt0.c0)) WHEN (~ (v0.c0)) THEN RTRIM(vt1.c0) END;
SELECT SUM(count) FROM (SELECT ((CHANGES() COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0, vt1 ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (NOT (v0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c2))<=((v0.c0, '', rt0.c1))) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (('') IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN x'' WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) BETWEEN ('') AND (vt0.c0)) WHEN (~ (v0.c0)) THEN RTRIM(vt1.c0) END);
SELECT ALL * FROM rt0, vt0, v0, vt1 WHERE (CHANGES() COLLATE BINARY) ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN (NOT (v0.c0)) THEN (((rt0.c0, rt0.c1, rt0.c2))<=((v0.c0, '', rt0.c1))) WHEN ((rt0.c2)IS NOT(rt0.c1)) THEN (('') IS TRUE) WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN x'' WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) BETWEEN ('') AND (vt0.c0)) WHEN (~ (v0.c0)) THEN RTRIM(vt1.c0) END;
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE json_array_length(v0.c0)  WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE BINARY THEN vt0.c0 WHEN UNLIKELY(vt1.c0) THEN (((vt0.c0))==((v0.c0))) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END THEN '1275206458' WHEN CASE v0.c0  WHEN 0x456c17d9 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN ((v0.c0)*(vt1.c0)) ELSE ((vt0.c0)<<(-1.162388828E9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_array_length(v0.c0)  WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE BINARY THEN vt0.c0 WHEN UNLIKELY(vt1.c0) THEN (((vt0.c0))==((v0.c0))) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END THEN '1275206458' WHEN CASE v0.c0  WHEN 0X456c17d9 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN ((v0.c0)*(vt1.c0)) ELSE ((vt0.c0)<<(-1.162388828E9)) END) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE json_array_length(v0.c0)  WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE BINARY THEN vt0.c0 WHEN UNLIKELY(vt1.c0) THEN (((vt0.c0))==((v0.c0))) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END THEN '1275206458' WHEN CASE v0.c0  WHEN 0x456c17d9 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN ((v0.c0)*(vt1.c0)) ELSE ((vt0.c0)<<(-1.162388828E9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE json_array_length(v0.c0)  WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE BINARY THEN vt0.c0 WHEN UNLIKELY(vt1.c0) THEN (((vt0.c0))==((v0.c0))) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END THEN '1275206458' WHEN CASE v0.c0  WHEN 0X456c17d9 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN ((v0.c0)*(vt1.c0)) ELSE ((vt0.c0)<<(-1.162388828E9)) END) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CASE json_array_length(v0.c0)  WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN NULL COLLATE BINARY THEN vt0.c0 WHEN UNLIKELY(vt1.c0) THEN (((vt0.c0))==((v0.c0))) WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END THEN '1275206458' WHEN CASE v0.c0  WHEN 0x456c17d9 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN ((v0.c0)*(vt1.c0)) ELSE ((vt0.c0)<<(-1.162388828E9)) END);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0)>>(v0.c0)) IN (NULLIF(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)>>(v0.c0)) IN (NULLIF(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0)>>(v0.c0)) IN (NULLIF(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)>>(v0.c0)) IN (NULLIF(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((((v0.c0)>>(v0.c0)) IN (NULLIF(rt0.c0, rt0.c0))));
SELECT * FROM vt1, rt0, v0 WHERE ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))) COLLATE BINARY);
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (- ((('-985844331')<>(vt1.c0)))) FULL OUTER JOIN vt1 ON ((('1766622626') ISNULL) IN ()) WHERE (CASE ((((v0.c0)OR(rt0.c0)))AND(rt0.c0))  WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR(rt0.c0)))AND(rt0.c0))  WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c1 END END) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (- ((('-985844331')!=(vt1.c0)))) FULL OUTER JOIN vt1 ON ((('1766622626') ISNULL) IN ()));
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (- ((('-985844331')<>(vt1.c0)))) FULL OUTER JOIN vt1 ON ((('1766622626') ISNULL) IN ()) WHERE (CASE ((((v0.c0)OR(rt0.c0)))AND(rt0.c0))  WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR(rt0.c0)))AND(rt0.c0))  WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c1 END END) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (- ((('-985844331')!=(vt1.c0)))) FULL OUTER JOIN vt1 ON ((('1766622626') ISNULL) IN ()));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ('\n64f0W8');
SELECT SUM(count) FROM (SELECT (('\n64f0W8') IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ('\n64f0W8');
SELECT SUM(count) FROM (SELECT (('\n64f0W8') IS TRUE)  as count FROM rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ('\n64f0W8');
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (((((((((rt0.c1 IN (rt0.c0)))AND(((((vt1.c0)AND(v0.c0)))AND(0.01188589237153459)))))AND((+ (rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c1)) INNER JOIN rt0 ON CASE WHEN (v0.c0 IN (rt0.c0, rt0.c2)) THEN CAST(vt1.c0 AS BLOB) END WHERE (CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN v0.c0 COLLATE NOCASE THEN ((vt1.c0)%(rt0.c0)) WHEN CAST('-1208383437' AS INTEGER) THEN (- (rt0.c0)) WHEN (((vt1.c0))==((rt0.c1))) THEN NULL END) ORDER BY ((((v0.c0)OR((((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))))OR(NULLIF(rt0.c1, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN v0.c0 COLLATE NOCASE THEN ((vt1.c0)%(rt0.c0)) WHEN CAST('-1208383437' AS INTEGER) THEN (- (rt0.c0)) WHEN (((vt1.c0))==((rt0.c1))) THEN NULL END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON (((((((((rt0.c1 IN (rt0.c0)))AND(((((vt1.c0)AND(v0.c0)))AND(0.01188589237153459)))))AND((+ (rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c1)) INNER JOIN rt0 ON CASE WHEN (v0.c0 IN (rt0.c0, rt0.c2)) THEN CAST(vt1.c0 AS BLOB) END ORDER BY ((((v0.c0)OR((((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))))OR(NULLIF(rt0.c1, rt0.c0)))  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt1 ON (((((((((rt0.c1 IN (rt0.c0)))AND(((((vt1.c0)AND(v0.c0)))AND(0.01188589237153459)))))AND((+ (rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c1)) INNER JOIN rt0 ON CASE WHEN (v0.c0 IN (rt0.c0, rt0.c2)) THEN CAST(vt1.c0 AS BLOB) END WHERE (CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN v0.c0 COLLATE NOCASE THEN ((vt1.c0)%(rt0.c0)) WHEN CAST('-1208383437' AS INTEGER) THEN (- (rt0.c0)) WHEN (((vt1.c0))==((rt0.c1))) THEN NULL END) ORDER BY ((((v0.c0)OR((((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))))OR(NULLIF(rt0.c1, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN v0.c0 COLLATE NOCASE THEN ((vt1.c0)%(rt0.c0)) WHEN CAST('-1208383437' AS INTEGER) THEN (- (rt0.c0)) WHEN (((vt1.c0))==((rt0.c1))) THEN NULL END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON (((((((((rt0.c1 IN (rt0.c0)))AND(((((vt1.c0)AND(v0.c0)))AND(0.01188589237153459)))))AND((+ (rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER))))OR(rt0.c1)) INNER JOIN rt0 ON CASE WHEN (v0.c0 IN (rt0.c0, rt0.c2)) THEN CAST(vt1.c0 AS BLOB) END ORDER BY ((((v0.c0)OR((((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0))))))OR(NULLIF(rt0.c1, rt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (0.7909340038563243);
SELECT SUM(count) FROM (SELECT ((0.7909340038563243) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (0.7909340038563243);
SELECT SUM(count) FROM (SELECT ((0.7909340038563243) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (0.7909340038563243);
SELECT ALL * FROM vt1 CROSS JOIN v0 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((((vt1.c0)OR(rt0.c2)))OR(v0.c0)) WHEN NULL THEN ((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (v0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 THEN (rt0.c0 IN ()) WHEN v0.c0 COLLATE RTRIM THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE RTRIM WHEN CAST(vt1.c0 AS REAL) THEN (((rt0.c1, rt0.c2, rt0.c0))=((v0.c0, v0.c0, v0.c0))) END RIGHT OUTER JOIN rt0 ON ((0x46aad77c) IS TRUE) WHERE ((((vt1.c0)) NOT BETWEEN (((((rt0.c1, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))))) AND ((((((vt1.c0)AND(rt0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((((rt0.c1, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))))) AND ((((((vt1.c0)AND(rt0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((((vt1.c0)OR(rt0.c2)))OR(v0.c0)) WHEN NULL THEN ((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (v0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 THEN (rt0.c0 IN ()) WHEN v0.c0 COLLATE RTRIM THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE RTRIM WHEN CAST(vt1.c0 AS REAL) THEN (((rt0.c1, rt0.c2, rt0.c0))==((v0.c0, v0.c0, v0.c0))) END RIGHT OUTER JOIN rt0 ON ((0X46aad77c) IS TRUE));
SELECT ALL * FROM vt1 CROSS JOIN v0 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((((vt1.c0)OR(rt0.c2)))OR(v0.c0)) WHEN NULL THEN ((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (v0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 THEN (rt0.c0 IN ()) WHEN v0.c0 COLLATE RTRIM THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE RTRIM WHEN CAST(vt1.c0 AS REAL) THEN (((rt0.c1, rt0.c2, rt0.c0))=((v0.c0, v0.c0, v0.c0))) END RIGHT OUTER JOIN rt0 ON ((0x46aad77c) IS TRUE) WHERE ((((vt1.c0)) NOT BETWEEN (((((rt0.c1, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))))) AND ((((((vt1.c0)AND(rt0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((((rt0.c1, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))))) AND ((((((vt1.c0)AND(rt0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN v0 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((((vt1.c0)OR(rt0.c2)))OR(v0.c0)) WHEN NULL THEN ((((rt0.c1)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (v0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN rt0.c2 THEN (rt0.c0 IN ()) WHEN v0.c0 COLLATE RTRIM THEN (- (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE RTRIM WHEN CAST(vt1.c0 AS REAL) THEN (((rt0.c1, rt0.c2, rt0.c0))==((v0.c0, v0.c0, v0.c0))) END RIGHT OUTER JOIN rt0 ON ((0X46aad77c) IS TRUE));
SELECT * FROM vt1, vt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (((((vt0.c0))<((vt0.c0)))) BETWEEN (vt1.c0) AND ((((vt1.c0))!=((x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0))<((vt0.c0)))) BETWEEN (vt1.c0) AND ((((vt1.c0))<>((x''))))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (((((vt0.c0))<((vt0.c0)))) BETWEEN (vt1.c0) AND ((((vt1.c0))!=((x''))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0))<((vt0.c0)))) BETWEEN (vt1.c0) AND ((((vt1.c0))<>((x''))))) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (((((vt0.c0))<((vt0.c0)))) BETWEEN (vt1.c0) AND ((((vt1.c0))!=((x''))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0, rt0.c2)))>(((rt0.c2)IS(rt0.c0))))) ORDER BY rt0.c1  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0, rt0.c2)))>(((rt0.c2)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0, rt0.c2)))>(((rt0.c2)IS(rt0.c0))))) ORDER BY rt0.c1  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0, rt0.c2)))>(((rt0.c2)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0, rt0.c2)))>(((rt0.c2)IS(rt0.c0))))) ORDER BY rt0.c1  NULLS LAST, (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOTNULL);
SELECT COUNT(*) FROM vt1, rt0, vt0, v0 WHERE ((((((rt0.c2))<=((v0.c0))))<<(0x456c17d9)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<=((v0.c0))))<<(0x456c17d9))) IS TRUE)  as count FROM vt1, rt0, vt0, v0);
SELECT COUNT(*) FROM vt1, rt0, vt0, v0 WHERE ((((((rt0.c2))<=((v0.c0))))<<(0x456c17d9)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<=((v0.c0))))<<(0x456c17d9))) IS TRUE)  as count FROM vt1, rt0, vt0, v0);
SELECT COUNT(*) FROM vt1, rt0, vt0, v0 WHERE ((((((rt0.c2))<=((v0.c0))))<<(0x456c17d9)));
SELECT ALL * FROM v0, rt0, vt1, vt0 WHERE ((((v0.c0 IN ()))||(COALESCE(vt0.c0, '*FRH'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))||(COALESCE(vt0.c0, '*FRH')))) IS TRUE)  as count FROM v0, rt0, vt1, vt0);
SELECT ALL * FROM v0, rt0, vt1, vt0 WHERE ((((v0.c0 IN ()))||(COALESCE(vt0.c0, '*FRH'))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))||(COALESCE(vt0.c0, '*FRH')))) IS TRUE)  as count FROM v0, rt0, vt1, vt0);
SELECT ALL * FROM v0, rt0, vt1, vt0 WHERE ((((v0.c0 IN ()))||(COALESCE(vt0.c0, '*FRH'))));
SELECT * FROM v0, vt0 WHERE ((((((((((((((((v0.c0))==((vt0.c0))))OR((v0.c0 IN ()))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(v0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR((- (x''))))) ORDER BY (((v0.c0)<(vt0.c0)) IN (((0.8464296544618117)OR(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((v0.c0))=((vt0.c0))))OR((v0.c0 IN ()))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(v0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR((- (x''))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)<(vt0.c0)) IN (((0.8464296544618117)OR(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((((((((((((((v0.c0))==((vt0.c0))))OR((v0.c0 IN ()))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(v0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR((- (x''))))) ORDER BY (((v0.c0)<(vt0.c0)) IN (((0.8464296544618117)OR(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((v0.c0))=((vt0.c0))))OR((v0.c0 IN ()))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(v0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR((- (x''))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)<(vt0.c0)) IN (((0.8464296544618117)OR(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((((((((((((((v0.c0))==((vt0.c0))))OR((v0.c0 IN ()))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))AND(((((v0.c0)AND(v0.c0)))AND(vt0.c0)))))OR(v0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR((- (x''))))) ORDER BY (((v0.c0)<(vt0.c0)) IN (((0.8464296544618117)OR(v0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, vt1 WHERE (CAST(((('1950376562')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) AS INTEGER)) ORDER BY (((vt0.c0, rt0.c2, rt0.c1, '4X੡J<', rt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL), vt0.c0, (vt0.c0 IN ()), NULL, ((rt0.c2) IS TRUE))) AND (((vt0.c0 IN ()), (vt0.c0 IN (rt0.c0)), CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((('1950376562')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((vt0.c0, rt0.c2, rt0.c1, '4X੡J<', rt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL), vt0.c0, (vt0.c0 IN ()), NULL, ((rt0.c2) IS TRUE))) AND (((vt0.c0 IN ()), (vt0.c0 IN (rt0.c0)), CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ())))) ASC);
SELECT * FROM rt0, vt0, vt1 WHERE (CAST(((('1950376562')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) AS INTEGER)) ORDER BY (((vt0.c0, rt0.c2, rt0.c1, '4X੡J<', rt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL), vt0.c0, (vt0.c0 IN ()), NULL, ((rt0.c2) IS TRUE))) AND (((vt0.c0 IN ()), (vt0.c0 IN (rt0.c0)), CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((('1950376562')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((vt0.c0, rt0.c2, rt0.c1, '4X੡J<', rt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL), vt0.c0, (vt0.c0 IN ()), NULL, ((rt0.c2) IS TRUE))) AND (((vt0.c0 IN ()), (vt0.c0 IN (rt0.c0)), CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ())))) ASC);
SELECT * FROM rt0, vt0, vt1 WHERE (CAST(((('1950376562')) BETWEEN ((vt1.c0)) AND ((rt0.c0))) AS INTEGER)) ORDER BY (((vt0.c0, rt0.c2, rt0.c1, '4X੡J<', rt0.c1)) BETWEEN ((CAST(vt0.c0 AS REAL), vt0.c0, (vt0.c0 IN ()), NULL, ((rt0.c2) IS TRUE))) AND (((vt0.c0 IN ()), (vt0.c0 IN (rt0.c0)), CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c0 IN ())))) ASC;
SELECT * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0))GLOB(vt1.c0 COLLATE NOCASE))) ORDER BY ((((((vt1.c0) NOTNULL))OR((vt1.c0 IN ()))))AND(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0))GLOB(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) NOTNULL))OR((vt1.c0 IN ()))))AND(vt1.c0))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0))GLOB(vt1.c0 COLLATE NOCASE))) ORDER BY ((((((vt1.c0) NOTNULL))OR((vt1.c0 IN ()))))AND(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0))GLOB(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) NOTNULL))OR((vt1.c0 IN ()))))AND(vt1.c0))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0))GLOB(vt1.c0 COLLATE NOCASE))) ORDER BY ((((((vt1.c0) NOTNULL))OR((vt1.c0 IN ()))))AND(vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))<<(((v0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<<(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))<<(((v0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<<(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE))<<(((v0.c0)>>(v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (LOWER(rt0.c0 COLLATE BINARY)) ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) AS INTEGER) DESC  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (1.673192802E9));
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) AS INTEGER) DESC  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (1.673192802E9)));
SELECT COUNT(*) FROM v0, rt0 WHERE (LOWER(rt0.c0 COLLATE BINARY)) ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) AS INTEGER) DESC  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (1.673192802E9));
SELECT SUM(count) FROM (SELECT ((LOWER(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) AS INTEGER) DESC  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (1.673192802E9)));
SELECT COUNT(*) FROM v0, rt0 WHERE (LOWER(rt0.c0 COLLATE BINARY)) ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) AS INTEGER) DESC  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (1.673192802E9));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (~ (rt0.c2)) FULL OUTER JOIN v0 ON (~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) LEFT OUTER JOIN rt0 ON (- ((- ('u2')))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (~ (rt0.c2)) FULL OUTER JOIN v0 ON (~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) LEFT OUTER JOIN rt0 ON (- ((- ('u2')))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (~ (rt0.c2)) FULL OUTER JOIN v0 ON (~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) LEFT OUTER JOIN rt0 ON (- ((- ('u2')))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (~ (rt0.c2)) FULL OUTER JOIN v0 ON (~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) LEFT OUTER JOIN rt0 ON (- ((- ('u2')))));
SELECT * FROM v0 WHERE (NULLIF(DISTINCT v0.c0, (- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT v0.c0, (- (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULLIF(DISTINCT v0.c0, (- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT v0.c0, (- (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (NULLIF(DISTINCT v0.c0, (- (v0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0)LIKE(v0.c0)))) LEFT OUTER JOIN v0 ON ((((((0.07888186978951739)LIKE(rt0.c1)))AND(CAST(vt0.c0 AS REAL))))OR(UPPER(DISTINCT v0.c0))) WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0)LIKE(v0.c0)))) LEFT OUTER JOIN v0 ON ((((((0.07888186978951739)LIKE(rt0.c1)))AND(CAST(vt0.c0 AS REAL))))OR(UPPER(DISTINCT v0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0)LIKE(v0.c0)))) LEFT OUTER JOIN v0 ON ((((((0.07888186978951739)LIKE(rt0.c1)))AND(CAST(vt0.c0 AS REAL))))OR(UPPER(DISTINCT v0.c0))) WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c0)LIKE(v0.c0)))) LEFT OUTER JOIN v0 ON ((((((0.07888186978951739)LIKE(rt0.c1)))AND(CAST(vt0.c0 AS REAL))))OR(UPPER(DISTINCT v0.c0))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CASE (+ (vt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c1)LIKE(rt0.c2)) END CROSS JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((((rt0.c1, '145623649', NULL))>((rt0.c2, rt0.c2, vt1.c0))))) WHERE (((((vt0.c0)GLOB(rt0.c0)))|(0.17073947062800976 COLLATE NOCASE))) ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN ()) DESC, (((((rt0.c0)IS NOT(rt0.c2)), ((vt1.c0)LIKE(vt0.c0)), ((vt0.c0)>>(rt0.c0)), rt0.c1, (vt0.c0 IN ())))>((rt0.c0, (- (rt0.c1)), (vt1.c0 IN ()), rt0.c1 COLLATE BINARY, PRINTF(0.4785295761197935)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(rt0.c0)))|(0.17073947062800976 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE (+ (vt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c1)LIKE(rt0.c2)) END CROSS JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((((rt0.c1, '145623649', NULL))>((rt0.c2, rt0.c2, vt1.c0))))) ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN ()) DESC, (((((rt0.c0)IS NOT(rt0.c2)), ((vt1.c0)LIKE(vt0.c0)), ((vt0.c0)>>(rt0.c0)), rt0.c1, (vt0.c0 IN ())))>((rt0.c0, (- (rt0.c1)), (vt1.c0 IN ()), rt0.c1 COLLATE BINARY, PRINTF(0.4785295761197935)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CASE (+ (vt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c1)LIKE(rt0.c2)) END CROSS JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((((rt0.c1, '145623649', NULL))>((rt0.c2, rt0.c2, vt1.c0))))) WHERE (((((vt0.c0)GLOB(rt0.c0)))|(0.17073947062800976 COLLATE NOCASE))) ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN ()) DESC, (((((rt0.c0)IS NOT(rt0.c2)), ((vt1.c0)LIKE(vt0.c0)), ((vt0.c0)>>(rt0.c0)), rt0.c1, (vt0.c0 IN ())))>((rt0.c0, (- (rt0.c1)), (vt1.c0 IN ()), rt0.c1 COLLATE BINARY, PRINTF(0.4785295761197935)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(rt0.c0)))|(0.17073947062800976 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE (+ (vt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c1)LIKE(rt0.c2)) END CROSS JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((((rt0.c1, '145623649', NULL))>((rt0.c2, rt0.c2, vt1.c0))))) ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN ()) DESC, (((((rt0.c0)IS NOT(rt0.c2)), ((vt1.c0)LIKE(vt0.c0)), ((vt0.c0)>>(rt0.c0)), rt0.c1, (vt0.c0 IN ())))>((rt0.c0, (- (rt0.c1)), (vt1.c0 IN ()), rt0.c1 COLLATE BINARY, PRINTF(0.4785295761197935)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CASE (+ (vt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((rt0.c1)LIKE(rt0.c2)) END CROSS JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((((rt0.c1, '145623649', NULL))>((rt0.c2, rt0.c2, vt1.c0))))) WHERE (((((vt0.c0)GLOB(rt0.c0)))|(0.17073947062800976 COLLATE NOCASE))) ORDER BY (((rt0.c2)GLOB(rt0.c2)) IN ()) DESC, (((((rt0.c0)IS NOT(rt0.c2)), ((vt1.c0)LIKE(vt0.c0)), ((vt0.c0)>>(rt0.c0)), rt0.c1, (vt0.c0 IN ())))>((rt0.c0, (- (rt0.c1)), (vt1.c0 IN ()), rt0.c1 COLLATE BINARY, PRINTF(0.4785295761197935)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN '5U' THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE json_extract(rt0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '5U' THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE json_extract(rt0.c2, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN '5U' THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE json_extract(rt0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '5U' THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE json_extract(rt0.c2, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN '5U' THEN rt0.c2 WHEN (NOT (rt0.c1)) THEN (rt0.c2 IN ()) WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2) IS FALSE) ELSE json_extract(rt0.c2, rt0.c0) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)/(vt0.c0)) AS REAL)) ORDER BY CASE ((533446100) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0))=((NULL))) THEN (NOT (vt0.c0)) END DESC  NULLS LAST, (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))=((((vt0.c0)>>(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)/(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((533446100) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0))==((NULL))) THEN (NOT (vt0.c0)) END DESC  NULLS LAST, (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))==((((vt0.c0)>>(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)/(vt0.c0)) AS REAL)) ORDER BY CASE ((533446100) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0))=((NULL))) THEN (NOT (vt0.c0)) END DESC  NULLS LAST, (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))=((((vt0.c0)>>(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)/(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((533446100) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0))==((NULL))) THEN (NOT (vt0.c0)) END DESC  NULLS LAST, (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))==((((vt0.c0)>>(vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)/(vt0.c0)) AS REAL)) ORDER BY CASE ((533446100) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0))=((NULL))) THEN (NOT (vt0.c0)) END DESC  NULLS LAST, (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))=((((vt0.c0)>>(vt0.c0))))) ASC;
SELECT ALL * FROM vt0, v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (rt0.c2);
SELECT * FROM rt0 CROSS JOIN v0 ON v0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((vt1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) WHERE (x'') ORDER BY (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON v0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((vt1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT * FROM rt0 CROSS JOIN v0 ON v0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((vt1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) WHERE (x'') ORDER BY (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON v0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((vt1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT * FROM rt0 CROSS JOIN v0 ON v0.c0 COLLATE BINARY FULL OUTER JOIN vt1 ON (((rt0.c0)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((vt1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) IS TRUE) WHERE (x'') ORDER BY (- (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((v0.c0)OR('-1425353796')))AND(vt0.c0)) IN ()) WHERE (CASE WHEN ((((vt0.c0)OR(NULL)))OR(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(NULL)))OR(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((v0.c0)OR('-1425353796')))AND(vt0.c0)) IN ()));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((v0.c0)OR('-1425353796')))AND(vt0.c0)) IN ()) WHERE (CASE WHEN ((((vt0.c0)OR(NULL)))OR(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(NULL)))OR(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((v0.c0)OR('-1425353796')))AND(vt0.c0)) IN ()));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((v0.c0)OR('-1425353796')))AND(vt0.c0)) IN ()) WHERE (CASE WHEN ((((vt0.c0)OR(NULL)))OR(v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END);
SELECT * FROM rt0, vt1 WHERE (((TYPEOF(rt0.c2)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c2)) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((TYPEOF(rt0.c2)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c2)) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((TYPEOF(rt0.c2)) ISNULL));
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(ABS(rt0.c1))) INNER JOIN v0 ON CASE WHEN NULL THEN (+ (vt0.c0)) ELSE UPPER(DISTINCT rt0.c1) END WHERE (0.3254831405877009) ORDER BY ((CAST(rt0.c0 AS REAL))*((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.3254831405877009) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(ABS(rt0.c1))) INNER JOIN v0 ON CASE WHEN NULL THEN (+ (vt0.c0)) ELSE UPPER(DISTINCT rt0.c1) END ORDER BY ((CAST(rt0.c0 AS REAL))*((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(ABS(rt0.c1))) INNER JOIN v0 ON CASE WHEN NULL THEN (+ (vt0.c0)) ELSE UPPER(DISTINCT rt0.c1) END WHERE (0.3254831405877009) ORDER BY ((CAST(rt0.c0 AS REAL))*((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.3254831405877009) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(ABS(rt0.c1))) INNER JOIN v0 ON CASE WHEN NULL THEN (+ (vt0.c0)) ELSE UPPER(DISTINCT rt0.c1) END ORDER BY ((CAST(rt0.c0 AS REAL))*((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 CROSS JOIN rt0 ON ((((rt0.c2 COLLATE NOCASE)AND(rt0.c2 COLLATE RTRIM)))OR(ABS(rt0.c1))) INNER JOIN v0 ON CASE WHEN NULL THEN (+ (vt0.c0)) ELSE UPPER(DISTINCT rt0.c1) END WHERE (0.3254831405877009) ORDER BY ((CAST(rt0.c0 AS REAL))*((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT * FROM v0, vt1, vt0, rt0 WHERE ((((x'', ((x'')>>(v0.c0)), SQLITE_VERSION()))<((((rt0.c2) NOT NULL), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', ((x'')>>(v0.c0)), SQLITE_VERSION()))<((((rt0.c2) NOT NULL), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT * FROM v0, vt1, vt0, rt0 WHERE ((((x'', ((x'')>>(v0.c0)), SQLITE_VERSION()))<((((rt0.c2) NOT NULL), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', ((x'')>>(v0.c0)), SQLITE_VERSION()))<((((rt0.c2) NOT NULL), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt1, vt0, rt0);
SELECT * FROM v0, vt1, vt0, rt0 WHERE ((((x'', ((x'')>>(v0.c0)), SQLITE_VERSION()))<((((rt0.c2) NOT NULL), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), v0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM v0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN ('-668285598') AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '0.6264480171812857' END))) ORDER BY (~ (CAST(v0.c0 AS TEXT))), v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) NOT BETWEEN ('-668285598') AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '0.6264480171812857' END))) IS TRUE)  as count FROM v0, vt1 ORDER BY (~ (CAST(v0.c0 AS TEXT))), v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN ('-668285598') AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '0.6264480171812857' END))) ORDER BY (~ (CAST(v0.c0 AS TEXT))), v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) NOT BETWEEN ('-668285598') AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '0.6264480171812857' END))) IS TRUE)  as count FROM v0, vt1 ORDER BY (~ (CAST(v0.c0 AS TEXT))), v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN ('-668285598') AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '0.6264480171812857' END))) ORDER BY (~ (CAST(v0.c0 AS TEXT))), v0.c0  NULLS LAST;
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN ((rt0.c2)>>(v0.c0)) ELSE ((rt0.c2)<(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c2)) THEN ((rt0.c2)>>(v0.c0)) ELSE ((rt0.c2)<(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN ((rt0.c2)>>(v0.c0)) ELSE ((rt0.c2)<(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c2)) THEN ((rt0.c2)>>(v0.c0)) ELSE ((rt0.c2)<(vt1.c0)) END) IS TRUE)  as count FROM v0, vt1, rt0);
SELECT COUNT(*) FROM v0, vt1, rt0 WHERE (CASE WHEN (+ (rt0.c2)) THEN ((rt0.c2)>>(v0.c0)) ELSE ((rt0.c2)<(vt1.c0)) END);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((0.9706166226135623) IS FALSE) WHERE (LIKELY(NULL)) ORDER BY (~ ((((v0.c0))<((v0.c0))))) DESC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(NULL)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((0.9706166226135623) IS FALSE) ORDER BY (~ ((((v0.c0))<((v0.c0))))) DESC, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((0.9706166226135623) IS FALSE) WHERE (LIKELY(NULL)) ORDER BY (~ ((((v0.c0))<((v0.c0))))) DESC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(NULL)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((0.9706166226135623) IS FALSE) ORDER BY (~ ((((v0.c0))<((v0.c0))))) DESC, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((0.9706166226135623) IS FALSE) WHERE (LIKELY(NULL)) ORDER BY (~ ((((v0.c0))<((v0.c0))))) DESC, vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE (0.8685704500425904) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC, CASE ((((rt0.c1)OR(rt0.c0)))OR('C3'))  WHEN ((vt1.c0)-(rt0.c0)) THEN 0.9706166226135623 END;
SELECT SUM(count) FROM (SELECT ALL ((0.8685704500425904) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC, CASE ((((rt0.c1)OR(rt0.c0)))OR('C3'))  WHEN ((vt1.c0)-(rt0.c0)) THEN 0.9706166226135623 END);
SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE (0.8685704500425904) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC, CASE ((((rt0.c1)OR(rt0.c0)))OR('C3'))  WHEN ((vt1.c0)-(rt0.c0)) THEN 0.9706166226135623 END;
SELECT SUM(count) FROM (SELECT ALL ((0.8685704500425904) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC, CASE ((((rt0.c1)OR(rt0.c0)))OR('C3'))  WHEN ((vt1.c0)-(rt0.c0)) THEN 0.9706166226135623 END);
SELECT ALL * FROM vt0, rt0, vt1, v0 WHERE (0.8685704500425904) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) ASC, CASE ((((rt0.c1)OR(rt0.c0)))OR('C3'))  WHEN ((vt1.c0)-(rt0.c0)) THEN 0.9706166226135623 END;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((SQLITE_VERSION())IS NOT(((rt0.c0)>(rt0.c0)))) RIGHT OUTER JOIN v0 ON (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) WHERE ((~ (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((SQLITE_VERSION())IS NOT(((rt0.c0)>(rt0.c0)))) RIGHT OUTER JOIN v0 ON (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((SQLITE_VERSION())IS NOT(((rt0.c0)>(rt0.c0)))) RIGHT OUTER JOIN v0 ON (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) WHERE ((~ (NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((SQLITE_VERSION())IS NOT(((rt0.c0)>(rt0.c0)))) RIGHT OUTER JOIN v0 ON (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((SQLITE_VERSION())IS NOT(((rt0.c0)>(rt0.c0)))) RIGHT OUTER JOIN v0 ON (((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) WHERE ((~ (NULL COLLATE NOCASE)));
SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE (UNLIKELY(DISTINCT (v0.c0 IN ()))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (v0.c0 IN ()))) IS TRUE)  as count FROM vt1 NATURAL JOIN v0 ORDER BY (CAST(vt1.c0 AS INTEGER) IN ()));
SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE (UNLIKELY(DISTINCT (v0.c0 IN ()))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (v0.c0 IN ()))) IS TRUE)  as count FROM vt1 NATURAL JOIN v0 ORDER BY (CAST(vt1.c0 AS INTEGER) IN ()));
SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE (UNLIKELY(DISTINCT (v0.c0 IN ()))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ());
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))OR(0.8608580353464357))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))OR(0.8608580353464357))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))OR(0.8608580353464357))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))OR(0.8608580353464357))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((v0.c0) NOTNULL))))OR(0.8608580353464357))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0x254d99e4) ORDER BY ((x'') BETWEEN (rt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST, (json_array_length(rt0.c1, rt0.c1) IN ())  NULLS FIRST, CASE WHEN rt0.c0 THEN ((((rt0.c0)OR('1774213636')))OR(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((0X254d99e4) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((x'') BETWEEN (rt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST, (json_array_length(rt0.c1, rt0.c1) IN ())  NULLS FIRST, CASE WHEN rt0.c0 THEN ((((rt0.c0)OR('1774213636')))OR(rt0.c1)) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0x254d99e4) ORDER BY ((x'') BETWEEN (rt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST, (json_array_length(rt0.c1, rt0.c1) IN ())  NULLS FIRST, CASE WHEN rt0.c0 THEN ((((rt0.c0)OR('1774213636')))OR(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((0X254d99e4) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((x'') BETWEEN (rt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST, (json_array_length(rt0.c1, rt0.c1) IN ())  NULLS FIRST, CASE WHEN rt0.c0 THEN ((((rt0.c0)OR('1774213636')))OR(rt0.c1)) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0x254d99e4) ORDER BY ((x'') BETWEEN (rt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST, (json_array_length(rt0.c1, rt0.c1) IN ())  NULLS FIRST, CASE WHEN rt0.c0 THEN ((((rt0.c0)OR('1774213636')))OR(rt0.c1)) END ASC;
SELECT * FROM vt0, v0 WHERE (PRINTF((~ (vt0.c0)), ((x'')GLOB(v0.c0)), NULL)) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((PRINTF((~ (vt0.c0)), ((x'')GLOB(v0.c0)), NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((NOT (v0.c0)))));
SELECT * FROM vt0, v0 WHERE (PRINTF((~ (vt0.c0)), ((x'')GLOB(v0.c0)), NULL)) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((PRINTF((~ (vt0.c0)), ((x'')GLOB(v0.c0)), NULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((NOT (v0.c0)))));
SELECT * FROM vt0, v0 WHERE (PRINTF((~ (vt0.c0)), ((x'')GLOB(v0.c0)), NULL)) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)<>(v0.c0)))))OR((NOT (v0.c0))));
SELECT COUNT(*) FROM vt1, vt0, rt0, v0 WHERE ((('LNNxfd')IS NOT(((((((((v0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt1.c0)))OR(v0.c0))))) ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('LNNxfd')IS NOT(((((((((v0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, v0 ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt0, v0 WHERE ((('LNNxfd')IS NOT(((((((((v0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt1.c0)))OR(v0.c0))))) ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('LNNxfd')IS NOT(((((((((v0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, v0 ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt0, v0 WHERE ((('LNNxfd')IS NOT(((((((((v0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt1.c0)))OR(v0.c0))))) ORDER BY (NOT (((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT * FROM vt1, rt0, vt0, v0 WHERE (CASE TRIM(vt0.c0)  WHEN ((((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)) THEN ((v0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(vt0.c0)  WHEN ((((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)) THEN ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, rt0, vt0, v0);
SELECT * FROM vt1, rt0, vt0, v0 WHERE (CASE TRIM(vt0.c0)  WHEN ((((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)) THEN ((v0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(vt0.c0)  WHEN ((((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)) THEN ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, rt0, vt0, v0);
SELECT * FROM vt1, rt0, vt0, v0 WHERE (CASE TRIM(vt0.c0)  WHEN ((((((((rt0.c1)AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c1)) THEN ((v0.c0) NOT NULL) END);
SELECT * FROM vt1, v0 WHERE (LIKELY((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (LIKELY((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELY((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (LIKELY((vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT ALL * FROM vt1, rt0, vt0, v0 WHERE (((((vt0.c0)IS(rt0.c2))) IS TRUE)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0, v0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt1, rt0, vt0, v0 WHERE (((((vt0.c0)IS(rt0.c2))) IS TRUE)) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0, v0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt1, rt0, vt0, v0 WHERE (((((vt0.c0)IS(rt0.c2))) IS TRUE)) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT ((x'385b') IS TRUE))) ORDER BY (((((vt1.c0))>=((vt1.c0))))<>(NULL COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((x'385b') IS TRUE))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))>=((vt1.c0))))!=(NULL COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT ((x'385b') IS TRUE))) ORDER BY (((((vt1.c0))>=((vt1.c0))))<>(NULL COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((x'385b') IS TRUE))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))>=((vt1.c0))))!=(NULL COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT ((x'385b') IS TRUE))) ORDER BY (((((vt1.c0))>=((vt1.c0))))<>(NULL COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END) ORDER BY ((((rt0.c0)<(vt0.c0)))>>(((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) ASC, (+ (CAST(0X61c256 AS REAL))), ((rt0.c0 COLLATE RTRIM)/(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0)<(vt0.c0)))>>(((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) ASC, (+ (CAST(0x61c256 AS REAL))), ((rt0.c0 COLLATE RTRIM)/(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END) ORDER BY ((((rt0.c0)<(vt0.c0)))>>(((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) ASC, (+ (CAST(0X61c256 AS REAL))), ((rt0.c0 COLLATE RTRIM)/(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0)<(vt0.c0)))>>(((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) ASC, (+ (CAST(0x61c256 AS REAL))), ((rt0.c0 COLLATE RTRIM)/(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END) ORDER BY ((((rt0.c0)<(vt0.c0)))>>(((vt0.c0) BETWEEN (NULL) AND (rt0.c0)))) ASC, (+ (CAST(0X61c256 AS REAL))), ((rt0.c0 COLLATE RTRIM)/(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) DESC;
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (v0.c0) ORDER BY (((NOT (vt1.c0)))<>(rt0.c0))  NULLS LAST, json_array(((0.032368013335766)>=(rt0.c1)), rt0.c2 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, vt1 ORDER BY (((NOT (vt1.c0)))<>(rt0.c0))  NULLS LAST, json_array(((0.032368013335766)>=(rt0.c1)), rt0.c2 COLLATE RTRIM) DESC);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (v0.c0) ORDER BY (((NOT (vt1.c0)))<>(rt0.c0))  NULLS LAST, json_array(((0.032368013335766)>=(rt0.c1)), rt0.c2 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, vt1 ORDER BY (((NOT (vt1.c0)))<>(rt0.c0))  NULLS LAST, json_array(((0.032368013335766)>=(rt0.c1)), rt0.c2 COLLATE RTRIM) DESC);
SELECT COUNT(*) FROM rt0, v0, vt1 WHERE (v0.c0) ORDER BY (((NOT (vt1.c0)))<>(rt0.c0))  NULLS LAST, json_array(((0.032368013335766)>=(rt0.c1)), rt0.c2 COLLATE RTRIM) DESC;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE WHEN ((v0.c0)||(v0.c0)) THEN LENGTH(vt1.c0) END) ORDER BY ((COALESCE(vt1.c0, vt1.c0)) IS TRUE)  NULLS LAST, CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)||(v0.c0)) THEN LENGTH(vt1.c0) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((COALESCE(vt1.c0, vt1.c0)) IS TRUE)  NULLS LAST, CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE WHEN ((v0.c0)||(v0.c0)) THEN LENGTH(vt1.c0) END) ORDER BY ((COALESCE(vt1.c0, vt1.c0)) IS TRUE)  NULLS LAST, CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)||(v0.c0)) THEN LENGTH(vt1.c0) END) IS TRUE)  as count FROM vt1, v0 ORDER BY ((COALESCE(vt1.c0, vt1.c0)) IS TRUE)  NULLS LAST, CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (CASE WHEN ((v0.c0)||(v0.c0)) THEN LENGTH(vt1.c0) END) ORDER BY ((COALESCE(vt1.c0, vt1.c0)) IS TRUE)  NULLS LAST, CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE x'' END COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS BLOB))==(((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE x'' END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, v0, rt0 ORDER BY ((CAST(vt0.c0 AS BLOB))=(((rt0.c0) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE x'' END COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS BLOB))==(((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE x'' END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, v0, rt0 ORDER BY ((CAST(vt0.c0 AS BLOB))=(((rt0.c0) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, v0, rt0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE x'' END COLLATE RTRIM) ORDER BY ((CAST(vt0.c0 AS BLOB))==(((rt0.c0) NOTNULL))) DESC;
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED, vt0 WHERE (((rt0.c2)+(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)+(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED, vt0 WHERE (((rt0.c2)+(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)+(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED, vt0 WHERE (((rt0.c2)+(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN (('-1526147306')<=(rt0.c2)) ELSE (('')LIKE(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS REAL) THEN (('-1526147306')<=(rt0.c2)) ELSE (('')LIKE(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN (('-1526147306')<=(rt0.c2)) ELSE (('')LIKE(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS REAL) THEN (('-1526147306')<=(rt0.c2)) ELSE (('')LIKE(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN (('-1526147306')<=(rt0.c2)) ELSE (('')LIKE(rt0.c2)) END);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) IS FALSE));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN ((- (vt1.c0))) AND (((rt0.c1)||('-916025866')))) WHERE (CASE 0X620d88d6  WHEN ABS(vt1.c0) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c0)IS NOT(vt1.c0)) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)%(rt0.c0)) THEN CAST(rt0.c0 AS BLOB) ELSE NULL END) ORDER BY CASE UPPER(rt0.c2)  WHEN NULL THEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) WHEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN NULL END THEN CAST(rt0.c0 AS BLOB) WHEN ((((vt1.c0)AND(NULL)))AND(rt0.c1)) THEN rt0.c2 ELSE vt1.c0 COLLATE NOCASE END ASC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('0.7074401732906059') AND (UNLIKELY(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE 0X620d88d6  WHEN ABS(vt1.c0) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c0)IS NOT(vt1.c0)) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)%(rt0.c0)) THEN CAST(rt0.c0 AS BLOB) ELSE NULL END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN ((- (vt1.c0))) AND (((rt0.c1)||('-916025866')))) ORDER BY CASE UPPER(rt0.c2)  WHEN NULL THEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) WHEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN NULL END THEN CAST(rt0.c0 AS BLOB) WHEN ((((vt1.c0)AND(NULL)))AND(rt0.c1)) THEN rt0.c2 ELSE vt1.c0 COLLATE NOCASE END ASC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('0.7074401732906059') AND (UNLIKELY(rt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN ((- (vt1.c0))) AND (((rt0.c1)||('-916025866')))) WHERE (CASE 0X620d88d6  WHEN ABS(vt1.c0) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c0)IS NOT(vt1.c0)) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)%(rt0.c0)) THEN CAST(rt0.c0 AS BLOB) ELSE NULL END) ORDER BY CASE UPPER(rt0.c2)  WHEN NULL THEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) WHEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN NULL END THEN CAST(rt0.c0 AS BLOB) WHEN ((((vt1.c0)AND(NULL)))AND(rt0.c1)) THEN rt0.c2 ELSE vt1.c0 COLLATE NOCASE END ASC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('0.7074401732906059') AND (UNLIKELY(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE 0X620d88d6  WHEN ABS(vt1.c0) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c0)IS NOT(vt1.c0)) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)%(rt0.c0)) THEN CAST(rt0.c0 AS BLOB) ELSE NULL END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN ((- (vt1.c0))) AND (((rt0.c1)||('-916025866')))) ORDER BY CASE UPPER(rt0.c2)  WHEN NULL THEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) WHEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN NULL END THEN CAST(rt0.c0 AS BLOB) WHEN ((((vt1.c0)AND(NULL)))AND(rt0.c1)) THEN rt0.c2 ELSE vt1.c0 COLLATE NOCASE END ASC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('0.7074401732906059') AND (UNLIKELY(rt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN ((- (vt1.c0))) AND (((rt0.c1)||('-916025866')))) WHERE (CASE 0X620d88d6  WHEN ABS(vt1.c0) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c0)IS NOT(vt1.c0)) THEN ((NULL)<=(vt1.c0)) WHEN ((vt1.c0)%(rt0.c0)) THEN CAST(rt0.c0 AS BLOB) ELSE NULL END) ORDER BY CASE UPPER(rt0.c2)  WHEN NULL THEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) WHEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN NULL END THEN CAST(rt0.c0 AS BLOB) WHEN ((((vt1.c0)AND(NULL)))AND(rt0.c1)) THEN rt0.c2 ELSE vt1.c0 COLLATE NOCASE END ASC, ((rt0.c2 COLLATE NOCASE) BETWEEN ('0.7074401732906059') AND (UNLIKELY(rt0.c0))) ASC;
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY UNLIKELY(DISTINCT ((((v0.c0)OR(v0.c0)))AND(148662715))) DESC  NULLS LAST, (((('??ad㽸'))<=((v0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(DISTINCT ((((v0.c0)OR(v0.c0)))AND(148662715))) DESC  NULLS LAST, (((('??ad㽸'))<=((v0.c0))) IN ()) DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY UNLIKELY(DISTINCT ((((v0.c0)OR(v0.c0)))AND(148662715))) DESC  NULLS LAST, (((('??ad㽸'))<=((v0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(DISTINCT ((((v0.c0)OR(v0.c0)))AND(148662715))) DESC  NULLS LAST, (((('??ad㽸'))<=((v0.c0))) IN ()) DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY) ORDER BY UNLIKELY(DISTINCT ((((v0.c0)OR(v0.c0)))AND(148662715))) DESC  NULLS LAST, (((('??ad㽸'))<=((v0.c0))) IN ()) DESC;
SELECT * FROM rt0 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (~ (((rt0.c0) NOT BETWEEN ('\r') AND (rt0.c0)))) WHERE (((((vt0.c0)-(NULL))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(NULL))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (~ (((rt0.c0) NOT BETWEEN ('\r') AND (rt0.c0)))));
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (~ (((rt0.c0) NOT BETWEEN ('\r') AND (rt0.c0)))) WHERE (((((vt0.c0)-(NULL))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(NULL))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (~ (((rt0.c0) NOT BETWEEN ('\r') AND (rt0.c0)))));
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON (~ (((rt0.c0) NOT BETWEEN ('\r') AND (rt0.c0)))) WHERE (((((vt0.c0)-(NULL))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)>(rt0.c0))))) ORDER BY (((((((((rt0.c2 IN (rt0.c0)))OR(MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c1))))OR(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)>>(rt0.c1)))))OR(json_extract('ep', rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2 IN (rt0.c0)))OR(MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c1))))OR(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)>>(rt0.c1)))))OR(json_extract('ep', rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)>(rt0.c0))))) ORDER BY (((((((((rt0.c2 IN (rt0.c0)))OR(MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c1))))OR(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)>>(rt0.c1)))))OR(json_extract('ep', rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c2 IN (rt0.c0)))OR(MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c1))))OR(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)>>(rt0.c1)))))OR(json_extract('ep', rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)>(rt0.c0))))) ORDER BY (((((((((rt0.c2 IN (rt0.c0)))OR(MAX(rt0.c1, rt0.c0, rt0.c2, rt0.c1))))OR(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0)>>(rt0.c1)))))OR(json_extract('ep', rt0.c2))) DESC  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON UPPER(DISTINCT (vt0.c0 IN ())) LEFT OUTER JOIN rt0 ON ((COALESCE(DISTINCT vt1.c0, vt0.c0)) IS FALSE) WHERE (NULL) ORDER BY CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON UPPER(DISTINCT (vt0.c0 IN ())) LEFT OUTER JOIN rt0 ON ((COALESCE(DISTINCT vt1.c0, vt0.c0)) IS FALSE) ORDER BY CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON UPPER(DISTINCT (vt0.c0 IN ())) LEFT OUTER JOIN rt0 ON ((COALESCE(DISTINCT vt1.c0, vt0.c0)) IS FALSE) WHERE (NULL) ORDER BY CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON UPPER(DISTINCT (vt0.c0 IN ())) LEFT OUTER JOIN rt0 ON ((COALESCE(DISTINCT vt1.c0, vt0.c0)) IS FALSE) ORDER BY CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON UPPER(DISTINCT (vt0.c0 IN ())) LEFT OUTER JOIN rt0 ON ((COALESCE(DISTINCT vt1.c0, vt0.c0)) IS FALSE) WHERE (NULL) ORDER BY CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))%((NOT (NULL)))) DESC, CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0))) AND (((- (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))%((NOT (NULL)))) DESC, CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0))) AND (((- (vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))%((NOT (NULL)))) DESC, CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0))) AND (((- (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))%((NOT (NULL)))) DESC, CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0))) AND (((- (vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))%((NOT (NULL)))) DESC, CAST(vt0.c0 AS INTEGER) COLLATE BINARY  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((json_array(vt0.c0, vt0.c0))) AND (((- (vt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, vt1, v0, vt0);
SELECT COUNT(*) FROM rt0, vt1, v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, vt1, v0, vt0);
SELECT COUNT(*) FROM rt0, vt1, v0, vt0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN rt0 WHERE ((UNICODE(vt1.c0) IN (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c1)|(rt0.c1)))<(((((((((vt1.c0)OR(rt0.c2)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL))))  NULLS FIRST, ((((rt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UNICODE(vt1.c0) IN (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)|(rt0.c1)))<(((((((((vt1.c0)OR(rt0.c2)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL))))  NULLS FIRST, ((((rt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN rt0 WHERE ((UNICODE(vt1.c0) IN (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c1)|(rt0.c1)))<(((((((((vt1.c0)OR(rt0.c2)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL))))  NULLS FIRST, ((((rt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UNICODE(vt1.c0) IN (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)|(rt0.c1)))<(((((((((vt1.c0)OR(rt0.c2)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL))))  NULLS FIRST, ((((rt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN rt0 WHERE ((UNICODE(vt1.c0) IN (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c1)|(rt0.c1)))<(((((((((vt1.c0)OR(rt0.c2)))AND(vt0.c0)))OR(vt1.c0)))OR(NULL))))  NULLS FIRST, ((((rt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((NULL)AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)*(vt1.c0)))) WHERE (COALESCE(((vt0.c0)=(vt1.c0)), ((vt1.c0)||(vt0.c0)), TOTAL_CHANGES(), ((vt0.c0)%(vt0.c0)))) ORDER BY ('' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt0.c0)==(vt1.c0)), ((vt1.c0)||(vt0.c0)), TOTAL_CHANGES(), ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((NULL)AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)*(vt1.c0)))) ORDER BY ('' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((NULL)AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)*(vt1.c0)))) WHERE (COALESCE(((vt0.c0)=(vt1.c0)), ((vt1.c0)||(vt0.c0)), TOTAL_CHANGES(), ((vt0.c0)%(vt0.c0)))) ORDER BY ('' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt0.c0)==(vt1.c0)), ((vt1.c0)||(vt0.c0)), TOTAL_CHANGES(), ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((NULL)AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)*(vt1.c0)))) ORDER BY ('' IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((NULL)AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)*(vt1.c0)))) WHERE (COALESCE(((vt0.c0)=(vt1.c0)), ((vt1.c0)||(vt0.c0)), TOTAL_CHANGES(), ((vt0.c0)%(vt0.c0)))) ORDER BY ('' IN ())  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c2)||(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) WHERE ((((((((((((rt0.c1)AND(vt0.c0)))AND(0.06771073380010262)))OR(x'5ec10841')))AND(rt0.c1)), (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB), ((('&5|ID', rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, 'P\r')) AND ((rt0.c2, 0.8051996890724529, rt0.c0))), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))>=((((rt0.c2)||(rt0.c1)), CAST(rt0.c2 AS INTEGER), (vt0.c0 IN ()), LTRIM(vt0.c0, '1185601404'), (NOT (vt0.c0)))))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c1)AND(vt0.c0)))AND(0.06771073380010262)))OR(x'5ec10841')))AND(rt0.c1)), (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB), ((('&5|ID', rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, 'P\r')) AND ((rt0.c2, 0.8051996890724529, rt0.c0))), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))>=((((rt0.c2)||(rt0.c1)), CAST(rt0.c2 AS INTEGER), (vt0.c0 IN ()), LTRIM(vt0.c0, '1185601404'), (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c2)||(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END)) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c2)||(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) WHERE ((((((((((((rt0.c1)AND(vt0.c0)))AND(0.06771073380010262)))OR(x'5ec10841')))AND(rt0.c1)), (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB), ((('&5|ID', rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, 'P\r')) AND ((rt0.c2, 0.8051996890724529, rt0.c0))), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))>=((((rt0.c2)||(rt0.c1)), CAST(rt0.c2 AS INTEGER), (vt0.c0 IN ()), LTRIM(vt0.c0, '1185601404'), (NOT (vt0.c0)))))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c1)AND(vt0.c0)))AND(0.06771073380010262)))OR(x'5ec10841')))AND(rt0.c1)), (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB), ((('&5|ID', rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, 'P\r')) AND ((rt0.c2, 0.8051996890724529, rt0.c0))), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))>=((((rt0.c2)||(rt0.c1)), CAST(rt0.c2 AS INTEGER), (vt0.c0 IN ()), LTRIM(vt0.c0, '1185601404'), (NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c2)||(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END)) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN (((rt0.c2)||(vt0.c0)), ((vt0.c0)IS(vt0.c0)))) WHERE ((((((((((((rt0.c1)AND(vt0.c0)))AND(0.06771073380010262)))OR(x'5ec10841')))AND(rt0.c1)), (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB), ((('&5|ID', rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, rt0.c1, 'P\r')) AND ((rt0.c2, 0.8051996890724529, rt0.c0))), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))>=((((rt0.c2)||(rt0.c1)), CAST(rt0.c2 AS INTEGER), (vt0.c0 IN ()), LTRIM(vt0.c0, '1185601404'), (NOT (vt0.c0)))))) ORDER BY (((+ (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END)) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 CROSS JOIN v0 ON (((vt1.c0)/(vt1.c0)) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, vt1 CROSS JOIN v0 ON (((vt1.c0)/(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 CROSS JOIN v0 ON (((vt1.c0)/(vt1.c0)) IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, vt1 CROSS JOIN v0 ON (((vt1.c0)/(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 CROSS JOIN v0 ON (((vt1.c0)/(vt1.c0)) IN ()) WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) ORDER BY (- (NULLIF(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS LAST, (((((vt0.c0, vt0.c0, '9223372036854775807')) NOT BETWEEN (('-1928103425', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (- (NULLIF(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS LAST, (((((vt0.c0, vt0.c0, '9223372036854775807')) NOT BETWEEN (('-1928103425', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) ORDER BY (- (NULLIF(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS LAST, (((((vt0.c0, vt0.c0, '9223372036854775807')) NOT BETWEEN (('-1928103425', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (- (NULLIF(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS LAST, (((((vt0.c0, vt0.c0, '9223372036854775807')) NOT BETWEEN (('-1928103425', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) ORDER BY (- (NULLIF(DISTINCT vt0.c0, vt0.c0))) DESC  NULLS LAST, (((((vt0.c0, vt0.c0, '9223372036854775807')) NOT BETWEEN (('-1928103425', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOTNULL);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (rt0.c2 IN ()) FULL OUTER JOIN rt0 ON CAST(-2.44290766E8 AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((((rt0.c1 COLLATE NOCASE, (NOT (vt1.c0)), ((rt0.c0) NOTNULL)))>=((((rt0.c0)|(vt1.c0)), LENGTH(v0.c0), rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE NOCASE, (NOT (vt1.c0)), ((rt0.c0) NOTNULL)))>=((((rt0.c0)|(vt1.c0)), LENGTH(v0.c0), rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (rt0.c2 IN ()) FULL OUTER JOIN rt0 ON CAST(-2.44290766E8 AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (rt0.c2 IN ()) FULL OUTER JOIN rt0 ON CAST(-2.44290766E8 AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((((rt0.c1 COLLATE NOCASE, (NOT (vt1.c0)), ((rt0.c0) NOTNULL)))>=((((rt0.c0)|(vt1.c0)), LENGTH(v0.c0), rt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE NOCASE, (NOT (vt1.c0)), ((rt0.c0) NOTNULL)))>=((((rt0.c0)|(vt1.c0)), LENGTH(v0.c0), rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (rt0.c2 IN ()) FULL OUTER JOIN rt0 ON CAST(-2.44290766E8 AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON (rt0.c2 IN ()) FULL OUTER JOIN rt0 ON CAST(-2.44290766E8 AS NUMERIC) RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((((rt0.c1 COLLATE NOCASE, (NOT (vt1.c0)), ((rt0.c0) NOTNULL)))>=((((rt0.c0)|(vt1.c0)), LENGTH(v0.c0), rt0.c2 COLLATE RTRIM))));
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END IN (((rt0.c1)<=(rt0.c1)), ((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END IN (((rt0.c1)<=(rt0.c1)), ((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END IN (((rt0.c1)<=(rt0.c1)), ((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END IN (((rt0.c1)<=(rt0.c1)), ((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END IN (((rt0.c1)<=(rt0.c1)), ((rt0.c2)LIKE(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((v0.c0)>>(rt0.c1)) AS INTEGER)) ORDER BY x'e707' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY x'e707' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((v0.c0)>>(rt0.c1)) AS INTEGER)) ORDER BY x'e707' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>>(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY x'e707' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((v0.c0)>>(rt0.c1)) AS INTEGER)) ORDER BY x'e707' DESC  NULLS LAST;
SELECT * FROM vt0, v0, vt1 NOT INDEXED, rt0 WHERE ((((+ (vt1.c0)))GLOB(CASE rt0.c2  WHEN x'08c1' THEN v0.c0 END))) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))GLOB(CASE rt0.c2  WHEN x'08c1' THEN v0.c0 END))) IS TRUE)  as count FROM vt0, v0, vt1, rt0 ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, vt1 NOT INDEXED, rt0 WHERE ((((+ (vt1.c0)))GLOB(CASE rt0.c2  WHEN x'08c1' THEN v0.c0 END))) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))GLOB(CASE rt0.c2  WHEN x'08c1' THEN v0.c0 END))) IS TRUE)  as count FROM vt0, v0, vt1, rt0 ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS FIRST);
SELECT * FROM vt0, v0, vt1 NOT INDEXED, rt0 WHERE ((((+ (vt1.c0)))GLOB(CASE rt0.c2  WHEN x'08c1' THEN v0.c0 END))) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((LENGTH(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LENGTH(rt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((LENGTH(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LENGTH(rt0.c0) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((LENGTH(rt0.c0) IN ()));
SELECT ALL * FROM vt0, v0 INNER JOIN vt1 ON (vt1.c0 IN (((vt1.c0) NOT BETWEEN ('547232067') AND (vt1.c0)))) FULL OUTER JOIN rt0 ON rt0.c1 WHERE (CASE (+ (rt0.c0))  WHEN (~ (vt0.c0)) THEN ((rt0.c1)<=(vt1.c0)) ELSE ((v0.c0)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c0))  WHEN (~ (vt0.c0)) THEN ((rt0.c1)<=(vt1.c0)) ELSE ((v0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON (vt1.c0 IN (((vt1.c0) NOT BETWEEN ('547232067') AND (vt1.c0)))) FULL OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt0, v0 INNER JOIN vt1 ON (vt1.c0 IN (((vt1.c0) NOT BETWEEN ('547232067') AND (vt1.c0)))) FULL OUTER JOIN rt0 ON rt0.c1 WHERE (CASE (+ (rt0.c0))  WHEN (~ (vt0.c0)) THEN ((rt0.c1)<=(vt1.c0)) ELSE ((v0.c0)<<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (rt0.c0))  WHEN (~ (vt0.c0)) THEN ((rt0.c1)<=(vt1.c0)) ELSE ((v0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON (vt1.c0 IN (((vt1.c0) NOT BETWEEN ('547232067') AND (vt1.c0)))) FULL OUTER JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt0, v0 INNER JOIN vt1 ON (vt1.c0 IN (((vt1.c0) NOT BETWEEN ('547232067') AND (vt1.c0)))) FULL OUTER JOIN rt0 ON rt0.c1 WHERE (CASE (+ (rt0.c0))  WHEN (~ (vt0.c0)) THEN ((rt0.c1)<=(vt1.c0)) ELSE ((v0.c0)<<(vt0.c0)) END);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c0);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c0));
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c0);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c0));
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE RTRIM COLLATE BINARY) ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE rt0.c0  WHEN ((v0.c0) NOTNULL) THEN rt0.c1 WHEN (((v0.c0, rt0.c2, rt0.c1))==((-408683012, x'', rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN IFNULL(DISTINCT rt0.c0, rt0.c2) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((v0.c0) NOTNULL) THEN rt0.c1 WHEN (((v0.c0, rt0.c2, rt0.c1))=((-408683012, x'', rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN IFNULL(DISTINCT rt0.c0, rt0.c2) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE rt0.c0  WHEN ((v0.c0) NOTNULL) THEN rt0.c1 WHEN (((v0.c0, rt0.c2, rt0.c1))==((-408683012, x'', rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN IFNULL(DISTINCT rt0.c0, rt0.c2) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((v0.c0) NOTNULL) THEN rt0.c1 WHEN (((v0.c0, rt0.c2, rt0.c1))=((-408683012, x'', rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN IFNULL(DISTINCT rt0.c0, rt0.c2) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE rt0.c0  WHEN ((v0.c0) NOTNULL) THEN rt0.c1 WHEN (((v0.c0, rt0.c2, rt0.c1))==((-408683012, x'', rt0.c0))) THEN CAST(rt0.c0 AS REAL) WHEN IFNULL(DISTINCT rt0.c0, rt0.c2) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE NOCASE END);
SELECT COUNT(*) FROM vt1, rt0, v0 LEFT OUTER JOIN vt0 ON ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))))AND((~ (rt0.c1)))))OR(vt0.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE BINARY)))AND((rt0.c0 IN ()))))OR(((((((((vt0.c0)AND(v0.c0)))OR(x'')))OR(rt0.c0)))AND(rt0.c1)))) WHERE (((COALESCE(vt0.c0, rt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, rt0.c0)) ISNULL)) IS TRUE)  as count FROM vt1, rt0, v0 LEFT OUTER JOIN vt0 ON ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))))AND((~ (rt0.c1)))))OR(vt0.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE BINARY)))AND((rt0.c0 IN ()))))OR(((((((((vt0.c0)AND(v0.c0)))OR(x'')))OR(rt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt1, rt0, v0 LEFT OUTER JOIN vt0 ON ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))))AND((~ (rt0.c1)))))OR(vt0.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE BINARY)))AND((rt0.c0 IN ()))))OR(((((((((vt0.c0)AND(v0.c0)))OR(x'')))OR(rt0.c0)))AND(rt0.c1)))) WHERE (((COALESCE(vt0.c0, rt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, rt0.c0)) ISNULL)) IS TRUE)  as count FROM vt1, rt0, v0 LEFT OUTER JOIN vt0 ON ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))))AND((~ (rt0.c1)))))OR(vt0.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE BINARY)))AND((rt0.c0 IN ()))))OR(((((((((vt0.c0)AND(v0.c0)))OR(x'')))OR(rt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt1, rt0, v0 LEFT OUTER JOIN vt0 ON ((((((((((((CAST(v0.c0 AS NUMERIC))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))))AND((~ (rt0.c1)))))OR(vt0.c0 COLLATE BINARY)))OR(vt1.c0 COLLATE BINARY)))AND((rt0.c0 IN ()))))OR(((((((((vt0.c0)AND(v0.c0)))OR(x'')))OR(rt0.c0)))AND(rt0.c1)))) WHERE (((COALESCE(vt0.c0, rt0.c0)) ISNULL));
SELECT ALL * FROM vt1 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN '1407027300' WHEN LENGTH(vt1.c0) THEN vt1.c0 ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS BLOB)  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN '1407027300' WHEN LENGTH(vt1.c0) THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN '1407027300' WHEN LENGTH(vt1.c0) THEN vt1.c0 ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS BLOB)  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN '1407027300' WHEN LENGTH(vt1.c0) THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE CAST(vt1.c0 AS BLOB)  WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN '1407027300' WHEN LENGTH(vt1.c0) THEN vt1.c0 ELSE vt1.c0 END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END))));
SELECT ALL * FROM rt0, vt0 WHERE ((CASE WHEN rt0.c2 THEN vt0.c0 END IN ())) ORDER BY ((rt0.c2)IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN 0.6659875455045979 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN 0.6659875455045979 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((CASE WHEN rt0.c2 THEN vt0.c0 END IN ())) ORDER BY ((rt0.c2)IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN 0.6659875455045979 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN 0.6659875455045979 ELSE vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((CASE WHEN rt0.c2 THEN vt0.c0 END IN ())) ORDER BY ((rt0.c2)IS NOT(CASE rt0.c0  WHEN rt0.c1 THEN 0.6659875455045979 ELSE vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c0)&(vt0.c0))  WHEN (- (rt0.c1)) THEN rt0.c1 ELSE ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)) END WHERE (CASE WHEN NULL THEN CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((rt0.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE RTRIM, (((rt0.c1 IN ()))<>(0.9697018054639287 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c0)&(vt0.c0))  WHEN (- (rt0.c1)) THEN rt0.c1 ELSE ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)) END ORDER BY ((((rt0.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE RTRIM, (((rt0.c1 IN ()))<>(0.9697018054639287 COLLATE BINARY)) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c0)&(vt0.c0))  WHEN (- (rt0.c1)) THEN rt0.c1 ELSE ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)) END WHERE (CASE WHEN NULL THEN CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((rt0.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE RTRIM, (((rt0.c1 IN ()))<>(0.9697018054639287 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c0)&(vt0.c0))  WHEN (- (rt0.c1)) THEN rt0.c1 ELSE ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)) END ORDER BY ((((rt0.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE RTRIM, (((rt0.c1 IN ()))<>(0.9697018054639287 COLLATE BINARY)) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ((rt0.c0)&(vt0.c0))  WHEN (- (rt0.c1)) THEN rt0.c1 ELSE ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)) END WHERE (CASE WHEN NULL THEN CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((rt0.c0)OR(vt0.c0)))AND(rt0.c2)) COLLATE RTRIM, (((rt0.c1 IN ()))<>(0.9697018054639287 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((902120679) BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0))) AND (((((((((v0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)||(vt0.c0))) BETWEEN (vt0.c0) AND (GLOB(rt0.c1, vt0.c0))) WHERE (((((((((((rt0.c2)GLOB(rt0.c0)))OR((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND((+ (vt0.c0)))))OR((NULL IN (rt0.c1, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)GLOB(rt0.c0)))OR((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND((+ (vt0.c0)))))OR((NULL IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN v0 ON ((902120679) BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0))) AND (((((((((v0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)||(vt0.c0))) BETWEEN (vt0.c0) AND (GLOB(rt0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON ((902120679) BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0))) AND (((((((((v0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)||(vt0.c0))) BETWEEN (vt0.c0) AND (GLOB(rt0.c1, vt0.c0))) WHERE (((((((((((rt0.c2)GLOB(rt0.c0)))OR((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND((+ (vt0.c0)))))OR((NULL IN (rt0.c1, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)GLOB(rt0.c0)))OR((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND((+ (vt0.c0)))))OR((NULL IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN v0 ON ((902120679) BETWEEN (((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0))) AND (((((((((v0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))) FULL OUTER JOIN rt0 ON ((((rt0.c2)||(vt0.c0))) BETWEEN (vt0.c0) AND (GLOB(rt0.c1, vt0.c0))));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (TRIM(DISTINCT (vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (TRIM(DISTINCT (vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt1.c0 IN (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (TRIM(DISTINCT (vt1.c0 IN (vt1.c0))));
SELECT * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY (+ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c0)) DESC);
SELECT * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY (+ (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c0)) DESC);
SELECT * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY (+ (rt0.c0)) DESC;
SELECT ALL * FROM rt0 WHERE (CASE ((0.8608580353464357)/(rt0.c0))  WHEN ((rt0.c1)<=(rt0.c1)) THEN ((rt0.c0)>(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'a숌閫' ELSE rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.8608580353464357)/(rt0.c0))  WHEN ((rt0.c1)<=(rt0.c1)) THEN ((rt0.c0)>(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'a숌閫' ELSE rt0.c1 END IN ()));
SELECT ALL * FROM rt0 WHERE (CASE ((0.8608580353464357)/(rt0.c0))  WHEN ((rt0.c1)<=(rt0.c1)) THEN ((rt0.c0)>(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'a숌閫' ELSE rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.8608580353464357)/(rt0.c0))  WHEN ((rt0.c1)<=(rt0.c1)) THEN ((rt0.c0)>(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'a숌閫' ELSE rt0.c1 END IN ()));
SELECT ALL * FROM rt0 WHERE (CASE ((0.8608580353464357)/(rt0.c0))  WHEN ((rt0.c1)<=(rt0.c1)) THEN ((rt0.c0)>(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 'a숌閫' ELSE rt0.c1 END IN ());
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON (((((((((0.5337863143682728 IN ()))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(json(v0.c0))))OR(((vt1.c0) NOT NULL))) WHERE (CAST((((v0.c0))>((NULL))) AS NUMERIC)) ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND ('-945572604'))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))>((NULL))) AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON (((((((((0.5337863143682728 IN ()))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(json(v0.c0))))OR(((vt1.c0) NOT NULL))) ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND ('-945572604'))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON (((((((((0.5337863143682728 IN ()))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(json(v0.c0))))OR(((vt1.c0) NOT NULL))) WHERE (CAST((((v0.c0))>((NULL))) AS NUMERIC)) ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND ('-945572604'))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))>((NULL))) AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN v0 ON (((((((((0.5337863143682728 IN ()))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(json(v0.c0))))OR(((vt1.c0) NOT NULL))) ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND ('-945572604'))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN v0 ON (((((((((0.5337863143682728 IN ()))OR((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)))AND(json(v0.c0))))OR(((vt1.c0) NOT NULL))) WHERE (CAST((((v0.c0))>((NULL))) AS NUMERIC)) ORDER BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND ('-945572604'))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((((((((('hpa', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<<(vt1.c0)))))OR(json_object(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('hpa', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<<(vt1.c0)))))OR(json_object(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((('hpa', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<<(vt1.c0)))))OR(json_object(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('hpa', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<<(vt1.c0)))))OR(json_object(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c1))>((rt0.c1))))IS NOT(((vt0.c0) NOT NULL))) WHERE (rt0.c2) ORDER BY ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c1))>((rt0.c1))))IS NOT(((vt0.c0) NOT NULL))) ORDER BY ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c1))>((rt0.c1))))IS NOT(((vt0.c0) NOT NULL))) WHERE (rt0.c2) ORDER BY ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c1))>((rt0.c1))))IS NOT(((vt0.c0) NOT NULL))) ORDER BY ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c1))>((rt0.c1))))IS NOT(((vt0.c0) NOT NULL))) WHERE (rt0.c2) ORDER BY ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c0) IS TRUE))) DESC;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND((~ (rt0.c1)))))OR(((rt0.c0)-(rt0.c1)))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND((~ (rt0.c1)))))OR(((rt0.c0)-(rt0.c1)))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND((~ (rt0.c1)))))OR(((rt0.c0)-(rt0.c1)))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND((~ (rt0.c1)))))OR(((rt0.c0)-(rt0.c1)))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND((~ (rt0.c1)))))OR(((rt0.c0)-(rt0.c1)))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (ROUND(vt1.c0 COLLATE BINARY, (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((ROUND(vt1.c0 COLLATE BINARY, (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (ROUND(vt1.c0 COLLATE BINARY, (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((ROUND(vt1.c0 COLLATE BINARY, (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (ROUND(vt1.c0 COLLATE BINARY, (vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM COLLATE BINARY CROSS JOIN vt1 ON ((0.8600530865623559)||(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (CASE WHEN QUOTE(vt1.c0) THEN rt0.c0 COLLATE BINARY END) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN QUOTE(vt1.c0) THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM COLLATE BINARY CROSS JOIN vt1 ON ((0.8600530865623559)||(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM COLLATE BINARY CROSS JOIN vt1 ON ((0.8600530865623559)||(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (CASE WHEN QUOTE(vt1.c0) THEN rt0.c0 COLLATE BINARY END) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN QUOTE(vt1.c0) THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM COLLATE BINARY CROSS JOIN vt1 ON ((0.8600530865623559)||(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 COLLATE RTRIM COLLATE BINARY CROSS JOIN vt1 ON ((0.8600530865623559)||(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (CASE WHEN QUOTE(vt1.c0) THEN rt0.c0 COLLATE BINARY END) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE ''  WHEN ((((((((x'2a77b9be')AND(0.25427949228493496)))AND(v0.c0)))OR('(hsn㢌3')))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END INNER JOIN v0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7562847649038382 IN ((vt0.c0 IN ()), ((rt0.c2)OR(rt0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE ''  WHEN ((((((((x'2a77b9be')AND(0.25427949228493496)))AND(v0.c0)))OR('(hsn㢌3')))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END INNER JOIN v0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7562847649038382 IN ((vt0.c0 IN ()), ((rt0.c2)OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE ''  WHEN ((((((((x'2a77b9be')AND(0.25427949228493496)))AND(v0.c0)))OR('(hsn㢌3')))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END INNER JOIN v0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7562847649038382 IN ((vt0.c0 IN ()), ((rt0.c2)OR(rt0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE ''  WHEN ((((((((x'2a77b9be')AND(0.25427949228493496)))AND(v0.c0)))OR('(hsn㢌3')))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END INNER JOIN v0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7562847649038382 IN ((vt0.c0 IN ()), ((rt0.c2)OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE ''  WHEN ((((((((x'2a77b9be')AND(0.25427949228493496)))AND(v0.c0)))OR('(hsn㢌3')))OR(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END INNER JOIN v0 ON NULL COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7562847649038382 IN ((vt0.c0 IN ()), ((rt0.c2)OR(rt0.c0)))) WHERE (vt0.c0);
SELECT * FROM v0, vt0, vt1 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((NULL, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c0))) ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((NULL, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c0))) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((NULL, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c0))) ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((NULL, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c0))) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (((NULL, vt1.c0, vt0.c0))<=((vt1.c0, vt1.c0, vt1.c0))) ELSE (NOT (vt1.c0)) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0)*(vt0.c0)))IS(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0)))IS(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0)*(vt0.c0)))IS(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)*(vt0.c0)))IS(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0)*(vt0.c0)))IS(IFNULL(vt0.c0, vt0.c0))) DESC  NULLS LAST;
SELECT * FROM rt0, vt1, v0 WHERE (((((v0.c0)LIKE(rt0.c2)))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)LIKE(rt0.c2)))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE (((((v0.c0)LIKE(rt0.c2)))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)LIKE(rt0.c2)))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0, vt1, v0);
SELECT * FROM rt0, vt1, v0 WHERE (((((v0.c0)LIKE(rt0.c2)))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, vt0, rt0, vt1 WHERE ((((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2)), ((((rt0.c1)OR(rt0.c1)))OR(x'b568')), ((0.8983550453188961) BETWEEN (rt0.c0) AND (vt0.c0))))<>((rt0.c1 COLLATE BINARY, 512762956, ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c2)+(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2)), ((((rt0.c1)OR(rt0.c1)))OR(x'b568')), ((0.8983550453188961) BETWEEN (rt0.c0) AND (vt0.c0))))!=((rt0.c1 COLLATE BINARY, 512762956, ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c2)+(rt0.c2)))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1);
SELECT COUNT(*) FROM v0, vt0, rt0, vt1 WHERE ((((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2)), ((((rt0.c1)OR(rt0.c1)))OR(x'b568')), ((0.8983550453188961) BETWEEN (rt0.c0) AND (vt0.c0))))<>((rt0.c1 COLLATE BINARY, 512762956, ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c2)+(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2)), ((((rt0.c1)OR(rt0.c1)))OR(x'b568')), ((0.8983550453188961) BETWEEN (rt0.c0) AND (vt0.c0))))!=((rt0.c1 COLLATE BINARY, 512762956, ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c2)+(rt0.c2)))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1);
SELECT COUNT(*) FROM v0, vt0, rt0, vt1 WHERE ((((CAST(rt0.c0 AS TEXT), CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, (rt0.c0 IN (rt0.c2)), ((((rt0.c1)OR(rt0.c1)))OR(x'b568')), ((0.8983550453188961) BETWEEN (rt0.c0) AND (vt0.c0))))<>((rt0.c1 COLLATE BINARY, 512762956, ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c2) NOT NULL), ((rt0.c2)+(rt0.c2))))));
SELECT * FROM vt1 WHERE (MAX(TYPEOF(vt1.c0), ((((vt1.c0)OR(vt1.c0)))OR(0.7514338792159456)))) ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(TYPEOF(vt1.c0), ((((vt1.c0)OR(vt1.c0)))OR(0.7514338792159456)))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, vt1.c0 ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (MAX(TYPEOF(vt1.c0), ((((vt1.c0)OR(vt1.c0)))OR(0.7514338792159456)))) ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MAX(TYPEOF(vt1.c0), ((((vt1.c0)OR(vt1.c0)))OR(0.7514338792159456)))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, vt1.c0 ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (MAX(TYPEOF(vt1.c0), ((((vt1.c0)OR(vt1.c0)))OR(0.7514338792159456)))) ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) DESC, vt1.c0 ASC  NULLS LAST;
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)) COLLATE BINARY WHERE (HEX((((('0p')OR(rt0.c2)))AND(rt0.c0)))) ORDER BY load_extension(vt0.c0 COLLATE BINARY) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((('0p')OR(rt0.c2)))AND(rt0.c0)))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)) COLLATE BINARY ORDER BY load_extension(vt0.c0 COLLATE BINARY) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)) COLLATE BINARY WHERE (HEX((((('0p')OR(rt0.c2)))AND(rt0.c0)))) ORDER BY load_extension(vt0.c0 COLLATE BINARY) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((('0p')OR(rt0.c2)))AND(rt0.c0)))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)) COLLATE BINARY ORDER BY load_extension(vt0.c0 COLLATE BINARY) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)) COLLATE BINARY WHERE (HEX((((('0p')OR(rt0.c2)))AND(rt0.c0)))) ORDER BY load_extension(vt0.c0 COLLATE BINARY) DESC  NULLS LAST;
SELECT * FROM vt1, v0 RIGHT OUTER JOIN rt0 ON (+ (((vt1.c0) IS TRUE))) CROSS JOIN vt0 ON rt0.c2 WHERE (CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt0 ON (+ (((vt1.c0) IS TRUE))) CROSS JOIN vt0 ON rt0.c2);
SELECT * FROM vt1, v0 RIGHT OUTER JOIN rt0 ON (+ (((vt1.c0) IS TRUE))) CROSS JOIN vt0 ON rt0.c2 WHERE (CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN rt0 ON (+ (((vt1.c0) IS TRUE))) CROSS JOIN vt0 ON rt0.c2);
SELECT * FROM vt1, v0 RIGHT OUTER JOIN rt0 ON (+ (((vt1.c0) IS TRUE))) CROSS JOIN vt0 ON rt0.c2 WHERE (CAST(((rt0.c2)/(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (TYPEOF(rt0.c0) COLLATE NOCASE) ORDER BY NULLIF(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (rt0.c2 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY NULLIF(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (rt0.c2 IN ())) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (TYPEOF(rt0.c0) COLLATE NOCASE) ORDER BY NULLIF(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (rt0.c2 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY NULLIF(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (rt0.c2 IN ())) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE (TYPEOF(rt0.c0) COLLATE NOCASE) ORDER BY NULLIF(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)), (rt0.c2 IN ())) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))<=((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT NULL)))<=((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))<=((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT NULL)))<=((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) NOT NULL)))<=((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((vt0.c0)=(vt0.c0)) THEN vt0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (((v0.c0))>=((v0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE CAST(v0.c0 AS REAL) END WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END AS INTEGER)) ORDER BY 0.4667920731477687 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (((v0.c0))>=((v0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE CAST(v0.c0 AS REAL) END ORDER BY 0.4667920731477687 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((vt0.c0)=(vt0.c0)) THEN vt0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (((v0.c0))>=((v0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE CAST(v0.c0 AS REAL) END WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END AS INTEGER)) ORDER BY 0.4667920731477687 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((vt0.c0)==(vt0.c0)) THEN vt0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (((v0.c0))>=((v0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE CAST(v0.c0 AS REAL) END ORDER BY 0.4667920731477687 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN v0 ON CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN ((vt0.c0)=(vt0.c0)) THEN vt0.c0 WHEN v0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) WHEN (((v0.c0))>=((v0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE CAST(v0.c0 AS REAL) END WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END AS INTEGER)) ORDER BY 0.4667920731477687 DESC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END LEFT OUTER JOIN vt1 ON NULL WHERE ((((((rt0.c2, vt1.c0, vt1.c0, 0.08434119654636629, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c0, vt1.c0, rt0.c2)))) NOT BETWEEN (TOTAL_CHANGES()) AND (0.6467967401538981)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, vt1.c0, vt1.c0, 0.08434119654636629, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c0, vt1.c0, rt0.c2)))) NOT BETWEEN (TOTAL_CHANGES()) AND (0.6467967401538981))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END LEFT OUTER JOIN vt1 ON NULL);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END LEFT OUTER JOIN vt1 ON NULL WHERE ((((((rt0.c2, vt1.c0, vt1.c0, 0.08434119654636629, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c0, vt1.c0, rt0.c2)))) NOT BETWEEN (TOTAL_CHANGES()) AND (0.6467967401538981)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, vt1.c0, vt1.c0, 0.08434119654636629, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c0, vt1.c0, rt0.c2)))) NOT BETWEEN (TOTAL_CHANGES()) AND (0.6467967401538981))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END LEFT OUTER JOIN vt1 ON NULL);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 END LEFT OUTER JOIN vt1 ON NULL WHERE ((((((rt0.c2, vt1.c0, vt1.c0, 0.08434119654636629, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, v0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, vt1.c0, rt0.c0, vt1.c0, rt0.c2)))) NOT BETWEEN (TOTAL_CHANGES()) AND (0.6467967401538981)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0)))OR((v0.c0 IN (vt1.c0)))) FULL OUTER JOIN vt1 ON v0.c0 COLLATE NOCASE WHERE (((NULL) BETWEEN (((((0.9546243532663813)OR(x'dce7')))OR(rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((((0.9546243532663813)OR(x'dce7')))OR(rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0)))OR((v0.c0 IN (vt1.c0)))) FULL OUTER JOIN vt1 ON v0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0)))OR((v0.c0 IN (vt1.c0)))) FULL OUTER JOIN vt1 ON v0.c0 COLLATE NOCASE WHERE (((NULL) BETWEEN (((((0.9546243532663813)OR(x'dce7')))OR(rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((((0.9546243532663813)OR(x'dce7')))OR(rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((vt1.c0)*(vt1.c0)))OR((v0.c0 IN (vt1.c0)))) FULL OUTER JOIN vt1 ON v0.c0 COLLATE NOCASE);
SELECT * FROM vt1, rt0, v0 WHERE ('1013990590');
SELECT SUM(count) FROM (SELECT ALL (('1013990590') IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE ('1013990590');
SELECT SUM(count) FROM (SELECT ALL (('1013990590') IS TRUE)  as count FROM vt1, rt0, v0);
SELECT * FROM vt1, rt0, v0 WHERE ('1013990590');
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c0)IS NOT(v0.c0)), (v0.c0 IN ())))) ORDER BY ((v0.c0)AND(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)), (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(x''))))<=(((((v0.c0))<((vt1.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c0)IS NOT(v0.c0)), (v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((v0.c0)AND(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)), (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(x''))))<=(((((v0.c0))<((vt1.c0))))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c0)IS NOT(v0.c0)), (v0.c0 IN ())))) ORDER BY ((v0.c0)AND(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)), (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(x''))))<=(((((v0.c0))<((vt1.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c0)IS NOT(v0.c0)), (v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((v0.c0)AND(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)), (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(x''))))<=(((((v0.c0))<((vt1.c0))))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN (((vt1.c0)IS NOT(v0.c0)), (v0.c0 IN ())))) ORDER BY ((v0.c0)AND(CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)), (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt1.c0)))OR(x''))))<=(((((v0.c0))<((vt1.c0))))))  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((load_extension(v0.c0, v0.c0))*((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1469940729'))))) WHERE (((((((v0.c0)<(vt0.c0)))AND(((v0.c0)/(0.7620942856086826)))))AND(((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<(vt0.c0)))AND(((v0.c0)/(0.7620942856086826)))))AND(((((vt0.c0)OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((load_extension(v0.c0, v0.c0))*((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1469940729'))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((load_extension(v0.c0, v0.c0))*((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1469940729'))))) WHERE (((((((v0.c0)<(vt0.c0)))AND(((v0.c0)/(0.7620942856086826)))))AND(((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<(vt0.c0)))AND(((v0.c0)/(0.7620942856086826)))))AND(((((vt0.c0)OR(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((load_extension(v0.c0, v0.c0))*((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1469940729'))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((load_extension(v0.c0, v0.c0))*((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('1469940729'))))) WHERE (((((((v0.c0)<(vt0.c0)))AND(((v0.c0)/(0.7620942856086826)))))AND(((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('786746743'))))) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('786746743'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('786746743'))))) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('786746743'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('786746743'))))) ORDER BY CASE WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END DESC;
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c1 IN ())))) WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))>=(((rt0.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))>=(((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c1 IN ())))));
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c1 IN ())))) WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))>=(((rt0.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))>=(((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c1 IN ())))));
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((rt0.c0 IN ()))) AND (((rt0.c1 IN ())))) WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))>=(((rt0.c0)>=(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)IS NOT(rt0.c2)), CAST(rt0.c0 AS INTEGER))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c0)IS NOT(rt0.c2)), CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)IS NOT(rt0.c2)), CAST(rt0.c0 AS INTEGER))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c0)IS NOT(rt0.c2)), CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c0)IS NOT(rt0.c2)), CAST(rt0.c0 AS INTEGER))) ORDER BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/(vt0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0)>>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0)>>(v0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/(vt0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0)>>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0)>>(v0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))/(vt0.c0 COLLATE NOCASE))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(((v0.c0)>>(v0.c0))))  NULLS FIRST;
SELECT * FROM v0, vt1 WHERE ((- (((v0.c0)||(v0.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((UPPER(v0.c0), (((v0.c0))>=((v0.c0))), (vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE 0.6069592883175339 END, ((v0.c0) BETWEEN (v0.c0) AND (0.4507884558868479)))) AND ((NULL, (('-1928103425')IS(vt1.c0)), x'42b8', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt1.c0)<('-880743069')))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((UPPER(v0.c0), (((v0.c0))>=((v0.c0))), (vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE 0.6069592883175339 END, ((v0.c0) BETWEEN (v0.c0) AND (0.4507884558868479)))) AND ((NULL, (('-1928103425')IS(vt1.c0)), x'42b8', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt1.c0)<('-880743069'))))));
SELECT * FROM v0, vt1 WHERE ((- (((v0.c0)||(v0.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((UPPER(v0.c0), (((v0.c0))>=((v0.c0))), (vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE 0.6069592883175339 END, ((v0.c0) BETWEEN (v0.c0) AND (0.4507884558868479)))) AND ((NULL, (('-1928103425')IS(vt1.c0)), x'42b8', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt1.c0)<('-880743069')))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((UPPER(v0.c0), (((v0.c0))>=((v0.c0))), (vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE 0.6069592883175339 END, ((v0.c0) BETWEEN (v0.c0) AND (0.4507884558868479)))) AND ((NULL, (('-1928103425')IS(vt1.c0)), x'42b8', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt1.c0)<('-880743069'))))));
SELECT * FROM v0, vt1 WHERE ((- (((v0.c0)||(v0.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, v0.c0, v0.c0)) NOT BETWEEN ((UPPER(v0.c0), (((v0.c0))>=((v0.c0))), (vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE 0.6069592883175339 END, ((v0.c0) BETWEEN (v0.c0) AND (0.4507884558868479)))) AND ((NULL, (('-1928103425')IS(vt1.c0)), x'42b8', (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((vt1.c0)<('-880743069')))));
SELECT * FROM vt0 WHERE (LENGTH(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((vt0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LENGTH(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LENGTH(((vt0.c0)>=(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LENGTH(((vt0.c0)>=(vt0.c0))));
SELECT ALL * FROM v0 NOT INDEXED, vt1 WHERE (((((vt1.c0)+(v0.c0)))>((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(v0.c0)))>((+ (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0 NOT INDEXED, vt1 WHERE (((((vt1.c0)+(v0.c0)))>((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(v0.c0)))>((+ (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0 NOT INDEXED, vt1 WHERE (((((vt1.c0)+(v0.c0)))>((+ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)!=(vt1.c0)))*(((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<>(vt1.c0)))*(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)!=(vt1.c0)))*(((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<>(vt1.c0)))*(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)!=(vt1.c0)))*(((vt1.c0)>>(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0, rt0 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL) WHERE (((((rt0.c0 COLLATE NOCASE)OR(((vt1.c0) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) ORDER BY ABS('qA' COLLATE NOCASE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)OR(((vt1.c0) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, v0, rt0 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL) ORDER BY ABS('qA' COLLATE NOCASE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0, rt0 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL) WHERE (((((rt0.c0 COLLATE NOCASE)OR(((vt1.c0) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) ORDER BY ABS('qA' COLLATE NOCASE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)OR(((vt1.c0) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0, v0, rt0 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL) ORDER BY ABS('qA' COLLATE NOCASE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0, rt0 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL) WHERE (((((rt0.c0 COLLATE NOCASE)OR(((vt1.c0) NOT NULL))))OR((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))))) ORDER BY ABS('qA' COLLATE NOCASE) ASC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((vt1.c0)AND(rt0.c0)))OR(v0.c0))) IS FALSE) RIGHT OUTER JOIN vt1 ON ((((rt0.c1))<((NULL))) IN (((v0.c0) ISNULL))) WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY 0.5301741010906732 DESC, (((rt0.c2 IN ())) BETWEEN (((rt0.c1) IS TRUE)) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((vt1.c0)AND(rt0.c0)))OR(v0.c0))) IS FALSE) RIGHT OUTER JOIN vt1 ON ((((rt0.c1))<((NULL))) IN (((v0.c0) ISNULL))) ORDER BY 0.5301741010906732 DESC, (((rt0.c2 IN ())) BETWEEN (((rt0.c1) IS TRUE)) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((((((vt1.c0)AND(rt0.c0)))OR(v0.c0))) IS FALSE) RIGHT OUTER JOIN vt1 ON ((((rt0.c1))<((NULL))) IN (((v0.c0) ISNULL))) WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY 0.5301741010906732 DESC, (((rt0.c2 IN ())) BETWEEN (((rt0.c1) IS TRUE)) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((((vt1.c0)AND(rt0.c0)))OR(v0.c0))) IS FALSE) RIGHT OUTER JOIN vt1 ON ((((rt0.c1))<((NULL))) IN (((v0.c0) ISNULL))) ORDER BY 0.5301741010906732 DESC, (((rt0.c2 IN ())) BETWEEN (((rt0.c1) IS TRUE)) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND((- (rt0.c1)))))OR(json_array_length(vt0.c0, rt0.c1))) LEFT OUTER JOIN v0 ON rt0.c0 LEFT OUTER JOIN vt0 ON (((((+ (rt0.c0)))AND(CASE v0.c0  WHEN '0.032368013335766' THEN rt0.c2 ELSE vt0.c0 END)))AND(TYPEOF(rt0.c0))) WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM) ORDER BY (((+ (NULL)))GLOB(((v0.c0) IS FALSE))), rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND((- (rt0.c1)))))OR(json_array_length(vt0.c0, rt0.c1))) LEFT OUTER JOIN v0 ON rt0.c0 LEFT OUTER JOIN vt0 ON (((((+ (rt0.c0)))AND(CASE v0.c0  WHEN '0.032368013335766' THEN rt0.c2 ELSE vt0.c0 END)))AND(TYPEOF(rt0.c0))) ORDER BY (((+ (NULL)))GLOB(((v0.c0) IS FALSE))), rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND((- (rt0.c1)))))OR(json_array_length(vt0.c0, rt0.c1))) LEFT OUTER JOIN v0 ON rt0.c0 LEFT OUTER JOIN vt0 ON (((((+ (rt0.c0)))AND(CASE v0.c0  WHEN '0.032368013335766' THEN rt0.c2 ELSE vt0.c0 END)))AND(TYPEOF(rt0.c0))) WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM) ORDER BY (((+ (NULL)))GLOB(((v0.c0) IS FALSE))), rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND((- (rt0.c1)))))OR(json_array_length(vt0.c0, rt0.c1))) LEFT OUTER JOIN v0 ON rt0.c0 LEFT OUTER JOIN vt0 ON (((((+ (rt0.c0)))AND(CASE v0.c0  WHEN '0.032368013335766' THEN rt0.c2 ELSE vt0.c0 END)))AND(TYPEOF(rt0.c0))) ORDER BY (((+ (NULL)))GLOB(((v0.c0) IS FALSE))), rt0.c1  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT * FROM vt1 FULL OUTER JOIN v0 ON json_patch(((vt0.c0) BETWEEN (rt0.c1) AND (v0.c0)), NULLIF(rt0.c1, vt1.c0)) FULL OUTER JOIN vt0 ON ((((rt0.c0) IS FALSE))<(((vt1.c0) NOTNULL))) INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c1)))AND('')))=(((vt1.c0)-(v0.c0)))) WHERE (((((NULL) BETWEEN (rt0.c0) AND ('1950376562'))) BETWEEN ((((rt0.c1, vt1.c0, rt0.c0))=((rt0.c0, 1578275546, rt0.c2)))) AND ((~ (rt0.c0))))) ORDER BY ((((((vt0.c0)OR(rt0.c1)))OR('u2'))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((NULL))<>((v0.c0))))) DESC  NULLS LAST, CASE WHEN rt0.c1 THEN ((rt0.c2)|(rt0.c1)) WHEN LIKE(NULL, vt1.c0) THEN ((rt0.c2)&(vt1.c0)) WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt0.c0) IS FALSE) END, ((0.13712743641762326) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (rt0.c0) AND ('1950376562'))) BETWEEN ((((rt0.c1, vt1.c0, rt0.c0))==((rt0.c0, 1578275546, rt0.c2)))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON json_patch(((vt0.c0) BETWEEN (rt0.c1) AND (v0.c0)), NULLIF(rt0.c1, vt1.c0)) FULL OUTER JOIN vt0 ON ((((rt0.c0) IS FALSE))<(((vt1.c0) NOTNULL))) INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c1)))AND('')))=(((vt1.c0)-(v0.c0)))) ORDER BY ((((((vt0.c0)OR(rt0.c1)))OR('u2'))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((NULL))<>((v0.c0))))) DESC  NULLS LAST, CASE WHEN rt0.c1 THEN ((rt0.c2)|(rt0.c1)) WHEN LIKE(NULL, vt1.c0) THEN ((rt0.c2)&(vt1.c0)) WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt0.c0) IS FALSE) END, ((0.13712743641762326) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN v0 ON json_patch(((vt0.c0) BETWEEN (rt0.c1) AND (v0.c0)), NULLIF(rt0.c1, vt1.c0)) FULL OUTER JOIN vt0 ON ((((rt0.c0) IS FALSE))<(((vt1.c0) NOTNULL))) INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c1)))AND('')))=(((vt1.c0)-(v0.c0)))) WHERE (((((NULL) BETWEEN (rt0.c0) AND ('1950376562'))) BETWEEN ((((rt0.c1, vt1.c0, rt0.c0))=((rt0.c0, 1578275546, rt0.c2)))) AND ((~ (rt0.c0))))) ORDER BY ((((((vt0.c0)OR(rt0.c1)))OR('u2'))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((NULL))<>((v0.c0))))) DESC  NULLS LAST, CASE WHEN rt0.c1 THEN ((rt0.c2)|(rt0.c1)) WHEN LIKE(NULL, vt1.c0) THEN ((rt0.c2)&(vt1.c0)) WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt0.c0) IS FALSE) END, ((0.13712743641762326) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (rt0.c0) AND ('1950376562'))) BETWEEN ((((rt0.c1, vt1.c0, rt0.c0))==((rt0.c0, 1578275546, rt0.c2)))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON json_patch(((vt0.c0) BETWEEN (rt0.c1) AND (v0.c0)), NULLIF(rt0.c1, vt1.c0)) FULL OUTER JOIN vt0 ON ((((rt0.c0) IS FALSE))<(((vt1.c0) NOTNULL))) INNER JOIN rt0 ON ((((((rt0.c0)OR(rt0.c1)))AND('')))=(((vt1.c0)-(v0.c0)))) ORDER BY ((((((vt0.c0)OR(rt0.c1)))OR('u2'))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((((NULL))<>((v0.c0))))) DESC  NULLS LAST, CASE WHEN rt0.c1 THEN ((rt0.c2)|(rt0.c1)) WHEN LIKE(NULL, vt1.c0) THEN ((rt0.c2)&(vt1.c0)) WHEN UNLIKELY(DISTINCT vt1.c0) THEN ((vt0.c0) IS FALSE) END, ((0.13712743641762326) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<(vt0.c0)), ((vt0.c0)<<(vt0.c0))))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(-1310635924)))OR(((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<(vt0.c0)), ((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(-1310635924)))OR(((vt0.c0) NOTNULL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<(vt0.c0)), ((vt0.c0)<<(vt0.c0))))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(-1310635924)))OR(((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<(vt0.c0)), ((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(-1310635924)))OR(((vt0.c0) NOTNULL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)<(vt0.c0)), ((vt0.c0)<<(vt0.c0))))) ORDER BY ((((SQLITE_COMPILEOPTION_USED(vt0.c0))AND(-1310635924)))OR(((vt0.c0) NOTNULL))) DESC;
SELECT ALL * FROM vt1, v0, vt0 WHERE ((('1555971960' COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT (((('1555971960' COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE ((('1555971960' COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT (((('1555971960' COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE ((('1555971960' COLLATE RTRIM) IS FALSE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ROUND(0.7080947501000051 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) WHERE (HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ROUND(0.7080947501000051 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ROUND(0.7080947501000051 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) WHERE (HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ROUND(0.7080947501000051 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ROUND(0.7080947501000051 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) WHERE (HEX(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM v0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c1)) WHERE (CAST(((rt0.c1)%('T錿')) AS INTEGER)) ORDER BY (((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)%('T錿')) AS INTEGER)) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c1)) ORDER BY (((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c1)) WHERE (CAST(((rt0.c1)%('T錿')) AS INTEGER)) ORDER BY (((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)%('T錿')) AS INTEGER)) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c1)) ORDER BY (((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL)) BETWEEN (TRIM(DISTINCT v0.c0)) AND (rt0.c1)) WHERE (CAST(((rt0.c1)%('T錿')) AS INTEGER)) ORDER BY (((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()) DESC;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 END IN ()));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((- (rt0.c0))) ORDER BY (((rt0.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((rt0.c0 IN ())) IS TRUE));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((- (rt0.c0))) ORDER BY (((rt0.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c0))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((rt0.c0 IN ())) IS TRUE));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((- (rt0.c0))) ORDER BY (((rt0.c0 IN ())) IS TRUE);
SELECT ALL * FROM rt0, vt0 WHERE ((('-1162244160')>>(rt0.c0)) COLLATE RTRIM) ORDER BY CAST(((0.11853266899836723)>>(rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1162244160')>>(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((0.11853266899836723)>>(rt0.c2)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((('-1162244160')>>(rt0.c0)) COLLATE RTRIM) ORDER BY CAST(((0.11853266899836723)>>(rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-1162244160')>>(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((0.11853266899836723)>>(rt0.c2)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((('-1162244160')>>(rt0.c0)) COLLATE RTRIM) ORDER BY CAST(((0.11853266899836723)>>(rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT * FROM vt1, v0 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ORDER BY ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((vt1.c0) ISNULL))))AND(((0.7562847649038382)IS NOT('')))))AND(((v0.c0)LIKE(vt1.c0)))))AND(1774213636)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((vt1.c0) ISNULL))))AND(((0.7562847649038382)IS NOT('')))))AND(((v0.c0)LIKE(vt1.c0)))))AND(1774213636)) ASC  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ORDER BY ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((vt1.c0) ISNULL))))AND(((0.7562847649038382)IS NOT('')))))AND(((v0.c0)LIKE(vt1.c0)))))AND(1774213636)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((vt1.c0) ISNULL))))AND(((0.7562847649038382)IS NOT('')))))AND(((v0.c0)LIKE(vt1.c0)))))AND(1774213636)) ASC  NULLS FIRST);
SELECT * FROM vt1, v0 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ORDER BY ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)AND(((vt1.c0) ISNULL))))AND(((0.7562847649038382)IS NOT('')))))AND(((v0.c0)LIKE(vt1.c0)))))AND(1774213636)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (json_object(CASE rt0.c0  WHEN -322932481 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, CASE WHEN 0Xffffffff98bcc507 THEN rt0.c2 WHEN 0.04223023034812312 THEN rt0.c1 WHEN rt0.c2 THEN '款' ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((json_object(CASE rt0.c0  WHEN -322932481 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, CASE WHEN 0xffffffff98bcc507 THEN rt0.c2 WHEN 0.04223023034812312 THEN rt0.c1 WHEN rt0.c2 THEN '款' ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_object(CASE rt0.c0  WHEN -322932481 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, CASE WHEN 0Xffffffff98bcc507 THEN rt0.c2 WHEN 0.04223023034812312 THEN rt0.c1 WHEN rt0.c2 THEN '款' ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((json_object(CASE rt0.c0  WHEN -322932481 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, CASE WHEN 0xffffffff98bcc507 THEN rt0.c2 WHEN 0.04223023034812312 THEN rt0.c1 WHEN rt0.c2 THEN '款' ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_object(CASE rt0.c0  WHEN -322932481 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, CASE WHEN 0Xffffffff98bcc507 THEN rt0.c2 WHEN 0.04223023034812312 THEN rt0.c1 WHEN rt0.c2 THEN '款' ELSE rt0.c1 END));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE (rt0.c0 IN (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN NULL END CROSS JOIN v0 ON (vt1.c0 IN (vt1.c0, rt0.c1)) COLLATE BINARY FULL OUTER JOIN rt0 ON CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ELSE 0x64a69a4a END WHERE ((((- (vt1.c0)))AND(((x'')IS(v0.c0))))) ORDER BY v0.c0, ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((+ (rt0.c1)))))OR(((((vt1.c0)OR(vt0.c0)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))AND(((x'')IS(v0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE (rt0.c0 IN (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN NULL END CROSS JOIN v0 ON (vt1.c0 IN (vt1.c0, rt0.c1)) COLLATE BINARY FULL OUTER JOIN rt0 ON CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ELSE 0X64a69a4a END ORDER BY v0.c0, ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((+ (rt0.c1)))))OR(((((vt1.c0)OR(vt0.c0)))OR(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE (rt0.c0 IN (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN NULL END CROSS JOIN v0 ON (vt1.c0 IN (vt1.c0, rt0.c1)) COLLATE BINARY FULL OUTER JOIN rt0 ON CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ELSE 0x64a69a4a END WHERE ((((- (vt1.c0)))AND(((x'')IS(v0.c0))))) ORDER BY v0.c0, ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((+ (rt0.c1)))))OR(((((vt1.c0)OR(vt0.c0)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))AND(((x'')IS(v0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE (rt0.c0 IN (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN NULL END CROSS JOIN v0 ON (vt1.c0 IN (vt1.c0, rt0.c1)) COLLATE BINARY FULL OUTER JOIN rt0 ON CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) ELSE 0X64a69a4a END ORDER BY v0.c0, ((((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((+ (rt0.c1)))))OR(((((vt1.c0)OR(vt0.c0)))OR(rt0.c0))))  NULLS LAST);
SELECT * FROM v0, vt1 WHERE (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END)<<((~ (vt1.c0))))) ORDER BY x'9e54';
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END)<<((~ (vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY x'9e54');
SELECT * FROM v0, vt1 WHERE (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END)<<((~ (vt1.c0))))) ORDER BY x'9e54';
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END)<<((~ (vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY x'9e54');
SELECT * FROM v0, vt1 WHERE (((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END)<<((~ (vt1.c0))))) ORDER BY x'9e54';
SELECT ALL * FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY 0Xffffffffa4290596 COLLATE BINARY COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY 0xffffffffa4290596 COLLATE BINARY COLLATE BINARY ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY 0Xffffffffa4290596 COLLATE BINARY COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY 0xffffffffa4290596 COLLATE BINARY COLLATE BINARY ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ())) ORDER BY 0Xffffffffa4290596 COLLATE BINARY COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt1.c0)))AND(0.5711152575499095))) BETWEEN (MAX(vt0.c0, 0.8328609571241338)) AND ('V里7')));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt1.c0)))AND(0.5711152575499095))) BETWEEN (MAX(vt0.c0, 0.8328609571241338)) AND ('V里7'))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt1.c0)))AND(0.5711152575499095))) BETWEEN (MAX(vt0.c0, 0.8328609571241338)) AND ('V里7')));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt1.c0)))AND(0.5711152575499095))) BETWEEN (MAX(vt0.c0, 0.8328609571241338)) AND ('V里7'))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c0)OR(vt1.c0)))AND(0.5711152575499095))) BETWEEN (MAX(vt0.c0, 0.8328609571241338)) AND ('V里7')));
SELECT * FROM vt1, rt0, vt0 WHERE (((((((((HEX(DISTINCT rt0.c2))AND(json_array_length(rt0.c1))))AND(((rt0.c0)OR(vt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)%(vt1.c0))))) ORDER BY ((((((rt0.c0)OR(vt1.c0)))OR(rt0.c0)))IS(((rt0.c0)||(vt1.c0)))), CASE rt0.c1 COLLATE NOCASE  WHEN (~ (0xffffffffdddfa73b)) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c2 END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((HEX(DISTINCT rt0.c2))AND(json_array_length(rt0.c1))))AND(((rt0.c0)OR(vt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)%(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((rt0.c0)OR(vt1.c0)))OR(rt0.c0)))IS(((rt0.c0)||(vt1.c0)))), CASE rt0.c1 COLLATE NOCASE  WHEN (~ (0xffffffffdddfa73b)) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c2 END ASC);
SELECT * FROM vt1, rt0, vt0 WHERE (((((((((HEX(DISTINCT rt0.c2))AND(json_array_length(rt0.c1))))AND(((rt0.c0)OR(vt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)%(vt1.c0))))) ORDER BY ((((((rt0.c0)OR(vt1.c0)))OR(rt0.c0)))IS(((rt0.c0)||(vt1.c0)))), CASE rt0.c1 COLLATE NOCASE  WHEN (~ (0xffffffffdddfa73b)) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c2 END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((HEX(DISTINCT rt0.c2))AND(json_array_length(rt0.c1))))AND(((rt0.c0)OR(vt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)%(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((((rt0.c0)OR(vt1.c0)))OR(rt0.c0)))IS(((rt0.c0)||(vt1.c0)))), CASE rt0.c1 COLLATE NOCASE  WHEN (~ (0xffffffffdddfa73b)) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c2 END ASC);
SELECT * FROM vt1, rt0, vt0 WHERE (((((((((HEX(DISTINCT rt0.c2))AND(json_array_length(rt0.c1))))AND(((rt0.c0)OR(vt0.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((rt0.c1)%(vt1.c0))))) ORDER BY ((((((rt0.c0)OR(vt1.c0)))OR(rt0.c0)))IS(((rt0.c0)||(vt1.c0)))), CASE rt0.c1 COLLATE NOCASE  WHEN (~ (0xffffffffdddfa73b)) THEN CAST(vt0.c0 AS TEXT) ELSE rt0.c2 END ASC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (0.5697690241004456) ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((vt1.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((0.5697690241004456) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((vt1.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (0.5697690241004456) ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((vt1.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((0.5697690241004456) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((vt1.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (0.5697690241004456) ORDER BY ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((vt1.c0) NOTNULL))) ASC;
SELECT COUNT(*) FROM v0, rt0, vt1, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((CAST(vt1.c0 AS INTEGER), x'', (x'' IN (vt1.c0, v0.c0))))=((vt1.c0, ((v0.c0) BETWEEN (-1208074891) AND (rt0.c2)), ((rt0.c0) ISNULL))))  NULLS LAST, (('0p') NOT BETWEEN (((0.5238183099088632)+(rt0.c2))) AND ('831961993')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED, vt1, vt0 ORDER BY (((CAST(vt1.c0 AS INTEGER), x'', (x'' IN (vt1.c0, v0.c0))))==((vt1.c0, ((v0.c0) BETWEEN (-1208074891) AND (rt0.c2)), ((rt0.c0) ISNULL))))  NULLS LAST, (('0p') NOT BETWEEN (((0.5238183099088632)+(rt0.c2))) AND ('831961993')) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((CAST(vt1.c0 AS INTEGER), x'', (x'' IN (vt1.c0, v0.c0))))=((vt1.c0, ((v0.c0) BETWEEN (-1208074891) AND (rt0.c2)), ((rt0.c0) ISNULL))))  NULLS LAST, (('0p') NOT BETWEEN (((0.5238183099088632)+(rt0.c2))) AND ('831961993')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED, vt1, vt0 ORDER BY (((CAST(vt1.c0 AS INTEGER), x'', (x'' IN (vt1.c0, v0.c0))))==((vt1.c0, ((v0.c0) BETWEEN (-1208074891) AND (rt0.c2)), ((rt0.c0) ISNULL))))  NULLS LAST, (('0p') NOT BETWEEN (((0.5238183099088632)+(rt0.c2))) AND ('831961993')) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt1, vt0 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((CAST(vt1.c0 AS INTEGER), x'', (x'' IN (vt1.c0, v0.c0))))=((vt1.c0, ((v0.c0) BETWEEN (-1208074891) AND (rt0.c2)), ((rt0.c0) ISNULL))))  NULLS LAST, (('0p') NOT BETWEEN (((0.5238183099088632)+(rt0.c2))) AND ('831961993')) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1, v0 INNER JOIN vt0 ON ((((((rt0.c2)-(vt0.c0)))AND(((vt0.c0)-(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0, vt1, v0 INNER JOIN vt0 ON ((((((rt0.c2)-(vt0.c0)))AND(((vt0.c0)-(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1, v0 INNER JOIN vt0 ON ((((((rt0.c2)-(vt0.c0)))AND(((vt0.c0)-(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0, vt1, v0 INNER JOIN vt0 ON ((((((rt0.c2)-(vt0.c0)))AND(((vt0.c0)-(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt1, v0 INNER JOIN vt0 ON ((((((rt0.c2)-(vt0.c0)))AND(((vt0.c0)-(vt1.c0)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) WHERE (((CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c1 END) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN (vt0.c0, rt0.c2)))>>(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) WHERE (((((1688640074)OR(CAST(v0.c0 AS BLOB))))OR(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((1688640074)OR(CAST(v0.c0 AS BLOB))))OR(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1, v0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN (vt0.c0, rt0.c2)))>>(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN (vt0.c0, rt0.c2)))>>(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) WHERE (((((1688640074)OR(CAST(v0.c0 AS BLOB))))OR(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((1688640074)OR(CAST(v0.c0 AS BLOB))))OR(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1, v0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN (vt0.c0, rt0.c2)))>>(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1, v0 FULL OUTER JOIN vt0 ON (((rt0.c1 IN (vt0.c0, rt0.c2)))>>(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) WHERE (((((1688640074)OR(CAST(v0.c0 AS BLOB))))OR(CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM v0, vt0 WHERE ('紇S?cbt') ORDER BY (((((vt0.c0)%(vt0.c0))))<(((v0.c0 IN (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('紇S?cbt') IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0)%(vt0.c0))))<(((v0.c0 IN (vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ('紇S?cbt') ORDER BY (((((vt0.c0)%(vt0.c0))))<(((v0.c0 IN (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('紇S?cbt') IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0)%(vt0.c0))))<(((v0.c0 IN (vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE ('紇S?cbt') ORDER BY (((((vt0.c0)%(vt0.c0))))<(((v0.c0 IN (vt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)<=(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<=(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)<=(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<=(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)<=(rt0.c2)) IN ()));
SELECT * FROM vt1, vt0, v0, rt0 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt1, vt0, v0, rt0);
SELECT * FROM vt1, vt0, v0, rt0 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt1, vt0, v0, rt0);
SELECT * FROM vt1, vt0, v0, rt0 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL));
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (NULL) ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (0.1860210726995164))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (0.1860210726995164))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (NULL) ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (0.1860210726995164))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, v0, rt0 ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (0.1860210726995164))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, v0, rt0 WHERE (NULL) ORDER BY ((((v0.c0) BETWEEN (rt0.c0) AND (0.1860210726995164))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, v0 WHERE ((((rt0.c1) IS FALSE) IN (((rt0.c1)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt1.c0)+(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN (((rt0.c1)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0, vt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt1.c0)+(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, v0 WHERE ((((rt0.c1) IS FALSE) IN (((rt0.c1)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt1.c0)+(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN (((rt0.c1)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0, vt0, v0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt1.c0)+(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, v0 WHERE ((((rt0.c1) IS FALSE) IN (((rt0.c1)LIKE(vt1.c0)), CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) AND (((vt1.c0)+(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- ('jlﲘ9yT媤%'))) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0, (+ (vt0.c0))))>=(((+ (x'')), NULL, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '-441594087' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CASE '683424084'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ('jlﲘ9yT媤%'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0, (+ (vt0.c0))))>=(((+ (x'')), NULL, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '-441594087' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CASE '683424084'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- ('jlﲘ9yT媤%'))) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0, (+ (vt0.c0))))>=(((+ (x'')), NULL, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '-441594087' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CASE '683424084'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ('jlﲘ9yT媤%'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0, (+ (vt0.c0))))>=(((+ (x'')), NULL, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '-441594087' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CASE '683424084'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- ('jlﲘ9yT媤%'))) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0, (+ (vt0.c0))))>=(((+ (x'')), NULL, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '-441594087' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) DESC, ((vt0.c0) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CASE '683424084'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt1 ON '衤g' WHERE (CASE ROUND(rt0.c2, rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<<(rt0.c1)) END) ORDER BY (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((NULL) IS FALSE)))), (NOT (((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ROUND(rt0.c2, rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<<(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt1 ON '衤g' ORDER BY (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((NULL) IS FALSE)))), (NOT (((rt0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt1 ON '衤g' WHERE (CASE ROUND(rt0.c2, rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<<(rt0.c1)) END) ORDER BY (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((NULL) IS FALSE)))), (NOT (((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE ROUND(rt0.c2, rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<<(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt1 ON '衤g' ORDER BY (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((NULL) IS FALSE)))), (NOT (((rt0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt1 ON '衤g' WHERE (CASE ROUND(rt0.c2, rt0.c0)  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<<(rt0.c1)) END) ORDER BY (((rt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((NULL) IS FALSE)))), (NOT (((rt0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM v0, rt0, vt1 CROSS JOIN vt0 ON ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM WHERE (((v0.c0) NOT BETWEEN ((NOT (v0.c0))) AND (UNLIKELY(vt1.c0)))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN ((NOT (v0.c0))) AND (UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM v0, rt0, vt1 CROSS JOIN vt0 ON ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM ORDER BY CAST((vt0.c0 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM v0, rt0, vt1 CROSS JOIN vt0 ON ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM WHERE (((v0.c0) NOT BETWEEN ((NOT (v0.c0))) AND (UNLIKELY(vt1.c0)))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN ((NOT (v0.c0))) AND (UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM v0, rt0, vt1 CROSS JOIN vt0 ON ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM ORDER BY CAST((vt0.c0 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM v0, rt0, vt1 CROSS JOIN vt0 ON ((((rt0.c1)OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM WHERE (((v0.c0) NOT BETWEEN ((NOT (v0.c0))) AND (UNLIKELY(vt1.c0)))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB);
SELECT * FROM vt1, vt0 WHERE (((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON json_valid(0.9780742105039716) WHERE (((((((x'')OR(rt0.c2)))OR(((vt0.c0)+(v0.c0)))))AND(((rt0.c0)AND(vt1.c0))))) ORDER BY ((((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))AND(1796740463))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'')OR(rt0.c2)))OR(((vt0.c0)+(v0.c0)))))AND(((rt0.c0)AND(vt1.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON json_valid(0.9780742105039716) ORDER BY ((((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))AND(1796740463))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON json_valid(0.9780742105039716) WHERE (((((((x'')OR(rt0.c2)))OR(((vt0.c0)+(v0.c0)))))AND(((rt0.c0)AND(vt1.c0))))) ORDER BY ((((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))AND(1796740463))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((x'')OR(rt0.c2)))OR(((vt0.c0)+(v0.c0)))))AND(((rt0.c0)AND(vt1.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON json_valid(0.9780742105039716) ORDER BY ((((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))AND(1796740463))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 RIGHT OUTER JOIN vt1 ON json_valid(0.9780742105039716) WHERE (((((((x'')OR(rt0.c2)))OR(((vt0.c0)+(v0.c0)))))AND(((rt0.c0)AND(vt1.c0))))) ORDER BY ((((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))AND(CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))AND(1796740463))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, v0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0, vt1);
SELECT COUNT(*) FROM rt0, vt0, v0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0, vt1);
SELECT COUNT(*) FROM rt0, vt0, v0, vt1 WHERE (rt0.c2);
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))>=((CAST(v0.c0 AS REAL)))) WHERE ((((((~ (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))OR(0.4672151071777476)));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))OR(0.4672151071777476))) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))>=((CAST(v0.c0 AS REAL)))));
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))>=((CAST(v0.c0 AS REAL)))) WHERE ((((((~ (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))OR(0.4672151071777476)));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))OR(0.4672151071777476))) IS TRUE)  as count FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))>=((CAST(v0.c0 AS REAL)))));
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))>=((CAST(v0.c0 AS REAL)))) WHERE ((((((~ (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))OR(0.4672151071777476)));
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c0);
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>(rt0.c2)))||(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE) DESC, (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) IN ((rt0.c2 IN (rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(rt0.c2)))||(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE) DESC, (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) IN ((rt0.c2 IN (rt0.c2, rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>(rt0.c2)))||(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE) DESC, (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) IN ((rt0.c2 IN (rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(rt0.c2)))||(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE) DESC, (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) IN ((rt0.c2 IN (rt0.c2, rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>(rt0.c2)))||(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2))))) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) IS FALSE) DESC, (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)) IN ((rt0.c2 IN (rt0.c2, rt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY('')) ISNULL));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY('')) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY('')) ISNULL));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY('')) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY('')) ISNULL));
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ('rh');
SELECT SUM(count) FROM (SELECT ALL (('rh') IS TRUE)  as count FROM rt0, vt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ('rh');
SELECT SUM(count) FROM (SELECT ALL (('rh') IS TRUE)  as count FROM rt0, vt0, v0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, vt1 WHERE ('rh');
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON ((0.4939846713580056)IS NOT(0xffffffffa936d9ee)) WHERE (CAST(CAST(0.9706166226135623 AS TEXT) AS REAL)) ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.9706166226135623 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON ((0.4939846713580056)IS NOT(0Xffffffffa936d9ee)) ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON ((0.4939846713580056)IS NOT(0xffffffffa936d9ee)) WHERE (CAST(CAST(0.9706166226135623 AS TEXT) AS REAL)) ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.9706166226135623 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON ((0.4939846713580056)IS NOT(0Xffffffffa936d9ee)) ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON ((0.4939846713580056)IS NOT(0xffffffffa936d9ee)) WHERE (CAST(CAST(0.9706166226135623 AS TEXT) AS REAL)) ORDER BY (NOT (((vt0.c0)/(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('K7t5')))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('K7t5'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('K7t5')))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('K7t5'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND ('K7t5')))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 FULL OUTER JOIN vt0 ON (- (((((((((v0.c0)AND(450939536)))OR(v0.c0)))OR(0Xffffffff9abf786f)))OR(vt0.c0)))) WHERE (((((vt0.c0)||(vt0.c0))) IS FALSE)) ORDER BY rt0.c1 DESC  NULLS LAST, ((v0.c0)=(CASE WHEN rt0.c1 THEN v0.c0 WHEN 0.34162072438488844 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 FULL OUTER JOIN vt0 ON (- (((((((((v0.c0)AND(450939536)))OR(v0.c0)))OR(0Xffffffff9abf786f)))OR(vt0.c0)))) ORDER BY rt0.c1 DESC  NULLS LAST, ((v0.c0)==(CASE WHEN rt0.c1 THEN v0.c0 WHEN 0.34162072438488844 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 FULL OUTER JOIN vt0 ON (- (((((((((v0.c0)AND(450939536)))OR(v0.c0)))OR(0Xffffffff9abf786f)))OR(vt0.c0)))) WHERE (((((vt0.c0)||(vt0.c0))) IS FALSE)) ORDER BY rt0.c1 DESC  NULLS LAST, ((v0.c0)=(CASE WHEN rt0.c1 THEN v0.c0 WHEN 0.34162072438488844 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 FULL OUTER JOIN vt0 ON (- (((((((((v0.c0)AND(450939536)))OR(v0.c0)))OR(0Xffffffff9abf786f)))OR(vt0.c0)))) ORDER BY rt0.c1 DESC  NULLS LAST, ((v0.c0)==(CASE WHEN rt0.c1 THEN v0.c0 WHEN 0.34162072438488844 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON rt0.c1 FULL OUTER JOIN vt0 ON (- (((((((((v0.c0)AND(450939536)))OR(v0.c0)))OR(0Xffffffff9abf786f)))OR(vt0.c0)))) WHERE (((((vt0.c0)||(vt0.c0))) IS FALSE)) ORDER BY rt0.c1 DESC  NULLS LAST, ((v0.c0)=(CASE WHEN rt0.c1 THEN v0.c0 WHEN 0.34162072438488844 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c0)) AS REAL)) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c0)) AS REAL)) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c0)) AS REAL)) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((+ (v0.c0))))) ORDER BY CAST(NULL AS REAL), (+ (((v0.c0)<=(v0.c0)))), LIKELIHOOD(((v0.c0) IS TRUE), 0.895094666983557) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS REAL), (+ (((v0.c0)<=(v0.c0)))), LIKELIHOOD(((v0.c0) IS TRUE), 0.895094666983557) DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((+ (v0.c0))))) ORDER BY CAST(NULL AS REAL), (+ (((v0.c0)<=(v0.c0)))), LIKELIHOOD(((v0.c0) IS TRUE), 0.895094666983557) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((+ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(NULL AS REAL), (+ (((v0.c0)<=(v0.c0)))), LIKELIHOOD(((v0.c0) IS TRUE), 0.895094666983557) DESC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ((+ (v0.c0))))) ORDER BY CAST(NULL AS REAL), (+ (((v0.c0)<=(v0.c0)))), LIKELIHOOD(((v0.c0) IS TRUE), 0.895094666983557) DESC;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1310316449' WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1310316449' WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1310316449' WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1310316449' WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1310316449' WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) NOTNULL))));
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON ((NOT (v0.c0)) IN (((vt1.c0) NOTNULL), ((vt1.c0) ISNULL))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((NOT (v0.c0)) IN (((vt1.c0) NOTNULL), ((vt1.c0) ISNULL))));
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON ((NOT (v0.c0)) IN (((vt1.c0) NOTNULL), ((vt1.c0) ISNULL))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON ((NOT (v0.c0)) IN (((vt1.c0) NOTNULL), ((vt1.c0) ISNULL))));
SELECT * FROM vt1 LEFT OUTER JOIN v0 ON ((NOT (v0.c0)) IN (((vt1.c0) NOTNULL), ((vt1.c0) ISNULL))) WHERE (x'');
SELECT * FROM vt0, v0, vt1 LEFT OUTER JOIN rt0 ON (- (vt1.c0)) COLLATE BINARY COLLATE RTRIM WHERE (((((rt0.c0)IS NOT(v0.c0))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL)))) ORDER BY (((rt0.c1))<=((vt0.c0))) COLLATE RTRIM DESC  NULLS LAST, ((((((((((rt0.c1)|(rt0.c0)))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((0x188bad9f)) AND ((rt0.c0))))))OR(LIKE(vt0.c0, rt0.c1))))OR(((rt0.c0)!=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(v0.c0))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, vt1 LEFT OUTER JOIN rt0 ON (- (vt1.c0)) COLLATE BINARY COLLATE RTRIM ORDER BY (((rt0.c1))<=((vt0.c0))) COLLATE RTRIM DESC  NULLS LAST, ((((((((((rt0.c1)|(rt0.c0)))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((0x188bad9f)) AND ((rt0.c0))))))OR(LIKE(vt0.c0, rt0.c1))))OR(((rt0.c0)!=(vt1.c0)))));
SELECT * FROM vt0, v0, vt1 LEFT OUTER JOIN rt0 ON (- (vt1.c0)) COLLATE BINARY COLLATE RTRIM WHERE (((((rt0.c0)IS NOT(v0.c0))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL)))) ORDER BY (((rt0.c1))<=((vt0.c0))) COLLATE RTRIM DESC  NULLS LAST, ((((((((((rt0.c1)|(rt0.c0)))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((0x188bad9f)) AND ((rt0.c0))))))OR(LIKE(vt0.c0, rt0.c1))))OR(((rt0.c0)!=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(v0.c0))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, vt1 LEFT OUTER JOIN rt0 ON (- (vt1.c0)) COLLATE BINARY COLLATE RTRIM ORDER BY (((rt0.c1))<=((vt0.c0))) COLLATE RTRIM DESC  NULLS LAST, ((((((((((rt0.c1)|(rt0.c0)))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((0x188bad9f)) AND ((rt0.c0))))))OR(LIKE(vt0.c0, rt0.c1))))OR(((rt0.c0)!=(vt1.c0)))));
SELECT * FROM vt0, v0, vt1 LEFT OUTER JOIN rt0 ON (- (vt1.c0)) COLLATE BINARY COLLATE RTRIM WHERE (((((rt0.c0)IS NOT(v0.c0))) NOT BETWEEN (rt0.c2) AND (((rt0.c0) NOT NULL)))) ORDER BY (((rt0.c1))<=((vt0.c0))) COLLATE RTRIM DESC  NULLS LAST, ((((((((((rt0.c1)|(rt0.c0)))OR(((rt0.c0) ISNULL))))OR((((rt0.c0)) NOT BETWEEN ((0x188bad9f)) AND ((rt0.c0))))))OR(LIKE(vt0.c0, rt0.c1))))OR(((rt0.c0)!=(vt1.c0))));
SELECT COUNT(*) FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (((~ (v0.c0)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c0)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (((~ (v0.c0)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (v0.c0)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (((~ (v0.c0)) IN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((x'') NOT NULL))));
SELECT COUNT(*) FROM rt0 WHERE (GLOB(CAST(rt0.c2 AS BLOB), CASE rt0.c1  WHEN rt0.c1 THEN '㲧Z' END));
SELECT SUM(count) FROM (SELECT ((GLOB(CAST(rt0.c2 AS BLOB), CASE rt0.c1  WHEN rt0.c1 THEN '㲧Z' END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (GLOB(CAST(rt0.c2 AS BLOB), CASE rt0.c1  WHEN rt0.c1 THEN '㲧Z' END));
SELECT SUM(count) FROM (SELECT ((GLOB(CAST(rt0.c2 AS BLOB), CASE rt0.c1  WHEN rt0.c1 THEN '㲧Z' END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (GLOB(CAST(rt0.c2 AS BLOB), CASE rt0.c1  WHEN rt0.c1 THEN '㲧Z' END));
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c1 AS TEXT))|((rt0.c1 IN (rt0.c1))))) ORDER BY (- (((rt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))|((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1) NOT NULL))) ASC);
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c1 AS TEXT))|((rt0.c1 IN (rt0.c1))))) ORDER BY (- (((rt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))|((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c1) NOT NULL))) ASC);
SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c1 AS TEXT))|((rt0.c1 IN (rt0.c1))))) ORDER BY (- (((rt0.c1) NOT NULL))) ASC;
SELECT * FROM v0, vt1, rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))!=((vt1.c0 IN ()))) DESC, CASE (rt0.c0 IN ())  WHEN LIKELIHOOD(vt1.c0, 0.8134867783015695) THEN (vt1.c0 IN (rt0.c0)) WHEN IFNULL(DISTINCT vt1.c0, rt0.c1) THEN CAST(rt0.c0 AS TEXT) WHEN ((((rt0.c2)OR(x'7bc4')))OR(rt0.c1)) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) ELSE 0.4240471257716961 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))<>((vt1.c0 IN ()))) DESC, CASE (rt0.c0 IN ())  WHEN LIKELIHOOD(vt1.c0, 0.8134867783015695) THEN (vt1.c0 IN (rt0.c0)) WHEN IFNULL(DISTINCT vt1.c0, rt0.c1) THEN CAST(rt0.c0 AS TEXT) WHEN ((((rt0.c2)OR(x'7bc4')))OR(rt0.c1)) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) ELSE 0.4240471257716961 END  NULLS FIRST);
SELECT * FROM v0, vt1, rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))!=((vt1.c0 IN ()))) DESC, CASE (rt0.c0 IN ())  WHEN LIKELIHOOD(vt1.c0, 0.8134867783015695) THEN (vt1.c0 IN (rt0.c0)) WHEN IFNULL(DISTINCT vt1.c0, rt0.c1) THEN CAST(rt0.c0 AS TEXT) WHEN ((((rt0.c2)OR(x'7bc4')))OR(rt0.c1)) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) ELSE 0.4240471257716961 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))<>((vt1.c0 IN ()))) DESC, CASE (rt0.c0 IN ())  WHEN LIKELIHOOD(vt1.c0, 0.8134867783015695) THEN (vt1.c0 IN (rt0.c0)) WHEN IFNULL(DISTINCT vt1.c0, rt0.c1) THEN CAST(rt0.c0 AS TEXT) WHEN ((((rt0.c2)OR(x'7bc4')))OR(rt0.c1)) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) ELSE 0.4240471257716961 END  NULLS FIRST);
SELECT * FROM v0, vt1, rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))))!=((vt1.c0 IN ()))) DESC, CASE (rt0.c0 IN ())  WHEN LIKELIHOOD(vt1.c0, 0.8134867783015695) THEN (vt1.c0 IN (rt0.c0)) WHEN IFNULL(DISTINCT vt1.c0, rt0.c1) THEN CAST(rt0.c0 AS TEXT) WHEN ((((rt0.c2)OR(x'7bc4')))OR(rt0.c1)) THEN ((((rt0.c2)AND(v0.c0)))AND(rt0.c0)) ELSE 0.4240471257716961 END  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))AND(NULL))  WHEN ((v0.c0)<<(vt1.c0)) THEN (('-1875904725') ISNULL) END) ORDER BY (((vt1.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)OR(vt1.c0)))AND(NULL))  WHEN ((v0.c0)<<(vt1.c0)) THEN (('-1875904725') ISNULL) END) IS TRUE)  as count FROM v0, vt1 ORDER BY (((vt1.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM v0, vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))AND(NULL))  WHEN ((v0.c0)<<(vt1.c0)) THEN (('-1875904725') ISNULL) END) ORDER BY (((vt1.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)OR(vt1.c0)))AND(NULL))  WHEN ((v0.c0)<<(vt1.c0)) THEN (('-1875904725') ISNULL) END) IS TRUE)  as count FROM v0, vt1 ORDER BY (((vt1.c0 IN ())) NOTNULL));
SELECT COUNT(*) FROM v0, vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))AND(NULL))  WHEN ((v0.c0)<<(vt1.c0)) THEN (('-1875904725') ISNULL) END) ORDER BY (((vt1.c0 IN ())) NOTNULL);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.c0 IN ())) AND (json_array_length(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.c0 IN ())) AND (json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.c0 IN ())) AND (json_array_length(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.c0 IN ())) AND (json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((vt1.c0 IN ())) AND (json_array_length(vt1.c0))));
SELECT * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END THEN ((vt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END THEN ((vt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END THEN ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 END THEN ((vt1.c0) NOTNULL) END);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE TRIM(DISTINCT rt0.c0, rt0.c2)  WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1) BETWEEN ('a') AND (vt1.c0)) ELSE ((vt0.c0) ISNULL) END) ORDER BY ((((vt1.c0)>>(rt0.c1))) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT rt0.c0, rt0.c2)  WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1) BETWEEN ('a') AND (vt1.c0)) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY ((((vt1.c0)>>(rt0.c1))) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))));
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE TRIM(DISTINCT rt0.c0, rt0.c2)  WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1) BETWEEN ('a') AND (vt1.c0)) ELSE ((vt0.c0) ISNULL) END) ORDER BY ((((vt1.c0)>>(rt0.c1))) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT rt0.c0, rt0.c2)  WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1) BETWEEN ('a') AND (vt1.c0)) ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY ((((vt1.c0)>>(rt0.c1))) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))));
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE TRIM(DISTINCT rt0.c0, rt0.c2)  WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1) BETWEEN ('a') AND (vt1.c0)) ELSE ((vt0.c0) ISNULL) END) ORDER BY ((((vt1.c0)>>(rt0.c1))) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) AND (((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))));
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE ('Nw9' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('Nw9' COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE ('Nw9' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('Nw9' COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, v0);
SELECT ALL COUNT(*) FROM vt1, rt0, v0 WHERE ('Nw9' COLLATE BINARY);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS NUMERIC)  WHEN (~ (rt0.c2)) THEN UNICODE(rt0.c0) WHEN ((rt0.c0)<(vt1.c0)) THEN json_object(rt0.c0, vt0.c0) WHEN ((0xffffffffa3aa7d74) BETWEEN (rt0.c1) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT '-2070423488', 0.32982302458325496) END FULL OUTER JOIN rt0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c1) NOTNULL))) RIGHT OUTER JOIN v0 ON 0.6057619177755739 WHERE (((x'' COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS NUMERIC)  WHEN (~ (rt0.c2)) THEN UNICODE(rt0.c0) WHEN ((rt0.c0)<(vt1.c0)) THEN json_object(rt0.c0, vt0.c0) WHEN ((0xffffffffa3aa7d74) BETWEEN (rt0.c1) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT '-2070423488', 0.32982302458325496) END FULL OUTER JOIN rt0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c1) NOTNULL))) RIGHT OUTER JOIN v0 ON 0.6057619177755739);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS NUMERIC)  WHEN (~ (rt0.c2)) THEN UNICODE(rt0.c0) WHEN ((rt0.c0)<(vt1.c0)) THEN json_object(rt0.c0, vt0.c0) WHEN ((0xffffffffa3aa7d74) BETWEEN (rt0.c1) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT '-2070423488', 0.32982302458325496) END FULL OUTER JOIN rt0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c1) NOTNULL))) RIGHT OUTER JOIN v0 ON 0.6057619177755739 WHERE (((x'' COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c0 AS NUMERIC)  WHEN (~ (rt0.c2)) THEN UNICODE(rt0.c0) WHEN ((rt0.c0)<(vt1.c0)) THEN json_object(rt0.c0, vt0.c0) WHEN ((0xffffffffa3aa7d74) BETWEEN (rt0.c1) AND (v0.c0)) THEN LIKELIHOOD(DISTINCT '-2070423488', 0.32982302458325496) END FULL OUTER JOIN rt0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c1) NOTNULL))) RIGHT OUTER JOIN v0 ON 0.6057619177755739);
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))) ISNULL)) ORDER BY (- ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (- ((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))) ISNULL)) ORDER BY (- ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (- ((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(NULL))) ISNULL)) ORDER BY (- ((v0.c0 IN ())));
SELECT ALL * FROM vt1, v0, rt0, vt0 WHERE (CAST(479084188 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(479084188 AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, rt0, vt0);
SELECT ALL * FROM vt1, v0, rt0, vt0 WHERE (CAST(479084188 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(479084188 AS NUMERIC)) IS TRUE)  as count FROM vt1, v0, rt0, vt0);
SELECT ALL * FROM vt1, v0, rt0, vt0 WHERE (CAST(479084188 AS NUMERIC));
SELECT * FROM vt0, v0, rt0, vt1 WHERE (((LIKELY(rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0, vt1);
SELECT * FROM vt0, v0, rt0, vt1 WHERE (((LIKELY(rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0, vt1);
SELECT * FROM vt0, v0, rt0, vt1 WHERE (((LIKELY(rt0.c0)) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0, vt1, v0 WHERE (CASE CASE WHEN rt0.c2 THEN vt1.c0 END  WHEN vt1.c0 THEN TIME(rt0.c0, rt0.c2, 'LCn') WHEN load_extension(rt0.c2) THEN (((vt0.c0))>=((vt1.c0))) WHEN ((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c0)) THEN '-460817145' ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) ORDER BY 0.9772210141473097 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c2 THEN vt1.c0 END  WHEN vt1.c0 THEN TIME(rt0.c0, rt0.c2, 'LCn') WHEN load_extension(rt0.c2) THEN (((vt0.c0))>=((vt1.c0))) WHEN ((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c0)) THEN '-460817145' ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY 0.9772210141473097 DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1, v0 WHERE (CASE CASE WHEN rt0.c2 THEN vt1.c0 END  WHEN vt1.c0 THEN TIME(rt0.c0, rt0.c2, 'LCn') WHEN load_extension(rt0.c2) THEN (((vt0.c0))>=((vt1.c0))) WHEN ((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c0)) THEN '-460817145' ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) ORDER BY 0.9772210141473097 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c2 THEN vt1.c0 END  WHEN vt1.c0 THEN TIME(rt0.c0, rt0.c2, 'LCn') WHEN load_extension(rt0.c2) THEN (((vt0.c0))>=((vt1.c0))) WHEN ((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c0)) THEN '-460817145' ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1, v0 ORDER BY 0.9772210141473097 DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1, v0 WHERE (CASE CASE WHEN rt0.c2 THEN vt1.c0 END  WHEN vt1.c0 THEN TIME(rt0.c0, rt0.c2, 'LCn') WHEN load_extension(rt0.c2) THEN (((vt0.c0))>=((vt1.c0))) WHEN ((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))AND(v0.c0)))AND(rt0.c0)) THEN '-460817145' ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) ORDER BY 0.9772210141473097 DESC;
SELECT * FROM v0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(UPPER(v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(UPPER(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(UPPER(v0.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(UPPER(v0.c0))));
SELECT * FROM rt0 WHERE (SUBSTR(((rt0.c2) NOTNULL), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt0.c2) NOTNULL), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT * FROM rt0 WHERE (SUBSTR(((rt0.c2) NOTNULL), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt0.c2) NOTNULL), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT * FROM rt0 WHERE (SUBSTR(((rt0.c2) NOTNULL), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY rt0.c1;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c1)-('O烿b')))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)-('O烿b'))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c1)-('O烿b')))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)-('O烿b'))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (((rt0.c1)-('O烿b')))));
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) ORDER BY (((((((((((rt0.c1, rt0.c1, rt0.c0))>((vt0.c0, 0.08739452806663939, 'l8be萅\'))))OR(CAST(-2085405076 AS INTEGER))))OR(((vt1.c0) BETWEEN (-2.44290766E8) AND (rt0.c0)))))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))))OR((-1.425353796E9 IN ())))  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)%(rt0.c1)) THEN '743869492' WHEN ((rt0.c1) NOTNULL) THEN (vt1.c0 IN (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((((((((rt0.c1, rt0.c1, rt0.c0))>((vt0.c0, 0.08739452806663939, 'l8be萅\'))))OR(CAST(-2085405076 AS INTEGER))))OR(((vt1.c0) BETWEEN (-2.44290766E8) AND (rt0.c0)))))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))))OR((-1.425353796E9 IN ())))  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)%(rt0.c1)) THEN '743869492' WHEN ((rt0.c1) NOTNULL) THEN (vt1.c0 IN (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) ORDER BY (((((((((((rt0.c1, rt0.c1, rt0.c0))>((vt0.c0, 0.08739452806663939, 'l8be萅\'))))OR(CAST(-2085405076 AS INTEGER))))OR(((vt1.c0) BETWEEN (-2.44290766E8) AND (rt0.c0)))))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))))OR((-1.425353796E9 IN ())))  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)%(rt0.c1)) THEN '743869492' WHEN ((rt0.c1) NOTNULL) THEN (vt1.c0 IN (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((((((((rt0.c1, rt0.c1, rt0.c0))>((vt0.c0, 0.08739452806663939, 'l8be萅\'))))OR(CAST(-2085405076 AS INTEGER))))OR(((vt1.c0) BETWEEN (-2.44290766E8) AND (rt0.c0)))))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))))OR((-1.425353796E9 IN ())))  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)%(rt0.c1)) THEN '743869492' WHEN ((rt0.c1) NOTNULL) THEN (vt1.c0 IN (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) ORDER BY (((((((((((rt0.c1, rt0.c1, rt0.c0))>((vt0.c0, 0.08739452806663939, 'l8be萅\'))))OR(CAST(-2085405076 AS INTEGER))))OR(((vt1.c0) BETWEEN (-2.44290766E8) AND (rt0.c0)))))AND(((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))))OR((-1.425353796E9 IN ())))  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((rt0.c1)%(rt0.c1)) THEN '743869492' WHEN ((rt0.c1) NOTNULL) THEN (vt1.c0 IN (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((((NULL)AND(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((UPPER(v0.c0)) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (CAST(v0.c0 AS REAL)))) ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(v0.c0)) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((UPPER(v0.c0)) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (CAST(v0.c0 AS REAL)))) ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(v0.c0)) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((UPPER(v0.c0)) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (CAST(v0.c0 AS REAL)))) ORDER BY (- (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())) ORDER BY 0.6389299534864004 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.6389299534864004 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())) ORDER BY 0.6389299534864004 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY 0.6389299534864004 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c1)OR(v0.c0)))OR(v0.c0)) IN ())) ORDER BY 0.6389299534864004 ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)|(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)|(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)|(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)|(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)|(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0) ISNULL))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND ('1555971960')), ((vt1.c0) ISNULL), '-2085405076')))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0) ISNULL))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND ('1555971960')), ((vt1.c0) ISNULL), '-2085405076')))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND((vt1.c0 IN ()))) DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0) ISNULL))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND ('1555971960')), ((vt1.c0) ISNULL), '-2085405076')))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)IS NOT(vt1.c0)), ((vt1.c0) ISNULL))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND ('1555971960')), ((vt1.c0) ISNULL), '-2085405076')))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))AND((vt1.c0 IN ()))) DESC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c0) NOTNULL) THEN ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)) END WHERE (HEX(0.3943936432525982));
SELECT SUM(count) FROM (SELECT ALL ((HEX(0.3943936432525982)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c0) NOTNULL) THEN ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c0) NOTNULL) THEN ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)) END WHERE (HEX(0.3943936432525982));
SELECT SUM(count) FROM (SELECT ALL ((HEX(0.3943936432525982)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c0) NOTNULL) THEN ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CASE vt1.c0  WHEN ((rt0.c0) NOTNULL) THEN ((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)) END WHERE (HEX(0.3943936432525982));
SELECT ALL * FROM v0, vt0, vt1 WHERE ((((vt0.c0, v0.c0, x'')) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (((vt1.c0))<((vt0.c0))), vt1.c0)) AND ((((vt1.c0) IS FALSE), ((((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))AND(0.7426778328559898)))AND(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))) ORDER BY CAST(((v0.c0)%(x'')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, x'')) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (((vt1.c0))<((vt0.c0))), vt1.c0)) AND ((((vt1.c0) IS FALSE), ((((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))AND(0.7426778328559898)))AND(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CAST(((v0.c0)%(x'')) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0, vt0, vt1 WHERE ((((vt0.c0, v0.c0, x'')) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (((vt1.c0))<((vt0.c0))), vt1.c0)) AND ((((vt1.c0) IS FALSE), ((((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))AND(0.7426778328559898)))AND(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))) ORDER BY CAST(((v0.c0)%(x'')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, x'')) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (((vt1.c0))<((vt0.c0))), vt1.c0)) AND ((((vt1.c0) IS FALSE), ((((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))AND(0.7426778328559898)))AND(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CAST(((v0.c0)%(x'')) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0, vt0, vt1 WHERE ((((vt0.c0, v0.c0, x'')) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (((vt1.c0))<((vt0.c0))), vt1.c0)) AND ((((vt1.c0) IS FALSE), ((((((((vt0.c0)AND(v0.c0)))AND(vt1.c0)))AND(0.7426778328559898)))AND(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))) ORDER BY CAST(((v0.c0)%(x'')) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((0X4f66c682) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(CASE vt0.c0  WHEN '1469940729' THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0x4f66c682) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(CASE vt0.c0  WHEN '1469940729' THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((0X4f66c682) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(CASE vt0.c0  WHEN '1469940729' THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0x4f66c682) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(CASE vt0.c0  WHEN '1469940729' THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((0X4f66c682) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)>=(vt0.c0))))) ORDER BY ((((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))AND(CASE vt0.c0  WHEN '1469940729' THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, vt1, rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY ((rt0.c1)>>(rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM v0, vt0, vt1, rt0 ORDER BY ((rt0.c1)>>(rt0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1, rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY ((rt0.c1)>>(rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM v0, vt0, vt1, rt0 ORDER BY ((rt0.c1)>>(rt0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1, rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS TEXT)) ORDER BY ((rt0.c1)>>(rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON CASE (vt1.c0 IN ())  WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN vt0.c0 WHEN CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.23197079185225666 END WHEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END THEN ((vt0.c0) IS FALSE) END FULL OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(((NULL) NOTNULL))) WHERE ((((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE (vt1.c0 IN ())  WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN vt0.c0 WHEN CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.23197079185225666 END WHEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END THEN ((vt0.c0) IS FALSE) END FULL OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(((NULL) NOTNULL))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON CASE (vt1.c0 IN ())  WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN vt0.c0 WHEN CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.23197079185225666 END WHEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END THEN ((vt0.c0) IS FALSE) END FULL OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(((NULL) NOTNULL))) WHERE ((((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt1.c0)) IN (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE (vt1.c0 IN ())  WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) THEN vt0.c0 WHEN CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.23197079185225666 END WHEN CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END THEN ((vt0.c0) IS FALSE) END FULL OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(((NULL) NOTNULL))));
SELECT * FROM vt1, vt0, rt0, v0 WHERE ((((('\rj0-' IN ())))==(((~ (rt0.c0)))))) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LIKELY(vt1.c0))))OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt0.c0) NOT BETWEEN (0Xffffffff97493686) AND (vt0.c0)))))OR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS LAST, CASE WHEN vt0.c0 THEN ((vt1.c0)<(v0.c0)) ELSE 0Xffffffffd5f5f017 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('\rj0-' IN ())))==(((~ (rt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0, v0 ORDER BY ((((((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LIKELY(vt1.c0))))OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt0.c0) NOT BETWEEN (0xffffffff97493686) AND (vt0.c0)))))OR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS LAST, CASE WHEN vt0.c0 THEN ((vt1.c0)<(v0.c0)) ELSE 0xffffffffd5f5f017 END  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, v0 WHERE ((((('\rj0-' IN ())))==(((~ (rt0.c0)))))) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LIKELY(vt1.c0))))OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt0.c0) NOT BETWEEN (0Xffffffff97493686) AND (vt0.c0)))))OR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS LAST, CASE WHEN vt0.c0 THEN ((vt1.c0)<(v0.c0)) ELSE 0Xffffffffd5f5f017 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('\rj0-' IN ())))==(((~ (rt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0, v0 ORDER BY ((((((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LIKELY(vt1.c0))))OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt0.c0) NOT BETWEEN (0xffffffff97493686) AND (vt0.c0)))))OR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS LAST, CASE WHEN vt0.c0 THEN ((vt1.c0)<(v0.c0)) ELSE 0xffffffffd5f5f017 END  NULLS LAST);
SELECT * FROM vt1, vt0, rt0, v0 WHERE ((((('\rj0-' IN ())))==(((~ (rt0.c0)))))) ORDER BY ((((((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(LIKELY(vt1.c0))))OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt0.c0) NOT BETWEEN (0Xffffffff97493686) AND (vt0.c0)))))OR((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))  NULLS LAST, CASE WHEN vt0.c0 THEN ((vt1.c0)<(v0.c0)) ELSE 0Xffffffffd5f5f017 END  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)/(vt0.c0))) NOT BETWEEN (0.19438494485726387) AND (v0.c0))) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0))) NOT BETWEEN (0.19438494485726387) AND (v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)/(vt0.c0))) NOT BETWEEN (0.19438494485726387) AND (v0.c0))) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0))) NOT BETWEEN (0.19438494485726387) AND (v0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)/(vt0.c0))) NOT BETWEEN (0.19438494485726387) AND (v0.c0))) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt1.c0)>>(((rt0.c1)>(vt1.c0)))) FULL OUTER JOIN rt0 ON CAST((NOT (rt0.c2)) AS NUMERIC) FULL OUTER JOIN v0 ON ((((rt0.c2)AND(rt0.c0)))+(CASE WHEN vt0.c0 THEN rt0.c1 END)) WHERE (rt0.c1) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0)>>(((rt0.c1)>(vt1.c0)))) FULL OUTER JOIN rt0 ON CAST((NOT (rt0.c2)) AS NUMERIC) FULL OUTER JOIN v0 ON ((((rt0.c2)AND(rt0.c0)))+(CASE WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY rt0.c0 DESC);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((vt1.c0)>>(((rt0.c1)>(vt1.c0)))) FULL OUTER JOIN rt0 ON CAST((NOT (rt0.c2)) AS NUMERIC) FULL OUTER JOIN v0 ON ((((rt0.c2)AND(rt0.c0)))+(CASE WHEN vt0.c0 THEN rt0.c1 END)) WHERE (rt0.c1) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt1.c0)>>(((rt0.c1)>(vt1.c0)))) FULL OUTER JOIN rt0 ON CAST((NOT (rt0.c2)) AS NUMERIC) FULL OUTER JOIN v0 ON ((((rt0.c2)AND(rt0.c0)))+(CASE WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS INTEGER) ELSE rt0.c0 END WHERE (0X17c0e49f);
SELECT SUM(count) FROM (SELECT ((0X17c0e49f) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS INTEGER) ELSE rt0.c0 END);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS INTEGER) ELSE rt0.c0 END WHERE (0X17c0e49f);
SELECT SUM(count) FROM (SELECT ((0X17c0e49f) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS INTEGER) ELSE rt0.c0 END);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS INTEGER) ELSE rt0.c0 END WHERE (0X17c0e49f);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE NOCASE))) ORDER BY ((((-2.085405076E9)<(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((+ (v0.c0)))) ASC, CAST(((v0.c0)%(v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((-2.085405076E9)<(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((+ (v0.c0)))) ASC, CAST(((v0.c0)%(v0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE NOCASE))) ORDER BY ((((-2.085405076E9)<(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((+ (v0.c0)))) ASC, CAST(((v0.c0)%(v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((((-2.085405076E9)<(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((+ (v0.c0)))) ASC, CAST(((v0.c0)%(v0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (v0.c0 COLLATE NOCASE))) ORDER BY ((((-2.085405076E9)<(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND ((+ (v0.c0)))) ASC, CAST(((v0.c0)%(v0.c0)) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((((((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((v0.c0)==(vt1.c0)))))OR((+ (v0.c0)))))OR(((vt1.c0)&(vt1.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt1.c0)))))OR(((v0.c0)%(vt1.c0)))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((v0.c0)=(vt1.c0)))))OR((+ (v0.c0)))))OR(((vt1.c0)&(vt1.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt1.c0)))))OR(((v0.c0)%(vt1.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((((((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((v0.c0)==(vt1.c0)))))OR((+ (v0.c0)))))OR(((vt1.c0)&(vt1.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt1.c0)))))OR(((v0.c0)%(vt1.c0)))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((v0.c0)=(vt1.c0)))))OR((+ (v0.c0)))))OR(((vt1.c0)&(vt1.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt1.c0)))))OR(((v0.c0)%(vt1.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (((((((((((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((v0.c0)==(vt1.c0)))))OR((+ (v0.c0)))))OR(((vt1.c0)&(vt1.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(vt1.c0)))))OR(((v0.c0)%(vt1.c0)))))OR(vt1.c0)));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)GLOB(v0.c0)) IN ())) ORDER BY COALESCE(DISTINCT (rt0.c0 IN (rt0.c0, rt0.c1)), ((rt0.c1)%(v0.c0)), v0.c0, (((rt0.c2))!=(('WO^v 3M懂B'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(DISTINCT (rt0.c0 IN (rt0.c0, rt0.c1)), ((rt0.c1)%(v0.c0)), v0.c0, (((rt0.c2))!=(('WO^v 3M懂B')))));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)GLOB(v0.c0)) IN ())) ORDER BY COALESCE(DISTINCT (rt0.c0 IN (rt0.c0, rt0.c1)), ((rt0.c1)%(v0.c0)), v0.c0, (((rt0.c2))!=(('WO^v 3M懂B'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)GLOB(v0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY COALESCE(DISTINCT (rt0.c0 IN (rt0.c0, rt0.c1)), ((rt0.c1)%(v0.c0)), v0.c0, (((rt0.c2))!=(('WO^v 3M懂B')))));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c0)GLOB(v0.c0)) IN ())) ORDER BY COALESCE(DISTINCT (rt0.c0 IN (rt0.c0, rt0.c1)), ((rt0.c1)%(v0.c0)), v0.c0, (((rt0.c2))!=(('WO^v 3M懂B'))));
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1061336200')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1061336200')) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1061336200')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1061336200')) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-1061336200')) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END) AND (CAST(rt0.c0 AS TEXT)))) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN LOWER(vt0.c0) THEN CASE WHEN 0.4223571522009373 THEN rt0.c0 ELSE rt0.c0 END ELSE vt0.c0 COLLATE NOCASE END DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((rt0.c0 IN (vt1.c0)))%(CAST('1\㐣bfk<' AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE ((vt0.c0) ISNULL)  WHEN LOWER(vt0.c0) THEN CASE WHEN 0.4223571522009373 THEN rt0.c0 ELSE rt0.c0 END ELSE vt0.c0 COLLATE NOCASE END DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((rt0.c0 IN (vt1.c0)))%(CAST('1\㐣bfk<' AS INTEGER))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END) AND (CAST(rt0.c0 AS TEXT)))) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN LOWER(vt0.c0) THEN CASE WHEN 0.4223571522009373 THEN rt0.c0 ELSE rt0.c0 END ELSE vt0.c0 COLLATE NOCASE END DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((rt0.c0 IN (vt1.c0)))%(CAST('1\㐣bfk<' AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE ((vt0.c0) ISNULL)  WHEN LOWER(vt0.c0) THEN CASE WHEN 0.4223571522009373 THEN rt0.c0 ELSE rt0.c0 END ELSE vt0.c0 COLLATE NOCASE END DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((rt0.c0 IN (vt1.c0)))%(CAST('1\㐣bfk<' AS INTEGER))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt0.c0)+(vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END) AND (CAST(rt0.c0 AS TEXT)))) ORDER BY CASE ((vt0.c0) ISNULL)  WHEN LOWER(vt0.c0) THEN CASE WHEN 0.4223571522009373 THEN rt0.c0 ELSE rt0.c0 END ELSE vt0.c0 COLLATE NOCASE END DESC, (((+ (vt0.c0))) ISNULL)  NULLS LAST, (((rt0.c0 IN (vt1.c0)))%(CAST('1\㐣bfk<' AS INTEGER)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c1) IS FALSE)))) ORDER BY CAST(rt0.c0 AS REAL), (((v0.c0, (rt0.c1 IN ()), UPPER(0xffffffffc2e0be45)))>(((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((0xffffffffe4bc2c08, rt0.c2, rt0.c2))), ((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c0 AS REAL), (((v0.c0, (rt0.c1 IN ()), UPPER(0xffffffffc2e0be45)))>(((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((0Xffffffffe4bc2c08, rt0.c2, rt0.c2))), ((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c1) IS FALSE)))) ORDER BY CAST(rt0.c0 AS REAL), (((v0.c0, (rt0.c1 IN ()), UPPER(0xffffffffc2e0be45)))>(((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((0xffffffffe4bc2c08, rt0.c2, rt0.c2))), ((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c0 AS REAL), (((v0.c0, (rt0.c1 IN ()), UPPER(0xffffffffc2e0be45)))>(((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((0Xffffffffe4bc2c08, rt0.c2, rt0.c2))), ((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c1) IS FALSE)))) ORDER BY CAST(rt0.c0 AS REAL), (((v0.c0, (rt0.c1 IN ()), UPPER(0xffffffffc2e0be45)))>(((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((0xffffffffe4bc2c08, rt0.c2, rt0.c2))), ((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)), (~ (rt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN vt1 ON ((vt1.c0)AND(((vt1.c0)*(v0.c0)))) WHERE ((((NOT (vt1.c0))) NOT NULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN vt1 ON ((vt1.c0)AND(((vt1.c0)*(v0.c0)))) ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN vt1 ON ((vt1.c0)AND(((vt1.c0)*(v0.c0)))) WHERE ((((NOT (vt1.c0))) NOT NULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN vt1 ON ((vt1.c0)AND(((vt1.c0)*(v0.c0)))) ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN vt1 ON ((vt1.c0)AND(((vt1.c0)*(v0.c0)))) WHERE ((((NOT (vt1.c0))) NOT NULL)) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-668285598'))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-668285598')))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-668285598'))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-668285598')))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-668285598'))))));
SELECT COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), CASE vt1.c0  WHEN rt0.c2 THEN 1706556110 END, NULL)) AND ((IFNULL(DISTINCT vt1.c0, rt0.c1), NULLIF(vt1.c0, vt1.c0), ((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), CASE vt1.c0  WHEN rt0.c2 THEN 1706556110 END, NULL)) AND ((IFNULL(DISTINCT vt1.c0, rt0.c1), NULLIF(vt1.c0, vt1.c0), ((v0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0, v0, vt0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), CASE vt1.c0  WHEN rt0.c2 THEN 1706556110 END, NULL)) AND ((IFNULL(DISTINCT vt1.c0, rt0.c1), NULLIF(vt1.c0, vt1.c0), ((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), CASE vt1.c0  WHEN rt0.c2 THEN 1706556110 END, NULL)) AND ((IFNULL(DISTINCT vt1.c0, rt0.c1), NULLIF(vt1.c0, vt1.c0), ((v0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0, v0, vt0, vt1);
SELECT COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((((rt0.c0, rt0.c2, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), CASE vt1.c0  WHEN rt0.c2 THEN 1706556110 END, NULL)) AND ((IFNULL(DISTINCT vt1.c0, rt0.c1), NULLIF(vt1.c0, vt1.c0), ((v0.c0) IS FALSE)))));
SELECT * FROM rt0, vt0, v0, vt1 WHERE (CASE TYPEOF(v0.c0)  WHEN ((vt1.c0)|('')) THEN (('B6s*') NOT NULL) WHEN CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END THEN ((0.46269431645502357)LIKE(v0.c0)) WHEN ((rt0.c0)*('1796740463')) THEN (- (v0.c0)) END) ORDER BY (((('NQ\n')OR(((vt0.c0) IS FALSE))))OR((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(v0.c0)  WHEN ((vt1.c0)|('')) THEN (('B6s*') NOT NULL) WHEN CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END THEN ((0.46269431645502357)LIKE(v0.c0)) WHEN ((rt0.c0)*('1796740463')) THEN (- (v0.c0)) END) IS TRUE)  as count FROM rt0, vt0, v0, vt1 NOT INDEXED ORDER BY (((('NQ\n')OR(((vt0.c0) IS FALSE))))OR((vt0.c0 IN ()))) ASC);
SELECT * FROM rt0, vt0, v0, vt1 WHERE (CASE TYPEOF(v0.c0)  WHEN ((vt1.c0)|('')) THEN (('B6s*') NOT NULL) WHEN CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END THEN ((0.46269431645502357)LIKE(v0.c0)) WHEN ((rt0.c0)*('1796740463')) THEN (- (v0.c0)) END) ORDER BY (((('NQ\n')OR(((vt0.c0) IS FALSE))))OR((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(v0.c0)  WHEN ((vt1.c0)|('')) THEN (('B6s*') NOT NULL) WHEN CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END THEN ((0.46269431645502357)LIKE(v0.c0)) WHEN ((rt0.c0)*('1796740463')) THEN (- (v0.c0)) END) IS TRUE)  as count FROM rt0, vt0, v0, vt1 NOT INDEXED ORDER BY (((('NQ\n')OR(((vt0.c0) IS FALSE))))OR((vt0.c0 IN ()))) ASC);
SELECT * FROM rt0, vt0, v0, vt1 WHERE (CASE TYPEOF(v0.c0)  WHEN ((vt1.c0)|('')) THEN (('B6s*') NOT NULL) WHEN CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END THEN ((0.46269431645502357)LIKE(v0.c0)) WHEN ((rt0.c0)*('1796740463')) THEN (- (v0.c0)) END) ORDER BY (((('NQ\n')OR(((vt0.c0) IS FALSE))))OR((vt0.c0 IN ()))) ASC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (NOT (vt1.c0)) FULL OUTER JOIN vt0 ON (+ ('901025410')) INNER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (vt0.c0 COLLATE BINARY)) WHERE (((((CASE vt1.c0  WHEN rt0.c2 THEN x'' WHEN 0.138820924154469 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)AND(((v0.c0)IS NOT(vt0.c0)))))AND(((0.17428707316126624) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN rt0.c2 THEN x'' WHEN 0.138820924154469 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)AND(((v0.c0)IS NOT(vt0.c0)))))AND(((0.17428707316126624) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (NOT (vt1.c0)) FULL OUTER JOIN vt0 ON (+ ('901025410')) INNER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (NOT (vt1.c0)) FULL OUTER JOIN vt0 ON (+ ('901025410')) INNER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (vt0.c0 COLLATE BINARY)) WHERE (((((CASE vt1.c0  WHEN rt0.c2 THEN x'' WHEN 0.138820924154469 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)AND(((v0.c0)IS NOT(vt0.c0)))))AND(((0.17428707316126624) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN rt0.c2 THEN x'' WHEN 0.138820924154469 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)AND(((v0.c0)IS NOT(vt0.c0)))))AND(((0.17428707316126624) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (NOT (vt1.c0)) FULL OUTER JOIN vt0 ON (+ ('901025410')) INNER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (NOT (vt1.c0)) FULL OUTER JOIN vt0 ON (+ ('901025410')) INNER JOIN v0 ON ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (vt0.c0 COLLATE BINARY)) WHERE (((((CASE vt1.c0  WHEN rt0.c2 THEN x'' WHEN 0.138820924154469 THEN vt1.c0 WHEN v0.c0 THEN rt0.c0 END)AND(((v0.c0)IS NOT(vt0.c0)))))AND(((0.17428707316126624) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (json_object(rt0.c2, rt0.c0))) FULL OUTER JOIN rt0 ON (((+ (rt0.c2))) BETWEEN (((((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c2))) AND (vt0.c0)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (- (json_object(rt0.c2, rt0.c0))) FULL OUTER JOIN rt0 ON (((+ (rt0.c2))) BETWEEN (((((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c2))) AND (vt0.c0)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (- (json_object(rt0.c2, rt0.c0))) FULL OUTER JOIN rt0 ON (((+ (rt0.c2))) BETWEEN (((((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c2))) AND (vt0.c0)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (- (json_object(rt0.c2, rt0.c0))) FULL OUTER JOIN rt0 ON (((+ (rt0.c2))) BETWEEN (((((((((v0.c0)OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c2))) AND (vt0.c0)));
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)<(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS TEXT));
SELECT ALL * FROM v0, vt1, vt0 WHERE (CASE ((vt1.c0)%(v0.c0))  WHEN (NOT (vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND (('-61278901'))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0, v0.c0, '0.4672151071777476'))>=((vt1.c0, vt0.c0, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)%(v0.c0))  WHEN (NOT (vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND (('-61278901'))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0, v0.c0, '0.4672151071777476'))>=((vt1.c0, vt0.c0, v0.c0))) END) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (CASE ((vt1.c0)%(v0.c0))  WHEN (NOT (vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND (('-61278901'))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0, v0.c0, '0.4672151071777476'))>=((vt1.c0, vt0.c0, v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)%(v0.c0))  WHEN (NOT (vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND (('-61278901'))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0, v0.c0, '0.4672151071777476'))>=((vt1.c0, vt0.c0, v0.c0))) END) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (CASE ((vt1.c0)%(v0.c0))  WHEN (NOT (vt1.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND (('-61278901'))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0, v0.c0, '0.4672151071777476'))>=((vt1.c0, vt0.c0, v0.c0))) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON 0xffffffffe3e43e11 WHERE ((- (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON 0Xffffffffe3e43e11);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON 0xffffffffe3e43e11 WHERE ((- (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON 0Xffffffffe3e43e11);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON 0xffffffffe3e43e11 WHERE ((- (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((((((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt1.c0, rt0.c2))))AND(((vt1.c0) ISNULL))))AND(x'')))OR('*e\{u' COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((rt0.c1)<=(rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt1.c0, rt0.c2))))AND(((vt1.c0) ISNULL))))AND(x'')))OR('*e\{u' COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c1)<=(rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((((((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt1.c0, rt0.c2))))AND(((vt1.c0) ISNULL))))AND(x'')))OR('*e\{u' COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((rt0.c1)<=(rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt1.c0, rt0.c2))))AND(((vt1.c0) ISNULL))))AND(x'')))OR('*e\{u' COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c1)<=(rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((((((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, vt1.c0, rt0.c2))))AND(((vt1.c0) ISNULL))))AND(x'')))OR('*e\{u' COLLATE RTRIM)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY ((rt0.c1)<=(rt0.c2)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM vt0, vt1, v0, rt0 WHERE ((((rt0.c0, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), rt0.c1 COLLATE BINARY)) AND ((json_patch(rt0.c0, '3'), (((vt0.c0))!=((rt0.c1))), v0.c0)))) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (((vt1.c0)|(vt0.c0))) AND (COALESCE(vt0.c0, NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), rt0.c1 COLLATE BINARY)) AND ((json_patch(rt0.c0, '3'), (((vt0.c0))<>((rt0.c1))), v0.c0)))) IS TRUE)  as count FROM vt0, vt1, v0, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (((vt1.c0)|(vt0.c0))) AND (COALESCE(vt0.c0, NULL)))  NULLS LAST);
SELECT * FROM vt0, vt1, v0, rt0 WHERE ((((rt0.c0, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), rt0.c1 COLLATE BINARY)) AND ((json_patch(rt0.c0, '3'), (((vt0.c0))!=((rt0.c1))), v0.c0)))) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (((vt1.c0)|(vt0.c0))) AND (COALESCE(vt0.c0, NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), rt0.c1 COLLATE BINARY)) AND ((json_patch(rt0.c0, '3'), (((vt0.c0))<>((rt0.c1))), v0.c0)))) IS TRUE)  as count FROM vt0, vt1, v0, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (((vt1.c0)|(vt0.c0))) AND (COALESCE(vt0.c0, NULL)))  NULLS LAST);
SELECT * FROM vt0, vt1, v0, rt0 WHERE ((((rt0.c0, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c1 AS NUMERIC), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)), rt0.c1 COLLATE BINARY)) AND ((json_patch(rt0.c0, '3'), (((vt0.c0))!=((rt0.c1))), v0.c0)))) ORDER BY ((rt0.c2 COLLATE RTRIM) BETWEEN (((vt1.c0)|(vt0.c0))) AND (COALESCE(vt0.c0, NULL)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(0.5693451964258656))) ORDER BY STRFTIME((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0x74406272, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), '1iI', (vt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(0.5693451964258656))) IS TRUE)  as count FROM vt0 ORDER BY STRFTIME((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0x74406272, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), '1iI', (vt0.c0 IN ())) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(0.5693451964258656))) ORDER BY STRFTIME((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0x74406272, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), '1iI', (vt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(0.5693451964258656))) IS TRUE)  as count FROM vt0 ORDER BY STRFTIME((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0x74406272, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), '1iI', (vt0.c0 IN ())) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(0.5693451964258656))) ORDER BY STRFTIME((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0x74406272, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), '1iI', (vt0.c0 IN ())) DESC;
SELECT * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT ((v0.c0)<<(v0.c0)))) ORDER BY (((NULL)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND (((vt0.c0 IN (' F%D+跶um*', v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((v0.c0)<<(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((NULL)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND (((vt0.c0 IN (' F%D+跶um*', v0.c0))))) ASC);
SELECT * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT ((v0.c0)<<(v0.c0)))) ORDER BY (((NULL)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND (((vt0.c0 IN (' F%D+跶um*', v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((v0.c0)<<(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((NULL)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND (((vt0.c0 IN (' F%D+跶um*', v0.c0))))) ASC);
SELECT * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT ((v0.c0)<<(v0.c0)))) ORDER BY (((NULL)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND (((vt0.c0 IN (' F%D+跶um*', v0.c0))))) ASC;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, CASE v0.c0  WHEN '-500692218' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a344' END)) AND ((CASE 0.950285960827617  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (+ (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, CASE v0.c0  WHEN '-500692218' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a344' END)) AND ((CASE 0.950285960827617  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (+ (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, CASE v0.c0  WHEN '-500692218' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a344' END)) AND ((CASE 0.950285960827617  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (+ (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, CASE v0.c0  WHEN '-500692218' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a344' END)) AND ((CASE 0.950285960827617  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (+ (v0.c0)))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, CASE v0.c0  WHEN '-500692218' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'a344' END)) AND ((CASE 0.950285960827617  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (+ (v0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0, vt1 WHERE (((v0.c0)OR((((vt0.c0))<>((rt0.c2)))))) ORDER BY ((((rt0.c1))<=((vt0.c0))) IN ()), (((((((x'')OR(rt0.c0)))OR(vt0.c0))))=(((rt0.c1 IN ())))) ASC  NULLS FIRST, ((((((vt1.c0)%(rt0.c0)))OR(((v0.c0)>(v0.c0)))))AND(CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR((((vt0.c0))<>((rt0.c2)))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1 ORDER BY ((((rt0.c1))<=((vt0.c0))) IN ()), (((((((x'')OR(rt0.c0)))OR(vt0.c0))))==(((rt0.c1 IN ())))) ASC  NULLS FIRST, ((((((vt1.c0)%(rt0.c0)))OR(((v0.c0)>(v0.c0)))))AND(CAST(vt1.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0, vt1 WHERE (((v0.c0)OR((((vt0.c0))<>((rt0.c2)))))) ORDER BY ((((rt0.c1))<=((vt0.c0))) IN ()), (((((((x'')OR(rt0.c0)))OR(vt0.c0))))=(((rt0.c1 IN ())))) ASC  NULLS FIRST, ((((((vt1.c0)%(rt0.c0)))OR(((v0.c0)>(v0.c0)))))AND(CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR((((vt0.c0))<>((rt0.c2)))))) IS TRUE)  as count FROM v0, vt0, rt0, vt1 ORDER BY ((((rt0.c1))<=((vt0.c0))) IN ()), (((((((x'')OR(rt0.c0)))OR(vt0.c0))))==(((rt0.c1 IN ())))) ASC  NULLS FIRST, ((((((vt1.c0)%(rt0.c0)))OR(((v0.c0)>(v0.c0)))))AND(CAST(vt1.c0 AS BLOB))) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0, vt1 WHERE (((v0.c0)OR((((vt0.c0))<>((rt0.c2)))))) ORDER BY ((((rt0.c1))<=((vt0.c0))) IN ()), (((((((x'')OR(rt0.c0)))OR(vt0.c0))))=(((rt0.c1 IN ())))) ASC  NULLS FIRST, ((((((vt1.c0)%(rt0.c0)))OR(((v0.c0)>(v0.c0)))))AND(CAST(vt1.c0 AS BLOB))) DESC;
SELECT * FROM rt0 NOT INDEXED, vt1 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN ((((vt1.c0)OR(rt0.c0)))OR(0.13047914900756352)) THEN ((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)) END) ORDER BY LTRIM(rt0.c2, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN ((((vt1.c0)OR(rt0.c0)))OR(0.13047914900756352)) THEN ((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY LTRIM(rt0.c2, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL END) DESC);
SELECT * FROM rt0 NOT INDEXED, vt1 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN ((((vt1.c0)OR(rt0.c0)))OR(0.13047914900756352)) THEN ((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)) END) ORDER BY LTRIM(rt0.c2, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN ((((vt1.c0)OR(rt0.c0)))OR(0.13047914900756352)) THEN ((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY LTRIM(rt0.c2, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL END) DESC);
SELECT * FROM rt0 NOT INDEXED, vt1 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN ((((vt1.c0)OR(rt0.c0)))OR(0.13047914900756352)) THEN ((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)) END) ORDER BY LTRIM(rt0.c2, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL END) DESC;
SELECT ALL COUNT(*) FROM rt0, v0, vt1, vt0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt1, vt0 WHERE (v0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt1, vt0 WHERE (v0.c0 COLLATE BINARY);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c2) ISNULL))>>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))>>(rt0.c0))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c2) ISNULL))>>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))>>(rt0.c0))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c2) ISNULL))>>(rt0.c0)));
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(v0.c0 COLLATE RTRIM)))OR((0.9263771597342229 IN ()))))OR(v0.c0)))OR(v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0)!=(CAST(v0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE BINARY)OR(v0.c0 COLLATE RTRIM)))OR((0.9263771597342229 IN ()))))OR(v0.c0)))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<>(CAST(v0.c0 AS NUMERIC))) ASC);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(v0.c0 COLLATE RTRIM)))OR((0.9263771597342229 IN ()))))OR(v0.c0)))OR(v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0)!=(CAST(v0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE BINARY)OR(v0.c0 COLLATE RTRIM)))OR((0.9263771597342229 IN ()))))OR(v0.c0)))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)<>(CAST(v0.c0 AS NUMERIC))) ASC);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(v0.c0 COLLATE RTRIM)))OR((0.9263771597342229 IN ()))))OR(v0.c0)))OR(v0.c0 COLLATE BINARY))) ORDER BY ((v0.c0)!=(CAST(v0.c0 AS NUMERIC))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0, vt1 WHERE (((((rt0.c1)|(rt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) ORDER BY (CAST(vt1.c0 AS REAL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, rt0, vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0, vt1 WHERE (((((rt0.c1)|(rt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) ORDER BY (CAST(vt1.c0 AS REAL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, rt0, vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0, vt1 WHERE (((((rt0.c1)|(rt0.c0)))<<(CAST(vt0.c0 AS INTEGER)))) ORDER BY (CAST(vt1.c0 AS REAL) IN ())  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, v0 WHERE (((CAST(NULL AS TEXT)) NOT NULL)) ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0) ISNULL)))  NULLS FIRST, CASE CAST(NULL AS REAL)  WHEN (((vt0.c0))!=((vt0.c0))) THEN v0.c0 ELSE LIKELY(DISTINCT vt0.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0) ISNULL)))  NULLS FIRST, CASE CAST(NULL AS REAL)  WHEN (((vt0.c0))<>((vt0.c0))) THEN v0.c0 ELSE LIKELY(DISTINCT vt0.c0) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((CAST(NULL AS TEXT)) NOT NULL)) ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0) ISNULL)))  NULLS FIRST, CASE CAST(NULL AS REAL)  WHEN (((vt0.c0))!=((vt0.c0))) THEN v0.c0 ELSE LIKELY(DISTINCT vt0.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0) ISNULL)))  NULLS FIRST, CASE CAST(NULL AS REAL)  WHEN (((vt0.c0))<>((vt0.c0))) THEN v0.c0 ELSE LIKELY(DISTINCT vt0.c0) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((CAST(NULL AS TEXT)) NOT NULL)) ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0) ISNULL)))  NULLS FIRST, CASE CAST(NULL AS REAL)  WHEN (((vt0.c0))!=((vt0.c0))) THEN v0.c0 ELSE LIKELY(DISTINCT vt0.c0) END  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt0, vt1 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0, vt1);
SELECT ALL * FROM vt0, v0, rt0, vt1 WHERE (rt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0, vt1);
SELECT ALL * FROM vt0, v0, rt0, vt1 WHERE (rt0.c1 COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt1 ON (+ ((- (rt0.c2)))) RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN (((rt0.c0)>=(vt0.c0)))) WHERE (((((NOT (rt0.c0))))!=(((((vt1.c0, rt0.c0, v0.c0))>((vt1.c0, rt0.c0, vt1.c0))))))) ORDER BY CAST(((v0.c0) IS TRUE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c0))))!=(((((vt1.c0, rt0.c0, v0.c0))>((vt1.c0, rt0.c0, vt1.c0))))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt1 ON (+ ((- (rt0.c2)))) RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN (((rt0.c0)>=(vt0.c0)))) ORDER BY CAST(((v0.c0) IS TRUE) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt1 ON (+ ((- (rt0.c2)))) RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN (((rt0.c0)>=(vt0.c0)))) WHERE (((((NOT (rt0.c0))))!=(((((vt1.c0, rt0.c0, v0.c0))>((vt1.c0, rt0.c0, vt1.c0))))))) ORDER BY CAST(((v0.c0) IS TRUE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c0))))!=(((((vt1.c0, rt0.c0, v0.c0))>((vt1.c0, rt0.c0, vt1.c0))))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt1 ON (+ ((- (rt0.c2)))) RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN (((rt0.c0)>=(vt0.c0)))) ORDER BY CAST(((v0.c0) IS TRUE) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt1 ON (+ ((- (rt0.c2)))) RIGHT OUTER JOIN vt0 ON (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN (((rt0.c0)>=(vt0.c0)))) WHERE (((((NOT (rt0.c0))))!=(((((vt1.c0, rt0.c0, v0.c0))>((vt1.c0, rt0.c0, vt1.c0))))))) ORDER BY CAST(((v0.c0) IS TRUE) AS INTEGER);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON '778004154' FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) WHERE (((UNLIKELY(v0.c0))|(((rt0.c0)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))|(((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON '778004154' FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON '778004154' FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) WHERE (((UNLIKELY(v0.c0))|(((rt0.c0)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))|(((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON '778004154' FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON '778004154' FULL OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) WHERE (((UNLIKELY(v0.c0))|(((rt0.c0)+(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((('W)')) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) IS FALSE))))) ORDER BY ((rt0.c0) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((((('W)')) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((('W)')) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) IS FALSE))))) ORDER BY ((rt0.c0) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((((('W)')) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((('W)')) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1) IS FALSE))))) ORDER BY ((rt0.c0) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST('' AS NUMERIC)) ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))  NULLS LAST, TIME(x'', v0.c0 COLLATE NOCASE, TOTAL_CHANGES()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))  NULLS LAST, TIME(x'', v0.c0 COLLATE NOCASE, TOTAL_CHANGES()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST('' AS NUMERIC)) ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))  NULLS LAST, TIME(x'', v0.c0 COLLATE NOCASE, TOTAL_CHANGES()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))  NULLS LAST, TIME(x'', v0.c0 COLLATE NOCASE, TOTAL_CHANGES()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST('' AS NUMERIC)) ORDER BY (+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))  NULLS LAST, TIME(x'', v0.c0 COLLATE NOCASE, TOTAL_CHANGES()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN vt1 WHERE (TRIM(v0.c0) COLLATE BINARY) ORDER BY vt1.c0 DESC  NULLS LAST, ((v0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1 ORDER BY vt1.c0 DESC  NULLS LAST, ((v0.c0) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN vt1 WHERE (TRIM(v0.c0) COLLATE BINARY) ORDER BY vt1.c0 DESC  NULLS LAST, ((v0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1 ORDER BY vt1.c0 DESC  NULLS LAST, ((v0.c0) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN vt1 WHERE (TRIM(v0.c0) COLLATE BINARY) ORDER BY vt1.c0 DESC  NULLS LAST, ((v0.c0) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM v0, vt1, rt0 WHERE (((((vt1.c0)OR(((rt0.c2)LIKE(rt0.c1)))))OR(((6406742.0)||(rt0.c0))))) ORDER BY (((rt0.c1, v0.c0, rt0.c1)) BETWEEN ((((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(x'')))OR(rt0.c2)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END, CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)) AND ((TRIM(v0.c0), (((v0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((vt1.c0, v0.c0, rt0.c2))), rt0.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(((rt0.c2)LIKE(rt0.c1)))))OR(((6406742.0)||(rt0.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (((rt0.c1, v0.c0, rt0.c1)) BETWEEN ((((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(x'')))OR(rt0.c2)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END, CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)) AND ((TRIM(v0.c0), (((v0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((vt1.c0, v0.c0, rt0.c2))), rt0.c0 COLLATE RTRIM)))  NULLS FIRST);
SELECT * FROM v0, vt1, rt0 WHERE (((((vt1.c0)OR(((rt0.c2)LIKE(rt0.c1)))))OR(((6406742.0)||(rt0.c0))))) ORDER BY (((rt0.c1, v0.c0, rt0.c1)) BETWEEN ((((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(x'')))OR(rt0.c2)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END, CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)) AND ((TRIM(v0.c0), (((v0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((vt1.c0, v0.c0, rt0.c2))), rt0.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(((rt0.c2)LIKE(rt0.c1)))))OR(((6406742.0)||(rt0.c0))))) IS TRUE)  as count FROM v0, vt1, rt0 ORDER BY (((rt0.c1, v0.c0, rt0.c1)) BETWEEN ((((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(x'')))OR(rt0.c2)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END, CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)) AND ((TRIM(v0.c0), (((v0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((vt1.c0, v0.c0, rt0.c2))), rt0.c0 COLLATE RTRIM)))  NULLS FIRST);
SELECT * FROM v0, vt1, rt0 WHERE (((((vt1.c0)OR(((rt0.c2)LIKE(rt0.c1)))))OR(((6406742.0)||(rt0.c0))))) ORDER BY (((rt0.c1, v0.c0, rt0.c1)) BETWEEN ((((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))OR(x'')))OR(rt0.c2)), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END, CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)) AND ((TRIM(v0.c0), (((v0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, v0.c0, rt0.c0)) AND ((vt1.c0, v0.c0, rt0.c2))), rt0.c0 COLLATE RTRIM)))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT CAST('1407027300' AS BLOB), 0.3724646246326172));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST('1407027300' AS BLOB), 0.3724646246326172)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT CAST('1407027300' AS BLOB), 0.3724646246326172));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST('1407027300' AS BLOB), 0.3724646246326172)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT CAST('1407027300' AS BLOB), 0.3724646246326172));
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))>=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((((('2066548342')OR(v0.c0)))AND(v0.c0)))=((- (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))>=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((('2066548342')OR(v0.c0)))AND(v0.c0)))=((- (v0.c0)))));
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))>=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((((('2066548342')OR(v0.c0)))AND(v0.c0)))=((- (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))>=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((('2066548342')OR(v0.c0)))AND(v0.c0)))=((- (v0.c0)))));
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))>=(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ORDER BY (((((('2066548342')OR(v0.c0)))AND(v0.c0)))=((- (v0.c0))));
SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN x'' ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN x'' ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN x'' ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN x'' ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN x'' ELSE v0.c0 END)));
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT NULL)))) INNER JOIN vt0 ON (('')IS NOT((((rt0.c2))<=((rt0.c0))))) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0)>>(rt0.c2)), COALESCE(DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c0)))<=((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(v0.c0)), CASE WHEN vt0.c0 THEN rt0.c0 END, ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0)>>(rt0.c2)), COALESCE(DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c0)))<=((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(v0.c0)), CASE WHEN vt0.c0 THEN rt0.c0 END, ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT NULL)))) INNER JOIN vt0 ON (('')IS NOT((((rt0.c2))<=((rt0.c0))))));
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT NULL)))) INNER JOIN vt0 ON (('')IS NOT((((rt0.c2))<=((rt0.c0))))) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0)>>(rt0.c2)), COALESCE(DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c0)))<=((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(v0.c0)), CASE WHEN vt0.c0 THEN rt0.c0 END, ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0)>>(rt0.c2)), COALESCE(DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c0)))<=((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(v0.c0)), CASE WHEN vt0.c0 THEN rt0.c0 END, ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT NULL)))) INNER JOIN vt0 ON (('')IS NOT((((rt0.c2))<=((rt0.c0))))));
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN v0 ON (((rt0.c1)) BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT NULL)))) INNER JOIN vt0 ON (('')IS NOT((((rt0.c2))<=((rt0.c0))))) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)), ((v0.c0)>>(rt0.c2)), COALESCE(DISTINCT rt0.c0, rt0.c2, v0.c0, rt0.c0)))<=((((((((((v0.c0)AND(v0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(v0.c0)), CASE WHEN vt0.c0 THEN rt0.c0 END, ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((+ (((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT ALL * FROM v0, vt1 WHERE (((((NULL)AND((~ (v0.c0)))))AND(v0.c0))) ORDER BY ((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))) IN ()), CAST(((v0.c0) IS FALSE) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((~ (v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))) IN ()), CAST(((v0.c0) IS FALSE) AS TEXT));
SELECT ALL * FROM v0, vt1 WHERE (((((NULL)AND((~ (v0.c0)))))AND(v0.c0))) ORDER BY ((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))) IN ()), CAST(((v0.c0) IS FALSE) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((~ (v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))) IN ()), CAST(((v0.c0) IS FALSE) AS TEXT));
SELECT ALL * FROM v0, vt1 WHERE (((((NULL)AND((~ (v0.c0)))))AND(v0.c0))) ORDER BY ((((v0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))) IN ()), CAST(((v0.c0) IS FALSE) AS TEXT);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN (rt0.c2 IN (rt0.c1)) THEN (('胵c')<<(v0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.6628552794636298) THEN LOWER(v0.c0) END) ORDER BY (CAST(v0.c0 AS INTEGER) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN (rt0.c2 IN (rt0.c1)) THEN (('胵c')<<(v0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.6628552794636298) THEN LOWER(v0.c0) END) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (CAST(v0.c0 AS INTEGER) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN (rt0.c2 IN (rt0.c1)) THEN (('胵c')<<(v0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.6628552794636298) THEN LOWER(v0.c0) END) ORDER BY (CAST(v0.c0 AS INTEGER) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN (rt0.c2 IN (rt0.c1)) THEN (('胵c')<<(v0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.6628552794636298) THEN LOWER(v0.c0) END) IS TRUE)  as count FROM rt0, v0, vt1 ORDER BY (CAST(v0.c0 AS INTEGER) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0, v0, vt1 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN rt0.c2 WHEN (rt0.c2 IN (rt0.c1)) THEN (('胵c')<<(v0.c0)) WHEN LIKELIHOOD(rt0.c0, 0.6628552794636298) THEN LOWER(v0.c0) END) ORDER BY (CAST(v0.c0 AS INTEGER) IN ()) ASC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE BINARY)>(((rt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY)>(((rt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE BINARY)>(((rt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY)>(((rt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE BINARY)>(((rt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT * FROM vt1, v0 WHERE ((((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((v0.c0)>(vt1.c0)), ABS(DISTINCT v0.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((0xffffffffe413a14b)AND(vt1.c0)))AND(vt1.c0))))<((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, vt1.c0 COLLATE NOCASE, 0.18499327755739026, CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((v0.c0)>(vt1.c0)), ABS(DISTINCT v0.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((0Xffffffffe413a14b)AND(vt1.c0)))AND(vt1.c0))))<((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, vt1.c0 COLLATE NOCASE, 0.18499327755739026, CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((v0.c0)>(vt1.c0)), ABS(DISTINCT v0.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((0xffffffffe413a14b)AND(vt1.c0)))AND(vt1.c0))))<((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, vt1.c0 COLLATE NOCASE, 0.18499327755739026, CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((v0.c0)>(vt1.c0)), ABS(DISTINCT v0.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((0Xffffffffe413a14b)AND(vt1.c0)))AND(vt1.c0))))<((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, vt1.c0 COLLATE NOCASE, 0.18499327755739026, CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ((((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((v0.c0)>(vt1.c0)), ABS(DISTINCT v0.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((0xffffffffe413a14b)AND(vt1.c0)))AND(vt1.c0))))<((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, vt1.c0 COLLATE NOCASE, 0.18499327755739026, CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((- (((vt1.c0)GLOB('now')))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)GLOB('now'))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((- (((vt1.c0)GLOB('now')))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)GLOB('now'))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((- (((vt1.c0)GLOB('now')))));
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (CAST(CAST(0.48880972641641673 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.48880972641641673 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(CAST(0.48880972641641673 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.48880972641641673 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST(CAST(0.48880972641641673 AS INTEGER) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((((((CAST(v0.c0 AS INTEGER))OR(((0.09984070253162669) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((v0.c0)<(x'56d2')))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(-1.698727825E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS INTEGER))OR(((0.09984070253162669) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((v0.c0)<(x'56d2')))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(-1.698727825E9))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((((((CAST(v0.c0 AS INTEGER))OR(((0.09984070253162669) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((v0.c0)<(x'56d2')))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(-1.698727825E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS INTEGER))OR(((0.09984070253162669) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((v0.c0)<(x'56d2')))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(-1.698727825E9))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (((((((((CAST(v0.c0 AS INTEGER))OR(((0.09984070253162669) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((v0.c0)<(x'56d2')))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(-1.698727825E9)));
SELECT * FROM v0, vt0, vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) ORDER BY ((rt0.c2) ISNULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1, rt0 ORDER BY ((rt0.c2) ISNULL));
SELECT * FROM v0, vt0, vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) ORDER BY ((rt0.c2) ISNULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1, rt0 ORDER BY ((rt0.c2) ISNULL));
SELECT * FROM v0, vt0, vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)))))) ORDER BY ((rt0.c2) ISNULL);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(0.23853481020404488 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(0.23853481020404488 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(0.23853481020404488 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(0.23853481020404488 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(0.23853481020404488 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (NOT (CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS REAL) FULL OUTER JOIN vt1 ON (((rt0.c0))<((rt0.c1))) COLLATE NOCASE COLLATE NOCASE WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))<(((vt0.c0)+(rt0.c2))))) ORDER BY ((((vt0.c0) BETWEEN (x'') AND (vt1.c0)))-(((vt1.c0)!=(vt0.c0)))) DESC, CAST(((rt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))<(((vt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS REAL) FULL OUTER JOIN vt1 ON (((rt0.c0))<((rt0.c1))) COLLATE NOCASE COLLATE NOCASE ORDER BY ((((vt0.c0) BETWEEN (x'') AND (vt1.c0)))-(((vt1.c0)<>(vt0.c0)))) DESC, CAST(((rt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS REAL) FULL OUTER JOIN vt1 ON (((rt0.c0))<((rt0.c1))) COLLATE NOCASE COLLATE NOCASE WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))<(((vt0.c0)+(rt0.c2))))) ORDER BY ((((vt0.c0) BETWEEN (x'') AND (vt1.c0)))-(((vt1.c0)!=(vt0.c0)))) DESC, CAST(((rt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))<(((vt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS REAL) FULL OUTER JOIN vt1 ON (((rt0.c0))<((rt0.c1))) COLLATE NOCASE COLLATE NOCASE ORDER BY ((((vt0.c0) BETWEEN (x'') AND (vt1.c0)))-(((vt1.c0)<>(vt0.c0)))) DESC, CAST(((rt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS REAL) FULL OUTER JOIN vt1 ON (((rt0.c0))<((rt0.c1))) COLLATE NOCASE COLLATE NOCASE WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))<(((vt0.c0)+(rt0.c2))))) ORDER BY ((((vt0.c0) BETWEEN (x'') AND (vt1.c0)))-(((vt1.c0)!=(vt0.c0)))) DESC, CAST(((rt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (x'')) INNER JOIN v0 ON ((CASE WHEN '&5|ID' THEN rt0.c0 ELSE rt0.c1 END)LIKE(CAST(vt0.c0 AS INTEGER))) WHERE ((((((rt0.c2)IS NOT(rt0.c0))))<((''))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)IS NOT(rt0.c0))))<(('')))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (x'')) INNER JOIN v0 ON ((CASE WHEN '&5|ID' THEN rt0.c0 ELSE rt0.c1 END)LIKE(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (x'')) INNER JOIN v0 ON ((CASE WHEN '&5|ID' THEN rt0.c0 ELSE rt0.c1 END)LIKE(CAST(vt0.c0 AS INTEGER))) WHERE ((((((rt0.c2)IS NOT(rt0.c0))))<((''))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)IS NOT(rt0.c0))))<(('')))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (x'')) INNER JOIN v0 ON ((CASE WHEN '&5|ID' THEN rt0.c0 ELSE rt0.c1 END)LIKE(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) BETWEEN ((vt1.c0 IN (rt0.c0))) AND (x'')) INNER JOIN v0 ON ((CASE WHEN '&5|ID' THEN rt0.c0 ELSE rt0.c1 END)LIKE(CAST(vt0.c0 AS INTEGER))) WHERE ((((((rt0.c2)IS NOT(rt0.c0))))<((''))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN NULL THEN rt0.c2 END, CAST(x'' AS BLOB), (- (NULL))))<=((x'', ABS(rt0.c1), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN NULL THEN rt0.c2 END, CAST(x'' AS BLOB), (- (NULL))))<=((x'', ABS(rt0.c1), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN NULL THEN rt0.c2 END, CAST(x'' AS BLOB), (- (NULL))))<=((x'', ABS(rt0.c1), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN NULL THEN rt0.c2 END, CAST(x'' AS BLOB), (- (NULL))))<=((x'', ABS(rt0.c1), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN NULL THEN rt0.c2 END, CAST(x'' AS BLOB), (- (NULL))))<=((x'', ABS(rt0.c1), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1))))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c1 IN ()))<=(NULL))) ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))<=(NULL))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c1 IN ()))<=(NULL))) ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))<=(NULL))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c1 IN ()))<=(NULL))) ORDER BY (((rt0.c0) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY TYPEOF(vt1.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(vt1.c0) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY TYPEOF(vt1.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY TYPEOF(vt1.c0) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY TYPEOF(vt1.c0) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))OR(((v0.c0) IS TRUE)))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST, (NOT (COALESCE(DISTINCT rt0.c2, v0.c0, x'', rt0.c1))) DESC, CASE WHEN ((rt0.c1)&(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST, (NOT (COALESCE(DISTINCT rt0.c2, v0.c0, x'', rt0.c1))) DESC, CASE WHEN ((rt0.c1)&(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))OR(((v0.c0) IS TRUE)))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST, (NOT (COALESCE(DISTINCT rt0.c2, v0.c0, x'', rt0.c1))) DESC, CASE WHEN ((rt0.c1)&(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))OR(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST, (NOT (COALESCE(DISTINCT rt0.c2, v0.c0, x'', rt0.c1))) DESC, CASE WHEN ((rt0.c1)&(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(rt0.c1)))OR(((v0.c0) IS TRUE)))) ORDER BY (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST, (NOT (COALESCE(DISTINCT rt0.c2, v0.c0, x'', rt0.c1))) DESC, CASE WHEN ((rt0.c1)&(v0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((+ (((rt0.c2) ISNULL)))) ORDER BY ((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1))) ISNULL), 0xffffffffa81df5ff  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, v0, vt0, vt1 ORDER BY ((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1))) ISNULL), 0xffffffffa81df5ff  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((+ (((rt0.c2) ISNULL)))) ORDER BY ((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1))) ISNULL), 0xffffffffa81df5ff  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, v0, vt0, vt1 ORDER BY ((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1))) ISNULL), 0xffffffffa81df5ff  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0, vt1 WHERE ((+ (((rt0.c2) ISNULL)))) ORDER BY ((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1))) ISNULL), 0xffffffffa81df5ff  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))LIKE(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) WHERE ((TRIM(0Xffffffffe659cec4) IN (((v0.c0)IS(v0.c0))))) ORDER BY (~ (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((TRIM(0xffffffffe659cec4) IN (((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))LIKE(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) ORDER BY (~ (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))LIKE(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) WHERE ((TRIM(0Xffffffffe659cec4) IN (((v0.c0)IS(v0.c0))))) ORDER BY (~ (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((TRIM(0xffffffffe659cec4) IN (((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))LIKE(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) ORDER BY (~ (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))LIKE(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) WHERE ((TRIM(0Xffffffffe659cec4) IN (((v0.c0)IS(v0.c0))))) ORDER BY (~ (vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0, vt0 RIGHT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE WHERE (-1061336200);
SELECT SUM(count) FROM (SELECT ((-1061336200) IS TRUE)  as count FROM vt1, v0, vt0 RIGHT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 RIGHT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE WHERE (-1061336200);
SELECT SUM(count) FROM (SELECT ((-1061336200) IS TRUE)  as count FROM vt1, v0, vt0 RIGHT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 RIGHT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE WHERE (-1061336200);
SELECT * FROM vt1, vt0, rt0 WHERE ((((rt0.c2)<>(rt0.c0)) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<>(rt0.c0)) IN (vt1.c0))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((((rt0.c2)<>(rt0.c0)) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<>(rt0.c0)) IN (vt1.c0))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((((rt0.c2)<>(rt0.c0)) IN (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON rt0.c0 COLLATE RTRIM CROSS JOIN rt0 ON (~ (((rt0.c1)>=(rt0.c1)))) CROSS JOIN vt1 ON (0.35699376336661126 IN ()) WHERE ((('') NOT NULL)) ORDER BY '1635429187' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON rt0.c0 COLLATE RTRIM CROSS JOIN rt0 ON (~ (((rt0.c1)>=(rt0.c1)))) CROSS JOIN vt1 ON (0.35699376336661126 IN ()) ORDER BY '1635429187' DESC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON rt0.c0 COLLATE RTRIM CROSS JOIN rt0 ON (~ (((rt0.c1)>=(rt0.c1)))) CROSS JOIN vt1 ON (0.35699376336661126 IN ()) WHERE ((('') NOT NULL)) ORDER BY '1635429187' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('') NOT NULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON rt0.c0 COLLATE RTRIM CROSS JOIN rt0 ON (~ (((rt0.c1)>=(rt0.c1)))) CROSS JOIN vt1 ON (0.35699376336661126 IN ()) ORDER BY '1635429187' DESC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON rt0.c0 COLLATE RTRIM CROSS JOIN rt0 ON (~ (((rt0.c1)>=(rt0.c1)))) CROSS JOIN vt1 ON (0.35699376336661126 IN ()) WHERE ((('') NOT NULL)) ORDER BY '1635429187' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE RTRIM IN (rt0.c1 COLLATE BINARY))) ORDER BY ((((((rt0.c2)AND(0.17829698105170666)))OR(NULL)))<<(CASE rt0.c0  WHEN 'xG'',' THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE RTRIM IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(0.17829698105170666)))OR(NULL)))<<(CASE rt0.c0  WHEN 'xG'',' THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE RTRIM IN (rt0.c1 COLLATE BINARY))) ORDER BY ((((((rt0.c2)AND(0.17829698105170666)))OR(NULL)))<<(CASE rt0.c0  WHEN 'xG'',' THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE RTRIM IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(0.17829698105170666)))OR(NULL)))<<(CASE rt0.c0  WHEN 'xG'',' THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE RTRIM IN (rt0.c1 COLLATE BINARY))) ORDER BY ((((((rt0.c2)AND(0.17829698105170666)))OR(NULL)))<<(CASE rt0.c0  WHEN 'xG'',' THEN rt0.c2 END));
SELECT * FROM vt0, v0, rt0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt0, vt1);
SELECT * FROM vt0, v0, rt0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0, rt0, vt1);
SELECT * FROM vt0, v0, rt0, vt1 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((x'') BETWEEN ((+ ('-220720359'))) AND (0.13491622949644133))) ORDER BY ((((x'')AND(rt0.c0)))OR(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((+ ('-220720359'))) AND (0.13491622949644133))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'')AND(rt0.c0)))OR(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((x'') BETWEEN ((+ ('-220720359'))) AND (0.13491622949644133))) ORDER BY ((((x'')AND(rt0.c0)))OR(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((+ ('-220720359'))) AND (0.13491622949644133))) IS TRUE)  as count FROM rt0 ORDER BY ((((x'')AND(rt0.c0)))OR(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((x'') BETWEEN ((+ ('-220720359'))) AND (0.13491622949644133))) ORDER BY ((((x'')AND(rt0.c0)))OR(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CASE 'ON~dn>bq'  WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (CAST(v0.c0 AS INTEGER))) FULL OUTER JOIN v0 ON ((((((v0.c0)AND(v0.c0)))OR(vt1.c0))) NOT NULL) WHERE (((((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0 COLLATE BINARY, ((vt1.c0)IS(v0.c0))))!=((CASE WHEN vt0.c0 THEN v0.c0 END, UNLIKELY(x''), ((v0.c0)<=(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0 COLLATE BINARY, ((vt1.c0)IS(v0.c0))))!=((CASE WHEN vt0.c0 THEN v0.c0 END, UNLIKELY(x''), ((v0.c0)<=(vt1.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE 'ON~dn>bq'  WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (CAST(v0.c0 AS INTEGER))) FULL OUTER JOIN v0 ON ((((((v0.c0)AND(v0.c0)))OR(vt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CASE 'ON~dn>bq'  WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (CAST(v0.c0 AS INTEGER))) FULL OUTER JOIN v0 ON ((((((v0.c0)AND(v0.c0)))OR(vt1.c0))) NOT NULL) WHERE (((((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0 COLLATE BINARY, ((vt1.c0)IS(v0.c0))))!=((CASE WHEN vt0.c0 THEN v0.c0 END, UNLIKELY(x''), ((v0.c0)<=(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), vt1.c0 COLLATE BINARY, ((vt1.c0)IS(v0.c0))))!=((CASE WHEN vt0.c0 THEN v0.c0 END, UNLIKELY(x''), ((v0.c0)<=(vt1.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE 'ON~dn>bq'  WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND (CAST(v0.c0 AS INTEGER))) FULL OUTER JOIN v0 ON ((((((v0.c0)AND(v0.c0)))OR(vt1.c0))) NOT NULL));
SELECT * FROM rt0 WHERE ((((((((0x394e366b, rt0.c2, 0.05799943872748148, rt0.c1, '-1425353796'))>=((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0))))OR(x'')))AND(x'')));
SELECT SUM(count) FROM (SELECT (((((((((0X394e366b, rt0.c2, 0.05799943872748148, rt0.c1, '-1425353796'))>=((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0))))OR(x'')))AND(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((0x394e366b, rt0.c2, 0.05799943872748148, rt0.c1, '-1425353796'))>=((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0))))OR(x'')))AND(x'')));
SELECT SUM(count) FROM (SELECT (((((((((0X394e366b, rt0.c2, 0.05799943872748148, rt0.c1, '-1425353796'))>=((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0))))OR(x'')))AND(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((0x394e366b, rt0.c2, 0.05799943872748148, rt0.c1, '-1425353796'))>=((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0))))OR(x'')))AND(x'')));
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE) ORDER BY ((((rt0.c0)==(rt0.c2))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)=(rt0.c2))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE) ORDER BY ((((rt0.c0)==(rt0.c2))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)=(rt0.c2))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE) ORDER BY ((((rt0.c0)==(rt0.c2))) NOT NULL)  NULLS LAST;
SELECT * FROM rt0, vt1, v0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt1, v0, vt0);
SELECT * FROM rt0, vt1, v0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt1, v0, vt0);
SELECT * FROM rt0, vt1, v0, vt0 WHERE (rt0.c0);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE x'' END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY '' ASC, CASE ((('1038900630', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2)))  WHEN CASE rt0.c0  WHEN x'7e95' THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1)LIKE(rt0.c2)) WHEN '-1730057410' THEN ((rt0.c0)GLOB(rt0.c2)) WHEN ((rt0.c2)-(rt0.c1)) THEN rt0.c1 END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY '' ASC, CASE ((('1038900630', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2)))  WHEN CASE rt0.c0  WHEN x'7e95' THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1)LIKE(rt0.c2)) WHEN '-1730057410' THEN ((rt0.c0)GLOB(rt0.c2)) WHEN ((rt0.c2)-(rt0.c1)) THEN rt0.c1 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY '' ASC, CASE ((('1038900630', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2)))  WHEN CASE rt0.c0  WHEN x'7e95' THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1)LIKE(rt0.c2)) WHEN '-1730057410' THEN ((rt0.c0)GLOB(rt0.c2)) WHEN ((rt0.c2)-(rt0.c1)) THEN rt0.c1 END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY '' ASC, CASE ((('1038900630', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2)))  WHEN CASE rt0.c0  WHEN x'7e95' THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1)LIKE(rt0.c2)) WHEN '-1730057410' THEN ((rt0.c0)GLOB(rt0.c2)) WHEN ((rt0.c2)-(rt0.c1)) THEN rt0.c1 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) ORDER BY '' ASC, CASE ((('1038900630', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2)))  WHEN CASE rt0.c0  WHEN x'7e95' THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c1)LIKE(rt0.c2)) WHEN '-1730057410' THEN ((rt0.c0)GLOB(rt0.c2)) WHEN ((rt0.c2)-(rt0.c1)) THEN rt0.c1 END;
SELECT * FROM rt0, v0 WHERE ((((((v0.c0))<((rt0.c2))))/(rt0.c1 COLLATE NOCASE))) ORDER BY (NOT (((rt0.c1)OR(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((rt0.c2))))/(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (((rt0.c1)OR(rt0.c1)))) DESC);
SELECT * FROM rt0, v0 WHERE ((((((v0.c0))<((rt0.c2))))/(rt0.c1 COLLATE NOCASE))) ORDER BY (NOT (((rt0.c1)OR(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((rt0.c2))))/(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (((rt0.c1)OR(rt0.c1)))) DESC);
SELECT * FROM rt0, v0 WHERE ((((((v0.c0))<((rt0.c2))))/(rt0.c1 COLLATE NOCASE))) ORDER BY (NOT (((rt0.c1)OR(rt0.c1)))) DESC;
SELECT * FROM rt0 INNER JOIN v0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)==(vt0.c0)))==((~ (rt0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.9135590054576636))))) AND ((((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.9135590054576636))))) AND ((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)=(vt0.c0)))=((~ (rt0.c0)))));
SELECT * FROM rt0 INNER JOIN v0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)==(vt0.c0)))==((~ (rt0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.9135590054576636))))) AND ((((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.9135590054576636))))) AND ((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)=(vt0.c0)))=((~ (rt0.c0)))));
SELECT * FROM rt0 INNER JOIN v0 ON rt0.c1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)==(vt0.c0)))==((~ (rt0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((0.9135590054576636))))) AND ((((vt0.c0) IS TRUE)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND ('1578275546')) WHERE (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(1995219492)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ORDER BY (+ ((- (vt0.c0)))) ASC  NULLS FIRST, CASE vt1.c0  WHEN ((vt1.c0)||(vt1.c0)) THEN (vt0.c0 IN (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(1995219492)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND ('1578275546')) ORDER BY (+ ((- (vt0.c0)))) ASC  NULLS FIRST, CASE vt1.c0  WHEN ((vt1.c0)||(vt1.c0)) THEN (vt0.c0 IN (vt1.c0)) END ASC);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND ('1578275546')) WHERE (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(1995219492)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ORDER BY (+ ((- (vt0.c0)))) ASC  NULLS FIRST, CASE vt1.c0  WHEN ((vt1.c0)||(vt1.c0)) THEN (vt0.c0 IN (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(1995219492)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND ('1578275546')) ORDER BY (+ ((- (vt0.c0)))) ASC  NULLS FIRST, CASE vt1.c0  WHEN ((vt1.c0)||(vt1.c0)) THEN (vt0.c0 IN (vt1.c0)) END ASC);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)>>(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND ('1578275546')) WHERE (((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(1995219492)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) ORDER BY (+ ((- (vt0.c0)))) ASC  NULLS FIRST, CASE vt1.c0  WHEN ((vt1.c0)||(vt1.c0)) THEN (vt0.c0 IN (vt1.c0)) END ASC;
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0)) BETWEEN ((x'')) AND (((- (rt0.c0)))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((x'')) AND (((- (rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0)) BETWEEN ((x'')) AND (((- (rt0.c0)))))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((x'')) AND (((- (rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((v0.c0)) BETWEEN ((x'')) AND (((- (rt0.c0)))))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (INSTR(rt0.c2, rt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(rt0.c2, rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (INSTR(rt0.c2, rt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(rt0.c2, rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (INSTR(rt0.c2, rt0.c1) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (('807581318') NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) NOTNULL))) WHERE ((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (rt0.c2)), ((rt0.c1)LIKE(rt0.c2)), ((rt0.c2) NOT NULL))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (rt0.c2)), ((rt0.c1)LIKE(rt0.c2)), ((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (('807581318') NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) NOTNULL))) ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (('807581318') NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) NOTNULL))) WHERE ((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (rt0.c2)), ((rt0.c1)LIKE(rt0.c2)), ((rt0.c2) NOT NULL))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (rt0.c2)), ((rt0.c1)LIKE(rt0.c2)), ((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (('807581318') NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) NOTNULL))) ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (('807581318') NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c2) NOTNULL))) WHERE ((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (rt0.c2)), ((rt0.c1)LIKE(rt0.c2)), ((rt0.c2) NOT NULL))))) ORDER BY rt0.c0 ASC;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (('') IS FALSE) WHERE (((((((((vt0.c0)AND(((vt1.c0)/(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))))AND(0.8685704500425904)))OR(CAST(0.9140827493677401 AS TEXT)))) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))AND((+ (vt1.c0)))))OR((~ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))))OR((vt0.c0 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((vt1.c0)/(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))))AND(0.8685704500425904)))OR(CAST(0.9140827493677401 AS TEXT)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (('') IS FALSE) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))AND((+ (vt1.c0)))))OR((~ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))))OR((vt0.c0 IN (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (('') IS FALSE) WHERE (((((((((vt0.c0)AND(((vt1.c0)/(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))))AND(0.8685704500425904)))OR(CAST(0.9140827493677401 AS TEXT)))) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))AND((+ (vt1.c0)))))OR((~ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))))OR((vt0.c0 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((vt1.c0)/(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))))AND(0.8685704500425904)))OR(CAST(0.9140827493677401 AS TEXT)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (('') IS FALSE) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))AND((+ (vt1.c0)))))OR((~ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))))OR((vt0.c0 IN (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (('') IS FALSE) WHERE (((((((((vt0.c0)AND(((vt1.c0)/(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))))AND(0.8685704500425904)))OR(CAST(0.9140827493677401 AS TEXT)))) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))AND((+ (vt1.c0)))))OR((~ (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))))OR((vt0.c0 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1, v0 INNER JOIN vt0 ON NULLIF((~ (vt0.c0)), (~ (rt0.c0))) WHERE (CASE vt1.c0  WHEN MIN(vt0.c0, v0.c0, v0.c0, vt0.c0) THEN CAST(rt0.c0 AS REAL) END) ORDER BY ((HEX(DISTINCT rt0.c0)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN MIN(vt0.c0, v0.c0, v0.c0, vt0.c0) THEN CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt1, v0 INNER JOIN vt0 ON NULLIF((~ (vt0.c0)), (~ (rt0.c0))) ORDER BY ((HEX(DISTINCT rt0.c0)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, v0 INNER JOIN vt0 ON NULLIF((~ (vt0.c0)), (~ (rt0.c0))) WHERE (CASE vt1.c0  WHEN MIN(vt0.c0, v0.c0, v0.c0, vt0.c0) THEN CAST(rt0.c0 AS REAL) END) ORDER BY ((HEX(DISTINCT rt0.c0)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN MIN(vt0.c0, v0.c0, v0.c0, vt0.c0) THEN CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt1, v0 INNER JOIN vt0 ON NULLIF((~ (vt0.c0)), (~ (rt0.c0))) ORDER BY ((HEX(DISTINCT rt0.c0)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, v0 INNER JOIN vt0 ON NULLIF((~ (vt0.c0)), (~ (rt0.c0))) WHERE (CASE vt1.c0  WHEN MIN(vt0.c0, v0.c0, v0.c0, vt0.c0) THEN CAST(rt0.c0 AS REAL) END) ORDER BY ((HEX(DISTINCT rt0.c0)) IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ()));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON (((v0.c0, '', vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt1.c0) NOT BETWEEN (0.9636327812321578) AND (v0.c0)))) AND ((CAST(NULL AS REAL), (+ (v0.c0)), DATE(v0.c0, v0.c0, vt1.c0)))) WHERE ((+ ('-1401617223')));
SELECT SUM(count) FROM (SELECT (((+ ('-1401617223'))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (((v0.c0, '', vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt1.c0) NOT BETWEEN (0.9636327812321578) AND (v0.c0)))) AND ((CAST(NULL AS REAL), (+ (v0.c0)), DATE(v0.c0, v0.c0, vt1.c0)))));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON (((v0.c0, '', vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt1.c0) NOT BETWEEN (0.9636327812321578) AND (v0.c0)))) AND ((CAST(NULL AS REAL), (+ (v0.c0)), DATE(v0.c0, v0.c0, vt1.c0)))) WHERE ((+ ('-1401617223')));
SELECT SUM(count) FROM (SELECT (((+ ('-1401617223'))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (((v0.c0, '', vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt1.c0) NOT BETWEEN (0.9636327812321578) AND (v0.c0)))) AND ((CAST(NULL AS REAL), (+ (v0.c0)), DATE(v0.c0, v0.c0, vt1.c0)))));
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON (((v0.c0, '', vt1.c0)) NOT BETWEEN (((~ (vt1.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt1.c0) NOT BETWEEN (0.9636327812321578) AND (v0.c0)))) AND ((CAST(NULL AS REAL), (+ (v0.c0)), DATE(v0.c0, v0.c0, vt1.c0)))) WHERE ((+ ('-1401617223')));
SELECT * FROM rt0, vt0 WHERE ((((('743869492')OR(((rt0.c0) ISNULL))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((('743869492')OR(((rt0.c0) ISNULL))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((('743869492')OR(((rt0.c0) ISNULL))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((('743869492')OR(((rt0.c0) ISNULL))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((('743869492')OR(((rt0.c0) ISNULL))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (+ (((rt0.c2)GLOB(rt0.c0)))) FULL OUTER JOIN v0 ON rt0.c0 FULL OUTER JOIN rt0 ON ((NOT (rt0.c2)) IN ()) WHERE ((((((((((vt0.c0 IN ()))OR(((((rt0.c2)AND(rt0.c1)))OR(x'')))))AND(CAST(rt0.c1 AS BLOB))))OR(((((vt1.c0)AND('-408683012')))OR(v0.c0)))))AND(((vt1.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))OR(((((rt0.c2)AND(rt0.c1)))OR(x'')))))AND(CAST(rt0.c1 AS BLOB))))OR(((((vt1.c0)AND('-408683012')))OR(v0.c0)))))AND(((vt1.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (+ (((rt0.c2)GLOB(rt0.c0)))) FULL OUTER JOIN v0 ON rt0.c0 FULL OUTER JOIN rt0 ON ((NOT (rt0.c2)) IN ()));
SELECT * FROM vt1 CROSS JOIN vt0 ON (+ (((rt0.c2)GLOB(rt0.c0)))) FULL OUTER JOIN v0 ON rt0.c0 FULL OUTER JOIN rt0 ON ((NOT (rt0.c2)) IN ()) WHERE ((((((((((vt0.c0 IN ()))OR(((((rt0.c2)AND(rt0.c1)))OR(x'')))))AND(CAST(rt0.c1 AS BLOB))))OR(((((vt1.c0)AND('-408683012')))OR(v0.c0)))))AND(((vt1.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))OR(((((rt0.c2)AND(rt0.c1)))OR(x'')))))AND(CAST(rt0.c1 AS BLOB))))OR(((((vt1.c0)AND('-408683012')))OR(v0.c0)))))AND(((vt1.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (+ (((rt0.c2)GLOB(rt0.c0)))) FULL OUTER JOIN v0 ON rt0.c0 FULL OUTER JOIN rt0 ON ((NOT (rt0.c2)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0)=('-2132074587'))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c0)=('-2132074587')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0)=('-2132074587'))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c0)=('-2132074587')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0)=('-2132074587'))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NULLIF(DISTINCT rt0.c2, vt0.c0) IN ())) ORDER BY (((vt0.c0)OR(rt0.c1)) IN ()) DESC, CASE 0.2183695170746598  WHEN MIN(rt0.c1, rt0.c1, vt1.c0, '2108072169', vt0.c0, rt0.c0) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(NULL)) END;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(DISTINCT rt0.c2, vt0.c0) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((vt0.c0)OR(rt0.c1)) IN ()) DESC, CASE 0.2183695170746598  WHEN MIN(rt0.c1, rt0.c1, vt1.c0, '2108072169', vt0.c0, rt0.c0) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(NULL)) END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NULLIF(DISTINCT rt0.c2, vt0.c0) IN ())) ORDER BY (((vt0.c0)OR(rt0.c1)) IN ()) DESC, CASE 0.2183695170746598  WHEN MIN(rt0.c1, rt0.c1, vt1.c0, '2108072169', vt0.c0, rt0.c0) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(NULL)) END;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(DISTINCT rt0.c2, vt0.c0) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((vt0.c0)OR(rt0.c1)) IN ()) DESC, CASE 0.2183695170746598  WHEN MIN(rt0.c1, rt0.c1, vt1.c0, '2108072169', vt0.c0, rt0.c0) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(NULL)) END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NULLIF(DISTINCT rt0.c2, vt0.c0) IN ())) ORDER BY (((vt0.c0)OR(rt0.c1)) IN ()) DESC, CASE 0.2183695170746598  WHEN MIN(rt0.c1, rt0.c1, vt1.c0, '2108072169', vt0.c0, rt0.c0) THEN ((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(NULL)) END;
SELECT ALL COUNT(*) FROM vt1, vt0, v0, rt0 WHERE (((((vt1.c0)OR(((rt0.c1)IS(vt0.c0)))))AND(CASE NULL  WHEN vt1.c0 THEN rt0.c1 END))) ORDER BY (CASE WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(((rt0.c1)IS(vt0.c0)))))AND(CASE NULL  WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt1, vt0, v0, rt0 ORDER BY (CASE WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, v0, rt0 WHERE (((((vt1.c0)OR(((rt0.c1)IS(vt0.c0)))))AND(CASE NULL  WHEN vt1.c0 THEN rt0.c1 END))) ORDER BY (CASE WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(((rt0.c1)IS(vt0.c0)))))AND(CASE NULL  WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt1, vt0, v0, rt0 ORDER BY (CASE WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, v0, rt0 WHERE (((((vt1.c0)OR(((rt0.c1)IS(vt0.c0)))))AND(CASE NULL  WHEN vt1.c0 THEN rt0.c1 END))) ORDER BY (CASE WHEN v0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC;
SELECT * FROM vt1, vt0, v0 WHERE (((((((vt1.c0)OR(v0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (load_extension(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(v0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (load_extension(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((((((vt1.c0)OR(v0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (load_extension(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(v0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (load_extension(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((((((vt1.c0)OR(v0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (load_extension(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0)))AND(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0)))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0)))AND(((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0)))AND(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0)))AND(((v0.c0) IS FALSE))));
