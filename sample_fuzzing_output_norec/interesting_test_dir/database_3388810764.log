-- Time: 2024/06/09 13:18:01
-- Database: database64
-- Database version: 3.40.0
-- seed value: 3388810764
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INT , c1 INT , c2 TEXT  CHECK ( CAST(c2 AS REAL) COLLATE NOCASE)); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1529869722 sz=1529869722'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=417452371 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '6 679602810 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'817f') NOT NULL))-(((NULL) BETWEEN ('1668373673') AND (-979653699)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')+('kmv/>J')))OR('-979653699' COLLATE RTRIM)))AND(((0.24295869180030016) BETWEEN (0x628227c) AND ('-979653699')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -9.79653699E8; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('1529869722' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN (x'549d', '䲗q')), (~ (0.47859993302359705)), CAST(1887814582 AS BLOB)))>(((('1529869722') IS TRUE), UNLIKELY(NULL), DATETIME(NULL, x'42bf', '')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1668373673'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) IS TRUE))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.3864628403963912)>>('0.47859993302359705')))AND(CAST(1.529869722E9 AS BLOB))))AND(('kmv/>j' IN (x'', 'e')))))AND(((((NULL)AND(x'6283')))OR(1236528277)))))AND('606470354')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1457916728')==(x'701b'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('417452371')>=(0.677754605574365)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=417452371'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))-(((NULL)*(1668373673)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-986907009 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(NULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '0.3864628403963912' WHEN x'' THEN x'' WHEN '' THEN '' ELSE '-594391913' END)GLOB(0Xffffffffc2816c5f)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', ((NULL) ISNULL), ((NULL) NOTNULL)))>=((('ut' IN ()), (('-985062584') NOT BETWEEN (0.677754605574365) AND ('垈D?')), x'' COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=177212316'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('1601985963' AS REAL) IN (LENGTH('-1740277399'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<((x'')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-728889865 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1544583096 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-84209141') NOT BETWEEN ('-84209141') AND (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=2104492647'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))OR(((((((((x'')OR(x'')))AND('-985062584')))OR(x'')))OR('+biXg30')))))OR((('') NOT BETWEEN (NULL) AND (0.3864628403963912)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '252156344 1 sz=1887814582 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('|	U') AND (0xffffffffc52cfe7f)))*((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=836002507 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.47859993302359705) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM((((x'')) NOT BETWEEN ((NULL)) AND (('0.677754605574365')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1640290268 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-1395304568') NOT NULL) THEN (~ ('-979653699')) WHEN ((0.7019412312882063)<(x'71b8')) THEN ((1415582399)%(NULL)) WHEN ((x'7607') NOTNULL) THEN (x'' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=252156344'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=538421201'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 0 sz=-1880320110'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-424383297 sz=-1880320110 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 0 sz=574669257 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1290384054 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-594391913 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2104492647 -1031705505 sz=313800763 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1863339597') NOTNULL)) NOT BETWEEN ((+ (NULL))) AND (RTRIM(0.9159695732985284))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-228754831 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN (-2014161026) AND (9223372036854775807))))<((((((x'')OR(0xffffffff988612f3)))AND(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'839e') NOT BETWEEN ('0.677754605574365') AND (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1544583096 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2027469474 sz=2104492647 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ('e'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length(x'', x'')) NOT BETWEEN ((1e500 IN ('', NULL))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 sz=332380920'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-160410844 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -728889865'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1547632184 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- ('2117256048')), CAST(x'' AS REAL), (('aw') NOT BETWEEN (NULL) AND (x''))))<=((((0.8774288980815295) BETWEEN ('gfFS)Q^') AND (NULL)), (NULL IN ('', '-1576359')), ((0.7019412312882063) NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 583530669'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-675939880'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1547632184 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '4 sz=583530669 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 2104492647 sz=2117256048 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.677754605574365)>=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR('2*V3R}D''')))AND(NULL)))|(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=906190244'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE x'ca38'  WHEN -1e500 THEN 0.2764575485493387 ELSE '-728889865' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1384758415'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1804207394 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(-84209141))) BETWEEN ((('-986907009')=('1236528277'))) AND (((0.5083487280463524)==(x'432c')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '836002507 sz=-1502616731'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-815788582'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('US')OR(0.3925609729152828)))OR(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=569331710 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1640290268'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1712822608)GLOB(NULL)))OR(0.5159829791012778)))AND(CASE NULL  WHEN '-1672548677' THEN 0.3117325480980738 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1640290268'); -- 14ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1655565127 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('d>J')AND(0.3583610175270756)))AND(x'')))AND(0.02624218026851055)))AND('1384758415')))AND(CASE WHEN NULL THEN x'' ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-79010582 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '755726755 sz=42673903'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=538421201 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 0 sz=108791939 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1617749197; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1805959364 1887814582'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (INSTR(NULL, '눿^䯉[f?I') IN (HEX(DISTINCT ')''9\W\c)X'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1679431795 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7177955968411446))=((0X546012bf))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1044052329 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN (x'4b2d') AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1609489419 sz=1874265518 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0xffffffff9e841e11)OR(NULL)))AND((('1290384054') IS TRUE))))OR(CASE 559712174  WHEN '-2082878206' THEN '' WHEN '-835957815' THEN NULL WHEN 'SZP 坾-q+' THEN 0.7177955968411446 ELSE '?	Q	hR7wX' END)))OR((5.74669257E8 IN ('0.02624218026851055', NULL)))))OR(CASE NULL  WHEN '2#bMj+|' THEN NULL END)))AND(json(NULL))))AND((('-1687172801')>=('574669257')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1200905993 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) BETWEEN ((('ut')%('0.3864628403963912'))) AND (((x'') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)) NOT BETWEEN ((975383674)) AND ((x''))), CAST(x'8e1967c7' AS INTEGER), 5.83530669E8))>=(((('') NOT BETWEEN ('-979653699') AND (x'')), (((x''))==(('1720059774'))), ((((x'')AND(NULL)))AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1249747427'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1529603424 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-827586264 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('|Fm*{2v') ISNULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1415582399'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1544583096')<>(x'')) IN ((('0O\r|.%	3d')OR(0.2764575485493387)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1679431795'); -- 6ms;
DELETE FROM sqlite_stat1 WHERE ((((6.06470354E8)+('-815788582'))) BETWEEN (((NULL)IS(NULL))) AND (CASE WHEN '-222389199' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(IFNULL(NULL, '-1777274063'), (('')+(0.7684921609405205)), CAST('' AS NUMERIC), (('51I3%O뚾ᵢ')&(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-158687149 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2*v3r}d''') BETWEEN (x'be31') AND (0.9041212419379264)))>=(CAST('Jbh#|A!*' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffbb961171) BETWEEN ('') AND (NULL)))<>(((0.15508548381044818) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE NULL  WHEN NULL THEN 0.47859993302359705 WHEN 0x36035da4 THEN 0.47360036623264656 WHEN x'' THEN -9.85062584E8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1910049805 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-637287739 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=786317345 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((4.2673903E7 COLLATE NOCASE)LIKE(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'5226'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1233238593 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '108791939 sz=1542076329'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1264704808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('')>=('315834898')))) AND ((((NULL)<=('0.9159695732985284'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC))IS NOT(CAST(-98290146 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1699743064 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-940852728 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '619270983 2 sz=-2088801067 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=1720059774'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6544690119195113)OR(NULL)))/(('' IN ('583530669', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('Jbh#|A!*' AS REAL) THEN ((-827586264)<=('0.15508548381044818')) WHEN (x'' IN (0.7019412312882063)) THEN ((x'83f2') NOT BETWEEN (NULL) AND (x'')) WHEN ((x'') BETWEEN (0x6c75dfd5) AND (-6.7593988E8)) THEN '-9223372036854775808' END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '1595977442 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('kmv/>j')|('yd+'))))==((((0.36567947875826057)>('-98290146'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(LOWER(DISTINCT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=486726715'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-179135226'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-454843449 0 sz=-54771926 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=694130254 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1252559393'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(NULL)))AND((0.5181385488765662 IN (565836097)))))OR(CASE '0.47360036623264656'  WHEN '' THEN x'' WHEN NULL THEN '1542076329' WHEN '-443221127' THEN 0xfffffffff6705324 WHEN '' THEN x'' WHEN 'F(' THEN 0.034241555542727564 WHEN NULL THEN NULL WHEN 'G.' THEN 'D鬤5VY5653401136711506898:-4839413694237668095-1460 -2405464899571078576--4966871894691094102T416950802685402398T>H' END)))AND(CAST('0O\r|.%	3d' AS INTEGER))))OR(((0.43432345142849904) BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT BETWEEN ('985206008') AND (x'4878'))  WHEN CAST('aw' AS INTEGER) THEN ((((0.46710372558312707)AND(x'')))OR(x'12de')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) NOT BETWEEN (((NULL)*(0.24040475796743754))) AND ((~ (0.0387536118079449)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1740277399 COLLATE NOCASE AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -0.0; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'') ISNULL))AND(UPPER(1415582399))))OR(((((NULL)OR(-1245691967)))OR(x'3ec19182')))))AND(((1838742473) NOTNULL))))AND(CASE 0x2881ea7a  WHEN x'' THEN 0.6464403074812836 ELSE NULL END)))AND((~ (NULL)))))OR((((x''))<((0.7578288505106207))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1376526973 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=619270983 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-812798656 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ('-2141110095' IN ()), 0.9443647801671223); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1819664341 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1759751954 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)/('D>J')))>=(CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1880320110 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1655071247'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN UNLIKELY(x'') THEN ((('', 0.0387536118079449, 0Xcdacc7e))>((x'', 1680851065, x''))) ELSE LTRIM(x'4347') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e621') BETWEEN (1801202810) AND (NULL)))*(json_array(0.39174253879034626, x'', 'SZP 坾-q+', x''))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN '|HX' THEN 866603522 END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1777274063'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-940852728 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1388068605 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 172100308 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('-83411136')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove((NULL IN ()), COALESCE(x'', 0x26ad7096)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('GA~?33Hql' AS INTEGER) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1266988802 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-301080390 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8656744952100429) NOT BETWEEN ('D') AND (x'c58d')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'kB>*eOE%'; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'q,[zat4W]'  WHEN '0.24295869180030016' THEN 0.39588588378744605 WHEN 'yd+' THEN 'u/IV江iHfR' WHEN x'' THEN x'4083' END)>=(CASE 'Ge<d狢'  WHEN x'' THEN '-1517696555' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1942552617 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1910049805'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN ((~ ('558952627'))) AND ((NOT (1.874265518E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1.819664341E9 THEN 've*\r\]' END)>=((- (0.9669009314247891)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('n\') NOTNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=627481563 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.6982519263837202))) BETWEEN ((('1236528277')<>('0.43432345142849904'))) AND (CAST(0.021845732365512682 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1863339597 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '975383674 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-985062584 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (0.034241555542727564) AND (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch((NULL IN ()), x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'aa1f')) NOT BETWEEN ((((0.3125459192116897) NOTNULL))) AND ((CAST(NULL AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=963009676 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1502616731 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL))>>(((((x'')OR(0xffffffffb6b414d3)))AND('ዾ^寎ᆵ,O')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 sz=-1635508719 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-436079027 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=17315569 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT ('0.5181385488765662')))OR((((0.14657520887938302, NULL, x'6035'))=((x'', x'', 'F('))))))OR('e')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5906690489343888) BETWEEN (0.09888294012033916) AND ('US')))>>(((NULL) BETWEEN (NULL) AND ('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=556052824 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-273168619 0 sz=-1652014172 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=559712174 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=486726715 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1384758415 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1655565127')>(1.044052329E9)) IN (CASE ''  WHEN '-1289244097' THEN 0.9157783188015348 END, CAST(x'' AS BLOB))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1073558017 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-807532363 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-380932385 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-2082878206 2 sz=-1595314833 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=412366952 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-708868994)LIKE(0.48913706353881736)) THEN CAST(x'' AS BLOB) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('&Q\n') ISNULL)  WHEN CASE WHEN x'' THEN 'L' WHEN x'3705' THEN 'sꕵ{_P' WHEN 0Xffffffff9dc72d92 THEN '-1294690452' END THEN ((0.3864628403963912) IS FALSE) WHEN (((('2125167800')OR(x'')))AND(x'')) THEN CAST(NULL AS INTEGER) WHEN ((((((((x'')AND(0.3140570189364926)))OR(x'be2c')))AND('-90406230')))AND(x'')) THEN '+*7nf' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1303037367 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'0006'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1595977442 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(((0xffffffffe07d26a8) NOT NULL), ((1.264704808E9)IS NOT(1486635564))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1236528277' AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=515764957 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffb9c4952d) IS TRUE))AND(31725175 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-98290146 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-33663270 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1261046499 0 sz=374761327 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -542672321 sz=-1082424082 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT CASE WHEN 0.3261327216274188 THEN 0x5650b1da ELSE x'' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.7061646778047616)AND('kB>*eOE%')))AND(0.8426875879855873)))AND('')))AND(NULL)))AND(x'')))OR(-6.7593988E8)))IS(((NULL) NOT BETWEEN ('811686002') AND ('Z_?ࢃUzዳ7')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1610006105'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.7159472375672893 COLLATE NOCASE  WHEN ((-319735186)|(-1.395304568E9)) THEN x'' COLLATE NOCASE ELSE (((NULL, NULL, 'ꈀ\r7AQC썰<*'))<(('', 'o', NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8821267004864984) NOT BETWEEN (0x7e22b27c) AND ('m젔')), x'acb3' COLLATE RTRIM, (+ ('PK'))))>=(((- (NULL)), (('kB>*eOE%') NOT BETWEEN ('-1154267883') AND (NULL)), ((((((((((((x'1b61')OR(x'12a6')))OR(0.6388954586813523)))OR(-1530312346)))OR(-1e500)))AND('')))AND(0.5813141500212747))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-300000070 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('2104492647' AS INTEGER) THEN ('?{祩39' IN (0X3af72caa, NULL)) ELSE ((x'')AND(1640290268)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1024069787 2 sz=-1612663255 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'c1d81619' COLLATE NOCASE  WHEN ((x'')AND(x'716e')) THEN NULL ELSE ABS(0.422537929877699) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1777274063 574669257 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'264e')||(''))) NOT BETWEEN (('574882972' IN (NULL))) AND (CASE WHEN 0xfffffffffafb120b THEN 0.7177955968411446 WHEN x'a427' THEN '0.6982519263837202' WHEN '0.48913706353881736' THEN '-1857836979' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-845845021 sz=-1525636205 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(TYPEOF(DISTINCT 0xffffffff98acca9c), HEX(DISTINCT '1609489419')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1629985099'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-939830752 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((x'' COLLATE BINARY)) AND (((- (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-127547044 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1181921775 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.6368966300210015) IS TRUE) THEN x'' COLLATE BINARY END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT (0.6263484663763759)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1964343931 1990483699 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X4a7da1e3, NULL, 0.48913706353881736)) BETWEEN ((-1.031705505E9 COLLATE BINARY, ('-79010582' IN ()), (NOT (x'8634f4da')))) AND (((('-827586264')|(0.7694798838988044)), 1.804207394E9 COLLATE NOCASE, HEX(DISTINCT x'fcdcbc79')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=606470354'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1819664341 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-940852728 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-1943077515', '뚾dkG!', NULL))<((NULL, x'90ee42e6', 0.3297998810862186))))AND((('䀡Ce她iJ\n') IS FALSE))))OR(1357064080 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN '1444987650' ELSE 0.47360036623264656 END IN (('Y\r5N)?' IN ('>4U8A[]g7XJ')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(SQLITE_VERSION()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((332380920)!=(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN NULL THEN 1.542076329E9 ELSE '992965923' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1604806508 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '2 sz=486726715 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1164269943 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -1676580356 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1289244097 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-794282161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('1056053759') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2082976432 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT 0xfffffffff2be9c31 COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN (0.05379586345916898)))OR(CASE WHEN 0.24040475796743754 THEN '-815788582' END)))AND(CASE WHEN 0.7402987663502734 THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1088348365 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-217377879 sz=1544583096'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=583530669'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1640290268 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-424258209 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffd9d9e3c1)>>('680708128')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.5930566695786974) BETWEEN (0X492468a5) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0.03709669003693683 AS BLOB)  WHEN ((NULL)>(0xfffffffff68aa053)) THEN ((0.43432345142849904)*(x'')) ELSE (((0.11398123289710249, '-1740277399', x'94285f567721'))>=((x'985b', NULL, ''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1510663518 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'e041')>('K_Rn')))AND(CAST(0Xffffffffe6b46cbf AS NUMERIC))))AND(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-985062584 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=313800763 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1950193692')) NOT BETWEEN ((CAST('4?' AS NUMERIC))) AND (((~ ('1453358583'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'1e52')AND(x'')))OR(NULL)))-((('2019899211')|('-1863339597')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=276149017 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1942471635 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('-158687149'))>(('Y\r5N)?'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELIHOOD(DISTINCT -1e500, 0.8684062808460271)  WHEN ((x'')+(3.13800763E8)) THEN (NULL IN ('L', 0xffffffff92d067b4)) ELSE ((855073414)OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1712822608 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=313800763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1935756010'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd88a' COLLATE BINARY)AND((((x'9d06e312', NULL, x''))<(('>4U8A[]g7XJ', -1863339597, ''))))))AND(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9481516759412943)-(-1547242959)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=843732150 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-1508365448') IS FALSE) THEN (((('-1775052597')AND('좨X#兆')))OR('')) ELSE ((x'8cc0')|(x'f431')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((-431511613)&('~dBJ\&G9{')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=469607258 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('1544583096', 1.679431795E9, '-1901123048', '538421201', '-228754831')) BETWEEN ((4.2673903E7, 0.7402987663502734, 'yLٝya4?%h', NULL, '')) AND ((x'b397fc85', NULL, 0.04445569345607725, 0.35077697006064756, x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(RTRIM(x'') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '945175783 sz=-1781803929 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1819664341 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||('PH')))%(0.4914131284701396 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'97db') NOT BETWEEN ('KK') AND (NULL)))==((1720059774 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=341796082 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1140214081 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1668387666'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1465545351 sz=-1790509189'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=2005649461'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((NULL)/('}|')), NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1499778065')||(x''))))=((((NULL)<('42673903'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME((((x''))<=(('-2043802333'))), ((((((((0.764932820648827)OR(2045041258)))AND(x'')))AND(x'')))AND(x'')), CAST(-986907009 AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-87380559') BETWEEN (0.03609684437453886) AND (x'50a3')))GLOB((- (0.3925609729152828)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2001789037 1316182927 sz=606470354 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('-424383297' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('')+(0.7787810148321235)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=177212316 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1863339597 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=252156344 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-448353873'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1236402548 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1455137271 COLLATE NOCASE)*(CASE 0.4247850739626098  WHEN ']7r/u' THEN NULL ELSE 0x3d1e4c1a END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=763579981 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=583530669 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=2139088054 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT CAST(0.3604104326654325 AS INTEGER), ((0.4033965139931769)IS NOT('華)/I2t(~'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=574669257 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN 0.0948888056775834 WHEN 0.24909530342355513 THEN 0.9415713138150331 WHEN 0.3203244967441208 THEN NULL ELSE NULL END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=478126433 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 2026254602 sz=-477312284 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE NOCASE  WHEN ((x'') NOT BETWEEN ('') AND (NULL)) THEN ((((((((0.682627948479247)AND(0xffffffff9d5214b9)))OR(x'')))AND('')))AND(NULL)) ELSE x'' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-757210169 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.033732395163530215 THEN 0Xffffffffb5f2bb69 END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1525070193 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1513793976'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1595977442 486726715'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0.9040636854817499)))OR('zM7,U䆉&es')))AND((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-611508894 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '975383674 sz=243709147'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' COLLATE BINARY))>((NULL COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN ('0.24295869180030016') AND (0.6464403074812836)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1115468518 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((((''))<((0.29042620533812336)))); -- 15ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1437412818 -444448393 sz=2117256048'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1946739466 sz=-1529603424 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-98290146')) NOT BETWEEN (('-1502616731')) AND ((x'')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.8961747607746657 COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -815788582 363299120 sz=1778019201 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)IS(x'')))OR(((1.529869722E9) NOT NULL))))AND(CAST('2117256048' AS BLOB))))OR(((NULL)!=(x'')))))OR(UPPER(x'b1a7'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.6607015273941929)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((NULL IN (9.75383674E8))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.8426875879855873 AS TEXT))OR(((NULL) IS TRUE))))OR((('')!=('1668373673')))))OR(((0X6815a8d5)<=(x'')))))OR(((0.014920451600087259) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1350885535 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1874265518 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2045875618 sz=640777524 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1926998390'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.5764111079823132)AND('Y\r5N)?')))OR(1.08791939E8)))OR(x'')))AND(x'ec9f')))OR(NULL)))AND(NULL))) BETWEEN (0.1311740832654611) AND (((NULL)>>(0.7662134021304154)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1085179452 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-611508894 COLLATE BINARY) BETWEEN (((((0.9040636854817499)OR(0X71945f3f)))AND('1529869722'))) AND (CAST('' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('-979653699' AS INTEGER))AND(TYPEOF('-594391913'))))OR(((NULL)AND(0.20914822925878052)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1556596730 sz=-22500812 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1672548677'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-222389199 4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((((('C?J+')OR(x'')))OR(x'f151bb1a9a87')), (('-273314887')|('-1141575710'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-707130180 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN x'' WHEN '1903938195' THEN x'3715' WHEN '619270983' THEN x'87e5' WHEN 0.514941550728121 THEN x'' WHEN '1475579025' THEN '3O^.ej' ELSE 0.3140570189364926 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(DATE(0Xffffffffc557acb9, -4.24383297E8, 0X1d02dc3b), CASE WHEN 0xffffffffd111c824 THEN x'' WHEN x'' THEN 0.10947248168188095 WHEN 1668373673 THEN 0.891309399742608 WHEN 0.5181385488765662 THEN 'p,zgfEG' WHEN x'' THEN NULL ELSE 0.3938409489397596 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('3}ꃦUU\rb3' COLLATE RTRIM IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.1220389088086411) NOT BETWEEN (NULL) AND (NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.709710696456853)) NOT BETWEEN ((((x'') BETWEEN (0.890086411830864) AND ('-1289244097')))) AND ((((NULL)%(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)AND('')))AND(NULL)))OR(0.47107272477689066)))AND(NULL))))<((((NULL)&(0.3117325480980738))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ((((0.3726612197450727))>((x'')))) AND ((NOT ('FDX4sXf')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (x'') AND (0.31355242586919774)))>(0xffffffffe67b0aff)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')OR(0xffffffffe6b46cbf)))OR(-158687149)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1617749197 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '574669257 sz=-1420096790'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7646655694742815; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 1425650766 sz=1099063933 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN (+ (x'')) THEN CASE '-827586264'  WHEN NULL THEN NULL ELSE '312805774' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS INTEGER) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=509526775'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=755726755 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((108791939) NOT BETWEEN (NULL) AND (-367948764)))>((((NULL))<=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-319754027'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-127978301 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'e0af' AS NUMERIC))!=(NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-675939880 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')AND('	HF' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(DISTINCT 0.0918539624864727))+((- ('48980116')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 2 sz=1327636145 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1557461057 sz=-1672548677'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1147793039 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) BETWEEN ((x'75d81bca' IN ())) AND (((('1799534284')) BETWEEN (('0.04445569345607725')) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-29898937 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM((~ ('*K'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 284189943; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1271838089 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1739311742 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1469631890 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -1917518609 sz=149370503 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))=((-2096368989))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=583530669'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-227657571')) NOT BETWEEN ((CASE NULL  WHEN 0.568721510688959 THEN x'' WHEN x'' THEN '-2105349384' WHEN '' THEN x'c43e' END)) AND ((((x'bc36')||(0.5286805884588355))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.030565698374357075)AND(x'')))OR((NULL IN ()))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (ABS('') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1544583096 sz=998685353 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 -1962223048 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULLIF(DISTINCT 0Xffffffffcf1791ba, 0x34d252f2) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1044052329 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'')) NOT BETWEEN ((NULL)) AND ((x'9ab6')))  WHEN ((1660707565) NOTNULL) THEN (+ (-2088801067)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((SQLITE_COMPILEOPTION_GET(x''))OR(((NULL) IS TRUE))))AND(((NULL) BETWEEN ('-1093771508') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT '0.35077697006064756'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=42673903'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '6 0 1679431795 sz=538151982'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS BLOB) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1892294065 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT -1294015393)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((- (0.8717794138257239)))AND(x'3efb')))AND(((((NULL)AND(-161297180)))OR(x'')))))OR(((-193883259)IS NOT(692964413)))))OR(((0.48692734180340236)OR('?')))))AND((('4654656') NOTNULL))))AND((((x'', NULL, 0.4852496095409745))>((x'', x'', 0.48085473191277517))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'85dd') BETWEEN (',H됢4Tc*A') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.20914822925878052)))|(((0.8774288980815295) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1126296062 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (x'')) IN ((((NULL))>=((NULL))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1132169236'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.6250625581677108)))GLOB((((NULL, 0.9157783188015348, x'c0cb'))=((1974323189, x'0e10', 0.5813141500212747))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.357032106882344)AND(1.415582399E9)))OR(0xffffffff8973a8fe))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((1.77212316E8 IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-54771926 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(0.9582186444288776))+(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=388929967 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-288375230 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1889328113 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=315822116 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((x'')AND(6.06470354E8)))AND(x'7954')))OR(-1740277399)))OR('0.24040475796743754')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=177212316 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1187944504 0 sz=-940852728 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('-2088801067', 'ok', NULL)) NOT BETWEEN (('0.7694798838988044', 0.8031997730148328, '-1263422773')) AND ((-1.147793039E9, 0.061406875547366346, ''))) THEN ('kB>*eOE%' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1882538633 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-198905886 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1743320849 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-2128459476 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'a93a')<(NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8534529721541608) ISNULL))%('1628631297' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-158687149 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT ('49857449')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2015977136 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1846049558)) BETWEEN (('541795970')) AND ((0.9926606375899775))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(0xffffffffa497e8ab) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1751921781 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-420881995 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('0.677754605574365'))) BETWEEN ((x'' IN (0.03609684437453886, 'kDl1T'))) AND (((NULL) BETWEEN ('0.14657520887938302') AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=538421201'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '103293564 sz=-1110885324 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-1562710032')>=(0.7451417516447252))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=42673903 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(0.6854027065287283))) NOT BETWEEN ((~ (0.4476427890101774))) AND ((- ('-21554107')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '584909913 -821299216 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1642021331 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 -835957815 sz=50754999'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-1529603424'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -881655873 sz=-2014161026 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('G.' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -230702769 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1200905993 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>=('~DBJ\&G9{')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1425640549 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-587175293 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-940852728'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN (NULL) AND ('-1529603424')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((('1384758415') BETWEEN (1.457916728E9) AND (x'3fab'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN '0.7646655694742815' ELSE 1478188996 END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(DISTINCT '0.021845732365512682', 'c?j+') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1888343541 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1595977442 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '733884955 sz=1017720638 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 -1399531235 sz=-835957815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((470547748))<=((0.4016980532861806)))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-34037631 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 730989464 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1036027460'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) ISNULL) IN (((NULL)*('-985062584')), (('U/IV江IHFR')-(0Xffffffffbb4453b9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1283679360 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '115170071 sz=-1378425079'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-798927507 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=583530669 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('fI')OR(0.9995314224572973)))AND(0x606ce4cd)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.3731083353836574 COLLATE BINARY THEN CASE WHEN NULL THEN '' WHEN 0.05054001426836896 THEN '}7' WHEN 1.617749197E9 THEN '' ELSE '1445972395' END ELSE ((0.38166826421833255)AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1354733467 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((x'5b85c2b6' IN ()), ((x'')>>(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.9303340552618835 THEN CAST(NULL AS INTEGER) WHEN ((((NULL)AND('UO\v')))AND(-839267489)) THEN ABS(DISTINCT 0x6ceef471) WHEN ABS(0X6c2e3883) THEN CAST('iK%''6' AS REAL) ELSE ((-2.088801067E9) IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN (0.9149416141133747) AND (1e500)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=185392793 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '406072703 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE NOCASE)AND(CASE WHEN 0.3553058553992897 THEN 2104492647 END)))AND((+ ('unixepoch')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ ('177212316')))AND((('GO') ISNULL))))AND((('1112184220')<=(NULL)))))OR(NULL)))AND(json(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1836295837 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1741397390 COLLATE RTRIM AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-160410844 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=964559877 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0Xffffffffd48e05f7 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('PK'))>=((x''))))*(CASE WHEN 0Xfffffffff093981d THEN 0x4f97bfa1 ELSE 0.6540166662684324 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2.104492647E9)IS NOT(NULL)))>=(((0.529624330752777)>('1044052329')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('Hg0Lr')AND('eꚈ')))OR('-1655717167')))AND('0.47859993302359705')))OR('?m+ei!')))=((~ ('1595977442')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('559712174')>>(x'ce0dde88')))AND(((((']	Tr/攞*텓')OR(NULL)))AND(x'')))))AND('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0.582750957126307 THEN NULL END IN (CAST('' AS REAL), (((((((('264796108')AND(NULL)))AND(x'')))AND(')1Bcu')))OR('U7Oh1Rk')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-195940225' AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1544583096 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-620791352 sz=-208438984 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-696273775 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-261635455 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4143970730526809 COLLATE RTRIM) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '645805020 sz=130663878 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN ((('b_') IS FALSE)) AND (((x'')<=(0Xffffffff843d0b71)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 sz=-1053504921'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-828736059 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1682884906 1385844249 sz=-230655821'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1289244097', 0.03738041153494254, 0.7578288505106207)) NOT BETWEEN ((((-1213236387)>=(0.27170363621700455)), 0.46710372558312707, (+ ('')))) AND ((DATE(x'1bd7', '1813795769', 0.024705009371741027), (0.48004934746698713 IN ()), x'' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2038564924'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('샄' AS REAL))AND(((('1343311297')) BETWEEN ((0Xffffffffa3843348)) AND ((''))))))AND((- (x'6f44')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-728889865 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=907979496 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) BETWEEN ((NOT (0.28852417291506205))) AND (CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1223717169'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT BETWEEN ('-498533495') AND (x'e223'))  WHEN ((((NULL)AND(NULL)))OR(NULL)) THEN (('1146546496')>=(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS NUMERIC))AND(((x'')OR(0Xf0799b8)))))AND(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1751938613'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', '282840047', 0.802499209279682)) NOT BETWEEN ((x'5c61', '坾W{\nr', '0.1311740832654611')) AND (('-828063916', '6}', 'ꮽ<'))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0X78391e98, NULL, NULL)) BETWEEN (('ᦘ{E', 0.607534771640896, 0x6c75dfd5)) AND ((x'6f4a', 0x1, x'b8fa')))  WHEN json_array_length(0.5461932339588161, NULL) THEN ('gfFS)Q^' IN ()) WHEN ((-1.289244097E9) ISNULL) THEN (- ('1966284048')) WHEN LIKELIHOOD(x'', 0.4936052344591706) THEN ((NULL)OR('')) ELSE CAST('1521151719' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 'N\r7' THEN 0.6577806753349481 END)AND((('') NOT BETWEEN (NULL) AND ('')))))AND(CASE WHEN ')1Bcu' THEN '694130254' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1215998816 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=583530669 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))IS((((('-222389199')OR(0.56935626622268)))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN (((('177212316')OR(x'')))OR(0.4535365282447926)) WHEN (((('-1740277399')OR(NULL)))AND(-1549169853)) THEN ((((((((0.51060569938151)AND('Z')))AND('')))OR(x'')))AND('-1459349908')) WHEN ((NULL) NOT BETWEEN (x'') AND (0xffffffffdf377675)) THEN (NULL IN ()) WHEN ((0.3293195391761843)>=(NULL)) THEN NULL WHEN 0.3043636226799137 COLLATE BINARY THEN ((NULL)IS('3W')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 4 sz=1222147046 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')*('430133474'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0x6fb705ae) ISNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-34224158 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-125104046'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9040636854817499 AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-454843449'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1687172801 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.709710696456853)))<((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 1 THEN 619270983 ELSE NULL END)%(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-735386379 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1804207394'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('906190244'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1754975673 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1601985963 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2032219227 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.46581075572886743)*('mH5笾')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('C\n', 'aeq\r\]', NULL)) NOT BETWEEN ((CASE 786317345  WHEN NULL THEN 0xfffffffff25d7a71 ELSE '>糸B' END, (+ (NULL)), 767533639 COLLATE RTRIM)) AND (((((((((('sGXV3gq?)')AND(NULL)))OR('K>')))OR('')))OR(NULL)), LIKELY(NULL), ((((0.656961077756621)OR(-179135226)))OR(x''))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('j[Ku4') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X2e9afbd7 COLLATE BINARY)AND((('#L')|(NULL)))))AND((('1640290268') BETWEEN (0.3411715049078635) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.19752375173387005 COLLATE RTRIM COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT json_quote(0.9036504407967326)); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 589408394);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=748605514,2');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 5); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-2113972334'), ('0.5181385488765662'), (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('', -1177066421, x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', x'', NULL), (x'', '-748199618', 0xffffffffce2c4bc9), (x'', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (-1817120707); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR ABORT INTO vt1(c1, c0) VALUES (x'', '929592531'); -- 0ms;
UPDATE t0 SET (c1)=(NULL) WHERE ((((t0.c2)GLOB(t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c1) IS FALSE))); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE vt1 SET (c0)=(NULL) WHERE (((vt1.c1)) BETWEEN ((((vt1.c1) IS TRUE))) AND ((vt1.c1))); -- 0ms;
ANALYZE; -- 4ms;
CREATE INDEX i61 ON t1((((NOT (c0))) NOT BETWEEN ((+ (x'28f9'))) AND ((c1 IN ()))) COLLATE NOCASE DESC,(((NOT (c0)))AND(((c0) NOT BETWEEN (c0) AND (c2)))) COLLATE BINARY DESC,NULL DESC) WHERE (~ ((c1 IN ()))); -- 0ms;
ANALYZE; -- 0ms;
CREATE INDEX IF NOT EXISTS i56 ON t1(((((((((((c0)OR(c0)))AND(c0)))AND(c2)))OR(c2)))>=(((c2)>('-1880320110')))) ASC,((LOWER(c1)) IS FALSE) ASC,((CASE WHEN c0 THEN c0 WHEN c0 THEN c1 WHEN c1 THEN c2 WHEN c2 THEN c1 WHEN c2 THEN c1 ELSE c1 END) IS FALSE) ASC); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES ('-594391913'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.6658087756510517) WHERE '935832946'; -- 16ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ALTER TABLE t1 ADD COLUMN c62 BLOB; -- 0ms;
CREATE INDEX i23 ON t1(((((c2)IS(c62)))&(x'')) COLLATE NOCASE,(NOT (CASE WHEN c0 THEN c1 ELSE c62 END)),c2,x'' COLLATE NOCASE); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '12938'); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.7696919736390325); -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t1 BEGIN DELETE FROM t1 WHERE ((t1.c1 COLLATE NOCASE) NOT NULL);END; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0, c0)=('Q\rឌ\i', x'd855') WHERE ((vt1.c1 IN ()) IN ((NOT (vt1.c0)), ((vt1.c1)&(vt1.c0)))); -- 1ms;
INSERT OR IGNORE INTO t1(c62, c0, c2) VALUES ('*-', '', NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '61501'); -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES (1617749197); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO t1(c62, c1, c0, c2) VALUES (NULL, '', 0.3007338782691741, '146383926'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c1) VALUES ('C?J+'); -- 0ms;
DELETE FROM vt1; -- 4ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt1 SET c1=x''; -- 1ms;
INSERT OR FAIL INTO t1(c2, c1, c0) VALUES (0.3887170938563903, NULL, 0X6cdc545e), (0.35459541148065776, 0.1668530731897625, NULL), ('583530669', NULL, 5.59712174E8); -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i89 ON t1(((((c0)AND(c0))) ISNULL) DESC,(((c0))<>((((c2) NOTNULL)))) COLLATE BINARY,-2036274282 COLLATE BINARY,(((c1) NOT NULL) IN ())); -- 0ms;
CREATE UNIQUE INDEX i37 ON t1(json_patch(c0, c2) COLLATE BINARY COLLATE RTRIM,(((((c0)GLOB(c2))))<=((CASE WHEN c0 THEN c62 ELSE c1 END))),c0 COLLATE BINARY ASC,NULL ASC) WHERE (((((NULL)IS NOT(c0))))<((((NULL)-(c62))))); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=NULL WHERE ((((((((-0.0)OR((+ ('L5')))))OR((- (vt1.c0)))))OR(((vt1.c0)OR(vt1.c0)))))AND(((vt1.c0)-(vt1.c0)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1224607757); -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x''), ('-160410844'), (NULL), ('-1880320110'), (NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c62, c0) VALUES (x'', 1.264704808E9, '-924184023'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 333357790); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x''), (0.033732395163530215), (NULL); -- 0ms;
UPDATE vt1 SET c0=0.0387536118079449, c1=NULL, c0='-630815795'; -- 4ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c62, c62)=(0.9159695732985284, '2027469474') WHERE NULLIF(((t0.c1)=(t0.c2)), CAST(t0.c62 AS INTEGER)); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c50 INT; -- 1ms;
COMMIT TRANSACTION; -- 1ms;
UPDATE OR REPLACE vt1 SET c1='', c1='}8.y', c1=x'' WHERE ((((vt1.c1)IS(vt1.c0)))*((vt1.c1 IN ()))); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2026058808')-(0.5689010676263129)))GLOB((('-966675148') IS FALSE))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2, c0) VALUES ('-713385296', 0.15470958301059878, 0.9903673292014156); -- 1ms;
UPDATE OR IGNORE rt0 SET c2='㍽0', c1='61C)2q', c2=x'4884' WHERE ((rt0.c1)+(rt0.c1)); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1799473291); -- 0ms;
UPDATE rt0 SET (c2)=(NULL); -- 0ms;
REINDEX i61; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (NULL, x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (1485144904, '-2076782507'), ('2041900706', '-1316681581'), ('0.7159472375672893', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (0.8301640237443924), ('-827586264'), (x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 1ms;
ALTER TABLE t0 RENAME COLUMN c50 TO c13; -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
END; -- 0ms;
UPDATE OR FAIL rt0 SET c2=0.20914822925878052 WHERE ((- (rt0.c1)) IN ()); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c2) VALUES (NULL, 0.5896254809805325, NULL), ('', -635447808, 'TWBu0I,]'), (TRIM(DISTINCT CAST(0xf0799b8 AS INTEGER)), x'', NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0) VALUES ('', NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'421c' WHERE CASE WHEN NULLIF(DISTINCT rt0.c2, rt0.c2) THEN CAST(rt0.c2 AS INTEGER) WHEN (((rt0.c2, 'HQ**7gP', rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))) THEN ((0.8727313133949468) IS TRUE) WHEN rt0.c1 COLLATE BINARY THEN (rt0.c2 IN ()) ELSE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE TEMP TABLE t66 (c0 TEXT PRIMARY KEY UNIQUE CHECK ( ((x'fbe8') IS FALSE)) NOT NULL , c1 INT , c2 INT ) WITHOUT ROWID; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('332380920') WHERE ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)IS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '44278'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1852983827); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0.20131928573473112); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '17381'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 0ms;
DROP TABLE t0; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t66 RENAME TO t0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 4); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-986907009 noskipscan'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0x7d700267, 0.8225140188540937), (0.709298285841938, x''), (x'', '-1200905993'), (0.23092585829792334, x''), (0.026633054102985665, NULL), (NULL, 0.3938409489397596), (0.5157591127624537, x'18ea701c'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('-637287739'); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (x'06ec', 'rTz數䮢cN'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (2027469474, x'e2e2cde4', -1576359); -- 0ms;
INSERT OR REPLACE INTO t1(c2) VALUES (-1.740277399E9); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL), (''), ('-1502616731'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x'39a5'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (x'2f1f', NULL), (x'dd22', x'a540'), (NULL, 0.7085095328007983); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
UPDATE OR IGNORE t1 SET (c2)=(NULL) WHERE ((~ (t1.c2)) IN ()); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))<>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))!=(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))<>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))!=(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))<>(vt1.c0)));
SELECT COUNT(*) FROM vt0, rt0, t1, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT COUNT(*) FROM vt0, rt0, t1, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT COUNT(*) FROM vt0, rt0, t1, vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((- (((rt0.c2)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((- (((rt0.c2)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((- (((rt0.c2)|(rt0.c0)))));
SELECT * FROM t1 WHERE (((TYPEOF(DISTINCT t1.c2))!=(((((t1.c0)OR(t1.c1)))OR(t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT t1.c2))!=(((((t1.c0)OR(t1.c1)))OR(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((TYPEOF(DISTINCT t1.c2))!=(((((t1.c0)OR(t1.c1)))OR(t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT t1.c2))!=(((((t1.c0)OR(t1.c1)))OR(t1.c2))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((TYPEOF(DISTINCT t1.c2))!=(((((t1.c0)OR(t1.c1)))OR(t1.c2)))));
SELECT ALL * FROM vt0, t1, vt1, rt0 WHERE (((UPPER(vt1.c1)) BETWEEN ((+ (vt0.c1))) AND (((rt0.c2)OR(vt1.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 END)-(CASE WHEN t1.c1 THEN NULL ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((UPPER(vt1.c1)) BETWEEN ((+ (vt0.c1))) AND (((rt0.c2)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 END)-(CASE WHEN t1.c1 THEN NULL ELSE rt0.c1 END)));
SELECT ALL * FROM vt0, t1, vt1, rt0 WHERE (((UPPER(vt1.c1)) BETWEEN ((+ (vt0.c1))) AND (((rt0.c2)OR(vt1.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 END)-(CASE WHEN t1.c1 THEN NULL ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((UPPER(vt1.c1)) BETWEEN ((+ (vt0.c1))) AND (((rt0.c2)OR(vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 END)-(CASE WHEN t1.c1 THEN NULL ELSE rt0.c1 END)));
SELECT ALL * FROM vt0, t1, vt1, rt0 WHERE (((UPPER(vt1.c1)) BETWEEN ((+ (vt0.c1))) AND (((rt0.c2)OR(vt1.c0))))) ORDER BY ((CASE WHEN t1.c1 THEN t1.c0 END)-(CASE WHEN t1.c1 THEN NULL ELSE rt0.c1 END));
SELECT COUNT(*) FROM rt0, vt1, vt0, t1 WHERE (((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1, vt0, t1);
SELECT COUNT(*) FROM rt0, vt1, vt0, t1 WHERE (((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1, vt0, t1);
SELECT COUNT(*) FROM rt0, vt1, vt0, t1 WHERE (((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0))) ISNULL));
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c1, vt0.c1, vt1.c0))!=((vt0.c0, vt1.c1, vt1.c1)))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, vt0.c1, vt1.c0))!=((vt0.c0, vt1.c1, vt1.c1)))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c1, vt0.c1, vt1.c0))!=((vt0.c0, vt1.c1, vt1.c1)))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, vt0.c1, vt1.c0))!=((vt0.c0, vt1.c1, vt1.c1)))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c1, vt0.c1, vt1.c0))!=((vt0.c0, vt1.c1, vt1.c1)))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) DESC;
SELECT ALL * FROM vt1 WHERE (((~ (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((~ (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((~ (vt1.c1)) IN ()));
SELECT * FROM vt1, vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1)||('5'))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1)||('5')))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1)||('5'))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1)||('5')))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))) AND ((((rt0.c1)||('5'))))));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'cf0e' ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'cf0e' ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'cf0e' ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'cf0e' ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE vt0.c0  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN x'cf0e' ELSE CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN (((vt1.c1))>=((vt1.c0))) THEN DATETIME(x'1f2f', vt1.c1, vt1.c0) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)>(vt1.c1)) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS NUMERIC)  WHEN (((vt1.c1))>=((vt1.c0))) THEN DATETIME(x'1f2f', vt1.c1, vt1.c0) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)>(vt1.c1)) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN (((vt1.c1))>=((vt1.c0))) THEN DATETIME(x'1f2f', vt1.c1, vt1.c0) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)>(vt1.c1)) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS NUMERIC)  WHEN (((vt1.c1))>=((vt1.c0))) THEN DATETIME(x'1f2f', vt1.c1, vt1.c0) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)>(vt1.c1)) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN (((vt1.c1))>=((vt1.c0))) THEN DATETIME(x'1f2f', vt1.c1, vt1.c0) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)>(vt1.c1)) WHEN ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) END);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)AND('1474956827')), ((vt0.c0) NOTNULL))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0)AND('1474956827')), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY '' DESC);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)AND('1474956827')), ((vt0.c0) NOTNULL))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0)AND('1474956827')), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY '' DESC);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)AND('1474956827')), ((vt0.c0) NOTNULL))) ORDER BY '' DESC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)>(vt1.c1)))OR(COALESCE(vt1.c0, vt1.c0))))AND(LIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)>(vt1.c1)))OR(COALESCE(vt1.c0, vt1.c0))))AND(LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)>(vt1.c1)))OR(COALESCE(vt1.c0, vt1.c0))))AND(LIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)>(vt1.c1)))OR(COALESCE(vt1.c0, vt1.c0))))AND(LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)>(vt1.c1)))OR(COALESCE(vt1.c0, vt1.c0))))AND(LIKELY(vt1.c0))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((vt0.c1, vt1.c0, vt1.c1))>((vt0.c1, rt0.c0, rt0.c1))))+((rt0.c1 IN (vt1.c0))))) ORDER BY (~ (((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt1.c0, vt1.c1))>((vt0.c1, rt0.c0, rt0.c1))))+((rt0.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (~ (((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((vt0.c1, vt1.c0, vt1.c1))>((vt0.c1, rt0.c0, rt0.c1))))+((rt0.c1 IN (vt1.c0))))) ORDER BY (~ (((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt1.c0, vt1.c1))>((vt0.c1, rt0.c0, rt0.c1))))+((rt0.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (~ (((vt1.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((((vt0.c1, vt1.c0, vt1.c1))>((vt0.c1, rt0.c0, rt0.c1))))+((rt0.c1 IN (vt1.c0))))) ORDER BY (~ (((vt1.c0) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((0.06909246269763192)) BETWEEN ((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c0)))) AND ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.06909246269763192)) BETWEEN ((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c0)))) AND ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((0.06909246269763192)) BETWEEN ((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c0)))) AND ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.06909246269763192)) BETWEEN ((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c0)))) AND ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((0.06909246269763192)) BETWEEN ((((((((((t1.c0)AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c0)))) AND ((((((t1.c0)OR(t1.c1)))AND(t1.c0)))))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c0)) END  NULLS FIRST;
SELECT * FROM rt0, vt0, vt1 WHERE (CASE WHEN CASE rt0.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN rt0.c1 END THEN vt1.c1 COLLATE RTRIM ELSE (rt0.c1 IN ()) END) ORDER BY ((((((NULL)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 END) AND ((- (vt1.c0)))) ASC  NULLS LAST, CAST((NOT (rt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN rt0.c1 END THEN vt1.c1 COLLATE RTRIM ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((((NULL)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 END) AND ((- (vt1.c0)))) ASC  NULLS LAST, CAST((NOT (rt0.c0)) AS INTEGER));
SELECT * FROM rt0, vt0, vt1 WHERE (CASE WHEN CASE rt0.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN rt0.c1 END THEN vt1.c1 COLLATE RTRIM ELSE (rt0.c1 IN ()) END) ORDER BY ((((((NULL)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 END) AND ((- (vt1.c0)))) ASC  NULLS LAST, CAST((NOT (rt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN rt0.c1 END THEN vt1.c1 COLLATE RTRIM ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((((NULL)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 END) AND ((- (vt1.c0)))) ASC  NULLS LAST, CAST((NOT (rt0.c0)) AS INTEGER));
SELECT * FROM rt0, vt0, vt1 WHERE (CASE WHEN CASE rt0.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN rt0.c1 END THEN vt1.c1 COLLATE RTRIM ELSE (rt0.c1 IN ()) END) ORDER BY ((((((NULL)OR(vt1.c0)))OR(vt1.c1))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 END) AND ((- (vt1.c0)))) ASC  NULLS LAST, CAST((NOT (rt0.c0)) AS INTEGER);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST, CAST(CAST(rt0.c1 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST, CAST(CAST(rt0.c1 AS REAL) AS INTEGER));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST, CAST(CAST(rt0.c1 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST, CAST(CAST(rt0.c1 AS REAL) AS INTEGER));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST, CAST(CAST(rt0.c1 AS REAL) AS INTEGER);
SELECT ALL * FROM vt0 WHERE (0Xfffffffff3d07fb3);
SELECT SUM(count) FROM (SELECT ((0xfffffffff3d07fb3) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0Xfffffffff3d07fb3);
SELECT SUM(count) FROM (SELECT ((0xfffffffff3d07fb3) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0Xfffffffff3d07fb3);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((((CAST(vt1.c0 AS TEXT))AND(((NULL) ISNULL))))AND(((((((((t1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))AND(((NULL) ISNULL))))AND(((((((((t1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((((CAST(vt1.c0 AS TEXT))AND(((NULL) ISNULL))))AND(((((((((t1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))AND(((NULL) ISNULL))))AND(((((((((t1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((((CAST(vt1.c0 AS TEXT))AND(((NULL) ISNULL))))AND(((((((((t1.c2)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT ALL * FROM rt0, vt0, t1 WHERE (vt0.c0) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c0)+(t1.c2))) AND (((x'') ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c0)+(t1.c2))) AND (((x'') ISNULL))));
SELECT ALL * FROM rt0, vt0, t1 WHERE (vt0.c0) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c0)+(t1.c2))) AND (((x'') ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c0)+(t1.c2))) AND (((x'') ISNULL))));
SELECT ALL * FROM rt0, vt0, t1 WHERE (vt0.c0) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c0)+(t1.c2))) AND (((x'') ISNULL)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (CAST('1819664341' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('1819664341' AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST('1819664341' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('1819664341' AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST('1819664341' AS NUMERIC));
SELECT * FROM rt0, t1, vt0 WHERE (LOWER(DISTINCT ((rt0.c0)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c0)>=(rt0.c0)))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE (LOWER(DISTINCT ((rt0.c0)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((rt0.c0)>=(rt0.c0)))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE (LOWER(DISTINCT ((rt0.c0)>=(rt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(((vt1.c0) IS FALSE))))AND((+ (x''))))) ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(((vt1.c0) IS FALSE))))AND((+ (x''))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(((vt1.c0) IS FALSE))))AND((+ (x''))))) ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(((vt1.c0) IS FALSE))))AND((+ (x''))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))AND(((vt1.c0) IS FALSE))))AND((+ (x''))))) ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<<(vt1.c0)))+((+ (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c1))) ORDER BY (('-160410844') BETWEEN (HEX(vt1.c1)) AND (CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY (('-160410844') BETWEEN (HEX(vt1.c1)) AND (CAST(vt1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c1))) ORDER BY (('-160410844') BETWEEN (HEX(vt1.c1)) AND (CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY (('-160410844') BETWEEN (HEX(vt1.c1)) AND (CAST(vt1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c1))) ORDER BY (('-160410844') BETWEEN (HEX(vt1.c1)) AND (CAST(vt1.c0 AS INTEGER)));
SELECT * FROM rt0, vt1, vt0, t1 WHERE ('\^Y#㴅#*') ORDER BY CASE (((t1.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, rt0.c1)))  WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.4247850739626098')) ELSE ((vt1.c1) IS FALSE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('\^Y#㴅#*') IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY CASE (((t1.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, rt0.c1)))  WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.4247850739626098')) ELSE ((vt1.c1) IS FALSE) END ASC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0, t1 WHERE ('\^Y#㴅#*') ORDER BY CASE (((t1.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, rt0.c1)))  WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.4247850739626098')) ELSE ((vt1.c1) IS FALSE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('\^Y#㴅#*') IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY CASE (((t1.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, rt0.c1)))  WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.4247850739626098')) ELSE ((vt1.c1) IS FALSE) END ASC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0, t1 WHERE ('\^Y#㴅#*') ORDER BY CASE (((t1.c1, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c0, rt0.c1)))  WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.4247850739626098')) ELSE ((vt1.c1) IS FALSE) END ASC  NULLS LAST;
SELECT ALL * FROM rt0, t1 WHERE (((((((((t1.c2)AND(rt0.c2)))OR(t1.c2)))AND(NULL)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t1.c2)AND(rt0.c2)))OR(t1.c2)))AND(NULL)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((((((t1.c2)AND(rt0.c2)))OR(t1.c2)))AND(NULL)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t1.c2)AND(rt0.c2)))OR(t1.c2)))AND(NULL)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((((((t1.c2)AND(rt0.c2)))OR(t1.c2)))AND(NULL)))AND(rt0.c1)) COLLATE RTRIM);
SELECT * FROM rt0, vt1, vt0, t1 WHERE ((((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))=(((vt1.c0 IN (vt1.c1)))))) ORDER BY (((t1.c1) NOTNULL) IN (NULL, CASE vt1.c0  WHEN vt1.c1 THEN NULL END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))==(((vt1.c0 IN (vt1.c1)))))) IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY (((t1.c1) NOTNULL) IN (NULL, CASE vt1.c0  WHEN vt1.c1 THEN NULL END)) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0, t1 WHERE ((((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))=(((vt1.c0 IN (vt1.c1)))))) ORDER BY (((t1.c1) NOTNULL) IN (NULL, CASE vt1.c0  WHEN vt1.c1 THEN NULL END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))==(((vt1.c0 IN (vt1.c1)))))) IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY (((t1.c1) NOTNULL) IN (NULL, CASE vt1.c0  WHEN vt1.c1 THEN NULL END)) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0, t1 WHERE ((((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))=(((vt1.c0 IN (vt1.c1)))))) ORDER BY (((t1.c1) NOTNULL) IN (NULL, CASE vt1.c0  WHEN vt1.c1 THEN NULL END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0)<<(t1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(t1.c1))) NOTNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0)<<(t1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(t1.c1))) NOTNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((vt0.c0)<<(t1.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ('1042800418');
SELECT SUM(count) FROM (SELECT ALL (('1042800418') IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ('1042800418');
SELECT SUM(count) FROM (SELECT ALL (('1042800418') IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ('1042800418');
SELECT COUNT(*) FROM t1, rt0, vt1 WHERE ((- ((- (0.25513818136669486))))) ORDER BY CAST(((rt0.c2)IS NOT(x'')) AS REAL)  NULLS LAST, ((((((t1.c1) IS TRUE))AND(((t1.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)))))OR(((t1.c2)OR(vt1.c1)))) ASC, (+ (CAST('559712174' AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (0.25513818136669486))))) IS TRUE)  as count FROM t1, rt0, vt1 ORDER BY CAST(((rt0.c2)IS NOT(x'')) AS REAL)  NULLS LAST, ((((((t1.c1) IS TRUE))AND(((t1.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)))))OR(((t1.c2)OR(vt1.c1)))) ASC, (+ (CAST('559712174' AS TEXT))) DESC);
SELECT COUNT(*) FROM t1, rt0, vt1 WHERE ((- ((- (0.25513818136669486))))) ORDER BY CAST(((rt0.c2)IS NOT(x'')) AS REAL)  NULLS LAST, ((((((t1.c1) IS TRUE))AND(((t1.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)))))OR(((t1.c2)OR(vt1.c1)))) ASC, (+ (CAST('559712174' AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (0.25513818136669486))))) IS TRUE)  as count FROM t1, rt0, vt1 ORDER BY CAST(((rt0.c2)IS NOT(x'')) AS REAL)  NULLS LAST, ((((((t1.c1) IS TRUE))AND(((t1.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)))))OR(((t1.c2)OR(vt1.c1)))) ASC, (+ (CAST('559712174' AS TEXT))) DESC);
SELECT COUNT(*) FROM t1, rt0, vt1 WHERE ((- ((- (0.25513818136669486))))) ORDER BY CAST(((rt0.c2)IS NOT(x'')) AS REAL)  NULLS LAST, ((((((t1.c1) IS TRUE))AND(((t1.c1) NOT BETWEEN (t1.c2) AND (rt0.c0)))))OR(((t1.c2)OR(vt1.c1)))) ASC, (+ (CAST('559712174' AS TEXT))) DESC;
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE (rt0.c1) ORDER BY LIKELY((~ (t1.c0))), CASE t1.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN (+ (rt0.c1)) END ASC  NULLS FIRST, CAST(IFNULL(t1.c1, x'') AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY LIKELY((~ (t1.c0))), CASE t1.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN (+ (rt0.c1)) END ASC  NULLS FIRST, CAST(IFNULL(t1.c1, x'') AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE (rt0.c1) ORDER BY LIKELY((~ (t1.c0))), CASE t1.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN (+ (rt0.c1)) END ASC  NULLS FIRST, CAST(IFNULL(t1.c1, x'') AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY LIKELY((~ (t1.c0))), CASE t1.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN (+ (rt0.c1)) END ASC  NULLS FIRST, CAST(IFNULL(t1.c1, x'') AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE (rt0.c1) ORDER BY LIKELY((~ (t1.c0))), CASE t1.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE NOCASE THEN (+ (rt0.c1)) END ASC  NULLS FIRST, CAST(IFNULL(t1.c1, x'') AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM t1, vt0, vt1, rt0 WHERE (TRIM(DISTINCT rt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM t1, vt0, vt1, rt0);
SELECT * FROM t1, vt0, vt1, rt0 WHERE (TRIM(DISTINCT rt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM t1, vt0, vt1, rt0);
SELECT * FROM t1, vt0, vt1, rt0 WHERE (TRIM(DISTINCT rt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER)));
SELECT * FROM t1 CROSS JOIN rt0 ON (NOT (((rt0.c1)GLOB(t1.c1)))) WHERE ((- (t1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (NOT (((rt0.c1)GLOB(t1.c1)))));
SELECT * FROM t1 CROSS JOIN rt0 ON (NOT (((rt0.c1)GLOB(t1.c1)))) WHERE ((- (t1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (NOT (((rt0.c1)GLOB(t1.c1)))));
SELECT * FROM t1 CROSS JOIN rt0 ON (NOT (((rt0.c1)GLOB(t1.c1)))) WHERE ((- (t1.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (t1.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0))<=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0))<=((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0))<=((vt0.c0))) IN ()));
SELECT * FROM vt0, vt1, t1, rt0 WHERE (CASE (((vt0.c0))>((vt0.c0)))  WHEN LOWER(vt0.c0) THEN CASE 0.09314206696847382  WHEN rt0.c0 THEN NULL ELSE t1.c1 END ELSE t1.c0 COLLATE BINARY END) ORDER BY IFNULL(((rt0.c1)-(vt0.c0)), UPPER(rt0.c2)) ASC  NULLS LAST, (((t1.c2)*(rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))>((vt0.c0)))  WHEN LOWER(vt0.c0) THEN CASE 0.09314206696847382  WHEN rt0.c0 THEN NULL ELSE t1.c1 END ELSE t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1, t1, rt0 ORDER BY IFNULL(((rt0.c1)-(vt0.c0)), UPPER(rt0.c2)) ASC  NULLS LAST, (((t1.c2)*(rt0.c2)) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t1, rt0 WHERE (CASE (((vt0.c0))>((vt0.c0)))  WHEN LOWER(vt0.c0) THEN CASE 0.09314206696847382  WHEN rt0.c0 THEN NULL ELSE t1.c1 END ELSE t1.c0 COLLATE BINARY END) ORDER BY IFNULL(((rt0.c1)-(vt0.c0)), UPPER(rt0.c2)) ASC  NULLS LAST, (((t1.c2)*(rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))>((vt0.c0)))  WHEN LOWER(vt0.c0) THEN CASE 0.09314206696847382  WHEN rt0.c0 THEN NULL ELSE t1.c1 END ELSE t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1, t1, rt0 ORDER BY IFNULL(((rt0.c1)-(vt0.c0)), UPPER(rt0.c2)) ASC  NULLS LAST, (((t1.c2)*(rt0.c2)) IN ()) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t1, rt0 WHERE (CASE (((vt0.c0))>((vt0.c0)))  WHEN LOWER(vt0.c0) THEN CASE 0.09314206696847382  WHEN rt0.c0 THEN NULL ELSE t1.c1 END ELSE t1.c0 COLLATE BINARY END) ORDER BY IFNULL(((rt0.c1)-(vt0.c0)), UPPER(rt0.c2)) ASC  NULLS LAST, (((t1.c2)*(rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t1, vt0, vt1 WHERE ('') ORDER BY (((+ (rt0.c0)))>>(((t1.c2)|(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, t1, vt0, vt1 ORDER BY (((+ (rt0.c0)))>>(((t1.c2)|(NULL))))  NULLS LAST);
SELECT ALL * FROM rt0, t1, vt0, vt1 WHERE ('') ORDER BY (((+ (rt0.c0)))>>(((t1.c2)|(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, t1, vt0, vt1 ORDER BY (((+ (rt0.c0)))>>(((t1.c2)|(NULL))))  NULLS LAST);
SELECT ALL * FROM rt0, t1, vt0, vt1 WHERE ('') ORDER BY (((+ (rt0.c0)))>>(((t1.c2)|(NULL))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST('3W' AS BLOB))||(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c0))))) ORDER BY NULL ASC  NULLS LAST, ((rt0.c2 COLLATE RTRIM)&(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST('3W' AS BLOB))||(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC  NULLS LAST, ((rt0.c2 COLLATE RTRIM)&(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST('3W' AS BLOB))||(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c0))))) ORDER BY NULL ASC  NULLS LAST, ((rt0.c2 COLLATE RTRIM)&(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST('3W' AS BLOB))||(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC  NULLS LAST, ((rt0.c2 COLLATE RTRIM)&(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST('3W' AS BLOB))||(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c0))))) ORDER BY NULL ASC  NULLS LAST, ((rt0.c2 COLLATE RTRIM)&(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((~ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((~ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((~ (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((~ (vt0.c1))) AND (((vt0.c1)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ((~ (vt0.c1))) AND (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((~ (vt0.c1))) AND (((vt0.c1)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) BETWEEN ((~ (vt0.c1))) AND (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN ((~ (vt0.c1))) AND (((vt0.c1)>=(vt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((0xffffffffd93e15f6 IN ()));
SELECT SUM(count) FROM (SELECT (((0xffffffffd93e15f6 IN ())) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((0xffffffffd93e15f6 IN ()));
SELECT SUM(count) FROM (SELECT (((0xffffffffd93e15f6 IN ())) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((0xffffffffd93e15f6 IN ()));
SELECT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))AND(t1.c2)))OR(t1.c2)))OR(t1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((t1.c1)OR(t1.c1)))AND(t1.c2)))OR(t1.c2)))OR(t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))AND(t1.c2)))OR(t1.c2)))OR(t1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((t1.c1)OR(t1.c1)))AND(t1.c2)))OR(t1.c2)))OR(t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))AND(t1.c2)))OR(t1.c2)))OR(t1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) IS TRUE)) BETWEEN (((((((((t1.c1)OR(t1.c2)))AND('5*e')))AND(t1.c2)))AND(t1.c0))) AND (JULIANDAY(t1.c2, t1.c2, 'GO')))) ORDER BY ((LOWER(DISTINCT t1.c1)) BETWEEN (CAST(t1.c0 AS TEXT)) AND ((~ (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS TRUE)) BETWEEN (((((((((t1.c1)OR(t1.c2)))AND('5*e')))AND(t1.c2)))AND(t1.c0))) AND (JULIANDAY(t1.c2, t1.c2, 'GO')))) IS TRUE)  as count FROM t1 ORDER BY ((LOWER(DISTINCT t1.c1)) BETWEEN (CAST(t1.c0 AS TEXT)) AND ((~ (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) IS TRUE)) BETWEEN (((((((((t1.c1)OR(t1.c2)))AND('5*e')))AND(t1.c2)))AND(t1.c0))) AND (JULIANDAY(t1.c2, t1.c2, 'GO')))) ORDER BY ((LOWER(DISTINCT t1.c1)) BETWEEN (CAST(t1.c0 AS TEXT)) AND ((~ (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS TRUE)) BETWEEN (((((((((t1.c1)OR(t1.c2)))AND('5*e')))AND(t1.c2)))AND(t1.c0))) AND (JULIANDAY(t1.c2, t1.c2, 'GO')))) IS TRUE)  as count FROM t1 ORDER BY ((LOWER(DISTINCT t1.c1)) BETWEEN (CAST(t1.c0 AS TEXT)) AND ((~ (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c1) IS TRUE)) BETWEEN (((((((((t1.c1)OR(t1.c2)))AND('5*e')))AND(t1.c2)))AND(t1.c0))) AND (JULIANDAY(t1.c2, t1.c2, 'GO')))) ORDER BY ((LOWER(DISTINCT t1.c1)) BETWEEN (CAST(t1.c0 AS TEXT)) AND ((~ (t1.c0))));
SELECT * FROM rt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))!=((rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS INTEGER)))!=((rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))!=((rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS INTEGER)))!=((rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c1 AS INTEGER)))!=((rt0.c0))));
SELECT * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c1))) ISNULL) WHERE ((NOT (((t1.c2)GLOB(vt0.c1))))) ORDER BY ((((t1.c2)) BETWEEN ((t1.c0)) AND ((0.44388720054215003))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c2)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c1))) ISNULL) ORDER BY ((((t1.c2)) BETWEEN ((t1.c0)) AND ((0.44388720054215003))) IN ()));
SELECT * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c1))) ISNULL) WHERE ((NOT (((t1.c2)GLOB(vt0.c1))))) ORDER BY ((((t1.c2)) BETWEEN ((t1.c0)) AND ((0.44388720054215003))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c2)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c1))) ISNULL) ORDER BY ((((t1.c2)) BETWEEN ((t1.c0)) AND ((0.44388720054215003))) IN ()));
SELECT * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON t1.c0 RIGHT OUTER JOIN rt0 ON (((NOT (t1.c1))) ISNULL) WHERE ((NOT (((t1.c2)GLOB(vt0.c1))))) ORDER BY ((((t1.c2)) BETWEEN ((t1.c0)) AND ((0.44388720054215003))) IN ());
SELECT * FROM t1, vt0, rt0, vt1 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TYPEOF(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TYPEOF(rt0.c2))))) IS TRUE)  as count FROM t1, vt0, rt0, vt1);
SELECT * FROM t1, vt0, rt0, vt1 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TYPEOF(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TYPEOF(rt0.c2))))) IS TRUE)  as count FROM t1, vt0, rt0, vt1);
SELECT * FROM t1, vt0, rt0, vt1 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((TYPEOF(rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1) NOT NULL)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt0 WHERE (((((vt0.c1)IS NOT(t1.c2)))+((t1.c1 IN (x'19d8')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(t1.c2)))+((t1.c1 IN (x'19d8'))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt0 WHERE (((((vt0.c1)IS NOT(t1.c2)))+((t1.c1 IN (x'19d8')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(t1.c2)))+((t1.c1 IN (x'19d8'))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt0 WHERE (((((vt0.c1)IS NOT(t1.c2)))+((t1.c1 IN (x'19d8')))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c2 LEFT OUTER JOIN vt1 ON CASE t1.c0  WHEN vt1.c1 THEN rt0.c1 END COLLATE BINARY WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 ELSE (((vt1.c0)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))) END) ORDER BY (((vt0.c0, rt0.c2, vt1.c1)) NOT BETWEEN ((((t1.c0)+(t1.c2)), ((x'f07c') ISNULL), ((rt0.c0) NOTNULL))) AND (((rt0.c2 IN ()), t1.c1, ((t1.c2)<<(x'a722'))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 ELSE (((vt1.c0)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))) END) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c2 LEFT OUTER JOIN vt1 ON CASE t1.c0  WHEN vt1.c1 THEN rt0.c1 END COLLATE BINARY ORDER BY (((vt0.c0, rt0.c2, vt1.c1)) NOT BETWEEN ((((t1.c0)+(t1.c2)), ((x'f07c') ISNULL), ((rt0.c0) NOTNULL))) AND (((rt0.c2 IN ()), t1.c1, ((t1.c2)<<(x'a722'))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c2 LEFT OUTER JOIN vt1 ON CASE t1.c0  WHEN vt1.c1 THEN rt0.c1 END COLLATE BINARY WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 ELSE (((vt1.c0)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))) END) ORDER BY (((vt0.c0, rt0.c2, vt1.c1)) NOT BETWEEN ((((t1.c0)+(t1.c2)), ((x'f07c') ISNULL), ((rt0.c0) NOTNULL))) AND (((rt0.c2 IN ()), t1.c1, ((t1.c2)<<(x'a722'))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 ELSE (((vt1.c0)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))) END) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c2 LEFT OUTER JOIN vt1 ON CASE t1.c0  WHEN vt1.c1 THEN rt0.c1 END COLLATE BINARY ORDER BY (((vt0.c0, rt0.c2, vt1.c1)) NOT BETWEEN ((((t1.c0)+(t1.c2)), ((x'f07c') ISNULL), ((rt0.c0) NOTNULL))) AND (((rt0.c2 IN ()), t1.c1, ((t1.c2)<<(x'a722'))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t1 ON t1.c2 LEFT OUTER JOIN vt1 ON CASE t1.c0  WHEN vt1.c1 THEN rt0.c1 END COLLATE BINARY WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN rt0.c0 ELSE (((vt1.c0)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))) END) ORDER BY (((vt0.c0, rt0.c2, vt1.c1)) NOT BETWEEN ((((t1.c0)+(t1.c2)), ((x'f07c') ISNULL), ((rt0.c0) NOTNULL))) AND (((rt0.c2 IN ()), t1.c1, ((t1.c2)<<(x'a722'))))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt1 WHERE ((~ ((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c1)))))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE ((~ ((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c1)))))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE ((~ ((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c1))))));
SELECT COUNT(*) FROM t1, vt1, rt0, vt0 WHERE ((NOT (CASE vt1.c1  WHEN t1.c2 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c1  WHEN t1.c2 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM t1, vt1, rt0, vt0);
SELECT COUNT(*) FROM t1, vt1, rt0, vt0 WHERE ((NOT (CASE vt1.c1  WHEN t1.c2 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c1  WHEN t1.c2 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM t1, vt1, rt0, vt0);
SELECT COUNT(*) FROM t1, vt1, rt0, vt0 WHERE ((NOT (CASE vt1.c1  WHEN t1.c2 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE (highlight((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c1) ISNULL), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((highlight((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c1) ISNULL), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1 WHERE (highlight((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c1) ISNULL), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((highlight((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c1) ISNULL), CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END, CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, rt0, t1 WHERE (((('now')) BETWEEN ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((vt1.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((('now')) BETWEEN ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT ALL COUNT(*) FROM vt1, rt0, t1 WHERE (((('now')) BETWEEN ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((vt1.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ((((('now')) BETWEEN ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT ALL COUNT(*) FROM vt1, rt0, t1 WHERE (((('now')) BETWEEN ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((vt1.c1 COLLATE RTRIM))));
SELECT ALL * FROM rt0, vt1 WHERE ('-1307096728');
SELECT SUM(count) FROM (SELECT ALL (('-1307096728') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ('-1307096728');
SELECT SUM(count) FROM (SELECT ALL (('-1307096728') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ('-1307096728');
SELECT * FROM vt1, vt0, t1, rt0 WHERE ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CAST('1668015522' AS NUMERIC), t1.c1))) ORDER BY TYPEOF(DISTINCT (t1.c1 IN ())) DESC  NULLS LAST, ((NULL)+(((rt0.c1) IS FALSE))) DESC, CAST(((vt1.c0)%(t1.c2)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CAST('1668015522' AS NUMERIC), t1.c1))) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY TYPEOF(DISTINCT (t1.c1 IN ())) DESC  NULLS LAST, ((NULL)+(((rt0.c1) IS FALSE))) DESC, CAST(((vt1.c0)%(t1.c2)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, t1, rt0 WHERE ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CAST('1668015522' AS NUMERIC), t1.c1))) ORDER BY TYPEOF(DISTINCT (t1.c1 IN ())) DESC  NULLS LAST, ((NULL)+(((rt0.c1) IS FALSE))) DESC, CAST(((vt1.c0)%(t1.c2)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CAST('1668015522' AS NUMERIC), t1.c1))) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY TYPEOF(DISTINCT (t1.c1 IN ())) DESC  NULLS LAST, ((NULL)+(((rt0.c1) IS FALSE))) DESC, CAST(((vt1.c0)%(t1.c2)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0, t1, rt0 WHERE ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CAST('1668015522' AS NUMERIC), t1.c1))) ORDER BY TYPEOF(DISTINCT (t1.c1 IN ())) DESC  NULLS LAST, ((NULL)+(((rt0.c1) IS FALSE))) DESC, CAST(((vt1.c0)%(t1.c2)) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt0, t1 WHERE ((((((t1.c2))>=((vt0.c1))))OR(((vt1.c1)<(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2))>=((vt0.c1))))OR(((vt1.c1)<(t1.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0, t1);
SELECT COUNT(*) FROM vt0, vt1, rt0, t1 WHERE ((((((t1.c2))>=((vt0.c1))))OR(((vt1.c1)<(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2))>=((vt0.c1))))OR(((vt1.c1)<(t1.c2))))) IS TRUE)  as count FROM vt0, vt1, rt0, t1);
SELECT COUNT(*) FROM vt0, vt1, rt0, t1 WHERE ((((((t1.c2))>=((vt0.c1))))OR(((vt1.c1)<(t1.c2)))));
SELECT ALL * FROM t1, rt0, vt0, vt1 WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))<>((0.0387536118079449)))) ORDER BY (NOT (NULL COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))!=((0.0387536118079449)))) IS TRUE)  as count FROM t1, rt0, vt0, vt1 ORDER BY (NOT (NULL COLLATE NOCASE)));
SELECT ALL * FROM t1, rt0, vt0, vt1 WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))<>((0.0387536118079449)))) ORDER BY (NOT (NULL COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))!=((0.0387536118079449)))) IS TRUE)  as count FROM t1, rt0, vt0, vt1 ORDER BY (NOT (NULL COLLATE NOCASE)));
SELECT ALL * FROM t1, rt0, vt0, vt1 WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))<>((0.0387536118079449)))) ORDER BY (NOT (NULL COLLATE NOCASE));
SELECT ALL * FROM t1, vt0 WHERE ((((NOT (t1.c0)))OR((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0)))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((NOT (t1.c0)))OR((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c0)))OR((NOT (vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((NOT (t1.c0)))OR((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (LTRIM(((((rt0.c2)OR(rt0.c1)))AND(t1.c1)))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((LTRIM(((((rt0.c2)OR(rt0.c1)))AND(t1.c1)))) IS TRUE)  as count FROM vt0, vt1, t1, rt0 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (LTRIM(((((rt0.c2)OR(rt0.c1)))AND(t1.c1)))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((LTRIM(((((rt0.c2)OR(rt0.c1)))AND(t1.c1)))) IS TRUE)  as count FROM vt0, vt1, t1, rt0 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (LTRIM(((((rt0.c2)OR(rt0.c1)))AND(t1.c1)))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS INTEGER);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE ((~ ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE ((~ ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE ((~ ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CAST((('-1147793039') BETWEEN (t1.c2) AND (vt1.c0)) AS INTEGER)) ORDER BY ((CAST(vt0.c0 AS TEXT))||((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-1147793039') BETWEEN (t1.c2) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((CAST(vt0.c0 AS TEXT))||((- (vt1.c0)))) DESC);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CAST((('-1147793039') BETWEEN (t1.c2) AND (vt1.c0)) AS INTEGER)) ORDER BY ((CAST(vt0.c0 AS TEXT))||((- (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-1147793039') BETWEEN (t1.c2) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((CAST(vt0.c0 AS TEXT))||((- (vt1.c0)))) DESC);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CAST((('-1147793039') BETWEEN (t1.c2) AND (vt1.c0)) AS INTEGER)) ORDER BY ((CAST(vt0.c0 AS TEXT))||((- (vt1.c0)))) DESC;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN load_extension(vt1.c0, vt1.c1) THEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN load_extension(vt1.c0, vt1.c1) THEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN load_extension(vt1.c0, vt1.c1) THEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN load_extension(vt1.c0, vt1.c1) THEN ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1)))+(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))+(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1)))+(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))+(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1)))+(vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t1, vt0 WHERE ((NOT (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ALL (((NOT (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((NOT (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ALL (((NOT (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((NOT (SQLITE_SOURCE_ID())));
SELECT * FROM rt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE '' END THEN CASE '喴쒥N{'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE '' END THEN CASE '喴쒥N{'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE '' END THEN CASE '喴쒥N{'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE '' END THEN CASE '喴쒥N{'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN rt0.c1 WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE '' END THEN CASE '喴쒥N{'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END END);
SELECT ALL * FROM t1 NOT INDEXED, vt1, rt0, vt0 WHERE (((((('1e500'))>((rt0.c0))))<(x'')));
SELECT SUM(count) FROM (SELECT ((((((('1e500'))>((rt0.c0))))<(x''))) IS TRUE)  as count FROM t1, vt1, rt0, vt0);
SELECT ALL * FROM t1 NOT INDEXED, vt1, rt0, vt0 WHERE (((((('1e500'))>((rt0.c0))))<(x'')));
SELECT SUM(count) FROM (SELECT ((((((('1e500'))>((rt0.c0))))<(x''))) IS TRUE)  as count FROM t1, vt1, rt0, vt0);
SELECT ALL * FROM t1 NOT INDEXED, vt1, rt0, vt0 WHERE (((((('1e500'))>((rt0.c0))))<(x'')));
SELECT ALL * FROM vt1, vt0, rt0, t1 WHERE (rt0.c1) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, vt0, rt0, t1 ORDER BY t1.c2  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0, t1 WHERE (rt0.c1) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, vt0, rt0, t1 ORDER BY t1.c2  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt0, t1 WHERE (rt0.c1) ORDER BY t1.c2  NULLS FIRST;
SELECT * FROM rt0, t1, vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT vt1.c1, 0.7575674683248347)) NOTNULL)) ORDER BY ((((NULL) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt1.c1, 0.7575674683248347)) NOTNULL)) IS TRUE)  as count FROM rt0, t1, vt1, vt0 ORDER BY ((((NULL) ISNULL)) NOT NULL));
SELECT * FROM rt0, t1, vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT vt1.c1, 0.7575674683248347)) NOTNULL)) ORDER BY ((((NULL) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt1.c1, 0.7575674683248347)) NOTNULL)) IS TRUE)  as count FROM rt0, t1, vt1, vt0 ORDER BY ((((NULL) ISNULL)) NOT NULL));
SELECT * FROM rt0, t1, vt1, vt0 WHERE (((LIKELIHOOD(DISTINCT vt1.c1, 0.7575674683248347)) NOTNULL)) ORDER BY ((((NULL) ISNULL)) NOT NULL);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((+ (t1.c1))))>(((((t1.c2))>=((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT ((((((+ (t1.c1))))>(((((t1.c2))>=((vt0.c1))))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((+ (t1.c1))))>(((((t1.c2))>=((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT ((((((+ (t1.c1))))>(((((t1.c2))>=((vt0.c1))))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((+ (t1.c1))))>(((((t1.c2))>=((vt0.c1)))))));
SELECT ALL * FROM vt1, rt0 WHERE (((x'')GLOB(((((vt1.c0)OR(rt0.c2)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ((((x'')GLOB(((((vt1.c0)OR(rt0.c2)))AND(NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((x'')GLOB(((((vt1.c0)OR(rt0.c2)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ((((x'')GLOB(((((vt1.c0)OR(rt0.c2)))AND(NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((x'')GLOB(((((vt1.c0)OR(rt0.c2)))AND(NULL)))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((CAST(0.29142557416060944 AS REAL))OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(0.29142557416060944 AS REAL))OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((CAST(0.29142557416060944 AS REAL))OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(0.29142557416060944 AS REAL))OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((CAST(0.29142557416060944 AS REAL))OR(LIKELY(DISTINCT vt0.c0))))AND(CAST(vt0.c1 AS BLOB))));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((('rVg~Z%o<')OR(t1.c2)))AND(x'')) WHERE (CAST(((t1.c2) NOT BETWEEN (x'') AND (t1.c0)) AS REAL)) ORDER BY (+ (UNICODE(vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) NOT BETWEEN (x'') AND (t1.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((('rVg~Z%o<')OR(t1.c2)))AND(x'')) ORDER BY (+ (UNICODE(vt1.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((('rVg~Z%o<')OR(t1.c2)))AND(x'')) WHERE (CAST(((t1.c2) NOT BETWEEN (x'') AND (t1.c0)) AS REAL)) ORDER BY (+ (UNICODE(vt1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) NOT BETWEEN (x'') AND (t1.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((('rVg~Z%o<')OR(t1.c2)))AND(x'')) ORDER BY (+ (UNICODE(vt1.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((('rVg~Z%o<')OR(t1.c2)))AND(x'')) WHERE (CAST(((t1.c2) NOT BETWEEN (x'') AND (t1.c0)) AS REAL)) ORDER BY (+ (UNICODE(vt1.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN vt1 ON CAST(((t1.c2) BETWEEN (t1.c2) AND (vt1.c1)) AS TEXT) WHERE (CAST(((((vt0.c1)OR(t1.c0)))AND(t1.c0)) AS TEXT)) ORDER BY (((- (t1.c0)))>=(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(t1.c0)))AND(t1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN vt1 ON CAST(((t1.c2) BETWEEN (t1.c2) AND (vt1.c1)) AS TEXT) ORDER BY (((- (t1.c0)))>=(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN vt1 ON CAST(((t1.c2) BETWEEN (t1.c2) AND (vt1.c1)) AS TEXT) WHERE (CAST(((((vt0.c1)OR(t1.c0)))AND(t1.c0)) AS TEXT)) ORDER BY (((- (t1.c0)))>=(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(t1.c0)))AND(t1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN vt1 ON CAST(((t1.c2) BETWEEN (t1.c2) AND (vt1.c1)) AS TEXT) ORDER BY (((- (t1.c0)))>=(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN vt1 ON CAST(((t1.c2) BETWEEN (t1.c2) AND (vt1.c1)) AS TEXT) WHERE (CAST(((((vt0.c1)OR(t1.c0)))AND(t1.c0)) AS TEXT)) ORDER BY (((- (t1.c0)))>=(vt0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM rt0, vt1, t1 WHERE (((((('' IN (0.8025480590118185)))AND(((rt0.c2) IS FALSE))))OR(0.5764111079823132)));
SELECT SUM(count) FROM (SELECT ALL ((((((('' IN (0.8025480590118185)))AND(((rt0.c2) IS FALSE))))OR(0.5764111079823132))) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT * FROM rt0, vt1, t1 WHERE (((((('' IN (0.8025480590118185)))AND(((rt0.c2) IS FALSE))))OR(0.5764111079823132)));
SELECT SUM(count) FROM (SELECT ALL ((((((('' IN (0.8025480590118185)))AND(((rt0.c2) IS FALSE))))OR(0.5764111079823132))) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT * FROM rt0, vt1, t1 WHERE (((((('' IN (0.8025480590118185)))AND(((rt0.c2) IS FALSE))))OR(0.5764111079823132)));
SELECT ALL COUNT(*) FROM vt1, t1 NOT INDEXED, vt0, rt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)IS(((rt0.c2) NOT BETWEEN (vt0.c1) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)IS(((rt0.c2) NOT BETWEEN (vt0.c1) AND (t1.c2))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t1 NOT INDEXED, vt0, rt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)IS(((rt0.c2) NOT BETWEEN (vt0.c1) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)IS(((rt0.c2) NOT BETWEEN (vt0.c1) AND (t1.c2))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t1 NOT INDEXED, vt0, rt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)IS(((rt0.c2) NOT BETWEEN (vt0.c1) AND (t1.c2)))));
SELECT ALL * FROM rt0, t1 CROSS JOIN vt1 ON (ROUND(t1.c0, rt0.c2) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(t1.c0 AS INTEGER) END WHERE ((((+ (rt0.c0)))>>(((0.48981730510377886)||(vt0.c0))))) ORDER BY (((((((((((((rt0.c2)AND(t1.c2)))OR(rt0.c1)))OR(NULL)))OR(0x529cbd07)))AND(vt1.c1)))AND(t1.c0)) IN (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, (+ (TYPEOF(DISTINCT NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))>>(((0.48981730510377886)||(vt0.c0))))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN vt1 ON (ROUND(t1.c0, rt0.c2) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(t1.c0 AS INTEGER) END ORDER BY (((((((((((((rt0.c2)AND(t1.c2)))OR(rt0.c1)))OR(NULL)))OR(0x529cbd07)))AND(vt1.c1)))AND(t1.c0)) IN (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, (+ (TYPEOF(DISTINCT NULL))));
SELECT ALL * FROM rt0, t1 CROSS JOIN vt1 ON (ROUND(t1.c0, rt0.c2) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(t1.c0 AS INTEGER) END WHERE ((((+ (rt0.c0)))>>(((0.48981730510377886)||(vt0.c0))))) ORDER BY (((((((((((((rt0.c2)AND(t1.c2)))OR(rt0.c1)))OR(NULL)))OR(0x529cbd07)))AND(vt1.c1)))AND(t1.c0)) IN (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, (+ (TYPEOF(DISTINCT NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))>>(((0.48981730510377886)||(vt0.c0))))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN vt1 ON (ROUND(t1.c0, rt0.c2) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(t1.c0 AS INTEGER) END ORDER BY (((((((((((((rt0.c2)AND(t1.c2)))OR(rt0.c1)))OR(NULL)))OR(0x529cbd07)))AND(vt1.c1)))AND(t1.c0)) IN (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, (+ (TYPEOF(DISTINCT NULL))));
SELECT ALL * FROM rt0, t1 CROSS JOIN vt1 ON (ROUND(t1.c0, rt0.c2) IN ()) FULL OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(t1.c0 AS INTEGER) END WHERE ((((+ (rt0.c0)))>>(((0.48981730510377886)||(vt0.c0))))) ORDER BY (((((((((((((rt0.c2)AND(t1.c2)))OR(rt0.c1)))OR(NULL)))OR(0x529cbd07)))AND(vt1.c1)))AND(t1.c0)) IN (vt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, (+ (TYPEOF(DISTINCT NULL)));
SELECT ALL * FROM vt0, rt0 WHERE ((((((x''))<((''))))-(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((x''))<((''))))-(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((x''))<((''))))-(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((x''))<((''))))-(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((x''))<((''))))-(rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)||(rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)||(rt0.c0))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)||(rt0.c0)))));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (t1.c1 COLLATE NOCASE COLLATE RTRIM) ORDER BY (((t1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '694130254' THEN t1.c1 WHEN vt0.c1 THEN 0x7a2fe074 END))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c1 COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((t1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '694130254' THEN t1.c1 WHEN vt0.c1 THEN 0X7a2fe074 END))) ASC);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (t1.c1 COLLATE NOCASE COLLATE RTRIM) ORDER BY (((t1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '694130254' THEN t1.c1 WHEN vt0.c1 THEN 0x7a2fe074 END))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c1 COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((t1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '694130254' THEN t1.c1 WHEN vt0.c1 THEN 0X7a2fe074 END))) ASC);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (t1.c1 COLLATE NOCASE COLLATE RTRIM) ORDER BY (((t1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '694130254' THEN t1.c1 WHEN vt0.c1 THEN 0x7a2fe074 END))) ASC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(vt0.c0 COLLATE BINARY))) ORDER BY (((vt0.c1))>=((vt0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))*(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1))>=((vt0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(vt0.c0 COLLATE BINARY))) ORDER BY (((vt0.c1))>=((vt0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))*(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1))>=((vt0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(vt0.c0 COLLATE BINARY))) ORDER BY (((vt0.c1))>=((vt0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON '1640290268' CROSS JOIN t1 ON ((((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0))) IS FALSE) WHERE (CAST(((((rt0.c1)AND('1640290268')))OR(x'caeb')) AS REAL)) ORDER BY (~ (CAST(rt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt1.c0) AND (t1.c2)))GLOB(rt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND('1640290268')))OR(x'caeb')) AS REAL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON '1640290268' CROSS JOIN t1 ON ((((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0))) IS FALSE) ORDER BY (~ (CAST(rt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt1.c0) AND (t1.c2)))GLOB(rt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON '1640290268' CROSS JOIN t1 ON ((((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0))) IS FALSE) WHERE (CAST(((((rt0.c1)AND('1640290268')))OR(x'caeb')) AS REAL)) ORDER BY (~ (CAST(rt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt1.c0) AND (t1.c2)))GLOB(rt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND('1640290268')))OR(x'caeb')) AS REAL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON '1640290268' CROSS JOIN t1 ON ((((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0))) IS FALSE) ORDER BY (~ (CAST(rt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt1.c0) AND (t1.c2)))GLOB(rt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON '1640290268' CROSS JOIN t1 ON ((((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0))) IS FALSE) WHERE (CAST(((((rt0.c1)AND('1640290268')))OR(x'caeb')) AS REAL)) ORDER BY (~ (CAST(rt0.c0 AS TEXT))) DESC  NULLS FIRST, ((((vt0.c1) BETWEEN (vt1.c0) AND (t1.c2)))GLOB(rt0.c0));
SELECT ALL * FROM vt0, t1 CROSS JOIN vt1 ON vt1.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1 CROSS JOIN vt1 ON vt1.c0);
SELECT ALL * FROM vt0, t1 CROSS JOIN vt1 ON vt1.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1 CROSS JOIN vt1 ON vt1.c0);
SELECT ALL * FROM vt0, t1 CROSS JOIN vt1 ON vt1.c0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, t1, vt1, rt0 WHERE (((((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)AND(((t1.c0) NOT NULL))))AND(0.9153117774834277)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)AND(((t1.c0) NOT NULL))))AND(0.9153117774834277))) IS TRUE)  as count FROM vt0, t1 NOT INDEXED, vt1, rt0);
SELECT COUNT(*) FROM vt0, t1, vt1, rt0 WHERE (((((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)AND(((t1.c0) NOT NULL))))AND(0.9153117774834277)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)AND(((t1.c0) NOT NULL))))AND(0.9153117774834277))) IS TRUE)  as count FROM vt0, t1 NOT INDEXED, vt1, rt0);
SELECT COUNT(*) FROM vt0, t1, vt1, rt0 WHERE (((((CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c1 END)AND(((t1.c0) NOT NULL))))AND(0.9153117774834277)));
SELECT * FROM rt0, vt0, vt1, t1 WHERE (((t1.c0) NOT NULL)) ORDER BY ((((((t1.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))AND(((t1.c0) IS TRUE))) ASC, (((vt1.c0, t1.c0, rt0.c2)) NOT BETWEEN (((+ (vt0.c0)), vt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)) AND (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), vt1.c0 COLLATE BINARY, (((vt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, t1.c2, t1.c2)) AND ((t1.c2, vt0.c1, t1.c2)))))) DESC, t1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, vt1, t1 ORDER BY ((((((t1.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))AND(((t1.c0) IS TRUE))) ASC, (((vt1.c0, t1.c0, rt0.c2)) NOT BETWEEN (((+ (vt0.c0)), vt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)) AND (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), vt1.c0 COLLATE BINARY, (((vt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, t1.c2, t1.c2)) AND ((t1.c2, vt0.c1, t1.c2)))))) DESC, t1.c1 ASC  NULLS LAST);
SELECT * FROM rt0, vt0, vt1, t1 WHERE (((t1.c0) NOT NULL)) ORDER BY ((((((t1.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))AND(((t1.c0) IS TRUE))) ASC, (((vt1.c0, t1.c0, rt0.c2)) NOT BETWEEN (((+ (vt0.c0)), vt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)) AND (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), vt1.c0 COLLATE BINARY, (((vt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, t1.c2, t1.c2)) AND ((t1.c2, vt0.c1, t1.c2)))))) DESC, t1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, vt1, t1 ORDER BY ((((((t1.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))AND(((t1.c0) IS TRUE))) ASC, (((vt1.c0, t1.c0, rt0.c2)) NOT BETWEEN (((+ (vt0.c0)), vt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)) AND (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), vt1.c0 COLLATE BINARY, (((vt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, t1.c2, t1.c2)) AND ((t1.c2, vt0.c1, t1.c2)))))) DESC, t1.c1 ASC  NULLS LAST);
SELECT * FROM rt0, vt0, vt1, t1 WHERE (((t1.c0) NOT NULL)) ORDER BY ((((((t1.c0)<=(vt0.c0)))OR(CAST(vt0.c0 AS REAL))))AND(((t1.c0) IS TRUE))) ASC, (((vt1.c0, t1.c0, rt0.c2)) NOT BETWEEN (((+ (vt0.c0)), vt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)) AND (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), vt1.c0 COLLATE BINARY, (((vt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, t1.c2, t1.c2)) AND ((t1.c2, vt0.c1, t1.c2)))))) DESC, t1.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(vt1.c0))) ORDER BY (((((((vt1.c0)OR(vt1.c0)))AND('GO'))))>=((CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)OR(vt1.c0)))AND('GO'))))>=((CAST(vt1.c1 AS TEXT)))));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(vt1.c0))) ORDER BY (((((((vt1.c0)OR(vt1.c0)))AND('GO'))))>=((CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)OR(vt1.c0)))AND('GO'))))>=((CAST(vt1.c1 AS TEXT)))));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))%(vt1.c0))) ORDER BY (((((((vt1.c0)OR(vt1.c0)))AND('GO'))))>=((CAST(vt1.c1 AS TEXT))));
SELECT ALL * FROM t1, vt1 WHERE (ROUND(LIKELIHOOD(t1.c2, 0.15546429345883372), ((t1.c1)AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(LIKELIHOOD(t1.c2, 0.15546429345883372), ((t1.c1)AND(t1.c0)))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (ROUND(LIKELIHOOD(t1.c2, 0.15546429345883372), ((t1.c1)AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(LIKELIHOOD(t1.c2, 0.15546429345883372), ((t1.c1)AND(t1.c0)))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (ROUND(LIKELIHOOD(t1.c2, 0.15546429345883372), ((t1.c1)AND(t1.c0))));
SELECT * FROM t1 WHERE (CASE WHEN (- (t1.c0)) THEN t1.c2 COLLATE BINARY ELSE CAST(t1.c1 AS NUMERIC) END) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c2 ELSE t1.c1 END) NOTNULL), LIKELY(DISTINCT t1.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t1.c0)) THEN t1.c2 COLLATE BINARY ELSE CAST(t1.c1 AS NUMERIC) END) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c2 ELSE t1.c1 END) NOTNULL), LIKELY(DISTINCT t1.c0) COLLATE RTRIM DESC);
SELECT * FROM t1 WHERE (CASE WHEN (- (t1.c0)) THEN t1.c2 COLLATE BINARY ELSE CAST(t1.c1 AS NUMERIC) END) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c2 ELSE t1.c1 END) NOTNULL), LIKELY(DISTINCT t1.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t1.c0)) THEN t1.c2 COLLATE BINARY ELSE CAST(t1.c1 AS NUMERIC) END) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c2 ELSE t1.c1 END) NOTNULL), LIKELY(DISTINCT t1.c0) COLLATE RTRIM DESC);
SELECT * FROM t1 WHERE (CASE WHEN (- (t1.c0)) THEN t1.c2 COLLATE BINARY ELSE CAST(t1.c1 AS NUMERIC) END) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c2 ELSE t1.c1 END) NOTNULL), LIKELY(DISTINCT t1.c0) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((((((((((((rt0.c1)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) ISNULL) WHERE (0.5645560247270462);
SELECT SUM(count) FROM (SELECT ((0.5645560247270462) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((((((((((rt0.c1)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((((((((((((rt0.c1)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) ISNULL) WHERE (0.5645560247270462);
SELECT SUM(count) FROM (SELECT ((0.5645560247270462) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((((((((((rt0.c1)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((((((((((((rt0.c1)OR(rt0.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0))) ISNULL) WHERE (0.5645560247270462);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)LIKE(vt0.c1))) NOT BETWEEN (((0x0)<>('583530669'))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE (CAST('2104492647' COLLATE BINARY AS TEXT)) ORDER BY (((vt0.c0, 0.6507719538922706, rt0.c1)) BETWEEN (((vt0.c1 IN ()), (rt0.c2 IN (vt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((rt0.c1, rt0.c0, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('2104492647' COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)LIKE(vt0.c1))) NOT BETWEEN (((0x0)!=('583530669'))) AND (((vt0.c0)LIKE(vt0.c0)))) ORDER BY (((vt0.c0, 0.6507719538922706, rt0.c1)) BETWEEN (((vt0.c1 IN ()), (rt0.c2 IN (vt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((rt0.c1, rt0.c0, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)LIKE(vt0.c1))) NOT BETWEEN (((0x0)<>('583530669'))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE (CAST('2104492647' COLLATE BINARY AS TEXT)) ORDER BY (((vt0.c0, 0.6507719538922706, rt0.c1)) BETWEEN (((vt0.c1 IN ()), (rt0.c2 IN (vt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((rt0.c1, rt0.c0, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('2104492647' COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)LIKE(vt0.c1))) NOT BETWEEN (((0x0)!=('583530669'))) AND (((vt0.c0)LIKE(vt0.c0)))) ORDER BY (((vt0.c0, 0.6507719538922706, rt0.c1)) BETWEEN (((vt0.c1 IN ()), (rt0.c2 IN (vt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((rt0.c1, rt0.c0, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)LIKE(vt0.c1))) NOT BETWEEN (((0x0)<>('583530669'))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE (CAST('2104492647' COLLATE BINARY AS TEXT)) ORDER BY (((vt0.c0, 0.6507719538922706, rt0.c1)) BETWEEN (((vt0.c1 IN ()), (rt0.c2 IN (vt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c1)))) AND ((rt0.c1, rt0.c0, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt1.c1) ORDER BY (0xffffffffeedf015a IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (0xffffffffeedf015a IN ()) DESC);
SELECT * FROM vt0, vt1 WHERE (vt1.c1) ORDER BY (0xffffffffeedf015a IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (0xffffffffeedf015a IN ()) DESC);
SELECT * FROM vt0, vt1 WHERE (vt1.c1) ORDER BY (0xffffffffeedf015a IN ()) DESC;
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((TYPEOF(rt0.c0))==(((t1.c1)IS(rt0.c0))))) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0))==(((t1.c1)IS(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t1, vt1 ORDER BY t1.c2  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((TYPEOF(rt0.c0))==(((t1.c1)IS(rt0.c0))))) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0))==(((t1.c1)IS(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t1, vt1 ORDER BY t1.c2  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((TYPEOF(rt0.c0))==(((t1.c1)IS(rt0.c0))))) ORDER BY t1.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON (~ (0.1404055764419362)) FULL OUTER JOIN vt0 ON (((((+ (t1.c0)))AND(((((((((t1.c1)AND(rt0.c0)))OR(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))))AND(((t1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN rt0 ON ((CAST(0x9d34342 AS TEXT)) ISNULL) WHERE (CAST(((t1.c1) IS TRUE) AS TEXT)) ORDER BY NULL ASC  NULLS LAST, ((CASE vt0.c0  WHEN rt0.c1 THEN t1.c2 ELSE t1.c2 END)%(rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((((t1.c1)-(vt1.c0))) NOT BETWEEN ((((t1.c0))<>((t1.c0)))) AND (x'4ca370cc'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON (~ (0.1404055764419362)) FULL OUTER JOIN vt0 ON (((((+ (t1.c0)))AND(((((((((t1.c1)AND(rt0.c0)))OR(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))))AND(((t1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN rt0 ON ((CAST(0X9d34342 AS TEXT)) ISNULL) ORDER BY NULL ASC  NULLS LAST, ((CASE vt0.c0  WHEN rt0.c1 THEN t1.c2 ELSE t1.c2 END)%(rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((((t1.c1)-(vt1.c0))) NOT BETWEEN ((((t1.c0))<>((t1.c0)))) AND (x'4ca370cc'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON (~ (0.1404055764419362)) FULL OUTER JOIN vt0 ON (((((+ (t1.c0)))AND(((((((((t1.c1)AND(rt0.c0)))OR(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))))AND(((t1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN rt0 ON ((CAST(0x9d34342 AS TEXT)) ISNULL) WHERE (CAST(((t1.c1) IS TRUE) AS TEXT)) ORDER BY NULL ASC  NULLS LAST, ((CASE vt0.c0  WHEN rt0.c1 THEN t1.c2 ELSE t1.c2 END)%(rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((((t1.c1)-(vt1.c0))) NOT BETWEEN ((((t1.c0))<>((t1.c0)))) AND (x'4ca370cc'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON (~ (0.1404055764419362)) FULL OUTER JOIN vt0 ON (((((+ (t1.c0)))AND(((((((((t1.c1)AND(rt0.c0)))OR(t1.c1)))AND(vt0.c1)))OR(vt0.c0)))))AND(((t1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) INNER JOIN rt0 ON ((CAST(0X9d34342 AS TEXT)) ISNULL) ORDER BY NULL ASC  NULLS LAST, ((CASE vt0.c0  WHEN rt0.c1 THEN t1.c2 ELSE t1.c2 END)%(rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((((t1.c1)-(vt1.c0))) NOT BETWEEN ((((t1.c0))<>((t1.c0)))) AND (x'4ca370cc'))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM) ORDER BY ((((DATE(vt0.c1, vt0.c1, vt0.c0))AND((vt0.c1 IN (vt0.c0, vt0.c0)))))AND(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((DATE(vt0.c1, vt0.c1, vt0.c0))AND((vt0.c1 IN (vt0.c0, vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM) ORDER BY ((((DATE(vt0.c1, vt0.c1, vt0.c0))AND((vt0.c1 IN (vt0.c0, vt0.c0)))))AND(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((DATE(vt0.c1, vt0.c1, vt0.c0))AND((vt0.c1 IN (vt0.c0, vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM) ORDER BY ((((DATE(vt0.c1, vt0.c1, vt0.c0))AND((vt0.c1 IN (vt0.c0, vt0.c0)))))AND(vt0.c0 COLLATE RTRIM));
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c1)LIKE(vt0.c0)), (vt0.c1 IN (''))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c1)LIKE(vt0.c0)), (vt0.c1 IN ('')))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c1)LIKE(vt0.c0)), (vt0.c1 IN (''))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c1)LIKE(vt0.c0)), (vt0.c1 IN ('')))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c1)LIKE(vt0.c0)), (vt0.c1 IN (''))));
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE (TOTAL_CHANGES());
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0))) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c0 THEN rt0.c0 ELSE t1.c0 END) BETWEEN (((((((((rt0.c2)AND(vt1.c1)))AND(rt0.c1)))OR('0.7578288505106207')))AND(t1.c2))) AND (CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) WHERE (((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN ((((vt1.c1)) BETWEEN ((0.9345612719732201)) AND ((t1.c0)))) AND (0x3083253d))) ORDER BY (json_type(t1.c2) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN ((((vt1.c1)) BETWEEN ((0.9345612719732201)) AND ((t1.c0)))) AND (0x3083253d))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c0 THEN rt0.c0 ELSE t1.c0 END) BETWEEN (((((((((rt0.c2)AND(vt1.c1)))AND(rt0.c1)))OR('0.7578288505106207')))AND(t1.c2))) AND (CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) ORDER BY (json_type(t1.c2) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c0 THEN rt0.c0 ELSE t1.c0 END) BETWEEN (((((((((rt0.c2)AND(vt1.c1)))AND(rt0.c1)))OR('0.7578288505106207')))AND(t1.c2))) AND (CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) WHERE (((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN ((((vt1.c1)) BETWEEN ((0.9345612719732201)) AND ((t1.c0)))) AND (0x3083253d))) ORDER BY (json_type(t1.c2) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN ((((vt1.c1)) BETWEEN ((0.9345612719732201)) AND ((t1.c0)))) AND (0x3083253d))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c0 THEN rt0.c0 ELSE t1.c0 END) BETWEEN (((((((((rt0.c2)AND(vt1.c1)))AND(rt0.c1)))OR('0.7578288505106207')))AND(t1.c2))) AND (CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) ORDER BY (json_type(t1.c2) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN t1.c0 THEN rt0.c0 ELSE t1.c0 END) BETWEEN (((((((((rt0.c2)AND(vt1.c1)))AND(rt0.c1)))OR('0.7578288505106207')))AND(t1.c2))) AND (CASE t1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) WHERE (((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN ((((vt1.c1)) BETWEEN ((0.9345612719732201)) AND ((t1.c0)))) AND (0x3083253d))) ORDER BY (json_type(t1.c2) IN ()) ASC  NULLS LAST;
SELECT * FROM rt0, vt0, t1, vt1 WHERE (TRIM(CASE WHEN vt0.c1 THEN vt0.c0 ELSE t1.c2 END)) ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (vt0.c0) AND (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 ELSE t1.c2 END)) DESC, json_insert('', ((t1.c2) NOT BETWEEN (rt0.c0) AND (784123343)), (NOT (rt0.c2)))  NULLS LAST, ((json_remove(vt1.c0, t1.c0))<(((((((((((((rt0.c0)OR(t1.c2)))OR(vt0.c1)))AND(rt0.c2)))AND(t1.c2)))AND(vt1.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN vt0.c1 THEN vt0.c0 ELSE t1.c2 END)) IS TRUE)  as count FROM rt0, vt0, t1, vt1 ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (vt0.c0) AND (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 ELSE t1.c2 END)) DESC, json_insert('', ((t1.c2) NOT BETWEEN (rt0.c0) AND (784123343)), (NOT (rt0.c2)))  NULLS LAST, ((json_remove(vt1.c0, t1.c0))<(((((((((((((rt0.c0)OR(t1.c2)))OR(vt0.c1)))AND(rt0.c2)))AND(t1.c2)))AND(vt1.c1)))AND(rt0.c0)))));
SELECT * FROM rt0, vt0, t1, vt1 WHERE (TRIM(CASE WHEN vt0.c1 THEN vt0.c0 ELSE t1.c2 END)) ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (vt0.c0) AND (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 ELSE t1.c2 END)) DESC, json_insert('', ((t1.c2) NOT BETWEEN (rt0.c0) AND (784123343)), (NOT (rt0.c2)))  NULLS LAST, ((json_remove(vt1.c0, t1.c0))<(((((((((((((rt0.c0)OR(t1.c2)))OR(vt0.c1)))AND(rt0.c2)))AND(t1.c2)))AND(vt1.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN vt0.c1 THEN vt0.c0 ELSE t1.c2 END)) IS TRUE)  as count FROM rt0, vt0, t1, vt1 ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (vt0.c0) AND (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 ELSE t1.c2 END)) DESC, json_insert('', ((t1.c2) NOT BETWEEN (rt0.c0) AND (784123343)), (NOT (rt0.c2)))  NULLS LAST, ((json_remove(vt1.c0, t1.c0))<(((((((((((((rt0.c0)OR(t1.c2)))OR(vt0.c1)))AND(rt0.c2)))AND(t1.c2)))AND(vt1.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0 WHERE (vt1.c0) ORDER BY ((TRIM(DISTINCT vt1.c1, vt0.c1))-(((t1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY ((TRIM(DISTINCT vt1.c1, vt0.c1))-(((t1.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0 WHERE (vt1.c0) ORDER BY ((TRIM(DISTINCT vt1.c1, vt0.c1))-(((t1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY ((TRIM(DISTINCT vt1.c1, vt0.c1))-(((t1.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0 WHERE (vt1.c0) ORDER BY ((TRIM(DISTINCT vt1.c1, vt0.c1))-(((t1.c0) ISNULL)))  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((NULL) NOTNULL));
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (CAST(vt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (CAST(vt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (CAST(vt0.c1 AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 END) IS TRUE));
SELECT * FROM t1, vt1 LEFT OUTER JOIN rt0 ON ((0.7932606397246558)IS NOT((t1.c1 IN ()))) FULL OUTER JOIN vt0 ON (x'f3e5' IN ()) WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('')))) IS TRUE)) ORDER BY (((((NULL IN (rt0.c1, vt0.c0)))OR(((((t1.c1)AND(rt0.c2)))AND(t1.c1)))))AND(((NULL)IS NOT(rt0.c1)))), ((((t1.c1)==(x'')))<<(((t1.c2) NOT BETWEEN (rt0.c1) AND ('u/iv江ihfr')))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('')))) IS TRUE)) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN rt0 ON ((0.7932606397246558)IS NOT((t1.c1 IN ()))) FULL OUTER JOIN vt0 ON (x'f3e5' IN ()) ORDER BY (((((NULL IN (rt0.c1, vt0.c0)))OR(((((t1.c1)AND(rt0.c2)))AND(t1.c1)))))AND(((NULL)IS NOT(rt0.c1)))), ((((t1.c1)==(x'')))<<(((t1.c2) NOT BETWEEN (rt0.c1) AND ('u/iv江ihfr')))) ASC);
SELECT * FROM t1, vt1 LEFT OUTER JOIN rt0 ON ((0.7932606397246558)IS NOT((t1.c1 IN ()))) FULL OUTER JOIN vt0 ON (x'f3e5' IN ()) WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('')))) IS TRUE)) ORDER BY (((((NULL IN (rt0.c1, vt0.c0)))OR(((((t1.c1)AND(rt0.c2)))AND(t1.c1)))))AND(((NULL)IS NOT(rt0.c1)))), ((((t1.c1)==(x'')))<<(((t1.c2) NOT BETWEEN (rt0.c1) AND ('u/iv江ihfr')))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('')))) IS TRUE)) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN rt0 ON ((0.7932606397246558)IS NOT((t1.c1 IN ()))) FULL OUTER JOIN vt0 ON (x'f3e5' IN ()) ORDER BY (((((NULL IN (rt0.c1, vt0.c0)))OR(((((t1.c1)AND(rt0.c2)))AND(t1.c1)))))AND(((NULL)IS NOT(rt0.c1)))), ((((t1.c1)==(x'')))<<(((t1.c2) NOT BETWEEN (rt0.c1) AND ('u/iv江ihfr')))) ASC);
SELECT * FROM t1, vt1 LEFT OUTER JOIN rt0 ON ((0.7932606397246558)IS NOT((t1.c1 IN ()))) FULL OUTER JOIN vt0 ON (x'f3e5' IN ()) WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('')))) IS TRUE)) ORDER BY (((((NULL IN (rt0.c1, vt0.c0)))OR(((((t1.c1)AND(rt0.c2)))AND(t1.c1)))))AND(((NULL)IS NOT(rt0.c1)))), ((((t1.c1)==(x'')))<<(((t1.c2) NOT BETWEEN (rt0.c1) AND ('u/iv江ihfr')))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY ((((rt0.c2) ISNULL)) BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((- (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) ISNULL)) BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((- (rt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY ((((rt0.c2) ISNULL)) BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((- (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) ISNULL)) BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((- (rt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY ((((rt0.c2) ISNULL)) BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((- (rt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1, t1, rt0 WHERE ((((-40916813 IN ()))*(CASE WHEN rt0.c1 THEN t1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((-40916813 IN ()))*(CASE WHEN rt0.c1 THEN t1.c1 END))) IS TRUE)  as count FROM vt1, t1, rt0);
SELECT * FROM vt1, t1, rt0 WHERE ((((-40916813 IN ()))*(CASE WHEN rt0.c1 THEN t1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((-40916813 IN ()))*(CASE WHEN rt0.c1 THEN t1.c1 END))) IS TRUE)  as count FROM vt1, t1, rt0);
SELECT * FROM vt1, t1, rt0 WHERE ((((-40916813 IN ()))*(CASE WHEN rt0.c1 THEN t1.c1 END)));
SELECT ALL * FROM vt0, rt0, t1 FULL OUTER JOIN vt1 ON STRFTIME((rt0.c1 IN ()), ((t1.c1) BETWEEN (rt0.c1) AND ('-353562113')), (t1.c1 IN ())) WHERE ((((t1.c2, (((('-567379974')OR(rt0.c1)))OR(vt1.c1)), ((vt1.c1) ISNULL)))<=((CASE t1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN t1.c2 WHEN 0X21519601 THEN vt1.c1 ELSE t1.c0 END, ((t1.c1) IS FALSE), DATE(vt0.c0, vt1.c0, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2, (((('-567379974')OR(rt0.c1)))OR(vt1.c1)), ((vt1.c1) ISNULL)))<=((CASE t1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN t1.c2 WHEN 0X21519601 THEN vt1.c1 ELSE t1.c0 END, ((t1.c1) IS FALSE), DATE(vt0.c0, vt1.c0, t1.c0))))) IS TRUE)  as count FROM vt0, rt0, t1 FULL OUTER JOIN vt1 ON STRFTIME((rt0.c1 IN ()), ((t1.c1) BETWEEN (rt0.c1) AND ('-353562113')), (t1.c1 IN ())));
SELECT ALL * FROM vt0, rt0, t1 FULL OUTER JOIN vt1 ON STRFTIME((rt0.c1 IN ()), ((t1.c1) BETWEEN (rt0.c1) AND ('-353562113')), (t1.c1 IN ())) WHERE ((((t1.c2, (((('-567379974')OR(rt0.c1)))OR(vt1.c1)), ((vt1.c1) ISNULL)))<=((CASE t1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN t1.c2 WHEN 0X21519601 THEN vt1.c1 ELSE t1.c0 END, ((t1.c1) IS FALSE), DATE(vt0.c0, vt1.c0, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2, (((('-567379974')OR(rt0.c1)))OR(vt1.c1)), ((vt1.c1) ISNULL)))<=((CASE t1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN t1.c2 WHEN 0X21519601 THEN vt1.c1 ELSE t1.c0 END, ((t1.c1) IS FALSE), DATE(vt0.c0, vt1.c0, t1.c0))))) IS TRUE)  as count FROM vt0, rt0, t1 FULL OUTER JOIN vt1 ON STRFTIME((rt0.c1 IN ()), ((t1.c1) BETWEEN (rt0.c1) AND ('-353562113')), (t1.c1 IN ())));
SELECT ALL * FROM vt0, rt0, t1 FULL OUTER JOIN vt1 ON STRFTIME((rt0.c1 IN ()), ((t1.c1) BETWEEN (rt0.c1) AND ('-353562113')), (t1.c1 IN ())) WHERE ((((t1.c2, (((('-567379974')OR(rt0.c1)))OR(vt1.c1)), ((vt1.c1) ISNULL)))<=((CASE t1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN t1.c2 WHEN 0X21519601 THEN vt1.c1 ELSE t1.c0 END, ((t1.c1) IS FALSE), DATE(vt0.c0, vt1.c0, t1.c0)))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN rt0 ON CAST((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, vt1.c1, t1.c1)) AND ((vt1.c1, vt1.c0, vt0.c1))) AS BLOB) LEFT OUTER JOIN vt0 ON IFNULL((t1.c2 IN (t1.c1, 0.08187608216157138)), ((t1.c1) IS TRUE)) WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN (LOWER(t1.c0)) AND (((rt0.c2)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT BETWEEN (LOWER(t1.c0)) AND (((rt0.c2)||(rt0.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN rt0 ON CAST((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, vt1.c1, t1.c1)) AND ((vt1.c1, vt1.c0, vt0.c1))) AS BLOB) LEFT OUTER JOIN vt0 ON IFNULL((t1.c2 IN (t1.c1, 0.08187608216157138)), ((t1.c1) IS TRUE)));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN rt0 ON CAST((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, vt1.c1, t1.c1)) AND ((vt1.c1, vt1.c0, vt0.c1))) AS BLOB) LEFT OUTER JOIN vt0 ON IFNULL((t1.c2 IN (t1.c1, 0.08187608216157138)), ((t1.c1) IS TRUE)) WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN (LOWER(t1.c0)) AND (((rt0.c2)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT BETWEEN (LOWER(t1.c0)) AND (((rt0.c2)||(rt0.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) RIGHT OUTER JOIN rt0 ON CAST((((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1, vt1.c1, t1.c1)) AND ((vt1.c1, vt1.c0, vt0.c1))) AS BLOB) LEFT OUTER JOIN vt0 ON IFNULL((t1.c2 IN (t1.c1, 0.08187608216157138)), ((t1.c1) IS TRUE)));
SELECT * FROM vt1, rt0 WHERE (CAST(((((vt1.c0)OR(rt0.c1)))OR(0.2220871826227927)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(rt0.c1)))OR(0.2220871826227927)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CAST(((((vt1.c0)OR(rt0.c1)))OR(0.2220871826227927)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(rt0.c1)))OR(0.2220871826227927)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CAST(((((vt1.c0)OR(rt0.c1)))OR(0.2220871826227927)) AS TEXT));
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS FIRST, CAST('' AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, CAST('' AS REAL) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS FIRST, CAST('' AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, CAST('' AS REAL) COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS FIRST, CAST('' AS REAL) COLLATE BINARY ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS REAL))AND(vt0.c0))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC, ((((0.41591880256084146)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ()), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC, ((((0.41591880256084146)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ()), NULL DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS REAL))AND(vt0.c0))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC, ((((0.41591880256084146)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ()), NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC, ((((0.41591880256084146)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ()), NULL DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS REAL))AND(vt0.c0))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC, ((((0.41591880256084146)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ()), NULL DESC  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON vt1.c0 RIGHT OUTER JOIN vt1 ON CASE t1.c1 COLLATE BINARY  WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(t1.c0 AS TEXT) END WHERE (((t1.c1 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON vt1.c0 RIGHT OUTER JOIN vt1 ON CASE t1.c1 COLLATE BINARY  WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(t1.c0 AS TEXT) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON vt1.c0 RIGHT OUTER JOIN vt1 ON CASE t1.c1 COLLATE BINARY  WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(t1.c0 AS TEXT) END WHERE (((t1.c1 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON vt1.c0 RIGHT OUTER JOIN vt1 ON CASE t1.c1 COLLATE BINARY  WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(t1.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<((((rt0.c1))<((0.02624218026851055))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))<((((rt0.c1))<((0.02624218026851055)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<((((rt0.c1))<((0.02624218026851055))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))<((((rt0.c1))<((0.02624218026851055)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<((((rt0.c1))<((0.02624218026851055))))));
SELECT ALL COUNT(*) FROM vt1, t1, rt0, vt0 WHERE (((t1.c2)<(((t1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((t1.c2)<(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1, t1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, rt0, vt0 WHERE (((t1.c2)<(((t1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((t1.c2)<(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1, t1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, rt0, vt0 WHERE (((t1.c2)<(((t1.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON ((((CASE WHEN t1.c1 THEN rt0.c2 ELSE x'' END)OR(rt0.c0)))OR(((0Xffffffffa2008726)|(vt0.c0)))) WHERE ((((((((t1.c0)AND(t1.c1)))AND(t1.c2)), t1.c0 COLLATE NOCASE, 0.9036451098825311))>((JULIANDAY(t1.c2, rt0.c0, vt0.c0), ((('', vt0.c1, t1.c0))<((vt0.c1, t1.c2, rt0.c0))), (((('569331710')OR(0.5745536949627583)))AND(vt0.c1)))))) ORDER BY (((~ (t1.c0)))>>(((t1.c2)>=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t1.c0)AND(t1.c1)))AND(t1.c2)), t1.c0 COLLATE NOCASE, 0.9036451098825311))>((JULIANDAY(t1.c2, rt0.c0, vt0.c0), ((('', vt0.c1, t1.c0))<((vt0.c1, t1.c2, rt0.c0))), (((('569331710')OR(0.5745536949627583)))AND(vt0.c1)))))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON ((((CASE WHEN t1.c1 THEN rt0.c2 ELSE x'' END)OR(rt0.c0)))OR(((0Xffffffffa2008726)|(vt0.c0)))) ORDER BY (((~ (t1.c0)))>>(((t1.c2)>=(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON ((((CASE WHEN t1.c1 THEN rt0.c2 ELSE x'' END)OR(rt0.c0)))OR(((0Xffffffffa2008726)|(vt0.c0)))) WHERE ((((((((t1.c0)AND(t1.c1)))AND(t1.c2)), t1.c0 COLLATE NOCASE, 0.9036451098825311))>((JULIANDAY(t1.c2, rt0.c0, vt0.c0), ((('', vt0.c1, t1.c0))<((vt0.c1, t1.c2, rt0.c0))), (((('569331710')OR(0.5745536949627583)))AND(vt0.c1)))))) ORDER BY (((~ (t1.c0)))>>(((t1.c2)>=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((t1.c0)AND(t1.c1)))AND(t1.c2)), t1.c0 COLLATE NOCASE, 0.9036451098825311))>((JULIANDAY(t1.c2, rt0.c0, vt0.c0), ((('', vt0.c1, t1.c0))<((vt0.c1, t1.c2, rt0.c0))), (((('569331710')OR(0.5745536949627583)))AND(vt0.c1)))))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON ((((CASE WHEN t1.c1 THEN rt0.c2 ELSE x'' END)OR(rt0.c0)))OR(((0Xffffffffa2008726)|(vt0.c0)))) ORDER BY (((~ (t1.c0)))>>(((t1.c2)>=(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON ((((CASE WHEN t1.c1 THEN rt0.c2 ELSE x'' END)OR(rt0.c0)))OR(((0Xffffffffa2008726)|(vt0.c0)))) WHERE ((((((((t1.c0)AND(t1.c1)))AND(t1.c2)), t1.c0 COLLATE NOCASE, 0.9036451098825311))>((JULIANDAY(t1.c2, rt0.c0, vt0.c0), ((('', vt0.c1, t1.c0))<((vt0.c1, t1.c2, rt0.c0))), (((('569331710')OR(0.5745536949627583)))AND(vt0.c1)))))) ORDER BY (((~ (t1.c0)))>>(((t1.c2)>=(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt1.c1))>((rt0.c1)))) BETWEEN ((((((((('a)Sh)')AND(rt0.c0)))OR(vt1.c1)))AND(rt0.c1)))AND(rt0.c1))) AND ((NOT (rt0.c1)))) LEFT OUTER JOIN vt1 ON CASE WHEN NULLIF(vt0.c0, vt0.c1) THEN ((vt0.c0)OR(NULL)) ELSE CAST(rt0.c2 AS REAL) END WHERE ('-1529603424') ORDER BY ((vt0.c1 COLLATE BINARY)&(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) DESC  NULLS LAST, CAST(vt0.c1 AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1529603424') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt1.c1))>((rt0.c1)))) BETWEEN ((((((((('a)Sh)')AND(rt0.c0)))OR(vt1.c1)))AND(rt0.c1)))AND(rt0.c1))) AND ((NOT (rt0.c1)))) LEFT OUTER JOIN vt1 ON CASE WHEN NULLIF(vt0.c0, vt0.c1) THEN ((vt0.c0)OR(NULL)) ELSE CAST(rt0.c2 AS REAL) END ORDER BY ((vt0.c1 COLLATE BINARY)&(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) DESC  NULLS LAST, CAST(vt0.c1 AS TEXT) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt1.c1))>((rt0.c1)))) BETWEEN ((((((((('a)Sh)')AND(rt0.c0)))OR(vt1.c1)))AND(rt0.c1)))AND(rt0.c1))) AND ((NOT (rt0.c1)))) LEFT OUTER JOIN vt1 ON CASE WHEN NULLIF(vt0.c0, vt0.c1) THEN ((vt0.c0)OR(NULL)) ELSE CAST(rt0.c2 AS REAL) END WHERE ('-1529603424') ORDER BY ((vt0.c1 COLLATE BINARY)&(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) DESC  NULLS LAST, CAST(vt0.c1 AS TEXT) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1529603424') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt1.c1))>((rt0.c1)))) BETWEEN ((((((((('a)Sh)')AND(rt0.c0)))OR(vt1.c1)))AND(rt0.c1)))AND(rt0.c1))) AND ((NOT (rt0.c1)))) LEFT OUTER JOIN vt1 ON CASE WHEN NULLIF(vt0.c0, vt0.c1) THEN ((vt0.c0)OR(NULL)) ELSE CAST(rt0.c2 AS REAL) END ORDER BY ((vt0.c1 COLLATE BINARY)&(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) DESC  NULLS LAST, CAST(vt0.c1 AS TEXT) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM t1, vt1 WHERE (json_remove((~ (t1.c1)), vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((~ (t1.c1)), vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (json_remove((~ (t1.c1)), vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((~ (t1.c1)), vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (json_remove((~ (t1.c1)), vt1.c0 COLLATE RTRIM));
SELECT * FROM vt1 WHERE (-703461695);
SELECT SUM(count) FROM (SELECT ALL ((-703461695) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (-703461695);
SELECT SUM(count) FROM (SELECT ALL ((-703461695) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (-703461695);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1) BETWEEN (vt0.c1) AND ('2070981565')))OR(((t1.c1) IS TRUE))))OR((+ (t1.c1)))) WHERE ((((((t1.c0)AND(t1.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)AND(t1.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1) BETWEEN (vt0.c1) AND ('2070981565')))OR(((t1.c1) IS TRUE))))OR((+ (t1.c1)))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1) BETWEEN (vt0.c1) AND ('2070981565')))OR(((t1.c1) IS TRUE))))OR((+ (t1.c1)))) WHERE ((((((t1.c0)AND(t1.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)AND(t1.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1) BETWEEN (vt0.c1) AND ('2070981565')))OR(((t1.c1) IS TRUE))))OR((+ (t1.c1)))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((((vt0.c1) BETWEEN (vt0.c1) AND ('2070981565')))OR(((t1.c1) IS TRUE))))OR((+ (t1.c1)))) WHERE ((((((t1.c0)AND(t1.c0)))OR(vt0.c0)) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (COALESCE(rt0.c1, rt0.c0)) AND (CAST(0.6544787357276685 AS REAL))) WHERE ((rt0.c2 IN ())) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (COALESCE(rt0.c1, rt0.c0)) AND (CAST(0.6544787357276685 AS REAL))) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (COALESCE(rt0.c1, rt0.c0)) AND (CAST(0.6544787357276685 AS REAL))) WHERE ((rt0.c2 IN ())) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (COALESCE(rt0.c1, rt0.c0)) AND (CAST(0.6544787357276685 AS REAL))) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (COALESCE(rt0.c1, rt0.c0)) AND (CAST(0.6544787357276685 AS REAL))) WHERE ((rt0.c2 IN ())) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS FALSE) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)AND(vt0.c0)) IN ()) WHERE (((vt0.c1) NOT BETWEEN (((rt0.c2)/(x'7d6f'))) AND (LOWER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((rt0.c2)/(x'7d6f'))) AND (LOWER(rt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)AND(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)AND(vt0.c0)) IN ()) WHERE (((vt0.c1) NOT BETWEEN (((rt0.c2)/(x'7d6f'))) AND (LOWER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((rt0.c2)/(x'7d6f'))) AND (LOWER(rt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)AND(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((vt0.c1)AND(vt0.c0)) IN ()) WHERE (((vt0.c1) NOT BETWEEN (((rt0.c2)/(x'7d6f'))) AND (LOWER(rt0.c1))));
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c1);
SELECT * FROM t1, rt0, vt0 WHERE (('-1576359' IN ((+ (rt0.c1)), (((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((('-1576359' IN ((+ (rt0.c1)), (((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT * FROM t1, rt0, vt0 WHERE (('-1576359' IN ((+ (rt0.c1)), (((vt0.c0))<>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((('-1576359' IN ((+ (rt0.c1)), (((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT * FROM t1, rt0, vt0 WHERE (('-1576359' IN ((+ (rt0.c1)), (((vt0.c0))<>((vt0.c0))))));
SELECT ALL * FROM t1 WHERE ((((t1.c2)) BETWEEN ((((t1.c0) IS FALSE))) AND ((0X3e3af969))));
SELECT SUM(count) FROM (SELECT (((((t1.c2)) BETWEEN ((((t1.c0) IS FALSE))) AND ((0x3e3af969)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2)) BETWEEN ((((t1.c0) IS FALSE))) AND ((0X3e3af969))));
SELECT SUM(count) FROM (SELECT (((((t1.c2)) BETWEEN ((((t1.c0) IS FALSE))) AND ((0x3e3af969)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2)) BETWEEN ((((t1.c0) IS FALSE))) AND ((0X3e3af969))));
SELECT COUNT(*) FROM rt0, t1 WHERE (((CASE ''  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c2) AND (('|4' IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE ''  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c2) AND (('|4' IN (t1.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((CASE ''  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c2) AND (('|4' IN (t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE ''  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c2) AND (('|4' IN (t1.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((CASE ''  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c2) AND (('|4' IN (t1.c2)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0)), ((vt0.c0)>>(t1.c0)), vt0.c0 COLLATE RTRIM))>=((CAST(t1.c1 AS BLOB), ((t1.c2)GLOB(vt0.c0)), t1.c2)))) ORDER BY '-1668572660'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0)), ((vt0.c0)>>(t1.c0)), vt0.c0 COLLATE RTRIM))>=((CAST(t1.c1 AS BLOB), ((t1.c2)GLOB(vt0.c0)), t1.c2)))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0 ORDER BY '-1668572660'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0)), ((vt0.c0)>>(t1.c0)), vt0.c0 COLLATE RTRIM))>=((CAST(t1.c1 AS BLOB), ((t1.c2)GLOB(vt0.c0)), t1.c2)))) ORDER BY '-1668572660'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0)), ((vt0.c0)>>(t1.c0)), vt0.c0 COLLATE RTRIM))>=((CAST(t1.c1 AS BLOB), ((t1.c2)GLOB(vt0.c0)), t1.c2)))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0 ORDER BY '-1668572660'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0)), ((vt0.c0)>>(t1.c0)), vt0.c0 COLLATE RTRIM))>=((CAST(t1.c1 AS BLOB), ((t1.c2)GLOB(vt0.c0)), t1.c2)))) ORDER BY '-1668572660'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM t1, vt1 NOT INDEXED, rt0, vt0 WHERE (NULLIF(((((rt0.c2)AND(vt1.c0)))AND(vt1.c1)), (t1.c2 IN (vt1.c1)))) ORDER BY (((((rt0.c0, t1.c1, t1.c2, rt0.c2, t1.c0))=((vt1.c0, t1.c0, t1.c2, vt0.c0, rt0.c2)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c2)AND(vt1.c0)))AND(vt1.c1)), (t1.c2 IN (vt1.c1)))) IS TRUE)  as count FROM t1, vt1, rt0, vt0 ORDER BY (((((rt0.c0, t1.c1, t1.c2, rt0.c2, t1.c0))==((vt1.c0, t1.c0, t1.c2, vt0.c0, rt0.c2)))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1 NOT INDEXED, rt0, vt0 WHERE (NULLIF(((((rt0.c2)AND(vt1.c0)))AND(vt1.c1)), (t1.c2 IN (vt1.c1)))) ORDER BY (((((rt0.c0, t1.c1, t1.c2, rt0.c2, t1.c0))=((vt1.c0, t1.c0, t1.c2, vt0.c0, rt0.c2)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c2)AND(vt1.c0)))AND(vt1.c1)), (t1.c2 IN (vt1.c1)))) IS TRUE)  as count FROM t1, vt1, rt0, vt0 ORDER BY (((((rt0.c0, t1.c1, t1.c2, rt0.c2, t1.c0))==((vt1.c0, t1.c0, t1.c2, vt0.c0, rt0.c2)))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1 NOT INDEXED, rt0, vt0 WHERE (NULLIF(((((rt0.c2)AND(vt1.c0)))AND(vt1.c1)), (t1.c2 IN (vt1.c1)))) ORDER BY (((((rt0.c0, t1.c1, t1.c2, rt0.c2, t1.c0))=((vt1.c0, t1.c0, t1.c2, vt0.c0, rt0.c2)))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((('')<=((- (t1.c1))))) ORDER BY t1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')<=((- (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY t1.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((('')<=((- (t1.c1))))) ORDER BY t1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')<=((- (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY t1.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((('')<=((- (t1.c1))))) ORDER BY t1.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))AND(x'')))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)) WHEN CAST('' AS INTEGER) THEN ((((x'')OR(vt1.c0)))AND(vt0.c0)) WHEN (((vt0.c1, vt0.c1, vt1.c1))!=((vt1.c1, 0.8554445795396779, vt0.c0))) THEN ((vt1.c1) NOTNULL) END WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-985062584')))) BETWEEN (DATETIME(vt1.c1, vt0.c1, vt0.c1)) AND (CAST(vt1.c1 AS REAL)))) ORDER BY (((vt0.c0)>>(vt1.c1)) IN ()) ASC, CASE WHEN CAST('-668405028' AS BLOB) THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((+ (vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-985062584')))) BETWEEN (DATETIME(vt1.c1, vt0.c1, vt0.c1)) AND (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))AND(x'')))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)) WHEN CAST('' AS INTEGER) THEN ((((x'')OR(vt1.c0)))AND(vt0.c0)) WHEN (((vt0.c1, vt0.c1, vt1.c1))!=((vt1.c1, 0.8554445795396779, vt0.c0))) THEN ((vt1.c1) NOTNULL) END ORDER BY (((vt0.c0)>>(vt1.c1)) IN ()) ASC, CASE WHEN CAST('-668405028' AS BLOB) THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((+ (vt0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))AND(x'')))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)) WHEN CAST('' AS INTEGER) THEN ((((x'')OR(vt1.c0)))AND(vt0.c0)) WHEN (((vt0.c1, vt0.c1, vt1.c1))!=((vt1.c1, 0.8554445795396779, vt0.c0))) THEN ((vt1.c1) NOTNULL) END WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-985062584')))) BETWEEN (DATETIME(vt1.c1, vt0.c1, vt0.c1)) AND (CAST(vt1.c1 AS REAL)))) ORDER BY (((vt0.c0)>>(vt1.c1)) IN ()) ASC, CASE WHEN CAST('-668405028' AS BLOB) THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((+ (vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-985062584')))) BETWEEN (DATETIME(vt1.c1, vt0.c1, vt0.c1)) AND (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))AND(x'')))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)) WHEN CAST('' AS INTEGER) THEN ((((x'')OR(vt1.c0)))AND(vt0.c0)) WHEN (((vt0.c1, vt0.c1, vt1.c1))!=((vt1.c1, 0.8554445795396779, vt0.c0))) THEN ((vt1.c1) NOTNULL) END ORDER BY (((vt0.c0)>>(vt1.c1)) IN ()) ASC, CASE WHEN CAST('-668405028' AS BLOB) THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((+ (vt0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))AND(x'')))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)) WHEN CAST('' AS INTEGER) THEN ((((x'')OR(vt1.c0)))AND(vt0.c0)) WHEN (((vt0.c1, vt0.c1, vt1.c1))!=((vt1.c1, 0.8554445795396779, vt0.c0))) THEN ((vt1.c1) NOTNULL) END WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-985062584')))) BETWEEN (DATETIME(vt1.c1, vt0.c1, vt0.c1)) AND (CAST(vt1.c1 AS REAL)))) ORDER BY (((vt0.c0)>>(vt1.c1)) IN ()) ASC, CASE WHEN CAST('-668405028' AS BLOB) THEN vt1.c0 END, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (((+ (vt0.c1))))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((NOT ((+ (rt0.c2))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT (((NOT ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS REAL) IN ()));
SELECT * FROM rt0 WHERE ((NOT ((+ (rt0.c2))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT (((NOT ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS REAL) IN ()));
SELECT * FROM rt0 WHERE ((NOT ((+ (rt0.c2))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ());
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON ((vt1.c0)IS NOT((((((((('-1839728814')AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(NULL)))) FULL OUTER JOIN vt0 ON (((((((((- (vt0.c0)))AND(t1.c1)))AND((vt1.c1 IN ()))))AND(((t1.c1)||(0X52b66b61)))))OR(((rt0.c0) BETWEEN (t1.c2) AND (vt1.c1)))) WHERE ((((+ (vt0.c0))) IS TRUE)) ORDER BY (((rt0.c0) BETWEEN (vt1.c1) AND (vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON ((vt1.c0)IS NOT((((((((('-1839728814')AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(NULL)))) FULL OUTER JOIN vt0 ON (((((((((- (vt0.c0)))AND(t1.c1)))AND((vt1.c1 IN ()))))AND(((t1.c1)||(0x52b66b61)))))OR(((rt0.c0) BETWEEN (t1.c2) AND (vt1.c1)))) ORDER BY (((rt0.c0) BETWEEN (vt1.c1) AND (vt0.c1)) IN ()) DESC  NULLS LAST);
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON ((vt1.c0)IS NOT((((((((('-1839728814')AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(NULL)))) FULL OUTER JOIN vt0 ON (((((((((- (vt0.c0)))AND(t1.c1)))AND((vt1.c1 IN ()))))AND(((t1.c1)||(0X52b66b61)))))OR(((rt0.c0) BETWEEN (t1.c2) AND (vt1.c1)))) WHERE ((((+ (vt0.c0))) IS TRUE)) ORDER BY (((rt0.c0) BETWEEN (vt1.c1) AND (vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON ((vt1.c0)IS NOT((((((((('-1839728814')AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(NULL)))) FULL OUTER JOIN vt0 ON (((((((((- (vt0.c0)))AND(t1.c1)))AND((vt1.c1 IN ()))))AND(((t1.c1)||(0x52b66b61)))))OR(((rt0.c0) BETWEEN (t1.c2) AND (vt1.c1)))) ORDER BY (((rt0.c0) BETWEEN (vt1.c1) AND (vt0.c1)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t1 ON ((((((((JULIANDAY(t1.c0, vt0.c0, x''))AND(((rt0.c2)%(vt0.c1)))))OR(t1.c0)))AND((- (t1.c1)))))AND((('317247670') IS FALSE))) WHERE (json_array(CAST(vt0.c1 AS TEXT), (~ (vt0.c0)))) ORDER BY ((((t1.c0))<((t1.c0))) IN (((((t1.c0)OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array(CAST(vt0.c1 AS TEXT), (~ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON ((((((((JULIANDAY(t1.c0, vt0.c0, x''))AND(((rt0.c2)%(vt0.c1)))))OR(t1.c0)))AND((- (t1.c1)))))AND((('317247670') IS FALSE))) ORDER BY ((((t1.c0))<((t1.c0))) IN (((((t1.c0)OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t1 ON ((((((((JULIANDAY(t1.c0, vt0.c0, x''))AND(((rt0.c2)%(vt0.c1)))))OR(t1.c0)))AND((- (t1.c1)))))AND((('317247670') IS FALSE))) WHERE (json_array(CAST(vt0.c1 AS TEXT), (~ (vt0.c0)))) ORDER BY ((((t1.c0))<((t1.c0))) IN (((((t1.c0)OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array(CAST(vt0.c1 AS TEXT), (~ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON ((((((((JULIANDAY(t1.c0, vt0.c0, x''))AND(((rt0.c2)%(vt0.c1)))))OR(t1.c0)))AND((- (t1.c1)))))AND((('317247670') IS FALSE))) ORDER BY ((((t1.c0))<((t1.c0))) IN (((((t1.c0)OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t1 ON ((((((((JULIANDAY(t1.c0, vt0.c0, x''))AND(((rt0.c2)%(vt0.c1)))))OR(t1.c0)))AND((- (t1.c1)))))AND((('317247670') IS FALSE))) WHERE (json_array(CAST(vt0.c1 AS TEXT), (~ (vt0.c0)))) ORDER BY ((((t1.c0))<((t1.c0))) IN (((((t1.c0)OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ()), (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ()), (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ()), (vt0.c1 IN ()), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0 COLLATE BINARY))));
SELECT ALL * FROM rt0, t1, vt0, vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN vt0.c1 WHEN rt0.c0 COLLATE RTRIM THEN (+ (vt1.c1)) WHEN CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 END THEN t1.c2 COLLATE BINARY ELSE (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN vt0.c1 WHEN rt0.c0 COLLATE RTRIM THEN (+ (vt1.c1)) WHEN CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 END THEN t1.c2 COLLATE BINARY ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL * FROM rt0, t1, vt0, vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN vt0.c1 WHEN rt0.c0 COLLATE RTRIM THEN (+ (vt1.c1)) WHEN CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 END THEN t1.c2 COLLATE BINARY ELSE (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN vt0.c1 WHEN rt0.c0 COLLATE RTRIM THEN (+ (vt1.c1)) WHEN CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 END THEN t1.c2 COLLATE BINARY ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL * FROM rt0, t1, vt0, vt1 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN vt0.c1 WHEN rt0.c0 COLLATE RTRIM THEN (+ (vt1.c1)) WHEN CASE WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 END THEN t1.c2 COLLATE BINARY ELSE (rt0.c0 IN ()) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((rt0.c2) ISNULL))));
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2 COLLATE BINARY)>(((rt0.c1)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)>(((rt0.c1)+(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2 COLLATE BINARY)>(((rt0.c1)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)>(((rt0.c1)+(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c2 COLLATE BINARY)>(((rt0.c1)+(vt1.c0)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN ((vt1.c1)>(vt1.c1)) THEN ((vt0.c0)*(vt1.c0)) WHEN ((vt0.c1) ISNULL) THEN CAST(vt1.c0 AS REAL) WHEN (('-191339471')<>(vt0.c0)) THEN -1.672548677E9 ELSE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN ((vt1.c1)>(vt1.c1)) THEN ((vt0.c0)*(vt1.c0)) WHEN ((vt0.c1) ISNULL) THEN CAST(vt1.c0 AS REAL) WHEN (('-191339471')!=(vt0.c0)) THEN -1.672548677E9 ELSE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN ((vt1.c1)>(vt1.c1)) THEN ((vt0.c0)*(vt1.c0)) WHEN ((vt0.c1) ISNULL) THEN CAST(vt1.c0 AS REAL) WHEN (('-191339471')<>(vt0.c0)) THEN -1.672548677E9 ELSE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN ((vt1.c1)>(vt1.c1)) THEN ((vt0.c0)*(vt1.c0)) WHEN ((vt0.c1) ISNULL) THEN CAST(vt1.c0 AS REAL) WHEN (('-191339471')!=(vt0.c0)) THEN -1.672548677E9 ELSE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN ((vt1.c1)>(vt1.c1)) THEN ((vt0.c0)*(vt1.c0)) WHEN ((vt0.c1) ISNULL) THEN CAST(vt1.c0 AS REAL) WHEN (('-191339471')<>(vt0.c0)) THEN -1.672548677E9 ELSE ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c0)))OR(t1.c1)) AS INTEGER)) ORDER BY (('Wꥥ')>(((((((((((((t1.c1)AND(NULL)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c1)))AND(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c0)AND(t1.c0)))OR(t1.c1)) AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY (('Wꥥ')>(((((((((((((t1.c1)AND(NULL)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c1)))AND(t1.c0)))) ASC);
SELECT COUNT(*) FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c0)))OR(t1.c1)) AS INTEGER)) ORDER BY (('Wꥥ')>(((((((((((((t1.c1)AND(NULL)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c1)))AND(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c0)AND(t1.c0)))OR(t1.c1)) AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY (('Wꥥ')>(((((((((((((t1.c1)AND(NULL)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c1)))AND(t1.c0)))) ASC);
SELECT COUNT(*) FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c0)))OR(t1.c1)) AS INTEGER)) ORDER BY (('Wꥥ')>(((((((((((((t1.c1)AND(NULL)))AND(t1.c0)))AND(t1.c2)))AND(t1.c2)))OR(t1.c1)))AND(t1.c0)))) ASC;
SELECT ALL * FROM rt0, vt1 WHERE (((TRIM(DISTINCT vt1.c0, rt0.c2))OR(CASE rt0.c1  WHEN vt1.c1 THEN x'' ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, rt0.c2))OR(CASE rt0.c1  WHEN vt1.c1 THEN x'' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((TRIM(DISTINCT vt1.c0, rt0.c2))OR(CASE rt0.c1  WHEN vt1.c1 THEN x'' ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, rt0.c2))OR(CASE rt0.c1  WHEN vt1.c1 THEN x'' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((TRIM(DISTINCT vt1.c0, rt0.c2))OR(CASE rt0.c1  WHEN vt1.c1 THEN x'' ELSE rt0.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) ORDER BY (((NOT (rt0.c0)))==((NOT ('14')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))==((NOT ('14')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) ORDER BY (((NOT (rt0.c0)))==((NOT ('14')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))==((NOT ('14')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) ORDER BY (((NOT (rt0.c0)))==((NOT ('14')))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1)))) AND (((NOT (vt0.c0))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1)))) AND (((NOT (vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1)))) AND (((NOT (vt0.c0))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1)))) AND (((NOT (vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1)))) AND (((NOT (vt0.c0))))) WHERE (x'');
SELECT * FROM vt1, t1, vt0, rt0 WHERE (((((((((((t1.c2)+(vt0.c1)))OR(rt0.c1)))OR(((t1.c1)|(vt0.c1)))))AND(rt0.c1 COLLATE NOCASE)))AND(UNICODE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c2)+(vt0.c1)))OR(rt0.c1)))OR(((t1.c1)|(vt0.c1)))))AND(rt0.c1 COLLATE NOCASE)))AND(UNICODE(rt0.c2)))) IS TRUE)  as count FROM vt1, t1 NOT INDEXED, vt0, rt0);
SELECT * FROM vt1, t1, vt0, rt0 WHERE (((((((((((t1.c2)+(vt0.c1)))OR(rt0.c1)))OR(((t1.c1)|(vt0.c1)))))AND(rt0.c1 COLLATE NOCASE)))AND(UNICODE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c2)+(vt0.c1)))OR(rt0.c1)))OR(((t1.c1)|(vt0.c1)))))AND(rt0.c1 COLLATE NOCASE)))AND(UNICODE(rt0.c2)))) IS TRUE)  as count FROM vt1, t1 NOT INDEXED, vt0, rt0);
SELECT * FROM vt1, t1, vt0, rt0 WHERE (((((((((((t1.c2)+(vt0.c1)))OR(rt0.c1)))OR(((t1.c1)|(vt0.c1)))))AND(rt0.c1 COLLATE NOCASE)))AND(UNICODE(rt0.c2))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 ELSE (vt1.c0 IN ()) END) ORDER BY ((x'') ISNULL)  NULLS LAST, ((CASE WHEN rt0.c2 THEN vt1.c0 END)<(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((x'') ISNULL)  NULLS LAST, ((CASE WHEN rt0.c2 THEN vt1.c0 END)<(rt0.c2)) DESC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 ELSE (vt1.c0 IN ()) END) ORDER BY ((x'') ISNULL)  NULLS LAST, ((CASE WHEN rt0.c2 THEN vt1.c0 END)<(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((x'') ISNULL)  NULLS LAST, ((CASE WHEN rt0.c2 THEN vt1.c0 END)<(rt0.c2)) DESC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN vt1.c0 ELSE (vt1.c0 IN ()) END) ORDER BY ((x'') ISNULL)  NULLS LAST, ((CASE WHEN rt0.c2 THEN vt1.c0 END)<(rt0.c2)) DESC;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON vt0.c1 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c1);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON vt0.c1 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c1);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON vt0.c1 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt1, t1 WHERE (((((vt1.c1) NOTNULL))-(((t1.c2)<=(vt1.c0))))) ORDER BY -0.0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL))-(((t1.c2)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY -0.0  NULLS LAST);
SELECT ALL * FROM vt1, t1 WHERE (((((vt1.c1) NOTNULL))-(((t1.c2)<=(vt1.c0))))) ORDER BY -0.0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL))-(((t1.c2)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY -0.0  NULLS LAST);
SELECT ALL * FROM vt1, t1 WHERE (((((vt1.c1) NOTNULL))-(((t1.c2)<=(vt1.c0))))) ORDER BY -0.0  NULLS LAST;
SELECT * FROM rt0, vt0, t1, vt1 WHERE (((((((t1.c1)OR(rt0.c2)))OR(t1.c2)))IS((+ (0.14474151292721016)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c1)OR(rt0.c2)))OR(t1.c2)))IS((+ (0.14474151292721016))))) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT * FROM rt0, vt0, t1, vt1 WHERE (((((((t1.c1)OR(rt0.c2)))OR(t1.c2)))IS((+ (0.14474151292721016)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c1)OR(rt0.c2)))OR(t1.c2)))IS((+ (0.14474151292721016))))) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT * FROM rt0, vt0, t1, vt1 WHERE (((((((t1.c1)OR(rt0.c2)))OR(t1.c2)))IS((+ (0.14474151292721016)))));
SELECT ALL * FROM rt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((LIKE(vt0.c1, rt0.c0, 'C'))IS NOT(((rt0.c2)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt0.c1, rt0.c0, 'C'))IS NOT(((rt0.c2)>=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((LIKE(vt0.c1, rt0.c0, 'C'))IS NOT(((rt0.c2)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt0.c1, rt0.c0, 'C'))IS NOT(((rt0.c2)>=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((LIKE(vt0.c1, rt0.c0, 'C'))IS NOT(((rt0.c2)>=(rt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((SQLITE_VERSION())OR(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))OR((rt0.c1 IN ())))) ORDER BY json(((rt0.c1) BETWEEN (vt1.c0) AND (NULL))), CASE ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((SQLITE_VERSION())OR(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY json(((rt0.c1) BETWEEN (vt1.c0) AND (NULL))), CASE ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((SQLITE_VERSION())OR(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))OR((rt0.c1 IN ())))) ORDER BY json(((rt0.c1) BETWEEN (vt1.c0) AND (NULL))), CASE ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((SQLITE_VERSION())OR(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0 ORDER BY json(((rt0.c1) BETWEEN (vt1.c0) AND (NULL))), CASE ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((((SQLITE_VERSION())OR(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))OR((rt0.c1 IN ())))) ORDER BY json(((rt0.c1) BETWEEN (vt1.c0) AND (NULL))), CASE ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c0)))AND(rt0.c2))  WHEN rt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN rt0 ON (- (UNLIKELY(DISTINCT t1.c1))) LEFT OUTER JOIN t1 ON ((UNLIKELY(DISTINCT t1.c1)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c1)))) AND ((t1.c0 IN (t1.c0, t1.c1)))) FULL OUTER JOIN vt1 ON NULLIF(vt1.c1, ((t1.c1)=(vt0.c0))) WHERE (((((rt0.c0) IS TRUE)) NOTNULL)) ORDER BY ((((rt0.c0)IS(t1.c2)))/(((rt0.c1)>>(x'1ab6')))) ASC  NULLS LAST, (((((vt0.c1))<=((0.024960993560495193)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (- (UNLIKELY(DISTINCT t1.c1))) LEFT OUTER JOIN t1 ON ((UNLIKELY(DISTINCT t1.c1)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c1)))) AND ((t1.c0 IN (t1.c0, t1.c1)))) FULL OUTER JOIN vt1 ON NULLIF(vt1.c1, ((t1.c1)=(vt0.c0))) ORDER BY ((((rt0.c0)IS(t1.c2)))/(((rt0.c1)>>(x'1ab6')))) ASC  NULLS LAST, (((((vt0.c1))<=((0.024960993560495193)))) IS FALSE));
SELECT * FROM vt0 CROSS JOIN rt0 ON (- (UNLIKELY(DISTINCT t1.c1))) LEFT OUTER JOIN t1 ON ((UNLIKELY(DISTINCT t1.c1)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c1)))) AND ((t1.c0 IN (t1.c0, t1.c1)))) FULL OUTER JOIN vt1 ON NULLIF(vt1.c1, ((t1.c1)=(vt0.c0))) WHERE (((((rt0.c0) IS TRUE)) NOTNULL)) ORDER BY ((((rt0.c0)IS(t1.c2)))/(((rt0.c1)>>(x'1ab6')))) ASC  NULLS LAST, (((((vt0.c1))<=((0.024960993560495193)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (- (UNLIKELY(DISTINCT t1.c1))) LEFT OUTER JOIN t1 ON ((UNLIKELY(DISTINCT t1.c1)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c1)))) AND ((t1.c0 IN (t1.c0, t1.c1)))) FULL OUTER JOIN vt1 ON NULLIF(vt1.c1, ((t1.c1)=(vt0.c0))) ORDER BY ((((rt0.c0)IS(t1.c2)))/(((rt0.c1)>>(x'1ab6')))) ASC  NULLS LAST, (((((vt0.c1))<=((0.024960993560495193)))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN t1 ON (((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) IN ()) WHERE (json_valid(t1.c1));
SELECT SUM(count) FROM (SELECT ((json_valid(t1.c1)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t1 ON (((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN t1 ON (((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) IN ()) WHERE (json_valid(t1.c1));
SELECT SUM(count) FROM (SELECT ((json_valid(t1.c1)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t1 ON (((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN t1 ON (((((rt0.c1)AND(vt1.c1)))AND(vt1.c0)) IN ()) WHERE (json_valid(t1.c1));
SELECT ALL COUNT(*) FROM vt1 WHERE (load_extension(((vt1.c1) NOTNULL), vt1.c0 COLLATE NOCASE)) ORDER BY ((CAST(vt1.c0 AS BLOB))<>(vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((load_extension(((vt1.c1) NOTNULL), vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))<>(vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (load_extension(((vt1.c1) NOTNULL), vt1.c0 COLLATE NOCASE)) ORDER BY ((CAST(vt1.c0 AS BLOB))<>(vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((load_extension(((vt1.c1) NOTNULL), vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))<>(vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM t1, vt1 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c2)/(t1.c0))) BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(t1.c2 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c2)/(t1.c0))) BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(t1.c2 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c2)/(t1.c0))) BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(t1.c2 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c2)/(t1.c0))) BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(t1.c2 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c2)/(t1.c0))) BETWEEN (((vt1.c0)/(vt1.c0))) AND (CAST(t1.c2 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)LIKE(rt0.c1)) AS BLOB)) ORDER BY ((CAST(x'' AS INTEGER)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)LIKE(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(x'' AS INTEGER)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)LIKE(rt0.c1)) AS BLOB)) ORDER BY ((CAST(x'' AS INTEGER)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)LIKE(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(x'' AS INTEGER)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)LIKE(rt0.c1)) AS BLOB)) ORDER BY ((CAST(x'' AS INTEGER)) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON t1.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON t1.c0);
SELECT ALL * FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON t1.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON t1.c0);
SELECT ALL * FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON t1.c0 WHERE (NULL);
SELECT * FROM vt0, t1 LEFT OUTER JOIN rt0 ON t1.c0 WHERE (UPPER(DISTINCT ((((((((t1.c0)OR(rt0.c1)))OR(rt0.c2)))AND(t1.c0)))AND(t1.c2)))) ORDER BY ((((((((t1.c1)AND(vt0.c1)))OR(t1.c2)))AND(t1.c1)))AND('-1529603424')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((((((((t1.c0)OR(rt0.c1)))OR(rt0.c2)))AND(t1.c0)))AND(t1.c2)))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON t1.c0 ORDER BY ((((((((t1.c1)AND(vt0.c1)))OR(t1.c2)))AND(t1.c1)))AND('-1529603424')) COLLATE RTRIM);
SELECT * FROM vt0, t1 LEFT OUTER JOIN rt0 ON t1.c0 WHERE (UPPER(DISTINCT ((((((((t1.c0)OR(rt0.c1)))OR(rt0.c2)))AND(t1.c0)))AND(t1.c2)))) ORDER BY ((((((((t1.c1)AND(vt0.c1)))OR(t1.c2)))AND(t1.c1)))AND('-1529603424')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((((((((t1.c0)OR(rt0.c1)))OR(rt0.c2)))AND(t1.c0)))AND(t1.c2)))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON t1.c0 ORDER BY ((((((((t1.c1)AND(vt0.c1)))OR(t1.c2)))AND(t1.c1)))AND('-1529603424')) COLLATE RTRIM);
SELECT * FROM vt0, t1 LEFT OUTER JOIN rt0 ON t1.c0 WHERE (UPPER(DISTINCT ((((((((t1.c0)OR(rt0.c1)))OR(rt0.c2)))AND(t1.c0)))AND(t1.c2)))) ORDER BY ((((((((t1.c1)AND(vt0.c1)))OR(t1.c2)))AND(t1.c1)))AND('-1529603424')) COLLATE RTRIM;
SELECT ALL * FROM t1 WHERE ((+ (((t1.c1)>=(t1.c0))))) ORDER BY (((-1454879856)) BETWEEN ((PRINTF(t1.c0, t1.c0, t1.c1, t1.c1, 0.09888294012033916, t1.c0, t1.c1))) AND ((json_type(t1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t1.c1)>=(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((-1454879856)) BETWEEN ((PRINTF(t1.c0, t1.c0, t1.c1, t1.c1, 0.09888294012033916, t1.c0, t1.c1))) AND ((json_type(t1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((+ (((t1.c1)>=(t1.c0))))) ORDER BY (((-1454879856)) BETWEEN ((PRINTF(t1.c0, t1.c0, t1.c1, t1.c1, 0.09888294012033916, t1.c0, t1.c1))) AND ((json_type(t1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t1.c1)>=(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY (((-1454879856)) BETWEEN ((PRINTF(t1.c0, t1.c0, t1.c1, t1.c1, 0.09888294012033916, t1.c0, t1.c1))) AND ((json_type(t1.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((+ (((t1.c1)>=(t1.c0))))) ORDER BY (((-1454879856)) BETWEEN ((PRINTF(t1.c0, t1.c0, t1.c1, t1.c1, 0.09888294012033916, t1.c0, t1.c1))) AND ((json_type(t1.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE x''  WHEN ((rt0.c2) IS TRUE) THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((rt0.c2) IS TRUE) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE x''  WHEN ((rt0.c2) IS TRUE) THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((rt0.c2) IS TRUE) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE x''  WHEN ((rt0.c2) IS TRUE) THEN (+ (rt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<>(LIKELIHOOD(vt0.c0, 0.1261813281867843)))) ORDER BY 0Xfffffffff994c66e COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<>(LIKELIHOOD(vt0.c0, 0.1261813281867843)))) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffff994c66e COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<>(LIKELIHOOD(vt0.c0, 0.1261813281867843)))) ORDER BY 0Xfffffffff994c66e COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<>(LIKELIHOOD(vt0.c0, 0.1261813281867843)))) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffff994c66e COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<>(LIKELIHOOD(vt0.c0, 0.1261813281867843)))) ORDER BY 0Xfffffffff994c66e COLLATE NOCASE DESC;
SELECT * FROM vt0, rt0, t1, vt1 WHERE ((('') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT * FROM vt0, rt0, t1, vt1 WHERE ((('') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT * FROM vt0, rt0, t1, vt1 WHERE ((('') IS FALSE));
SELECT ALL * FROM t1, vt0 WHERE ((NOT (((t1.c0) BETWEEN (vt0.c1) AND (t1.c2))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c0) BETWEEN (vt0.c1) AND (t1.c2))))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((NOT (((t1.c0) BETWEEN (vt0.c1) AND (t1.c2))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c0) BETWEEN (vt0.c1) AND (t1.c2))))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((NOT (((t1.c0) BETWEEN (vt0.c1) AND (t1.c2))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM vt1, t1 WHERE (((((t1.c1) NOTNULL))>=(vt1.c1 COLLATE NOCASE))) ORDER BY (t1.c1 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOTNULL))>=(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1 ORDER BY (t1.c1 IN ()) COLLATE BINARY ASC);
SELECT * FROM vt1, t1 WHERE (((((t1.c1) NOTNULL))>=(vt1.c1 COLLATE NOCASE))) ORDER BY (t1.c1 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOTNULL))>=(vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1 ORDER BY (t1.c1 IN ()) COLLATE BINARY ASC);
SELECT * FROM vt1, t1 WHERE (((((t1.c1) NOTNULL))>=(vt1.c1 COLLATE NOCASE))) ORDER BY (t1.c1 IN ()) COLLATE BINARY ASC;
SELECT * FROM t1 WHERE ((((- (t1.c2))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c2) AND (NULL))) AND (CASE t1.c2  WHEN 'uo_/' THEN t1.c1 END))) ORDER BY x'e3c7' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (t1.c2))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c2) AND (NULL))) AND (CASE t1.c2  WHEN 'uo_/' THEN t1.c1 END))) IS TRUE)  as count FROM t1 ORDER BY x'e3c7' DESC  NULLS FIRST);
SELECT * FROM t1 WHERE ((((- (t1.c2))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c2) AND (NULL))) AND (CASE t1.c2  WHEN 'uo_/' THEN t1.c1 END))) ORDER BY x'e3c7' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (t1.c2))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c2) AND (NULL))) AND (CASE t1.c2  WHEN 'uo_/' THEN t1.c1 END))) IS TRUE)  as count FROM t1 ORDER BY x'e3c7' DESC  NULLS FIRST);
SELECT * FROM t1 WHERE ((((- (t1.c2))) NOT BETWEEN (((t1.c1) BETWEEN (t1.c2) AND (NULL))) AND (CASE t1.c2  WHEN 'uo_/' THEN t1.c1 END))) ORDER BY x'e3c7' DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, rt0, vt1 WHERE (CASE WHEN (- (vt1.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t1.c2 THEN vt0.c1 ELSE rt0.c1 END WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS TEXT) WHEN (+ (vt1.c0)) THEN json_object(vt0.c0, vt1.c1) END) ORDER BY (((vt0.c1) IS FALSE) IN (LIKELY('0.24295869180030016'), ((vt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t1.c2 THEN vt0.c1 ELSE rt0.c1 END WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS TEXT) WHEN (+ (vt1.c0)) THEN json_object(vt0.c0, vt1.c1) END) IS TRUE)  as count FROM vt0, t1, rt0, vt1 ORDER BY (((vt0.c1) IS FALSE) IN (LIKELY('0.24295869180030016'), ((vt0.c1) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM vt0, t1, rt0, vt1 WHERE (CASE WHEN (- (vt1.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t1.c2 THEN vt0.c1 ELSE rt0.c1 END WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS TEXT) WHEN (+ (vt1.c0)) THEN json_object(vt0.c0, vt1.c1) END) ORDER BY (((vt0.c1) IS FALSE) IN (LIKELY('0.24295869180030016'), ((vt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c1)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN t1.c2 THEN vt0.c1 ELSE rt0.c1 END WHEN CAST(vt0.c1 AS NUMERIC) THEN CAST(rt0.c2 AS TEXT) WHEN (+ (vt1.c0)) THEN json_object(vt0.c0, vt1.c1) END) IS TRUE)  as count FROM vt0, t1, rt0, vt1 ORDER BY (((vt0.c1) IS FALSE) IN (LIKELY('0.24295869180030016'), ((vt0.c1) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0))<>((t1.c0))) COLLATE BINARY) ORDER BY ((CASE t1.c2  WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)|(json_patch(0xffffffffbb961171, t1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0))<>((t1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c2  WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)|(json_patch(0Xffffffffbb961171, t1.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0))<>((t1.c0))) COLLATE BINARY) ORDER BY ((CASE t1.c2  WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)|(json_patch(0xffffffffbb961171, t1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0))<>((t1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c2  WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)|(json_patch(0Xffffffffbb961171, t1.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0))<>((t1.c0))) COLLATE BINARY) ORDER BY ((CASE t1.c2  WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)|(json_patch(0xffffffffbb961171, t1.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, rt0, vt1 WHERE ((((vt1.c1 IN (t1.c2))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c0)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (t1.c2))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM t1, vt0, rt0, vt1);
SELECT COUNT(*) FROM t1, vt0, rt0, vt1 WHERE ((((vt1.c1 IN (t1.c2))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c0)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (t1.c2))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM t1, vt0, rt0, vt1);
SELECT COUNT(*) FROM t1, vt0, rt0, vt1 WHERE ((((vt1.c1 IN (t1.c2))) NOT BETWEEN ((- (vt0.c1))) AND (((vt0.c0)IS(vt0.c1)))));
SELECT * FROM t1 WHERE (TYPEOF(((t1.c0) NOT BETWEEN ('-37650012') AND (t1.c0)))) ORDER BY (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))OR(t1.c0 COLLATE NOCASE)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t1.c0) NOT BETWEEN ('-37650012') AND (t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))OR(t1.c0 COLLATE NOCASE)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (TYPEOF(((t1.c0) NOT BETWEEN ('-37650012') AND (t1.c0)))) ORDER BY (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))OR(t1.c0 COLLATE NOCASE)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t1.c0) NOT BETWEEN ('-37650012') AND (t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))OR(t1.c0 COLLATE NOCASE)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (TYPEOF(((t1.c0) NOT BETWEEN ('-37650012') AND (t1.c0)))) ORDER BY (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))))OR(t1.c0 COLLATE NOCASE)))AND(((((t1.c0)OR(t1.c0)))OR(t1.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0, t1, vt1 WHERE (((+ (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT * FROM rt0, t1, vt1 WHERE (((+ (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c1)) IN ())) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT * FROM rt0, t1, vt1 WHERE (((+ (vt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))AND('')))AND((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c0, rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))AND('')))AND((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c0, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))AND('')))AND((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c0, rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))AND('')))AND((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c0, rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c2, rt0.c1, rt0.c0))))AND('')))AND((((rt0.c2, rt0.c1, rt0.c2))>((rt0.c0, rt0.c0, rt0.c0))))));
SELECT COUNT(*) FROM t1, vt1, rt0 WHERE ((- (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c2)IS(']p?X')) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY ((rt0.c2)IS(']p?X')) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, rt0 WHERE ((- (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c2)IS(']p?X')) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY ((rt0.c2)IS(']p?X')) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, rt0 WHERE ((- (((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c2)IS(']p?X')) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0 WHERE (CAST(((rt0.c1)==(vt1.c0)) AS REAL)) ORDER BY CASE ((((((((vt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(t1.c2)))OR(vt0.c1))  WHEN ((t1.c0)>=(rt0.c1)) THEN CAST(t1.c2 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)==(vt1.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY CASE ((((((((vt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(t1.c2)))OR(vt0.c1))  WHEN ((t1.c0)>=(rt0.c1)) THEN CAST(t1.c2 AS REAL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0 WHERE (CAST(((rt0.c1)==(vt1.c0)) AS REAL)) ORDER BY CASE ((((((((vt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(t1.c2)))OR(vt0.c1))  WHEN ((t1.c0)>=(rt0.c1)) THEN CAST(t1.c2 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)==(vt1.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY CASE ((((((((vt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(t1.c2)))OR(vt0.c1))  WHEN ((t1.c0)>=(rt0.c1)) THEN CAST(t1.c2 AS REAL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0 WHERE (CAST(((rt0.c1)==(vt1.c0)) AS REAL)) ORDER BY CASE ((((((((vt1.c1)AND(rt0.c1)))AND(rt0.c0)))AND(t1.c2)))OR(vt0.c1))  WHEN ((t1.c0)>=(rt0.c1)) THEN CAST(t1.c2 AS REAL) END  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((CAST(t1.c1 AS TEXT)))) LEFT OUTER JOIN vt0 ON HEX(0.07605290947778365) FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY)|(rt0.c0)) WHERE (((((((t1.c2)LIKE('-1')))AND(0.3716179855268017)))AND(-1576359.0))) ORDER BY (((((rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, t1.c1, t1.c1)) AND (('', vt1.c0, rt0.c1)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c2)LIKE('-1')))AND(0.3716179855268017)))AND(-1576359.0))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((CAST(t1.c1 AS TEXT)))) LEFT OUTER JOIN vt0 ON HEX(0.07605290947778365) FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY)|(rt0.c0)) ORDER BY (((((rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, t1.c1, t1.c1)) AND (('', vt1.c0, rt0.c1)))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((CAST(t1.c1 AS TEXT)))) LEFT OUTER JOIN vt0 ON HEX(0.07605290947778365) FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY)|(rt0.c0)) WHERE (((((((t1.c2)LIKE('-1')))AND(0.3716179855268017)))AND(-1576359.0))) ORDER BY (((((rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, t1.c1, t1.c1)) AND (('', vt1.c0, rt0.c1)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c2)LIKE('-1')))AND(0.3716179855268017)))AND(-1576359.0))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (((rt0.c2)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((CAST(t1.c1 AS TEXT)))) LEFT OUTER JOIN vt0 ON HEX(0.07605290947778365) FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE BINARY)|(rt0.c0)) ORDER BY (((((rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((rt0.c0, t1.c1, t1.c1)) AND (('', vt1.c0, rt0.c1)))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt1, vt0 WHERE (json_insert(((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), ((t1.c2)>>(rt0.c2)), (vt0.c1 IN ()))) ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), ((t1.c2)>>(rt0.c2)), (vt0.c1 IN ()))) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt1, vt0 WHERE (json_insert(((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), ((t1.c2)>>(rt0.c2)), (vt0.c1 IN ()))) ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), ((t1.c2)>>(rt0.c2)), (vt0.c1 IN ()))) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt1, vt0 WHERE (json_insert(((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), ((t1.c2)>>(rt0.c2)), (vt0.c1 IN ()))) ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt1.c0 IN (vt1.c0)))) WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt1.c1))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c1))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt1.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt1.c0 IN (vt1.c0)))) WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt1.c1))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c1))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt1.c0 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt1.c0 IN (vt1.c0)))) WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt1.c1))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, 0X11eb0a71, vt0.c0)) AND ((vt0.c0, vt0.c1, NULL))))OR(TRIM(DISTINCT vt0.c1))))AND(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, 0X11eb0a71, vt0.c0)) AND ((vt0.c0, vt0.c1, NULL))))OR(TRIM(DISTINCT vt0.c1))))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, 0X11eb0a71, vt0.c0)) AND ((vt0.c0, vt0.c1, NULL))))OR(TRIM(DISTINCT vt0.c1))))AND(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, 0X11eb0a71, vt0.c0)) AND ((vt0.c0, vt0.c1, NULL))))OR(TRIM(DISTINCT vt0.c1))))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, 0X11eb0a71, vt0.c0)) AND ((vt0.c0, vt0.c1, NULL))))OR(TRIM(DISTINCT vt0.c1))))AND(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT NULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1, vt0, vt1 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT NULL));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT NULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1, vt0, vt1 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT NULL));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) NOT NULL) WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 FULL OUTER JOIN rt0 ON (((vt0.c1)) BETWEEN ((6.19270983E8)) AND ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN x'4d5d' WHEN vt0.c0 THEN rt0.c0 END))) WHERE (((((((rt0.c0)OR(vt1.c1)))AND(vt0.c0)))<<((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(vt1.c1)))AND(vt0.c0)))<<((t1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1 FULL OUTER JOIN rt0 ON (((vt0.c1)) BETWEEN ((6.19270983E8)) AND ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN x'4d5d' WHEN vt0.c0 THEN rt0.c0 END))));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 FULL OUTER JOIN rt0 ON (((vt0.c1)) BETWEEN ((6.19270983E8)) AND ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN x'4d5d' WHEN vt0.c0 THEN rt0.c0 END))) WHERE (((((((rt0.c0)OR(vt1.c1)))AND(vt0.c0)))<<((t1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(vt1.c1)))AND(vt0.c0)))<<((t1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1 FULL OUTER JOIN rt0 ON (((vt0.c1)) BETWEEN ((6.19270983E8)) AND ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN x'4d5d' WHEN vt0.c0 THEN rt0.c0 END))));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 FULL OUTER JOIN rt0 ON (((vt0.c1)) BETWEEN ((6.19270983E8)) AND ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN t1.c2 THEN x'4d5d' WHEN vt0.c0 THEN rt0.c0 END))) WHERE (((((((rt0.c0)OR(vt1.c1)))AND(vt0.c0)))<<((t1.c2 IN ()))));
SELECT COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (DATETIME(rt0.c0 COLLATE BINARY, rt0.c0, ((t1.c2)%(t1.c0)), HEX(DISTINCT t1.c0), ((((((((0Xfffffffff58279cd)AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))) ORDER BY -5.4771926E7 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c0 COLLATE BINARY, rt0.c0, ((t1.c2)%(t1.c0)), HEX(DISTINCT t1.c0), ((((((((0xfffffffff58279cd)AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t1, rt0 ORDER BY -5.4771926E7 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (DATETIME(rt0.c0 COLLATE BINARY, rt0.c0, ((t1.c2)%(t1.c0)), HEX(DISTINCT t1.c0), ((((((((0Xfffffffff58279cd)AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))) ORDER BY -5.4771926E7 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c0 COLLATE BINARY, rt0.c0, ((t1.c2)%(t1.c0)), HEX(DISTINCT t1.c0), ((((((((0xfffffffff58279cd)AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t1, rt0 ORDER BY -5.4771926E7 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (DATETIME(rt0.c0 COLLATE BINARY, rt0.c0, ((t1.c2)%(t1.c0)), HEX(DISTINCT t1.c0), ((((((((0Xfffffffff58279cd)AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))) ORDER BY -5.4771926E7 ASC  NULLS LAST;
SELECT * FROM t1, vt0 RIGHT OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON LIKELIHOOD(NULL, 0.9476508528675693) WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))) AND (((((t1.c2))=((vt0.c0))))))) ORDER BY (vt1.c0 COLLATE BINARY IN (t1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))) AND (((((t1.c2))=((vt0.c0))))))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON LIKELIHOOD(NULL, 0.9476508528675693) ORDER BY (vt1.c0 COLLATE BINARY IN (t1.c1)) ASC);
SELECT * FROM t1, vt0 RIGHT OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON LIKELIHOOD(NULL, 0.9476508528675693) WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))) AND (((((t1.c2))=((vt0.c0))))))) ORDER BY (vt1.c0 COLLATE BINARY IN (t1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))) AND (((((t1.c2))=((vt0.c0))))))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN rt0 ON LIKELIHOOD(NULL, 0.9476508528675693) ORDER BY (vt1.c0 COLLATE BINARY IN (t1.c1)) ASC);
SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(vt0.c1))) ISNULL) WHERE (CASE 0.9587728567957383  WHEN ((vt1.c1)+(rt0.c2)) THEN CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c1 END ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9587728567957383  WHEN ((vt1.c1)+(rt0.c2)) THEN CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c1 END ELSE vt1.c0 END) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(vt0.c1))) ISNULL));
SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(vt0.c1))) ISNULL) WHERE (CASE 0.9587728567957383  WHEN ((vt1.c1)+(rt0.c2)) THEN CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c1 END ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9587728567957383  WHEN ((vt1.c1)+(rt0.c2)) THEN CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c1 END ELSE vt1.c0 END) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(vt0.c1))) ISNULL));
SELECT ALL * FROM rt0, vt1 INNER JOIN vt0 ON ((((vt1.c0)>(vt0.c1))) ISNULL) WHERE (CASE 0.9587728567957383  WHEN ((vt1.c1)+(rt0.c2)) THEN CASE WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN vt0.c1 ELSE vt0.c1 END ELSE vt1.c0 END);
SELECT * FROM vt1, vt0, rt0, t1 WHERE (CAST(((t1.c1)&(x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1)&(x'')) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, rt0, t1);
SELECT * FROM vt1, vt0, rt0, t1 WHERE (CAST(((t1.c1)&(x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1)&(x'')) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, rt0, t1);
SELECT * FROM vt1, vt0, rt0, t1 WHERE (CAST(((t1.c1)&(x'')) AS TEXT));
SELECT ALL * FROM rt0, vt1, t1 WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, vt1, t1 ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t1 WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, vt1, t1 ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t1 WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((~ ('\n_')))&((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('\n_')))&((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((~ ('\n_')))&((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('\n_')))&((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((~ ('\n_')))&((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((((vt0.c0))<>((rt0.c0))))LIKE(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN '108791939' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((rt0.c2)AND(rt0.c0)))<<((((vt0.c1, NULL, rt0.c2)) NOT BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) ASC, ((CASE WHEN rt0.c1 THEN x'1249' WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END)<<(((rt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((rt0.c0))))LIKE(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN '108791939' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((rt0.c2)AND(rt0.c0)))<<((((vt0.c1, NULL, rt0.c2)) NOT BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) ASC, ((CASE WHEN rt0.c1 THEN x'1249' WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END)<<(((rt0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((((vt0.c0))<>((rt0.c0))))LIKE(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN '108791939' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((rt0.c2)AND(rt0.c0)))<<((((vt0.c1, NULL, rt0.c2)) NOT BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) ASC, ((CASE WHEN rt0.c1 THEN x'1249' WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END)<<(((rt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))!=((rt0.c0))))LIKE(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN '108791939' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((rt0.c2)AND(rt0.c0)))<<((((vt0.c1, NULL, rt0.c2)) NOT BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) ASC, ((CASE WHEN rt0.c1 THEN x'1249' WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END)<<(((rt0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((((((vt0.c0))<>((rt0.c0))))LIKE(CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN '108791939' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((((rt0.c2)AND(rt0.c0)))<<((((vt0.c1, NULL, rt0.c2)) NOT BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) ASC, ((CASE WHEN rt0.c1 THEN x'1249' WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END)<<(((rt0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE INNER JOIN t1 ON (((((((((t1.c1 IN (t1.c1, vt1.c0)))OR(((((((((0.7255254690900363)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(((((((((t1.c0)OR(vt1.c0)))OR(t1.c2)))OR(vt0.c0)))OR(vt0.c1)))))OR(((vt1.c0)IS(x'80fd')))))AND(LIKELIHOOD(t1.c1, 0.8601235654735779))) WHERE ((- (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE vt0.c1  WHEN vt1.c0 THEN t1.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE INNER JOIN t1 ON (((((((((t1.c1 IN (t1.c1, vt1.c0)))OR(((((((((0.7255254690900363)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(((((((((t1.c0)OR(vt1.c0)))OR(t1.c2)))OR(vt0.c0)))OR(vt0.c1)))))OR(((vt1.c0)IS(x'80fd')))))AND(LIKELIHOOD(t1.c1, 0.8601235654735779))) ORDER BY CASE vt0.c1  WHEN vt1.c0 THEN t1.c0 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE INNER JOIN t1 ON (((((((((t1.c1 IN (t1.c1, vt1.c0)))OR(((((((((0.7255254690900363)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(((((((((t1.c0)OR(vt1.c0)))OR(t1.c2)))OR(vt0.c0)))OR(vt0.c1)))))OR(((vt1.c0)IS(x'80fd')))))AND(LIKELIHOOD(t1.c1, 0.8601235654735779))) WHERE ((- (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE vt0.c1  WHEN vt1.c0 THEN t1.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE INNER JOIN t1 ON (((((((((t1.c1 IN (t1.c1, vt1.c0)))OR(((((((((0.7255254690900363)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(((((((((t1.c0)OR(vt1.c0)))OR(t1.c2)))OR(vt0.c0)))OR(vt0.c1)))))OR(((vt1.c0)IS(x'80fd')))))AND(LIKELIHOOD(t1.c1, 0.8601235654735779))) ORDER BY CASE vt0.c1  WHEN vt1.c0 THEN t1.c0 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE INNER JOIN t1 ON (((((((((t1.c1 IN (t1.c1, vt1.c0)))OR(((((((((0.7255254690900363)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))))AND(((((((((t1.c0)OR(vt1.c0)))OR(t1.c2)))OR(vt0.c0)))OR(vt0.c1)))))OR(((vt1.c0)IS(x'80fd')))))AND(LIKELIHOOD(t1.c1, 0.8601235654735779))) WHERE ((- (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE vt0.c1  WHEN vt1.c0 THEN t1.c0 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM vt1 INNER JOIN vt0 ON ABS(DISTINCT CAST(rt0.c1 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON '679602810' WHERE (json_type(CAST(rt0.c0 AS INTEGER))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0)OR(vt1.c0))) AND (CASE WHEN 0.8424827524387115 THEN vt1.c0 ELSE vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((json_type(CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ABS(DISTINCT CAST(rt0.c1 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON '679602810' ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0)OR(vt1.c0))) AND (CASE WHEN 0.8424827524387115 THEN vt1.c0 ELSE vt1.c0 END)) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON ABS(DISTINCT CAST(rt0.c1 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON '679602810' WHERE (json_type(CAST(rt0.c0 AS INTEGER))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0)OR(vt1.c0))) AND (CASE WHEN 0.8424827524387115 THEN vt1.c0 ELSE vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((json_type(CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ABS(DISTINCT CAST(rt0.c1 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON '679602810' ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0)OR(vt1.c0))) AND (CASE WHEN 0.8424827524387115 THEN vt1.c0 ELSE vt1.c0 END)) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT (vt1.c0))) ORDER BY (- ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (- ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c2))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT (vt1.c0))) ORDER BY (- ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (- ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c2))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT (vt1.c0))) ORDER BY (- ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c2))))) DESC;
SELECT ALL * FROM vt0, t1 WHERE (TRIM(CAST(t1.c0 AS TEXT))) ORDER BY t1.c1  NULLS LAST, ((CAST('-1736043789' AS REAL))<<((vt0.c1 IN (t1.c0, vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(t1.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c1  NULLS LAST, ((CAST('-1736043789' AS REAL))<<((vt0.c1 IN (t1.c0, vt0.c0)))) DESC);
SELECT ALL * FROM vt0, t1 WHERE (TRIM(CAST(t1.c0 AS TEXT))) ORDER BY t1.c1  NULLS LAST, ((CAST('-1736043789' AS REAL))<<((vt0.c1 IN (t1.c0, vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(t1.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c1  NULLS LAST, ((CAST('-1736043789' AS REAL))<<((vt0.c1 IN (t1.c0, vt0.c0)))) DESC);
SELECT ALL * FROM vt0, t1 WHERE (TRIM(CAST(t1.c0 AS TEXT))) ORDER BY t1.c1  NULLS LAST, ((CAST('-1736043789' AS REAL))<<((vt0.c1 IN (t1.c0, vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_USED((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((vt0.c1 IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_USED((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((vt0.c1 IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_USED((vt0.c1 IN ())));
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((vt0.c1 COLLATE BINARY)+(((x'')>>(t1.c2)))) RIGHT OUTER JOIN t1 ON CASE ((('1819664341')) NOT BETWEEN ((rt0.c0)) AND ((t1.c1)))  WHEN ((t1.c0) IS FALSE) THEN load_extension(t1.c2, vt0.c1) END WHERE ('-1655565127');
SELECT SUM(count) FROM (SELECT (('-1655565127') IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((vt0.c1 COLLATE BINARY)+(((x'')>>(t1.c2)))) RIGHT OUTER JOIN t1 ON CASE ((('1819664341')) NOT BETWEEN ((rt0.c0)) AND ((t1.c1)))  WHEN ((t1.c0) IS FALSE) THEN load_extension(t1.c2, vt0.c1) END);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((vt0.c1 COLLATE BINARY)+(((x'')>>(t1.c2)))) RIGHT OUTER JOIN t1 ON CASE ((('1819664341')) NOT BETWEEN ((rt0.c0)) AND ((t1.c1)))  WHEN ((t1.c0) IS FALSE) THEN load_extension(t1.c2, vt0.c1) END WHERE ('-1655565127');
SELECT SUM(count) FROM (SELECT (('-1655565127') IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN vt0 ON ((vt0.c1 COLLATE BINARY)+(((x'')>>(t1.c2)))) RIGHT OUTER JOIN t1 ON CASE ((('1819664341')) NOT BETWEEN ((rt0.c0)) AND ((t1.c1)))  WHEN ((t1.c0) IS FALSE) THEN load_extension(t1.c2, vt0.c1) END);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN rt0 ON CASE WHEN -1.7976931348623157E308 THEN rt0.c2 END FULL OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))OR(t1.c2)))OR('-1731067352')))OR(vt0.c0))) AND (CAST(rt0.c0 AS TEXT))) WHERE (CAST(CAST('Ec' AS BLOB) AS INTEGER)) ORDER BY 5.38421201E8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST('Ec' AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN rt0 ON CASE WHEN -1.7976931348623157E308 THEN rt0.c2 END FULL OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))OR(t1.c2)))OR('-1731067352')))OR(vt0.c0))) AND (CAST(rt0.c0 AS TEXT))) ORDER BY 5.38421201E8  NULLS FIRST);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN rt0 ON CASE WHEN -1.7976931348623157E308 THEN rt0.c2 END FULL OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))OR(t1.c2)))OR('-1731067352')))OR(vt0.c0))) AND (CAST(rt0.c0 AS TEXT))) WHERE (CAST(CAST('Ec' AS BLOB) AS INTEGER)) ORDER BY 5.38421201E8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST('Ec' AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN rt0 ON CASE WHEN -1.7976931348623157E308 THEN rt0.c2 END FULL OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))OR(t1.c2)))OR('-1731067352')))OR(vt0.c0))) AND (CAST(rt0.c0 AS TEXT))) ORDER BY 5.38421201E8  NULLS FIRST);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN rt0 ON CASE WHEN -1.7976931348623157E308 THEN rt0.c2 END FULL OUTER JOIN vt0 ON ((((rt0.c2) IS FALSE)) NOT BETWEEN (((((((((vt1.c0)OR(rt0.c0)))OR(t1.c2)))OR('-1731067352')))OR(vt0.c0))) AND (CAST(rt0.c0 AS TEXT))) WHERE (CAST(CAST('Ec' AS BLOB) AS INTEGER)) ORDER BY 5.38421201E8  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t1 ON ((NULL) BETWEEN (vt0.c1 COLLATE BINARY) AND (((((vt1.c0)OR(t1.c0)))OR(t1.c2)))) INNER JOIN vt0 ON ((((((((((((CAST(rt0.c0 AS TEXT))AND(rt0.c2)))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)-(rt0.c0)))))OR((('') NOT BETWEEN (t1.c0) AND (rt0.c0)))))OR('_b')))AND(((rt0.c1) NOT BETWEEN (t1.c1) AND (rt0.c2)))) WHERE (CASE WHEN ((x'') ISNULL) THEN ((((t1.c2)AND(t1.c1)))AND(vt1.c0)) ELSE ((((t1.c0)AND(vt1.c1)))AND(t1.c0)) END) ORDER BY (((rt0.c2)-('0.2764575485493387')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') ISNULL) THEN ((((t1.c2)AND(t1.c1)))AND(vt1.c0)) ELSE ((((t1.c0)AND(vt1.c1)))AND(t1.c0)) END) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t1 ON ((NULL) BETWEEN (vt0.c1 COLLATE BINARY) AND (((((vt1.c0)OR(t1.c0)))OR(t1.c2)))) INNER JOIN vt0 ON ((((((((((((CAST(rt0.c0 AS TEXT))AND(rt0.c2)))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)-(rt0.c0)))))OR((('') NOT BETWEEN (t1.c0) AND (rt0.c0)))))OR('_b')))AND(((rt0.c1) NOT BETWEEN (t1.c1) AND (rt0.c2)))) ORDER BY (((rt0.c2)-('0.2764575485493387')) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t1 ON ((NULL) BETWEEN (vt0.c1 COLLATE BINARY) AND (((((vt1.c0)OR(t1.c0)))OR(t1.c2)))) INNER JOIN vt0 ON ((((((((((((CAST(rt0.c0 AS TEXT))AND(rt0.c2)))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)-(rt0.c0)))))OR((('') NOT BETWEEN (t1.c0) AND (rt0.c0)))))OR('_b')))AND(((rt0.c1) NOT BETWEEN (t1.c1) AND (rt0.c2)))) WHERE (CASE WHEN ((x'') ISNULL) THEN ((((t1.c2)AND(t1.c1)))AND(vt1.c0)) ELSE ((((t1.c0)AND(vt1.c1)))AND(t1.c0)) END) ORDER BY (((rt0.c2)-('0.2764575485493387')) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'') ISNULL) THEN ((((t1.c2)AND(t1.c1)))AND(vt1.c0)) ELSE ((((t1.c0)AND(vt1.c1)))AND(t1.c0)) END) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t1 ON ((NULL) BETWEEN (vt0.c1 COLLATE BINARY) AND (((((vt1.c0)OR(t1.c0)))OR(t1.c2)))) INNER JOIN vt0 ON ((((((((((((CAST(rt0.c0 AS TEXT))AND(rt0.c2)))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)-(rt0.c0)))))OR((('') NOT BETWEEN (t1.c0) AND (rt0.c0)))))OR('_b')))AND(((rt0.c1) NOT BETWEEN (t1.c1) AND (rt0.c2)))) ORDER BY (((rt0.c2)-('0.2764575485493387')) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON '-344790908' RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE BINARY)>(((0.04131950167250453)||(rt0.c2)))) WHERE ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.5481915554453158))))!=(((rt0.c2)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.5481915554453158))))<>(((rt0.c2)&(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON '-344790908' RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE BINARY)>(((0.04131950167250453)||(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON '-344790908' RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE BINARY)>(((0.04131950167250453)||(rt0.c2)))) WHERE ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.5481915554453158))))!=(((rt0.c2)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.5481915554453158))))<>(((rt0.c2)&(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON '-344790908' RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE BINARY)>(((0.04131950167250453)||(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON '-344790908' RIGHT OUTER JOIN vt0 ON ((rt0.c2 COLLATE BINARY)>(((0.04131950167250453)||(rt0.c2)))) WHERE ((((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((0.5481915554453158))))!=(((rt0.c2)&(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON CASE CASE t1.c1  WHEN t1.c1 THEN vt0.c0 END  WHEN CAST(6.19270983E8 AS TEXT) THEN CAST(vt1.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((((((((0.03269756964328352)OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN ((vt1.c1) ISNULL) THEN CAST(t1.c2 AS TEXT) END WHERE (vt0.c1) ORDER BY (((- (vt0.c1)))||(CAST(t1.c2 AS INTEGER)))  NULLS LAST, ((((t1.c1)IS(t1.c0)))-(((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON CASE CASE t1.c1  WHEN t1.c1 THEN vt0.c0 END  WHEN CAST(6.19270983E8 AS TEXT) THEN CAST(vt1.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((((((((0.03269756964328352)OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN ((vt1.c1) ISNULL) THEN CAST(t1.c2 AS TEXT) END ORDER BY (((- (vt0.c1)))||(CAST(t1.c2 AS INTEGER)))  NULLS LAST, ((((t1.c1)IS(t1.c0)))-(((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON CASE CASE t1.c1  WHEN t1.c1 THEN vt0.c0 END  WHEN CAST(6.19270983E8 AS TEXT) THEN CAST(vt1.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((((((((0.03269756964328352)OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN ((vt1.c1) ISNULL) THEN CAST(t1.c2 AS TEXT) END WHERE (vt0.c1) ORDER BY (((- (vt0.c1)))||(CAST(t1.c2 AS INTEGER)))  NULLS LAST, ((((t1.c1)IS(t1.c0)))-(((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON CASE CASE t1.c1  WHEN t1.c1 THEN vt0.c0 END  WHEN CAST(6.19270983E8 AS TEXT) THEN CAST(vt1.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((((((((0.03269756964328352)OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN ((vt1.c1) ISNULL) THEN CAST(t1.c2 AS TEXT) END ORDER BY (((- (vt0.c1)))||(CAST(t1.c2 AS INTEGER)))  NULLS LAST, ((((t1.c1)IS(t1.c0)))-(((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON CASE CASE t1.c1  WHEN t1.c1 THEN vt0.c0 END  WHEN CAST(6.19270983E8 AS TEXT) THEN CAST(vt1.c0 AS INTEGER) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) THEN ((((((((0.03269756964328352)OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)) WHEN ((vt1.c1) ISNULL) THEN CAST(t1.c2 AS TEXT) END WHERE (vt0.c1) ORDER BY (((- (vt0.c1)))||(CAST(t1.c2 AS INTEGER)))  NULLS LAST, ((((t1.c1)IS(t1.c0)))-(((t1.c2) NOT BETWEEN (NULL) AND (t1.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) ORDER BY PRINTF((- (vt0.c1)), ((vt0.c0) IS TRUE), ((vt0.c0)*(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY PRINTF((- (vt0.c1)), ((vt0.c0) IS TRUE), ((vt0.c0)*(vt0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) ORDER BY PRINTF((- (vt0.c1)), ((vt0.c0) IS TRUE), ((vt0.c0)*(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY PRINTF((- (vt0.c1)), ((vt0.c0) IS TRUE), ((vt0.c0)*(vt0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) ORDER BY PRINTF((- (vt0.c1)), ((vt0.c0) IS TRUE), ((vt0.c0)*(vt0.c1))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1 IN ()) IN (((((((((x'')OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0))))) ORDER BY json_patch(LIKELIHOOD('-1510646665', 0.5357987140884568), CAST(vt1.c0 AS BLOB)) DESC, ((((((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))OR(0.7941631574827945)))AND(vt1.c0)))GLOB(vt1.c1 COLLATE RTRIM))  NULLS LAST, ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 IN ()) IN (((((((((x'')OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY json_patch(LIKELIHOOD('-1510646665', 0.5357987140884568), CAST(vt1.c0 AS BLOB)) DESC, ((((((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))OR(0.7941631574827945)))AND(vt1.c0)))GLOB(vt1.c1 COLLATE RTRIM))  NULLS LAST, ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) NOT NULL) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1 IN ()) IN (((((((((x'')OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0))))) ORDER BY json_patch(LIKELIHOOD('-1510646665', 0.5357987140884568), CAST(vt1.c0 AS BLOB)) DESC, ((((((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))OR(0.7941631574827945)))AND(vt1.c0)))GLOB(vt1.c1 COLLATE RTRIM))  NULLS LAST, ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 IN ()) IN (((((((((x'')OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY json_patch(LIKELIHOOD('-1510646665', 0.5357987140884568), CAST(vt1.c0 AS BLOB)) DESC, ((((((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))OR(0.7941631574827945)))AND(vt1.c0)))GLOB(vt1.c1 COLLATE RTRIM))  NULLS LAST, ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t1 ON rt0.c1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t1 ON rt0.c1);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t1 ON rt0.c1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t1 ON rt0.c1);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t1 ON rt0.c1 WHERE (rt0.c2);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c1 FULL OUTER JOIN rt0 ON NULL WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))<>(((rt0.c2) IS FALSE)))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))!=(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c1 FULL OUTER JOIN rt0 ON NULL ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c1 FULL OUTER JOIN rt0 ON NULL WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))<>(((rt0.c2) IS FALSE)))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))!=(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c1 FULL OUTER JOIN rt0 ON NULL ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c1 FULL OUTER JOIN rt0 ON NULL WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))<>(((rt0.c2) IS FALSE)))) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((CASE rt0.c2  WHEN 0.4886206137227581 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)) ORDER BY ((0.5310577037165617) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE rt0.c1  WHEN x'746b' THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN -5.94391913E8 THEN rt0.c2 END)) ASC  NULLS LAST, (- (TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN 0.4886206137227581 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((0.5310577037165617) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE rt0.c1  WHEN x'746b' THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN -5.94391913E8 THEN rt0.c2 END)) ASC  NULLS LAST, (- (TOTAL_CHANGES())));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((CASE rt0.c2  WHEN 0.4886206137227581 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)) ORDER BY ((0.5310577037165617) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE rt0.c1  WHEN x'746b' THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN -5.94391913E8 THEN rt0.c2 END)) ASC  NULLS LAST, (- (TOTAL_CHANGES()));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN 0.4886206137227581 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((0.5310577037165617) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE rt0.c1  WHEN x'746b' THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN -5.94391913E8 THEN rt0.c2 END)) ASC  NULLS LAST, (- (TOTAL_CHANGES())));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((CASE rt0.c2  WHEN 0.4886206137227581 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL)) ORDER BY ((0.5310577037165617) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE rt0.c1  WHEN x'746b' THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN -5.94391913E8 THEN rt0.c2 END)) ASC  NULLS LAST, (- (TOTAL_CHANGES()));
SELECT ALL * FROM rt0, t1, vt1 WHERE (CAST(vt1.c1 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT ALL * FROM rt0, t1, vt1 WHERE (CAST(vt1.c1 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT ALL * FROM rt0, t1, vt1 WHERE (CAST(vt1.c1 AS REAL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, vt0, t1, rt0 WHERE (((t1.c2 COLLATE BINARY) NOT BETWEEN (((t1.c1)||(vt1.c1))) AND (((t1.c0) IS TRUE)))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 COLLATE BINARY) NOT BETWEEN (((t1.c1)||(vt1.c1))) AND (((t1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1, rt0 WHERE (((t1.c2 COLLATE BINARY) NOT BETWEEN (((t1.c1)||(vt1.c1))) AND (((t1.c0) IS TRUE)))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 COLLATE BINARY) NOT BETWEEN (((t1.c1)||(vt1.c1))) AND (((t1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY vt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1, rt0 WHERE (((t1.c2 COLLATE BINARY) NOT BETWEEN (((t1.c1)||(vt1.c1))) AND (((t1.c0) IS TRUE)))) ORDER BY vt0.c1 DESC;
SELECT * FROM rt0 WHERE (((NULL COLLATE RTRIM)>=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN x'65e7' THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM)>=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN x'65e7' THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL COLLATE RTRIM)>=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN x'65e7' THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE RTRIM)>=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN x'65e7' THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL COLLATE RTRIM)>=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN x'65e7' THEN rt0.c1 END)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) IN ()));
SELECT ALL * FROM rt0 WHERE (((NULL)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULL)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULL)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON NULL WHERE (((((((((json_array(t1.c0, t1.c0, vt0.c1, t1.c0))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c2 ELSE vt0.c1 END)))OR(((((((((vt0.c0)OR(t1.c2)))AND(vt0.c1)))AND(t1.c2)))OR(t1.c0)))))OR(x'')))AND(((t1.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((json_array(t1.c0, t1.c0, vt0.c1, t1.c0))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c2 ELSE vt0.c1 END)))OR(((((((((vt0.c0)OR(t1.c2)))AND(vt0.c1)))AND(t1.c2)))OR(t1.c0)))))OR(x'')))AND(((t1.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON NULL);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON NULL WHERE (((((((((json_array(t1.c0, t1.c0, vt0.c1, t1.c0))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c2 ELSE vt0.c1 END)))OR(((((((((vt0.c0)OR(t1.c2)))AND(vt0.c1)))AND(t1.c2)))OR(t1.c0)))))OR(x'')))AND(((t1.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((json_array(t1.c0, t1.c0, vt0.c1, t1.c0))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c2 ELSE vt0.c1 END)))OR(((((((((vt0.c0)OR(t1.c2)))AND(vt0.c1)))AND(t1.c2)))OR(t1.c0)))))OR(x'')))AND(((t1.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON NULL);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON NULL WHERE (((((((((json_array(t1.c0, t1.c0, vt0.c1, t1.c0))OR(CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c2 ELSE vt0.c1 END)))OR(((((((((vt0.c0)OR(t1.c2)))AND(vt0.c1)))AND(t1.c2)))OR(t1.c0)))))OR(x'')))AND(((t1.c0)GLOB(vt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((NULL)==(vt1.c0)))LIKE((rt0.c0 IN ())))) ORDER BY ((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)=(vt1.c0)))LIKE((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((NULL)==(vt1.c0)))LIKE((rt0.c0 IN ())))) ORDER BY ((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)=(vt1.c0)))LIKE((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((NULL)==(vt1.c0)))LIKE((rt0.c0 IN ())))) ORDER BY ((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))-(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, rt0, vt1 WHERE (CAST((((vt1.c0, vt0.c0, t1.c1))>((vt0.c0, rt0.c1, vt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt0.c0, t1.c1))>((vt0.c0, rt0.c1, vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0, t1, rt0, vt1);
SELECT COUNT(*) FROM vt0, t1, rt0, vt1 WHERE (CAST((((vt1.c0, vt0.c0, t1.c1))>((vt0.c0, rt0.c1, vt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0, vt0.c0, t1.c1))>((vt0.c0, rt0.c1, vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0, t1, rt0, vt1);
SELECT COUNT(*) FROM vt0, t1, rt0, vt1 WHERE (CAST((((vt1.c0, vt0.c0, t1.c1))>((vt0.c0, rt0.c1, vt0.c1))) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (x'') ORDER BY ((((vt1.c0)LIKE('岩')))LIKE(('1598182422' IN (t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt1.c0)LIKE('岩')))LIKE(('1598182422' IN (t1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (x'') ORDER BY ((((vt1.c0)LIKE('岩')))LIKE(('1598182422' IN (t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt1.c0)LIKE('岩')))LIKE(('1598182422' IN (t1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (x'') ORDER BY ((((vt1.c0)LIKE('岩')))LIKE(('1598182422' IN (t1.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN '5|ﵕz3' THEN ((rt0.c2)<(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '5|ﵕz3' THEN ((rt0.c2)<(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN '5|ﵕz3' THEN ((rt0.c2)<(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '5|ﵕz3' THEN ((rt0.c2)<(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN '5|ﵕz3' THEN ((rt0.c2)<(rt0.c2)) END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE vt0.c1  WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 END COLLATE NOCASE) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt1.c1 END) AND (0xffffffff9deabcd1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt1.c1 END) AND (0Xffffffff9deabcd1)) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE vt0.c1  WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 END COLLATE NOCASE) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt1.c1 END) AND (0xffffffff9deabcd1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt1.c1 END) AND (0Xffffffff9deabcd1)) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE vt0.c1  WHEN rt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 END COLLATE NOCASE) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt1.c1 END) AND (0xffffffff9deabcd1)) ASC  NULLS LAST;
SELECT * FROM vt1, vt0, t1 WHERE (vt1.c0) ORDER BY (~ (ROUND(t1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (~ (ROUND(t1.c0, vt1.c0))));
SELECT * FROM vt1, vt0, t1 WHERE (vt1.c0) ORDER BY (~ (ROUND(t1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (~ (ROUND(t1.c0, vt1.c0))));
SELECT * FROM vt1, vt0, t1 WHERE (vt1.c0) ORDER BY (~ (ROUND(t1.c0, vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t1 ON (CAST(vt0.c0 AS REAL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)&(rt0.c1)) COLLATE BINARY WHERE (CASE WHEN ((((t1.c2)OR(vt0.c0)))OR(rt0.c1)) THEN CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 END ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c2)OR(vt0.c0)))OR(rt0.c1)) THEN CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 END ELSE NULL END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON (CAST(vt0.c0 AS REAL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)&(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t1 ON (CAST(vt0.c0 AS REAL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)&(rt0.c1)) COLLATE BINARY WHERE (CASE WHEN ((((t1.c2)OR(vt0.c0)))OR(rt0.c1)) THEN CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 END ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c2)OR(vt0.c0)))OR(rt0.c1)) THEN CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 END ELSE NULL END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON (CAST(vt0.c0 AS REAL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)&(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN t1 ON (CAST(vt0.c0 AS REAL) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)&(rt0.c1)) COLLATE BINARY WHERE (CASE WHEN ((((t1.c2)OR(vt0.c0)))OR(rt0.c1)) THEN CASE t1.c0  WHEN rt0.c0 THEN vt0.c0 END ELSE NULL END);
SELECT * FROM vt1, vt0, rt0 NATURAL JOIN t1 WHERE ((((NULL)<<(vt0.c0)) IN (NULL, (((rt0.c0, t1.c1, rt0.c1))!=((t1.c1, t1.c1, t1.c1)))))) ORDER BY (((t1.c0 IN ()))IS(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(t1.c2)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)<<(vt0.c0)) IN (NULL, (((rt0.c0, t1.c1, rt0.c1))!=((t1.c1, t1.c1, t1.c1)))))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN t1 ORDER BY (((t1.c0 IN ()))IS(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(t1.c2)))AND(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 NATURAL JOIN t1 WHERE ((((NULL)<<(vt0.c0)) IN (NULL, (((rt0.c0, t1.c1, rt0.c1))!=((t1.c1, t1.c1, t1.c1)))))) ORDER BY (((t1.c0 IN ()))IS(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(t1.c2)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL)<<(vt0.c0)) IN (NULL, (((rt0.c0, t1.c1, rt0.c1))!=((t1.c1, t1.c1, t1.c1)))))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN t1 ORDER BY (((t1.c0 IN ()))IS(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(t1.c2)))AND(rt0.c2)))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 NATURAL JOIN t1 WHERE ((((NULL)<<(vt0.c0)) IN (NULL, (((rt0.c0, t1.c1, rt0.c1))!=((t1.c1, t1.c1, t1.c1)))))) ORDER BY (((t1.c0 IN ()))IS(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(t1.c2)))AND(rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ('296532217') ORDER BY ((((1601164320)<=(rt0.c2)))-(NULL COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('296532217') IS TRUE)  as count FROM rt0 ORDER BY ((((1601164320)<=(rt0.c2)))-(NULL COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ('296532217') ORDER BY ((((1601164320)<=(rt0.c2)))-(NULL COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('296532217') IS TRUE)  as count FROM rt0 ORDER BY ((((1601164320)<=(rt0.c2)))-(NULL COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ('296532217') ORDER BY ((((1601164320)<=(rt0.c2)))-(NULL COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((CASE WHEN vt1.c0 THEN 0X7f8cc7cf END)&(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY DATETIME((~ (rt0.c0)), rt0.c0 COLLATE BINARY, ((vt1.c0) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN 0X7f8cc7cf END)&(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY DATETIME((~ (rt0.c0)), rt0.c0 COLLATE BINARY, ((vt1.c0) IS TRUE)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((CASE WHEN vt1.c0 THEN 0X7f8cc7cf END)&(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY DATETIME((~ (rt0.c0)), rt0.c0 COLLATE BINARY, ((vt1.c0) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN 0X7f8cc7cf END)&(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY DATETIME((~ (rt0.c0)), rt0.c0 COLLATE BINARY, ((vt1.c0) IS TRUE)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((CASE WHEN vt1.c0 THEN 0X7f8cc7cf END)&(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY DATETIME((~ (rt0.c0)), rt0.c0 COLLATE BINARY, ((vt1.c0) IS TRUE)) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(x'' AS TEXT)) ORDER BY ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c1 END) AND (t1.c2 COLLATE BINARY))  NULLS LAST, (((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c1)) IN ()) ASC, (((t1.c2 IN ()))|(((NULL) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c1 END) AND (t1.c2 COLLATE BINARY))  NULLS LAST, (((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c1)) IN ()) ASC, (((t1.c2 IN ()))|(((NULL) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(x'' AS TEXT)) ORDER BY ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c1 END) AND (t1.c2 COLLATE BINARY))  NULLS LAST, (((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c1)) IN ()) ASC, (((t1.c2 IN ()))|(((NULL) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c1 END) AND (t1.c2 COLLATE BINARY))  NULLS LAST, (((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c1)) IN ()) ASC, (((t1.c2 IN ()))|(((NULL) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(x'' AS TEXT)) ORDER BY ((((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c2))) NOT BETWEEN (CASE WHEN t1.c1 THEN t1.c1 END) AND (t1.c2 COLLATE BINARY))  NULLS LAST, (((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c1)) IN ()) ASC, (((t1.c2 IN ()))|(((NULL) BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON CAST(rt0.c2 AS TEXT) FULL OUTER JOIN vt0 ON (((((- (vt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND(((((rt0.c0)AND(t1.c2)))AND(rt0.c2)))) LEFT OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c2)))AND(vt0.c1)))) WHERE (((t1.c1)=(rt0.c2))) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))!=((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c1)==(rt0.c2))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON CAST(rt0.c2 AS TEXT) FULL OUTER JOIN vt0 ON (((((- (vt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND(((((rt0.c0)AND(t1.c2)))AND(rt0.c2)))) LEFT OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c2)))AND(vt0.c1)))) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))<>((NOT (vt0.c0)))) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON CAST(rt0.c2 AS TEXT) FULL OUTER JOIN vt0 ON (((((- (vt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND(((((rt0.c0)AND(t1.c2)))AND(rt0.c2)))) LEFT OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c2)))AND(vt0.c1)))) WHERE (((t1.c1)=(rt0.c2))) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))!=((NOT (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c1)==(rt0.c2))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON CAST(rt0.c2 AS TEXT) FULL OUTER JOIN vt0 ON (((((- (vt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND(((((rt0.c0)AND(t1.c2)))AND(rt0.c2)))) LEFT OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c2)))AND(vt0.c1)))) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))<>((NOT (vt0.c0)))) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON CAST(rt0.c2 AS TEXT) FULL OUTER JOIN vt0 ON (((((- (vt0.c1)))OR(CAST(rt0.c2 AS BLOB))))AND(((((rt0.c0)AND(t1.c2)))AND(rt0.c2)))) LEFT OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(vt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c2)))AND(vt0.c1)))) WHERE (((t1.c1)=(rt0.c2))) ORDER BY ((((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))!=((NOT (vt0.c0)))) ASC;
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((-815788582)AND(t1.c2)))OR(t1.c2)) THEN ((t1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((-815788582)AND(t1.c2)))OR(t1.c2)) THEN ((t1.c0) NOTNULL) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((-815788582)AND(t1.c2)))OR(t1.c2)) THEN ((t1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((-815788582)AND(t1.c2)))OR(t1.c2)) THEN ((t1.c0) NOTNULL) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN ((((-815788582)AND(t1.c2)))OR(t1.c2)) THEN ((t1.c0) NOTNULL) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.2883189099541702) THEN -1689642210 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0 COLLATE RTRIM  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.2883189099541702) THEN -1689642210 END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.2883189099541702) THEN -1689642210 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0 COLLATE RTRIM  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.2883189099541702) THEN -1689642210 END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.2883189099541702) THEN -1689642210 END);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0 WHERE (((x'') IS FALSE)) ORDER BY NULL, ((((rt0.c1)>(vt1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY NULL, ((((rt0.c1)>(vt1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0 WHERE (((x'') IS FALSE)) ORDER BY NULL, ((((rt0.c1)>(vt1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM t1, vt0, vt1, rt0 ORDER BY NULL, ((((rt0.c1)>(vt1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0 WHERE (((x'') IS FALSE)) ORDER BY NULL, ((((rt0.c1)>(vt1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c2))  NULLS FIRST;
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM t1, rt0 WHERE (t1.c2) ORDER BY LIKELIHOOD(rt0.c0, 0.11397733422281009) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY LIKELIHOOD(rt0.c0, 0.11397733422281009) DESC);
SELECT * FROM t1, rt0 WHERE (t1.c2) ORDER BY LIKELIHOOD(rt0.c0, 0.11397733422281009) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY LIKELIHOOD(rt0.c0, 0.11397733422281009) DESC);
SELECT * FROM t1, rt0 WHERE (t1.c2) ORDER BY LIKELIHOOD(rt0.c0, 0.11397733422281009) DESC;
SELECT COUNT(*) FROM t1, vt1, rt0, vt0 WHERE ((- (CASE t1.c0  WHEN vt0.c0 THEN t1.c0 WHEN '-1699743064' THEN vt1.c0 WHEN '1446785207' THEN rt0.c2 END))) ORDER BY ((t1.c2)-(((vt0.c1) NOT BETWEEN (t1.c2) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t1.c0  WHEN vt0.c0 THEN t1.c0 WHEN '-1699743064' THEN vt1.c0 WHEN '1446785207' THEN rt0.c2 END))) IS TRUE)  as count FROM t1, vt1, rt0, vt0 ORDER BY ((t1.c2)-(((vt0.c1) NOT BETWEEN (t1.c2) AND (vt1.c1)))));
SELECT COUNT(*) FROM t1, vt1, rt0, vt0 WHERE ((- (CASE t1.c0  WHEN vt0.c0 THEN t1.c0 WHEN '-1699743064' THEN vt1.c0 WHEN '1446785207' THEN rt0.c2 END))) ORDER BY ((t1.c2)-(((vt0.c1) NOT BETWEEN (t1.c2) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t1.c0  WHEN vt0.c0 THEN t1.c0 WHEN '-1699743064' THEN vt1.c0 WHEN '1446785207' THEN rt0.c2 END))) IS TRUE)  as count FROM t1, vt1, rt0, vt0 ORDER BY ((t1.c2)-(((vt0.c1) NOT BETWEEN (t1.c2) AND (vt1.c1)))));
SELECT COUNT(*) FROM t1, vt1, rt0, vt0 WHERE ((- (CASE t1.c0  WHEN vt0.c0 THEN t1.c0 WHEN '-1699743064' THEN vt1.c0 WHEN '1446785207' THEN rt0.c2 END))) ORDER BY ((t1.c2)-(((vt0.c1) NOT BETWEEN (t1.c2) AND (vt1.c1))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY (NOT (x'')) DESC  NULLS FIRST, t1.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (NOT (x'')) DESC  NULLS FIRST, t1.c2);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY (NOT (x'')) DESC  NULLS FIRST, t1.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (NOT (x'')) DESC  NULLS FIRST, t1.c2);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY (NOT (x'')) DESC  NULLS FIRST, t1.c2;
SELECT * FROM t1, rt0, vt0 CROSS JOIN vt1 ON ((((0.29629001693928414)|(vt1.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c1)))AND('1\n%H}R'))) AND ((~ (t1.c0)))) WHERE (((((x'') NOTNULL)) NOTNULL)) ORDER BY rtreenode(((rt0.c2) NOT NULL), ((t1.c0)=(t1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN vt1 ON ((((0.29629001693928414)|(vt1.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c1)))AND('1\n%H}R'))) AND ((~ (t1.c0)))) ORDER BY rtreenode(((rt0.c2) NOT NULL), ((t1.c0)=(t1.c2))) ASC  NULLS LAST);
SELECT * FROM t1, rt0, vt0 CROSS JOIN vt1 ON ((((0.29629001693928414)|(vt1.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c1)))AND('1\n%H}R'))) AND ((~ (t1.c0)))) WHERE (((((x'') NOTNULL)) NOTNULL)) ORDER BY rtreenode(((rt0.c2) NOT NULL), ((t1.c0)=(t1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOTNULL)) NOTNULL)) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN vt1 ON ((((0.29629001693928414)|(vt1.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c1)))AND('1\n%H}R'))) AND ((~ (t1.c0)))) ORDER BY rtreenode(((rt0.c2) NOT NULL), ((t1.c0)=(t1.c2))) ASC  NULLS LAST);
SELECT * FROM t1, rt0, vt0 CROSS JOIN vt1 ON ((((0.29629001693928414)|(vt1.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c1)))OR(rt0.c0)))OR(vt0.c1)))AND('1\n%H}R'))) AND ((~ (t1.c0)))) WHERE (((((x'') NOTNULL)) NOTNULL)) ORDER BY rtreenode(((rt0.c2) NOT NULL), ((t1.c0)=(t1.c2))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (((((0.7662134021304154)AND(t1.c0)))OR(rt0.c2)) IN ()) WHERE (TYPEOF(((t1.c0)-(t1.c0)))) ORDER BY ((((rt0.c2) IS FALSE))<>('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t1.c0)-(t1.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (((((0.7662134021304154)AND(t1.c0)))OR(rt0.c2)) IN ()) ORDER BY ((((rt0.c2) IS FALSE))!=('')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (((((0.7662134021304154)AND(t1.c0)))OR(rt0.c2)) IN ()) WHERE (TYPEOF(((t1.c0)-(t1.c0)))) ORDER BY ((((rt0.c2) IS FALSE))<>('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t1.c0)-(t1.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (((((0.7662134021304154)AND(t1.c0)))OR(rt0.c2)) IN ()) ORDER BY ((((rt0.c2) IS FALSE))!=('')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (((((0.7662134021304154)AND(t1.c0)))OR(rt0.c2)) IN ()) WHERE (TYPEOF(((t1.c0)-(t1.c0)))) ORDER BY ((((rt0.c2) IS FALSE))<>('')) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c0 WHEN 0.9851855517676935 THEN vt1.c0 END))<=((975383674))) LEFT OUTER JOIN t1 ON (((((t1.c2 IN ()))AND((((vt1.c1, t1.c1, NULL))<((vt1.c1, rt0.c2, vt1.c1))))))OR(((NULL) NOT NULL))) WHERE (CAST((t1.c1 IN (t1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c1 IN (t1.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c0 WHEN 0.9851855517676935 THEN vt1.c0 END))<=((975383674))) LEFT OUTER JOIN t1 ON (((((t1.c2 IN ()))AND((((vt1.c1, t1.c1, NULL))<((vt1.c1, rt0.c2, vt1.c1))))))OR(((NULL) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c0 WHEN 0.9851855517676935 THEN vt1.c0 END))<=((975383674))) LEFT OUTER JOIN t1 ON (((((t1.c2 IN ()))AND((((vt1.c1, t1.c1, NULL))<((vt1.c1, rt0.c2, vt1.c1))))))OR(((NULL) NOT NULL))) WHERE (CAST((t1.c1 IN (t1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c1 IN (t1.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c1 WHEN t1.c2 THEN t1.c0 WHEN 0.9851855517676935 THEN vt1.c0 END))<=((975383674))) LEFT OUTER JOIN t1 ON (((((t1.c2 IN ()))AND((((vt1.c1, t1.c1, NULL))<((vt1.c1, rt0.c2, vt1.c1))))))OR(((NULL) NOT NULL))));
SELECT * FROM rt0, vt1, vt0, t1 WHERE (((((((((((t1.c0)OR(vt1.c1)))OR('4rUH<cc')))AND(vt0.c1)))AND(t1.c1)))>(((((((((-9.40852728E8)OR(t1.c1)))AND(rt0.c0)))OR(t1.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(vt1.c1)))OR('4rUH<cc')))AND(vt0.c1)))AND(t1.c1)))>(((((((((-9.40852728E8)OR(t1.c1)))AND(rt0.c0)))OR(t1.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0, t1);
SELECT * FROM rt0, vt1, vt0, t1 WHERE (((((((((((t1.c0)OR(vt1.c1)))OR('4rUH<cc')))AND(vt0.c1)))AND(t1.c1)))>(((((((((-9.40852728E8)OR(t1.c1)))AND(rt0.c0)))OR(t1.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(vt1.c1)))OR('4rUH<cc')))AND(vt0.c1)))AND(t1.c1)))>(((((((((-9.40852728E8)OR(t1.c1)))AND(rt0.c0)))OR(t1.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0, t1);
SELECT * FROM rt0, vt1, vt0, t1 WHERE (((((((((((t1.c0)OR(vt1.c1)))OR('4rUH<cc')))AND(vt0.c1)))AND(t1.c1)))>(((((((((-9.40852728E8)OR(t1.c1)))AND(rt0.c0)))OR(t1.c0)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS REAL)) ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1, t1 ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS REAL)) ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1, t1 ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS REAL)) ORDER BY CAST(t1.c2 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((- ((- (rt0.c2))))) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.45844832961997317 COLLATE BINARY, rt0.c1, CAST(rt0.c2 AS BLOB))) AND ((CASE '-2123739806'  WHEN rt0.c2 THEN rt0.c1 END, -6.11508894E8, ((rt0.c0)OR(rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.45844832961997317 COLLATE BINARY, rt0.c1, CAST(rt0.c2 AS BLOB))) AND ((CASE '-2123739806'  WHEN rt0.c2 THEN rt0.c1 END, -6.11508894E8, ((rt0.c0)OR(rt0.c1))))) ASC);
SELECT ALL * FROM rt0 WHERE ((- ((- (rt0.c2))))) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.45844832961997317 COLLATE BINARY, rt0.c1, CAST(rt0.c2 AS BLOB))) AND ((CASE '-2123739806'  WHEN rt0.c2 THEN rt0.c1 END, -6.11508894E8, ((rt0.c0)OR(rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.45844832961997317 COLLATE BINARY, rt0.c1, CAST(rt0.c2 AS BLOB))) AND ((CASE '-2123739806'  WHEN rt0.c2 THEN rt0.c1 END, -6.11508894E8, ((rt0.c0)OR(rt0.c1))))) ASC);
SELECT ALL * FROM rt0 WHERE ((- ((- (rt0.c2))))) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.45844832961997317 COLLATE BINARY, rt0.c1, CAST(rt0.c2 AS BLOB))) AND ((CASE '-2123739806'  WHEN rt0.c2 THEN rt0.c1 END, -6.11508894E8, ((rt0.c0)OR(rt0.c1))))) ASC;
SELECT COUNT(*) FROM vt0, t1 WHERE ((((vt0.c1)) BETWEEN ((t1.c1)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((t1.c1)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((vt0.c1)) BETWEEN ((t1.c1)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((t1.c1)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((vt0.c1)) BETWEEN ((t1.c1)) AND ((vt0.c0))) COLLATE BINARY);
SELECT * FROM vt0, rt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN vt0.c1 END IN ()) WHERE ((((((vt0.c1 IN (rt0.c2)))OR(((t1.c2)IS(rt0.c2)))))AND(((rt0.c1)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN (rt0.c2)))OR(((t1.c2)IS(rt0.c2)))))AND(((rt0.c1)-(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN vt0.c1 END IN ()));
SELECT COUNT(*) FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN vt0.c1 END IN ()) WHERE ((((((vt0.c1 IN (rt0.c2)))OR(((t1.c2)IS(rt0.c2)))))AND(((rt0.c1)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1 IN (rt0.c2)))OR(((t1.c2)IS(rt0.c2)))))AND(((rt0.c1)-(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN vt0.c1 END IN ()));
SELECT COUNT(*) FROM vt1, rt0, t1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt0.c0 THEN vt0.c1 END IN ()) WHERE ((((((vt0.c1 IN (rt0.c2)))OR(((t1.c2)IS(rt0.c2)))))AND(((rt0.c1)-(vt1.c0)))));
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOTNULL) WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 WHEN load_extension(vt1.c1, x'') THEN (((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((x'', vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) ELSE ((vt1.c1)<=(vt1.c1)) END) ORDER BY (((vt1.c1)) BETWEEN ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOTNULL) WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 WHEN load_extension(vt1.c1, x'') THEN (((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((x'', vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) ELSE ((vt1.c1)<=(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) BETWEEN ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM))));
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOTNULL) WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 WHEN load_extension(vt1.c1, x'') THEN (((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((x'', vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) ELSE ((vt1.c1)<=(vt1.c1)) END) ORDER BY (((vt1.c1)) BETWEEN ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOTNULL) WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 WHEN load_extension(vt1.c1, x'') THEN (((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((x'', vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) ELSE ((vt1.c1)<=(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) BETWEEN ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM))));
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) NOTNULL) WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 WHEN load_extension(vt1.c1, x'') THEN (((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((x'', vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))) ELSE ((vt1.c1)<=(vt1.c1)) END) ORDER BY (((vt1.c1)) BETWEEN ((CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM)));
SELECT ALL * FROM t1, rt0, vt0, vt1 WHERE (t1.c2) ORDER BY (((t1.c0)) NOT BETWEEN (((t1.c1 IN ()))) AND (((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1, rt0, vt0, vt1 ORDER BY (((t1.c0)) NOT BETWEEN (((t1.c1 IN ()))) AND (((~ (rt0.c0))))));
SELECT ALL * FROM t1, rt0, vt0, vt1 WHERE (t1.c2) ORDER BY (((t1.c0)) NOT BETWEEN (((t1.c1 IN ()))) AND (((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1, rt0, vt0, vt1 ORDER BY (((t1.c0)) NOT BETWEEN (((t1.c1 IN ()))) AND (((~ (rt0.c0))))));
SELECT ALL * FROM t1, rt0, vt0, vt1 WHERE (t1.c2) ORDER BY (((t1.c0)) NOT BETWEEN (((t1.c1 IN ()))) AND (((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM t1, vt1, rt0 WHERE (((((((rt0.c2)AND(vt1.c0)))OR(vt1.c1))) NOT NULL)) ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END  WHEN (((vt1.c0, rt0.c1, t1.c1))>=((t1.c2, rt0.c1, t1.c2))) THEN ((t1.c1)-(rt0.c2)) WHEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (t1.c2)) THEN UPPER(vt1.c1) WHEN json_array_length('486726715') THEN t1.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(vt1.c0)))OR(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END  WHEN (((vt1.c0, rt0.c1, t1.c1))>=((t1.c2, rt0.c1, t1.c2))) THEN ((t1.c1)-(rt0.c2)) WHEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (t1.c2)) THEN UPPER(vt1.c1) WHEN json_array_length('486726715') THEN t1.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, rt0 WHERE (((((((rt0.c2)AND(vt1.c0)))OR(vt1.c1))) NOT NULL)) ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END  WHEN (((vt1.c0, rt0.c1, t1.c1))>=((t1.c2, rt0.c1, t1.c2))) THEN ((t1.c1)-(rt0.c2)) WHEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (t1.c2)) THEN UPPER(vt1.c1) WHEN json_array_length('486726715') THEN t1.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(vt1.c0)))OR(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END  WHEN (((vt1.c0, rt0.c1, t1.c1))>=((t1.c2, rt0.c1, t1.c2))) THEN ((t1.c1)-(rt0.c2)) WHEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (t1.c2)) THEN UPPER(vt1.c1) WHEN json_array_length('486726715') THEN t1.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, rt0 WHERE (((((((rt0.c2)AND(vt1.c0)))OR(vt1.c1))) NOT NULL)) ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END  WHEN (((vt1.c0, rt0.c1, t1.c1))>=((t1.c2, rt0.c1, t1.c2))) THEN ((t1.c1)-(rt0.c2)) WHEN ((vt1.c1) NOT BETWEEN (rt0.c2) AND (t1.c2)) THEN UPPER(vt1.c1) WHEN json_array_length('486726715') THEN t1.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL ELSE vt1.c0 END) NOT BETWEEN (CASE WHEN 9.06190244E8 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL ELSE vt1.c0 END) NOT BETWEEN (CASE WHEN 9.06190244E8 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL ELSE vt1.c0 END) NOT BETWEEN (CASE WHEN 9.06190244E8 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL ELSE vt1.c0 END) NOT BETWEEN (CASE WHEN 9.06190244E8 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL ELSE vt1.c0 END) NOT BETWEEN (CASE WHEN 9.06190244E8 THEN vt1.c1 END) AND ((vt1.c1 IN (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c1)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (0.9450412780893405) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((t1.c0 IN ())) AND ((t1.c1 IN ()))), ((((TRIM(DISTINCT t1.c0, t1.c2))OR('')))AND((~ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.9450412780893405) IS TRUE)  as count FROM t1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((t1.c0 IN ())) AND ((t1.c1 IN ()))), ((((TRIM(DISTINCT t1.c0, t1.c2))OR('')))AND((~ (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (0.9450412780893405) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((t1.c0 IN ())) AND ((t1.c1 IN ()))), ((((TRIM(DISTINCT t1.c0, t1.c2))OR('')))AND((~ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.9450412780893405) IS TRUE)  as count FROM t1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((t1.c0 IN ())) AND ((t1.c1 IN ()))), ((((TRIM(DISTINCT t1.c0, t1.c2))OR('')))AND((~ (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (0.9450412780893405) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((t1.c0 IN ())) AND ((t1.c1 IN ()))), ((((TRIM(DISTINCT t1.c0, t1.c2))OR('')))AND((~ (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN rt0 ON CASE ((t1.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((t1.c0) NOT NULL) THEN t1.c2 ELSE CAST(vt1.c1 AS BLOB) END CROSS JOIN vt1 ON (- (t1.c2)) COLLATE BINARY WHERE (((CAST(t1.c0 AS NUMERIC))IS(((rt0.c2)>=(rt0.c1))))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))IS(((rt0.c2)>=(rt0.c1))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON CASE ((t1.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((t1.c0) NOT NULL) THEN t1.c2 ELSE CAST(vt1.c1 AS BLOB) END CROSS JOIN vt1 ON (- (t1.c2)) COLLATE BINARY ORDER BY vt1.c1 DESC);
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN rt0 ON CASE ((t1.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((t1.c0) NOT NULL) THEN t1.c2 ELSE CAST(vt1.c1 AS BLOB) END CROSS JOIN vt1 ON (- (t1.c2)) COLLATE BINARY WHERE (((CAST(t1.c0 AS NUMERIC))IS(((rt0.c2)>=(rt0.c1))))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))IS(((rt0.c2)>=(rt0.c1))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON CASE ((t1.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN ((t1.c0) NOT NULL) THEN t1.c2 ELSE CAST(vt1.c1 AS BLOB) END CROSS JOIN vt1 ON (- (t1.c2)) COLLATE BINARY ORDER BY vt1.c1 DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, t1 WHERE (((((((rt0.c2) ISNULL))AND(rt0.c1 COLLATE BINARY)))AND(((t1.c0)<>(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) ISNULL))AND(rt0.c1 COLLATE BINARY)))AND(((t1.c0)!=(t1.c0))))) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT ALL COUNT(*) FROM rt0, vt1, t1 WHERE (((((((rt0.c2) ISNULL))AND(rt0.c1 COLLATE BINARY)))AND(((t1.c0)<>(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) ISNULL))AND(rt0.c1 COLLATE BINARY)))AND(((t1.c0)!=(t1.c0))))) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT ALL COUNT(*) FROM rt0, vt1, t1 WHERE (((((((rt0.c2) ISNULL))AND(rt0.c1 COLLATE BINARY)))AND(((t1.c0)<>(t1.c0)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE 0.9308558762458102  WHEN (+ (vt1.c0)) THEN CASE WHEN x'' THEN rt0.c0 ELSE rt0.c0 END WHEN (- (vt1.c0)) THEN t1.c1 COLLATE RTRIM WHEN ((vt0.c0)>>(rt0.c1)) THEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN NULL THEN ((rt0.c2)>=(t1.c1)) WHEN ((vt1.c1) ISNULL) THEN t1.c1 END RIGHT OUTER JOIN rt0 ON ((((((vt1.c0)<(t1.c2)))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c2) ISNULL))) RIGHT OUTER JOIN t1 ON (((((((rt0.c2))>=((t1.c1))))AND(((vt0.c0)AND(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE 0.9308558762458102  WHEN (+ (vt1.c0)) THEN CASE WHEN x'' THEN rt0.c0 ELSE rt0.c0 END WHEN (- (vt1.c0)) THEN t1.c1 COLLATE RTRIM WHEN ((vt0.c0)>>(rt0.c1)) THEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN NULL THEN ((rt0.c2)>=(t1.c1)) WHEN ((vt1.c1) ISNULL) THEN t1.c1 END RIGHT OUTER JOIN rt0 ON ((((((vt1.c0)<(t1.c2)))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c2) ISNULL))) RIGHT OUTER JOIN t1 ON (((((((rt0.c2))>=((t1.c1))))AND(((vt0.c0)AND(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE 0.9308558762458102  WHEN (+ (vt1.c0)) THEN CASE WHEN x'' THEN rt0.c0 ELSE rt0.c0 END WHEN (- (vt1.c0)) THEN t1.c1 COLLATE RTRIM WHEN ((vt0.c0)>>(rt0.c1)) THEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN NULL THEN ((rt0.c2)>=(t1.c1)) WHEN ((vt1.c1) ISNULL) THEN t1.c1 END RIGHT OUTER JOIN rt0 ON ((((((vt1.c0)<(t1.c2)))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c2) ISNULL))) RIGHT OUTER JOIN t1 ON (((((((rt0.c2))>=((t1.c1))))AND(((vt0.c0)AND(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (vt1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE 0.9308558762458102  WHEN (+ (vt1.c0)) THEN CASE WHEN x'' THEN rt0.c0 ELSE rt0.c0 END WHEN (- (vt1.c0)) THEN t1.c1 COLLATE RTRIM WHEN ((vt0.c0)>>(rt0.c1)) THEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN NULL THEN ((rt0.c2)>=(t1.c1)) WHEN ((vt1.c1) ISNULL) THEN t1.c1 END RIGHT OUTER JOIN rt0 ON ((((((vt1.c0)<(t1.c2)))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c2) ISNULL))) RIGHT OUTER JOIN t1 ON (((((((rt0.c2))>=((t1.c1))))AND(((vt0.c0)AND(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM t1, vt1, rt0 WHERE (((CAST(t1.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t1, vt1, rt0);
SELECT ALL * FROM t1, vt1, rt0 WHERE (((CAST(t1.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM t1, vt1, rt0);
SELECT ALL * FROM t1, vt1, rt0 WHERE (((CAST(t1.c0 AS REAL)) NOTNULL));
SELECT * FROM vt0, vt1 WHERE (0.5603013333841712);
SELECT SUM(count) FROM (SELECT ((0.5603013333841712) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (0.5603013333841712);
SELECT SUM(count) FROM (SELECT ((0.5603013333841712) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (0.5603013333841712);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))==((vt0.c0 IN ())))) ORDER BY x'' ASC  NULLS LAST, ((NULL)|('4n'))  NULLS FIRST, CASE (+ (vt1.c1))  WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c1) IS TRUE) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' ASC  NULLS LAST, ((NULL)|('4n'))  NULLS FIRST, CASE (+ (vt1.c1))  WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c1) IS TRUE) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))==((vt0.c0 IN ())))) ORDER BY x'' ASC  NULLS LAST, ((NULL)|('4n'))  NULLS FIRST, CASE (+ (vt1.c1))  WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c1) IS TRUE) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' ASC  NULLS LAST, ((NULL)|('4n'))  NULLS FIRST, CASE (+ (vt1.c1))  WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c1) IS TRUE) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))==((vt0.c0 IN ())))) ORDER BY x'' ASC  NULLS LAST, ((NULL)|('4n'))  NULLS FIRST, CASE (+ (vt1.c1))  WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c1) IS TRUE) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt1 LEFT OUTER JOIN vt0 ON (((TYPEOF(DISTINCT vt1.c0), ((vt0.c0)OR(t1.c2)), ((((vt1.c1)AND(vt1.c0)))AND(t1.c1))))<((CAST(vt0.c1 AS NUMERIC), (~ (t1.c2)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c1 END))) WHERE ((((vt0.c0, 0.26806152094480373, t1.c0)) BETWEEN ((t1.c1, vt1.c1, vt0.c0)) AND ((vt0.c0, t1.c2, t1.c1))) COLLATE NOCASE) ORDER BY ((LIKELY(t1.c1)) BETWEEN (0.23019104463485418) AND (CASE WHEN vt1.c0 THEN vt0.c0 END)) DESC, (((vt0.c0) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, 0.26806152094480373, t1.c0)) BETWEEN ((t1.c1, vt1.c1, vt0.c0)) AND ((vt0.c0, t1.c2, t1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN vt0 ON (((TYPEOF(DISTINCT vt1.c0), ((vt0.c0)OR(t1.c2)), ((((vt1.c1)AND(vt1.c0)))AND(t1.c1))))<((CAST(vt0.c1 AS NUMERIC), (~ (t1.c2)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c1 END))) ORDER BY ((LIKELY(t1.c1)) BETWEEN (0.23019104463485418) AND (CASE WHEN vt1.c0 THEN vt0.c0 END)) DESC, (((vt0.c0) NOTNULL) IN ()) DESC);
SELECT ALL COUNT(*) FROM t1, vt1 LEFT OUTER JOIN vt0 ON (((TYPEOF(DISTINCT vt1.c0), ((vt0.c0)OR(t1.c2)), ((((vt1.c1)AND(vt1.c0)))AND(t1.c1))))<((CAST(vt0.c1 AS NUMERIC), (~ (t1.c2)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c1 END))) WHERE ((((vt0.c0, 0.26806152094480373, t1.c0)) BETWEEN ((t1.c1, vt1.c1, vt0.c0)) AND ((vt0.c0, t1.c2, t1.c1))) COLLATE NOCASE) ORDER BY ((LIKELY(t1.c1)) BETWEEN (0.23019104463485418) AND (CASE WHEN vt1.c0 THEN vt0.c0 END)) DESC, (((vt0.c0) NOTNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, 0.26806152094480373, t1.c0)) BETWEEN ((t1.c1, vt1.c1, vt0.c0)) AND ((vt0.c0, t1.c2, t1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN vt0 ON (((TYPEOF(DISTINCT vt1.c0), ((vt0.c0)OR(t1.c2)), ((((vt1.c1)AND(vt1.c0)))AND(t1.c1))))<((CAST(vt0.c1 AS NUMERIC), (~ (t1.c2)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c1 END))) ORDER BY ((LIKELY(t1.c1)) BETWEEN (0.23019104463485418) AND (CASE WHEN vt1.c0 THEN vt0.c0 END)) DESC, (((vt0.c0) NOTNULL) IN ()) DESC);
SELECT ALL COUNT(*) FROM t1, vt1 LEFT OUTER JOIN vt0 ON (((TYPEOF(DISTINCT vt1.c0), ((vt0.c0)OR(t1.c2)), ((((vt1.c1)AND(vt1.c0)))AND(t1.c1))))<((CAST(vt0.c1 AS NUMERIC), (~ (t1.c2)), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c1 END))) WHERE ((((vt0.c0, 0.26806152094480373, t1.c0)) BETWEEN ((t1.c1, vt1.c1, vt0.c0)) AND ((vt0.c0, t1.c2, t1.c1))) COLLATE NOCASE) ORDER BY ((LIKELY(t1.c1)) BETWEEN (0.23019104463485418) AND (CASE WHEN vt1.c0 THEN vt0.c0 END)) DESC, (((vt0.c0) NOTNULL) IN ()) DESC;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt1.c0)AND(((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) WHERE (((NULLIF(vt1.c1, vt1.c1))|(((0.0) ISNULL)))) ORDER BY ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST, ((((vt1.c1) IS TRUE))&('y''{}Vsd\8')), CAST((((vt1.c0))==((vt1.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c1, vt1.c1))|(((0.0) ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt1.c0)AND(((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) ORDER BY ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST, ((((vt1.c1) IS TRUE))&('y''{}Vsd\8')), CAST((((vt1.c0))=((vt1.c0))) AS NUMERIC));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt1.c0)AND(((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) WHERE (((NULLIF(vt1.c1, vt1.c1))|(((0.0) ISNULL)))) ORDER BY ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST, ((((vt1.c1) IS TRUE))&('y''{}Vsd\8')), CAST((((vt1.c0))==((vt1.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c1, vt1.c1))|(((0.0) ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt1.c0)AND(((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) ORDER BY ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST, ((((vt1.c1) IS TRUE))&('y''{}Vsd\8')), CAST((((vt1.c0))=((vt1.c0))) AS NUMERIC));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt1.c0)AND(((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) WHERE (((NULLIF(vt1.c1, vt1.c1))|(((0.0) ISNULL)))) ORDER BY ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(vt0.c1)))OR(vt0.c1))))  NULLS LAST, ((((vt1.c1) IS TRUE))&('y''{}Vsd\8')), CAST((((vt1.c0))==((vt1.c0))) AS NUMERIC);
SELECT ALL * FROM rt0, t1 WHERE ((NOT ('542341242')));
SELECT SUM(count) FROM (SELECT (((NOT ('542341242'))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE ((NOT ('542341242')));
SELECT SUM(count) FROM (SELECT (((NOT ('542341242'))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE ((NOT ('542341242')));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((((vt0.c1)AND('-179135226')))OR(rt0.c2)))AND(CAST(t1.c0 AS BLOB))) RIGHT OUTER JOIN t1 ON ((t1.c1) NOT BETWEEN ((t1.c0 IN ())) AND ((- (t1.c0)))) WHERE ((- (((rt0.c0) IS FALSE)))) ORDER BY (((vt1.c0)) BETWEEN (((vt1.c1 IN (rt0.c1)))) AND (((t1.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((((vt0.c1)AND('-179135226')))OR(rt0.c2)))AND(CAST(t1.c0 AS BLOB))) RIGHT OUTER JOIN t1 ON ((t1.c1) NOT BETWEEN ((t1.c0 IN ())) AND ((- (t1.c0)))) ORDER BY (((vt1.c0)) BETWEEN (((vt1.c1 IN (rt0.c1)))) AND (((t1.c0 IN (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((((vt0.c1)AND('-179135226')))OR(rt0.c2)))AND(CAST(t1.c0 AS BLOB))) RIGHT OUTER JOIN t1 ON ((t1.c1) NOT BETWEEN ((t1.c0 IN ())) AND ((- (t1.c0)))) WHERE ((- (((rt0.c0) IS FALSE)))) ORDER BY (((vt1.c0)) BETWEEN (((vt1.c1 IN (rt0.c1)))) AND (((t1.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((((vt0.c1)AND('-179135226')))OR(rt0.c2)))AND(CAST(t1.c0 AS BLOB))) RIGHT OUTER JOIN t1 ON ((t1.c1) NOT BETWEEN ((t1.c0 IN ())) AND ((- (t1.c0)))) ORDER BY (((vt1.c0)) BETWEEN (((vt1.c1 IN (rt0.c1)))) AND (((t1.c0 IN (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c0 END)AND(((((vt1.c0)AND(vt1.c1)))OR(0x78d8baa2)))))AND((((vt1.c1))<=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c1 THEN vt1.c0 END)AND(((((vt1.c0)AND(vt1.c1)))OR(0x78d8baa2)))))AND((((vt1.c1))<=((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c0 END)AND(((((vt1.c0)AND(vt1.c1)))OR(0x78d8baa2)))))AND((((vt1.c1))<=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c1 THEN vt1.c0 END)AND(((((vt1.c0)AND(vt1.c1)))OR(0x78d8baa2)))))AND((((vt1.c1))<=((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c0 END)AND(((((vt1.c0)AND(vt1.c1)))OR(0x78d8baa2)))))AND((((vt1.c1))<=((vt1.c1))))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2) IS TRUE)))<=((x'')))) ORDER BY ((CAST(rt0.c1 AS REAL)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS TRUE)))<=((x'')))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(rt0.c1 AS REAL)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2) IS TRUE)))<=((x'')))) ORDER BY ((CAST(rt0.c1 AS REAL)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS TRUE)))<=((x'')))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(rt0.c1 AS REAL)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2) IS TRUE)))<=((x'')))) ORDER BY ((CAST(rt0.c1 AS REAL)) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON ((((vt0.c1, t1.c2, t1.c2))==((t1.c2, t1.c2, vt1.c0))) IN ()) RIGHT OUTER JOIN t1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) WHERE ((NOT ((((rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c2, t1.c0, vt1.c1)) AND ((rt0.c2, rt0.c1, t1.c0)))))) ORDER BY (((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (((((vt0.c1)AND(t1.c0)))AND(t1.c1)), (+ (t1.c1)), t1.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c2, t1.c0, vt1.c1)) AND ((rt0.c2, rt0.c1, t1.c0)))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON ((((vt0.c1, t1.c2, t1.c2))==((t1.c2, t1.c2, vt1.c0))) IN ()) RIGHT OUTER JOIN t1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) ORDER BY (((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (((((vt0.c1)AND(t1.c0)))AND(t1.c1)), (+ (t1.c1)), t1.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON ((((vt0.c1, t1.c2, t1.c2))==((t1.c2, t1.c2, vt1.c0))) IN ()) RIGHT OUTER JOIN t1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) WHERE ((NOT ((((rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c2, t1.c0, vt1.c1)) AND ((rt0.c2, rt0.c1, t1.c0)))))) ORDER BY (((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (((((vt0.c1)AND(t1.c0)))AND(t1.c1)), (+ (t1.c1)), t1.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c2, t1.c0, vt1.c1)) AND ((rt0.c2, rt0.c1, t1.c0)))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON ((((vt0.c1, t1.c2, t1.c2))==((t1.c2, t1.c2, vt1.c0))) IN ()) RIGHT OUTER JOIN t1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) ORDER BY (((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (((((vt0.c1)AND(t1.c0)))AND(t1.c1)), (+ (t1.c1)), t1.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON ((((vt0.c1, t1.c2, t1.c2))==((t1.c2, t1.c2, vt1.c0))) IN ()) RIGHT OUTER JOIN t1 ON CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) WHERE ((NOT ((((rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c2, t1.c0, vt1.c1)) AND ((rt0.c2, rt0.c1, t1.c0)))))) ORDER BY (((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN (((((vt0.c1)AND(t1.c0)))AND(t1.c1)), (+ (t1.c1)), t1.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)||(0.08564924950328368)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)||(0.08564924950328368))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)||(0.08564924950328368)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)||(0.08564924950328368))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)||(0.08564924950328368)));
SELECT COUNT(*) FROM vt1, t1, vt0, rt0 WHERE (CASE x''  WHEN TRIM(NULL) THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN TRIM(NULL) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT COUNT(*) FROM vt1, t1, vt0, rt0 WHERE (CASE x''  WHEN TRIM(NULL) THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN TRIM(NULL) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT COUNT(*) FROM vt1, t1, vt0, rt0 WHERE (CASE x''  WHEN TRIM(NULL) THEN CAST(rt0.c0 AS TEXT) END);
SELECT * FROM rt0 WHERE (ABS(DISTINCT x'864692d0'));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT x'864692d0')) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(DISTINCT x'864692d0'));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT x'864692d0')) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(DISTINCT x'864692d0'));
SELECT ALL COUNT(*) FROM t1, vt1, vt0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, rt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t1 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t1 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t1 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC));
SELECT ALL * FROM vt0, t1, vt1 INNER JOIN rt0 ON CASE 'nQ|H(Gf'  WHEN (((rt0.c1))<((t1.c2))) THEN json_insert(t1.c1, rt0.c1, t1.c0) ELSE ((-979653699)<<(t1.c0)) END WHERE (x'') ORDER BY ABS(DISTINCT x'' COLLATE RTRIM), ((~ (t1.c1)) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, (CAST(t1.c1 AS BLOB) IN (t1.c2, CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1, vt1 INNER JOIN rt0 ON CASE 'nQ|H(Gf'  WHEN (((rt0.c1))<((t1.c2))) THEN json_insert(t1.c1, rt0.c1, t1.c0) ELSE ((-979653699)<<(t1.c0)) END ORDER BY ABS(DISTINCT x'' COLLATE RTRIM), ((~ (t1.c1)) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, (CAST(t1.c1 AS BLOB) IN (t1.c2, CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM vt0, t1, vt1 INNER JOIN rt0 ON CASE 'nQ|H(Gf'  WHEN (((rt0.c1))<((t1.c2))) THEN json_insert(t1.c1, rt0.c1, t1.c0) ELSE ((-979653699)<<(t1.c0)) END WHERE (x'') ORDER BY ABS(DISTINCT x'' COLLATE RTRIM), ((~ (t1.c1)) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, (CAST(t1.c1 AS BLOB) IN (t1.c2, CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1, vt1 INNER JOIN rt0 ON CASE 'nQ|H(Gf'  WHEN (((rt0.c1))<((t1.c2))) THEN json_insert(t1.c1, rt0.c1, t1.c0) ELSE ((-979653699)<<(t1.c0)) END ORDER BY ABS(DISTINCT x'' COLLATE RTRIM), ((~ (t1.c1)) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, (CAST(t1.c1 AS BLOB) IN (t1.c2, CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM vt0, t1, vt1 INNER JOIN rt0 ON CASE 'nQ|H(Gf'  WHEN (((rt0.c1))<((t1.c2))) THEN json_insert(t1.c1, rt0.c1, t1.c0) ELSE ((-979653699)<<(t1.c0)) END WHERE (x'') ORDER BY ABS(DISTINCT x'' COLLATE RTRIM), ((~ (t1.c1)) IN (CASE WHEN vt0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST, (CAST(t1.c1 AS BLOB) IN (t1.c2, CAST(rt0.c1 AS BLOB)));
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM)OR(x'35a0')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)OR(x'35a0'))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM)OR(x'35a0')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)OR(x'35a0'))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM)OR(x'35a0')));
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE (((((t1.c2 COLLATE BINARY)AND(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN rt0.c1 WHEN '332380920' THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN 0.12388594897460514 ELSE rt0.c1 END)))AND('126168867')));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2 COLLATE BINARY)AND(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN rt0.c1 WHEN '332380920' THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN 0.12388594897460514 ELSE rt0.c1 END)))AND('126168867'))) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE (((((t1.c2 COLLATE BINARY)AND(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN rt0.c1 WHEN '332380920' THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN 0.12388594897460514 ELSE rt0.c1 END)))AND('126168867')));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2 COLLATE BINARY)AND(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN rt0.c1 WHEN '332380920' THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN 0.12388594897460514 ELSE rt0.c1 END)))AND('126168867'))) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE (((((t1.c2 COLLATE BINARY)AND(CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c1 THEN rt0.c1 WHEN '332380920' THEN rt0.c0 WHEN rt0.c0 THEN vt1.c1 WHEN x'' THEN 0.12388594897460514 ELSE rt0.c1 END)))AND('126168867')));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (t1.c1)) AS REAL) INNER JOIN t1 ON (('e)')<>((((vt0.c0, vt0.c0, rt0.c1))>=(('-1395304568', rt0.c2, vt0.c0))))) FULL OUTER JOIN rt0 ON CASE ((t1.c2)OR(t1.c2))  WHEN ((t1.c1)==(t1.c0)) THEN ((t1.c2)>=(rt0.c1)) ELSE ROUND(vt1.c0, vt1.c1) END WHERE (0.11398123289710249) ORDER BY ((((t1.c2))<((rt0.c2))) IN (((vt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.11398123289710249) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (t1.c1)) AS REAL) INNER JOIN t1 ON (('e)')<>((((vt0.c0, vt0.c0, rt0.c1))>=(('-1395304568', rt0.c2, vt0.c0))))) FULL OUTER JOIN rt0 ON CASE ((t1.c2)OR(t1.c2))  WHEN ((t1.c1)=(t1.c0)) THEN ((t1.c2)>=(rt0.c1)) ELSE ROUND(vt1.c0, vt1.c1) END ORDER BY ((((t1.c2))<((rt0.c2))) IN (((vt0.c1) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (t1.c1)) AS REAL) INNER JOIN t1 ON (('e)')<>((((vt0.c0, vt0.c0, rt0.c1))>=(('-1395304568', rt0.c2, vt0.c0))))) FULL OUTER JOIN rt0 ON CASE ((t1.c2)OR(t1.c2))  WHEN ((t1.c1)==(t1.c0)) THEN ((t1.c2)>=(rt0.c1)) ELSE ROUND(vt1.c0, vt1.c1) END WHERE (0.11398123289710249) ORDER BY ((((t1.c2))<((rt0.c2))) IN (((vt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.11398123289710249) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (t1.c1)) AS REAL) INNER JOIN t1 ON (('e)')<>((((vt0.c0, vt0.c0, rt0.c1))>=(('-1395304568', rt0.c2, vt0.c0))))) FULL OUTER JOIN rt0 ON CASE ((t1.c2)OR(t1.c2))  WHEN ((t1.c1)=(t1.c0)) THEN ((t1.c2)>=(rt0.c1)) ELSE ROUND(vt1.c0, vt1.c1) END ORDER BY ((((t1.c2))<((rt0.c2))) IN (((vt0.c1) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, t1 WHERE (((((((((((vt1.c1) ISNULL))AND(((rt0.c1) IS FALSE))))OR(t1.c0)))AND((x'' IN (vt1.c0)))))OR(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1) ISNULL))AND(((rt0.c1) IS FALSE))))OR(t1.c0)))AND((x'' IN (vt1.c0)))))OR(t1.c2))) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT ALL * FROM vt1, rt0, t1 WHERE (((((((((((vt1.c1) ISNULL))AND(((rt0.c1) IS FALSE))))OR(t1.c0)))AND((x'' IN (vt1.c0)))))OR(t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1) ISNULL))AND(((rt0.c1) IS FALSE))))OR(t1.c0)))AND((x'' IN (vt1.c0)))))OR(t1.c2))) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT ALL * FROM vt1, rt0, t1 WHERE (((((((((((vt1.c1) ISNULL))AND(((rt0.c1) IS FALSE))))OR(t1.c0)))AND((x'' IN (vt1.c0)))))OR(t1.c2)));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((rt0.c0)>=(vt1.c1)), ((vt1.c0) NOT NULL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (vt1.c0 IN ())))<=((CAST('' AS NUMERIC), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), NULL, ((vt1.c1)>(vt1.c0)), vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((rt0.c0)>=(vt1.c1)), ((vt1.c0) NOT NULL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (vt1.c0 IN ())))<=((CAST('' AS NUMERIC), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), NULL, ((vt1.c1)>(vt1.c0)), vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((rt0.c0)>=(vt1.c1)), ((vt1.c0) NOT NULL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (vt1.c0 IN ())))<=((CAST('' AS NUMERIC), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), NULL, ((vt1.c1)>(vt1.c0)), vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((rt0.c0)>=(vt1.c1)), ((vt1.c0) NOT NULL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (vt1.c0 IN ())))<=((CAST('' AS NUMERIC), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), NULL, ((vt1.c1)>(vt1.c0)), vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c2)), ((rt0.c0)>=(vt1.c1)), ((vt1.c0) NOT NULL), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (vt1.c0 IN ())))<=((CAST('' AS NUMERIC), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), NULL, ((vt1.c1)>(vt1.c0)), vt1.c1 COLLATE NOCASE))));
SELECT ALL * FROM vt0, vt1, t1, rt0 WHERE ((+ ((t1.c1 IN (vt1.c0, vt1.c0))))) ORDER BY (((((t1.c0)OR(vt0.c0)))AND(rt0.c1)) IN ((NOT (rt0.c1)), (- (t1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((t1.c1 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t1, rt0 ORDER BY (((((t1.c0)OR(vt0.c0)))AND(rt0.c1)) IN ((NOT (rt0.c1)), (- (t1.c2)))) ASC);
SELECT ALL * FROM vt0, vt1, t1, rt0 WHERE ((+ ((t1.c1 IN (vt1.c0, vt1.c0))))) ORDER BY (((((t1.c0)OR(vt0.c0)))AND(rt0.c1)) IN ((NOT (rt0.c1)), (- (t1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((t1.c1 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t1, rt0 ORDER BY (((((t1.c0)OR(vt0.c0)))AND(rt0.c1)) IN ((NOT (rt0.c1)), (- (t1.c2)))) ASC);
SELECT ALL * FROM vt0, vt1, t1, rt0 WHERE ((+ ((t1.c1 IN (vt1.c0, vt1.c0))))) ORDER BY (((((t1.c0)OR(vt0.c0)))AND(rt0.c1)) IN ((NOT (rt0.c1)), (- (t1.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c1 THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c1 THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c1 THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END END);
SELECT * FROM rt0, vt0 WHERE (TRIM(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))) ORDER BY (- (rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (TRIM(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))) ORDER BY (- (rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (TRIM(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))) ORDER BY (- (rt0.c2 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (-8.35957815E8 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-8.35957815E8 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (-8.35957815E8 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((-8.35957815E8 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (-8.35957815E8 COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)/(vt0.c0))) NOT NULL)) ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)/(vt0.c0))) NOT NULL)) ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)/(vt0.c0))) NOT NULL)) ORDER BY (((rt0.c1 IN ())) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM t1 WHERE ((t1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((t1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((t1.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM t1, vt0 WHERE (('-1372061164' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1372061164' IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (('-1372061164' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1372061164' IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (('-1372061164' IN ()));
SELECT * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON 0.9848908377654377 CROSS JOIN t1 ON (((t1.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) ORDER BY TRIM(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))), ((vt1.c0)>(t1.c1)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (NOT (((vt1.c1) BETWEEN (t1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON 0.9848908377654377 CROSS JOIN t1 ON (((t1.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ORDER BY TRIM(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))), ((vt1.c0)>(t1.c1)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (NOT (((vt1.c1) BETWEEN (t1.c1) AND (vt1.c1)))));
SELECT * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON 0.9848908377654377 CROSS JOIN t1 ON (((t1.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) ORDER BY TRIM(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))), ((vt1.c0)>(t1.c1)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (NOT (((vt1.c1) BETWEEN (t1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON 0.9848908377654377 CROSS JOIN t1 ON (((t1.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) ORDER BY TRIM(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))), ((vt1.c0)>(t1.c1)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (NOT (((vt1.c1) BETWEEN (t1.c1) AND (vt1.c1)))));
SELECT * FROM vt1, vt0 LEFT OUTER JOIN rt0 ON 0.9848908377654377 CROSS JOIN t1 ON (((t1.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ()) WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) ORDER BY TRIM(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))), ((vt1.c0)>(t1.c1)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST, (NOT (((vt1.c1) BETWEEN (t1.c1) AND (vt1.c1))));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 RIGHT OUTER JOIN vt1 ON CAST('mq' AS TEXT) WHERE (((((((((((t1.c0)OR(vt1.c0)))OR(1384758415)))OR(t1.c0)))OR(vt1.c0)))IS NOT(((((x'')OR(t1.c2)))AND(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(vt1.c0)))OR(1384758415)))OR(t1.c0)))OR(vt1.c0)))IS NOT(((((x'')OR(t1.c2)))AND(t1.c1))))) IS TRUE)  as count FROM vt0, t1, rt0 RIGHT OUTER JOIN vt1 ON CAST('mq' AS TEXT));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 RIGHT OUTER JOIN vt1 ON CAST('mq' AS TEXT) WHERE (((((((((((t1.c0)OR(vt1.c0)))OR(1384758415)))OR(t1.c0)))OR(vt1.c0)))IS NOT(((((x'')OR(t1.c2)))AND(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(vt1.c0)))OR(1384758415)))OR(t1.c0)))OR(vt1.c0)))IS NOT(((((x'')OR(t1.c2)))AND(t1.c1))))) IS TRUE)  as count FROM vt0, t1, rt0 RIGHT OUTER JOIN vt1 ON CAST('mq' AS TEXT));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 RIGHT OUTER JOIN vt1 ON CAST('mq' AS TEXT) WHERE (((((((((((t1.c0)OR(vt1.c0)))OR(1384758415)))OR(t1.c0)))OR(vt1.c0)))IS NOT(((((x'')OR(t1.c2)))AND(t1.c1)))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (NULL IN (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON SUBSTR(CASE WHEN 0.2393279010119309 THEN t1.c0 ELSE vt0.c0 END, CASE vt1.c0  WHEN vt0.c1 THEN vt1.c1 ELSE 0.05379586345916898 END) WHERE ((((t1.c0)) NOT BETWEEN ((CAST(t1.c2 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (t1.c2) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((CAST(t1.c2 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (t1.c2) AND (vt1.c0)))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (NULL IN (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON SUBSTR(CASE WHEN 0.2393279010119309 THEN t1.c0 ELSE vt0.c0 END, CASE vt1.c0  WHEN vt0.c1 THEN vt1.c1 ELSE 0.05379586345916898 END));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (NULL IN (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON SUBSTR(CASE WHEN 0.2393279010119309 THEN t1.c0 ELSE vt0.c0 END, CASE vt1.c0  WHEN vt0.c1 THEN vt1.c1 ELSE 0.05379586345916898 END) WHERE ((((t1.c0)) NOT BETWEEN ((CAST(t1.c2 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (t1.c2) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((CAST(t1.c2 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (t1.c2) AND (vt1.c0)))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (NULL IN (vt0.c0)) COLLATE BINARY LEFT OUTER JOIN vt0 ON SUBSTR(CASE WHEN 0.2393279010119309 THEN t1.c0 ELSE vt0.c0 END, CASE vt1.c0  WHEN vt0.c1 THEN vt1.c1 ELSE 0.05379586345916898 END));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY (- (vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (- (vt1.c0)));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY (- (vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (- (vt1.c0)));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY (- (vt1.c0));
SELECT ALL * FROM vt0 WHERE (((0.14945264344743436)==(vt0.c1)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c0)))!=(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.14945264344743436)=(vt0.c1)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c0)))!=(vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE (((0.14945264344743436)==(vt0.c1)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c0)))!=(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.14945264344743436)=(vt0.c1)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c0)))!=(vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE (((0.14945264344743436)==(vt0.c1)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c1)IS NOT(vt0.c0)))!=(vt0.c0)) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (x'8a51') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'8a51') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (x'8a51') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'8a51') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (x'8a51') ORDER BY rt0.c0;
SELECT ALL * FROM rt0, vt1 WHERE (x'085a');
SELECT SUM(count) FROM (SELECT ALL ((x'085a') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (x'085a');
SELECT SUM(count) FROM (SELECT ALL ((x'085a') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (x'085a');
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY TOTAL_CHANGES() DESC, ((((rt0.c0)%(rt0.c1))) NOT BETWEEN (0.0677708139462111) AND ((- (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY TOTAL_CHANGES() DESC, ((((rt0.c0)%(rt0.c1))) NOT BETWEEN (0.0677708139462111) AND ((- (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY TOTAL_CHANGES() DESC, ((((rt0.c0)%(rt0.c1))) NOT BETWEEN (0.0677708139462111) AND ((- (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY TOTAL_CHANGES() DESC, ((((rt0.c0)%(rt0.c1))) NOT BETWEEN (0.0677708139462111) AND ((- (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY TOTAL_CHANGES() DESC, ((((rt0.c0)%(rt0.c1))) NOT BETWEEN (0.0677708139462111) AND ((- (rt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, rt0 FULL OUTER JOIN t1 ON t1.c1 WHERE (((CASE WHEN vt1.c0 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((t1.c0) NOT NULL)) AND (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((t1.c0) NOT NULL)) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, rt0 FULL OUTER JOIN t1 ON t1.c1);
SELECT COUNT(*) FROM vt0, vt1, rt0 FULL OUTER JOIN t1 ON t1.c1 WHERE (((CASE WHEN vt1.c0 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((t1.c0) NOT NULL)) AND (CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((t1.c0) NOT NULL)) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, rt0 FULL OUTER JOIN t1 ON t1.c1);
SELECT COUNT(*) FROM vt0, vt1, rt0 FULL OUTER JOIN t1 ON t1.c1 WHERE (((CASE WHEN vt1.c0 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (((t1.c0) NOT NULL)) AND (CAST(rt0.c0 AS INTEGER))));
SELECT ALL * FROM vt0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((t1.c1) IS FALSE) ELSE rt0.c2 COLLATE NOCASE END WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((t1.c1) IS FALSE) ELSE rt0.c2 COLLATE NOCASE END);
SELECT ALL * FROM vt0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((t1.c1) IS FALSE) ELSE rt0.c2 COLLATE NOCASE END WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((t1.c1) IS FALSE) ELSE rt0.c2 COLLATE NOCASE END);
SELECT ALL * FROM vt0, t1 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((t1.c1) IS FALSE) ELSE rt0.c2 COLLATE NOCASE END WHERE ((NULL IN ()));
SELECT * FROM t1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c0)/(rt0.c2))  WHEN ((rt0.c2)&(t1.c2)) THEN ((vt0.c1) IS FALSE) WHEN ((vt1.c1)/(t1.c0)) THEN NULL COLLATE NOCASE WHEN ((rt0.c1)-(vt1.c1)) THEN LIKELIHOOD(rt0.c2, 0.46648559751832297) END FULL OUTER JOIN vt1 ON TRIM((NOT (t1.c0))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c0)/(rt0.c2))  WHEN ((rt0.c2)&(t1.c2)) THEN ((vt0.c1) IS FALSE) WHEN ((vt1.c1)/(t1.c0)) THEN NULL COLLATE NOCASE WHEN ((rt0.c1)-(vt1.c1)) THEN LIKELIHOOD(rt0.c2, 0.46648559751832297) END FULL OUTER JOIN vt1 ON TRIM((NOT (t1.c0))));
SELECT * FROM t1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c0)/(rt0.c2))  WHEN ((rt0.c2)&(t1.c2)) THEN ((vt0.c1) IS FALSE) WHEN ((vt1.c1)/(t1.c0)) THEN NULL COLLATE NOCASE WHEN ((rt0.c1)-(vt1.c1)) THEN LIKELIHOOD(rt0.c2, 0.46648559751832297) END FULL OUTER JOIN vt1 ON TRIM((NOT (t1.c0))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN vt0 ON CASE ((vt1.c0)/(rt0.c2))  WHEN ((rt0.c2)&(t1.c2)) THEN ((vt0.c1) IS FALSE) WHEN ((vt1.c1)/(t1.c0)) THEN NULL COLLATE NOCASE WHEN ((rt0.c1)-(vt1.c1)) THEN LIKELIHOOD(rt0.c2, 0.46648559751832297) END FULL OUTER JOIN vt1 ON TRIM((NOT (t1.c0))));
SELECT ALL * FROM t1 WHERE ((NOT (CASE WHEN t1.c1 THEN t1.c0 ELSE '' END))) ORDER BY t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t1.c1 THEN t1.c0 ELSE '' END))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC);
SELECT ALL * FROM t1 WHERE ((NOT (CASE WHEN t1.c1 THEN t1.c0 ELSE '' END))) ORDER BY t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t1.c1 THEN t1.c0 ELSE '' END))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC);
SELECT ALL * FROM t1 WHERE ((NOT (CASE WHEN t1.c1 THEN t1.c0 ELSE '' END))) ORDER BY t1.c0 ASC;
SELECT * FROM vt1, rt0, t1 WHERE ('21220215');
SELECT SUM(count) FROM (SELECT ALL (('21220215') IS TRUE)  as count FROM vt1, rt0, t1);
SELECT * FROM vt1, rt0, t1 WHERE ('21220215');
SELECT SUM(count) FROM (SELECT ALL (('21220215') IS TRUE)  as count FROM vt1, rt0, t1);
SELECT * FROM vt1, rt0, t1 WHERE ('21220215');
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM vt1 WHERE ((CAST(vt1.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CAST(vt1.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((CAST(vt1.c1 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((((t1.c1, rt0.c1, vt0.c0)) BETWEEN ((vt1.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((((t1.c1, rt0.c1, vt0.c0)) BETWEEN ((vt1.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((((t1.c1, rt0.c1, vt0.c0)) BETWEEN ((vt1.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((((t1.c1, rt0.c1, vt0.c0)) BETWEEN ((vt1.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, vt1, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((((t1.c1, rt0.c1, vt0.c0)) BETWEEN ((vt1.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((x'')AND(t1.c2)))AND(rt0.c0)))>=(x'a693')));
SELECT SUM(count) FROM (SELECT ((((((((x'')AND(t1.c2)))AND(rt0.c0)))>=(x'a693'))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((x'')AND(t1.c2)))AND(rt0.c0)))>=(x'a693')));
SELECT SUM(count) FROM (SELECT ((((((((x'')AND(t1.c2)))AND(rt0.c0)))>=(x'a693'))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((x'')AND(t1.c2)))AND(rt0.c0)))>=(x'a693')));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((rt0.c1) ISNULL) WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c1) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((rt0.c1) ISNULL) WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c1) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt1 ON ((rt0.c1) ISNULL) WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL));
SELECT ALL COUNT(*) FROM vt1, rt0, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((t1.c0) BETWEEN (rt0.c0) AND (t1.c2)) THEN INSTR(vt0.c1, vt1.c1) END WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((t1.c0) BETWEEN (rt0.c0) AND (t1.c2)) THEN INSTR(vt0.c1, vt1.c1) END);
SELECT ALL COUNT(*) FROM vt1, rt0, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((t1.c0) BETWEEN (rt0.c0) AND (t1.c2)) THEN INSTR(vt0.c1, vt1.c1) END WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((t1.c0) BETWEEN (rt0.c0) AND (t1.c2)) THEN INSTR(vt0.c1, vt1.c1) END);
SELECT ALL COUNT(*) FROM vt1, rt0, t1 LEFT OUTER JOIN vt0 ON CASE WHEN ((t1.c0) BETWEEN (rt0.c0) AND (t1.c2)) THEN INSTR(vt0.c1, vt1.c1) END WHERE (t1.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE ('1601985963');
SELECT SUM(count) FROM (SELECT ALL (('1601985963') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('1601985963');
SELECT SUM(count) FROM (SELECT ALL (('1601985963') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('1601985963');
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((((((((NULL)OR(((t1.c1) BETWEEN (vt1.c1) AND (t1.c0)))))OR((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(NULL)))AND(x'')) LEFT OUTER JOIN vt0 ON ((((rt0.c1) ISNULL))!=(((((t1.c1)OR(rt0.c2)))OR(vt1.c0)))) CROSS JOIN rt0 ON ((rt0.c1) ISNULL) WHERE (((rt0.c2)IS(rt0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((t1.c0))>=((vt1.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(rt0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((((((((NULL)OR(((t1.c1) BETWEEN (vt1.c1) AND (t1.c0)))))OR((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(NULL)))AND(x'')) LEFT OUTER JOIN vt0 ON ((((rt0.c1) ISNULL))!=(((((t1.c1)OR(rt0.c2)))OR(vt1.c0)))) CROSS JOIN rt0 ON ((rt0.c1) ISNULL) ORDER BY ((((t1.c0))>=((vt1.c1))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((((((((NULL)OR(((t1.c1) BETWEEN (vt1.c1) AND (t1.c0)))))OR((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(NULL)))AND(x'')) LEFT OUTER JOIN vt0 ON ((((rt0.c1) ISNULL))!=(((((t1.c1)OR(rt0.c2)))OR(vt1.c0)))) CROSS JOIN rt0 ON ((rt0.c1) ISNULL) WHERE (((rt0.c2)IS(rt0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((((t1.c0))>=((vt1.c1))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(rt0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((((((((NULL)OR(((t1.c1) BETWEEN (vt1.c1) AND (t1.c0)))))OR((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(NULL)))AND(x'')) LEFT OUTER JOIN vt0 ON ((((rt0.c1) ISNULL))!=(((((t1.c1)OR(rt0.c2)))OR(vt1.c0)))) CROSS JOIN rt0 ON ((rt0.c1) ISNULL) ORDER BY ((((t1.c0))>=((vt1.c1))) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (((vt1.c0)OR(rt0.c1))) AND (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (((vt1.c0)OR(rt0.c1))) AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (((vt1.c0)OR(rt0.c1))) AND (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (((vt1.c0)OR(rt0.c1))) AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt0 WHERE (((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (((vt1.c0)OR(rt0.c1))) AND (((rt0.c0) IS TRUE))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CAST((vt0.c1 IN ()) AS NUMERIC) WHERE (t1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t1.c2 COLLATE NOCASE) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CAST((vt0.c1 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CAST((vt0.c1 IN ()) AS NUMERIC) WHERE (t1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t1.c2 COLLATE NOCASE) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CAST((vt0.c1 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CAST((vt0.c1 IN ()) AS NUMERIC) WHERE (t1.c2 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0xffffffffe47af7b1);
SELECT SUM(count) FROM (SELECT ((0xffffffffe47af7b1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0xffffffffe47af7b1);
SELECT SUM(count) FROM (SELECT ((0xffffffffe47af7b1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0xffffffffe47af7b1);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((NULL) NOT NULL) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON ((LTRIM(vt0.c1)) NOT NULL) WHERE ((((NOT (vt0.c0)))IS(CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))IS(CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((NULL) NOT NULL) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON ((LTRIM(vt0.c1)) NOT NULL));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((NULL) NOT NULL) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON ((LTRIM(vt0.c1)) NOT NULL) WHERE ((((NOT (vt0.c0)))IS(CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))IS(CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((NULL) NOT NULL) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON ((LTRIM(vt0.c1)) NOT NULL));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((NULL) NOT NULL) COLLATE NOCASE RIGHT OUTER JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt0 ON ((LTRIM(vt0.c1)) NOT NULL) WHERE ((((NOT (vt0.c0)))IS(CASE vt1.c0  WHEN vt0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT ALL * FROM vt1, rt0 INNER JOIN t1 ON (((((vt0.c1))<((vt0.c0)))) NOT BETWEEN ((((rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, t1.c1, rt0.c1)) AND ((t1.c0, vt1.c1, rt0.c0)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON NULL WHERE (((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))AND(((rt0.c1) IS TRUE))))OR(CASE vt0.c0  WHEN t1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))AND(((rt0.c1) IS TRUE))))OR(CASE vt0.c0  WHEN t1.c1 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t1 ON (((((vt0.c1))<((vt0.c0)))) NOT BETWEEN ((((rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, t1.c1, rt0.c1)) AND ((t1.c0, vt1.c1, rt0.c0)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON NULL);
SELECT ALL * FROM vt1, rt0 INNER JOIN t1 ON (((((vt0.c1))<((vt0.c0)))) NOT BETWEEN ((((rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, t1.c1, rt0.c1)) AND ((t1.c0, vt1.c1, rt0.c0)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON NULL WHERE (((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))AND(((rt0.c1) IS TRUE))))OR(CASE vt0.c0  WHEN t1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))AND(((rt0.c1) IS TRUE))))OR(CASE vt0.c0  WHEN t1.c1 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t1 ON (((((vt0.c1))<((vt0.c0)))) NOT BETWEEN ((((rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, t1.c1, rt0.c1)) AND ((t1.c0, vt1.c1, rt0.c0)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON NULL);
SELECT ALL * FROM vt1, rt0 INNER JOIN t1 ON (((((vt0.c1))<((vt0.c0)))) NOT BETWEEN ((((rt0.c1, rt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, t1.c1, rt0.c1)) AND ((t1.c0, vt1.c1, rt0.c0)))) AND (((rt0.c1) ISNULL))) LEFT OUTER JOIN vt0 ON NULL WHERE (((((((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)))AND(((rt0.c1) IS TRUE))))OR(CASE vt0.c0  WHEN t1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT * FROM t1, rt0 WHERE (((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c2)/('-594391913'))) AND (((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0))))) ORDER BY ((t1.c2)%(t1.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c2)/('-594391913'))) AND (((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((t1.c2)%(t1.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM t1, rt0 WHERE (((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c2)/('-594391913'))) AND (((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0))))) ORDER BY ((t1.c2)%(t1.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c2)/('-594391913'))) AND (((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((t1.c2)%(t1.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM t1, rt0 WHERE (((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c2)/('-594391913'))) AND (((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0))))) ORDER BY ((t1.c2)%(t1.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (IFNULL(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c2 IN ()))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (IFNULL(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c2 IN ()))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (IFNULL(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c2 IN ())));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ((((vt1.c1, vt0.c1, vt1.c0, vt0.c1, rt0.c2))<((rt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c1, vt0.c1, vt1.c0, vt0.c1, rt0.c2))<((rt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ((((vt1.c1, vt0.c1, vt1.c0, vt0.c1, rt0.c2))<((rt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c1, vt0.c1, vt1.c0, vt0.c1, rt0.c2))<((rt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT ((((vt1.c1, vt0.c1, vt1.c0, vt0.c1, rt0.c2))<((rt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c0))))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((~ (t1.c0))))<(((NOT (t1.c1))))) WHERE (((((((vt0.c1)OR(t1.c0)))OR(vt0.c1)))AND((+ (0.37788644795409887))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c1 END) BETWEEN (0.31051260435736094) AND (('|,.Rm2' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(t1.c0)))OR(vt0.c1)))AND((+ (0.37788644795409887))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((~ (t1.c0))))<(((NOT (t1.c1))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c1 END) BETWEEN (0.31051260435736094) AND (('|,.Rm2' IN ()))) ASC);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((~ (t1.c0))))<(((NOT (t1.c1))))) WHERE (((((((vt0.c1)OR(t1.c0)))OR(vt0.c1)))AND((+ (0.37788644795409887))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c1 END) BETWEEN (0.31051260435736094) AND (('|,.Rm2' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(t1.c0)))OR(vt0.c1)))AND((+ (0.37788644795409887))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((~ (t1.c0))))<(((NOT (t1.c1))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c1 END) BETWEEN (0.31051260435736094) AND (('|,.Rm2' IN ()))) ASC);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((~ (t1.c0))))<(((NOT (t1.c1))))) WHERE (((((((vt0.c1)OR(t1.c0)))OR(vt0.c1)))AND((+ (0.37788644795409887))))) ORDER BY ((CASE WHEN t1.c2 THEN t1.c1 END) BETWEEN (0.31051260435736094) AND (('|,.Rm2' IN ()))) ASC;
SELECT COUNT(*) FROM vt1, t1, rt0 WHERE ('-160410844');
SELECT SUM(count) FROM (SELECT ALL (('-160410844') IS TRUE)  as count FROM vt1, t1, rt0);
SELECT COUNT(*) FROM vt1, t1, rt0 WHERE ('-160410844');
SELECT SUM(count) FROM (SELECT ALL (('-160410844') IS TRUE)  as count FROM vt1, t1, rt0);
SELECT COUNT(*) FROM vt1, t1, rt0 WHERE ('-160410844');
SELECT * FROM t1, vt1, vt0 WHERE (0.1335716868635387) ORDER BY vt0.c0 ASC, (- (CASE vt0.c1  WHEN '*t' THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.1335716868635387) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt0.c0 ASC, (- (CASE vt0.c1  WHEN '*t' THEN vt0.c0 END))  NULLS LAST);
SELECT * FROM t1, vt1, vt0 WHERE (0.1335716868635387) ORDER BY vt0.c0 ASC, (- (CASE vt0.c1  WHEN '*t' THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.1335716868635387) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt0.c0 ASC, (- (CASE vt0.c1  WHEN '*t' THEN vt0.c0 END))  NULLS LAST);
SELECT * FROM t1, vt1, vt0 WHERE (0.1335716868635387) ORDER BY vt0.c0 ASC, (- (CASE vt0.c1  WHEN '*t' THEN vt0.c0 END))  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c1)%(vt1.c1)) COLLATE NOCASE) ORDER BY (+ (((vt1.c0)*(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)%(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)*(vt1.c1)))) ASC);
SELECT * FROM vt1 WHERE (((vt1.c1)%(vt1.c1)) COLLATE NOCASE) ORDER BY (+ (((vt1.c0)*(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)%(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)*(vt1.c1)))) ASC);
SELECT * FROM vt1 WHERE (((vt1.c1)%(vt1.c1)) COLLATE NOCASE) ORDER BY (+ (((vt1.c0)*(vt1.c1)))) ASC;
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c1)))&(((((t1.c0)OR(t1.c0)))AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c1)))&(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c1)))&(((((t1.c0)OR(t1.c0)))AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c1)))&(((((t1.c0)OR(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((+ (t1.c1)))&(((((t1.c0)OR(t1.c0)))AND(t1.c0)))));
SELECT ALL * FROM t1 FULL OUTER JOIN vt1 ON ((((vt0.c1)OR(vt0.c0)))AND(t1.c1)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((0X1554a641)AND((NOT (NULL)))))OR((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON ((((vt0.c1)OR(vt0.c0)))AND(t1.c1)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((0X1554a641)AND((NOT (NULL)))))OR((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))));
SELECT ALL * FROM t1 FULL OUTER JOIN vt1 ON ((((vt0.c1)OR(vt0.c0)))AND(t1.c1)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((0X1554a641)AND((NOT (NULL)))))OR((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON ((((vt0.c1)OR(vt0.c0)))AND(t1.c1)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((0X1554a641)AND((NOT (NULL)))))OR((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))));
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t1 ON ((((t1.c2)>=(rt0.c1))) NOTNULL) FULL OUTER JOIN vt1 ON (((((vt1.c0 IN (rt0.c0)))AND((t1.c2 IN (rt0.c2, rt0.c0)))))AND(vt1.c0)) WHERE (json_insert('-1812902692', COALESCE(DISTINCT rt0.c1, vt1.c1, t1.c0, vt0.c0), ((vt1.c0)+(t1.c2)), CAST(vt0.c0 AS BLOB), CASE t1.c2  WHEN t1.c1 THEN vt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN vt1.c1 THEN NULL END, ((vt1.c1)*(rt0.c1)), (vt1.c0 IN (t1.c1, rt0.c0)), ((vt1.c1)IS NOT(vt0.c1)), ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((rt0.c2)));
SELECT SUM(count) FROM (SELECT ((json_insert('-1812902692', COALESCE(DISTINCT rt0.c1, vt1.c1, t1.c0, vt0.c0), ((vt1.c0)+(t1.c2)), CAST(vt0.c0 AS BLOB), CASE t1.c2  WHEN t1.c1 THEN vt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN vt1.c1 THEN NULL END, ((vt1.c1)*(rt0.c1)), (vt1.c0 IN (t1.c1, rt0.c0)), ((vt1.c1)IS NOT(vt0.c1)), ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t1 ON ((((t1.c2)>=(rt0.c1))) NOTNULL) FULL OUTER JOIN vt1 ON (((((vt1.c0 IN (rt0.c0)))AND((t1.c2 IN (rt0.c2, rt0.c0)))))AND(vt1.c0)) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((rt0.c2))));
SELECT ALL * FROM vt0, rt0 LEFT OUTER JOIN t1 ON ((((t1.c2)>=(rt0.c1))) NOTNULL) FULL OUTER JOIN vt1 ON (((((vt1.c0 IN (rt0.c0)))AND((t1.c2 IN (rt0.c2, rt0.c0)))))AND(vt1.c0)) WHERE (json_insert('-1812902692', COALESCE(DISTINCT rt0.c1, vt1.c1, t1.c0, vt0.c0), ((vt1.c0)+(t1.c2)), CAST(vt0.c0 AS BLOB), CASE t1.c2  WHEN t1.c1 THEN vt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN vt1.c1 THEN NULL END, ((vt1.c1)*(rt0.c1)), (vt1.c0 IN (t1.c1, rt0.c0)), ((vt1.c1)IS NOT(vt0.c1)), ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((rt0.c2)));
SELECT SUM(count) FROM (SELECT ((json_insert('-1812902692', COALESCE(DISTINCT rt0.c1, vt1.c1, t1.c0, vt0.c0), ((vt1.c0)+(t1.c2)), CAST(vt0.c0 AS BLOB), CASE t1.c2  WHEN t1.c1 THEN vt0.c1 WHEN rt0.c0 THEN t1.c1 WHEN vt1.c1 THEN NULL END, ((vt1.c1)*(rt0.c1)), (vt1.c0 IN (t1.c1, rt0.c0)), ((vt1.c1)IS NOT(vt0.c1)), ((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t1 ON ((((t1.c2)>=(rt0.c1))) NOTNULL) FULL OUTER JOIN vt1 ON (((((vt1.c0 IN (rt0.c0)))AND((t1.c2 IN (rt0.c2, rt0.c0)))))AND(vt1.c0)) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((rt0.c2))));
SELECT ALL * FROM t1 WHERE ((((t1.c2)OR(t1.c2)) IN (t1.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c2)OR(t1.c2)) IN (t1.c0))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2)OR(t1.c2)) IN (t1.c0)));
SELECT SUM(count) FROM (SELECT (((((t1.c2)OR(t1.c2)) IN (t1.c0))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2)OR(t1.c2)) IN (t1.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c1)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c1)) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (('0.030565698374357075') IS FALSE) DESC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c1)))AND(0.5083762910734597)))OR(TYPEOF(vt0.c0))))OR(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (('0.030565698374357075') IS FALSE) DESC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c1)))AND(0.5083762910734597)))OR(TYPEOF(vt0.c0))))OR(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (('0.030565698374357075') IS FALSE) DESC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c1)))AND(0.5083762910734597)))OR(TYPEOF(vt0.c0))))OR(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (('0.030565698374357075') IS FALSE) DESC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c1)))AND(0.5083762910734597)))OR(TYPEOF(vt0.c0))))OR(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (('0.030565698374357075') IS FALSE) DESC  NULLS LAST, ((((((((vt0.c0)AND(vt0.c1)))AND(0.5083762910734597)))OR(TYPEOF(vt0.c0))))OR(vt0.c0)) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (468381327) AND (vt1.c1)) AS TEXT)) ORDER BY (((vt1.c0)IS(NULL)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOT BETWEEN (468381327) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)IS(NULL)) IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (468381327) AND (vt1.c1)) AS TEXT)) ORDER BY (((vt1.c0)IS(NULL)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOT BETWEEN (468381327) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)IS(NULL)) IN ()) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c1) NOT BETWEEN (468381327) AND (vt1.c1)) AS TEXT)) ORDER BY (((vt1.c0)IS(NULL)) IN ()) DESC;
SELECT ALL * FROM vt1, rt0, t1, vt0 WHERE (((t1.c0)<=(vt0.c1)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CASE WHEN (~ (vt1.c0)) THEN (NOT (t1.c1)) WHEN (- (vt0.c0)) THEN ((((vt0.c0)AND(t1.c0)))OR(rt0.c2)) WHEN (vt1.c0 IN ()) THEN t1.c2 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)<=(vt0.c1)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, t1, vt0 ORDER BY CASE WHEN (~ (vt1.c0)) THEN (NOT (t1.c1)) WHEN (- (vt0.c0)) THEN ((((vt0.c0)AND(t1.c0)))OR(rt0.c2)) WHEN (vt1.c0 IN ()) THEN t1.c2 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, t1, vt0 WHERE (((t1.c0)<=(vt0.c1)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CASE WHEN (~ (vt1.c0)) THEN (NOT (t1.c1)) WHEN (- (vt0.c0)) THEN ((((vt0.c0)AND(t1.c0)))OR(rt0.c2)) WHEN (vt1.c0 IN ()) THEN t1.c2 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)<=(vt0.c1)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, t1, vt0 ORDER BY CASE WHEN (~ (vt1.c0)) THEN (NOT (t1.c1)) WHEN (- (vt0.c0)) THEN ((((vt0.c0)AND(t1.c0)))OR(rt0.c2)) WHEN (vt1.c0 IN ()) THEN t1.c2 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, t1, vt0 WHERE (((t1.c0)<=(vt0.c1)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CASE WHEN (~ (vt1.c0)) THEN (NOT (t1.c1)) WHEN (- (vt0.c0)) THEN ((((vt0.c0)AND(t1.c0)))OR(rt0.c2)) WHEN (vt1.c0 IN ()) THEN t1.c2 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN ((- (rt0.c2))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN ((- (rt0.c2))) AND (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN ((- (rt0.c2))) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT BETWEEN ((- (rt0.c2))) AND (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT BETWEEN ((- (rt0.c2))) AND (rt0.c2)));
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (((t1.c2) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (((t1.c2) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1, t1);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (((t1.c2) IS FALSE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt1 WHERE (CAST((NOT (vt1.c0)) AS INTEGER)) ORDER BY (((~ (vt1.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t1, vt1 ORDER BY (((~ (vt1.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt1 WHERE (CAST((NOT (vt1.c0)) AS INTEGER)) ORDER BY (((~ (vt1.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t1, vt1 ORDER BY (((~ (vt1.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt1 WHERE (CAST((NOT (vt1.c0)) AS INTEGER)) ORDER BY (((~ (vt1.c1))) IS TRUE);
SELECT ALL COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN t1 ON CAST((((('1805959364')OR(x'')))AND(vt1.c1)) AS BLOB) WHERE ((((('V')OR(vt1.c0)))OR(NULL)) COLLATE BINARY) ORDER BY ((((t1.c1) BETWEEN (0.9041212419379264) AND (t1.c1)))||(CAST(vt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('V')OR(vt1.c0)))OR(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t1 ON CAST((((('1805959364')OR(x'')))AND(vt1.c1)) AS BLOB) ORDER BY ((((t1.c1) BETWEEN (0.9041212419379264) AND (t1.c1)))||(CAST(vt1.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN t1 ON CAST((((('1805959364')OR(x'')))AND(vt1.c1)) AS BLOB) WHERE ((((('V')OR(vt1.c0)))OR(NULL)) COLLATE BINARY) ORDER BY ((((t1.c1) BETWEEN (0.9041212419379264) AND (t1.c1)))||(CAST(vt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('V')OR(vt1.c0)))OR(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t1 ON CAST((((('1805959364')OR(x'')))AND(vt1.c1)) AS BLOB) ORDER BY ((((t1.c1) BETWEEN (0.9041212419379264) AND (t1.c1)))||(CAST(vt1.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN t1 ON CAST((((('1805959364')OR(x'')))AND(vt1.c1)) AS BLOB) WHERE ((((('V')OR(vt1.c0)))OR(NULL)) COLLATE BINARY) ORDER BY ((((t1.c1) BETWEEN (0.9041212419379264) AND (t1.c1)))||(CAST(vt1.c0 AS INTEGER)))  NULLS LAST;
SELECT * FROM vt1, t1, vt0 WHERE ('-2105238600');
SELECT SUM(count) FROM (SELECT ALL (('-2105238600') IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE ('-2105238600');
SELECT SUM(count) FROM (SELECT ALL (('-2105238600') IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE ('-2105238600');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))=(CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))==(CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))=(CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))==(CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))=(CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1, t1, rt0 CROSS JOIN vt0 ON rt0.c2 WHERE (((NULL) NOT BETWEEN (CASE WHEN t1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c1 THEN '-1529603424' ELSE vt1.c0 END) AND (SQLITE_VERSION()))) ORDER BY x'fc627c1a' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (CASE WHEN t1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c1 THEN '-1529603424' ELSE vt1.c0 END) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM vt1, t1, rt0 CROSS JOIN vt0 ON rt0.c2 ORDER BY x'fc627c1a' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1, rt0 CROSS JOIN vt0 ON rt0.c2 WHERE (((NULL) NOT BETWEEN (CASE WHEN t1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c1 THEN '-1529603424' ELSE vt1.c0 END) AND (SQLITE_VERSION()))) ORDER BY x'fc627c1a' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (CASE WHEN t1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c1 THEN '-1529603424' ELSE vt1.c0 END) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM vt1, t1, rt0 CROSS JOIN vt0 ON rt0.c2 ORDER BY x'fc627c1a' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1, rt0 CROSS JOIN vt0 ON rt0.c2 WHERE (((NULL) NOT BETWEEN (CASE WHEN t1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c1 THEN '-1529603424' ELSE vt1.c0 END) AND (SQLITE_VERSION()))) ORDER BY x'fc627c1a' DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN (((rt0.c2)+(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (((rt0.c2)+(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN (((rt0.c2)+(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (((rt0.c2)+(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN (((rt0.c2)+(rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((((((~ (vt1.c0)))OR('' COLLATE RTRIM)))OR(((t1.c1)<(t1.c0)))))AND((((t1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))))OR(CAST(vt0.c1 AS INTEGER))))AND(((t1.c2)<>(vt1.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c2 END)) LEFT OUTER JOIN t1 ON ((((((rt0.c1)AND(t1.c2)))OR(t1.c2))) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))) AND (('297837031' IN (rt0.c2, rt0.c2)))) INNER JOIN rt0 ON t1.c1 WHERE (CAST((vt1.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((((((~ (vt1.c0)))OR('' COLLATE RTRIM)))OR(((t1.c1)<(t1.c0)))))AND((((t1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))))OR(CAST(vt0.c1 AS INTEGER))))AND(((t1.c2)<>(vt1.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c2 END)) LEFT OUTER JOIN t1 ON ((((((rt0.c1)AND(t1.c2)))OR(t1.c2))) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))) AND (('297837031' IN (rt0.c2, rt0.c2)))) INNER JOIN rt0 ON t1.c1);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((((((~ (vt1.c0)))OR('' COLLATE RTRIM)))OR(((t1.c1)<(t1.c0)))))AND((((t1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))))OR(CAST(vt0.c1 AS INTEGER))))AND(((t1.c2)<>(vt1.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c2 END)) LEFT OUTER JOIN t1 ON ((((((rt0.c1)AND(t1.c2)))OR(t1.c2))) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))) AND (('297837031' IN (rt0.c2, rt0.c2)))) INNER JOIN rt0 ON t1.c1 WHERE (CAST((vt1.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((((((~ (vt1.c0)))OR('' COLLATE RTRIM)))OR(((t1.c1)<(t1.c0)))))AND((((t1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))))OR(CAST(vt0.c1 AS INTEGER))))AND(((t1.c2)<>(vt1.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c2 END)) LEFT OUTER JOIN t1 ON ((((((rt0.c1)AND(t1.c2)))OR(t1.c2))) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))) AND (('297837031' IN (rt0.c2, rt0.c2)))) INNER JOIN rt0 ON t1.c1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((x'f4b9')) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))) ORDER BY 1.542076329E9 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((x'f4b9')) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY 1.542076329E9 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((x'f4b9')) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))) ORDER BY 1.542076329E9 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((x'f4b9')) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY 1.542076329E9 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((x'f4b9')) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))) ORDER BY 1.542076329E9 DESC;
SELECT COUNT(*) FROM vt1, t1 INNER JOIN rt0 ON (CASE WHEN t1.c1 THEN t1.c1 ELSE vt1.c0 END IN ()) WHERE (((0x6686077e)|(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0X6686077e)|(vt1.c0))) IS TRUE)  as count FROM vt1, t1 INNER JOIN rt0 ON (CASE WHEN t1.c1 THEN t1.c1 ELSE vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt1, t1 INNER JOIN rt0 ON (CASE WHEN t1.c1 THEN t1.c1 ELSE vt1.c0 END IN ()) WHERE (((0x6686077e)|(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0X6686077e)|(vt1.c0))) IS TRUE)  as count FROM vt1, t1 INNER JOIN rt0 ON (CASE WHEN t1.c1 THEN t1.c1 ELSE vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt1, t1 INNER JOIN rt0 ON (CASE WHEN t1.c1 THEN t1.c1 ELSE vt1.c0 END IN ()) WHERE (((0x6686077e)|(vt1.c0)));
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE (((0Xffffffffc55a85c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c1)OR(t1.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0xffffffffc55a85c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c1)OR(t1.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE (((0Xffffffffc55a85c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c1)OR(t1.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0xffffffffc55a85c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c1)OR(t1.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE (((0Xffffffffc55a85c0) NOT BETWEEN (vt0.c0) AND (((((vt0.c1)OR(t1.c0)))OR(rt0.c1)))));
SELECT ALL * FROM t1, vt1 INNER JOIN vt0 ON CASE (((rt0.c1))<((rt0.c0)))  WHEN json_array(vt1.c0, rt0.c2) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)) ELSE ((rt0.c1)<(vt1.c1)) END INNER JOIN rt0 ON 'j[Ku4' COLLATE BINARY WHERE (0.8147023232944747);
SELECT SUM(count) FROM (SELECT ALL ((0.8147023232944747) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON CASE (((rt0.c1))<((rt0.c0)))  WHEN json_array(vt1.c0, rt0.c2) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)) ELSE ((rt0.c1)<(vt1.c1)) END INNER JOIN rt0 ON 'j[Ku4' COLLATE BINARY);
SELECT ALL * FROM t1, vt1 INNER JOIN vt0 ON CASE (((rt0.c1))<((rt0.c0)))  WHEN json_array(vt1.c0, rt0.c2) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)) ELSE ((rt0.c1)<(vt1.c1)) END INNER JOIN rt0 ON 'j[Ku4' COLLATE BINARY WHERE (0.8147023232944747);
SELECT SUM(count) FROM (SELECT ALL ((0.8147023232944747) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON CASE (((rt0.c1))<((rt0.c0)))  WHEN json_array(vt1.c0, rt0.c2) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)) ELSE ((rt0.c1)<(vt1.c1)) END INNER JOIN rt0 ON 'j[Ku4' COLLATE BINARY);
SELECT ALL * FROM t1, vt1 INNER JOIN vt0 ON CASE (((rt0.c1))<((rt0.c0)))  WHEN json_array(vt1.c0, rt0.c2) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c2)) ELSE ((rt0.c1)<(vt1.c1)) END INNER JOIN rt0 ON 'j[Ku4' COLLATE BINARY WHERE (0.8147023232944747);
SELECT ALL * FROM t1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST((NOT (0.5333012216170744)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t1 ORDER BY CAST((NOT (0.5333012216170744)) AS INTEGER) ASC);
SELECT ALL * FROM t1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST((NOT (0.5333012216170744)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t1 ORDER BY CAST((NOT (0.5333012216170744)) AS INTEGER) ASC);
SELECT ALL * FROM t1 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST((NOT (0.5333012216170744)) AS INTEGER) ASC;
SELECT * FROM t1 WHERE (((((~ (t1.c1))))<=((t1.c1 COLLATE RTRIM)))) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (x'c810')))==(x'04d1')), NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t1.c1))))<=((t1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (x'c810')))==(x'04d1')), NULL ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((~ (t1.c1))))<=((t1.c1 COLLATE RTRIM)))) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (x'c810')))==(x'04d1')), NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t1.c1))))<=((t1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (x'c810')))==(x'04d1')), NULL ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((~ (t1.c1))))<=((t1.c1 COLLATE RTRIM)))) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (x'c810')))==(x'04d1')), NULL ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1, vt1 WHERE ((((x'' IN ())) BETWEEN ((((0xffffffffeda1594f))!=((vt1.c1)))) AND (((vt1.c0)IS NOT(x'')))));
SELECT SUM(count) FROM (SELECT (((((x'' IN ())) BETWEEN ((((0xffffffffeda1594f))<>((vt1.c1)))) AND (((vt1.c0)IS NOT(x''))))) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT COUNT(*) FROM rt0, t1, vt1 WHERE ((((x'' IN ())) BETWEEN ((((0xffffffffeda1594f))!=((vt1.c1)))) AND (((vt1.c0)IS NOT(x'')))));
SELECT SUM(count) FROM (SELECT (((((x'' IN ())) BETWEEN ((((0xffffffffeda1594f))<>((vt1.c1)))) AND (((vt1.c0)IS NOT(x''))))) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT COUNT(*) FROM rt0, t1, vt1 WHERE ((((x'' IN ())) BETWEEN ((((0xffffffffeda1594f))!=((vt1.c1)))) AND (((vt1.c0)IS NOT(x'')))));
SELECT * FROM vt0 WHERE (((((((((((((0.682627948479247)OR(vt0.c0)))AND(0.12581205603502554)))AND(vt0.c1)))OR(vt0.c0)))OR(CASE vt0.c1  WHEN 9.06190244E8 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c1) IS FALSE)))) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (vt0.c0) AND (NULL)), CAST(CAST(vt0.c1 AS TEXT) AS INTEGER), HEX((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.682627948479247)OR(vt0.c0)))AND(0.12581205603502554)))AND(vt0.c1)))OR(vt0.c0)))OR(CASE vt0.c1  WHEN 9.06190244E8 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (vt0.c0) AND (NULL)), CAST(CAST(vt0.c1 AS TEXT) AS INTEGER), HEX((vt0.c0 IN ())));
SELECT * FROM vt0 WHERE (((((((((((((0.682627948479247)OR(vt0.c0)))AND(0.12581205603502554)))AND(vt0.c1)))OR(vt0.c0)))OR(CASE vt0.c1  WHEN 9.06190244E8 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c1) IS FALSE)))) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (vt0.c0) AND (NULL)), CAST(CAST(vt0.c1 AS TEXT) AS INTEGER), HEX((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.682627948479247)OR(vt0.c0)))AND(0.12581205603502554)))AND(vt0.c1)))OR(vt0.c0)))OR(CASE vt0.c1  WHEN 9.06190244E8 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (vt0.c0) AND (NULL)), CAST(CAST(vt0.c1 AS TEXT) AS INTEGER), HEX((vt0.c0 IN ())));
SELECT * FROM vt0 WHERE (((((((((((((0.682627948479247)OR(vt0.c0)))AND(0.12581205603502554)))AND(vt0.c1)))OR(vt0.c0)))OR(CASE vt0.c1  WHEN 9.06190244E8 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c1) IS FALSE)))) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (vt0.c0) AND (NULL)), CAST(CAST(vt0.c1 AS TEXT) AS INTEGER), HEX((vt0.c0 IN ()));
SELECT COUNT(*) FROM vt0, vt1, rt0, t1 WHERE (CAST(((vt1.c0) BETWEEN (t1.c1) AND (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (t1.c1) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0, t1);
SELECT COUNT(*) FROM vt0, vt1, rt0, t1 WHERE (CAST(((vt1.c0) BETWEEN (t1.c1) AND (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (t1.c1) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0, t1);
SELECT COUNT(*) FROM vt0, vt1, rt0, t1 WHERE (CAST(((vt1.c0) BETWEEN (t1.c1) AND (vt0.c1)) AS REAL));
SELECT * FROM vt1 INNER JOIN t1 ON (CASE t1.c1  WHEN t1.c1 THEN vt1.c1 END IN (rt0.c2 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) IS FALSE) THEN rt0.c2 ELSE x'' END FULL OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((((vt0.c0)!=(vt1.c1)))) AND ((json_object(vt0.c1, rt0.c2)))) WHERE (((NULL)OR(vt1.c1)));
SELECT SUM(count) FROM (SELECT ((((NULL)OR(vt1.c1))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON (CASE t1.c1  WHEN t1.c1 THEN vt1.c1 END IN (rt0.c2 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) IS FALSE) THEN rt0.c2 ELSE x'' END FULL OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((((vt0.c0)<>(vt1.c1)))) AND ((json_object(vt0.c1, rt0.c2)))));
SELECT * FROM vt1 INNER JOIN t1 ON (CASE t1.c1  WHEN t1.c1 THEN vt1.c1 END IN (rt0.c2 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) IS FALSE) THEN rt0.c2 ELSE x'' END FULL OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((((vt0.c0)!=(vt1.c1)))) AND ((json_object(vt0.c1, rt0.c2)))) WHERE (((NULL)OR(vt1.c1)));
SELECT SUM(count) FROM (SELECT ((((NULL)OR(vt1.c1))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON (CASE t1.c1  WHEN t1.c1 THEN vt1.c1 END IN (rt0.c2 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c0) IS FALSE) THEN rt0.c2 ELSE x'' END FULL OUTER JOIN vt0 ON (((rt0.c2)) BETWEEN ((((vt0.c0)<>(vt1.c1)))) AND ((json_object(vt0.c1, rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (((((((((((vt0.c0, t1.c0, vt0.c0))=((t1.c2, t1.c2, NULL))))AND(NULL)))OR(t1.c1)))OR(LOWER(t1.c0))))AND(vt1.c1)) CROSS JOIN vt0 ON CAST(json_object(vt1.c1, vt1.c0) AS TEXT) INNER JOIN vt1 ON x'' WHERE (((((t1.c0)OR((((t1.c1, vt0.c0, t1.c1, '619270983', rt0.c2))<=((t1.c1, vt0.c0, rt0.c1, vt0.c1, vt0.c1))))))OR(NULL))) ORDER BY ((((rt0.c0)IS NOT(rt0.c0)))!=(((t1.c2) IS TRUE))) ASC, CAST(((((t1.c1)OR(rt0.c1)))OR(rt0.c2)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)OR((((t1.c1, vt0.c0, t1.c1, '619270983', rt0.c2))<=((t1.c1, vt0.c0, rt0.c1, vt0.c1, vt0.c1))))))OR(NULL))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (((((((((((vt0.c0, t1.c0, vt0.c0))==((t1.c2, t1.c2, NULL))))AND(NULL)))OR(t1.c1)))OR(LOWER(t1.c0))))AND(vt1.c1)) CROSS JOIN vt0 ON CAST(json_object(vt1.c1, vt1.c0) AS TEXT) INNER JOIN vt1 ON x'' ORDER BY ((((rt0.c0)IS NOT(rt0.c0)))<>(((t1.c2) IS TRUE))) ASC, CAST(((((t1.c1)OR(rt0.c1)))OR(rt0.c2)) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (((((((((((vt0.c0, t1.c0, vt0.c0))=((t1.c2, t1.c2, NULL))))AND(NULL)))OR(t1.c1)))OR(LOWER(t1.c0))))AND(vt1.c1)) CROSS JOIN vt0 ON CAST(json_object(vt1.c1, vt1.c0) AS TEXT) INNER JOIN vt1 ON x'' WHERE (((((t1.c0)OR((((t1.c1, vt0.c0, t1.c1, '619270983', rt0.c2))<=((t1.c1, vt0.c0, rt0.c1, vt0.c1, vt0.c1))))))OR(NULL))) ORDER BY ((((rt0.c0)IS NOT(rt0.c0)))!=(((t1.c2) IS TRUE))) ASC, CAST(((((t1.c1)OR(rt0.c1)))OR(rt0.c2)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)OR((((t1.c1, vt0.c0, t1.c1, '619270983', rt0.c2))<=((t1.c1, vt0.c0, rt0.c1, vt0.c1, vt0.c1))))))OR(NULL))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (((((((((((vt0.c0, t1.c0, vt0.c0))==((t1.c2, t1.c2, NULL))))AND(NULL)))OR(t1.c1)))OR(LOWER(t1.c0))))AND(vt1.c1)) CROSS JOIN vt0 ON CAST(json_object(vt1.c1, vt1.c0) AS TEXT) INNER JOIN vt1 ON x'' ORDER BY ((((rt0.c0)IS NOT(rt0.c0)))<>(((t1.c2) IS TRUE))) ASC, CAST(((((t1.c1)OR(rt0.c1)))OR(rt0.c2)) AS BLOB) ASC  NULLS LAST);
SELECT * FROM t1 WHERE ((CASE WHEN t1.c2 THEN t1.c1 END IN ())) ORDER BY ((((t1.c2 COLLATE BINARY)AND(((t1.c2)%(t1.c0)))))OR(((t1.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t1.c2 THEN t1.c1 END IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2 COLLATE BINARY)AND(((t1.c2)%(t1.c0)))))OR(((t1.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((CASE WHEN t1.c2 THEN t1.c1 END IN ())) ORDER BY ((((t1.c2 COLLATE BINARY)AND(((t1.c2)%(t1.c0)))))OR(((t1.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t1.c2 THEN t1.c1 END IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2 COLLATE BINARY)AND(((t1.c2)%(t1.c0)))))OR(((t1.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((CASE WHEN t1.c2 THEN t1.c1 END IN ())) ORDER BY ((((t1.c2 COLLATE BINARY)AND(((t1.c2)%(t1.c0)))))OR(((t1.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (NULL)));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1)) AND (json_quote(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1)) AND (json_quote(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1)) AND (json_quote(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1)) AND (json_quote(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1)) AND (json_quote(rt0.c2))));
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), 0.7921041401160674)) ORDER BY ((((((((NULL)AND(IFNULL(DISTINCT vt0.c1, vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, 0.5550105438416575, vt0.c1, 0.9789050437654896)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), 0.7921041401160674)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((NULL)AND(IFNULL(DISTINCT vt0.c1, vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, 0.5550105438416575, vt0.c1, 0.9789050437654896)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), 0.7921041401160674)) ORDER BY ((((((((NULL)AND(IFNULL(DISTINCT vt0.c1, vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, 0.5550105438416575, vt0.c1, 0.9789050437654896)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), 0.7921041401160674)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((NULL)AND(IFNULL(DISTINCT vt0.c1, vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, 0.5550105438416575, vt0.c1, 0.9789050437654896)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), 0.7921041401160674)) ORDER BY ((((((((NULL)AND(IFNULL(DISTINCT vt0.c1, vt0.c0))))AND((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, 0.5550105438416575, vt0.c1, 0.9789050437654896)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t1, rt0, vt1, vt0 WHERE ((((NULL)||(vt1.c0)) IN ((~ (t1.c2)), CAST(vt0.c0 AS BLOB)))) ORDER BY (((((t1.c2)) BETWEEN ((vt0.c0)) AND ((t1.c0))))|(rt0.c1)) ASC, CAST(((rt0.c1) IS FALSE) AS REAL) ASC  NULLS LAST, CAST(t1.c1 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)||(vt1.c0)) IN ((~ (t1.c2)), CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (((((t1.c2)) BETWEEN ((vt0.c0)) AND ((t1.c0))))|(rt0.c1)) ASC, CAST(((rt0.c1) IS FALSE) AS REAL) ASC  NULLS LAST, CAST(t1.c1 AS BLOB) DESC);
SELECT ALL * FROM t1, rt0, vt1, vt0 WHERE ((((NULL)||(vt1.c0)) IN ((~ (t1.c2)), CAST(vt0.c0 AS BLOB)))) ORDER BY (((((t1.c2)) BETWEEN ((vt0.c0)) AND ((t1.c0))))|(rt0.c1)) ASC, CAST(((rt0.c1) IS FALSE) AS REAL) ASC  NULLS LAST, CAST(t1.c1 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)||(vt1.c0)) IN ((~ (t1.c2)), CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (((((t1.c2)) BETWEEN ((vt0.c0)) AND ((t1.c0))))|(rt0.c1)) ASC, CAST(((rt0.c1) IS FALSE) AS REAL) ASC  NULLS LAST, CAST(t1.c1 AS BLOB) DESC);
SELECT ALL * FROM t1, rt0, vt1, vt0 WHERE ((((NULL)||(vt1.c0)) IN ((~ (t1.c2)), CAST(vt0.c0 AS BLOB)))) ORDER BY (((((t1.c2)) BETWEEN ((vt0.c0)) AND ((t1.c0))))|(rt0.c1)) ASC, CAST(((rt0.c1) IS FALSE) AS REAL) ASC  NULLS LAST, CAST(t1.c1 AS BLOB) DESC;
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1, rt0, t1 WHERE (((vt0.c1)<((~ (rt0.c0))))) ORDER BY ((((('679602810')==(vt1.c1))))<(((((vt0.c1))==((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, t1 ORDER BY ((((('679602810')=(vt1.c1))))<(((((vt0.c1))=((vt1.c0)))))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1, rt0, t1 WHERE (((vt0.c1)<((~ (rt0.c0))))) ORDER BY ((((('679602810')==(vt1.c1))))<(((((vt0.c1))==((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, t1 ORDER BY ((((('679602810')=(vt1.c1))))<(((((vt0.c1))=((vt1.c0)))))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1, rt0, t1 WHERE (((vt0.c1)<((~ (rt0.c0))))) ORDER BY ((((('679602810')==(vt1.c1))))<(((((vt0.c1))==((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('' AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('' AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST('' AS INTEGER));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(LIKELIHOOD(DISTINCT t1.c0, 0.5227962434376275) AS BLOB) INNER JOIN t1 ON x'' WHERE (((((t1.c0)>>(t1.c1))) NOT BETWEEN (((rt0.c1)-(t1.c1))) AND (((rt0.c0)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>>(t1.c1))) NOT BETWEEN (((rt0.c1)-(t1.c1))) AND (((rt0.c0)<(t1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(LIKELIHOOD(DISTINCT t1.c0, 0.5227962434376275) AS BLOB) INNER JOIN t1 ON x'');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(LIKELIHOOD(DISTINCT t1.c0, 0.5227962434376275) AS BLOB) INNER JOIN t1 ON x'' WHERE (((((t1.c0)>>(t1.c1))) NOT BETWEEN (((rt0.c1)-(t1.c1))) AND (((rt0.c0)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>>(t1.c1))) NOT BETWEEN (((rt0.c1)-(t1.c1))) AND (((rt0.c0)<(t1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(LIKELIHOOD(DISTINCT t1.c0, 0.5227962434376275) AS BLOB) INNER JOIN t1 ON x'');
SELECT * FROM vt0, t1 WHERE ((((((vt0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt0.c1))))AND((((t1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c1, t1.c1, vt0.c0)) AND ((x'', t1.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt0.c1))))AND((((t1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c1, t1.c1, vt0.c0)) AND ((x'', t1.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((((vt0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt0.c1))))AND((((t1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c1, t1.c1, vt0.c0)) AND ((x'', t1.c1, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt0.c1))))AND((((t1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c1, t1.c1, vt0.c0)) AND ((x'', t1.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((((vt0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt0.c1))))AND((((t1.c0, t1.c0, t1.c2)) NOT BETWEEN ((t1.c1, t1.c1, vt0.c0)) AND ((x'', t1.c1, vt0.c1))))));
SELECT ALL * FROM t1, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c0)))OR('1764613733'))) ISNULL)) ORDER BY (((vt1.c1, vt1.c1, x'')) NOT BETWEEN ((vt1.c0, '-1712822608', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)OR(vt1.c0)))OR('1764613733'))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c1, x'')) NOT BETWEEN ((vt1.c0, '-1712822608', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c0)))OR('1764613733'))) ISNULL)) ORDER BY (((vt1.c1, vt1.c1, x'')) NOT BETWEEN ((vt1.c0, '-1712822608', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)OR(vt1.c0)))OR('1764613733'))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c1, x'')) NOT BETWEEN ((vt1.c0, '-1712822608', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c0)))OR('1764613733'))) ISNULL)) ORDER BY (((vt1.c1, vt1.c1, x'')) NOT BETWEEN ((vt1.c0, '-1712822608', vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE ('Ju');
SELECT SUM(count) FROM (SELECT (('Ju') IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE ('Ju');
SELECT SUM(count) FROM (SELECT (('Ju') IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE ('Ju');
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (((vt0.c0)) NOT BETWEEN (('-1117432693')) AND ((vt0.c1))) COLLATE BINARY COLLATE BINARY WHERE ((((t1.c1)>>(t1.c2)) IN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY (- (('-1211585775' IN (vt0.c0, t1.c1)))) DESC  NULLS FIRST, ((LIKELIHOOD(t1.c1, 0.8632761769142716)) NOT BETWEEN ((((t1.c0))>((t1.c0)))) AND ((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)>>(t1.c2)) IN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((vt0.c0)) NOT BETWEEN (('-1117432693')) AND ((vt0.c1))) COLLATE BINARY COLLATE BINARY ORDER BY (- (('-1211585775' IN (vt0.c0, t1.c1)))) DESC  NULLS FIRST, ((LIKELIHOOD(t1.c1, 0.8632761769142716)) NOT BETWEEN ((((t1.c0))>((t1.c0)))) AND ((t1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (((vt0.c0)) NOT BETWEEN (('-1117432693')) AND ((vt0.c1))) COLLATE BINARY COLLATE BINARY WHERE ((((t1.c1)>>(t1.c2)) IN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY (- (('-1211585775' IN (vt0.c0, t1.c1)))) DESC  NULLS FIRST, ((LIKELIHOOD(t1.c1, 0.8632761769142716)) NOT BETWEEN ((((t1.c0))>((t1.c0)))) AND ((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)>>(t1.c2)) IN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((vt0.c0)) NOT BETWEEN (('-1117432693')) AND ((vt0.c1))) COLLATE BINARY COLLATE BINARY ORDER BY (- (('-1211585775' IN (vt0.c0, t1.c1)))) DESC  NULLS FIRST, ((LIKELIHOOD(t1.c1, 0.8632761769142716)) NOT BETWEEN ((((t1.c0))>((t1.c0)))) AND ((t1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON (((vt0.c0)) NOT BETWEEN (('-1117432693')) AND ((vt0.c1))) COLLATE BINARY COLLATE BINARY WHERE ((((t1.c1)>>(t1.c2)) IN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY (- (('-1211585775' IN (vt0.c0, t1.c1)))) DESC  NULLS FIRST, ((LIKELIHOOD(t1.c1, 0.8632761769142716)) NOT BETWEEN ((((t1.c0))>((t1.c0)))) AND ((t1.c0 IN ())));
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c2 AS REAL) WHERE (((t1.c0)*((t1.c0 IN ())))) ORDER BY (((vt0.c0, t1.c0, 7.55726755E8)) NOT BETWEEN (((0.005455123530909156 IN ()), (('x䑣iUq''k%')/(t1.c2)), vt0.c1)) AND (((t1.c0 IN ()), ((((((((t1.c2)OR(NULL)))OR(vt0.c1)))AND(t1.c1)))AND(t1.c0)), (t1.c0 IN (t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)*((t1.c0 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c2 AS REAL) ORDER BY (((vt0.c0, t1.c0, 7.55726755E8)) NOT BETWEEN (((0.005455123530909156 IN ()), (('x䑣iUq''k%')/(t1.c2)), vt0.c1)) AND (((t1.c0 IN ()), ((((((((t1.c2)OR(NULL)))OR(vt0.c1)))AND(t1.c1)))AND(t1.c0)), (t1.c0 IN (t1.c0))))) ASC  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c2 AS REAL) WHERE (((t1.c0)*((t1.c0 IN ())))) ORDER BY (((vt0.c0, t1.c0, 7.55726755E8)) NOT BETWEEN (((0.005455123530909156 IN ()), (('x䑣iUq''k%')/(t1.c2)), vt0.c1)) AND (((t1.c0 IN ()), ((((((((t1.c2)OR(NULL)))OR(vt0.c1)))AND(t1.c1)))AND(t1.c0)), (t1.c0 IN (t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)*((t1.c0 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c2 AS REAL) ORDER BY (((vt0.c0, t1.c0, 7.55726755E8)) NOT BETWEEN (((0.005455123530909156 IN ()), (('x䑣iUq''k%')/(t1.c2)), vt0.c1)) AND (((t1.c0 IN ()), ((((((((t1.c2)OR(NULL)))OR(vt0.c1)))AND(t1.c1)))AND(t1.c0)), (t1.c0 IN (t1.c0))))) ASC  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c2 AS REAL) WHERE (((t1.c0)*((t1.c0 IN ())))) ORDER BY (((vt0.c0, t1.c0, 7.55726755E8)) NOT BETWEEN (((0.005455123530909156 IN ()), (('x䑣iUq''k%')/(t1.c2)), vt0.c1)) AND (((t1.c0 IN ()), ((((((((t1.c2)OR(NULL)))OR(vt0.c1)))AND(t1.c1)))AND(t1.c0)), (t1.c0 IN (t1.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 NOT INDEXED, rt0 WHERE ((((0.4262212805557396))>((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((0.4262212805557396))>((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, rt0 WHERE ((((0.4262212805557396))>((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((0.4262212805557396))>((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, rt0 WHERE ((((0.4262212805557396))>((rt0.c0 COLLATE BINARY))));
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((1.457916728E9)=(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((1.457916728E9)==(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((1.457916728E9)=(CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((1.457916728E9)==(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t1, vt1);
SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((1.457916728E9)=(CAST(rt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((-9.86907009E8)||(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((GLOB(vt0.c0, vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((-9.86907009E8)||(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((GLOB(vt0.c0, vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-9.86907009E8)||(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((GLOB(vt0.c0, vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((-9.86907009E8)||(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((GLOB(vt0.c0, vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-9.86907009E8)||(CAST(vt0.c0 AS REAL)))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((GLOB(vt0.c0, vt0.c1)))) DESC;
SELECT * FROM vt1, rt0, vt0 WHERE (0.9637130010262356);
SELECT SUM(count) FROM (SELECT ((0.9637130010262356) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (0.9637130010262356);
SELECT SUM(count) FROM (SELECT ((0.9637130010262356) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (0.9637130010262356);
SELECT ALL * FROM t1 CROSS JOIN rt0 ON (- (CAST(t1.c1 AS REAL))) FULL OUTER JOIN vt0 ON (((((t1.c2 IN (vt0.c1)))AND(t1.c1 COLLATE NOCASE)))AND(((t1.c2)/(vt0.c0)))) WHERE ((((('L1	|')OR(SQLITE_COMPILEOPTION_GET('0.6607015273941929'))))AND(((t1.c2) NOT NULL)))) ORDER BY ((LIKELY(DISTINCT rt0.c1)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('L1	|')OR(SQLITE_COMPILEOPTION_GET('0.6607015273941929'))))AND(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (- (CAST(t1.c1 AS REAL))) FULL OUTER JOIN vt0 ON (((((t1.c2 IN (vt0.c1)))AND(t1.c1 COLLATE NOCASE)))AND(((t1.c2)/(vt0.c0)))) ORDER BY ((LIKELY(DISTINCT rt0.c1)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN rt0 ON (- (CAST(t1.c1 AS REAL))) FULL OUTER JOIN vt0 ON (((((t1.c2 IN (vt0.c1)))AND(t1.c1 COLLATE NOCASE)))AND(((t1.c2)/(vt0.c0)))) WHERE ((((('L1	|')OR(SQLITE_COMPILEOPTION_GET('0.6607015273941929'))))AND(((t1.c2) NOT NULL)))) ORDER BY ((LIKELY(DISTINCT rt0.c1)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('L1	|')OR(SQLITE_COMPILEOPTION_GET('0.6607015273941929'))))AND(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON (- (CAST(t1.c1 AS REAL))) FULL OUTER JOIN vt0 ON (((((t1.c2 IN (vt0.c1)))AND(t1.c1 COLLATE NOCASE)))AND(((t1.c2)/(vt0.c0)))) ORDER BY ((LIKELY(DISTINCT rt0.c1)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN rt0 ON (- (CAST(t1.c1 AS REAL))) FULL OUTER JOIN vt0 ON (((((t1.c2 IN (vt0.c1)))AND(t1.c1 COLLATE NOCASE)))AND(((t1.c2)/(vt0.c0)))) WHERE ((((('L1	|')OR(SQLITE_COMPILEOPTION_GET('0.6607015273941929'))))AND(((t1.c2) NOT NULL)))) ORDER BY ((LIKELY(DISTINCT rt0.c1)) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) LEFT OUTER JOIN t1 ON LOWER(DISTINCT CAST(t1.c2 AS NUMERIC)) WHERE ((((((0.10645015775826216)OR(t1.c1)))OR(0.07476221372276115)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((0.10645015775826216)OR(t1.c1)))OR(0.07476221372276115)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) LEFT OUTER JOIN t1 ON LOWER(DISTINCT CAST(t1.c2 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) LEFT OUTER JOIN t1 ON LOWER(DISTINCT CAST(t1.c2 AS NUMERIC)) WHERE ((((((0.10645015775826216)OR(t1.c1)))OR(0.07476221372276115)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((0.10645015775826216)OR(t1.c1)))OR(0.07476221372276115)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) LEFT OUTER JOIN t1 ON LOWER(DISTINCT CAST(t1.c2 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON CAST(vt0.c0 AS NUMERIC) LEFT OUTER JOIN t1 ON LOWER(DISTINCT CAST(t1.c2 AS NUMERIC)) WHERE ((((((0.10645015775826216)OR(t1.c1)))OR(0.07476221372276115)) IN ()));
SELECT ALL * FROM t1, vt1, rt0, vt0 WHERE ((+ ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt0.c1))))) IS TRUE)  as count FROM t1, vt1, rt0, vt0);
SELECT ALL * FROM t1, vt1, rt0, vt0 WHERE ((+ ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt0.c1))))) IS TRUE)  as count FROM t1, vt1, rt0, vt0);
SELECT ALL * FROM t1, vt1, rt0, vt0 WHERE ((+ ((+ (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY (((vt0.c1 IN ()))<(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))<(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY (((vt0.c1 IN ()))<(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))<(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))))) ORDER BY (((vt0.c1 IN ()))<(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt1 WHERE (t1.c0);
SELECT COUNT(*) FROM t1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN 0.8638832923398011 THEN x'6e94afcc' END) ORDER BY (NOT ((((t1.c2))!=((t1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE SQLITE_SOURCE_ID()  WHEN 0.8638832923398011 THEN x'6e94afcc' END) IS TRUE)  as count FROM t1 ORDER BY (NOT ((((t1.c2))<>((t1.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN 0.8638832923398011 THEN x'6e94afcc' END) ORDER BY (NOT ((((t1.c2))!=((t1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE SQLITE_SOURCE_ID()  WHEN 0.8638832923398011 THEN x'6e94afcc' END) IS TRUE)  as count FROM t1 ORDER BY (NOT ((((t1.c2))<>((t1.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN 0.8638832923398011 THEN x'6e94afcc' END) ORDER BY (NOT ((((t1.c2))!=((t1.c1))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((+ (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((+ (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((+ (t1.c1)))));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN (906190244) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((((CAST(vt1.c1 AS TEXT))OR(((vt1.c0) NOT BETWEEN (x'50b7') AND (vt0.c0)))))OR(((((vt0.c0)AND(vt1.c1)))OR(vt0.c1)))))AND(CAST(vt1.c1 AS BLOB))))OR(IFNULL(DISTINCT vt0.c1, vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN (906190244) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CAST(vt1.c1 AS TEXT))OR(((vt1.c0) NOT BETWEEN (x'50b7') AND (vt0.c0)))))OR(((((vt0.c0)AND(vt1.c1)))OR(vt0.c1)))))AND(CAST(vt1.c1 AS BLOB))))OR(IFNULL(DISTINCT vt0.c1, vt0.c1))) DESC);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN (906190244) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((((CAST(vt1.c1 AS TEXT))OR(((vt1.c0) NOT BETWEEN (x'50b7') AND (vt0.c0)))))OR(((((vt0.c0)AND(vt1.c1)))OR(vt0.c1)))))AND(CAST(vt1.c1 AS BLOB))))OR(IFNULL(DISTINCT vt0.c1, vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN (906190244) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CAST(vt1.c1 AS TEXT))OR(((vt1.c0) NOT BETWEEN (x'50b7') AND (vt0.c0)))))OR(((((vt0.c0)AND(vt1.c1)))OR(vt0.c1)))))AND(CAST(vt1.c1 AS BLOB))))OR(IFNULL(DISTINCT vt0.c1, vt0.c1))) DESC);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN (906190244) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((((CAST(vt1.c1 AS TEXT))OR(((vt1.c0) NOT BETWEEN (x'50b7') AND (vt0.c0)))))OR(((((vt0.c0)AND(vt1.c1)))OR(vt0.c1)))))AND(CAST(vt1.c1 AS BLOB))))OR(IFNULL(DISTINCT vt0.c1, vt0.c1))) DESC;
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((((t1.c1))==((t1.c2))))LIKE(((rt0.c1) NOT BETWEEN (t1.c1) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON (((0.5791540031461576) ISNULL) IN (((t1.c1)&(t1.c0)))) WHERE (('' IN (CASE 0Xfffffffff25d7a71  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END, ((rt0.c1) ISNULL)))) ORDER BY (t1.c1 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((('' IN (CASE 0Xfffffffff25d7a71  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END, ((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((((t1.c1))=((t1.c2))))LIKE(((rt0.c1) NOT BETWEEN (t1.c1) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON (((0.5791540031461576) ISNULL) IN (((t1.c1)&(t1.c0)))) ORDER BY (t1.c1 IN ()) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((((t1.c1))==((t1.c2))))LIKE(((rt0.c1) NOT BETWEEN (t1.c1) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON (((0.5791540031461576) ISNULL) IN (((t1.c1)&(t1.c0)))) WHERE (('' IN (CASE 0Xfffffffff25d7a71  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END, ((rt0.c1) ISNULL)))) ORDER BY (t1.c1 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((('' IN (CASE 0Xfffffffff25d7a71  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END, ((rt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((((t1.c1))=((t1.c2))))LIKE(((rt0.c1) NOT BETWEEN (t1.c1) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON (((0.5791540031461576) ISNULL) IN (((t1.c1)&(t1.c0)))) ORDER BY (t1.c1 IN ()) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (x'') AND (vt1.c1)))IS(((rt0.c1)>(vt1.c0))))) ORDER BY ((((rt0.c0)*(rt0.c1)))-((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (x'') AND (vt1.c1)))IS(((rt0.c1)>(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0)*(rt0.c1)))-((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (x'') AND (vt1.c1)))IS(((rt0.c1)>(vt1.c0))))) ORDER BY ((((rt0.c0)*(rt0.c1)))-((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (x'') AND (vt1.c1)))IS(((rt0.c1)>(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0)*(rt0.c1)))-((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (x'') AND (vt1.c1)))IS(((rt0.c1)>(vt1.c0))))) ORDER BY ((((rt0.c0)*(rt0.c1)))-((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS TEXT) ASC, ABS((((t1.c2, NULL, rt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0, vt1 ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS TEXT) ASC, ABS((((t1.c2, NULL, rt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS TEXT) ASC, ABS((((t1.c2, NULL, rt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0, vt1 ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS TEXT) ASC, ABS((((t1.c2, NULL, rt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt1 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS TEXT) ASC, ABS((((t1.c2, NULL, rt0.c0)) NOT BETWEEN ((vt1.c0, rt0.c0, vt1.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))  NULLS LAST;
SELECT ALL * FROM t1, vt0, vt1, rt0 WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('Iof''tJPT5'))))OR(t1.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(NULL)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('Iof''tJPT5'))))OR(t1.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(NULL)))AND(vt1.c1))))) IS TRUE)  as count FROM t1, vt0, vt1, rt0);
SELECT ALL * FROM t1, vt0, vt1, rt0 WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('Iof''tJPT5'))))OR(t1.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(NULL)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('Iof''tJPT5'))))OR(t1.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(NULL)))AND(vt1.c1))))) IS TRUE)  as count FROM t1, vt0, vt1, rt0);
SELECT ALL * FROM t1, vt0, vt1, rt0 WHERE ((((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('Iof''tJPT5'))))OR(t1.c2 COLLATE NOCASE)))AND(((((rt0.c0)AND(NULL)))AND(vt1.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((((((((((((rt0.c0)OR(rt0.c0)))OR(-1698752583)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((((((rt0.c0)OR(rt0.c0)))OR(-1698752583)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((((((((((((rt0.c0)OR(rt0.c0)))OR(-1698752583)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((((((rt0.c0)OR(rt0.c0)))OR(-1698752583)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((((((((((((rt0.c0)OR(rt0.c0)))OR(-1698752583)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CASE TRIM(t1.c0)  WHEN t1.c1 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(t1.c0)  WHEN t1.c1 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CASE TRIM(t1.c0)  WHEN t1.c1 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(t1.c0)  WHEN t1.c1 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CASE TRIM(t1.c0)  WHEN t1.c1 COLLATE NOCASE THEN t1.c0 COLLATE BINARY END);
SELECT * FROM rt0, t1 WHERE (((CASE t1.c1  WHEN rt0.c2 THEN rt0.c2 ELSE t1.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c1  WHEN rt0.c2 THEN rt0.c2 ELSE t1.c1 END) IS TRUE)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((CASE t1.c1  WHEN rt0.c2 THEN rt0.c2 ELSE t1.c1 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c1  WHEN rt0.c2 THEN rt0.c2 ELSE t1.c1 END) IS TRUE)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((CASE t1.c1  WHEN rt0.c2 THEN rt0.c2 ELSE t1.c1 END) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE ((SUBSTR(vt1.c1, vt1.c0) IN (vt0.c1))) ORDER BY (~ ((- (vt0.c1)))), (NOT ((~ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((SUBSTR(vt1.c1, vt1.c0) IN (vt0.c1))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (~ ((- (vt0.c1)))), (NOT ((~ (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE ((SUBSTR(vt1.c1, vt1.c0) IN (vt0.c1))) ORDER BY (~ ((- (vt0.c1)))), (NOT ((~ (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((SUBSTR(vt1.c1, vt1.c0) IN (vt0.c1))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (~ ((- (vt0.c1)))), (NOT ((~ (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE ((SUBSTR(vt1.c1, vt1.c0) IN (vt0.c1))) ORDER BY (~ ((- (vt0.c1)))), (NOT ((~ (vt1.c1))));
SELECT * FROM rt0, vt0, vt1 WHERE ((- (((vt0.c0)OR(rt0.c1))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt1.c0) IS FALSE))), 'T/\3) ';
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt1.c0) IS FALSE))), 'T/\3) ');
SELECT * FROM rt0, vt0, vt1 WHERE ((- (((vt0.c0)OR(rt0.c1))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt1.c0) IS FALSE))), 'T/\3) ';
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt1.c0) IS FALSE))), 'T/\3) ');
SELECT * FROM rt0, vt0, vt1 WHERE ((- (((vt0.c0)OR(rt0.c1))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt1.c0) IS FALSE))), 'T/\3) ';
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, load_extension(rt0.c2, rt0.c0), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (0.002524126211522759)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c1)), ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)), json_quote(vt0.c0), (NOT (rt0.c0)), INSTR(rt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, load_extension(rt0.c2, rt0.c0), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (0.002524126211522759)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c1)), ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)), json_quote(vt0.c0), (NOT (rt0.c0)), INSTR(rt0.c1, vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, load_extension(rt0.c2, rt0.c0), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (0.002524126211522759)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c1)), ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)), json_quote(vt0.c0), (NOT (rt0.c0)), INSTR(rt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, load_extension(rt0.c2, rt0.c0), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (0.002524126211522759)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c1)), ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)), json_quote(vt0.c0), (NOT (rt0.c0)), INSTR(rt0.c1, vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((vt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, load_extension(rt0.c2, rt0.c0), CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (0.002524126211522759)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(x'')))AND(rt0.c2)))AND(rt0.c1)), ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)), json_quote(vt0.c0), (NOT (rt0.c0)), INSTR(rt0.c1, vt0.c0)))));
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(json_array_length(vt1.c0, vt1.c0))))OR(((vt1.c1)<(vt1.c1))))) ORDER BY TRIM(DISTINCT ((0.05928615285949779) ISNULL), ((vt1.c1) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(json_array_length(vt1.c0, vt1.c0))))OR(((vt1.c1)<(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((0.05928615285949779) ISNULL), ((vt1.c1) NOT NULL)) DESC);
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(json_array_length(vt1.c0, vt1.c0))))OR(((vt1.c1)<(vt1.c1))))) ORDER BY TRIM(DISTINCT ((0.05928615285949779) ISNULL), ((vt1.c1) NOT NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(json_array_length(vt1.c0, vt1.c0))))OR(((vt1.c1)<(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((0.05928615285949779) ISNULL), ((vt1.c1) NOT NULL)) DESC);
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(json_array_length(vt1.c0, vt1.c0))))OR(((vt1.c1)<(vt1.c1))))) ORDER BY TRIM(DISTINCT ((0.05928615285949779) ISNULL), ((vt1.c1) NOT NULL)) DESC;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE(DISTINCT ((vt0.c0)OR(vt1.c1)), COALESCE(vt0.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt0.c0)OR(vt1.c1)), COALESCE(vt0.c0, vt1.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE(DISTINCT ((vt0.c0)OR(vt1.c1)), COALESCE(vt0.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt0.c0)OR(vt1.c1)), COALESCE(vt0.c0, vt1.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE(DISTINCT ((vt0.c0)OR(vt1.c1)), COALESCE(vt0.c0, vt1.c0)));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (COALESCE(0.9501139686048006, (~ (t1.c0)), vt0.c1, (NOT (x'0efd')))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(0.9501139686048006, (~ (t1.c0)), vt0.c1, (NOT (x'0efd')))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (COALESCE(0.9501139686048006, (~ (t1.c0)), vt0.c1, (NOT (x'0efd')))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(0.9501139686048006, (~ (t1.c0)), vt0.c1, (NOT (x'0efd')))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (COALESCE(0.9501139686048006, (~ (t1.c0)), vt0.c1, (NOT (x'0efd')))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>((((vt0.c0))=((t1.c2))))) WHERE (CAST((vt0.c1 IN (t1.c1, t1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (t1.c1, t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>((((vt0.c0))==((t1.c2))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>((((vt0.c0))=((t1.c2))))) WHERE (CAST((vt0.c1 IN (t1.c1, t1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c1 IN (t1.c1, t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>((((vt0.c0))==((t1.c2))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<>((((vt0.c0))=((t1.c2))))) WHERE (CAST((vt0.c1 IN (t1.c1, t1.c0)) AS NUMERIC));
SELECT ALL * FROM t1 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE NOCASE AS REAL) WHERE ((- (0.2092962437842718 COLLATE NOCASE))) ORDER BY t1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (0.2092962437842718 COLLATE NOCASE))) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE NOCASE AS REAL) ORDER BY t1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE NOCASE AS REAL) WHERE ((- (0.2092962437842718 COLLATE NOCASE))) ORDER BY t1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (0.2092962437842718 COLLATE NOCASE))) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE NOCASE AS REAL) ORDER BY t1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt1 ON CAST(vt1.c1 COLLATE NOCASE AS REAL) WHERE ((- (0.2092962437842718 COLLATE NOCASE))) ORDER BY t1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, vt1, vt0 WHERE ((((((t1.c1, t1.c0, vt1.c1))<((1264704808, vt1.c0, NULL)))) BETWEEN ((NOT (vt0.c1))) AND ((((t1.c1))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c1, t1.c0, vt1.c1))<((1264704808, vt1.c0, NULL)))) BETWEEN ((NOT (vt0.c1))) AND ((((t1.c1))<((rt0.c2)))))) IS TRUE)  as count FROM rt0, t1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt1, vt0 WHERE ((((((t1.c1, t1.c0, vt1.c1))<((1264704808, vt1.c0, NULL)))) BETWEEN ((NOT (vt0.c1))) AND ((((t1.c1))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((t1.c1, t1.c0, vt1.c1))<((1264704808, vt1.c0, NULL)))) BETWEEN ((NOT (vt0.c1))) AND ((((t1.c1))<((rt0.c2)))))) IS TRUE)  as count FROM rt0, t1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt1, vt0 WHERE ((((((t1.c1, t1.c0, vt1.c1))<((1264704808, vt1.c0, NULL)))) BETWEEN ((NOT (vt0.c1))) AND ((((t1.c1))<((rt0.c2))))));
SELECT * FROM vt1, t1 WHERE (CASE WHEN 0.4480677486558786 THEN (- (t1.c0)) END) ORDER BY ((CAST(vt1.c0 AS BLOB))<>(((t1.c0) NOTNULL)))  NULLS FIRST, (((+ (t1.c1)))OR(vt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.4480677486558786 THEN (- (t1.c0)) END) IS TRUE)  as count FROM vt1, t1 ORDER BY ((CAST(vt1.c0 AS BLOB))!=(((t1.c0) NOTNULL)))  NULLS FIRST, (((+ (t1.c1)))OR(vt1.c0)) ASC  NULLS FIRST);
SELECT * FROM vt1, t1 WHERE (CASE WHEN 0.4480677486558786 THEN (- (t1.c0)) END) ORDER BY ((CAST(vt1.c0 AS BLOB))<>(((t1.c0) NOTNULL)))  NULLS FIRST, (((+ (t1.c1)))OR(vt1.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.4480677486558786 THEN (- (t1.c0)) END) IS TRUE)  as count FROM vt1, t1 ORDER BY ((CAST(vt1.c0 AS BLOB))!=(((t1.c0) NOTNULL)))  NULLS FIRST, (((+ (t1.c1)))OR(vt1.c0)) ASC  NULLS FIRST);
SELECT * FROM vt1, t1 WHERE (CASE WHEN 0.4480677486558786 THEN (- (t1.c0)) END) ORDER BY ((CAST(vt1.c0 AS BLOB))<>(((t1.c0) NOTNULL)))  NULLS FIRST, (((+ (t1.c1)))OR(vt1.c0)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (UPPER(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((UPPER(rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UPPER(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((UPPER(rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UPPER(rt0.c2 COLLATE BINARY));
SELECT ALL * FROM vt1 WHERE (((5.6933171E8) NOT BETWEEN (((vt1.c0)<<(NULL))) AND (IFNULL(vt1.c1, vt1.c1)))) ORDER BY vt1.c1 ASC, CAST(((((vt1.c0)OR(vt1.c0)))AND('')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((5.6933171E8) NOT BETWEEN (((vt1.c0)<<(NULL))) AND (IFNULL(vt1.c1, vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC, CAST(((((vt1.c0)OR(vt1.c0)))AND('')) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((5.6933171E8) NOT BETWEEN (((vt1.c0)<<(NULL))) AND (IFNULL(vt1.c1, vt1.c1)))) ORDER BY vt1.c1 ASC, CAST(((((vt1.c0)OR(vt1.c0)))AND('')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((5.6933171E8) NOT BETWEEN (((vt1.c0)<<(NULL))) AND (IFNULL(vt1.c1, vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC, CAST(((((vt1.c0)OR(vt1.c0)))AND('')) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((5.6933171E8) NOT BETWEEN (((vt1.c0)<<(NULL))) AND (IFNULL(vt1.c1, vt1.c1)))) ORDER BY vt1.c1 ASC, CAST(((((vt1.c0)OR(vt1.c0)))AND('')) AS REAL)  NULLS LAST;
SELECT * FROM vt0, vt1, t1 WHERE ('0o\r|.%	3d') ORDER BY 0xffffffffcdd7d7b1 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (('0o\r|.%	3d') IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY 0xffffffffcdd7d7b1 COLLATE NOCASE DESC);
SELECT * FROM vt0, vt1, t1 WHERE ('0o\r|.%	3d') ORDER BY 0xffffffffcdd7d7b1 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (('0o\r|.%	3d') IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY 0xffffffffcdd7d7b1 COLLATE NOCASE DESC);
SELECT * FROM vt0, vt1, t1 WHERE ('0o\r|.%	3d') ORDER BY 0xffffffffcdd7d7b1 COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((CAST(vt0.c1 AS BLOB) IN ((- (vt0.c0))))) ORDER BY 0.09301897869240827;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS BLOB) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY 0.09301897869240827);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((CAST(vt0.c1 AS BLOB) IN ((- (vt0.c0))))) ORDER BY 0.09301897869240827;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS BLOB) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY 0.09301897869240827);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((CAST(vt0.c1 AS BLOB) IN ((- (vt0.c0))))) ORDER BY 0.09301897869240827;
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (NULL))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 END) AND (((t1.c2)*(t1.c2))))) ORDER BY (LOWER(DISTINCT t1.c1) IN (((t1.c1) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOT BETWEEN (t1.c0) AND (NULL))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 END) AND (((t1.c2)*(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (LOWER(DISTINCT t1.c1) IN (((t1.c1) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (NULL))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 END) AND (((t1.c2)*(t1.c2))))) ORDER BY (LOWER(DISTINCT t1.c1) IN (((t1.c1) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOT BETWEEN (t1.c0) AND (NULL))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 END) AND (((t1.c2)*(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (LOWER(DISTINCT t1.c1) IN (((t1.c1) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c0) AND (NULL))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 END) AND (((t1.c2)*(t1.c2))))) ORDER BY (LOWER(DISTINCT t1.c1) IN (((t1.c1) IS FALSE))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER) INNER JOIN vt1 ON ((((((((CASE vt1.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(((0.24170793217159225) BETWEEN (rt0.c0) AND (t1.c0)))))OR(((t1.c1)|(vt0.c1)))))OR((t1.c2 IN (vt0.c1, rt0.c2)))))OR(CAST(NULL AS TEXT))) LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS LAST, (NOT ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER) INNER JOIN vt1 ON ((((((((CASE vt1.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(((0.24170793217159225) BETWEEN (rt0.c0) AND (t1.c0)))))OR(((t1.c1)|(vt0.c1)))))OR((t1.c2 IN (vt0.c1, rt0.c2)))))OR(CAST(NULL AS TEXT))) LEFT OUTER JOIN vt0 ON NULL ORDER BY vt0.c0 ASC  NULLS LAST, (NOT ((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 INNER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER) INNER JOIN vt1 ON ((((((((CASE vt1.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(((0.24170793217159225) BETWEEN (rt0.c0) AND (t1.c0)))))OR(((t1.c1)|(vt0.c1)))))OR((t1.c2 IN (vt0.c1, rt0.c2)))))OR(CAST(NULL AS TEXT))) LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS LAST, (NOT ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER) INNER JOIN vt1 ON ((((((((CASE vt1.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(((0.24170793217159225) BETWEEN (rt0.c0) AND (t1.c0)))))OR(((t1.c1)|(vt0.c1)))))OR((t1.c2 IN (vt0.c1, rt0.c2)))))OR(CAST(NULL AS TEXT))) LEFT OUTER JOIN vt0 ON NULL ORDER BY vt0.c0 ASC  NULLS LAST, (NOT ((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 INNER JOIN t1 ON CAST((~ (vt1.c1)) AS INTEGER) INNER JOIN vt1 ON ((((((((CASE vt1.c1  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(((0.24170793217159225) BETWEEN (rt0.c0) AND (t1.c0)))))OR(((t1.c1)|(vt0.c1)))))OR((t1.c2 IN (vt0.c1, rt0.c2)))))OR(CAST(NULL AS TEXT))) LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) ORDER BY vt0.c0 ASC  NULLS LAST, (NOT ((rt0.c1 IN ())));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN HEX(DISTINCT vt0.c0) END) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS INTEGER), 0.9326105603308621)  NULLS FIRST, (~ (((vt0.c0)IS NOT(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN HEX(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CAST(vt0.c0 AS INTEGER), 0.9326105603308621)  NULLS FIRST, (~ (((vt0.c0)IS NOT(x''))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN HEX(DISTINCT vt0.c0) END) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS INTEGER), 0.9326105603308621)  NULLS FIRST, (~ (((vt0.c0)IS NOT(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN HEX(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CAST(vt0.c0 AS INTEGER), 0.9326105603308621)  NULLS FIRST, (~ (((vt0.c0)IS NOT(x''))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN HEX(DISTINCT vt0.c0) END) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS INTEGER), 0.9326105603308621)  NULLS FIRST, (~ (((vt0.c0)IS NOT(x''))))  NULLS FIRST;
SELECT * FROM t1 CROSS JOIN vt1 ON ((((((t1.c0)OR(NULL)))OR(t1.c0)))<((NOT (vt1.c1)))) WHERE (LIKELY(((((t1.c2)AND(vt1.c0)))AND(t1.c2)))) ORDER BY CASE (((vt1.c0))>((-1998233149)))  WHEN (t1.c2 IN ()) THEN ((((vt1.c1)OR(t1.c2)))AND(t1.c1)) ELSE CAST(t1.c1 AS INTEGER) END, LIKELIHOOD(x'', 0.0072448291387343655)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t1.c2)AND(vt1.c0)))AND(t1.c2)))) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((((t1.c0)OR(NULL)))OR(t1.c0)))<((NOT (vt1.c1)))) ORDER BY CASE (((vt1.c0))>((-1998233149)))  WHEN (t1.c2 IN ()) THEN ((((vt1.c1)OR(t1.c2)))AND(t1.c1)) ELSE CAST(t1.c1 AS INTEGER) END, LIKELIHOOD(x'', 0.0072448291387343655)  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN vt1 ON ((((((t1.c0)OR(NULL)))OR(t1.c0)))<((NOT (vt1.c1)))) WHERE (LIKELY(((((t1.c2)AND(vt1.c0)))AND(t1.c2)))) ORDER BY CASE (((vt1.c0))>((-1998233149)))  WHEN (t1.c2 IN ()) THEN ((((vt1.c1)OR(t1.c2)))AND(t1.c1)) ELSE CAST(t1.c1 AS INTEGER) END, LIKELIHOOD(x'', 0.0072448291387343655)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t1.c2)AND(vt1.c0)))AND(t1.c2)))) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((((((t1.c0)OR(NULL)))OR(t1.c0)))<((NOT (vt1.c1)))) ORDER BY CASE (((vt1.c0))>((-1998233149)))  WHEN (t1.c2 IN ()) THEN ((((vt1.c1)OR(t1.c2)))AND(t1.c1)) ELSE CAST(t1.c1 AS INTEGER) END, LIKELIHOOD(x'', 0.0072448291387343655)  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN vt1 ON ((((((t1.c0)OR(NULL)))OR(t1.c0)))<((NOT (vt1.c1)))) WHERE (LIKELY(((((t1.c2)AND(vt1.c0)))AND(t1.c2)))) ORDER BY CASE (((vt1.c0))>((-1998233149)))  WHEN (t1.c2 IN ()) THEN ((((vt1.c1)OR(t1.c2)))AND(t1.c1)) ELSE CAST(t1.c1 AS INTEGER) END, LIKELIHOOD(x'', 0.0072448291387343655)  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1 CROSS JOIN rt0 ON ABS(DISTINCT rt0.c1) COLLATE RTRIM WHERE (((((t1.c1)GLOB(rt0.c1))) NOT BETWEEN ((((t1.c0)) BETWEEN ((rt0.c2)) AND ((x'')))) AND (((t1.c1) BETWEEN (rt0.c2) AND (t1.c2))))) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 END) NOTNULL)  NULLS LAST, 0X21ef4ffe;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)GLOB(rt0.c1))) NOT BETWEEN ((((t1.c0)) BETWEEN ((rt0.c2)) AND ((x'')))) AND (((t1.c1) BETWEEN (rt0.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1, vt1 CROSS JOIN rt0 ON ABS(DISTINCT rt0.c1) COLLATE RTRIM ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 END) NOTNULL)  NULLS LAST, 0X21ef4ffe);
SELECT COUNT(*) FROM t1, vt1 CROSS JOIN rt0 ON ABS(DISTINCT rt0.c1) COLLATE RTRIM WHERE (((((t1.c1)GLOB(rt0.c1))) NOT BETWEEN ((((t1.c0)) BETWEEN ((rt0.c2)) AND ((x'')))) AND (((t1.c1) BETWEEN (rt0.c2) AND (t1.c2))))) ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 END) NOTNULL)  NULLS LAST, 0X21ef4ffe;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)GLOB(rt0.c1))) NOT BETWEEN ((((t1.c0)) BETWEEN ((rt0.c2)) AND ((x'')))) AND (((t1.c1) BETWEEN (rt0.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1, vt1 CROSS JOIN rt0 ON ABS(DISTINCT rt0.c1) COLLATE RTRIM ORDER BY ((CASE t1.c1  WHEN t1.c0 THEN t1.c1 END) NOTNULL)  NULLS LAST, 0X21ef4ffe);
SELECT * FROM vt0, rt0, t1 WHERE ((((((((((- (rt0.c2)))AND(CAST(t1.c1 AS REAL))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(((rt0.c0) IS TRUE))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c2)))AND(CAST(t1.c1 AS REAL))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(((rt0.c0) IS TRUE))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((((((((((- (rt0.c2)))AND(CAST(t1.c1 AS REAL))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(((rt0.c0) IS TRUE))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c2)))AND(CAST(t1.c1 AS REAL))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(((rt0.c0) IS TRUE))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((((((((((- (rt0.c2)))AND(CAST(t1.c1 AS REAL))))AND((((t1.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))))))OR(((rt0.c0) IS TRUE))))OR((- (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 INNER JOIN t1 ON CASE WHEN (NOT (t1.c1)) THEN ((vt0.c0) ISNULL) END WHERE (CAST(((t1.c1) IS FALSE) AS NUMERIC)) ORDER BY STRFTIME(((t1.c1) BETWEEN (t1.c2) AND (0xffffffffe4e3a3c7)), vt1.c0 COLLATE BINARY, CASE WHEN '1457916728' THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN t1.c2 ELSE vt1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON CASE WHEN (NOT (t1.c1)) THEN ((vt0.c0) ISNULL) END ORDER BY STRFTIME(((t1.c1) BETWEEN (t1.c2) AND (0xffffffffe4e3a3c7)), vt1.c0 COLLATE BINARY, CASE WHEN '1457916728' THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN t1.c2 ELSE vt1.c0 END) DESC);
SELECT ALL * FROM vt1, vt0 INNER JOIN t1 ON CASE WHEN (NOT (t1.c1)) THEN ((vt0.c0) ISNULL) END WHERE (CAST(((t1.c1) IS FALSE) AS NUMERIC)) ORDER BY STRFTIME(((t1.c1) BETWEEN (t1.c2) AND (0xffffffffe4e3a3c7)), vt1.c0 COLLATE BINARY, CASE WHEN '1457916728' THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN t1.c2 ELSE vt1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON CASE WHEN (NOT (t1.c1)) THEN ((vt0.c0) ISNULL) END ORDER BY STRFTIME(((t1.c1) BETWEEN (t1.c2) AND (0xffffffffe4e3a3c7)), vt1.c0 COLLATE BINARY, CASE WHEN '1457916728' THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN t1.c2 ELSE vt1.c0 END) DESC);
SELECT ALL * FROM vt1, vt0 INNER JOIN t1 ON CASE WHEN (NOT (t1.c1)) THEN ((vt0.c0) ISNULL) END WHERE (CAST(((t1.c1) IS FALSE) AS NUMERIC)) ORDER BY STRFTIME(((t1.c1) BETWEEN (t1.c2) AND (0xffffffffe4e3a3c7)), vt1.c0 COLLATE BINARY, CASE WHEN '1457916728' THEN t1.c0 WHEN vt0.c0 THEN t1.c1 WHEN vt1.c0 THEN t1.c2 ELSE vt1.c0 END) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)AND(((('0.24040475796743754'))>((rt0.c1)))))) ORDER BY (('YF')>((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)AND(((('0.24040475796743754'))>((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (('YF')>((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)AND(((('0.24040475796743754'))>((rt0.c1)))))) ORDER BY (('YF')>((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)AND(((('0.24040475796743754'))>((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (('YF')>((rt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)AND(((('0.24040475796743754'))>((rt0.c1)))))) ORDER BY (('YF')>((rt0.c2 IN ()))) ASC;
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((t1.c1, t1.c2, '-28203370')) BETWEEN (((- (t1.c0)), json_quote(vt1.c1), (NOT (t1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))OR(t1.c1)), (('#샸sL') NOT BETWEEN (t1.c0) AND (vt1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (vt1.c0)))))) ORDER BY ((vt1.c1)>(NULL)) COLLATE BINARY DESC  NULLS LAST, (((((t1.c0 IN (vt1.c1)))AND((- (t1.c1)))))AND(CASE WHEN vt1.c1 THEN t1.c2 WHEN '-594391913' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c2, '-28203370')) BETWEEN (((- (t1.c0)), json_quote(vt1.c1), (NOT (t1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))OR(t1.c1)), (('#샸sL') NOT BETWEEN (t1.c0) AND (vt1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((vt1.c1)>(NULL)) COLLATE BINARY DESC  NULLS LAST, (((((t1.c0 IN (vt1.c1)))AND((- (t1.c1)))))AND(CASE WHEN vt1.c1 THEN t1.c2 WHEN '-594391913' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((t1.c1, t1.c2, '-28203370')) BETWEEN (((- (t1.c0)), json_quote(vt1.c1), (NOT (t1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))OR(t1.c1)), (('#샸sL') NOT BETWEEN (t1.c0) AND (vt1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (vt1.c0)))))) ORDER BY ((vt1.c1)>(NULL)) COLLATE BINARY DESC  NULLS LAST, (((((t1.c0 IN (vt1.c1)))AND((- (t1.c1)))))AND(CASE WHEN vt1.c1 THEN t1.c2 WHEN '-594391913' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT (((((t1.c1, t1.c2, '-28203370')) BETWEEN (((- (t1.c0)), json_quote(vt1.c1), (NOT (t1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))OR(t1.c1)), (('#샸sL') NOT BETWEEN (t1.c0) AND (vt1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((vt1.c1)>(NULL)) COLLATE BINARY DESC  NULLS LAST, (((((t1.c0 IN (vt1.c1)))AND((- (t1.c1)))))AND(CASE WHEN vt1.c1 THEN t1.c2 WHEN '-594391913' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((t1.c1, t1.c2, '-28203370')) BETWEEN (((- (t1.c0)), json_quote(vt1.c1), (NOT (t1.c1)))) AND ((((((vt1.c0)AND(vt1.c1)))OR(t1.c1)), (('#샸sL') NOT BETWEEN (t1.c0) AND (vt1.c1)), ((t1.c1) BETWEEN (t1.c0) AND (vt1.c0)))))) ORDER BY ((vt1.c1)>(NULL)) COLLATE BINARY DESC  NULLS LAST, (((((t1.c0 IN (vt1.c1)))AND((- (t1.c1)))))AND(CASE WHEN vt1.c1 THEN t1.c2 WHEN '-594391913' THEN t1.c0 WHEN t1.c0 THEN t1.c0 END));
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN rt0 WHERE ('881226582') ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('881226582') IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN rt0 WHERE ('881226582') ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('881226582') IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN rt0 WHERE ('881226582') ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (((((vt0.c1)GLOB(vt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN t1.c1 THEN rt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE x'0e2168f8' END))) ORDER BY ((((vt1.c1)IS(vt1.c0))) NOT BETWEEN (((t1.c2)<<(vt0.c1))) AND (CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN vt1.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)GLOB(vt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN t1.c1 THEN rt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE x'0e2168f8' END))) IS TRUE)  as count FROM rt0, vt0, vt1, t1 ORDER BY ((((vt1.c1)IS(vt1.c0))) NOT BETWEEN (((t1.c2)<<(vt0.c1))) AND (CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN vt1.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (((((vt0.c1)GLOB(vt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN t1.c1 THEN rt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE x'0e2168f8' END))) ORDER BY ((((vt1.c1)IS(vt1.c0))) NOT BETWEEN (((t1.c2)<<(vt0.c1))) AND (CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN vt1.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)GLOB(vt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN t1.c1 THEN rt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE x'0e2168f8' END))) IS TRUE)  as count FROM rt0, vt0, vt1, t1 ORDER BY ((((vt1.c1)IS(vt1.c0))) NOT BETWEEN (((t1.c2)<<(vt0.c1))) AND (CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN vt1.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t1 WHERE (((((vt0.c1)GLOB(vt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN t1.c1 THEN rt0.c0 WHEN vt0.c0 THEN t1.c1 WHEN t1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE x'0e2168f8' END))) ORDER BY ((((vt1.c1)IS(vt1.c0))) NOT BETWEEN (((t1.c2)<<(vt0.c1))) AND (CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN vt1.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c1 END));
SELECT ALL * FROM rt0, t1, vt0, vt1 WHERE ((((t1.c0)) BETWEEN ((((((t1.c2)AND(t1.c1)))OR(vt0.c0)))) AND (('K_Rn'))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN ((((((t1.c2)AND(t1.c1)))OR(vt0.c0)))) AND (('K_Rn')))) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL * FROM rt0, t1, vt0, vt1 WHERE ((((t1.c0)) BETWEEN ((((((t1.c2)AND(t1.c1)))OR(vt0.c0)))) AND (('K_Rn'))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN ((((((t1.c2)AND(t1.c1)))OR(vt0.c0)))) AND (('K_Rn')))) IS TRUE)  as count FROM rt0, t1, vt0, vt1);
SELECT ALL * FROM rt0, t1, vt0, vt1 WHERE ((((t1.c0)) BETWEEN ((((((t1.c2)AND(t1.c1)))OR(vt0.c0)))) AND (('K_Rn'))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (TYPEOF(rt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (TYPEOF(rt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (TYPEOF(rt0.c1) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((t1.c1) IS TRUE), ((rt0.c0)AND(t1.c2)), ((t1.c1)LIKE(t1.c1))))>((((((((((t1.c0)AND(t1.c1)))AND(t1.c2)))AND(rt0.c1)))OR(t1.c0)), CASE t1.c2  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c0 END, rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((t1.c1) IS TRUE), ((rt0.c0)AND(t1.c2)), ((t1.c1)LIKE(t1.c1))))>((((((((((t1.c0)AND(t1.c1)))AND(t1.c2)))AND(rt0.c1)))OR(t1.c0)), CASE t1.c2  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c0 END, rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((t1.c1) IS TRUE), ((rt0.c0)AND(t1.c2)), ((t1.c1)LIKE(t1.c1))))>((((((((((t1.c0)AND(t1.c1)))AND(t1.c2)))AND(rt0.c1)))OR(t1.c0)), CASE t1.c2  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c0 END, rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((t1.c1) IS TRUE), ((rt0.c0)AND(t1.c2)), ((t1.c1)LIKE(t1.c1))))>((((((((((t1.c0)AND(t1.c1)))AND(t1.c2)))AND(rt0.c1)))OR(t1.c0)), CASE t1.c2  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c0 END, rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((t1.c1) IS TRUE), ((rt0.c0)AND(t1.c2)), ((t1.c1)LIKE(t1.c1))))>((((((((((t1.c0)AND(t1.c1)))AND(t1.c2)))AND(rt0.c1)))OR(t1.c0)), CASE t1.c2  WHEN t1.c2 THEN rt0.c2 ELSE rt0.c0 END, rt0.c1 COLLATE RTRIM))));
SELECT * FROM vt1, t1, vt0, rt0 WHERE ((- (CAST(vt0.c1 AS BLOB)))) ORDER BY (((vt1.c1)) BETWEEN (((((vt1.c1, rt0.c1, vt0.c1))>((vt0.c0, t1.c2, rt0.c2))))) AND ((((vt1.c0)*(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY (((vt1.c1)) BETWEEN (((((vt1.c1, rt0.c1, vt0.c1))>((vt0.c0, t1.c2, rt0.c2))))) AND ((((vt1.c0)*(vt0.c1)))))  NULLS FIRST);
SELECT * FROM vt1, t1, vt0, rt0 WHERE ((- (CAST(vt0.c1 AS BLOB)))) ORDER BY (((vt1.c1)) BETWEEN (((((vt1.c1, rt0.c1, vt0.c1))>((vt0.c0, t1.c2, rt0.c2))))) AND ((((vt1.c0)*(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt1, t1, vt0, rt0 ORDER BY (((vt1.c1)) BETWEEN (((((vt1.c1, rt0.c1, vt0.c1))>((vt0.c0, t1.c2, rt0.c2))))) AND ((((vt1.c0)*(vt0.c1)))))  NULLS FIRST);
SELECT * FROM vt1, t1, vt0, rt0 WHERE ((- (CAST(vt0.c1 AS BLOB)))) ORDER BY (((vt1.c1)) BETWEEN (((((vt1.c1, rt0.c1, vt0.c1))>((vt0.c0, t1.c2, rt0.c2))))) AND ((((vt1.c0)*(vt0.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((~ (vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((~ (vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((~ (vt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ('<hM')) COLLATE BINARY) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ('<hM')) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ('<hM')) COLLATE BINARY) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ('<hM')) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ('<hM')) COLLATE BINARY) ORDER BY rt0.c2;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '1249747427'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '1249747427'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '1249747427'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '1249747427'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '1249747427'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((NOT (((t1.c1)&(x'')))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c1)&(x''))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((NOT (((t1.c1)&(x'')))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c1)&(x''))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((NOT (((t1.c1)&(x'')))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL) WHERE ((((rt0.c1)OR(t1.c0)) IN (CAST(t1.c0 AS TEXT)))) ORDER BY QUOTE(((t1.c0) IS FALSE)) ASC  NULLS FIRST, (((((t1.c1)IS NOT(rt0.c2))))<=((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)OR(t1.c0)) IN (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL) ORDER BY QUOTE(((t1.c0) IS FALSE)) ASC  NULLS FIRST, (((((t1.c1)IS NOT(rt0.c2))))<=((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL) WHERE ((((rt0.c1)OR(t1.c0)) IN (CAST(t1.c0 AS TEXT)))) ORDER BY QUOTE(((t1.c0) IS FALSE)) ASC  NULLS FIRST, (((((t1.c1)IS NOT(rt0.c2))))<=((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)OR(t1.c0)) IN (CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL) ORDER BY QUOTE(((t1.c0) IS FALSE)) ASC  NULLS FIRST, (((((t1.c1)IS NOT(rt0.c2))))<=((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOTNULL) WHERE ((((rt0.c1)OR(t1.c0)) IN (CAST(t1.c0 AS TEXT)))) ORDER BY QUOTE(((t1.c0) IS FALSE)) ASC  NULLS FIRST, (((((t1.c1)IS NOT(rt0.c2))))<=((((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CAST((((t1.c1, rt0.c0, rt0.c0))!=((t1.c0, t1.c0, rt0.c0))) AS INTEGER) WHERE (((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((~ (NULL)))))OR((((t1.c0, rt0.c1, t1.c2)) NOT BETWEEN (('0.6263484663763759', t1.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, t1.c1)))))) ORDER BY ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((~ (NULL)))))OR((((t1.c0, rt0.c1, t1.c2)) NOT BETWEEN (('0.6263484663763759', t1.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, t1.c1)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CAST((((t1.c1, rt0.c0, rt0.c0))!=((t1.c0, t1.c0, rt0.c0))) AS INTEGER) ORDER BY ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CAST((((t1.c1, rt0.c0, rt0.c0))!=((t1.c0, t1.c0, rt0.c0))) AS INTEGER) WHERE (((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((~ (NULL)))))OR((((t1.c0, rt0.c1, t1.c2)) NOT BETWEEN (('0.6263484663763759', t1.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, t1.c1)))))) ORDER BY ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((~ (NULL)))))OR((((t1.c0, rt0.c1, t1.c2)) NOT BETWEEN (('0.6263484663763759', t1.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, t1.c1)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CAST((((t1.c1, rt0.c0, rt0.c0))!=((t1.c0, t1.c0, rt0.c0))) AS INTEGER) ORDER BY ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CAST((((t1.c1, rt0.c0, rt0.c0))!=((t1.c0, t1.c0, rt0.c0))) AS INTEGER) WHERE (((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0)))OR((~ (NULL)))))OR((((t1.c0, rt0.c1, t1.c2)) NOT BETWEEN (('0.6263484663763759', t1.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, t1.c1)))))) ORDER BY ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c1) ISNULL))) AND ((((t1.c1)||(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((((vt1.c1) ISNULL))) AND ((((t1.c1)||(vt0.c1)))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c1) ISNULL))) AND ((((t1.c1)||(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((((vt1.c1) ISNULL))) AND ((((t1.c1)||(vt0.c1)))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c1) ISNULL))) AND ((((t1.c1)||(vt0.c1))))));
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN x'' THEN t1.c0 WHEN t1.c2 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN x'' THEN t1.c0 WHEN t1.c2 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 NOT INDEXED, t1);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN x'' THEN t1.c0 WHEN t1.c2 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN x'' THEN t1.c0 WHEN t1.c2 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 NOT INDEXED, t1);
SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN x'' THEN t1.c0 WHEN t1.c2 THEN rt0.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c0 DESC;
SELECT ALL * FROM rt0, vt1, t1, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0))) IS TRUE)) ORDER BY ((t1.c1)>>(rt0.c1)) COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST, CASE WHEN vt0.c1 COLLATE BINARY THEN CASE t1.c0  WHEN t1.c2 THEN t1.c0 ELSE vt1.c1 END ELSE ((rt0.c1)OR(vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1, t1, vt0 ORDER BY ((t1.c1)>>(rt0.c1)) COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST, CASE WHEN vt0.c1 COLLATE BINARY THEN CASE t1.c0  WHEN t1.c2 THEN t1.c0 ELSE vt1.c1 END ELSE ((rt0.c1)OR(vt0.c1)) END  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t1, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0))) IS TRUE)) ORDER BY ((t1.c1)>>(rt0.c1)) COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST, CASE WHEN vt0.c1 COLLATE BINARY THEN CASE t1.c0  WHEN t1.c2 THEN t1.c0 ELSE vt1.c1 END ELSE ((rt0.c1)OR(vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1, t1, vt0 ORDER BY ((t1.c1)>>(rt0.c1)) COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST, CASE WHEN vt0.c1 COLLATE BINARY THEN CASE t1.c0  WHEN t1.c2 THEN t1.c0 ELSE vt1.c1 END ELSE ((rt0.c1)OR(vt0.c1)) END  NULLS LAST);
SELECT ALL * FROM rt0, vt1, t1, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0))) IS TRUE)) ORDER BY ((t1.c1)>>(rt0.c1)) COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST, CASE WHEN vt0.c1 COLLATE BINARY THEN CASE t1.c0  WHEN t1.c2 THEN t1.c0 ELSE vt1.c1 END ELSE ((rt0.c1)OR(vt0.c1)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t1 ON (((~ (vt0.c1))) BETWEEN (x'') AND ((((rt0.c0, rt0.c1, vt1.c0))>=((rt0.c2, t1.c2, rt0.c0))))) RIGHT OUTER JOIN rt0 ON t1.c2 WHERE ('412290191');
SELECT SUM(count) FROM (SELECT (('412290191') IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON (((~ (vt0.c1))) BETWEEN (x'') AND ((((rt0.c0, rt0.c1, vt1.c0))>=((rt0.c2, t1.c2, rt0.c0))))) RIGHT OUTER JOIN rt0 ON t1.c2);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t1 ON (((~ (vt0.c1))) BETWEEN (x'') AND ((((rt0.c0, rt0.c1, vt1.c0))>=((rt0.c2, t1.c2, rt0.c0))))) RIGHT OUTER JOIN rt0 ON t1.c2 WHERE ('412290191');
SELECT SUM(count) FROM (SELECT (('412290191') IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON (((~ (vt0.c1))) BETWEEN (x'') AND ((((rt0.c0, rt0.c1, vt1.c0))>=((rt0.c2, t1.c2, rt0.c0))))) RIGHT OUTER JOIN rt0 ON t1.c2);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CASE t1.c1 COLLATE BINARY  WHEN ((0Xffffffff812ac577) NOT BETWEEN (vt0.c1) AND (t1.c0)) THEN '1544583096' ELSE ((vt1.c0) NOT BETWEEN (-2050362848) AND (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c1 COLLATE BINARY  WHEN ((0xffffffff812ac577) NOT BETWEEN (vt0.c1) AND (t1.c0)) THEN '1544583096' ELSE ((vt1.c0) NOT BETWEEN (-2050362848) AND (vt1.c1)) END) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CASE t1.c1 COLLATE BINARY  WHEN ((0Xffffffff812ac577) NOT BETWEEN (vt0.c1) AND (t1.c0)) THEN '1544583096' ELSE ((vt1.c0) NOT BETWEEN (-2050362848) AND (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c1 COLLATE BINARY  WHEN ((0xffffffff812ac577) NOT BETWEEN (vt0.c1) AND (t1.c0)) THEN '1544583096' ELSE ((vt1.c0) NOT BETWEEN (-2050362848) AND (vt1.c1)) END) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CASE t1.c1 COLLATE BINARY  WHEN ((0Xffffffff812ac577) NOT BETWEEN (vt0.c1) AND (t1.c0)) THEN '1544583096' ELSE ((vt1.c0) NOT BETWEEN (-2050362848) AND (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9157783188015348);
SELECT SUM(count) FROM (SELECT ((0.9157783188015348) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9157783188015348);
SELECT SUM(count) FROM (SELECT ((0.9157783188015348) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9157783188015348);
SELECT * FROM rt0, vt0, t1, vt1 WHERE (((CAST(t1.c1 AS REAL)) IS FALSE)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, t1, vt1 ORDER BY CAST(((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) AS INTEGER)  NULLS LAST);
SELECT * FROM rt0, vt0, t1, vt1 WHERE (((CAST(t1.c1 AS REAL)) IS FALSE)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, t1, vt1 ORDER BY CAST(((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) AS INTEGER)  NULLS LAST);
SELECT * FROM rt0, vt0, t1, vt1 WHERE (((CAST(t1.c1 AS REAL)) IS FALSE)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c2)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1, rt0 WHERE ((('-979653699' IN ()) IN ())) ORDER BY (((((('9*醘%') NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(x'')))OR(rt0.c2)) ASC  NULLS FIRST, (rt0.c2 COLLATE NOCASE IN ()), vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT (((('-979653699' IN ()) IN ())) IS TRUE)  as count FROM vt1, t1, rt0 ORDER BY (((((('9*醘%') NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(x'')))OR(rt0.c2)) ASC  NULLS FIRST, (rt0.c2 COLLATE NOCASE IN ()), vt1.c1 DESC);
SELECT ALL COUNT(*) FROM vt1, t1, rt0 WHERE ((('-979653699' IN ()) IN ())) ORDER BY (((((('9*醘%') NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(x'')))OR(rt0.c2)) ASC  NULLS FIRST, (rt0.c2 COLLATE NOCASE IN ()), vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT (((('-979653699' IN ()) IN ())) IS TRUE)  as count FROM vt1, t1, rt0 ORDER BY (((((('9*醘%') NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(x'')))OR(rt0.c2)) ASC  NULLS FIRST, (rt0.c2 COLLATE NOCASE IN ()), vt1.c1 DESC);
SELECT ALL COUNT(*) FROM vt1, t1, rt0 WHERE ((('-979653699' IN ()) IN ())) ORDER BY (((((('9*醘%') NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR(x'')))OR(rt0.c2)) ASC  NULLS FIRST, (rt0.c2 COLLATE NOCASE IN ()), vt1.c1 DESC;
SELECT * FROM vt1, rt0, t1 WHERE ((+ (((rt0.c0)<(vt1.c1))))) ORDER BY CASE ((NULL) NOT BETWEEN ('1249747427') AND (rt0.c0))  WHEN ((t1.c2)||(rt0.c1)) THEN CAST(t1.c0 AS REAL) ELSE (t1.c1 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)<(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0, t1 ORDER BY CASE ((NULL) NOT BETWEEN ('1249747427') AND (rt0.c0))  WHEN ((t1.c2)||(rt0.c1)) THEN CAST(t1.c0 AS REAL) ELSE (t1.c1 IN ()) END DESC  NULLS LAST);
SELECT * FROM vt1, rt0, t1 WHERE ((+ (((rt0.c0)<(vt1.c1))))) ORDER BY CASE ((NULL) NOT BETWEEN ('1249747427') AND (rt0.c0))  WHEN ((t1.c2)||(rt0.c1)) THEN CAST(t1.c0 AS REAL) ELSE (t1.c1 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)<(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0, t1 ORDER BY CASE ((NULL) NOT BETWEEN ('1249747427') AND (rt0.c0))  WHEN ((t1.c2)||(rt0.c1)) THEN CAST(t1.c0 AS REAL) ELSE (t1.c1 IN ()) END DESC  NULLS LAST);
SELECT * FROM vt1, rt0, t1 WHERE ((+ (((rt0.c0)<(vt1.c1))))) ORDER BY CASE ((NULL) NOT BETWEEN ('1249747427') AND (rt0.c0))  WHEN ((t1.c2)||(rt0.c1)) THEN CAST(t1.c0 AS REAL) ELSE (t1.c1 IN ()) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 ELSE ((t1.c0)LIKE(t1.c0)) END) ORDER BY ((((((((((((((t1.c1)OR(vt0.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c0)))AND(t1.c0)))+((+ (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 ELSE ((t1.c0)LIKE(t1.c0)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((((((((((t1.c1)OR(vt0.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c0)))AND(t1.c0)))+((+ (t1.c2)))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 ELSE ((t1.c0)LIKE(t1.c0)) END) ORDER BY ((((((((((((((t1.c1)OR(vt0.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c0)))AND(t1.c0)))+((+ (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 ELSE ((t1.c0)LIKE(t1.c0)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((((((((((t1.c1)OR(vt0.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c0)))AND(t1.c0)))+((+ (t1.c2)))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)) THEN t1.c0 ELSE ((t1.c0)LIKE(t1.c0)) END) ORDER BY ((((((((((((((t1.c1)OR(vt0.c0)))OR(t1.c1)))AND(t1.c0)))AND(t1.c1)))AND(vt0.c0)))AND(t1.c0)))+((+ (t1.c2))));
SELECT * FROM t1, rt0 WHERE ((+ (((rt0.c2) NOT BETWEEN (t1.c1) AND (rt0.c0))))) ORDER BY ((rt0.c0) BETWEEN (((t1.c1)=(t1.c2))) AND (CASE WHEN rt0.c2 THEN '' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT BETWEEN (t1.c1) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((rt0.c0) BETWEEN (((t1.c1)=(t1.c2))) AND (CASE WHEN rt0.c2 THEN '' END)) DESC  NULLS LAST);
SELECT * FROM t1, rt0 WHERE ((+ (((rt0.c2) NOT BETWEEN (t1.c1) AND (rt0.c0))))) ORDER BY ((rt0.c0) BETWEEN (((t1.c1)=(t1.c2))) AND (CASE WHEN rt0.c2 THEN '' END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT BETWEEN (t1.c1) AND (rt0.c0))))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((rt0.c0) BETWEEN (((t1.c1)=(t1.c2))) AND (CASE WHEN rt0.c2 THEN '' END)) DESC  NULLS LAST);
SELECT * FROM t1, rt0 WHERE ((+ (((rt0.c2) NOT BETWEEN (t1.c1) AND (rt0.c0))))) ORDER BY ((rt0.c0) BETWEEN (((t1.c1)=(t1.c2))) AND (CASE WHEN rt0.c2 THEN '' END)) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((+ (t1.c2)))>(((t1.c0) IS TRUE)))) ORDER BY ((((t1.c0)>=(t1.c1))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c2)))>(((t1.c0) IS TRUE)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)>=(t1.c1))) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((+ (t1.c2)))>(((t1.c0) IS TRUE)))) ORDER BY ((((t1.c0)>=(t1.c1))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c2)))>(((t1.c0) IS TRUE)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)>=(t1.c1))) ISNULL) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((+ (t1.c2)))>(((t1.c0) IS TRUE)))) ORDER BY ((((t1.c0)>=(t1.c1))) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(rt0.c1)))IS(((((rt0.c2)AND(0xffffffff8701081d)))OR(rt0.c0)))) WHERE (TYPEOF(DISTINCT ((rt0.c1)>>(rt0.c0)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt0.c1)>>(rt0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(rt0.c1)))IS(((((rt0.c2)AND(0xffffffff8701081d)))OR(rt0.c0)))) ORDER BY rt0.c0);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(rt0.c1)))IS(((((rt0.c2)AND(0xffffffff8701081d)))OR(rt0.c0)))) WHERE (TYPEOF(DISTINCT ((rt0.c1)>>(rt0.c0)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt0.c1)>>(rt0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(rt0.c1)))IS(((((rt0.c2)AND(0xffffffff8701081d)))OR(rt0.c0)))) ORDER BY rt0.c0);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(rt0.c1)))IS(((((rt0.c2)AND(0xffffffff8701081d)))OR(rt0.c0)))) WHERE (TYPEOF(DISTINCT ((rt0.c1)>>(rt0.c0)))) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM vt0, t1, rt0, vt1 WHERE ((((((rt0.c1, rt0.c2, vt0.c1))>((t1.c0, t1.c1, rt0.c0))))&(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c2, vt0.c1))>((t1.c0, t1.c1, rt0.c0))))&(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, t1, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, vt1 WHERE ((((((rt0.c1, rt0.c2, vt0.c1))>((t1.c0, t1.c1, rt0.c0))))&(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c2, vt0.c1))>((t1.c0, t1.c1, rt0.c0))))&(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, t1, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, vt1 WHERE ((((((rt0.c1, rt0.c2, vt0.c1))>((t1.c0, t1.c1, rt0.c0))))&(((rt0.c2) NOTNULL))));
SELECT * FROM rt0, vt0, vt1 CROSS JOIN t1 ON vt0.c0 WHERE (vt0.c0) ORDER BY (~ (((t1.c1)<=(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1 CROSS JOIN t1 ON vt0.c0 ORDER BY (~ (((t1.c1)<=(t1.c0))))  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 CROSS JOIN t1 ON vt0.c0 WHERE (vt0.c0) ORDER BY (~ (((t1.c1)<=(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1 CROSS JOIN t1 ON vt0.c0 ORDER BY (~ (((t1.c1)<=(t1.c0))))  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 CROSS JOIN t1 ON vt0.c0 WHERE (vt0.c0) ORDER BY (~ (((t1.c1)<=(t1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CASE WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE t1.c0 END COLLATE BINARY RIGHT OUTER JOIN t1 ON NULL WHERE (((vt1.c0) IS FALSE) COLLATE BINARY) ORDER BY ((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON CASE WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE t1.c0 END COLLATE BINARY RIGHT OUTER JOIN t1 ON NULL ORDER BY ((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CASE WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE t1.c0 END COLLATE BINARY RIGHT OUTER JOIN t1 ON NULL WHERE (((vt1.c0) IS FALSE) COLLATE BINARY) ORDER BY ((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON CASE WHEN t1.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE t1.c0 END COLLATE BINARY RIGHT OUTER JOIN t1 ON NULL ORDER BY ((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (json_remove(t1.c2, vt0.c0, vt0.c1, t1.c2) COLLATE BINARY) ORDER BY (((t1.c2 COLLATE BINARY))=(((+ (vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(t1.c2, vt0.c0, vt0.c1, t1.c2) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((t1.c2 COLLATE BINARY))=(((+ (vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (json_remove(t1.c2, vt0.c0, vt0.c1, t1.c2) COLLATE BINARY) ORDER BY (((t1.c2 COLLATE BINARY))=(((+ (vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(t1.c2, vt0.c0, vt0.c1, t1.c2) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((t1.c2 COLLATE BINARY))=(((+ (vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (json_remove(t1.c2, vt0.c0, vt0.c1, t1.c2) COLLATE BINARY) ORDER BY (((t1.c2 COLLATE BINARY))=(((+ (vt0.c1))))) DESC;
SELECT ALL * FROM vt1, vt0, t1 WHERE ((NOT (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 WHEN t1.c0 THEN vt1.c1 ELSE vt0.c1 END))) ORDER BY MIN((- (t1.c2)), ((t1.c2) IS FALSE)) ASC, ((vt0.c0 COLLATE NOCASE)GLOB(((vt0.c0) NOT BETWEEN ('.') AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 WHEN t1.c0 THEN vt1.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY MIN((- (t1.c2)), ((t1.c2) IS FALSE)) ASC, ((vt0.c0 COLLATE NOCASE)GLOB(((vt0.c0) NOT BETWEEN ('.') AND (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((NOT (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 WHEN t1.c0 THEN vt1.c1 ELSE vt0.c1 END))) ORDER BY MIN((- (t1.c2)), ((t1.c2) IS FALSE)) ASC, ((vt0.c0 COLLATE NOCASE)GLOB(((vt0.c0) NOT BETWEEN ('.') AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 WHEN t1.c0 THEN vt1.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY MIN((- (t1.c2)), ((t1.c2) IS FALSE)) ASC, ((vt0.c0 COLLATE NOCASE)GLOB(((vt0.c0) NOT BETWEEN ('.') AND (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((NOT (CASE vt1.c1  WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c1 WHEN t1.c0 THEN vt1.c1 ELSE vt0.c1 END))) ORDER BY MIN((- (t1.c2)), ((t1.c2) IS FALSE)) ASC, ((vt0.c0 COLLATE NOCASE)GLOB(((vt0.c0) NOT BETWEEN ('.') AND (vt0.c1))))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (TRIM((rt0.c1 IN ()))) ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TRIM((rt0.c1 IN ()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN (rt0.c1 COLLATE BINARY)));
SELECT * FROM rt0, vt0 WHERE (TRIM((rt0.c1 IN ()))) ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TRIM((rt0.c1 IN ()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN (rt0.c1 COLLATE BINARY)));
SELECT * FROM rt0, vt0 WHERE (TRIM((rt0.c1 IN ()))) ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN (rt0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t1 ON (NOT (t1.c2)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON ((vt1.c0)&(((vt1.c1) BETWEEN (rt0.c2) AND (t1.c1)))) WHERE (CASE ((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((t1.c0)IS NOT(vt0.c1)) THEN (+ (vt1.c0)) WHEN CASE WHEN rt0.c1 THEN t1.c2 ELSE vt0.c0 END THEN vt0.c1 COLLATE NOCASE WHEN t1.c1 COLLATE RTRIM THEN ((rt0.c0)/(vt1.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) THEN rt0.c1 WHEN (vt1.c0 IN ()) THEN (NOT (0.5504064423033616)) END) ORDER BY ((((UPPER(DISTINCT vt1.c1))OR('0.5764111079823132')))OR((- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((t1.c0)IS NOT(vt0.c1)) THEN (+ (vt1.c0)) WHEN CASE WHEN rt0.c1 THEN t1.c2 ELSE vt0.c0 END THEN vt0.c1 COLLATE NOCASE WHEN t1.c1 COLLATE RTRIM THEN ((rt0.c0)/(vt1.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) THEN rt0.c1 WHEN (vt1.c0 IN ()) THEN (NOT (0.5504064423033616)) END) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON (NOT (t1.c2)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON ((vt1.c0)&(((vt1.c1) BETWEEN (rt0.c2) AND (t1.c1)))) ORDER BY ((((UPPER(DISTINCT vt1.c1))OR('0.5764111079823132')))OR((- (vt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t1 ON (NOT (t1.c2)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON ((vt1.c0)&(((vt1.c1) BETWEEN (rt0.c2) AND (t1.c1)))) WHERE (CASE ((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((t1.c0)IS NOT(vt0.c1)) THEN (+ (vt1.c0)) WHEN CASE WHEN rt0.c1 THEN t1.c2 ELSE vt0.c0 END THEN vt0.c1 COLLATE NOCASE WHEN t1.c1 COLLATE RTRIM THEN ((rt0.c0)/(vt1.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) THEN rt0.c1 WHEN (vt1.c0 IN ()) THEN (NOT (0.5504064423033616)) END) ORDER BY ((((UPPER(DISTINCT vt1.c1))OR('0.5764111079823132')))OR((- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((t1.c0)IS NOT(vt0.c1)) THEN (+ (vt1.c0)) WHEN CASE WHEN rt0.c1 THEN t1.c2 ELSE vt0.c0 END THEN vt0.c1 COLLATE NOCASE WHEN t1.c1 COLLATE RTRIM THEN ((rt0.c0)/(vt1.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) THEN rt0.c1 WHEN (vt1.c0 IN ()) THEN (NOT (0.5504064423033616)) END) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON (NOT (t1.c2)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON ((vt1.c0)&(((vt1.c1) BETWEEN (rt0.c2) AND (t1.c1)))) ORDER BY ((((UPPER(DISTINCT vt1.c1))OR('0.5764111079823132')))OR((- (vt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN t1 ON (NOT (t1.c2)) COLLATE RTRIM LEFT OUTER JOIN vt1 ON ((vt1.c0)&(((vt1.c1) BETWEEN (rt0.c2) AND (t1.c1)))) WHERE (CASE ((t1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((t1.c0)IS NOT(vt0.c1)) THEN (+ (vt1.c0)) WHEN CASE WHEN rt0.c1 THEN t1.c2 ELSE vt0.c0 END THEN vt0.c1 COLLATE NOCASE WHEN t1.c1 COLLATE RTRIM THEN ((rt0.c0)/(vt1.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0)) THEN rt0.c1 WHEN (vt1.c0 IN ()) THEN (NOT (0.5504064423033616)) END) ORDER BY ((((UPPER(DISTINCT vt1.c1))OR('0.5764111079823132')))OR((- (vt0.c1))));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((((((vt1.c0)AND(t1.c0)))OR(t1.c0)))LIKE(t1.c2))) ORDER BY ((((UPPER(DISTINCT vt1.c1))OR(CAST(t1.c0 AS BLOB))))OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(t1.c0)))OR(t1.c0)))LIKE(t1.c2))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((UPPER(DISTINCT vt1.c1))OR(CAST(t1.c0 AS BLOB))))OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c1 END)));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((((((vt1.c0)AND(t1.c0)))OR(t1.c0)))LIKE(t1.c2))) ORDER BY ((((UPPER(DISTINCT vt1.c1))OR(CAST(t1.c0 AS BLOB))))OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(t1.c0)))OR(t1.c0)))LIKE(t1.c2))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((UPPER(DISTINCT vt1.c1))OR(CAST(t1.c0 AS BLOB))))OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c1 END)));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((((((vt1.c0)AND(t1.c0)))OR(t1.c0)))LIKE(t1.c2))) ORDER BY ((((UPPER(DISTINCT vt1.c1))OR(CAST(t1.c0 AS BLOB))))OR(CASE vt1.c0  WHEN vt1.c0 THEN t1.c1 END));
SELECT ALL COUNT(*) FROM vt1, t1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((~ ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, t1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((~ ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, t1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((~ ((t1.c0 IN ()))));
SELECT * FROM vt0 WHERE (ABS(DISTINCT vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(DISTINCT vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(DISTINCT vt0.c0) COLLATE BINARY);
SELECT * FROM t1, vt0 WHERE ((((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY ((t1.c0 COLLATE BINARY)<<(((((t1.c0)OR(vt0.c1)))OR(t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((t1.c0 COLLATE BINARY)<<(((((t1.c0)OR(vt0.c1)))OR(t1.c2)))) DESC);
SELECT * FROM t1, vt0 WHERE ((((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY ((t1.c0 COLLATE BINARY)<<(((((t1.c0)OR(vt0.c1)))OR(t1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((t1.c0 COLLATE BINARY)<<(((((t1.c0)OR(vt0.c1)))OR(t1.c2)))) DESC);
SELECT * FROM t1, vt0 WHERE ((((((((t1.c2)) BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY ((t1.c0 COLLATE BINARY)<<(((((t1.c0)OR(vt0.c1)))OR(t1.c2)))) DESC;
SELECT * FROM t1, vt1 WHERE ((((t1.c0)) BETWEEN (((t1.c1 IN ()))) AND (((((t1.c0))<((vt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((t1.c1 IN ()))) AND (((((t1.c0))<((vt1.c1))))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((((t1.c0)) BETWEEN (((t1.c1 IN ()))) AND (((((t1.c0))<((vt1.c1)))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((t1.c1 IN ()))) AND (((((t1.c0))<((vt1.c1))))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((((t1.c0)) BETWEEN (((t1.c1 IN ()))) AND (((((t1.c0))<((vt1.c1)))))));
SELECT ALL * FROM vt0, rt0 WHERE (((json_array(vt0.c0, NULL))/(((rt0.c1)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array(vt0.c0, NULL))/(((rt0.c1)<(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((json_array(vt0.c0, NULL))/(((rt0.c1)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array(vt0.c0, NULL))/(((rt0.c1)<(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((json_array(vt0.c0, NULL))/(((rt0.c1)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE NOCASE IN (((((t1.c1)AND(t1.c2)))OR(t1.c2))))) ORDER BY NULLIF(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), ((t1.c2)AND(t1.c2))), (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((((((((((((((((t1.c2)OR(t1.c0)))OR(x'')))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c2)))OR(t1.c1)))AND(t1.c2)), (t1.c0 IN (t1.c2)), CAST(t1.c0 AS TEXT))) AND (((t1.c1 IN (t1.c1, t1.c0)), CAST(t1.c1 AS TEXT), ((((t1.c2)OR(t1.c2)))AND(t1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t1.c1 COLLATE NOCASE IN (((((t1.c1)AND(t1.c2)))OR(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY NULLIF(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), ((t1.c2)AND(t1.c2))), (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((((((((((((((((t1.c2)OR(t1.c0)))OR(x'')))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c2)))OR(t1.c1)))AND(t1.c2)), (t1.c0 IN (t1.c2)), CAST(t1.c0 AS TEXT))) AND (((t1.c1 IN (t1.c1, t1.c0)), CAST(t1.c1 AS TEXT), ((((t1.c2)OR(t1.c2)))AND(t1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE NOCASE IN (((((t1.c1)AND(t1.c2)))OR(t1.c2))))) ORDER BY NULLIF(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), ((t1.c2)AND(t1.c2))), (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((((((((((((((((t1.c2)OR(t1.c0)))OR(x'')))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c2)))OR(t1.c1)))AND(t1.c2)), (t1.c0 IN (t1.c2)), CAST(t1.c0 AS TEXT))) AND (((t1.c1 IN (t1.c1, t1.c0)), CAST(t1.c1 AS TEXT), ((((t1.c2)OR(t1.c2)))AND(t1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t1.c1 COLLATE NOCASE IN (((((t1.c1)AND(t1.c2)))OR(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY NULLIF(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), ((t1.c2)AND(t1.c2))), (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((((((((((((((((t1.c2)OR(t1.c0)))OR(x'')))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c2)))OR(t1.c1)))AND(t1.c2)), (t1.c0 IN (t1.c2)), CAST(t1.c0 AS TEXT))) AND (((t1.c1 IN (t1.c1, t1.c0)), CAST(t1.c1 AS TEXT), ((((t1.c2)OR(t1.c2)))AND(t1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c1 COLLATE NOCASE IN (((((t1.c1)AND(t1.c2)))OR(t1.c2))))) ORDER BY NULLIF(DISTINCT ((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c2)), ((t1.c2)AND(t1.c2))), (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((((((((((((((((t1.c2)OR(t1.c0)))OR(x'')))OR(t1.c1)))OR(t1.c0)))AND(t1.c0)))OR(t1.c2)))OR(t1.c1)))AND(t1.c2)), (t1.c0 IN (t1.c2)), CAST(t1.c0 AS TEXT))) AND (((t1.c1 IN (t1.c1, t1.c0)), CAST(t1.c1 AS TEXT), ((((t1.c2)OR(t1.c2)))AND(t1.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1, t1 WHERE ((~ (t1.c1)) COLLATE NOCASE) ORDER BY ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1 ORDER BY ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE ((~ (t1.c1)) COLLATE NOCASE) ORDER BY ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1 ORDER BY ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE ((~ (t1.c1)) COLLATE NOCASE) ORDER BY ((vt1.c1) NOT BETWEEN (t1.c0) AND (vt1.c1)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt1, rt0 WHERE (UNLIKELY(((rt0.c2)IS NOT(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt0.c2)IS NOT(t1.c2)))) IS TRUE)  as count FROM t1, vt1, rt0);
SELECT ALL * FROM t1, vt1, rt0 WHERE (UNLIKELY(((rt0.c2)IS NOT(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt0.c2)IS NOT(t1.c2)))) IS TRUE)  as count FROM t1, vt1, rt0);
SELECT ALL * FROM t1, vt1, rt0 WHERE (UNLIKELY(((rt0.c2)IS NOT(t1.c2))));
SELECT ALL COUNT(*) FROM t1, rt0 NOT INDEXED FULL OUTER JOIN vt0 ON (((~ (0.094249555228483))) IS FALSE) WHERE (((((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1))) BETWEEN (((rt0.c2)<(vt0.c1))) AND (load_extension(t1.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1))) BETWEEN (((rt0.c2)<(vt0.c1))) AND (load_extension(t1.c2, vt0.c1)))) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN vt0 ON (((~ (0.094249555228483))) IS FALSE));
SELECT ALL COUNT(*) FROM t1, rt0 NOT INDEXED FULL OUTER JOIN vt0 ON (((~ (0.094249555228483))) IS FALSE) WHERE (((((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1))) BETWEEN (((rt0.c2)<(vt0.c1))) AND (load_extension(t1.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1))) BETWEEN (((rt0.c2)<(vt0.c1))) AND (load_extension(t1.c2, vt0.c1)))) IS TRUE)  as count FROM t1, rt0 FULL OUTER JOIN vt0 ON (((~ (0.094249555228483))) IS FALSE));
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (CAST(t1.c1 AS NUMERIC))) WHERE ((CAST(t1.c2 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t1.c2 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (CAST(t1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (CAST(t1.c1 AS NUMERIC))) WHERE ((CAST(t1.c2 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t1.c2 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (CAST(t1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (CAST(t1.c1 AS NUMERIC))) WHERE ((CAST(t1.c2 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL * FROM vt1, vt0, rt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (vt1.c1);
SELECT * FROM vt0, t1 WHERE ('' COLLATE RTRIM) ORDER BY ((CASE '-1547632184'  WHEN vt0.c1 THEN t1.c2 ELSE vt0.c1 END)GLOB(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CASE '-1547632184'  WHEN vt0.c1 THEN t1.c2 ELSE vt0.c1 END)GLOB(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE ('' COLLATE RTRIM) ORDER BY ((CASE '-1547632184'  WHEN vt0.c1 THEN t1.c2 ELSE vt0.c1 END)GLOB(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CASE '-1547632184'  WHEN vt0.c1 THEN t1.c2 ELSE vt0.c1 END)GLOB(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE ('' COLLATE RTRIM) ORDER BY ((CASE '-1547632184'  WHEN vt0.c1 THEN t1.c2 ELSE vt0.c1 END)GLOB(((vt0.c0)<<(vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'f68c' THEN vt1.c1 WHEN '-2014161026' THEN vt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'f68c' THEN vt1.c1 WHEN '-2014161026' THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'f68c' THEN vt1.c1 WHEN '-2014161026' THEN vt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'f68c' THEN vt1.c1 WHEN '-2014161026' THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'f68c' THEN vt1.c1 WHEN '-2014161026' THEN vt1.c0 END COLLATE BINARY);
SELECT * FROM t1, vt1, vt0, rt0 WHERE ((((t1.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) ISNULL) IN ())) IS TRUE)  as count FROM t1, vt1, vt0, rt0);
SELECT * FROM t1, vt1, vt0, rt0 WHERE ((((t1.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) ISNULL) IN ())) IS TRUE)  as count FROM t1, vt1, vt0, rt0);
SELECT * FROM t1, vt1, vt0, rt0 WHERE ((((t1.c0) ISNULL) IN ()));
SELECT * FROM vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS NUMERIC));
SELECT * FROM vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY (((vt0.c1 IN ()))|(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))|(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT * FROM vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY (((vt0.c1 IN ()))|(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))|(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT * FROM vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY (((vt0.c1 IN ()))|(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)<<((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)<<((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)<<((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)<<((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)<<((vt0.c0 IN (vt0.c1)))));
SELECT * FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)%(vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)%(vt0.c0)) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE RTRIM COLLATE BINARY);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (vt1.c0) ORDER BY ((((((vt0.c1)-(vt0.c1)))AND((rt0.c1 IN ()))))AND(rt0.c2)) ASC  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt1.c0 COLLATE BINARY))  NULLS LAST, ((((HEX(vt0.c1))AND(CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN NULL END)))AND(((((vt0.c1)AND(vt0.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((vt0.c1)-(vt0.c1)))AND((rt0.c1 IN ()))))AND(rt0.c2)) ASC  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt1.c0 COLLATE BINARY))  NULLS LAST, ((((HEX(vt0.c1))AND(CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN NULL END)))AND(((((vt0.c1)AND(vt0.c0)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (vt1.c0) ORDER BY ((((((vt0.c1)-(vt0.c1)))AND((rt0.c1 IN ()))))AND(rt0.c2)) ASC  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt1.c0 COLLATE BINARY))  NULLS LAST, ((((HEX(vt0.c1))AND(CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN NULL END)))AND(((((vt0.c1)AND(vt0.c0)))AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((vt0.c1)-(vt0.c1)))AND((rt0.c1 IN ()))))AND(rt0.c2)) ASC  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt1.c0 COLLATE BINARY))  NULLS LAST, ((((HEX(vt0.c1))AND(CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN NULL END)))AND(((((vt0.c1)AND(vt0.c0)))AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ORDER BY CASE LIKELY('b_')  WHEN (((vt0.c0))>((vt0.c1))) THEN (vt0.c0 IN ()) ELSE NULL END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CASE LIKELY('b_')  WHEN (((vt0.c0))>((vt0.c1))) THEN (vt0.c0 IN ()) ELSE NULL END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ORDER BY CASE LIKELY('b_')  WHEN (((vt0.c0))>((vt0.c1))) THEN (vt0.c0 IN ()) ELSE NULL END;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY CASE LIKELY('b_')  WHEN (((vt0.c0))>((vt0.c1))) THEN (vt0.c0 IN ()) ELSE NULL END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((+ (vt0.c1)))) AND (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ORDER BY CASE LIKELY('b_')  WHEN (((vt0.c0))>((vt0.c1))) THEN (vt0.c0 IN ()) ELSE NULL END;
SELECT ALL * FROM t1, rt0, vt0 WHERE (CAST((rt0.c0 IN (t1.c0, t1.c0)) AS REAL)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (t1.c0, t1.c0)) AS REAL)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0, vt0 WHERE (CAST((rt0.c0 IN (t1.c0, t1.c0)) AS REAL)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (t1.c0, t1.c0)) AS REAL)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0, vt0 WHERE (CAST((rt0.c0 IN (t1.c0, t1.c0)) AS REAL)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t1 ON (((- (NULL))) BETWEEN (((x'')>(vt1.c1))) AND (t1.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((t1.c1)OR((((vt1.c0)) BETWEEN ((t1.c1)) AND ((vt1.c1))))) WHERE ((((CAST(vt1.c0 AS NUMERIC), ((NULL)>(vt0.c1)), vt0.c0 COLLATE NOCASE))<>((-7.28889865E8, ((vt0.c0)==(vt0.c0)), CASE WHEN vt1.c1 THEN 'YLw}<oVQ' WHEN rt0.c2 THEN vt1.c0 WHEN t1.c1 THEN x'ff0a' ELSE rt0.c0 END)))) ORDER BY ((((t1.c1)GLOB(vt0.c0)))>>(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS NUMERIC), ((NULL)>(vt0.c1)), vt0.c0 COLLATE NOCASE))<>((-7.28889865E8, ((vt0.c0)==(vt0.c0)), CASE WHEN vt1.c1 THEN 'YLw}<oVQ' WHEN rt0.c2 THEN vt1.c0 WHEN t1.c1 THEN x'ff0a' ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON (((- (NULL))) BETWEEN (((x'')>(vt1.c1))) AND (t1.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((t1.c1)OR((((vt1.c0)) BETWEEN ((t1.c1)) AND ((vt1.c1))))) ORDER BY ((((t1.c1)GLOB(vt0.c0)))>>(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t1 ON (((- (NULL))) BETWEEN (((x'')>(vt1.c1))) AND (t1.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((t1.c1)OR((((vt1.c0)) BETWEEN ((t1.c1)) AND ((vt1.c1))))) WHERE ((((CAST(vt1.c0 AS NUMERIC), ((NULL)>(vt0.c1)), vt0.c0 COLLATE NOCASE))<>((-7.28889865E8, ((vt0.c0)==(vt0.c0)), CASE WHEN vt1.c1 THEN 'YLw}<oVQ' WHEN rt0.c2 THEN vt1.c0 WHEN t1.c1 THEN x'ff0a' ELSE rt0.c0 END)))) ORDER BY ((((t1.c1)GLOB(vt0.c0)))>>(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS NUMERIC), ((NULL)>(vt0.c1)), vt0.c0 COLLATE NOCASE))<>((-7.28889865E8, ((vt0.c0)==(vt0.c0)), CASE WHEN vt1.c1 THEN 'YLw}<oVQ' WHEN rt0.c2 THEN vt1.c0 WHEN t1.c1 THEN x'ff0a' ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON (((- (NULL))) BETWEEN (((x'')>(vt1.c1))) AND (t1.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON ((t1.c1)OR((((vt1.c0)) BETWEEN ((t1.c1)) AND ((vt1.c1))))) ORDER BY ((((t1.c1)GLOB(vt0.c0)))>>(CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((('-1323567399')OR(((vt0.c0)<<(vt1.c0)))))AND(vt0.c1))) ORDER BY 0.3709696626407174;
SELECT SUM(count) FROM (SELECT ALL (((((('-1323567399')OR(((vt0.c0)<<(vt1.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.3709696626407174);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((('-1323567399')OR(((vt0.c0)<<(vt1.c0)))))AND(vt0.c1))) ORDER BY 0.3709696626407174;
SELECT SUM(count) FROM (SELECT ALL (((((('-1323567399')OR(((vt0.c0)<<(vt1.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.3709696626407174);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((('-1323567399')OR(((vt0.c0)<<(vt1.c0)))))AND(vt0.c1))) ORDER BY 0.3709696626407174;
SELECT ALL COUNT(*) FROM vt1, rt0, t1, vt0 WHERE (x'0e923df5') ORDER BY ((rt0.c1 COLLATE RTRIM)LIKE(((((t1.c0)AND(rt0.c1)))OR(vt0.c1)))) DESC, ((((((vt1.c0, t1.c1, t1.c2))<=((t1.c1, vt0.c0, NULL)))))==(((vt1.c0 IN (t1.c0, vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'0e923df5') IS TRUE)  as count FROM vt1, rt0, t1, vt0 ORDER BY ((rt0.c1 COLLATE RTRIM)LIKE(((((t1.c0)AND(rt0.c1)))OR(vt0.c1)))) DESC, ((((((vt1.c0, t1.c1, t1.c2))<=((t1.c1, vt0.c0, NULL)))))=(((vt1.c0 IN (t1.c0, vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, t1, vt0 WHERE (x'0e923df5') ORDER BY ((rt0.c1 COLLATE RTRIM)LIKE(((((t1.c0)AND(rt0.c1)))OR(vt0.c1)))) DESC, ((((((vt1.c0, t1.c1, t1.c2))<=((t1.c1, vt0.c0, NULL)))))==(((vt1.c0 IN (t1.c0, vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'0e923df5') IS TRUE)  as count FROM vt1, rt0, t1, vt0 ORDER BY ((rt0.c1 COLLATE RTRIM)LIKE(((((t1.c0)AND(rt0.c1)))OR(vt0.c1)))) DESC, ((((((vt1.c0, t1.c1, t1.c2))<=((t1.c1, vt0.c0, NULL)))))=(((vt1.c0 IN (t1.c0, vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, t1, vt0 WHERE (x'0e923df5') ORDER BY ((rt0.c1 COLLATE RTRIM)LIKE(((((t1.c0)AND(rt0.c1)))OR(vt0.c1)))) DESC, ((((((vt1.c0, t1.c1, t1.c2))<=((t1.c1, vt0.c0, NULL)))))==(((vt1.c0 IN (t1.c0, vt0.c1)))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((COALESCE(DISTINCT vt1.c1, vt1.c1))OR((- (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM))) ORDER BY 'Z}v'  NULLS LAST, ((vt1.c0)<((vt1.c0 IN ('0.030565698374357075')))), (+ ('1601985963')) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT vt1.c1, vt1.c1))OR((- (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY 'Z}v'  NULLS LAST, ((vt1.c0)<((vt1.c0 IN ('0.030565698374357075')))), (+ ('1601985963')) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE (((((COALESCE(DISTINCT vt1.c1, vt1.c1))OR((- (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM))) ORDER BY 'Z}v'  NULLS LAST, ((vt1.c0)<((vt1.c0 IN ('0.030565698374357075')))), (+ ('1601985963')) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT vt1.c1, vt1.c1))OR((- (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY 'Z}v'  NULLS LAST, ((vt1.c0)<((vt1.c0 IN ('0.030565698374357075')))), (+ ('1601985963')) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE (((((COALESCE(DISTINCT vt1.c1, vt1.c1))OR((- (vt1.c1)))))AND(vt1.c1 COLLATE RTRIM))) ORDER BY 'Z}v'  NULLS LAST, ((vt1.c0)<((vt1.c0 IN ('0.030565698374357075')))), (+ ('1601985963')) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(json_insert(rt0.c1, '644068853', vt0.c0, rt0.c0, rt0.c0) AS INTEGER)) ORDER BY ((TYPEOF(DISTINCT rt0.c2)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json_insert(rt0.c1, '644068853', vt0.c0, rt0.c0, rt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((TYPEOF(DISTINCT rt0.c2)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(json_insert(rt0.c1, '644068853', vt0.c0, rt0.c0, rt0.c0) AS INTEGER)) ORDER BY ((TYPEOF(DISTINCT rt0.c2)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json_insert(rt0.c1, '644068853', vt0.c0, rt0.c0, rt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((TYPEOF(DISTINCT rt0.c2)) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((t1.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((t1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((t1.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((t1.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((t1.c2 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)==(t1.c1))) IS FALSE) FULL OUTER JOIN t1 ON CASE WHEN (- (t1.c2)) THEN CAST(vt0.c0 AS REAL) ELSE 0.3882131492746508 END WHERE (CAST(((vt0.c1)LIKE(rt0.c0)) AS NUMERIC)) ORDER BY CAST(((vt0.c1)AND(t1.c2)) AS REAL)  NULLS FIRST, CAST(((t1.c1)&(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)LIKE(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)==(t1.c1))) IS FALSE) FULL OUTER JOIN t1 ON CASE WHEN (- (t1.c2)) THEN CAST(vt0.c0 AS REAL) ELSE 0.3882131492746508 END ORDER BY CAST(((vt0.c1)AND(t1.c2)) AS REAL)  NULLS FIRST, CAST(((t1.c1)&(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)==(t1.c1))) IS FALSE) FULL OUTER JOIN t1 ON CASE WHEN (- (t1.c2)) THEN CAST(vt0.c0 AS REAL) ELSE 0.3882131492746508 END WHERE (CAST(((vt0.c1)LIKE(rt0.c0)) AS NUMERIC)) ORDER BY CAST(((vt0.c1)AND(t1.c2)) AS REAL)  NULLS FIRST, CAST(((t1.c1)&(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)LIKE(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)==(t1.c1))) IS FALSE) FULL OUTER JOIN t1 ON CASE WHEN (- (t1.c2)) THEN CAST(vt0.c0 AS REAL) ELSE 0.3882131492746508 END ORDER BY CAST(((vt0.c1)AND(t1.c2)) AS REAL)  NULLS FIRST, CAST(((t1.c1)&(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((((- (rt0.c0))))==(((((vt1.c1))<=((rt0.c1)))))) RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN (t1.c0, vt0.c1)))>=(x'25e6')) INNER JOIN t1 ON CAST((0.8468201068344985 IN ()) AS TEXT) WHERE (t1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((- (rt0.c0))))=(((((vt1.c1))<=((rt0.c1)))))) RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN (t1.c0, vt0.c1)))>=(x'25e6')) INNER JOIN t1 ON CAST((0.8468201068344985 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((((- (rt0.c0))))==(((((vt1.c1))<=((rt0.c1)))))) RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN (t1.c0, vt0.c1)))>=(x'25e6')) INNER JOIN t1 ON CAST((0.8468201068344985 IN ()) AS TEXT) WHERE (t1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((- (rt0.c0))))=(((((vt1.c1))<=((rt0.c1)))))) RIGHT OUTER JOIN vt0 ON (((vt0.c1 IN (t1.c0, vt0.c1)))>=(x'25e6')) INNER JOIN t1 ON CAST((0.8468201068344985 IN ()) AS TEXT));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt0.c2)))OR(CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c1 WHEN '~^XD' THEN rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt0.c2)))OR(CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c1 WHEN '~^XD' THEN rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt0.c2)))OR(CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c1 WHEN '~^XD' THEN rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt0.c2)))OR(CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c1 WHEN '~^XD' THEN rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (((((~ (rt0.c2)))OR(CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c1 WHEN '~^XD' THEN rt0.c0 END)))OR(rt0.c2 COLLATE RTRIM)) WHERE (rt0.c0);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((vt1.c1)>>(t1.c1 COLLATE BINARY))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)>>(t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY NULL DESC);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((vt1.c1)>>(t1.c1 COLLATE BINARY))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)>>(t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY NULL DESC);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((vt1.c1)>>(t1.c1 COLLATE BINARY))) ORDER BY NULL DESC;
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY CAST(vt1.c1 AS REAL) DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS REAL) DESC, x'' DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY CAST(vt1.c1 AS REAL) DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS REAL) DESC, x'' DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0 IN ())) IS TRUE)) ORDER BY CAST(vt1.c1 AS REAL) DESC, x'' DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (-1.200905993E9);
SELECT SUM(count) FROM (SELECT ((-1.200905993E9) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (-1.200905993E9);
SELECT SUM(count) FROM (SELECT ((-1.200905993E9) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (-1.200905993E9);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM) ORDER BY (((NOT (rt0.c2)))==(vt0.c1 COLLATE NOCASE))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))LIKE(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((NOT (rt0.c2)))=(vt0.c1 COLLATE NOCASE))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))LIKE(NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM) ORDER BY (((NOT (rt0.c2)))==(vt0.c1 COLLATE NOCASE))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))LIKE(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((NOT (rt0.c2)))=(vt0.c1 COLLATE NOCASE))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))LIKE(NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM) ORDER BY (((NOT (rt0.c2)))==(vt0.c1 COLLATE NOCASE))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))LIKE(NULL))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((0.9302276268986205 IN ((rt0.c0 IN ()), ((vt0.c0) NOT NULL)))) ORDER BY CAST(rt0.c2 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.9302276268986205 IN ((rt0.c0 IN ()), ((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c2 AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((0.9302276268986205 IN ((rt0.c0 IN ()), ((vt0.c0) NOT NULL)))) ORDER BY CAST(rt0.c2 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.9302276268986205 IN ((rt0.c0 IN ()), ((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c2 AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((0.9302276268986205 IN ((rt0.c0 IN ()), ((vt0.c0) NOT NULL)))) ORDER BY CAST(rt0.c2 AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((NULL)IS NOT(((vt1.c1) NOT NULL)))) ORDER BY ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST, ((CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 END) NOT NULL), (- ((- (rt0.c2))))  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST, ((CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 END) NOT NULL), (- ((- (rt0.c2))))  NULLS LAST, rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((NULL)IS NOT(((vt1.c1) NOT NULL)))) ORDER BY ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST, ((CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 END) NOT NULL), (- ((- (rt0.c2))))  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST, ((CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 END) NOT NULL), (- ((- (rt0.c2))))  NULLS LAST, rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((NULL)IS NOT(((vt1.c1) NOT NULL)))) ORDER BY ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS LAST, ((CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 END) NOT NULL), (- ((- (rt0.c2))))  NULLS LAST, rt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, t1 WHERE ((~ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT COUNT(*) FROM vt1, rt0, t1 WHERE ((~ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, t1);
SELECT COUNT(*) FROM vt1, rt0, t1 WHERE ((~ (rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((t1.c2)AND(vt1.c0)))AND(rt0.c0)))AND(vt0.c1)))AND(NULL)) THEN CAST(x'' AS REAL) END WHERE (((UNLIKELY(t1.c0))IS NOT(((((rt0.c0)OR(t1.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(t1.c0))IS NOT(((((rt0.c0)OR(t1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((t1.c2)AND(vt1.c0)))AND(rt0.c0)))AND(vt0.c1)))AND(NULL)) THEN CAST(x'' AS REAL) END);
SELECT ALL COUNT(*) FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((t1.c2)AND(vt1.c0)))AND(rt0.c0)))AND(vt0.c1)))AND(NULL)) THEN CAST(x'' AS REAL) END WHERE (((UNLIKELY(t1.c0))IS NOT(((((rt0.c0)OR(t1.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(t1.c0))IS NOT(((((rt0.c0)OR(t1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((t1.c2)AND(vt1.c0)))AND(rt0.c0)))AND(vt0.c1)))AND(NULL)) THEN CAST(x'' AS REAL) END);
SELECT ALL COUNT(*) FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((((((t1.c2)AND(vt1.c0)))AND(rt0.c0)))AND(vt0.c1)))AND(NULL)) THEN CAST(x'' AS REAL) END WHERE (((UNLIKELY(t1.c0))IS NOT(((((rt0.c0)OR(t1.c0)))OR(vt0.c1)))));
SELECT * FROM vt0 WHERE ('c%');
SELECT SUM(count) FROM (SELECT ALL (('c%') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('c%');
SELECT SUM(count) FROM (SELECT ALL (('c%') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('c%');
SELECT ALL * FROM t1, vt1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c1)))>(NULLIF(rt0.c1, vt0.c0))) LEFT OUTER JOIN vt0 ON t1.c2 WHERE (CAST(t1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS INTEGER)) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c1)))>(NULLIF(rt0.c1, vt0.c0))) LEFT OUTER JOIN vt0 ON t1.c2);
SELECT ALL * FROM t1, vt1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c1)))>(NULLIF(rt0.c1, vt0.c0))) LEFT OUTER JOIN vt0 ON t1.c2 WHERE (CAST(t1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS INTEGER)) IS TRUE)  as count FROM t1, vt1 LEFT OUTER JOIN rt0 ON (((NOT (rt0.c1)))>(NULLIF(rt0.c1, vt0.c0))) LEFT OUTER JOIN vt0 ON t1.c2);
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (((((((t1.c2)OR(rt0.c2)))OR(t1.c1)))&(CASE WHEN rt0.c0 THEN NULL ELSE vt1.c1 END))) ORDER BY (((+ (t1.c0))) ISNULL) ASC  NULLS LAST, ((vt1.c1) BETWEEN (t1.c0) AND (rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)OR(rt0.c2)))OR(t1.c1)))&(CASE WHEN rt0.c0 THEN NULL ELSE vt1.c1 END))) IS TRUE)  as count FROM t1, vt1, vt0, rt0 ORDER BY (((+ (t1.c0))) ISNULL) ASC  NULLS LAST, ((vt1.c1) BETWEEN (t1.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (((((((t1.c2)OR(rt0.c2)))OR(t1.c1)))&(CASE WHEN rt0.c0 THEN NULL ELSE vt1.c1 END))) ORDER BY (((+ (t1.c0))) ISNULL) ASC  NULLS LAST, ((vt1.c1) BETWEEN (t1.c0) AND (rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c2)OR(rt0.c2)))OR(t1.c1)))&(CASE WHEN rt0.c0 THEN NULL ELSE vt1.c1 END))) IS TRUE)  as count FROM t1, vt1, vt0, rt0 ORDER BY (((+ (t1.c0))) ISNULL) ASC  NULLS LAST, ((vt1.c1) BETWEEN (t1.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1, vt1, vt0, rt0 WHERE (((((((t1.c2)OR(rt0.c2)))OR(t1.c1)))&(CASE WHEN rt0.c0 THEN NULL ELSE vt1.c1 END))) ORDER BY (((+ (t1.c0))) ISNULL) ASC  NULLS LAST, ((vt1.c1) BETWEEN (t1.c0) AND (rt0.c0)) COLLATE RTRIM;
SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) IN (NULL)));
SELECT COUNT(*) FROM vt0, t1, vt1, rt0 WHERE (((((((((((0Xffffffffcf600dda)>>(rt0.c2)))OR(((rt0.c2)GLOB(vt1.c0)))))AND(NULL)))OR(rt0.c2)))AND(LENGTH(rt0.c0)))) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0Xffffffffcf600dda)>>(rt0.c2)))OR(((rt0.c2)GLOB(vt1.c0)))))AND(NULL)))OR(rt0.c2)))AND(LENGTH(rt0.c0)))) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 END) NOT NULL));
SELECT COUNT(*) FROM vt0, t1, vt1, rt0 WHERE (((((((((((0Xffffffffcf600dda)>>(rt0.c2)))OR(((rt0.c2)GLOB(vt1.c0)))))AND(NULL)))OR(rt0.c2)))AND(LENGTH(rt0.c0)))) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0Xffffffffcf600dda)>>(rt0.c2)))OR(((rt0.c2)GLOB(vt1.c0)))))AND(NULL)))OR(rt0.c2)))AND(LENGTH(rt0.c0)))) IS TRUE)  as count FROM vt0, t1, vt1, rt0 ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 END) NOT NULL));
SELECT COUNT(*) FROM vt0, t1, vt1, rt0 WHERE (((((((((((0Xffffffffcf600dda)>>(rt0.c2)))OR(((rt0.c2)GLOB(vt1.c0)))))AND(NULL)))OR(rt0.c2)))AND(LENGTH(rt0.c0)))) ORDER BY ((CASE rt0.c2  WHEN vt1.c0 THEN vt0.c1 END) NOT NULL);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END) ORDER BY (CAST(NULL AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(NULL AS BLOB) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END) ORDER BY (CAST(NULL AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(NULL AS BLOB) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) END) ORDER BY (CAST(NULL AS BLOB) IN ())  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((((((((rt0.c2)OR(t1.c1)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(t1.c1)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((((((rt0.c2)OR(t1.c1)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(t1.c1)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((((((rt0.c2)OR(t1.c1)))AND(t1.c0)))OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, t1 WHERE ((((((t1.c2))<=(('H'))))|(x'')));
SELECT SUM(count) FROM (SELECT (((((((t1.c2))<=(('H'))))|(x''))) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE ((((((t1.c2))<=(('H'))))|(x'')));
SELECT SUM(count) FROM (SELECT (((((((t1.c2))<=(('H'))))|(x''))) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE ((((((t1.c2))<=(('H'))))|(x'')));
SELECT COUNT(*) FROM vt1, vt0 WHERE ('-1289244097');
SELECT SUM(count) FROM (SELECT ALL (('-1289244097') IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('-1289244097');
SELECT SUM(count) FROM (SELECT ALL (('-1289244097') IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('-1289244097');
SELECT * FROM t1, vt0 WHERE ((vt0.c1 IN ('o-TL!?[g'))) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (vt0.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ('o-TL!?[g'))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (vt0.c1))) NOT NULL) DESC);
SELECT * FROM t1, vt0 WHERE ((vt0.c1 IN ('o-TL!?[g'))) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (vt0.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ('o-TL!?[g'))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (vt0.c1))) NOT NULL) DESC);
SELECT * FROM t1, vt0 WHERE ((vt0.c1 IN ('o-TL!?[g'))) ORDER BY ((((t1.c2) BETWEEN (t1.c0) AND (vt0.c1))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (HEX(rt0.c1)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (HEX(rt0.c1)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (HEX(rt0.c1)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (HEX(rt0.c1)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (HEX(rt0.c1)) AND (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)IS NOT(vt1.c1))) NOTNULL)) ORDER BY '-986907009' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)IS NOT(vt1.c1))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY '-986907009' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)IS NOT(vt1.c1))) NOTNULL)) ORDER BY '-986907009' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)IS NOT(vt1.c1))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY '-986907009' COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)IS NOT(vt1.c1))) NOTNULL)) ORDER BY '-986907009' COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) ORDER BY ((((((((((((((t1.c2)AND(t1.c0)))AND(NULL)))AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))||(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((((((((((((t1.c2)AND(t1.c0)))AND(NULL)))AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))||(rt0.c1)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) ORDER BY ((((((((((((((t1.c2)AND(t1.c0)))AND(NULL)))AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))||(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((((((((((((((t1.c2)AND(t1.c0)))AND(NULL)))AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))||(rt0.c1)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) ORDER BY ((((((((((((((t1.c2)AND(t1.c0)))AND(NULL)))AND(rt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(t1.c0)))||(rt0.c1)) ASC;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (t1.c2 IN ()) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c1 THEN t1.c1 ELSE rt0.c2 END)|((~ (vt1.c1)))) FULL OUTER JOIN rt0 ON (~ (CAST(t1.c0 AS TEXT))) WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (t1.c2 IN ()) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c1 THEN t1.c1 ELSE rt0.c2 END)|((~ (vt1.c1)))) FULL OUTER JOIN rt0 ON (~ (CAST(t1.c0 AS TEXT))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (t1.c2 IN ()) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c1 THEN t1.c1 ELSE rt0.c2 END)|((~ (vt1.c1)))) FULL OUTER JOIN rt0 ON (~ (CAST(t1.c0 AS TEXT))) WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (t1.c2 IN ()) COLLATE NOCASE LEFT OUTER JOIN t1 ON ((CASE rt0.c0  WHEN rt0.c1 THEN t1.c1 ELSE rt0.c2 END)|((~ (vt1.c1)))) FULL OUTER JOIN rt0 ON (~ (CAST(t1.c0 AS TEXT))));
SELECT COUNT(*) FROM t1 NOT INDEXED, vt1 WHERE (CAST(t1.c2 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c2 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1 NOT INDEXED, vt1 WHERE (CAST(t1.c2 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c2 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1 NOT INDEXED, vt1 WHERE (CAST(t1.c2 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t1 ON ((((CASE WHEN x'' THEN t1.c2 ELSE t1.c0 END)AND(CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE (TRIM(CASE WHEN vt1.c0 THEN t1.c1 WHEN vt1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, ((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN vt1.c0 THEN t1.c1 WHEN vt1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, ((t1.c0) NOTNULL))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t1 ON ((((CASE WHEN x'' THEN t1.c2 ELSE t1.c0 END)AND(CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t1 ON ((((CASE WHEN x'' THEN t1.c2 ELSE t1.c0 END)AND(CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE (TRIM(CASE WHEN vt1.c0 THEN t1.c1 WHEN vt1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, ((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN vt1.c0 THEN t1.c1 WHEN vt1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, ((t1.c0) NOTNULL))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN t1 ON ((((CASE WHEN x'' THEN t1.c2 ELSE t1.c0 END)AND(CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN t1 ON ((((CASE WHEN x'' THEN t1.c2 ELSE t1.c0 END)AND(CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN NULL WHEN t1.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE (TRIM(CASE WHEN vt1.c0 THEN t1.c1 WHEN vt1.c0 THEN 0.02624218026851055 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, ((t1.c0) NOTNULL)));
SELECT * FROM t1 CROSS JOIN vt0 ON (((NOT (t1.c1)))>=(((((vt0.c1)AND(t1.c2)))AND(t1.c2)))) WHERE ('&mr\nu') ORDER BY (((NOT (vt0.c1))) BETWEEN (CASE t1.c2  WHEN 1044073362 THEN t1.c1 END) AND (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('&mr\nu') IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((NOT (t1.c1)))>=(((((vt0.c1)AND(t1.c2)))AND(t1.c2)))) ORDER BY (((NOT (vt0.c1))) BETWEEN (CASE t1.c2  WHEN 1044073362 THEN t1.c1 END) AND (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c2)))) DESC  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN vt0 ON (((NOT (t1.c1)))>=(((((vt0.c1)AND(t1.c2)))AND(t1.c2)))) WHERE ('&mr\nu') ORDER BY (((NOT (vt0.c1))) BETWEEN (CASE t1.c2  WHEN 1044073362 THEN t1.c1 END) AND (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('&mr\nu') IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((NOT (t1.c1)))>=(((((vt0.c1)AND(t1.c2)))AND(t1.c2)))) ORDER BY (((NOT (vt0.c1))) BETWEEN (CASE t1.c2  WHEN 1044073362 THEN t1.c1 END) AND (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c2)))) DESC  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN vt0 ON (((NOT (t1.c1)))>=(((((vt0.c1)AND(t1.c2)))AND(t1.c2)))) WHERE ('&mr\nu') ORDER BY (((NOT (vt0.c1))) BETWEEN (CASE t1.c2  WHEN 1044073362 THEN t1.c1 END) AND (((((((((t1.c1)OR(t1.c1)))OR(t1.c0)))AND(t1.c1)))AND(t1.c2)))) DESC  NULLS FIRST;
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON (((t1.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (-1.529603424E9)))) AND ((load_extension(t1.c1)))) WHERE (t1.c1) ORDER BY (~ (0.6365322759743023))  NULLS FIRST, LIKELIHOOD(CASE vt1.c1  WHEN NULL THEN vt1.c1 END, 0.27492775739042685) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (((t1.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (-1.529603424E9)))) AND ((load_extension(t1.c1)))) ORDER BY (~ (0.6365322759743023))  NULLS FIRST, LIKELIHOOD(CASE vt1.c1  WHEN NULL THEN vt1.c1 END, 0.27492775739042685) DESC);
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON (((t1.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (-1.529603424E9)))) AND ((load_extension(t1.c1)))) WHERE (t1.c1) ORDER BY (~ (0.6365322759743023))  NULLS FIRST, LIKELIHOOD(CASE vt1.c1  WHEN NULL THEN vt1.c1 END, 0.27492775739042685) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (((t1.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (-1.529603424E9)))) AND ((load_extension(t1.c1)))) ORDER BY (~ (0.6365322759743023))  NULLS FIRST, LIKELIHOOD(CASE vt1.c1  WHEN NULL THEN vt1.c1 END, 0.27492775739042685) DESC);
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON (((t1.c1)) BETWEEN ((((t1.c1) BETWEEN (t1.c0) AND (-1.529603424E9)))) AND ((load_extension(t1.c1)))) WHERE (t1.c1) ORDER BY (~ (0.6365322759743023))  NULLS FIRST, LIKELIHOOD(CASE vt1.c1  WHEN NULL THEN vt1.c1 END, 0.27492775739042685) DESC;
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST(((t1.c1)%(0.8984030057548579)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1)%(0.8984030057548579)) AS BLOB)) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST(((t1.c1)%(0.8984030057548579)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1)%(0.8984030057548579)) AS BLOB)) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (CAST(((t1.c1)%(0.8984030057548579)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c1) ORDER BY (- (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c1) ORDER BY (- (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c1) ORDER BY (- (NULL))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT));
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((t1.c1) IS FALSE) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1) IS FALSE) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((t1.c1) IS FALSE) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1) IS FALSE) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (t1.c2) ORDER BY ((t1.c1) IS FALSE) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((x'') NOT NULL)) ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((x'') NOT NULL)) ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((x'') NOT NULL)) ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) FULL OUTER JOIN rt0 ON CAST(((vt0.c1)>(t1.c2)) AS NUMERIC) WHERE (((TYPEOF(DISTINCT -1.200905993E9))>>('F4!I' COLLATE BINARY))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT -1.200905993E9))>>('F4!I' COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) FULL OUTER JOIN rt0 ON CAST(((vt0.c1)>(t1.c2)) AS NUMERIC) ORDER BY NULL DESC);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) FULL OUTER JOIN rt0 ON CAST(((vt0.c1)>(t1.c2)) AS NUMERIC) WHERE (((TYPEOF(DISTINCT -1.200905993E9))>>('F4!I' COLLATE BINARY))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT -1.200905993E9))>>('F4!I' COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) FULL OUTER JOIN rt0 ON CAST(((vt0.c1)>(t1.c2)) AS NUMERIC) ORDER BY NULL DESC);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CAST(vt0.c0 AS TEXT)) ISNULL) FULL OUTER JOIN rt0 ON CAST(((vt0.c1)>(t1.c2)) AS NUMERIC) WHERE (((TYPEOF(DISTINCT -1.200905993E9))>>('F4!I' COLLATE BINARY))) ORDER BY NULL DESC;
SELECT COUNT(*) FROM t1 WHERE (('-2016026105' IN ()));
SELECT SUM(count) FROM (SELECT ((('-2016026105' IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (('-2016026105' IN ()));
SELECT SUM(count) FROM (SELECT ((('-2016026105' IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (('-2016026105' IN ()));
SELECT COUNT(*) FROM rt0, vt1, vt0, t1 WHERE (LENGTH(rt0.c2 COLLATE NOCASE)) ORDER BY ((((((vt1.c0, rt0.c0, NULL)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1)) AND ((-1956678157, vt0.c0, t1.c1))), ((vt0.c1) IS FALSE), ((vt1.c0) IS TRUE)))<(('108791939', ((vt1.c0)<>(rt0.c1)), (('614984545') IS FALSE))))  NULLS FIRST, ((((t1.c0)AND(((vt0.c0)%(rt0.c0)))))AND(UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS LAST, ((TRIM(vt1.c0)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY ((((((vt1.c0, rt0.c0, NULL)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1)) AND ((-1956678157, vt0.c0, t1.c1))), ((vt0.c1) IS FALSE), ((vt1.c0) IS TRUE)))<(('108791939', ((vt1.c0)<>(rt0.c1)), (('614984545') IS FALSE))))  NULLS FIRST, ((((t1.c0)AND(((vt0.c0)%(rt0.c0)))))AND(UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS LAST, ((TRIM(vt1.c0)) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0, t1 WHERE (LENGTH(rt0.c2 COLLATE NOCASE)) ORDER BY ((((((vt1.c0, rt0.c0, NULL)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1)) AND ((-1956678157, vt0.c0, t1.c1))), ((vt0.c1) IS FALSE), ((vt1.c0) IS TRUE)))<(('108791939', ((vt1.c0)<>(rt0.c1)), (('614984545') IS FALSE))))  NULLS FIRST, ((((t1.c0)AND(((vt0.c0)%(rt0.c0)))))AND(UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS LAST, ((TRIM(vt1.c0)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt1, vt0, t1 ORDER BY ((((((vt1.c0, rt0.c0, NULL)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1)) AND ((-1956678157, vt0.c0, t1.c1))), ((vt0.c1) IS FALSE), ((vt1.c0) IS TRUE)))<(('108791939', ((vt1.c0)<>(rt0.c1)), (('614984545') IS FALSE))))  NULLS FIRST, ((((t1.c0)AND(((vt0.c0)%(rt0.c0)))))AND(UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS LAST, ((TRIM(vt1.c0)) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, vt0, t1 WHERE (LENGTH(rt0.c2 COLLATE NOCASE)) ORDER BY ((((((vt1.c0, rt0.c0, NULL)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1)) AND ((-1956678157, vt0.c0, t1.c1))), ((vt0.c1) IS FALSE), ((vt1.c0) IS TRUE)))<(('108791939', ((vt1.c0)<>(rt0.c1)), (('614984545') IS FALSE))))  NULLS FIRST, ((((t1.c0)AND(((vt0.c0)%(rt0.c0)))))AND(UNLIKELY(DISTINCT rt0.c0))) ASC  NULLS LAST, ((TRIM(vt1.c0)) NOTNULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY (+ (((vt0.c0)LIKE(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)LIKE(vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY (+ (((vt0.c0)LIKE(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)LIKE(vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY (+ (((vt0.c0)LIKE(vt0.c1)))) DESC;
SELECT * FROM rt0, t1 WHERE (((((t1.c2) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((t1.c2) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((t1.c2) IS FALSE)) NOTNULL));
SELECT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c1))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c1))=((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c1))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c1))=((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((NOT ((((rt0.c1))==((rt0.c0))))));
SELECT COUNT(*) FROM t1, vt0, rt0, vt1 WHERE (CAST(LIKELY(vt0.c1) AS INTEGER)) ORDER BY ((((vt0.c1) NOTNULL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM t1, vt0, rt0, vt1 ORDER BY ((((vt0.c1) NOTNULL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c1) ISNULL))) DESC);
SELECT COUNT(*) FROM t1, vt0, rt0, vt1 WHERE (CAST(LIKELY(vt0.c1) AS INTEGER)) ORDER BY ((((vt0.c1) NOTNULL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM t1, vt0, rt0, vt1 ORDER BY ((((vt0.c1) NOTNULL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c1) ISNULL))) DESC);
SELECT COUNT(*) FROM t1, vt0, rt0, vt1 WHERE (CAST(LIKELY(vt0.c1) AS INTEGER)) ORDER BY ((((vt0.c1) NOTNULL)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c1) ISNULL))) DESC;
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN vt1 ON LIKE(TYPEOF(vt1.c0), ((vt0.c1)GLOB(vt0.c0)), '.') WHERE ((((('ge<d狢')<<(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('ge<d狢')<<(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 NOT INDEXED, t1 RIGHT OUTER JOIN vt1 ON LIKE(TYPEOF(vt1.c0), ((vt0.c1)GLOB(vt0.c0)), '.'));
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN vt1 ON LIKE(TYPEOF(vt1.c0), ((vt0.c1)GLOB(vt0.c0)), '.') WHERE ((((('ge<d狢')<<(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('ge<d狢')<<(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 NOT INDEXED, t1 RIGHT OUTER JOIN vt1 ON LIKE(TYPEOF(vt1.c0), ((vt0.c1)GLOB(vt0.c0)), '.'));
SELECT COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN vt1 ON LIKE(TYPEOF(vt1.c0), ((vt0.c1)GLOB(vt0.c0)), '.') WHERE ((((('ge<d狢')<<(vt0.c1))) IS FALSE));
SELECT COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (((~ (0.5765298099807651)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (0.5765298099807651)) IN ())) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (((~ (0.5765298099807651)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (0.5765298099807651)) IN ())) IS TRUE)  as count FROM rt0, vt0, t1, vt1);
SELECT COUNT(*) FROM rt0, vt0, t1, vt1 WHERE (((~ (0.5765298099807651)) IN ()));
SELECT ALL COUNT(*) FROM t1, rt0, vt1, vt0 WHERE (COALESCE(DISTINCT rt0.c2, ((rt0.c1)<>(t1.c0)))) ORDER BY (((+ (rt0.c1)))>(t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT rt0.c2, ((rt0.c1)!=(t1.c0)))) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (((+ (rt0.c1)))>(t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt1, vt0 WHERE (COALESCE(DISTINCT rt0.c2, ((rt0.c1)<>(t1.c0)))) ORDER BY (((+ (rt0.c1)))>(t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT rt0.c2, ((rt0.c1)!=(t1.c0)))) IS TRUE)  as count FROM t1, rt0, vt1, vt0 ORDER BY (((+ (rt0.c1)))>(t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt1, vt0 WHERE (COALESCE(DISTINCT rt0.c2, ((rt0.c1)<>(t1.c0)))) ORDER BY (((+ (rt0.c1)))>(t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN rt0 ON (((~ (vt1.c1)))=((((vt1.c0, vt1.c1, vt0.c0, rt0.c0, 1415582399))>((vt1.c0, vt1.c0, rt0.c1, vt1.c0, vt0.c0))))) CROSS JOIN vt0 ON CASE ((vt0.c0) NOT NULL)  WHEN json_valid(vt0.c1) THEN (((vt1.c1, rt0.c1, rt0.c0))<=((vt1.c1, vt0.c1, vt1.c1))) END WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((~ (vt1.c1)))=((((vt1.c0, vt1.c1, vt0.c0, rt0.c0, 1415582399))>((vt1.c0, vt1.c0, rt0.c1, vt1.c0, vt0.c0))))) CROSS JOIN vt0 ON CASE ((vt0.c0) NOT NULL)  WHEN json_valid(vt0.c1) THEN (((vt1.c1, rt0.c1, rt0.c0))<=((vt1.c1, vt0.c1, vt1.c1))) END);
SELECT * FROM vt1 CROSS JOIN rt0 ON (((~ (vt1.c1)))=((((vt1.c0, vt1.c1, vt0.c0, rt0.c0, 1415582399))>((vt1.c0, vt1.c0, rt0.c1, vt1.c0, vt0.c0))))) CROSS JOIN vt0 ON CASE ((vt0.c0) NOT NULL)  WHEN json_valid(vt0.c1) THEN (((vt1.c1, rt0.c1, rt0.c0))<=((vt1.c1, vt0.c1, vt1.c1))) END WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((~ (vt1.c1)))=((((vt1.c0, vt1.c1, vt0.c0, rt0.c0, 1415582399))>((vt1.c0, vt1.c0, rt0.c1, vt1.c0, vt0.c0))))) CROSS JOIN vt0 ON CASE ((vt0.c0) NOT NULL)  WHEN json_valid(vt0.c1) THEN (((vt1.c1, rt0.c1, rt0.c0))<=((vt1.c1, vt0.c1, vt1.c1))) END);
SELECT * FROM vt1 CROSS JOIN rt0 ON (((~ (vt1.c1)))=((((vt1.c0, vt1.c1, vt0.c0, rt0.c0, 1415582399))>((vt1.c0, vt1.c0, rt0.c1, vt1.c0, vt0.c0))))) CROSS JOIN vt0 ON CASE ((vt0.c0) NOT NULL)  WHEN json_valid(vt0.c1) THEN (((vt1.c1, rt0.c1, rt0.c0))<=((vt1.c1, vt0.c1, vt1.c1))) END WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT * FROM vt1, vt0, t1 WHERE ((((t1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c1 END)) AND (((~ (t1.c2)))))) ORDER BY CASE WHEN 0.9469456737526021 THEN x'' WHEN ((t1.c1)>(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN ((vt0.c0)>=(t1.c0)) THEN ((t1.c1) BETWEEN (0.819170604121288) AND (t1.c1)) ELSE t1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c1, vt0.c1, vt1.c0))<>((vt1.c0, vt0.c1, vt0.c0))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c1 END)) AND (((~ (t1.c2)))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CASE WHEN 0.9469456737526021 THEN x'' WHEN ((t1.c1)>(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN ((vt0.c0)>=(t1.c0)) THEN ((t1.c1) BETWEEN (0.819170604121288) AND (t1.c1)) ELSE t1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c1, vt0.c1, vt1.c0))!=((vt1.c0, vt0.c1, vt0.c0))) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE ((((t1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c1 END)) AND (((~ (t1.c2)))))) ORDER BY CASE WHEN 0.9469456737526021 THEN x'' WHEN ((t1.c1)>(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN ((vt0.c0)>=(t1.c0)) THEN ((t1.c1) BETWEEN (0.819170604121288) AND (t1.c1)) ELSE t1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c1, vt0.c1, vt1.c0))<>((vt1.c0, vt0.c1, vt0.c0))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c1 END)) AND (((~ (t1.c2)))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CASE WHEN 0.9469456737526021 THEN x'' WHEN ((t1.c1)>(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN ((vt0.c0)>=(t1.c0)) THEN ((t1.c1) BETWEEN (0.819170604121288) AND (t1.c1)) ELSE t1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c1, vt0.c1, vt1.c0))!=((vt1.c0, vt0.c1, vt0.c0))) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE ((((t1.c1)) BETWEEN ((CASE WHEN vt1.c1 THEN vt0.c1 END)) AND (((~ (t1.c2)))))) ORDER BY CASE WHEN 0.9469456737526021 THEN x'' WHEN ((t1.c1)>(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN ((vt0.c0)>=(t1.c0)) THEN ((t1.c1) BETWEEN (0.819170604121288) AND (t1.c1)) ELSE t1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c1, vt0.c1, vt1.c0))<>((vt1.c0, vt0.c1, vt0.c0))) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((t1.c0 COLLATE BINARY)) AND (('' COLLATE NOCASE))) FULL OUTER JOIN t1 ON ((CAST(NULL AS REAL))>=(x'')) WHERE (0X776ebe66 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0x776ebe66 COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((t1.c0 COLLATE BINARY)) AND (('' COLLATE NOCASE))) FULL OUTER JOIN t1 ON ((CAST(NULL AS REAL))>=(x'')));
SELECT * FROM rt0 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((t1.c0 COLLATE BINARY)) AND (('' COLLATE NOCASE))) FULL OUTER JOIN t1 ON ((CAST(NULL AS REAL))>=(x'')) WHERE (0X776ebe66 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0x776ebe66 COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((vt0.c0)) BETWEEN ((t1.c0 COLLATE BINARY)) AND (('' COLLATE NOCASE))) FULL OUTER JOIN t1 ON ((CAST(NULL AS REAL))>=(x'')));
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((0.6200794818559288)|(rt0.c2))) NOT BETWEEN (json_remove(vt1.c0, vt0.c1)) AND ((- (vt0.c1))))) ORDER BY CAST(LOWER(vt1.c0) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6200794818559288)|(rt0.c2))) NOT BETWEEN (json_remove(vt1.c0, vt0.c1)) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(LOWER(vt1.c0) AS NUMERIC) ASC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((0.6200794818559288)|(rt0.c2))) NOT BETWEEN (json_remove(vt1.c0, vt0.c1)) AND ((- (vt0.c1))))) ORDER BY CAST(LOWER(vt1.c0) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6200794818559288)|(rt0.c2))) NOT BETWEEN (json_remove(vt1.c0, vt0.c1)) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(LOWER(vt1.c0) AS NUMERIC) ASC);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c1)IS NOT(t1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1)IS NOT(t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c1)IS NOT(t1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1)IS NOT(t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((t1.c1)IS NOT(t1.c0)) AS NUMERIC));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((CASE WHEN '34579472' THEN t1.c0 ELSE rt0.c1 END))>((((rt0.c1) BETWEEN (t1.c2) AND (t1.c0)))))) ORDER BY (TRIM(t1.c0) IN ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((0.14474890473116975, t1.c0, rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN '34579472' THEN t1.c0 ELSE rt0.c1 END))>((((rt0.c1) BETWEEN (t1.c2) AND (t1.c0)))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (TRIM(t1.c0) IN ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((0.14474890473116975, t1.c0, rt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((CASE WHEN '34579472' THEN t1.c0 ELSE rt0.c1 END))>((((rt0.c1) BETWEEN (t1.c2) AND (t1.c0)))))) ORDER BY (TRIM(t1.c0) IN ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((0.14474890473116975, t1.c0, rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN '34579472' THEN t1.c0 ELSE rt0.c1 END))>((((rt0.c1) BETWEEN (t1.c2) AND (t1.c0)))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (TRIM(t1.c0) IN ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((0.14474890473116975, t1.c0, rt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE ((((CASE WHEN '34579472' THEN t1.c0 ELSE rt0.c1 END))>((((rt0.c1) BETWEEN (t1.c2) AND (t1.c0)))))) ORDER BY (TRIM(t1.c0) IN ((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c1)) AND ((0.14474890473116975, t1.c0, rt0.c0))))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (PRINTF((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) ORDER BY (CASE WHEN x'8ab6' THEN vt0.c1 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE WHEN x'8ab6' THEN vt0.c1 ELSE vt0.c0 END IN ()));
SELECT * FROM vt0, vt1 WHERE (PRINTF((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) ORDER BY (CASE WHEN x'8ab6' THEN vt0.c1 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE WHEN x'8ab6' THEN vt0.c1 ELSE vt0.c0 END IN ()));
SELECT * FROM vt0, vt1 WHERE (PRINTF((((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) ORDER BY (CASE WHEN x'8ab6' THEN vt0.c1 ELSE vt0.c0 END IN ());
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB((~ (vt0.c1))))) ORDER BY ((((vt0.c1)<>(vt0.c1)))%(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)GLOB((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<>(vt0.c1)))%(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB((~ (vt0.c1))))) ORDER BY ((((vt0.c1)<>(vt0.c1)))%(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)GLOB((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<>(vt0.c1)))%(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB((~ (vt0.c1))))) ORDER BY ((((vt0.c1)<>(vt0.c1)))%(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN (((t1.c2))<>((t1.c0))) THEN ((t1.c2)%(t1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_SOURCE_ID()  WHEN (((t1.c2))!=((t1.c0))) THEN ((t1.c2)%(t1.c1)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN (((t1.c2))<>((t1.c0))) THEN ((t1.c2)%(t1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_SOURCE_ID()  WHEN (((t1.c2))!=((t1.c0))) THEN ((t1.c2)%(t1.c1)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE SQLITE_SOURCE_ID()  WHEN (((t1.c2))<>((t1.c0))) THEN ((t1.c2)%(t1.c1)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (vt0.c1) AND (0.8174149252303535)))==((NOT (rt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c1) AND (0.8174149252303535)))=((NOT (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (vt0.c1) AND (0.8174149252303535)))==((NOT (rt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c1) AND (0.8174149252303535)))=((NOT (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (vt0.c1) AND (0.8174149252303535)))==((NOT (rt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (0x12d34212))) ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (0X12d34212))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (0x12d34212))) ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (0X12d34212))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (0x12d34212))) ORDER BY CAST(rt0.c2 AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((('l\nj]IP')!=(t1.c1))) BETWEEN (t1.c2) AND (NULL))) ORDER BY ((((t1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))+(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('l\nj]IP')<>(t1.c1))) BETWEEN (t1.c2) AND (NULL))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((t1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))+(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((('l\nj]IP')!=(t1.c1))) BETWEEN (t1.c2) AND (NULL))) ORDER BY ((((t1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))+(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('l\nj]IP')<>(t1.c1))) BETWEEN (t1.c2) AND (NULL))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((t1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))+(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE ((((('l\nj]IP')!=(t1.c1))) BETWEEN (t1.c2) AND (NULL))) ORDER BY ((((t1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))+(t1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)AND(((x'') ISNULL))))OR(CASE WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND ('599079501'))  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))>=(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)AND(((x'') ISNULL))))OR(CASE WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND ('599079501'))  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))>=(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)AND(((x'') ISNULL))))OR(CASE WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND ('599079501'))  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))>=(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)AND(((x'') ISNULL))))OR(CASE WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND ('599079501'))  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))>=(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)AND(((x'') ISNULL))))OR(CASE WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY (((~ (vt1.c0))) BETWEEN (((vt1.c1) IS TRUE)) AND ('599079501'))  NULLS LAST, ((CAST(vt1.c0 AS NUMERIC))>=(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))) DESC;
SELECT * FROM t1 WHERE ((CAST(0.694467757389711 AS NUMERIC) IN (((t1.c1) IS TRUE), ((t1.c1)>>(t1.c2))))) ORDER BY (((t1.c2)LIKE(t1.c0)) IN (t1.c1, ((t1.c1)OR(-1217678714))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.694467757389711 AS NUMERIC) IN (((t1.c1) IS TRUE), ((t1.c1)>>(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2)LIKE(t1.c0)) IN (t1.c1, ((t1.c1)OR(-1217678714)))));
SELECT * FROM t1 WHERE ((CAST(0.694467757389711 AS NUMERIC) IN (((t1.c1) IS TRUE), ((t1.c1)>>(t1.c2))))) ORDER BY (((t1.c2)LIKE(t1.c0)) IN (t1.c1, ((t1.c1)OR(-1217678714))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.694467757389711 AS NUMERIC) IN (((t1.c1) IS TRUE), ((t1.c1)>>(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c2)LIKE(t1.c0)) IN (t1.c1, ((t1.c1)OR(-1217678714)))));
SELECT * FROM t1 WHERE ((CAST(0.694467757389711 AS NUMERIC) IN (((t1.c1) IS TRUE), ((t1.c1)>>(t1.c2))))) ORDER BY (((t1.c2)LIKE(t1.c0)) IN (t1.c1, ((t1.c1)OR(-1217678714))));
SELECT * FROM vt0 WHERE ((+ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ ((+ (vt0.c0)))));
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0)))<<(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))<<(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0)))<<(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))<<(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((+ (vt1.c0)))<<(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c0, 0Xa900b9c)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), ((vt0.c1)|(1.805959364E9)), LOWER(DISTINCT vt0.c1))) AND ((vt0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL), '-294315958' COLLATE RTRIM)))) ORDER BY ((rt0.c0 IN ()) IN ()) ASC, UNLIKELY(LIKELY(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, 0Xa900b9c)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), ((vt0.c1)|(1.805959364E9)), LOWER(DISTINCT vt0.c1))) AND ((vt0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL), '-294315958' COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 IN ()) IN ()) ASC, UNLIKELY(LIKELY(rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c0, 0Xa900b9c)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), ((vt0.c1)|(1.805959364E9)), LOWER(DISTINCT vt0.c1))) AND ((vt0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL), '-294315958' COLLATE RTRIM)))) ORDER BY ((rt0.c0 IN ()) IN ()) ASC, UNLIKELY(LIKELY(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, 0Xa900b9c)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), ((vt0.c1)|(1.805959364E9)), LOWER(DISTINCT vt0.c1))) AND ((vt0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL), '-294315958' COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 IN ()) IN ()) ASC, UNLIKELY(LIKELY(rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c0, 0Xa900b9c)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), ((vt0.c1)|(1.805959364E9)), LOWER(DISTINCT vt0.c1))) AND ((vt0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL), '-294315958' COLLATE RTRIM)))) ORDER BY ((rt0.c0 IN ()) IN ()) ASC, UNLIKELY(LIKELY(rt0.c2))  NULLS FIRST;
SELECT * FROM vt0, t1, vt1 WHERE (((CAST(t1.c0 AS BLOB))<(0X45259104)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB))<(0X45259104))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((CAST(t1.c0 AS BLOB))<(0X45259104)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS BLOB))<(0X45259104))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((CAST(t1.c0 AS BLOB))<(0X45259104)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((NULL)<=((NOT (vt1.c0))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '1542076329' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '1542076329' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((NULL)<=((NOT (vt1.c0))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '1542076329' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '1542076329' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((NULL)<=((NOT (vt1.c0))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '1542076329' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t1 WHERE ((((((vt1.c1) NOT BETWEEN (0.9555225019414567) AND (vt1.c1))))=((CAST(t1.c1 AS REAL))))) ORDER BY ((vt1.c1)AND(((t1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) NOT BETWEEN (0.9555225019414567) AND (vt1.c1))))==((CAST(t1.c1 AS REAL))))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((vt1.c1)AND(((t1.c1) ISNULL))));
SELECT ALL * FROM vt1, t1 WHERE ((((((vt1.c1) NOT BETWEEN (0.9555225019414567) AND (vt1.c1))))=((CAST(t1.c1 AS REAL))))) ORDER BY ((vt1.c1)AND(((t1.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) NOT BETWEEN (0.9555225019414567) AND (vt1.c1))))==((CAST(t1.c1 AS REAL))))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((vt1.c1)AND(((t1.c1) ISNULL))));
SELECT ALL * FROM vt1, t1 WHERE ((((((vt1.c1) NOT BETWEEN (0.9555225019414567) AND (vt1.c1))))=((CAST(t1.c1 AS REAL))))) ORDER BY ((vt1.c1)AND(((t1.c1) ISNULL)));
SELECT * FROM rt0 WHERE ('帾hIp<Y') ORDER BY ((LOWER(rt0.c1))-(((('-160410844', '569331710', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((1013700475, rt0.c1, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (('帾hIp<Y') IS TRUE)  as count FROM rt0 ORDER BY ((LOWER(rt0.c1))-(((('-160410844', '569331710', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((1013700475, rt0.c1, rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE ('帾hIp<Y') ORDER BY ((LOWER(rt0.c1))-(((('-160410844', '569331710', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((1013700475, rt0.c1, rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (('帾hIp<Y') IS TRUE)  as count FROM rt0 ORDER BY ((LOWER(rt0.c1))-(((('-160410844', '569331710', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((1013700475, rt0.c1, rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE ('帾hIp<Y') ORDER BY ((LOWER(rt0.c1))-(((('-160410844', '569331710', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((1013700475, rt0.c1, rt0.c0))))) DESC;
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE BINARY COLLATE RTRIM) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE BINARY COLLATE RTRIM) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE BINARY COLLATE RTRIM) ORDER BY NULL DESC;
SELECT COUNT(*) FROM t1, vt1, rt0, vt0 WHERE (((LAST_INSERT_ROWID()) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT NULL)) IS TRUE)  as count FROM t1 NOT INDEXED, vt1, rt0, vt0);
SELECT COUNT(*) FROM t1, vt1, rt0, vt0 WHERE (((LAST_INSERT_ROWID()) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT NULL)) IS TRUE)  as count FROM t1 NOT INDEXED, vt1, rt0, vt0);
SELECT COUNT(*) FROM t1, vt1, rt0, vt0 WHERE (((LAST_INSERT_ROWID()) NOT NULL));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN x'8782' WHEN 0.10334715541161554 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN x'8782' WHEN 0.10334715541161554 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN x'8782' WHEN 0.10334715541161554 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN x'8782' WHEN 0.10334715541161554 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN x'8782' WHEN 0.10334715541161554 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.707702366252104 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.707702366252104 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.707702366252104 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.707702366252104 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0.707702366252104 END COLLATE RTRIM);
SELECT * FROM rt0, t1, vt0, vt1 WHERE (vt0.c0) ORDER BY (t1.c1 IN (rt0.c0, t1.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, t1, vt0, vt1 ORDER BY (t1.c1 IN (rt0.c0, t1.c2)) COLLATE BINARY);
SELECT * FROM rt0, t1, vt0, vt1 WHERE (vt0.c0) ORDER BY (t1.c1 IN (rt0.c0, t1.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, t1, vt0, vt1 ORDER BY (t1.c1 IN (rt0.c0, t1.c2)) COLLATE BINARY);
SELECT * FROM rt0, t1, vt0, vt1 WHERE (vt0.c0) ORDER BY (t1.c1 IN (rt0.c0, t1.c2)) COLLATE BINARY;
