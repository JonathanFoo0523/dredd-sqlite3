-- Time: 2024/06/09 21:40:31
-- Database: database26
-- Database version: 3.40.0
-- seed value: 2286977426
PRAGMA encoding = 'UTF-16be'; -- 2ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 35ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 28ms;
ROLLBACK TRANSACTION; -- 1ms;
REINDEX; -- 19ms;
UPDATE OR REPLACE rt1 SET (c1)=(0.007128539175110471); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 845715790); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2062821674); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 677399430); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1613963086,13');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.locking_mode = NORMAL; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=''; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1613963086'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 6ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.27119971080797456)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.48873259263934277; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1264498136 0 sz=-1888100288 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1110219674 1439382938 sz=-1613963086 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((0X9e907a0) IS TRUE), LIKELY('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 -1622607455 sz=-2119870143'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1264498136 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=56322938'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1239164880'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1110219674 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(CASE WHEN '' THEN 0xffffffffe254d01b WHEN x'' THEN '' WHEN 'x^,E_~2' THEN 'dA甃\9x%\n' ELSE '	kk*A.,a㶚' END, CASE '-1888100288'  WHEN '' THEN x'' WHEN 0.8695356986174331 THEN NULL WHEN 0.42857911974787155 THEN '-2119870143' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'EQG\n毩wGX說'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 14ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=7586220 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (-3.04384765E8)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1239164880 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=626915602 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1622607455 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1090196560 sz=1439382938 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')&(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1814769327') ISNULL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=311663686 unordered'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE (((((('7586220')AND(x'')))OR(NULL)))|(CAST('' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-966562883' AS INTEGER))>(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffd3d75405)AND('0.48873259263934277')))OR(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-930341835 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Pp') NOT BETWEEN ('hQ') AND (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'833e') NOT BETWEEN ('2091169420') AND (0.7350183916512704))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.11074842693888465 IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-551078653 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=465441567 noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 sz=-446732797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-1857758782 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1070830914 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-567685657 sz=-1676140346 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1178980649 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((0.7846897956113388 IN (x'')))<=(CAST('-446732797' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)OR(',mV!_')))AND('237541314')))AND(NULL)))OR(x'')))AND(CASE WHEN 0X1a232d2 THEN 'E1l*HM\n' ELSE x'' END)))OR(((((x'')OR(0.8534846762556612)))AND(0Xa6f8c2e)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1613963086 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-2136599259 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1878168990'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7350183916512704)IS NOT('1180476216')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-181132663 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-740862971)GLOB('ᰵ~')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)IS NOT(x'2b2a12a4' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1013122567 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-930341835 sz=-1110219674 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 sz=-1613963086'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'4cb7' THEN 0.4719278824590497 END IN ((NULL IN ()), NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=237541314 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '' THEN 0.7453949137111854 WHEN NULL THEN NULL WHEN 'E-0''' THEN '	4' ELSE NULL END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN 'o' THEN 'SO]]&蜍H' WHEN NULL THEN x'' WHEN x'' THEN 0.48873259263934277 ELSE NULL END))<=(((('-2119870143') NOT NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=850422761 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-130370232 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('0.7453949137111854')OR(0.9078971823225306)))OR(NULL)))AND('152534772')))AND(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=458059894 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') NOT BETWEEN ('') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-625595750 sz=-204218151 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-25010201 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-78892815 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=27407058 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN (0.45114977220433383) AND (x'')) IN ((('L)\n뚌-LMr')=('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1532554205 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'8943' AS INTEGER)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-584181905 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=166266784'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-584181905'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1285096744 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('P- j')-(0.7846897956113388)))<((x'd36a' IN (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'adb7')<(0.9390466385423395)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (-619374258) AND (x'')))OR((~ ('-1244206924')))))OR(((0.11878797103034822) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-471371954 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>(0.01817582792963912)))!=((((NULL, x'', x''))>(('0.01817582792963912', '', '56322938'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1303292424 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.01817582792963912)GLOB(0.0)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-78892815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ('-1654706592', NULL)) IN (((x'') BETWEEN (0.6867247990713976) AND (0.7846897956113388)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-585839180'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1131251325 sz=2119264733 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '505382624 -1788158364 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.4757171786037864 AS REAL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR((~ (NULL)))))AND(CAST('L澤䧮''' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=297915255 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-1613963086 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-451473589'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(((x'') IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.22803783255595378)AND('-2047137238')))AND(x'e3de')))OR(CASE 0.3935527900752275  WHEN '27407058' THEN x'' END)))OR(((0.9732330607336325)|(0.8165412295144283)))))OR(((0X15214e92) NOT BETWEEN (-1.613963086E9) AND ('')))))AND((-4.71371954E8 IN ('1045130385')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode('-304384765' COLLATE RTRIM, CASE WHEN NULL THEN '0.27119971080797456' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '4 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-557489080 0 sz=-1694224795 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', NULL, x'')) NOT BETWEEN (((- (58090168)), (x'' IN ()), ((x'') NOTNULL))) AND (('' COLLATE BINARY, NULLIF(1.52534772E8, '-613593596'), (((0x7b2d140f)) NOT BETWEEN ((x'2412')) AND ((0.36818239883572257)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'791b'))) NOT BETWEEN ((('0.6867247990713976')<=(x''))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1239164880 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1135421586 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1131251325'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1694224795 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1859106331 sz=1427555274'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'ea4d' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=900860721 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X390eb4d9) BETWEEN (NULL) AND (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1536262673 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN json_valid(x'') THEN CAST('-328639676' AS TEXT) WHEN '-666409505' THEN ((NULL) NOT NULL) WHEN (- (x'')) THEN NULL ELSE (((('')AND(NULL)))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2114132787 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1396113821'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'd690')&('0.48873259263934277')) AS BLOB); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-332527572'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (('T!t')+(x'')), 0.3177877045463994); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-451473589 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-9.66562883E8)>(NULL)))%(((('957265113')) BETWEEN ((NULL)) AND ((0.1231701068507709))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(-1805013072)))AND('Y)\8QAA')) IN (CASE WHEN 'XTm\rd' THEN -1.888100288E9 ELSE '' END, '1239164880' COLLATE RTRIM, CASE '	0췧维{f(y'  WHEN '(0' THEN 7586220.0 WHEN '73913314' THEN '-816868331' WHEN 0.3117360404766444 THEN '' END)); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-928024170')>>(x'24b2'))) BETWEEN (((((x'')OR(-3.28639676E8)))OR('-1757103671'))) AND (UPPER(263174424))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3712342469879021) BETWEEN (x'') AND (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2106923986 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1757103671')) BETWEEN (('-1244206924')) AND ((NULL))))<=((((0.9667031985598624))>=(('<7p]S2	'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=615328766 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN COALESCE(DISTINCT 0.9877152198081485, NULL) THEN CAST(0xffffffff85fb2a2a AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.27119971080797456)) BETWEEN ((0X4af918e6)) AND ((x''))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=350750882'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffffc494661e)AND(NULL)))OR('qkV0[XG]c')))!=(DATE(x'', 7586220.0, NULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS(x'c21c')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'5702')AND(NULL)))AND('')))OR('-451473589')))AND(0.3312287418268187)))<=((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1781397382 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-966562883 353642746 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (2.37541314E8)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1622607455')>=('0.22803783255595378')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1110219674) BETWEEN ('') AND ('-130370232')))%(CASE WHEN '' THEN x'b2c6' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=551144088'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('', 0.9589538335222818, 0.01817582792963912)) BETWEEN ((x'f0a6', x'', 0.2755332703086537)) AND ((x'', '-451473589', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1780911278') IS FALSE))AND(CASE WHEN '2063998350' THEN 'uz' WHEN -938706836 THEN NULL WHEN '-1953983959' THEN '-1805013072' ELSE 0.7350183916512704 END)))OR(LIKELIHOOD(DISTINCT '-340985135', 0.5139135576451412))))OR(((x'')>(x'')))))AND(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '957265113' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1439382938'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=850422761 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1852554321 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-567685657 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN 'dA甃\9x%\n' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(CASE 0.6399281748795527  WHEN '硇dQqJqqཋ' THEN '' END, UNLIKELY('\rt>q\oLh'), ((NULL)>('!{ͥ%dBu'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1058500029 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT ('505382624')) THEN (((''))>(('tT2aNa,'))) ELSE ((NULL) IS FALSE) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE UPPER('1525545578')  WHEN (((('Lᣦ')AND(0.578413290067519)))OR(0.17996327600801532)) THEN (~ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1470447202'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1945556145 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS REAL))AND((('-930341835') IS FALSE))))OR(CASE WHEN NULL THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('\r')AND(0x11c1d377)))AND(((((NULL)OR('1246173304')))AND(NULL)))))OR(((x'7753ef03') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-567685657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1926985971 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1560123671 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(((((((((x'')OR('(罳)t+I뙋7')))AND(0.7453949137111854)))OR('')))OR(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((('!{ͥ%dbu')OR(0xffffffff9fcce0b2)))AND(0.5347039842179168)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '6994942 sz=-453120998 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.93131854031578) NOT BETWEEN (x'') AND (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-384571863 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-1110219674'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE x''  WHEN 0.7453949137111854 THEN x'' ELSE 0.42052687334594274 END)AND((0xfffffffffe825fe7 IN ()))))OR(((((NULL)OR(0x24ad2bfe)))AND(0X36dd4b8c)))))OR((+ (x'')))))AND('1544431687' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL)IS(NULL)))OR(((((NULL)AND('c_*qwl0\r')))OR(NULL)))))OR((~ ('-1044903828')))))OR((((NULL)) BETWEEN ((NULL)) AND ((0.031899761194260634))))))OR(CASE WHEN NULL THEN NULL ELSE NULL END)))OR(((x'') BETWEEN (NULL) AND (x'')))))AND((NOT (1.131251325E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN (TRIM(DISTINCT 0.7081959873912506))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('P- J' IN (0.5414417622648756))  WHEN ((NULL) NOTNULL) THEN CASE 2077919274  WHEN NULL THEN x'bbe6c26e' END ELSE 'E<f+' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((8.589027614533951E-4) NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((2.97915255E8)<<('bkDr')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=58090168'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(0.8168476773245715)))AND('-1419287492')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1340076907 0 sz=1439382938'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1466671399 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<=('o')))/(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('A⟐')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'2e0c' COLLATE NOCASE AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2128005734 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1286779951 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2597530837513219) IS FALSE))||(((x'') NOT BETWEEN (NULL) AND (1835309981)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-295325071'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'b5ab') BETWEEN ('-1337970540') AND ('SJIyq)Z[')))>(('1814769327' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-545177097 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('58090168')AND(NULL)))AND('z')))<(DATETIME(NULL, 0xffffffff81a55941, '-1908651922'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-966562883 sz=-1818529456 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1283159713 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((((((('RZ')AND(0.2023633367051424)))AND('1814769327')))AND(NULL)))AND(0x35b6b7a)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('*_''g', x'')))-((x'' IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(0.8775782965761338)))OR(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-815747174 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1508831314 0 sz=-1694224795 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1204462256 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1302507505 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 -938706836 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.7846897956113388)))IS NOT(LIKE(NULL, 0.21481318458731657, 'M'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('1260826395', x'', 0.8695356986174331))<>(('1393669131', x'', 0xfffffffff37404af))) THEN (x'' IN ()) WHEN ((x'') IS TRUE) THEN (('')GLOB(NULL)) WHEN ((((((((NULL)AND(x'')))OR('-1622607455')))OR(0xfffffffff08bb2ad)))OR(NULL)) THEN (+ (0X35b6b7a)) ELSE 0.10040024819180549 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (0X35b6b7a)))IS(CASE WHEN 'O19^RR[G' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-551078653 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1820699740'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'bkDr'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2119870143 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9478945763284908) BETWEEN (NULL) AND (''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '544797358'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-328639676 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ((((NULL)OR(NULL)))OR(x'd268'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('-1613963086')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=54269918 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=7586220'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.47310346767806155))<=((x''))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1723613941 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE 'H^\n\?﹣]T' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(CASE 'E-0'''  WHEN '-332527572' THEN '' WHEN x'' THEN 'qkV0[XG]c' WHEN 0.5628289584919308 THEN x'' ELSE '-2063244215' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '297915255 sz=1982094684 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1257838822 0 sz=-1963023197 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0Xffffffffaeaa11ae AS TEXT) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1347189335 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-613593596'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>('900860721')))>(((NULL) BETWEEN ('f4') AND (0.561463533100288)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '58090168 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1674358495'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2115921630 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1757103671'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-3.04384765E8) NOT NULL))||(json(0.7973366509974683))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.48873259263934277)OR(x'004b')))AND(0.8304311654552791)))!=((('-816868331')>>('nohp튽*s')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1317839378 -304384765 sz=-259920459'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=902000845 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1944819408 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1252879368 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT x'c2be')) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2063998350'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-816868331'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1726852632 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-78892815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE 5.6322938E7  WHEN 1691339391 THEN x'd3f2' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-725215726 27407058 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(0.7973366509974683)))AND(0.21481318458731657)))AND('O19^RR[G')))OR(x''))) NOT BETWEEN (CAST(0.4036156052138319 AS NUMERIC)) AND (CAST(0.0844110658450391 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 2 sz=486942094 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1180396472 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-828350207'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=843962715'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=56322938 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) NOT BETWEEN ((((x'', 0.5818251888548749, NULL)) BETWEEN ((0x32b06be9, NULL, '')) AND ((0.367919955939903, '', NULL)))) AND (((0.9390466385423395) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1487356588 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1938411997 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-884323635 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffdb6d4e04)) BETWEEN ((((('1439382938', '%kZ!', NULL)) BETWEEN (('%G敲甃', NULL, x'13132664')) AND (('khLw爧5iUZ', x'', x''))))) AND ((((NULL) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1764754568 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1561893172 465441567 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1396113821 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=175082542 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-745156321 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_GET('-1536262673')) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=556206454 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-651730692 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))<=(((('!{ͥ%dBu', -1e500, ''))<((x'', 0.10882512758429208, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-78892815'))) NOT BETWEEN ((~ (NULL))) AND ('sX' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-2131498565 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('1719851228')AND(530646512)))AND(-2136599259)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1161604700 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)LIKE(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'b98c' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1149231780 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=610042625 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-471371954 -204218151 sz=1513420500'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) IS FALSE))AND(((NULL) ISNULL))))OR(((x'7c74') BETWEEN (NULL) AND (0.9500996702287994)))))AND(CAST(-1982337890 AS BLOB))))OR((NULL IN ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1427555274'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-1536262673 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-950498108 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '866444674 sz=826610856'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1063203040 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN (((x'e6b0')) NOT BETWEEN ((x'')) AND (('-1019489548'))) WHEN (NOT ('')) THEN (((NULL, NULL, x''))>((x'', x'', 0X5f5e0487))) WHEN ((((x'')AND(0.27774243357767225)))OR(x'')) THEN -2.136599259E9 ELSE ((x'')IS NOT(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0xffffffff98df8b42)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1432753273'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-584181905 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1706827870'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS REAL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-938706836 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1135421586'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-332527572 sz=-779029935 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-381126209'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-666409505 0 -1936753538 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((('')OR(979082168)))AND(0.35962838204203695)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1178980649 sz=1013122567 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'9bab' IN ())  WHEN ((0.9492397634185743)>(0.694888859117677)) THEN (NOT (0xffffffffb366fad8)) WHEN CASE NULL  WHEN x'0377' THEN 0.45113759055782165 ELSE NULL END THEN CASE NULL  WHEN NULL THEN 0.25156046445635205 ELSE NULL END WHEN x'a187' THEN ((((-840251763)AND(0.6520967626478543)))OR('1427555274')) ELSE CASE NULL  WHEN ',' THEN 'M#' ELSE 0.45906299148788277 END END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=676327914 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 263174424 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((612546856)+(0Xffffffff8b889229)) THEN IFNULL(DISTINCT NULL, 0xffffffff9144d9c2) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6678527263822301)+(NULL)))/(((-1)*(0.810318334129189)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1340085373 sz=2063998350 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1781397382 sz=-430424091'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2114132787'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=286229954 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')LIKE('^9K+5*eD)'))) NOT BETWEEN (((x'') ISNULL)) AND (((NULL) BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(CASE NULL  WHEN x'' THEN x'c38a' END, 0.3691753424488229); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1979957270') NOT BETWEEN ('-2096192337') AND ('748206933')))+(((x'7a05')>=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 175082542 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-21863884 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-9223372036854775808 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-25010201' AS REAL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('') NOT BETWEEN ('빔J#rP9ANp') AND (x'0003')), (+ (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE x''  WHEN 0X410290b8 THEN x'ac0c' ELSE NULL END, LOWER(DISTINCT x''), (((0x35b6b7a))<=((x'b55e')))))>=(((('') NOTNULL), CAST(NULL AS REAL), (((x''))<>((-1820253941)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '974845688 sz=-1118023936 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-451473589'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-86978297 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-2047137238'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-161142148 sz=514321348 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=452091331 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2130053424 0 sz=-4457932 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-9.9690749E8 IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-120505989 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=262906261 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN 0x69580f1a COLLATE NOCASE WHEN (((NULL))>((NULL))) THEN ((((x'')AND(0.1632257060924429)))AND('0.42857911974787155')) WHEN ((0.10882336549797) BETWEEN (x'') AND (x'')) THEN ((((((((x'')OR('0.5628289584919308')))OR(0.02184226216926899)))AND('2089652719')))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1013122567 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=458059894 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 -2119870143'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1462394580 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=698172028 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LAST_INSERT_ROWID())<>(((0.12038919138409976)IS NOT('-1476753241')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((+ ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1255378399 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1622607455'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0x25633f48))<=((x'')))  WHEN CAST(0.10270874436789978 AS INTEGER) THEN (('0.10040024819180549') BETWEEN ('168453180') AND (0.3245310122840963)) ELSE (- (2011753848)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1280310233'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-328639676 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1479074827 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1080544226 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (0.9994439038761345)) IN (('-585839180' IN (x'fb20', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-18363991 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.31066321706211675 IN ())) BETWEEN (((x'99ca') BETWEEN (x'1a5f') AND (0x6fadee3d))) AND ((('-1303292424')AND('488030637')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1203480578 sz=1913474027'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 -1219310121 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1532554205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1508541445 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '4 sz=-971399276 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-876654049'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2114132787 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1242474493 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1523140046'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2111042973'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('HQ' IN (NULL))) BETWEEN ((('''ᶎ') NOT NULL)) AND ((- (94533323)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1729638221 -76136050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '23935533 sz=56322938 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.9370389290896413 IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-3.28639676E8)>=(0x20d9ca98)))<>(((x'') BETWEEN (NULL) AND ('OU9#  [U')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1317665381 sz=365797644'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1371194628'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '850422761 0 sz=-740862971'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-551078653 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB))LIKE(((NULL)&('-557489080')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1886582685 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')%(-2106923986))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- (0.6421164443548991)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1256684037 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-669351276' COLLATE BINARY  WHEN NULL THEN '' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR('<7p]s2	')))AND('0.7453949137111854')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1200164275 sz=429532176 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_patch(CAST(0Xfffffffffb4c30f1 AS NUMERIC), ((NULL) BETWEEN (-1.613963086E9) AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '521302221 sz=1427555274 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1699368782 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1006756827'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('80130525') IS FALSE) IN ((0.1632257060924429 IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-585839180 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length(0.760208543060708)) BETWEEN ((('&k0Y{kt') NOT BETWEEN (1978330222) AND (x''))) AND (((NULL) NOT BETWEEN (x'3b24e62c') AND (0xffffffffb5d6e8b4)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=944787363'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0x0 IN ()) THEN 0.5588125075987402 COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ ('511377073'))  WHEN CAST(-769242859 AS INTEGER) THEN 0.5274252034488276 ELSE (((('')OR(0.8461884831752696)))AND(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X5bb15035) ISNULL))AND((((NULL, x'879b38af', x'2216'))<((x'', 'x^CR]BG', 0xffffffffc8af7996))))))OR(COALESCE(-1.780911278E9, '1453791123'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1110219674 sz=1257838822 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1613963086 sz=-816868331 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT ('-1066066037')))OR((NULL IN (NULL)))))OR(0.1638260221386978 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1110219674'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-644482623 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=797857261 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1536262673 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1855624351 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((STRFTIME(0.7662939588389794, x'', 0xffffffffc6636bbd))&(LIKELY(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-28229358'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2117187574'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.046483863300788686 AS TEXT) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-142171686'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR((0.3312287418268187 IN ()))))AND(CASE WHEN x'' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1846392338'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0x4ed489b9)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-929147972 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-304384765 sz=-1926985971 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-127264690 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((((NULL)) NOT BETWEEN ((0xffffffffccb909bc)) AND ((x''))), (+ (x'c4a4'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1045130385 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.1936604704153605 THEN 0.17251999923108952 END) NOT BETWEEN (-1303292424) AND ((((x'a40c5d2e'))<=((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1232629853 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (',F-X')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=354504338 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '>,FGA>E'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-122840846 2075639710 sz=1131251325 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '2091169420' THEN x'' WHEN NULL THEN x'' WHEN '0.22803783255595378' THEN 'Z&(!' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1356811425'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-266981268 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '957229764 sz=451425670'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.005449095126735859)|(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-543626669) IS TRUE) IN (CASE WHEN 0Xffffffff9c5ab867 THEN 0.1812485410856215 WHEN NULL THEN x'30d425bc' WHEN 0.3493624819957012 THEN NULL END, (+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1808288601'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1257838822')OR(('' IN ()))))AND(SQLITE_COMPILEOPTION_GET(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1613963086 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2136599259 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=1733783460 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=551144088 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((- ('0.9390466385423395'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x60d51e6 COLLATE NOCASE) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1858194138'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN (0x7844fda5)))OR(((x'056f5b83')|(x'')))))AND((('1814769327')LIKE(1.09019656E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((x'' IN (NULL, '-328639676')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-625595750'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-923437189 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2091169420 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 0 sz=397358277'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))>=(LIKELIHOOD(DISTINCT NULL, 0.8543823999584464))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<((0xffffffffa31af6a5))))<<(GLOB('J麝pctTٲK', NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1410310756'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2119870143 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1986838440 sz=792361056 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(((0Xffffffffc7b0522a)/(NULL)), (((NULL))<=((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1811735068'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1838018316'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.227887209881785; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=960353392 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1836552877'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=124196977 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'h%.>e' THEN 0.10040024819180549 WHEN 551941498 THEN '-619374258' WHEN x'' THEN '1e500' ELSE '0.810318334129189' END) BETWEEN ((- ('>gy>'))) AND ((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((x'') NOT BETWEEN (0x36119437) AND (0Xffffffffc481f0e6)), ((('jyd#z/s偆'))<=((0.10882336549797)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_SOURCE_ID()) NOT BETWEEN (HEX(DISTINCT '')) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1632026883 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '152534772'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1244206924')%(x'')))>(((NULL)<(-395673708)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=58424421'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT BETWEEN (1.135421586E9) AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5913925235640967 IN ()))LIKE((('')<>('I,F')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ('615328766')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1587604254 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1045130385 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1390396281 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1814769327 -619374258 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.14704354690292176) NOT BETWEEN (NULL) AND ('-304384765')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'', 0x7ca4b68c, NULL)) NOT BETWEEN ((x'f089edd8', NULL, '{v*Jsr\n0')) AND ((x'fa00', x'e09b', -1116677599)))))>=(((NOT (x'6b9caee0'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('V-pbASy2' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '852287759 0 sz=1008074569 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-702327292 0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-511319295 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1926985971 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-625595750 0 sz=-965565919 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (NULL)))OR(NULL COLLATE NOCASE)))AND(0.7019202777675313)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=194134553 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((0Xffffffffe254d01b) BETWEEN (NULL) AND (5.8090168E7)), NULL COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'60ba'  WHEN x'' THEN NULL WHEN 0.7019202777675313 THEN -1867886148 WHEN NULL THEN 0.08234621603393177 END)<>((('-666409505') NOT BETWEEN ('') AND (0.3300906898681534)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1737759303'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2081983857 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1116264702 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2107487979 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1137793480 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1577913843 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1681510130 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(DISTINCT x''))||('-1426150199' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF('1', '1013122567')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1845906892'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('350750882' IN ()) IN ((+ ('-1178964981')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN SQLITE_SOURCE_ID() THEN ((NULL) NOT BETWEEN (x'') AND ('t.\n~?')) ELSE (- (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1899571141 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2rsJ>mSAཋ')*(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1321755303'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 417528302 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '824170730 -538083756 sz=-172559423 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-451473589))) BETWEEN (NULL) AND (json_remove(NULL, '(|'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1569452917'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')>(x'6171')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')+(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=597529333 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('649015115')>>(x'dbfd')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2053359354 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-2047137238'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=241224349 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-2119870143 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))IS NOT(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '297915255 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1896047423)) BETWEEN (('-1567055300')) AND ((0x5df8fb13 COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'K' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1972265090 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.23418869947240328)+(NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1427555274 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0Xffffffffa46e7def)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'1a66') BETWEEN (0X52e64b70) AND (NULL)))IS NOT(((x'33b9') BETWEEN (NULL) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1953983959'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1212528723 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1545868842 sz=-225398258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 -1016553263 sz=97129357 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-619374258 sz=1135421586'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('-928024170')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=-35612619 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-740862971 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7973366509974683 IN ()))AND(((0x7b061d8e) ISNULL))))AND((((('')AND('-1207717123')))AND(1643165009)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-909266614)!=(NULL)))AND(CAST(NULL AS NUMERIC))))AND(CASE '1965038870'  WHEN NULL THEN 0.5666323200271759 WHEN x'' THEN NULL WHEN -1757103671 THEN 0.9370389290896413 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-1366362185 sz=1535432170 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-271566964 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-656231395'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '3*63)' THEN '>!+ZO_/YN' ELSE '1806902830' END) BETWEEN ('237541314' COLLATE RTRIM) AND (((-2116805556)IS(0.42357583748400707)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1763679503')) NOT BETWEEN ((NULL)) AND ((''))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'943f')GLOB(x'abff0895'))))<=((x'3570' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2072713903'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=900860721 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (('-557489080') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1694224795'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=25128663 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-497758181 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('sDisZqG')<=(0.956694233984836)))OR('o19^rr[g')))OR('0.23418869947240328')))AND(((-2.119870143E9)>>(0.770621019687916)))))OR((('-637493443')>=(0.9730583762775338)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.545786975449821)<<(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1926985971 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.5347039842179168', '1239164880', x'')) NOT BETWEEN ((((('1218875379', 'vE\n\to', x'dccb')) NOT BETWEEN ((NULL, '152534772', '2108959982')) AND ((x'', x'', x''))), ((NULL) NOT BETWEEN (9.57265113E8) AND (0x12939c46)), (~ (0.8660033757659124)))) AND (((((NULL, '-666409505', NULL)) BETWEEN ((1325080940, x'', 0.4157191579732603)) AND ((0xffffffffe9e8a8de, x'', x''))), ((NULL)OR('')), CASE WHEN NULL THEN NULL WHEN NULL THEN 0.10804031096833744 WHEN x'' THEN x'' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-299572816 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('A|SyᐏN')) BETWEEN ((((0xffffffff929f54e8)GLOB(x'0ef47585')))) AND ((((x'4aff')>>(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('EQG\n毩YGX說')) AND (((((0.5816960023724621, -1.244206924E9, -9.9690749E8, NULL, NULL))>((x'', 2.119264733E9, NULL, NULL, x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1.52534772E8) BETWEEN (6.26915602E8) AND (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=86173240 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1463987353 2 sz=-740862971 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UNLIKELY(x'7bd4'))AND((('w')>=(1.013122567E9)))))AND(CASE WHEN '' THEN 0.1170546785120028 WHEN 6.15328766E8 THEN NULL WHEN '712833656' THEN '1262063528' ELSE x'1be5' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '175082542 sz=104705138'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-181132663 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0.19615294965149743  WHEN '-584181905' THEN 0x67576fa4 END))<>((((0xfffffffff0dcab1d)<(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=2139661007'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '900860721' COLLATE RTRIM, ((NULL)LIKE('350750882'))))<((NULL, (('1384228668')*('-566796164')), NULL COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9492397634185743; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '1131251325'  WHEN 0.1661778770202511 THEN x'e434' WHEN 0.18630043988592915 THEN NULL WHEN x'b6d1' THEN NULL WHEN x'bba2' THEN NULL WHEN '-521919160' THEN 0.28972633579626783 END)<((('w') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('?Pe+YrN'))=(((((('957265113')AND('⣼~?')))AND('sx'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM('') COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2014361676 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1622398640 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-584181905'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1532554205 COLLATE RTRIM AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1291369864 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.23838679337111146  WHEN -1757103671 THEN '-1953983959' ELSE 'YZyc' END) NOT BETWEEN (((0Xab5d584) NOT BETWEEN (0Xfffffffff6fcdcc8) AND ('403736136'))) AND (CASE 0.3935527900752275  WHEN 0.4441267109431879 THEN 0.5414417622648756 WHEN 0X127c9681 THEN '-930341835' WHEN 0.3935527900752275 THEN '' WHEN NULL THEN 'zB' WHEN 'm蘈*fr' THEN '-1241107560' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('2063998350', '', 'n㺥I'))>((-6.19374258E8, NULL, 'e')))))>((CASE x''  WHEN NULL THEN NULL ELSE ']qW?)I{}' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0.6788122150702566  WHEN NULL THEN 0X57656cd4 ELSE NULL END THEN ((0.7740795500570652)>>(x'')) ELSE (('(tu^')>('850422761')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL; -- 0ms;
UPDATE vt0 SET (c0)=(x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 39877952); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 495997795); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46609'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1194475896); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE rt1; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='O*' WHERE ((((((rt1.c2) BETWEEN (1045130385) AND (rt1.c0)))AND(((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))))OR((rt1.c0 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
PRAGMA temp.secure_delete = true; -- 0ms;
REINDEX; -- 0ms;
END; -- 22ms;
UPDATE OR IGNORE rt1 SET (c0)=(x''); -- 0ms;
PRAGMA incremental_vacuum(73913314); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(x'') WHERE ((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)%(vt0.c0)))))OR(0.9994439038761345)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
UPDATE rt1 SET (c2)=('-1926985971'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM rt1; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE vt0 SET c0=NULL WHERE NULL COLLATE RTRIM; -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA temp.locking_mode = EXCLUSIVE; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('\') WHERE vt0.c0; -- 0ms;
UPDATE rt1 SET (c2, c1, c0)=(1e500, 'ou9#  [u', '') WHERE ((((rt1.c2) ISNULL))OR(((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)))); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE rt1 SET (c0)=(x'') WHERE (LIKELY(DISTINCT rt1.c0) IN ()); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 908005872); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
ANALYZE; -- 17ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1447815473'); -- 13ms;
REINDEX RTRIM; -- 0ms;
REINDEX  rt1; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
ANALYZE; -- 26ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'b25e', x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.wal_autocheckpoint = 2197823908787578221; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 17ms;
UPDATE OR ABORT vt0 SET c0=0.6268768836565581, c0=x'' WHERE x'' COLLATE RTRIM; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1106975913);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 29ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 675469860); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1926985971);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1115948240,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37705'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1890042019);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1857758782);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29516'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 14ms;
UPDATE OR IGNORE vt0 SET (c0)=(-6.19374258E8); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2) VALUES (0.7546505974346317); -- 23ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(((vt0.c0)<<(NULL))))) ORDER BY LIKELIHOOD(ABS(vt0.c0), 0.5818949871692617) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY)==(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))LIKE(((vt0.c0)<<(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(ABS(vt0.c0), 0.5818949871692617) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY)==(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(((vt0.c0)<<(NULL))))) ORDER BY LIKELIHOOD(ABS(vt0.c0), 0.5818949871692617) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY)==(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))LIKE(((vt0.c0)<<(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(ABS(vt0.c0), 0.5818949871692617) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY)==(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(((vt0.c0)<<(NULL))))) ORDER BY LIKELIHOOD(ABS(vt0.c0), 0.5818949871692617) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY)==(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (json((((vt0.c0, vt0.c0, '27407058')) BETWEEN ((rt1.c0, '>!+ZO_/YN', rt1.c0)) AND ((vt0.c0, rt1.c0, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((json((((vt0.c0, vt0.c0, '27407058')) BETWEEN ((rt1.c0, '>!+ZO_/YN', rt1.c0)) AND ((vt0.c0, rt1.c0, rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (json((((vt0.c0, vt0.c0, '27407058')) BETWEEN ((rt1.c0, '>!+ZO_/YN', rt1.c0)) AND ((vt0.c0, rt1.c0, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((json((((vt0.c0, vt0.c0, '27407058')) BETWEEN ((rt1.c0, '>!+ZO_/YN', rt1.c0)) AND ((vt0.c0, rt1.c0, rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (json((((vt0.c0, vt0.c0, '27407058')) BETWEEN ((rt1.c0, '>!+ZO_/YN', rt1.c0)) AND ((vt0.c0, rt1.c0, rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c1 END IN ())) ORDER BY (((('㹻cn*ꪍ')AND(-332527572)))AND(rt1.c2))  NULLS LAST, CAST(COALESCE(rt1.c0, rt1.c1) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c1 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((('㹻cn*ꪍ')AND(-332527572)))AND(rt1.c2))  NULLS LAST, CAST(COALESCE(rt1.c0, rt1.c1) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c1 END IN ())) ORDER BY (((('㹻cn*ꪍ')AND(-332527572)))AND(rt1.c2))  NULLS LAST, CAST(COALESCE(rt1.c0, rt1.c1) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c1 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((('㹻cn*ꪍ')AND(-332527572)))AND(rt1.c2))  NULLS LAST, CAST(COALESCE(rt1.c0, rt1.c1) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c1 END IN ())) ORDER BY (((('㹻cn*ꪍ')AND(-332527572)))AND(rt1.c2))  NULLS LAST, CAST(COALESCE(rt1.c0, rt1.c1) AS BLOB)  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (HEX((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((vt0.c0, x'', rt1.c0))))) ORDER BY GLOB(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END, CASE WHEN rt1.c0 THEN 'zL%2eFH' ELSE rt1.c0 END) DESC  NULLS FIRST, ((((vt0.c0 IN ())))==((((x'')IS(vt0.c0))))) DESC, CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) ELSE (~ (0.7209218874081033)) END;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((vt0.c0, x'', rt1.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 ORDER BY GLOB(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END, CASE WHEN rt1.c0 THEN 'zL%2eFH' ELSE rt1.c0 END) DESC  NULLS FIRST, ((((vt0.c0 IN ())))=((((x'')IS(vt0.c0))))) DESC, CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) ELSE (~ (0.7209218874081033)) END);
SELECT ALL * FROM rt1, vt0 WHERE (HEX((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((vt0.c0, x'', rt1.c0))))) ORDER BY GLOB(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END, CASE WHEN rt1.c0 THEN 'zL%2eFH' ELSE rt1.c0 END) DESC  NULLS FIRST, ((((vt0.c0 IN ())))==((((x'')IS(vt0.c0))))) DESC, CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) ELSE (~ (0.7209218874081033)) END;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((vt0.c0, x'', rt1.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 ORDER BY GLOB(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END, CASE WHEN rt1.c0 THEN 'zL%2eFH' ELSE rt1.c0 END) DESC  NULLS FIRST, ((((vt0.c0 IN ())))=((((x'')IS(vt0.c0))))) DESC, CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) ELSE (~ (0.7209218874081033)) END);
SELECT ALL * FROM rt1, vt0 WHERE (HEX((((rt1.c2, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((vt0.c0, x'', rt1.c0))))) ORDER BY GLOB(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END, CASE WHEN rt1.c0 THEN 'zL%2eFH' ELSE rt1.c0 END) DESC  NULLS FIRST, ((((vt0.c0 IN ())))==((((x'')IS(vt0.c0))))) DESC, CASE ((vt0.c0)>>(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) ELSE (~ (0.7209218874081033)) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (x'8a00') ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((x'8a00') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (x'8a00') ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((x'8a00') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (x'8a00') ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE (((rt1.c0))>((rt1.c1)))  WHEN (NOT (rt1.c1)) THEN rt1.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c2)<<(rt1.c1)) WHEN (- (rt1.c2)) THEN ((rt1.c1) NOT NULL) ELSE ((rt1.c0)%(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c0))>((rt1.c1)))  WHEN (NOT (rt1.c1)) THEN rt1.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c2)<<(rt1.c1)) WHEN (- (rt1.c2)) THEN ((rt1.c1) NOT NULL) ELSE ((rt1.c0)%(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE (((rt1.c0))>((rt1.c1)))  WHEN (NOT (rt1.c1)) THEN rt1.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c2)<<(rt1.c1)) WHEN (- (rt1.c2)) THEN ((rt1.c1) NOT NULL) ELSE ((rt1.c0)%(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c0))>((rt1.c1)))  WHEN (NOT (rt1.c1)) THEN rt1.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c2)<<(rt1.c1)) WHEN (- (rt1.c2)) THEN ((rt1.c1) NOT NULL) ELSE ((rt1.c0)%(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE (((rt1.c0))>((rt1.c1)))  WHEN (NOT (rt1.c1)) THEN rt1.c1 COLLATE BINARY WHEN CAST(vt0.c0 AS REAL) THEN ((rt1.c2)<<(rt1.c1)) WHEN (- (rt1.c2)) THEN ((rt1.c1) NOT NULL) ELSE ((rt1.c0)%(rt1.c2)) END);
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ ((+ (rt1.c1)))));
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((COALESCE(rt1.c1, vt0.c0))OR((- (rt1.c2)))))OR((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((NULL))))) WHERE (CASE CAST(rt1.c2 AS BLOB)  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.2693213036616706)) THEN ((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) ELSE (('O')>(vt0.c0)) END) ORDER BY (((rt1.c2 IN ())) NOT BETWEEN (((NULL)LIKE(rt1.c2))) AND (((0.296816746099443) IS TRUE))) DESC  NULLS LAST, ((NULL)/((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c2 AS BLOB)  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.2693213036616706)) THEN ((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) ELSE (('O')>(vt0.c0)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((COALESCE(rt1.c1, vt0.c0))OR((- (rt1.c2)))))OR((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((NULL))))) ORDER BY (((rt1.c2 IN ())) NOT BETWEEN (((NULL)LIKE(rt1.c2))) AND (((0.296816746099443) IS TRUE))) DESC  NULLS LAST, ((NULL)/((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((COALESCE(rt1.c1, vt0.c0))OR((- (rt1.c2)))))OR((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((NULL))))) WHERE (CASE CAST(rt1.c2 AS BLOB)  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.2693213036616706)) THEN ((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) ELSE (('O')>(vt0.c0)) END) ORDER BY (((rt1.c2 IN ())) NOT BETWEEN (((NULL)LIKE(rt1.c2))) AND (((0.296816746099443) IS TRUE))) DESC  NULLS LAST, ((NULL)/((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c2 AS BLOB)  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.2693213036616706)) THEN ((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) ELSE (('O')>(vt0.c0)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((COALESCE(rt1.c1, vt0.c0))OR((- (rt1.c2)))))OR((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((NULL))))) ORDER BY (((rt1.c2 IN ())) NOT BETWEEN (((NULL)LIKE(rt1.c2))) AND (((0.296816746099443) IS TRUE))) DESC  NULLS LAST, ((NULL)/((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((COALESCE(rt1.c1, vt0.c0))OR((- (rt1.c2)))))OR((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((NULL))))) WHERE (CASE CAST(rt1.c2 AS BLOB)  WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (0.2693213036616706)) THEN ((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)) ELSE (('O')>(vt0.c0)) END) ORDER BY (((rt1.c2 IN ())) NOT BETWEEN (((NULL)LIKE(rt1.c2))) AND (((0.296816746099443) IS TRUE))) DESC  NULLS LAST, ((NULL)/((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CAST('88121700' AS REAL)) ORDER BY (((((rt1.c1 IN ()))OR(rt1.c2 COLLATE BINARY)))OR(((rt1.c1)&(rt1.c0)))) DESC, CASE WHEN TRIM(rt1.c0, rt1.c0) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('88121700' AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1 IN ()))OR(rt1.c2 COLLATE BINARY)))OR(((rt1.c1)&(rt1.c0)))) DESC, CASE WHEN TRIM(rt1.c0, rt1.c0) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END END DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST('88121700' AS REAL)) ORDER BY (((((rt1.c1 IN ()))OR(rt1.c2 COLLATE BINARY)))OR(((rt1.c1)&(rt1.c0)))) DESC, CASE WHEN TRIM(rt1.c0, rt1.c0) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('88121700' AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1 IN ()))OR(rt1.c2 COLLATE BINARY)))OR(((rt1.c1)&(rt1.c0)))) DESC, CASE WHEN TRIM(rt1.c0, rt1.c0) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END END DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST('88121700' AS REAL)) ORDER BY (((((rt1.c1 IN ()))OR(rt1.c2 COLLATE BINARY)))OR(((rt1.c1)&(rt1.c0)))) DESC, CASE WHEN TRIM(rt1.c0, rt1.c0) THEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c1 IN (0.3012964346549143)) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt1.c2)-(rt1.c1)) END) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c1 IN (0.3012964346549143)) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt1.c2)-(rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c1 IN (0.3012964346549143)) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt1.c2)-(rt1.c1)) END) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c1 IN (0.3012964346549143)) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt1.c2)-(rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (rt1.c1 IN (0.3012964346549143)) THEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt1.c2)-(rt1.c1)) END) ORDER BY rt1.c2  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN ('awlA3#1') AND ('-1414450295')))-(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN ('awlA3#1') AND ('-1414450295')))-(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN ('awlA3#1') AND ('-1414450295')))-(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN ('awlA3#1') AND ('-1414450295')))-(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN ('awlA3#1') AND ('-1414450295')))-(((vt0.c0)GLOB(vt0.c0)))));
SELECT * FROM vt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'' COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c2 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (0.17263031776675275);
SELECT SUM(count) FROM (SELECT ((0.17263031776675275) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (0.17263031776675275);
SELECT SUM(count) FROM (SELECT ((0.17263031776675275) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (0.17263031776675275);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE x'4b8d'  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END COLLATE BINARY) ORDER BY CASE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END  WHEN ((rt1.c1)%(rt1.c1)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)<(vt0.c0)) THEN ((rt1.c1)IS NOT(rt1.c2)) WHEN ('0.5347039842179168' IN ()) THEN ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE x'4b8d'  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END  WHEN ((rt1.c1)%(rt1.c1)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)<(vt0.c0)) THEN ((rt1.c1)IS NOT(rt1.c2)) WHEN ('0.5347039842179168' IN ()) THEN ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE x'4b8d'  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END COLLATE BINARY) ORDER BY CASE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END  WHEN ((rt1.c1)%(rt1.c1)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)<(vt0.c0)) THEN ((rt1.c1)IS NOT(rt1.c2)) WHEN ('0.5347039842179168' IN ()) THEN ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE x'4b8d'  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END  WHEN ((rt1.c1)%(rt1.c1)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)<(vt0.c0)) THEN ((rt1.c1)IS NOT(rt1.c2)) WHEN ('0.5347039842179168' IN ()) THEN ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE x'4b8d'  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END COLLATE BINARY) ORDER BY CASE CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END  WHEN ((rt1.c1)%(rt1.c1)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)<(vt0.c0)) THEN ((rt1.c1)IS NOT(rt1.c2)) WHEN ('0.5347039842179168' IN ()) THEN ((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)) END DESC;
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) ORDER BY ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) ORDER BY ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (TYPEOF(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))) ORDER BY ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c1)))OR(rt1.c0))));
SELECT * FROM rt1 INNER JOIN vt0 ON ((0Xffffffffdb7e86e3)|(((rt1.c0)!=(rt1.c2)))) WHERE (CASE WHEN QUOTE(vt0.c0) THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (((rt1.c0))<>((rt1.c2))) THEN CAST(rt1.c2 AS REAL) ELSE (((rt1.c2))<=((rt1.c1))) END) ORDER BY CAST(((rt1.c0)||(rt1.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN QUOTE(vt0.c0) THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (((rt1.c0))<>((rt1.c2))) THEN CAST(rt1.c2 AS REAL) ELSE (((rt1.c2))<=((rt1.c1))) END) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((0Xffffffffdb7e86e3)|(((rt1.c0)!=(rt1.c2)))) ORDER BY CAST(((rt1.c0)||(rt1.c1)) AS TEXT)  NULLS LAST);
SELECT * FROM rt1 INNER JOIN vt0 ON ((0Xffffffffdb7e86e3)|(((rt1.c0)!=(rt1.c2)))) WHERE (CASE WHEN QUOTE(vt0.c0) THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (((rt1.c0))<>((rt1.c2))) THEN CAST(rt1.c2 AS REAL) ELSE (((rt1.c2))<=((rt1.c1))) END) ORDER BY CAST(((rt1.c0)||(rt1.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN QUOTE(vt0.c0) THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (((rt1.c0))<>((rt1.c2))) THEN CAST(rt1.c2 AS REAL) ELSE (((rt1.c2))<=((rt1.c1))) END) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((0Xffffffffdb7e86e3)|(((rt1.c0)!=(rt1.c2)))) ORDER BY CAST(((rt1.c0)||(rt1.c1)) AS TEXT)  NULLS LAST);
SELECT * FROM rt1 INNER JOIN vt0 ON ((0Xffffffffdb7e86e3)|(((rt1.c0)!=(rt1.c2)))) WHERE (CASE WHEN QUOTE(vt0.c0) THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (((rt1.c0))<>((rt1.c2))) THEN CAST(rt1.c2 AS REAL) ELSE (((rt1.c2))<=((rt1.c1))) END) ORDER BY CAST(((rt1.c0)||(rt1.c1)) AS TEXT)  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((+ (x'')));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0)OR(((rt1.c2)*(rt1.c0)))))OR((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(((rt1.c2)*(rt1.c0)))))OR((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0)OR(((rt1.c2)*(rt1.c0)))))OR((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(((rt1.c2)*(rt1.c0)))))OR((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c0)OR(((rt1.c2)*(rt1.c0)))))OR((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)|((('-557489080') NOT NULL)))) ORDER BY (CASE rt1.c2  WHEN 's,' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)|((('-557489080') NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY (CASE rt1.c2  WHEN 's,' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ()));
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)|((('-557489080') NOT NULL)))) ORDER BY (CASE rt1.c2  WHEN 's,' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)|((('-557489080') NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY (CASE rt1.c2  WHEN 's,' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ()));
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)|((('-557489080') NOT NULL)))) ORDER BY (CASE rt1.c2  WHEN 's,' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END IN ());
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN (((rt1.c2 IN ()))) AND (((rt1.c1 IN (rt1.c1)))))) ORDER BY (~ (((rt1.c0)>(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN (((rt1.c2 IN ()))) AND (((rt1.c1 IN (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c0)>(rt1.c1)))) ASC);
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN (((rt1.c2 IN ()))) AND (((rt1.c1 IN (rt1.c1)))))) ORDER BY (~ (((rt1.c0)>(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN (((rt1.c2 IN ()))) AND (((rt1.c1 IN (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c0)>(rt1.c1)))) ASC);
SELECT * FROM rt1 WHERE ((((rt1.c1)) BETWEEN (((rt1.c2 IN ()))) AND (((rt1.c1 IN (rt1.c1)))))) ORDER BY (~ (((rt1.c0)>(rt1.c1)))) ASC;
SELECT ALL * FROM rt1, vt0 WHERE ((~ (rt1.c1)) COLLATE RTRIM) ORDER BY ((TYPEOF(rt1.c2)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((TYPEOF(rt1.c2)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((~ (rt1.c1)) COLLATE RTRIM) ORDER BY ((TYPEOF(rt1.c2)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((TYPEOF(rt1.c2)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((~ (rt1.c1)) COLLATE RTRIM) ORDER BY ((TYPEOF(rt1.c2)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CASE vt0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN rt1.c2 THEN ((rt1.c1) ISNULL) END) ORDER BY ((CAST(rt1.c1 AS BLOB))AND((((x'1b269d6ce545', vt0.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c0)) AND ((rt1.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN rt1.c2 THEN ((rt1.c1) ISNULL) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(rt1.c1 AS BLOB))AND((((x'1b269d6ce545', vt0.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c0)) AND ((rt1.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN rt1.c2 THEN ((rt1.c1) ISNULL) END) ORDER BY ((CAST(rt1.c1 AS BLOB))AND((((x'1b269d6ce545', vt0.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c0)) AND ((rt1.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN rt1.c2 THEN ((rt1.c1) ISNULL) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(rt1.c1 AS BLOB))AND((((x'1b269d6ce545', vt0.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c0)) AND ((rt1.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN rt1.c2 THEN ((rt1.c1) ISNULL) END) ORDER BY ((CAST(rt1.c1 AS BLOB))AND((((x'1b269d6ce545', vt0.c0, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c0)) AND ((rt1.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)), rt1.c0)) AND ((rt1.c1, ((vt0.c0)%(rt1.c2)), ((rt1.c1)<(rt1.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM)>(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)), rt1.c0)) AND ((rt1.c1, ((vt0.c0)%(rt1.c2)), ((rt1.c1)<(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)>(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)), rt1.c0)) AND ((rt1.c1, ((vt0.c0)%(rt1.c2)), ((rt1.c1)<(rt1.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM)>(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)), rt1.c0)) AND ((rt1.c1, ((vt0.c0)%(rt1.c2)), ((rt1.c1)<(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)>(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((CAST(vt0.c0 AS INTEGER), ((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)), rt1.c0)) AND ((rt1.c1, ((vt0.c0)%(rt1.c2)), ((rt1.c1)<(rt1.c0)))))) ORDER BY ((vt0.c0 COLLATE RTRIM)>(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, '\r-B''k', rt1.c0))))AND(CASE WHEN rt1.c1 THEN NULL END)))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1)%(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, '\r-B''k', rt1.c0))))AND(CASE WHEN rt1.c1 THEN NULL END)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1)%(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, '\r-B''k', rt1.c0))))AND(CASE WHEN rt1.c1 THEN NULL END)))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1)%(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, '\r-B''k', rt1.c0))))AND(CASE WHEN rt1.c1 THEN NULL END)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1)%(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((rt1.c2, rt1.c0, rt1.c0))>((rt1.c0, '\r-B''k', rt1.c0))))AND(CASE WHEN rt1.c1 THEN NULL END)))AND(vt0.c0 COLLATE BINARY))) ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c1)%(rt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN NULL THEN CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END) ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt0.c0)!=(rt1.c2)))) AND ((vt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS NUMERIC)  WHEN NULL THEN CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt0.c0)<>(rt1.c2)))) AND ((vt0.c0 COLLATE RTRIM))) ASC);
SELECT ALL * FROM rt1, vt0 WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN NULL THEN CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END) ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt0.c0)!=(rt1.c2)))) AND ((vt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS NUMERIC)  WHEN NULL THEN CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt0.c0)<>(rt1.c2)))) AND ((vt0.c0 COLLATE RTRIM))) ASC);
SELECT ALL * FROM rt1, vt0 WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN NULL THEN CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END) ORDER BY (((rt1.c0)) NOT BETWEEN ((((vt0.c0)!=(rt1.c2)))) AND ((vt0.c0 COLLATE RTRIM))) ASC;
SELECT ALL * FROM vt0 WHERE (IFNULL(((vt0.c0)>(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0)>(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(((vt0.c0)>(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0)>(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(((vt0.c0)>(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0 COLLATE RTRIM)OR((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2))))))AND(ABS(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0 COLLATE RTRIM)OR((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2))))))AND(ABS(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0 COLLATE RTRIM)OR((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2))))))AND(ABS(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0 COLLATE RTRIM)OR((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2))))))AND(ABS(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0 COLLATE RTRIM)OR((((rt1.c2, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c2, vt0.c0, rt1.c2))))))AND(ABS(DISTINCT rt1.c1))));
SELECT * FROM vt0, rt1 WHERE (NULLIF(DISTINCT ((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)), ((((vt0.c0)OR(rt1.c1)))OR(vt0.c0)))) ORDER BY rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)), ((((vt0.c0)OR(rt1.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 ASC);
SELECT * FROM vt0, rt1 WHERE (NULLIF(DISTINCT ((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)), ((((vt0.c0)OR(rt1.c1)))OR(vt0.c0)))) ORDER BY rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)), ((((vt0.c0)OR(rt1.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 ASC);
SELECT * FROM vt0, rt1 WHERE (NULLIF(DISTINCT ((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)), ((((vt0.c0)OR(rt1.c1)))OR(vt0.c0)))) ORDER BY rt1.c0 ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))<=((((0.1485330491773652, vt0.c0, rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((NULL, rt1.c1, '', rt1.c2, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2, rt1.c2, rt1.c0)))))) ORDER BY CASE WHEN '-552476864' THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END ELSE TRIM(DISTINCT rt1.c1) END  NULLS FIRST, ((((rt1.c0)<>(rt1.c1)))>(rt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))<=((((0.1485330491773652, vt0.c0, rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((NULL, rt1.c1, '', rt1.c2, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2, rt1.c2, rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN '-552476864' THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END ELSE TRIM(DISTINCT rt1.c1) END  NULLS FIRST, ((((rt1.c0)!=(rt1.c1)))>(rt1.c1)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))<=((((0.1485330491773652, vt0.c0, rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((NULL, rt1.c1, '', rt1.c2, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2, rt1.c2, rt1.c0)))))) ORDER BY CASE WHEN '-552476864' THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END ELSE TRIM(DISTINCT rt1.c1) END  NULLS FIRST, ((((rt1.c0)<>(rt1.c1)))>(rt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))<=((((0.1485330491773652, vt0.c0, rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((NULL, rt1.c1, '', rt1.c2, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2, rt1.c2, rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN '-552476864' THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END ELSE TRIM(DISTINCT rt1.c1) END  NULLS FIRST, ((((rt1.c0)!=(rt1.c1)))>(rt1.c1)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))<=((((0.1485330491773652, vt0.c0, rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((NULL, rt1.c1, '', rt1.c2, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2, rt1.c2, rt1.c0)))))) ORDER BY CASE WHEN '-552476864' THEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END ELSE TRIM(DISTINCT rt1.c1) END  NULLS FIRST, ((((rt1.c0)<>(rt1.c1)))>(rt1.c1)) ASC;
SELECT * FROM rt1, vt0 WHERE (((((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(SQLITE_COMPILEOPTION_USED(rt1.c2))))AND(((rt1.c2)AND(vt0.c0))))) ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))AND(DATE(rt1.c2, rt1.c1, vt0.c0, vt0.c0, rt1.c1))))AND('-1178980649')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(SQLITE_COMPILEOPTION_USED(rt1.c2))))AND(((rt1.c2)AND(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))AND(DATE(rt1.c2, rt1.c1, vt0.c0, vt0.c0, rt1.c1))))AND('-1178980649')) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(SQLITE_COMPILEOPTION_USED(rt1.c2))))AND(((rt1.c2)AND(vt0.c0))))) ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))AND(DATE(rt1.c2, rt1.c1, vt0.c0, vt0.c0, rt1.c1))))AND('-1178980649')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(SQLITE_COMPILEOPTION_USED(rt1.c2))))AND(((rt1.c2)AND(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))AND(DATE(rt1.c2, rt1.c1, vt0.c0, vt0.c0, rt1.c1))))AND('-1178980649')) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((SQLITE_COMPILEOPTION_USED(vt0.c0))OR(SQLITE_COMPILEOPTION_USED(rt1.c2))))AND(((rt1.c2)AND(vt0.c0))))) ORDER BY ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))AND(DATE(rt1.c2, rt1.c1, vt0.c0, vt0.c0, rt1.c1))))AND('-1178980649')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (('1532554205' IN ())))) ORDER BY ((x'')IS NOT(((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, (+ (rt1.c1)) DESC, ((((((((((vt0.c0)<=(rt1.c2)))AND(((0.4216831089110057)<>(rt1.c0)))))OR((vt0.c0 IN ()))))AND(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (('1532554205' IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((x'')IS NOT(((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, (+ (rt1.c1)) DESC, ((((((((((vt0.c0)<=(rt1.c2)))AND(((0.4216831089110057)!=(rt1.c0)))))OR((vt0.c0 IN ()))))AND(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (('1532554205' IN ())))) ORDER BY ((x'')IS NOT(((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, (+ (rt1.c1)) DESC, ((((((((((vt0.c0)<=(rt1.c2)))AND(((0.4216831089110057)<>(rt1.c0)))))OR((vt0.c0 IN ()))))AND(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (('1532554205' IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((x'')IS NOT(((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, (+ (rt1.c1)) DESC, ((((((((((vt0.c0)<=(rt1.c2)))AND(((0.4216831089110057)!=(rt1.c0)))))OR((vt0.c0 IN ()))))AND(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((- (('1532554205' IN ())))) ORDER BY ((x'')IS NOT(((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))) DESC, (+ (rt1.c1)) DESC, ((((((((((vt0.c0)<=(rt1.c2)))AND(((0.4216831089110057)<>(rt1.c0)))))OR((vt0.c0 IN ()))))AND(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0))<=(0.27774243357767225))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'03f3'))) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0))<=(0.27774243357767225))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'03f3'))) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0))<=(0.27774243357767225))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'03f3'))) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0))<=(0.27774243357767225))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'03f3'))) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TRIM(DISTINCT vt0.c0))<=(0.27774243357767225))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'03f3'))) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (UNLIKELY(((rt1.c2) BETWEEN (rt1.c0) AND ('Pp'))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt1.c2) BETWEEN (rt1.c0) AND ('Pp')))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (UNLIKELY(((rt1.c2) BETWEEN (rt1.c0) AND ('Pp'))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt1.c2) BETWEEN (rt1.c0) AND ('Pp')))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (UNLIKELY(((rt1.c2) BETWEEN (rt1.c0) AND ('Pp'))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((NOT (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((NOT (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((NOT (vt0.c0)) AS BLOB));
SELECT * FROM vt0 CROSS JOIN rt1 ON (('> I,') IS TRUE) WHERE (((CAST(rt1.c1 AS BLOB))>((rt1.c1 IN (vt0.c0, rt1.c0))))) ORDER BY (((~ (rt1.c2)))GLOB(rt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS BLOB))>((rt1.c1 IN (vt0.c0, rt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (('> I,') IS TRUE) ORDER BY (((~ (rt1.c2)))GLOB(rt1.c1)) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt1 ON (('> I,') IS TRUE) WHERE (((CAST(rt1.c1 AS BLOB))>((rt1.c1 IN (vt0.c0, rt1.c0))))) ORDER BY (((~ (rt1.c2)))GLOB(rt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS BLOB))>((rt1.c1 IN (vt0.c0, rt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (('> I,') IS TRUE) ORDER BY (((~ (rt1.c2)))GLOB(rt1.c1)) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt1 ON (('> I,') IS TRUE) WHERE (((CAST(rt1.c1 AS BLOB))>((rt1.c1 IN (vt0.c0, rt1.c0))))) ORDER BY (((~ (rt1.c2)))GLOB(rt1.c1)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)>>(vt0.c0))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()), (((NULL, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))<>((CAST(vt0.c0 AS REAL), ((vt0.c0)>(vt0.c0)), CASE x''  WHEN vt0.c0 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()), (((NULL, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))!=((CAST(vt0.c0 AS REAL), ((vt0.c0)>(vt0.c0)), CASE x''  WHEN vt0.c0 THEN vt0.c0 END))) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)>>(vt0.c0))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()), (((NULL, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))<>((CAST(vt0.c0 AS REAL), ((vt0.c0)>(vt0.c0)), CASE x''  WHEN vt0.c0 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()), (((NULL, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))!=((CAST(vt0.c0 AS REAL), ((vt0.c0)>(vt0.c0)), CASE x''  WHEN vt0.c0 THEN vt0.c0 END))) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)>>(vt0.c0))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()), (((NULL, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))<>((CAST(vt0.c0 AS REAL), ((vt0.c0)>(vt0.c0)), CASE x''  WHEN vt0.c0 THEN vt0.c0 END))) DESC;
SELECT ALL * FROM rt1, vt0 WHERE (((LIKELIHOOD(DISTINCT rt1.c1, 0.4963934852119848))AND(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt1.c1, 0.4963934852119848))AND(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((LIKELIHOOD(DISTINCT rt1.c1, 0.4963934852119848))AND(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt1.c1, 0.4963934852119848))AND(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((LIKELIHOOD(DISTINCT rt1.c1, 0.4963934852119848))AND(rt1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON json_array(((vt0.c0)AND(rt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, (((rt1.c0))>((rt1.c2))), ((vt0.c0)>=(rt1.c2))) WHERE (((((((((((((rt1.c0 COLLATE BINARY)AND(((rt1.c2)-(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))))OR((NULL IN (rt1.c0, rt1.c2)))))OR(rt1.c0)))OR(CASE '2058522574'  WHEN rt1.c2 THEN rt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c0 COLLATE BINARY)AND(((rt1.c2)-(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))))OR((NULL IN (rt1.c0, rt1.c2)))))OR(rt1.c0)))OR(CASE '2058522574'  WHEN rt1.c2 THEN rt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (x''))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON json_array(((vt0.c0)AND(rt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, (((rt1.c0))>((rt1.c2))), ((vt0.c0)>=(rt1.c2))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON json_array(((vt0.c0)AND(rt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, (((rt1.c0))>((rt1.c2))), ((vt0.c0)>=(rt1.c2))) WHERE (((((((((((((rt1.c0 COLLATE BINARY)AND(((rt1.c2)-(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))))OR((NULL IN (rt1.c0, rt1.c2)))))OR(rt1.c0)))OR(CASE '2058522574'  WHEN rt1.c2 THEN rt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c0 COLLATE BINARY)AND(((rt1.c2)-(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))))OR((NULL IN (rt1.c0, rt1.c2)))))OR(rt1.c0)))OR(CASE '2058522574'  WHEN rt1.c2 THEN rt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (x''))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON json_array(((vt0.c0)AND(rt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, (((rt1.c0))>((rt1.c2))), ((vt0.c0)>=(rt1.c2))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON json_array(((vt0.c0)AND(rt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, (((rt1.c0))>((rt1.c2))), ((vt0.c0)>=(rt1.c2))) WHERE (((((((((((((rt1.c0 COLLATE BINARY)AND(((rt1.c2)-(vt0.c0)))))AND(((((rt1.c2)AND(rt1.c2)))AND(vt0.c0)))))OR((NULL IN (rt1.c0, rt1.c2)))))OR(rt1.c0)))OR(CASE '2058522574'  WHEN rt1.c2 THEN rt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt1.c1) AND (x'')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0) NOTNULL))) ORDER BY (LIKELIHOOD(vt0.c0, 0.8559305657755145) IN ()) DESC, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY (LIKELIHOOD(vt0.c0, 0.8559305657755145) IN ()) DESC, vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0) NOTNULL))) ORDER BY (LIKELIHOOD(vt0.c0, 0.8559305657755145) IN ()) DESC, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY (LIKELIHOOD(vt0.c0, 0.8559305657755145) IN ()) DESC, vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0) NOTNULL))) ORDER BY (LIKELIHOOD(vt0.c0, 0.8559305657755145) IN ()) DESC, vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'c4bb') AND (vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'c4bb') AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'c4bb') AND (vt0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'c4bb') AND (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'c4bb') AND (vt0.c0))) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((NOT (rt1.c0))) BETWEEN (UNLIKELY(rt1.c1)) AND ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0))) BETWEEN (UNLIKELY(rt1.c1)) AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((NOT (rt1.c0))) BETWEEN (UNLIKELY(rt1.c1)) AND ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0))) BETWEEN (UNLIKELY(rt1.c1)) AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((NOT (rt1.c0))) BETWEEN (UNLIKELY(rt1.c1)) AND ((NOT (rt1.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE (ABS(rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (ABS(rt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (ABS(rt1.c0 COLLATE RTRIM));
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('27407058' COLLATE RTRIM)) AND ((NULL COLLATE NOCASE)))) ORDER BY ((NULL) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)%(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (('27407058' COLLATE RTRIM)) AND ((NULL COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)%(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('27407058' COLLATE RTRIM)) AND ((NULL COLLATE NOCASE)))) ORDER BY ((NULL) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)%(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (('27407058' COLLATE RTRIM)) AND ((NULL COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)%(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('27407058' COLLATE RTRIM)) AND ((NULL COLLATE NOCASE)))) ORDER BY ((NULL) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)%(vt0.c0)))) ASC;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)-(1.257838822E9))) ISNULL)) ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL), (NOT (rt1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(1.257838822E9))) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL), (NOT (rt1.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)-(1.257838822E9))) ISNULL)) ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL), (NOT (rt1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)-(1.257838822E9))) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL), (NOT (rt1.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)-(1.257838822E9))) ISNULL)) ORDER BY ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL), (NOT (rt1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT * FROM vt0 WHERE (CAST(0xfffffffff28a2f2f AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0Xfffffffff28a2f2f AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(0xfffffffff28a2f2f AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0Xfffffffff28a2f2f AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(0xfffffffff28a2f2f AS TEXT));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CASE WHEN rt1.c2 THEN vt0.c0 END)<<(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN vt0.c0 END)<<(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CASE WHEN rt1.c2 THEN vt0.c0 END)<<(CAST(rt1.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c2 THEN vt0.c0 END)<<(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CASE WHEN rt1.c2 THEN vt0.c0 END)<<(CAST(rt1.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY -1622607455 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 ORDER BY -1622607455 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY -1622607455 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 ORDER BY -1622607455 COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.5767652503776854 ELSE rt1.c0 END) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))) ORDER BY CAST(0.808695081341922 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.5767652503776854 ELSE rt1.c0 END) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(0.808695081341922 AS BLOB));
SELECT ALL * FROM vt0, rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.5767652503776854 ELSE rt1.c0 END) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))) ORDER BY CAST(0.808695081341922 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.5767652503776854 ELSE rt1.c0 END) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(0.808695081341922 AS BLOB));
SELECT ALL * FROM vt0, rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN 0.5767652503776854 ELSE rt1.c0 END) BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))))) ORDER BY CAST(0.808695081341922 AS BLOB);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE)IS NOT(rt1.c2 COLLATE BINARY))) ORDER BY 0.9667031985598624 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE)IS NOT(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.9667031985598624 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE)IS NOT(rt1.c2 COLLATE BINARY))) ORDER BY 0.9667031985598624 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE)IS NOT(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.9667031985598624 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE)IS NOT(rt1.c2 COLLATE BINARY))) ORDER BY 0.9667031985598624 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (json_object(CAST(rt1.c1 AS REAL), CAST(rt1.c1 AS BLOB))) ORDER BY ((rt1.c1 IN ()) IN (((rt1.c2)LIKE(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_object(CAST(rt1.c1 AS REAL), CAST(rt1.c1 AS BLOB))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 IN ()) IN (((rt1.c2)LIKE(rt1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (json_object(CAST(rt1.c1 AS REAL), CAST(rt1.c1 AS BLOB))) ORDER BY ((rt1.c1 IN ()) IN (((rt1.c2)LIKE(rt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_object(CAST(rt1.c1 AS REAL), CAST(rt1.c1 AS BLOB))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 IN ()) IN (((rt1.c2)LIKE(rt1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1a232d2) ORDER BY NULL  NULLS LAST, vt0.c0 DESC  NULLS FIRST, ((0.15543736010931153) NOT NULL);
SELECT SUM(count) FROM (SELECT ((0X1a232d2) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST, vt0.c0 DESC  NULLS FIRST, ((0.15543736010931153) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1a232d2) ORDER BY NULL  NULLS LAST, vt0.c0 DESC  NULLS FIRST, ((0.15543736010931153) NOT NULL);
SELECT SUM(count) FROM (SELECT ((0X1a232d2) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST, vt0.c0 DESC  NULLS FIRST, ((0.15543736010931153) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1a232d2) ORDER BY NULL  NULLS LAST, vt0.c0 DESC  NULLS FIRST, ((0.15543736010931153) NOT NULL);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END AS TEXT) WHERE (((CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)<>(((((rt1.c1)AND(rt1.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)!=(((((rt1.c1)AND(rt1.c0)))OR(x''))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END AS TEXT));
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END AS TEXT) WHERE (((CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)<>(((((rt1.c1)AND(rt1.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)!=(((((rt1.c1)AND(rt1.c0)))OR(x''))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END AS TEXT));
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 END AS TEXT) WHERE (((CASE x''  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)<>(((((rt1.c1)AND(rt1.c0)))OR(x'')))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'');
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0) ISNULL))<>(NULL))) ORDER BY (((((+ (rt1.c2)))OR(((-4821476) BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((rt1.c2)&(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))<>(NULL))) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED ORDER BY (((((+ (rt1.c2)))OR(((-4821476) BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((rt1.c2)&(rt1.c2)))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0) ISNULL))<>(NULL))) ORDER BY (((((+ (rt1.c2)))OR(((-4821476) BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((rt1.c2)&(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))<>(NULL))) IS TRUE)  as count FROM rt1, vt0 NOT INDEXED ORDER BY (((((+ (rt1.c2)))OR(((-4821476) BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((rt1.c2)&(rt1.c2)))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0) ISNULL))<>(NULL))) ORDER BY (((((+ (rt1.c2)))OR(((-4821476) BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((rt1.c2)&(rt1.c2)))) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, 0.052999266954090296, rt1.c1)) AND (((rt1.c1 IN (rt1.c2)), CAST(rt1.c1 AS REAL), TYPEOF(vt0.c0))))) ORDER BY ((json_extract(vt0.c0, '7C', x'', rt1.c1)) IS TRUE) ASC, QUOTE(((rt1.c0) NOT NULL)) DESC, ((((~ (vt0.c0))))<(((vt0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, 0.052999266954090296, rt1.c1)) AND (((rt1.c1 IN (rt1.c2)), CAST(rt1.c1 AS REAL), TYPEOF(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((json_extract(vt0.c0, '7C', x'', rt1.c1)) IS TRUE) ASC, QUOTE(((rt1.c0) NOT NULL)) DESC, ((((~ (vt0.c0))))<(((vt0.c0 IN ())))) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, 0.052999266954090296, rt1.c1)) AND (((rt1.c1 IN (rt1.c2)), CAST(rt1.c1 AS REAL), TYPEOF(vt0.c0))))) ORDER BY ((json_extract(vt0.c0, '7C', x'', rt1.c1)) IS TRUE) ASC, QUOTE(((rt1.c0) NOT NULL)) DESC, ((((~ (vt0.c0))))<(((vt0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, 0.052999266954090296, rt1.c1)) AND (((rt1.c1 IN (rt1.c2)), CAST(rt1.c1 AS REAL), TYPEOF(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((json_extract(vt0.c0, '7C', x'', rt1.c1)) IS TRUE) ASC, QUOTE(((rt1.c0) NOT NULL)) DESC, ((((~ (vt0.c0))))<(((vt0.c0 IN ())))) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, 0.052999266954090296, rt1.c1)) AND (((rt1.c1 IN (rt1.c2)), CAST(rt1.c1 AS REAL), TYPEOF(vt0.c0))))) ORDER BY ((json_extract(vt0.c0, '7C', x'', rt1.c1)) IS TRUE) ASC, QUOTE(((rt1.c0) NOT NULL)) DESC, ((((~ (vt0.c0))))<(((vt0.c0 IN ())))) DESC;
SELECT * FROM vt0 WHERE (HEX(vt0.c0));
SELECT SUM(count) FROM (SELECT ((HEX(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(vt0.c0));
SELECT SUM(count) FROM (SELECT ((HEX(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(vt0.c0));
SELECT ALL * FROM vt0 WHERE (IFNULL(COALESCE(vt0.c0, vt0.c0), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY (((NULL))=((((vt0.c0) NOTNULL))))  NULLS LAST, vt0.c0 ASC  NULLS LAST, (((((vt0.c0)&(vt0.c0)), ((vt0.c0)>(vt0.c0)), (- (vt0.c0))))>((((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(COALESCE(vt0.c0, vt0.c0), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL))=((((vt0.c0) NOTNULL))))  NULLS LAST, vt0.c0 ASC  NULLS LAST, (((((vt0.c0)&(vt0.c0)), ((vt0.c0)>(vt0.c0)), (- (vt0.c0))))>((((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (IFNULL(COALESCE(vt0.c0, vt0.c0), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY (((NULL))=((((vt0.c0) NOTNULL))))  NULLS LAST, vt0.c0 ASC  NULLS LAST, (((((vt0.c0)&(vt0.c0)), ((vt0.c0)>(vt0.c0)), (- (vt0.c0))))>((((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(COALESCE(vt0.c0, vt0.c0), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NULL))=((((vt0.c0) NOTNULL))))  NULLS LAST, vt0.c0 ASC  NULLS LAST, (((((vt0.c0)&(vt0.c0)), ((vt0.c0)>(vt0.c0)), (- (vt0.c0))))>((((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (IFNULL(COALESCE(vt0.c0, vt0.c0), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY (((NULL))=((((vt0.c0) NOTNULL))))  NULLS LAST, vt0.c0 ASC  NULLS LAST, (((((vt0.c0)&(vt0.c0)), ((vt0.c0)>(vt0.c0)), (- (vt0.c0))))>((((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((- (rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((- (rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((- (rt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2 IN ())) NOT NULL) WHERE (((((((x'')+(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))) ORDER BY 0.6974414457662259, ((((1084839185)AND((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(((rt1.c2)LIKE(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((x'')+(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2 IN ())) NOT NULL) ORDER BY 0.6974414457662259, ((((1084839185)AND((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(((rt1.c2)LIKE(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2 IN ())) NOT NULL) WHERE (((((((x'')+(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))) ORDER BY 0.6974414457662259, ((((1084839185)AND((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(((rt1.c2)LIKE(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((x'')+(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2 IN ())) NOT NULL) ORDER BY 0.6974414457662259, ((((1084839185)AND((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(((rt1.c2)LIKE(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2 IN ())) NOT NULL) WHERE (((((((x'')+(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)))OR(((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))) ORDER BY 0.6974414457662259, ((((1084839185)AND((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))))AND(((rt1.c2)LIKE(rt1.c0)))) DESC;
SELECT * FROM rt1, vt0 WHERE (CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c1 ASC);
SELECT * FROM rt1, vt0 WHERE (CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c1 ASC);
SELECT * FROM rt1, vt0 WHERE (CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 COLLATE BINARY ELSE (~ (rt1.c1)) END) ORDER BY rt1.c1 ASC;
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON 0.5293853884941002 WHERE (((('kK', vt0.c0, rt1.c2)) BETWEEN ((0.10270874436789978, (NOT (rt1.c2)), (((rt1.c2, rt1.c0, rt1.c2))<((rt1.c0, rt1.c2, vt0.c0))))) AND ((((((rt1.c0)AND(rt1.c2)))AND('2130460097')), rt1.c0 COLLATE NOCASE, (vt0.c0 IN (vt0.c0)))))) ORDER BY CAST(CAST(rt1.c1 AS REAL) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('kK', vt0.c0, rt1.c2)) BETWEEN ((0.10270874436789978, (NOT (rt1.c2)), (((rt1.c2, rt1.c0, rt1.c2))<((rt1.c0, rt1.c2, vt0.c0))))) AND ((((((rt1.c0)AND(rt1.c2)))AND('2130460097')), rt1.c0 COLLATE NOCASE, (vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON 0.5293853884941002 ORDER BY CAST(CAST(rt1.c1 AS REAL) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON 0.5293853884941002 WHERE (((('kK', vt0.c0, rt1.c2)) BETWEEN ((0.10270874436789978, (NOT (rt1.c2)), (((rt1.c2, rt1.c0, rt1.c2))<((rt1.c0, rt1.c2, vt0.c0))))) AND ((((((rt1.c0)AND(rt1.c2)))AND('2130460097')), rt1.c0 COLLATE NOCASE, (vt0.c0 IN (vt0.c0)))))) ORDER BY CAST(CAST(rt1.c1 AS REAL) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('kK', vt0.c0, rt1.c2)) BETWEEN ((0.10270874436789978, (NOT (rt1.c2)), (((rt1.c2, rt1.c0, rt1.c2))<((rt1.c0, rt1.c2, vt0.c0))))) AND ((((((rt1.c0)AND(rt1.c2)))AND('2130460097')), rt1.c0 COLLATE NOCASE, (vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON 0.5293853884941002 ORDER BY CAST(CAST(rt1.c1 AS REAL) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON 0.5293853884941002 WHERE (((('kK', vt0.c0, rt1.c2)) BETWEEN ((0.10270874436789978, (NOT (rt1.c2)), (((rt1.c2, rt1.c0, rt1.c2))<((rt1.c0, rt1.c2, vt0.c0))))) AND ((((((rt1.c0)AND(rt1.c2)))AND('2130460097')), rt1.c0 COLLATE NOCASE, (vt0.c0 IN (vt0.c0)))))) ORDER BY CAST(CAST(rt1.c1 AS REAL) AS TEXT)  NULLS LAST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((((((rt1.c0)=(vt0.c0)))OR(rt1.c0)))OR(((rt1.c2) BETWEEN (vt0.c0) AND (NULL)))))OR(((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)))OR(rt1.c2)))))AND(rt1.c1)) WHERE (((CAST(x'' AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((((((rt1.c0)==(vt0.c0)))OR(rt1.c0)))OR(((rt1.c2) BETWEEN (vt0.c0) AND (NULL)))))OR(((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)))OR(rt1.c2)))))AND(rt1.c1)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((((((rt1.c0)=(vt0.c0)))OR(rt1.c0)))OR(((rt1.c2) BETWEEN (vt0.c0) AND (NULL)))))OR(((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)))OR(rt1.c2)))))AND(rt1.c1)) WHERE (((CAST(x'' AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((((((rt1.c0)==(vt0.c0)))OR(rt1.c0)))OR(((rt1.c2) BETWEEN (vt0.c0) AND (NULL)))))OR(((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)))OR(rt1.c2)))))AND(rt1.c1)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((((((((rt1.c0)=(vt0.c0)))OR(rt1.c0)))OR(((rt1.c2) BETWEEN (vt0.c0) AND (NULL)))))OR(((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))OR(vt0.c0)))OR(rt1.c2)))))AND(rt1.c1)) WHERE (((CAST(x'' AS INTEGER)) IS TRUE));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON vt0.c0 WHERE (((((rt1.c0) ISNULL))<<(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) ISNULL))<<(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON vt0.c0);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON vt0.c0 WHERE (((((rt1.c0) ISNULL))<<(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) ISNULL))<<(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON vt0.c0);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON vt0.c0 WHERE (((((rt1.c0) ISNULL))<<(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CAST(rt1.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CHAR(CASE WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY ((((x'')AND(0X35b6b7a)))AND(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')AND(0x35b6b7a)))AND(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHAR(CASE WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY ((((x'')AND(0X35b6b7a)))AND(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')AND(0x35b6b7a)))AND(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHAR(CASE WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY ((((x'')AND(0X35b6b7a)))AND(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(LIKELIHOOD(DISTINCT rt1.c2, 0.7455969354758574) AS BLOB)) ORDER BY (- ((rt1.c2 IN (vt0.c0)))), json_valid((((rt1.c1, vt0.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, vt0.c0)) AND ((rt1.c1, -9.2802417E8, vt0.c0))))  NULLS LAST, CAST(((rt1.c2)|(rt1.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT rt1.c2, 0.7455969354758574) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- ((rt1.c2 IN (vt0.c0)))), json_valid((((rt1.c1, vt0.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, vt0.c0)) AND ((rt1.c1, -9.2802417E8, vt0.c0))))  NULLS LAST, CAST(((rt1.c2)|(rt1.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(LIKELIHOOD(DISTINCT rt1.c2, 0.7455969354758574) AS BLOB)) ORDER BY (- ((rt1.c2 IN (vt0.c0)))), json_valid((((rt1.c1, vt0.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, vt0.c0)) AND ((rt1.c1, -9.2802417E8, vt0.c0))))  NULLS LAST, CAST(((rt1.c2)|(rt1.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(DISTINCT rt1.c2, 0.7455969354758574) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- ((rt1.c2 IN (vt0.c0)))), json_valid((((rt1.c1, vt0.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, vt0.c0)) AND ((rt1.c1, -9.2802417E8, vt0.c0))))  NULLS LAST, CAST(((rt1.c2)|(rt1.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(LIKELIHOOD(DISTINCT rt1.c2, 0.7455969354758574) AS BLOB)) ORDER BY (- ((rt1.c2 IN (vt0.c0)))), json_valid((((rt1.c1, vt0.c0, rt1.c2)) BETWEEN ((rt1.c1, rt1.c0, vt0.c0)) AND ((rt1.c1, -9.2802417E8, vt0.c0))))  NULLS LAST, CAST(((rt1.c2)|(rt1.c2)) AS TEXT);
SELECT * FROM vt0, rt1 WHERE ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END))>(((NOT (vt0.c0)))))) ORDER BY TYPEOF(((rt1.c0) IS FALSE)) ASC  NULLS LAST, PRINTF(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END))>(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TYPEOF(((rt1.c0) IS FALSE)) ASC  NULLS LAST, PRINTF(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1))) DESC);
SELECT * FROM vt0, rt1 WHERE ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END))>(((NOT (vt0.c0)))))) ORDER BY TYPEOF(((rt1.c0) IS FALSE)) ASC  NULLS LAST, PRINTF(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END))>(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TYPEOF(((rt1.c0) IS FALSE)) ASC  NULLS LAST, PRINTF(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1))) DESC);
SELECT * FROM vt0, rt1 WHERE ((((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END))>(((NOT (vt0.c0)))))) ORDER BY TYPEOF(((rt1.c0) IS FALSE)) ASC  NULLS LAST, PRINTF(((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1))) DESC;
SELECT * FROM rt1 WHERE ('0.42857911974787155') ORDER BY ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('0.42857911974787155') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)) COLLATE NOCASE);
SELECT * FROM rt1 WHERE ('0.42857911974787155') ORDER BY ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('0.42857911974787155') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)) COLLATE NOCASE);
SELECT * FROM rt1 WHERE ('0.42857911974787155') ORDER BY ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)) COLLATE NOCASE;
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c1)+(rt1.c1)))OR(((vt0.c0) NOT NULL))))AND(((rt1.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)+(rt1.c1)))OR(((vt0.c0) NOT NULL))))AND(((rt1.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c1)+(rt1.c1)))OR(((vt0.c0) NOT NULL))))AND(((rt1.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)+(rt1.c1)))OR(((vt0.c0) NOT NULL))))AND(((rt1.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c1)+(rt1.c1)))OR(((vt0.c0) NOT NULL))))AND(((rt1.c1)+(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ ('dA甃\9x%\n')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ ('dA甃\9x%\n')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ ('dA甃\9x%\n')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ ('dA甃\9x%\n')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ ('dA甃\9x%\n')))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS NUMERIC));
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS BLOB))-(((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS BLOB))-(((((rt1.c1)OR(rt1.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS BLOB))-(((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS BLOB))-(((((rt1.c1)OR(rt1.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS BLOB))-(((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))));
SELECT * FROM vt0 WHERE ((~ (ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (ABS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (ABS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (ABS(vt0.c0))));
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((((TYPEOF(rt1.c1))OR(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(((rt1.c2)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(rt1.c1))OR(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(((rt1.c2)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((((TYPEOF(rt1.c1))OR(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(((rt1.c2)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(rt1.c1))OR(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(((rt1.c2)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((((TYPEOF(rt1.c1))OR(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(((rt1.c2)OR(vt0.c0)))));
SELECT ALL * FROM rt1 WHERE ((((NOT (rt1.c1)))IS(((rt1.c0)<(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1)))IS(((rt1.c0)<(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((NOT (rt1.c1)))IS(((rt1.c0)<(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1)))IS(((rt1.c0)<(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((NOT (rt1.c1)))IS(((rt1.c0)<(rt1.c0)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c1)<=(rt1.c1)))OR(((0.06628357369240323) IS FALSE))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)<=(rt1.c1)))OR(((0.06628357369240323) IS FALSE))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c1)<=(rt1.c1)))OR(((0.06628357369240323) IS FALSE))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)<=(rt1.c1)))OR(((0.06628357369240323) IS FALSE))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c1)<=(rt1.c1)))OR(((0.06628357369240323) IS FALSE))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) IS FALSE)) IS FALSE));
SELECT * FROM rt1 WHERE (((((rt1.c1)>(rt1.c2))) BETWEEN (x'') AND ((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)>(rt1.c2))) BETWEEN (x'') AND ((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1)>(rt1.c2))) BETWEEN (x'') AND ((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)>(rt1.c2))) BETWEEN (x'') AND ((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1)>(rt1.c2))) BETWEEN (x'') AND ((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c2, rt1.c2))))));
SELECT * FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c1 AS REAL) THEN ((((((((rt1.c2)AND(rt1.c1)))AND(vt0.c0)))AND(x'de6514bc')))AND(rt1.c1)) END WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, (vt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c1 AS REAL) THEN ((((((((rt1.c2)AND(rt1.c1)))AND(vt0.c0)))AND(x'de6514bc')))AND(rt1.c1)) END ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, (vt0.c0 IN ()) COLLATE RTRIM);
SELECT * FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c1 AS REAL) THEN ((((((((rt1.c2)AND(rt1.c1)))AND(vt0.c0)))AND(x'de6514bc')))AND(rt1.c1)) END WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, (vt0.c0 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c1 AS REAL) THEN ((((((((rt1.c2)AND(rt1.c1)))AND(vt0.c0)))AND(x'de6514bc')))AND(rt1.c1)) END ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, (vt0.c0 IN ()) COLLATE RTRIM);
SELECT * FROM vt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c1 AS REAL) THEN ((((((((rt1.c2)AND(rt1.c1)))AND(vt0.c0)))AND(x'de6514bc')))AND(rt1.c1)) END WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY ((((rt1.c2) ISNULL)) NOTNULL) ASC, (vt0.c0 IN ()) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) IS TRUE)) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((-1303292424)IS((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((-1303292424)IS((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((-1303292424)IS((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((-1303292424)IS((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((-1303292424)IS((rt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1 IN ()))GLOB((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))GLOB((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1 IN ()))GLOB((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))GLOB((- (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c1 IN ()))GLOB((- (rt1.c0)))));
SELECT * FROM rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((((rt1.c1) ISNULL), ((rt1.c2)GLOB(rt1.c1)), ((((rt1.c0)AND(0.5113762307061893)))AND(rt1.c0)))) AND (((+ (rt1.c1)), (rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0)))) ORDER BY (((rt1.c1)OR(rt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((((rt1.c1) ISNULL), ((rt1.c2)GLOB(rt1.c1)), ((((rt1.c0)AND(0.5113762307061893)))AND(rt1.c0)))) AND (((+ (rt1.c1)), (rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)OR(rt1.c0)) IN ())  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((((rt1.c1) ISNULL), ((rt1.c2)GLOB(rt1.c1)), ((((rt1.c0)AND(0.5113762307061893)))AND(rt1.c0)))) AND (((+ (rt1.c1)), (rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0)))) ORDER BY (((rt1.c1)OR(rt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((((rt1.c1) ISNULL), ((rt1.c2)GLOB(rt1.c1)), ((((rt1.c0)AND(0.5113762307061893)))AND(rt1.c0)))) AND (((+ (rt1.c1)), (rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)OR(rt1.c0)) IN ())  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((((rt1.c1) ISNULL), ((rt1.c2)GLOB(rt1.c1)), ((((rt1.c0)AND(0.5113762307061893)))AND(rt1.c0)))) AND (((+ (rt1.c1)), (rt1.c2 IN (rt1.c0, rt1.c1)), rt1.c0)))) ORDER BY (((rt1.c1)OR(rt1.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((-1215090611) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((-1215090611) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((-1215090611) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((-1215090611) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((-1215090611) NOTNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (x'ea80f2f4') ORDER BY (+ ((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'ea80f2f4') IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (x'ea80f2f4') ORDER BY (+ ((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'ea80f2f4') IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (x'ea80f2f4') ORDER BY (+ ((+ (vt0.c0)))) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0)AND(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0)AND(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)))<=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0)AND(vt0.c0))) NOTNULL)  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 END IN ()));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY, ((rt1.c0)OR(rt1.c2)), ((rt1.c2)IS NOT(rt1.c0)))) AND ((((rt1.c0)<(rt1.c0)), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)), rt1.c0)))) ORDER BY CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY, ((rt1.c0)OR(rt1.c2)), ((rt1.c2)IS NOT(rt1.c0)))) AND ((((rt1.c0)<(rt1.c0)), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)), rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY, ((rt1.c0)OR(rt1.c2)), ((rt1.c2)IS NOT(rt1.c0)))) AND ((((rt1.c0)<(rt1.c0)), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)), rt1.c0)))) ORDER BY CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY, ((rt1.c0)OR(rt1.c2)), ((rt1.c2)IS NOT(rt1.c0)))) AND ((((rt1.c0)<(rt1.c0)), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)), rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0 COLLATE BINARY, ((rt1.c0)OR(rt1.c2)), ((rt1.c2)IS NOT(rt1.c0)))) AND ((((rt1.c0)<(rt1.c0)), ((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)), rt1.c0)))) ORDER BY CASE WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c2))) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS INTEGER) ELSE MAX(vt0.c0, vt0.c0) END) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS INTEGER) ELSE MAX(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) IS FALSE) DESC);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS INTEGER) ELSE MAX(vt0.c0, vt0.c0) END) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS INTEGER) ELSE MAX(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) IS FALSE) DESC);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS INTEGER) ELSE MAX(vt0.c0, vt0.c0) END) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(NULL))) IS FALSE) DESC;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c1, 0.7071126942585721)) BETWEEN (((rt1.c0 IN ()), QUOTE(0.5078750056314988), IFNULL(rt1.c1, rt1.c2))) AND ((((rt1.c1)>>(NULL)), (NOT (rt1.c0)), (('-2119870143')%(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c1, 0.7071126942585721)) BETWEEN (((rt1.c0 IN ()), QUOTE(0.5078750056314988), IFNULL(rt1.c1, rt1.c2))) AND ((((rt1.c1)>>(NULL)), (NOT (rt1.c0)), (('-2119870143')%(rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c1, 0.7071126942585721)) BETWEEN (((rt1.c0 IN ()), QUOTE(0.5078750056314988), IFNULL(rt1.c1, rt1.c2))) AND ((((rt1.c1)>>(NULL)), (NOT (rt1.c0)), (('-2119870143')%(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c1, 0.7071126942585721)) BETWEEN (((rt1.c0 IN ()), QUOTE(0.5078750056314988), IFNULL(rt1.c1, rt1.c2))) AND ((((rt1.c1)>>(NULL)), (NOT (rt1.c0)), (('-2119870143')%(rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c1, 0.7071126942585721)) BETWEEN (((rt1.c0 IN ()), QUOTE(0.5078750056314988), IFNULL(rt1.c1, rt1.c2))) AND ((((rt1.c1)>>(NULL)), (NOT (rt1.c0)), (('-2119870143')%(rt1.c2))))));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)<=(vt0.c0))))) ORDER BY ((((vt0.c0) NOTNULL))GLOB((+ (vt0.c0))))  NULLS FIRST, '1907145901' DESC, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))GLOB((+ (vt0.c0))))  NULLS FIRST, '1907145901' DESC, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)<=(vt0.c0))))) ORDER BY ((((vt0.c0) NOTNULL))GLOB((+ (vt0.c0))))  NULLS FIRST, '1907145901' DESC, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))GLOB((+ (vt0.c0))))  NULLS FIRST, '1907145901' DESC, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)<=(vt0.c0))))) ORDER BY ((((vt0.c0) NOTNULL))GLOB((+ (vt0.c0))))  NULLS FIRST, '1907145901' DESC, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY (~ (LIKE(rt1.c2, rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY (~ (LIKE(rt1.c2, rt1.c0)))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY (~ (LIKE(rt1.c2, rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY (~ (LIKE(rt1.c2, rt1.c0)))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY (~ (LIKE(rt1.c2, rt1.c0)))  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN vt0 ON CASE vt0.c0  WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT 0X7bc752f6) ELSE 'R\nx' COLLATE NOCASE END WHERE (((CAST(rt1.c2 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CASE vt0.c0  WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT 0X7bc752f6) ELSE 'R\nx' COLLATE NOCASE END);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON CASE vt0.c0  WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT 0X7bc752f6) ELSE 'R\nx' COLLATE NOCASE END WHERE (((CAST(rt1.c2 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CASE vt0.c0  WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT 0X7bc752f6) ELSE 'R\nx' COLLATE NOCASE END);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON CASE vt0.c0  WHEN (rt1.c0 IN ()) THEN ABS(DISTINCT 0X7bc752f6) ELSE 'R\nx' COLLATE NOCASE END WHERE (((CAST(rt1.c2 AS INTEGER)) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL * FROM vt0 WHERE ('-2014089652');
SELECT SUM(count) FROM (SELECT ALL (('-2014089652') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-2014089652');
SELECT SUM(count) FROM (SELECT ALL (('-2014089652') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-2014089652');
SELECT * FROM rt1, vt0 WHERE (ROUND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), rt1.c2)) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), rt1.c2)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (ROUND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), rt1.c2)) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), rt1.c2)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (ROUND((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))), rt1.c2)) ORDER BY ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c2)IS NOT(rt1.c0))  WHEN ((rt1.c1)<=(rt1.c1)) THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)IS NOT(rt1.c0))  WHEN ((rt1.c1)<=(rt1.c1)) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c2)IS NOT(rt1.c0))  WHEN ((rt1.c1)<=(rt1.c1)) THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)IS NOT(rt1.c0))  WHEN ((rt1.c1)<=(rt1.c1)) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c2)IS NOT(rt1.c0))  WHEN ((rt1.c1)<=(rt1.c1)) THEN (rt1.c2 IN ()) END);
SELECT ALL * FROM vt0 WHERE (IFNULL((~ ('')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((~ ('')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL((~ ('')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((~ ('')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL((~ ('')), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON CASE TRIM(rt1.c1)  WHEN (rt1.c1 IN ()) THEN ((rt1.c2)<(vt0.c0)) END WHERE (((CAST(rt1.c1 AS BLOB)) BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(x''))) AND (0.9667031985598624 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB)) BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(x''))) AND (0.9667031985598624 COLLATE BINARY))) IS TRUE)  as count FROM rt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON CASE TRIM(rt1.c1)  WHEN (rt1.c1 IN ()) THEN ((rt1.c2)<(vt0.c0)) END);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON CASE TRIM(rt1.c1)  WHEN (rt1.c1 IN ()) THEN ((rt1.c2)<(vt0.c0)) END WHERE (((CAST(rt1.c1 AS BLOB)) BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(x''))) AND (0.9667031985598624 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB)) BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(x''))) AND (0.9667031985598624 COLLATE BINARY))) IS TRUE)  as count FROM rt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON CASE TRIM(rt1.c1)  WHEN (rt1.c1 IN ()) THEN ((rt1.c2)<(vt0.c0)) END);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON CASE TRIM(rt1.c1)  WHEN (rt1.c1 IN ()) THEN ((rt1.c2)<(vt0.c0)) END WHERE (((CAST(rt1.c1 AS BLOB)) BETWEEN (((((vt0.c0)AND(rt1.c0)))OR(x''))) AND (0.9667031985598624 COLLATE BINARY)));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))AND('')) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))AND('')) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND('')) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) ORDER BY (((((vt0.c0) IS FALSE)))<>((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST, ((vt0.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) IS FALSE)))!=((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST, ((vt0.c0) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) ORDER BY (((((vt0.c0) IS FALSE)))<>((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST, ((vt0.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) IS FALSE)))!=((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST, ((vt0.c0) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)==(vt0.c0)) WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) ORDER BY (((((vt0.c0) IS FALSE)))<>((CAST(vt0.c0 AS INTEGER))))  NULLS FIRST, ((vt0.c0) NOTNULL) DESC;
SELECT ALL * FROM rt1 WHERE ('[ ^O	^') ORDER BY (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<(((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, 0xffffffff9cea61ac, rt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c0)))))) DESC  NULLS FIRST, ((COALESCE(rt1.c0, rt1.c0))<(x'')) ASC, CAST((((rt1.c1))>=((rt1.c1))) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('[ ^O	^') IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<(((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, 0Xffffffff9cea61ac, rt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c0)))))) DESC  NULLS FIRST, ((COALESCE(rt1.c0, rt1.c0))<(x'')) ASC, CAST((((rt1.c1))>=((rt1.c1))) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ('[ ^O	^') ORDER BY (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<(((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, 0xffffffff9cea61ac, rt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c0)))))) DESC  NULLS FIRST, ((COALESCE(rt1.c0, rt1.c0))<(x'')) ASC, CAST((((rt1.c1))>=((rt1.c1))) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('[ ^O	^') IS TRUE)  as count FROM rt1 ORDER BY (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<(((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, 0Xffffffff9cea61ac, rt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c0)))))) DESC  NULLS FIRST, ((COALESCE(rt1.c0, rt1.c0))<(x'')) ASC, CAST((((rt1.c1))>=((rt1.c1))) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ('[ ^O	^') ORDER BY (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END))<(((((rt1.c1, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, 0xffffffff9cea61ac, rt1.c0)) AND ((rt1.c1, rt1.c0, rt1.c0)))))) DESC  NULLS FIRST, ((COALESCE(rt1.c0, rt1.c0))<(x'')) ASC, CAST((((rt1.c1))>=((rt1.c1))) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'' COLLATE BINARY) ORDER BY vt0.c0 DESC  NULLS LAST, (((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)))OR(vt0.c0))  NULLS LAST, (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST, (((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)))OR(vt0.c0))  NULLS LAST, (~ (vt0.c0)));
SELECT ALL * FROM vt0 WHERE (x'' COLLATE BINARY) ORDER BY vt0.c0 DESC  NULLS LAST, (((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)))OR(vt0.c0))  NULLS LAST, (~ (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST, (((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)))OR(vt0.c0))  NULLS LAST, (~ (vt0.c0)));
SELECT ALL * FROM vt0 WHERE (x'' COLLATE BINARY) ORDER BY vt0.c0 DESC  NULLS LAST, (((((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)))OR(vt0.c0))  NULLS LAST, (~ (vt0.c0));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0)=(rt1.c1)) AS BLOB) WHERE ((- (CASE WHEN rt1.c2 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c2 THEN NULL END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0)==(rt1.c1)) AS BLOB));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0)=(rt1.c1)) AS BLOB) WHERE ((- (CASE WHEN rt1.c2 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c2 THEN NULL END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0)==(rt1.c1)) AS BLOB));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0)=(rt1.c1)) AS BLOB) WHERE ((- (CASE WHEN rt1.c2 THEN NULL END)));
SELECT ALL * FROM vt0 WHERE (((((NULL) BETWEEN ('0.8165412295144283') AND (vt0.c0)))*(NULL))) ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, CAST((~ (vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN ('0.8165412295144283') AND (vt0.c0)))*(NULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, CAST((~ (vt0.c0)) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (((((NULL) BETWEEN ('0.8165412295144283') AND (vt0.c0)))*(NULL))) ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, CAST((~ (vt0.c0)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN ('0.8165412295144283') AND (vt0.c0)))*(NULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, CAST((~ (vt0.c0)) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (((((NULL) BETWEEN ('0.8165412295144283') AND (vt0.c0)))*(NULL))) ORDER BY vt0.c0 COLLATE NOCASE DESC  NULLS FIRST, CAST((~ (vt0.c0)) AS TEXT) DESC;
SELECT * FROM vt0 WHERE ((((350750882, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT NULL), '|忧now3x)')) AND (((((vt0.c0, vt0.c0, vt0.c0, 0.6832095078540198, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)!=(vt0.c0)), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((350750882, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT NULL), '|忧now3x)')) AND (((((vt0.c0, vt0.c0, vt0.c0, 0.6832095078540198, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<>(vt0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((350750882, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT NULL), '|忧now3x)')) AND (((((vt0.c0, vt0.c0, vt0.c0, 0.6832095078540198, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)!=(vt0.c0)), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((350750882, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT NULL), '|忧now3x)')) AND (((((vt0.c0, vt0.c0, vt0.c0, 0.6832095078540198, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<>(vt0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((350750882, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0) NOT NULL), '|忧now3x)')) AND (((((vt0.c0, vt0.c0, vt0.c0, 0.6832095078540198, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)!=(vt0.c0)), vt0.c0 COLLATE RTRIM))));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) IS FALSE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND ((vt0.c0 IN ())))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) DESC  NULLS FIRST, CAST(HEX(DISTINCT NULL) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) DESC  NULLS FIRST, CAST(HEX(DISTINCT NULL) AS REAL)  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) IS FALSE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND ((vt0.c0 IN ())))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) DESC  NULLS FIRST, CAST(HEX(DISTINCT NULL) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) DESC  NULLS FIRST, CAST(HEX(DISTINCT NULL) AS REAL)  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1) IS FALSE)) BETWEEN (CAST(rt1.c2 AS REAL)) AND ((vt0.c0 IN ())))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) DESC  NULLS FIRST, CAST(HEX(DISTINCT NULL) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c1 END IN ()));
SELECT * FROM vt0, rt1 WHERE (0.11634029281390368) ORDER BY ((((rt1.c2) BETWEEN (0.32825227674978263) AND (rt1.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.11634029281390368) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2) BETWEEN (0.32825227674978263) AND (rt1.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (0.11634029281390368) ORDER BY ((((rt1.c2) BETWEEN (0.32825227674978263) AND (rt1.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.11634029281390368) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2) BETWEEN (0.32825227674978263) AND (rt1.c0))) NOTNULL)  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (0.11634029281390368) ORDER BY ((((rt1.c2) BETWEEN (0.32825227674978263) AND (rt1.c0))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, vt0.c0, 2.37541314E8))>=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE ((vt0.c0)<=(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (- (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, vt0.c0, 2.37541314E8))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)<=(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (- (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, vt0.c0, 2.37541314E8))>=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE ((vt0.c0)<=(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (- (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, vt0.c0, 2.37541314E8))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)<=(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (- (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, vt0.c0, 2.37541314E8))>=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE ((vt0.c0)<=(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN (- (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((rt1.c0)LIKE(rt1.c2)))OR(0.5909786478941687)))OR((rt1.c2 IN (rt1.c0)))))AND(((NULL)%(rt1.c2)))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)LIKE(rt1.c2)))OR(0.5909786478941687)))OR((rt1.c2 IN (rt1.c0)))))AND(((NULL)%(rt1.c2)))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((rt1.c0)LIKE(rt1.c2)))OR(0.5909786478941687)))OR((rt1.c2 IN (rt1.c0)))))AND(((NULL)%(rt1.c2)))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)LIKE(rt1.c2)))OR(0.5909786478941687)))OR((rt1.c2 IN (rt1.c0)))))AND(((NULL)%(rt1.c2)))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((rt1.c0)LIKE(rt1.c2)))OR(0.5909786478941687)))OR((rt1.c2 IN (rt1.c0)))))AND(((NULL)%(rt1.c2)))))OR(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 END)));
SELECT ALL * FROM vt0 WHERE ((NULL IN ())) ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NULL IN ())) ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NULL IN ())) ORDER BY (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON SQLITE_VERSION() WHERE ((~ (((rt1.c1)*(rt1.c0))))) ORDER BY (+ ((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1)*(rt1.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON SQLITE_VERSION() ORDER BY (+ ((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON SQLITE_VERSION() WHERE ((~ (((rt1.c1)*(rt1.c0))))) ORDER BY (+ ((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1)*(rt1.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON SQLITE_VERSION() ORDER BY (+ ((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON SQLITE_VERSION() WHERE ((~ (((rt1.c1)*(rt1.c0))))) ORDER BY (+ ((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)/(rt1.c1)))>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/(rt1.c1)))>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)/(rt1.c1)))>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)/(rt1.c1)))>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1)/(rt1.c1)))>=(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(LIKELIHOOD(vt0.c0, 0.23992504795222724)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(LIKELIHOOD(vt0.c0, 0.23992504795222724))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(LIKELIHOOD(vt0.c0, 0.23992504795222724)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(LIKELIHOOD(vt0.c0, 0.23992504795222724))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (TRIM(LIKELIHOOD(vt0.c0, 0.23992504795222724)));
SELECT * FROM vt0 WHERE ((((0.2974600684622556 IN (vt0.c0, vt0.c0)))>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((0.2974600684622556 IN (vt0.c0, vt0.c0)))>>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((0.2974600684622556 IN (vt0.c0, vt0.c0)))>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((0.2974600684622556 IN (vt0.c0, vt0.c0)))>>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((0.2974600684622556 IN (vt0.c0, vt0.c0)))>>(vt0.c0)));
SELECT ALL * FROM rt1 WHERE (highlight(((rt1.c2)/(rt1.c1)), (rt1.c1 IN (rt1.c0)), rt1.c1 COLLATE BINARY, CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt1.c2)/(rt1.c1)), (rt1.c1 IN (rt1.c0)), rt1.c1 COLLATE BINARY, CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (highlight(((rt1.c2)/(rt1.c1)), (rt1.c1 IN (rt1.c0)), rt1.c1 COLLATE BINARY, CAST(rt1.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt1.c2)/(rt1.c1)), (rt1.c1 IN (rt1.c0)), rt1.c1 COLLATE BINARY, CAST(rt1.c2 AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- ('y('))) ORDER BY (((((x'')) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL), rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT (((- ('y('))) IS TRUE)  as count FROM rt1 ORDER BY (((((x'')) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL), rt1.c1 ASC);
SELECT ALL * FROM rt1 WHERE ((- ('y('))) ORDER BY (((((x'')) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL), rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT (((- ('y('))) IS TRUE)  as count FROM rt1 ORDER BY (((((x'')) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL), rt1.c1 ASC);
SELECT ALL * FROM rt1 WHERE ((- ('y('))) ORDER BY (((((x'')) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) NOT NULL), rt1.c1 ASC;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND (x''))) ORDER BY CAST(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND (x''))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND (x''))) ORDER BY CAST(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND (x''))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) BETWEEN ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND (x''))) ORDER BY CAST(CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END AS TEXT)  NULLS FIRST;
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((NULL) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ('W1bQ!' IN ()) THEN ((0xffffffffa659fc95) IS TRUE) END) ORDER BY CAST(rt1.c1 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ('W1bQ!' IN ()) THEN ((0xffffffffa659fc95) IS TRUE) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ('W1bQ!' IN ()) THEN ((0xffffffffa659fc95) IS TRUE) END) ORDER BY CAST(rt1.c1 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ('W1bQ!' IN ()) THEN ((0xffffffffa659fc95) IS TRUE) END) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ('W1bQ!' IN ()) THEN ((0xffffffffa659fc95) IS TRUE) END) ORDER BY CAST(rt1.c1 AS INTEGER) ASC;
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))*(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))*(rt1.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))*(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))*(rt1.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))*(rt1.c0)));
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (rt1.c1))) BETWEEN (vt0.c0) AND ((x'' IN ())))) ORDER BY ((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(vt0.c0))) AND (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))) ASC  NULLS FIRST, ((((((vt0.c0)<=(rt1.c1)))OR(((-9.2802417E8) IS FALSE))))AND(((((vt0.c0)AND(-1859106331)))AND(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt1.c1))) BETWEEN (vt0.c0) AND ((x'' IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(vt0.c0))) AND (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))) ASC  NULLS FIRST, ((((((vt0.c0)<=(rt1.c1)))OR(((-9.2802417E8) IS FALSE))))AND(((((vt0.c0)AND(-1859106331)))AND(rt1.c2)))) DESC);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (rt1.c1))) BETWEEN (vt0.c0) AND ((x'' IN ())))) ORDER BY ((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(vt0.c0))) AND (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))) ASC  NULLS FIRST, ((((((vt0.c0)<=(rt1.c1)))OR(((-9.2802417E8) IS FALSE))))AND(((((vt0.c0)AND(-1859106331)))AND(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt1.c1))) BETWEEN (vt0.c0) AND ((x'' IN ())))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(vt0.c0))) AND (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))) ASC  NULLS FIRST, ((((((vt0.c0)<=(rt1.c1)))OR(((-9.2802417E8) IS FALSE))))AND(((((vt0.c0)AND(-1859106331)))AND(rt1.c2)))) DESC);
SELECT ALL * FROM rt1 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (rt1.c1))) BETWEEN (vt0.c0) AND ((x'' IN ())))) ORDER BY ((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END) BETWEEN (((((rt1.c1)AND(rt1.c0)))OR(vt0.c0))) AND (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))) ASC  NULLS FIRST, ((((((vt0.c0)<=(rt1.c1)))OR(((-9.2802417E8) IS FALSE))))AND(((((vt0.c0)AND(-1859106331)))AND(rt1.c2)))) DESC;
SELECT COUNT(*) FROM rt1 WHERE ((NOT ((x'30be' IN ())))) ORDER BY (((('-2047137238') NOTNULL))>(LIKELIHOOD(DISTINCT rt1.c1, 0.04961223495570888))) DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))<=((((rt1.c2)=(rt1.c0))))) ASC, (((NOT (rt1.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((x'30be' IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((('-2047137238') NOTNULL))>(LIKELIHOOD(DISTINCT rt1.c1, 0.04961223495570888))) DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))<=((((rt1.c2)==(rt1.c0))))) ASC, (((NOT (rt1.c2))) NOTNULL) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((NOT ((x'30be' IN ())))) ORDER BY (((('-2047137238') NOTNULL))>(LIKELIHOOD(DISTINCT rt1.c1, 0.04961223495570888))) DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))<=((((rt1.c2)=(rt1.c0))))) ASC, (((NOT (rt1.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((x'30be' IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (((('-2047137238') NOTNULL))>(LIKELIHOOD(DISTINCT rt1.c1, 0.04961223495570888))) DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))<=((((rt1.c2)==(rt1.c0))))) ASC, (((NOT (rt1.c2))) NOTNULL) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((NOT ((x'30be' IN ())))) ORDER BY (((('-2047137238') NOTNULL))>(LIKELIHOOD(DISTINCT rt1.c1, 0.04961223495570888))) DESC  NULLS FIRST, (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END))<=((((rt1.c2)=(rt1.c0))))) ASC, (((NOT (rt1.c2))) NOTNULL) DESC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt1, vt0 WHERE (SUBSTR('0.01817582792963912', ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) ORDER BY (((rt1.c1) IS TRUE) IN (rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END)GLOB(((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))), (((((NOT (x'')))AND(((0X6835229c) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR('0.01817582792963912', ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1) IS TRUE) IN (rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END)GLOB(((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))), (((((NOT (x'')))AND(((0X6835229c) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(x''))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (SUBSTR('0.01817582792963912', ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) ORDER BY (((rt1.c1) IS TRUE) IN (rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END)GLOB(((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))), (((((NOT (x'')))AND(((0X6835229c) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR('0.01817582792963912', ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1) IS TRUE) IN (rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END)GLOB(((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))), (((((NOT (x'')))AND(((0X6835229c) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(x''))  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (SUBSTR('0.01817582792963912', ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)))) ORDER BY (((rt1.c1) IS TRUE) IN (rt1.c0 COLLATE RTRIM)) ASC  NULLS LAST, ((CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END)GLOB(((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))), (((((NOT (x'')))AND(((0X6835229c) NOT BETWEEN (NULL) AND (rt1.c1)))))OR(x''))  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)OR((('?')/(0.29312621866756905)))))AND(((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))))OR(UNICODE(rt1.c1))))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE BINARY)OR((('?')/(0.29312621866756905)))))AND(((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))))OR(UNICODE(rt1.c1))))AND(rt1.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)OR((('?')/(0.29312621866756905)))))AND(((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))))OR(UNICODE(rt1.c1))))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE BINARY)OR((('?')/(0.29312621866756905)))))AND(((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))))OR(UNICODE(rt1.c1))))AND(rt1.c0))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((vt0.c0 COLLATE BINARY)OR((('?')/(0.29312621866756905)))))AND(((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))))OR(UNICODE(rt1.c1))))AND(rt1.c0)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS(rt1.c2))) NOT NULL) WHERE (((CAST(NULL AS REAL))%(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL))%(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS(rt1.c2))) NOT NULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS(rt1.c2))) NOT NULL) WHERE (((CAST(NULL AS REAL))%(rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL))%(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS(rt1.c2))) NOT NULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)IS(rt1.c2))) NOT NULL) WHERE (((CAST(NULL AS REAL))%(rt1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((+ (CASE '-386401960'  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE '-386401960'  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((+ (CASE '-386401960'  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE '-386401960'  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((+ (CASE '-386401960'  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) NOT NULL) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 AS REAL)) ORDER BY ((((CAST(rt1.c1 AS TEXT))AND((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))AND((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))), rt1.c2 DESC, CAST(rt1.c2 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c1 AS TEXT))AND((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))AND((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))), rt1.c2 DESC, CAST(rt1.c2 AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 AS REAL)) ORDER BY ((((CAST(rt1.c1 AS TEXT))AND((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))AND((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))), rt1.c2 DESC, CAST(rt1.c2 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c1 AS TEXT))AND((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))AND((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))), rt1.c2 DESC, CAST(rt1.c2 AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 AS REAL)) ORDER BY ((((CAST(rt1.c1 AS TEXT))AND((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))))AND((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))), rt1.c2 DESC, CAST(rt1.c2 AS TEXT)  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)IS(1.814769327E9)))>>(NULL))) ORDER BY CAST(((rt1.c2) ISNULL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS(1.814769327E9)))>>(NULL))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2) ISNULL) AS REAL) DESC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)IS(1.814769327E9)))>>(NULL))) ORDER BY CAST(((rt1.c2) ISNULL) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)IS(1.814769327E9)))>>(NULL))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2) ISNULL) AS REAL) DESC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)IS(1.814769327E9)))>>(NULL))) ORDER BY CAST(((rt1.c2) ISNULL) AS REAL) DESC;
SELECT * FROM rt1, vt0 WHERE (CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 END) ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 END) ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN rt1.c1 COLLATE RTRIM THEN rt1.c2 END) ORDER BY (vt0.c0 COLLATE BINARY IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (CHANGES()) ORDER BY CASE CAST(rt1.c2 AS REAL)  WHEN rt1.c1 THEN (+ (rt1.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END END  NULLS FIRST, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE CAST(rt1.c2 AS REAL)  WHEN rt1.c1 THEN (+ (rt1.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END END  NULLS FIRST, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CHANGES()) ORDER BY CASE CAST(rt1.c2 AS REAL)  WHEN rt1.c1 THEN (+ (rt1.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END END  NULLS FIRST, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE CAST(rt1.c2 AS REAL)  WHEN rt1.c1 THEN (+ (rt1.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END END  NULLS FIRST, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CHANGES()) ORDER BY CASE CAST(rt1.c2 AS REAL)  WHEN rt1.c1 THEN (+ (rt1.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END END  NULLS FIRST, (NOT (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)))) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c0)))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c0)))AND(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c0)))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c0)))AND(rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1 IN (rt1.c0)))AND(rt1.c1)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND (CAST(rt1.c0 AS REAL))) WHERE (x'') ORDER BY (((rt1.c0)||(rt1.c2)) IN (((rt1.c0) IS FALSE), (~ (rt1.c1))))  NULLS FIRST, ((((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN rt1 ON (((NOT (rt1.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND (CAST(rt1.c0 AS REAL))) ORDER BY (((rt1.c0)||(rt1.c2)) IN (((rt1.c0) IS FALSE), (~ (rt1.c1))))  NULLS FIRST, ((((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND (CAST(rt1.c0 AS REAL))) WHERE (x'') ORDER BY (((rt1.c0)||(rt1.c2)) IN (((rt1.c0) IS FALSE), (~ (rt1.c1))))  NULLS FIRST, ((((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN rt1 ON (((NOT (rt1.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND (CAST(rt1.c0 AS REAL))) ORDER BY (((rt1.c0)||(rt1.c2)) IN (((rt1.c0) IS FALSE), (~ (rt1.c1))))  NULLS FIRST, ((((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (((NOT (rt1.c0))) NOT BETWEEN (NULL COLLATE BINARY) AND (CAST(rt1.c0 AS REAL))) WHERE (x'') ORDER BY (((rt1.c0)||(rt1.c2)) IN (((rt1.c0) IS FALSE), (~ (rt1.c1))))  NULLS FIRST, ((((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0))) IS TRUE) ASC;
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT ((rt1.c2)LIKE(rt1.c2)), ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)OR(((rt1.c2) IS TRUE))))AND((((rt1.c1, rt1.c2, rt1.c1))<>((rt1.c0, rt1.c2, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt1.c2)LIKE(rt1.c2)), ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)OR(((rt1.c2) IS TRUE))))AND((((rt1.c1, rt1.c2, rt1.c1))!=((rt1.c0, rt1.c2, rt1.c2))))));
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT ((rt1.c2)LIKE(rt1.c2)), ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)OR(((rt1.c2) IS TRUE))))AND((((rt1.c1, rt1.c2, rt1.c1))<>((rt1.c0, rt1.c2, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt1.c2)LIKE(rt1.c2)), ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)OR(((rt1.c2) IS TRUE))))AND((((rt1.c1, rt1.c2, rt1.c1))!=((rt1.c0, rt1.c2, rt1.c2))))));
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT ((rt1.c2)LIKE(rt1.c2)), ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0)))) ORDER BY ((((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)OR(((rt1.c2) IS TRUE))))AND((((rt1.c1, rt1.c2, rt1.c1))<>((rt1.c0, rt1.c2, rt1.c2)))));
SELECT * FROM vt0, rt1 WHERE (NULL COLLATE RTRIM) ORDER BY CASE INSTR(rt1.c0, rt1.c0)  WHEN (rt1.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE INSTR(rt1.c0, rt1.c0)  WHEN (rt1.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (NULL COLLATE RTRIM) ORDER BY CASE INSTR(rt1.c0, rt1.c0)  WHEN (rt1.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE INSTR(rt1.c0, rt1.c0)  WHEN (rt1.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (NULL COLLATE RTRIM) ORDER BY CASE INSTR(rt1.c0, rt1.c0)  WHEN (rt1.c1 IN ()) THEN CAST(vt0.c0 AS BLOB) END  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS INTEGER))))) ORDER BY (- (''));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY (- ('')));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS INTEGER))))) ORDER BY (- (''));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY (- ('')));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS INTEGER))))) ORDER BY (- (''));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)!=(rt1.c1)))AND(CAST(rt1.c2 AS INTEGER))))OR(rt1.c2 COLLATE NOCASE)) WHERE ((((((vt0.c0)IS(vt0.c0))))<((UNICODE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS(vt0.c0))))<((UNICODE(rt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)<>(rt1.c1)))AND(CAST(rt1.c2 AS INTEGER))))OR(rt1.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)!=(rt1.c1)))AND(CAST(rt1.c2 AS INTEGER))))OR(rt1.c2 COLLATE NOCASE)) WHERE ((((((vt0.c0)IS(vt0.c0))))<((UNICODE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS(vt0.c0))))<((UNICODE(rt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)<>(rt1.c1)))AND(CAST(rt1.c2 AS INTEGER))))OR(rt1.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)!=(rt1.c1)))AND(CAST(rt1.c2 AS INTEGER))))OR(rt1.c2 COLLATE NOCASE)) WHERE ((((((vt0.c0)IS(vt0.c0))))<((UNICODE(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))+(STRFTIME(rt1.c1, 0.8695356986174331, rt1.c1, rt1.c0, rt1.c2))) WHERE ((((~ (rt1.c2))) NOT BETWEEN (COALESCE(DISTINCT rt1.c0, vt0.c0)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) NOT BETWEEN (COALESCE(DISTINCT rt1.c0, vt0.c0)) AND (x''))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))+(STRFTIME(rt1.c1, 0.8695356986174331, rt1.c1, rt1.c0, rt1.c2))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))+(STRFTIME(rt1.c1, 0.8695356986174331, rt1.c1, rt1.c0, rt1.c2))) WHERE ((((~ (rt1.c2))) NOT BETWEEN (COALESCE(DISTINCT rt1.c0, vt0.c0)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) NOT BETWEEN (COALESCE(DISTINCT rt1.c0, vt0.c0)) AND (x''))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))+(STRFTIME(rt1.c1, 0.8695356986174331, rt1.c1, rt1.c0, rt1.c2))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))))+(STRFTIME(rt1.c1, 0.8695356986174331, rt1.c1, rt1.c0, rt1.c2))) WHERE ((((~ (rt1.c2))) NOT BETWEEN (COALESCE(DISTINCT rt1.c0, vt0.c0)) AND (x'')));
SELECT COUNT(*) FROM rt1 WHERE (((UPPER(DISTINCT rt1.c2))/((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt1.c2))/((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((UPPER(DISTINCT rt1.c2))/((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT rt1.c2))/((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((UPPER(DISTINCT rt1.c2))/((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (((vt0.c0 IN ()), (+ (vt0.c0)), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((HEX(DISTINCT rt1.c2), CAST(vt0.c0 AS NUMERIC), ((rt1.c1) BETWEEN ('-1178980649') AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (((vt0.c0 IN ()), (+ (vt0.c0)), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((HEX(DISTINCT rt1.c2), CAST(vt0.c0 AS NUMERIC), ((rt1.c1) BETWEEN ('-1178980649') AND (rt1.c0))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (((vt0.c0 IN ()), (+ (vt0.c0)), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((HEX(DISTINCT rt1.c2), CAST(vt0.c0 AS NUMERIC), ((rt1.c1) BETWEEN ('-1178980649') AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (((vt0.c0 IN ()), (+ (vt0.c0)), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((HEX(DISTINCT rt1.c2), CAST(vt0.c0 AS NUMERIC), ((rt1.c1) BETWEEN ('-1178980649') AND (rt1.c0))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY (((rt1.c2, rt1.c1, rt1.c2)) BETWEEN (((vt0.c0 IN ()), (+ (vt0.c0)), ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) AND ((HEX(DISTINCT rt1.c2), CAST(vt0.c0 AS NUMERIC), ((rt1.c1) BETWEEN ('-1178980649') AND (rt1.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c2);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(((vt0.c0) ISNULL))))AND(vt0.c0))) ORDER BY x'ad74'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((vt0.c0) ISNULL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY x'ad74'  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(((vt0.c0) ISNULL))))AND(vt0.c0))) ORDER BY x'ad74'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((vt0.c0) ISNULL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY x'ad74'  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(((vt0.c0) ISNULL))))AND(vt0.c0))) ORDER BY x'ad74'  NULLS FIRST;
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (CAST(((rt1.c2) BETWEEN (0.005449095126735859) AND (rt1.c1)) AS TEXT)) ORDER BY CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) BETWEEN (0.005449095126735859) AND (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL));
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (CAST(((rt1.c2) BETWEEN (0.005449095126735859) AND (rt1.c1)) AS TEXT)) ORDER BY CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) BETWEEN (0.005449095126735859) AND (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL));
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (CAST(((rt1.c2) BETWEEN (0.005449095126735859) AND (rt1.c1)) AS TEXT)) ORDER BY CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL);
SELECT * FROM rt1 INNER JOIN vt0 ON ((ABS(DISTINCT rt1.c1))>(((rt1.c2) IS TRUE))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((ABS(DISTINCT rt1.c1))>(((rt1.c2) IS TRUE))));
SELECT * FROM rt1 INNER JOIN vt0 ON ((ABS(DISTINCT rt1.c1))>(((rt1.c2) IS TRUE))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((ABS(DISTINCT rt1.c1))>(((rt1.c2) IS TRUE))));
SELECT * FROM rt1 INNER JOIN vt0 ON ((ABS(DISTINCT rt1.c1))>(((rt1.c2) IS TRUE))) WHERE (x'');
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(NULL AS TEXT)) ORDER BY ((- (rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((- (rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(NULL AS TEXT)) ORDER BY ((- (rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((- (rt1.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(NULL AS TEXT)) ORDER BY ((- (rt1.c2)) IN ());
SELECT * FROM rt1 WHERE ((((rt1.c2, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c1)))<>((CAST(rt1.c0 AS BLOB), rt1.c1, (NOT (rt1.c0)))))) ORDER BY (((- (rt1.c1))) IS FALSE) DESC, CAST(((rt1.c2) ISNULL) AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt1.c2, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c1)))<>((CAST(rt1.c0 AS BLOB), rt1.c1, (NOT (rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((- (rt1.c1))) IS FALSE) DESC, CAST(((rt1.c2) ISNULL) AS REAL));
SELECT * FROM rt1 WHERE ((((rt1.c2, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c1)))<>((CAST(rt1.c0 AS BLOB), rt1.c1, (NOT (rt1.c0)))))) ORDER BY (((- (rt1.c1))) IS FALSE) DESC, CAST(((rt1.c2) ISNULL) AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt1.c2, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c1)))<>((CAST(rt1.c0 AS BLOB), rt1.c1, (NOT (rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (((- (rt1.c1))) IS FALSE) DESC, CAST(((rt1.c2) ISNULL) AS REAL));
SELECT * FROM rt1 WHERE ((((rt1.c2, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END, UPPER(DISTINCT rt1.c1)))<>((CAST(rt1.c0 AS BLOB), rt1.c1, (NOT (rt1.c0)))))) ORDER BY (((- (rt1.c1))) IS FALSE) DESC, CAST(((rt1.c2) ISNULL) AS REAL);
SELECT ALL * FROM rt1, vt0 WHERE ((((((-1937125415, rt1.c0, '^%N栘Udd	㤯'))<((-1622607455, rt1.c1, rt1.c1)))) NOTNULL)) ORDER BY (((rt1.c2 IN (rt1.c2)))%(CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((-1937125415, rt1.c0, '^%N栘Udd	㤯'))<((-1622607455, rt1.c1, rt1.c1)))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2 IN (rt1.c2)))%(CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((((-1937125415, rt1.c0, '^%N栘Udd	㤯'))<((-1622607455, rt1.c1, rt1.c1)))) NOTNULL)) ORDER BY (((rt1.c2 IN (rt1.c2)))%(CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((-1937125415, rt1.c0, '^%N栘Udd	㤯'))<((-1622607455, rt1.c1, rt1.c1)))) NOTNULL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c2 IN (rt1.c2)))%(CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((((-1937125415, rt1.c0, '^%N栘Udd	㤯'))<((-1622607455, rt1.c1, rt1.c1)))) NOTNULL)) ORDER BY (((rt1.c2 IN (rt1.c2)))%(CASE WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c2) ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (((rt1.c1)GLOB(NULL))) AND (((rt1.c2) NOTNULL))), rt1.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (((rt1.c1)GLOB(NULL))) AND (((rt1.c2) NOTNULL))), rt1.c1 COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c2) ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (((rt1.c1)GLOB(NULL))) AND (((rt1.c2) NOTNULL))), rt1.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (((rt1.c1)GLOB(NULL))) AND (((rt1.c2) NOTNULL))), rt1.c1 COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c2) ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (((rt1.c1)GLOB(NULL))) AND (((rt1.c2) NOTNULL))), rt1.c1 COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))>((((vt0.c0, rt1.c0, vt0.c0))!=((rt1.c0, rt1.c0, vt0.c0))))) WHERE (((((vt0.c0)IS NOT(0.851260570462223))) NOTNULL)) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(0.851260570462223))) NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))>((((vt0.c0, rt1.c0, vt0.c0))<>((rt1.c0, rt1.c0, vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))>((((vt0.c0, rt1.c0, vt0.c0))!=((rt1.c0, rt1.c0, vt0.c0))))) WHERE (((((vt0.c0)IS NOT(0.851260570462223))) NOTNULL)) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(0.851260570462223))) NOTNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))>((((vt0.c0, rt1.c0, vt0.c0))<>((rt1.c0, rt1.c0, vt0.c0))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c0)OR(vt0.c0)))OR(rt1.c0)))>((((vt0.c0, rt1.c0, vt0.c0))!=((rt1.c0, rt1.c0, vt0.c0))))) WHERE (((((vt0.c0)IS NOT(0.851260570462223))) NOTNULL)) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) COLLATE NOCASE DESC;
SELECT * FROM vt0 WHERE (UPPER(((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UPPER(((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UPPER(((vt0.c0)IS(vt0.c0))));
SELECT * FROM rt1, vt0 WHERE (CAST(rt1.c1 AS REAL) COLLATE BINARY) ORDER BY ((((vt0.c0) IS TRUE))>>(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0) IS TRUE))>>(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1))))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CAST(rt1.c1 AS REAL) COLLATE BINARY) ORDER BY ((((vt0.c0) IS TRUE))>>(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0) IS TRUE))>>(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1))))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CAST(rt1.c1 AS REAL) COLLATE BINARY) ORDER BY ((((vt0.c0) IS TRUE))>>(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1))))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (CASE CAST(rt1.c0 AS TEXT)  WHEN ((rt1.c0)<('350750882')) THEN (('[')IS(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c0 AS TEXT)  WHEN ((rt1.c0)<('350750882')) THEN (('[')IS(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE CAST(rt1.c0 AS TEXT)  WHEN ((rt1.c0)<('350750882')) THEN (('[')IS(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c0 AS TEXT)  WHEN ((rt1.c0)<('350750882')) THEN (('[')IS(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE CAST(rt1.c0 AS TEXT)  WHEN ((rt1.c0)<('350750882')) THEN (('[')IS(rt1.c0)) END);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1697189587'))) THEN (vt0.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)==(vt0.c0)) ELSE ((((vt0.c0)OR('-1242340727')))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1697189587'))) THEN (vt0.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)==(vt0.c0)) ELSE ((((vt0.c0)OR('-1242340727')))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1697189587'))) THEN (vt0.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)==(vt0.c0)) ELSE ((((vt0.c0)OR('-1242340727')))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1697189587'))) THEN (vt0.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)==(vt0.c0)) ELSE ((((vt0.c0)OR('-1242340727')))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1697189587'))) THEN (vt0.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)==(vt0.c0)) ELSE ((((vt0.c0)OR('-1242340727')))OR(vt0.c0)) END);
SELECT ALL * FROM rt1 WHERE (((((0.7554109303235782)OR(((rt1.c1)IS NOT(0.8695356986174331)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY (+ (rt1.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.7554109303235782)OR(((rt1.c1)IS NOT(0.8695356986174331)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY (+ (rt1.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((0.7554109303235782)OR(((rt1.c1)IS NOT(0.8695356986174331)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY (+ (rt1.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.7554109303235782)OR(((rt1.c1)IS NOT(0.8695356986174331)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY (+ (rt1.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((0.7554109303235782)OR(((rt1.c1)IS NOT(0.8695356986174331)))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY (+ (rt1.c2 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt0.c0)/(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt0.c0)/(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt0.c0)/(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt0.c0)/(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt0.c0)/(vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((STRFTIME(vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND ((~ (0X20559d7d))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND ((~ (0x20559d7d))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((STRFTIME(vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND ((~ (0X20559d7d))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND ((~ (0x20559d7d))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((STRFTIME(vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND ((~ (0X20559d7d))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN rt1.c1 THEN NULL WHEN rt1.c1 THEN '' WHEN rt1.c0 THEN rt1.c0 END)<=((((rt1.c0))<((rt1.c1))))) WHERE (CAST((NOT (rt1.c1)) AS BLOB)) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((+ (rt1.c2))) AND ((3.54504338E8 IN (rt1.c1)))) ASC  NULLS LAST, (((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)) IN (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN rt1.c1 THEN NULL WHEN rt1.c1 THEN '' WHEN rt1.c0 THEN rt1.c0 END)<=((((rt1.c0))<((rt1.c1))))) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((+ (rt1.c2))) AND ((3.54504338E8 IN (rt1.c1)))) ASC  NULLS LAST, (((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)) IN (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN rt1.c1 THEN NULL WHEN rt1.c1 THEN '' WHEN rt1.c0 THEN rt1.c0 END)<=((((rt1.c0))<((rt1.c1))))) WHERE (CAST((NOT (rt1.c1)) AS BLOB)) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((+ (rt1.c2))) AND ((3.54504338E8 IN (rt1.c1)))) ASC  NULLS LAST, (((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)) IN (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN rt1.c1 THEN NULL WHEN rt1.c1 THEN '' WHEN rt1.c0 THEN rt1.c0 END)<=((((rt1.c0))<((rt1.c1))))) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((+ (rt1.c2))) AND ((3.54504338E8 IN (rt1.c1)))) ASC  NULLS LAST, (((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)) IN (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((CASE WHEN rt1.c1 THEN NULL WHEN rt1.c1 THEN '' WHEN rt1.c0 THEN rt1.c0 END)<=((((rt1.c0))<((rt1.c1))))) WHERE (CAST((NOT (rt1.c1)) AS BLOB)) ORDER BY (vt0.c0 COLLATE NOCASE IN ())  NULLS LAST, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((+ (rt1.c2))) AND ((3.54504338E8 IN (rt1.c1)))) ASC  NULLS LAST, (((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)) IN (CAST(rt1.c0 AS NUMERIC)))  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT(0Xffffffffc3a7a94f))) NOTNULL)) ORDER BY ((((rt1.c1)OR(LOWER(DISTINCT rt1.c0))))OR((rt1.c1 IN (rt1.c1))))  NULLS FIRST, (CAST(rt1.c2 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS NOT(0xffffffffc3a7a94f))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)OR(LOWER(DISTINCT rt1.c0))))OR((rt1.c1 IN (rt1.c1))))  NULLS FIRST, (CAST(rt1.c2 AS INTEGER) IN ()) DESC);
SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT(0Xffffffffc3a7a94f))) NOTNULL)) ORDER BY ((((rt1.c1)OR(LOWER(DISTINCT rt1.c0))))OR((rt1.c1 IN (rt1.c1))))  NULLS FIRST, (CAST(rt1.c2 AS INTEGER) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS NOT(0xffffffffc3a7a94f))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)OR(LOWER(DISTINCT rt1.c0))))OR((rt1.c1 IN (rt1.c1))))  NULLS FIRST, (CAST(rt1.c2 AS INTEGER) IN ()) DESC);
SELECT * FROM rt1 WHERE (((((rt1.c2)IS NOT(0Xffffffffc3a7a94f))) NOTNULL)) ORDER BY ((((rt1.c1)OR(LOWER(DISTINCT rt1.c0))))OR((rt1.c1 IN (rt1.c1))))  NULLS FIRST, (CAST(rt1.c2 AS INTEGER) IN ()) DESC;
SELECT ALL * FROM rt1 WHERE ((0.6639476768754816 IN ()) COLLATE NOCASE) ORDER BY NULLIF(DISTINCT 1.87816899E9 COLLATE RTRIM, ((rt1.c2)IS NOT(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((0.6639476768754816 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY NULLIF(DISTINCT 1.87816899E9 COLLATE RTRIM, ((rt1.c2)IS NOT(rt1.c0))));
SELECT ALL * FROM rt1 WHERE ((0.6639476768754816 IN ()) COLLATE NOCASE) ORDER BY NULLIF(DISTINCT 1.87816899E9 COLLATE RTRIM, ((rt1.c2)IS NOT(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((0.6639476768754816 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY NULLIF(DISTINCT 1.87816899E9 COLLATE RTRIM, ((rt1.c2)IS NOT(rt1.c0))));
SELECT ALL * FROM rt1 WHERE ((0.6639476768754816 IN ()) COLLATE NOCASE) ORDER BY NULLIF(DISTINCT 1.87816899E9 COLLATE RTRIM, ((rt1.c2)IS NOT(rt1.c0)));
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY CASE WHEN TRIM(DISTINCT rt1.c1, rt1.c2) THEN LOWER(DISTINCT rt1.c2) WHEN (((rt1.c2, '2063998350', rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, x'', x''))) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END WHEN rt1.c1 THEN x'' WHEN ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)|(rt1.c2)) THEN '-1926985971' ELSE rt1.c1 END ASC  NULLS LAST, rt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN TRIM(DISTINCT rt1.c1, rt1.c2) THEN LOWER(DISTINCT rt1.c2) WHEN (((rt1.c2, '2063998350', rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, x'', x''))) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END WHEN rt1.c1 THEN x'' WHEN ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)|(rt1.c2)) THEN '-1926985971' ELSE rt1.c1 END ASC  NULLS LAST, rt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY CASE WHEN TRIM(DISTINCT rt1.c1, rt1.c2) THEN LOWER(DISTINCT rt1.c2) WHEN (((rt1.c2, '2063998350', rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, x'', x''))) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END WHEN rt1.c1 THEN x'' WHEN ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)|(rt1.c2)) THEN '-1926985971' ELSE rt1.c1 END ASC  NULLS LAST, rt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN TRIM(DISTINCT rt1.c1, rt1.c2) THEN LOWER(DISTINCT rt1.c2) WHEN (((rt1.c2, '2063998350', rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, x'', x''))) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END WHEN rt1.c1 THEN x'' WHEN ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)|(rt1.c2)) THEN '-1926985971' ELSE rt1.c1 END ASC  NULLS LAST, rt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY CASE WHEN TRIM(DISTINCT rt1.c1, rt1.c2) THEN LOWER(DISTINCT rt1.c2) WHEN (((rt1.c2, '2063998350', rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, x'', x''))) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END WHEN rt1.c1 THEN x'' WHEN ((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN (rt1.c1 IN ()) WHEN ((rt1.c2)|(rt1.c2)) THEN '-1926985971' ELSE rt1.c1 END ASC  NULLS LAST, rt1.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((- (json_patch(rt1.c2, rt1.c0)))) ORDER BY (((((rt1.c0) BETWEEN (rt1.c2) AND (NULL)), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END, CASE NULL  WHEN rt1.c1 THEN rt1.c1 END))<=((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)), ((rt1.c0)/(rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (json_patch(rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0) BETWEEN (rt1.c2) AND (NULL)), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END, CASE NULL  WHEN rt1.c1 THEN rt1.c1 END))<=((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)), ((rt1.c0)/(rt1.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((- (json_patch(rt1.c2, rt1.c0)))) ORDER BY (((((rt1.c0) BETWEEN (rt1.c2) AND (NULL)), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END, CASE NULL  WHEN rt1.c1 THEN rt1.c1 END))<=((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)), ((rt1.c0)/(rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (json_patch(rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0) BETWEEN (rt1.c2) AND (NULL)), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END, CASE NULL  WHEN rt1.c1 THEN rt1.c1 END))<=((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)), ((rt1.c0)/(rt1.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((- (json_patch(rt1.c2, rt1.c0)))) ORDER BY (((((rt1.c0) BETWEEN (rt1.c2) AND (NULL)), CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END, CASE NULL  WHEN rt1.c1 THEN rt1.c1 END))<=((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, ((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)), ((rt1.c0)/(rt1.c1)))))  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((2.37541314E8)))) NOTNULL) WHERE ((~ ((((rt1.c1, rt1.c1, rt1.c0))<=((NULL, rt1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1, rt1.c1, rt1.c0))<=((NULL, rt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((2.37541314E8)))) NOTNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((2.37541314E8)))) NOTNULL) WHERE ((~ ((((rt1.c1, rt1.c1, rt1.c0))<=((NULL, rt1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c1, rt1.c1, rt1.c0))<=((NULL, rt1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((2.37541314E8)))) NOTNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON (((((rt1.c2))>((2.37541314E8)))) NOTNULL) WHERE ((~ ((((rt1.c1, rt1.c1, rt1.c0))<=((NULL, rt1.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((NOT (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((NOT (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((NOT (vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, NULL, NULL)) BETWEEN ((rt1.c0, ((x'')!=(rt1.c2)), (~ (rt1.c2)))) AND ((rt1.c2, (rt1.c1 IN (rt1.c2, rt1.c1)), ((rt1.c0)IS NOT(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, NULL, NULL)) BETWEEN ((rt1.c0, ((x'')<>(rt1.c2)), (~ (rt1.c2)))) AND ((rt1.c2, (rt1.c1 IN (rt1.c2, rt1.c1)), ((rt1.c0)IS NOT(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, NULL, NULL)) BETWEEN ((rt1.c0, ((x'')!=(rt1.c2)), (~ (rt1.c2)))) AND ((rt1.c2, (rt1.c1 IN (rt1.c2, rt1.c1)), ((rt1.c0)IS NOT(rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, NULL, NULL)) BETWEEN ((rt1.c0, ((x'')<>(rt1.c2)), (~ (rt1.c2)))) AND ((rt1.c2, (rt1.c1 IN (rt1.c2, rt1.c1)), ((rt1.c0)IS NOT(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0, NULL, NULL)) BETWEEN ((rt1.c0, ((x'')!=(rt1.c2)), (~ (rt1.c2)))) AND ((rt1.c2, (rt1.c1 IN (rt1.c2, rt1.c1)), ((rt1.c0)IS NOT(rt1.c1))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))GLOB(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND((((vt0.c0))>=((NULL))))))OR((vt0.c0 IN ()))))OR(vt0.c0)))OR((('-930341835') IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))GLOB(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND((((vt0.c0))>=((NULL))))))OR((vt0.c0 IN ()))))OR(vt0.c0)))OR((('-930341835') IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))GLOB(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND((((vt0.c0))>=((NULL))))))OR((vt0.c0 IN ()))))OR(vt0.c0)))OR((('-930341835') IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))GLOB(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND((((vt0.c0))>=((NULL))))))OR((vt0.c0 IN ()))))OR(vt0.c0)))OR((('-930341835') IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))GLOB(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND((((vt0.c0))>=((NULL))))))OR((vt0.c0 IN ()))))OR(vt0.c0)))OR((('-930341835') IS FALSE)))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)AND(NULL)) WHERE (0.29782320471002466) ORDER BY ((((rt1.c0)>=(vt0.c0))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN 0.8030723431696467 END) AND (x'4d0c'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.29782320471002466) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)AND(NULL)) ORDER BY ((((rt1.c0)>=(vt0.c0))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN 0.8030723431696467 END) AND (x'4d0c'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)AND(NULL)) WHERE (0.29782320471002466) ORDER BY ((((rt1.c0)>=(vt0.c0))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN 0.8030723431696467 END) AND (x'4d0c'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.29782320471002466) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)AND(NULL)) ORDER BY ((((rt1.c0)>=(vt0.c0))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN 0.8030723431696467 END) AND (x'4d0c'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((vt0.c0)AND(NULL)) WHERE (0.29782320471002466) ORDER BY ((((rt1.c0)>=(vt0.c0))) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN 0.8030723431696467 END) AND (x'4d0c'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((('e')IS(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('e')IS(NULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((('e')IS(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('e')IS(NULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((('e')IS(NULL)));
SELECT * FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x'f481')))>(((((((((((((vt0.c0)AND(vt0.c0)))OR(x'65cc')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x'f481')))>(((((((((((((vt0.c0)AND(vt0.c0)))OR(x'65cc')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x'f481')))>(((((((((((((vt0.c0)AND(vt0.c0)))OR(x'65cc')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x'f481')))>(((((((((((((vt0.c0)AND(vt0.c0)))OR(x'65cc')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS NUMERIC)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x'f481')))>(((((((((((((vt0.c0)AND(vt0.c0)))OR(x'65cc')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND ((CASE WHEN 0.9304372381625416 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND ((CASE WHEN 0.9304372381625416 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND ((CASE WHEN 0.9304372381625416 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND ((CASE WHEN 0.9304372381625416 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND ((CASE WHEN 0.9304372381625416 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END))));
SELECT * FROM rt1, vt0 WHERE ((((rt1.c0)>(rt1.c0)) IN (TRIM(rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)>(rt1.c0)) IN (TRIM(rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c0)>(rt1.c0)) IN (TRIM(rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)>(rt1.c0)) IN (TRIM(rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c0)>(rt1.c0)) IN (TRIM(rt1.c2, rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE (TYPEOF(((rt1.c1)AND(0.20272674065701535)))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt1.c1)AND(0.20272674065701535)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (TYPEOF(((rt1.c1)AND(0.20272674065701535)))) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt1.c1)AND(0.20272674065701535)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (TYPEOF(((rt1.c1)AND(0.20272674065701535)))) ORDER BY rt1.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN ()))>>(((rt1.c2) NOT BETWEEN ('') AND (rt1.c0)))) WHERE (x'') ORDER BY ((((vt0.c0 IN ()), ((rt1.c0)AND(rt1.c1)), (vt0.c0 IN ())))>(('ay8[tᑐ', x'', ((((vt0.c0)OR(rt1.c2)))OR(0.42491249267781106)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN ()))>>(((rt1.c2) NOT BETWEEN ('') AND (rt1.c0)))) ORDER BY ((((vt0.c0 IN ()), ((rt1.c0)AND(rt1.c1)), (vt0.c0 IN ())))>(('ay8[tᑐ', x'', ((((vt0.c0)OR(rt1.c2)))OR(0.42491249267781106))))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN ()))>>(((rt1.c2) NOT BETWEEN ('') AND (rt1.c0)))) WHERE (x'') ORDER BY ((((vt0.c0 IN ()), ((rt1.c0)AND(rt1.c1)), (vt0.c0 IN ())))>(('ay8[tᑐ', x'', ((((vt0.c0)OR(rt1.c2)))OR(0.42491249267781106)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN ()))>>(((rt1.c2) NOT BETWEEN ('') AND (rt1.c0)))) ORDER BY ((((vt0.c0 IN ()), ((rt1.c0)AND(rt1.c1)), (vt0.c0 IN ())))>(('ay8[tᑐ', x'', ((((vt0.c0)OR(rt1.c2)))OR(0.42491249267781106))))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c1 IN ()))>>(((rt1.c2) NOT BETWEEN ('') AND (rt1.c0)))) WHERE (x'') ORDER BY ((((vt0.c0 IN ()), ((rt1.c0)AND(rt1.c1)), (vt0.c0 IN ())))>(('ay8[tᑐ', x'', ((((vt0.c0)OR(rt1.c2)))OR(0.42491249267781106)))));
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) AND (((rt1.c0) IS FALSE))));
SELECT * FROM vt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS TEXT));
SELECT ALL * FROM vt0 WHERE (LENGTH(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((NOT (vt0.c0))))<>(((vt0.c0 IN (vt0.c0))))) ASC  NULLS LAST, CASE UPPER(DISTINCT vt0.c0)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)!=(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0))))!=(((vt0.c0 IN (vt0.c0))))) ASC  NULLS LAST, CASE UPPER(DISTINCT vt0.c0)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)!=(vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE (LENGTH(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((NOT (vt0.c0))))<>(((vt0.c0 IN (vt0.c0))))) ASC  NULLS LAST, CASE UPPER(DISTINCT vt0.c0)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)!=(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((LENGTH(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0))))!=(((vt0.c0 IN (vt0.c0))))) ASC  NULLS LAST, CASE UPPER(DISTINCT vt0.c0)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)!=(vt0.c0)) END ASC);
SELECT ALL * FROM vt0 WHERE (LENGTH(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((NOT (vt0.c0))))<>(((vt0.c0 IN (vt0.c0))))) ASC  NULLS LAST, CASE UPPER(DISTINCT vt0.c0)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)!=(vt0.c0)) END ASC;
SELECT ALL * FROM vt0 WHERE (IFNULL(CAST(0.440134797627285 AS NUMERIC), CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(0.440134797627285 AS NUMERIC), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(CAST(0.440134797627285 AS NUMERIC), CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(0.440134797627285 AS NUMERIC), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(CAST(0.440134797627285 AS NUMERIC), CAST(vt0.c0 AS BLOB)));
SELECT ALL * FROM vt0 WHERE ((((((NULL IN ()))AND(LIKELY(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND(LIKELY(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NULL IN ()))AND(LIKELY(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND(LIKELY(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NULL IN ()))AND(LIKELY(DISTINCT vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)||(vt0.c0 COLLATE NOCASE))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)||(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)||(vt0.c0 COLLATE NOCASE))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)||(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)||(vt0.c0 COLLATE NOCASE))) ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (LTRIM(((rt1.c0)>>(0x5ab654f0)), ((rt1.c2)GLOB(rt1.c0)))) ORDER BY ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt1.c0)>>(0x5ab654f0)), ((rt1.c2)GLOB(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1))) IS TRUE));
SELECT * FROM rt1 WHERE (LTRIM(((rt1.c0)>>(0x5ab654f0)), ((rt1.c2)GLOB(rt1.c0)))) ORDER BY ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt1.c0)>>(0x5ab654f0)), ((rt1.c2)GLOB(rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1))) IS TRUE));
SELECT * FROM rt1 WHERE (LTRIM(((rt1.c0)>>(0x5ab654f0)), ((rt1.c2)GLOB(rt1.c0)))) ORDER BY ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1))) IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)*('0.1638260221386978')));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)*('0.1638260221386978'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)*('0.1638260221386978')));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)*('0.1638260221386978'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)*('0.1638260221386978')));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c2) ISNULL)))) ORDER BY ((CAST(rt1.c1 AS INTEGER))*(((rt1.c2)|(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS INTEGER))*(((rt1.c2)|(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c2) ISNULL)))) ORDER BY ((CAST(rt1.c1 AS INTEGER))*(((rt1.c2)|(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS INTEGER))*(((rt1.c2)|(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c2) ISNULL)))) ORDER BY ((CAST(rt1.c1 AS INTEGER))*(((rt1.c2)|(rt1.c0))));
SELECT * FROM vt0, rt1 WHERE ((~ (rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((~ (rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((~ (rt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 WHERE (CASE '	kk*A.,a㶚'  WHEN ((rt1.c1)LIKE(rt1.c0)) THEN ((rt1.c2)&(rt1.c2)) WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c2)AND(rt1.c2)) WHEN UPPER(rt1.c2) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((rt1.c2))>((rt1.c0))) END) ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN 'vE\n\to' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END) ISNULL) ASC, ((((CASE WHEN rt1.c0 THEN '-1258673987' END)OR(rt1.c0)))AND(NULL));
SELECT SUM(count) FROM (SELECT ((CASE '	kk*A.,a㶚'  WHEN ((rt1.c1)LIKE(rt1.c0)) THEN ((rt1.c2)&(rt1.c2)) WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c2)AND(rt1.c2)) WHEN UPPER(rt1.c2) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((rt1.c2))>((rt1.c0))) END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN 'vE\n\to' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END) ISNULL) ASC, ((((CASE WHEN rt1.c0 THEN '-1258673987' END)OR(rt1.c0)))AND(NULL)));
SELECT COUNT(*) FROM rt1 WHERE (CASE '	kk*A.,a㶚'  WHEN ((rt1.c1)LIKE(rt1.c0)) THEN ((rt1.c2)&(rt1.c2)) WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c2)AND(rt1.c2)) WHEN UPPER(rt1.c2) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((rt1.c2))>((rt1.c0))) END) ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN 'vE\n\to' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END) ISNULL) ASC, ((((CASE WHEN rt1.c0 THEN '-1258673987' END)OR(rt1.c0)))AND(NULL));
SELECT SUM(count) FROM (SELECT ((CASE '	kk*A.,a㶚'  WHEN ((rt1.c1)LIKE(rt1.c0)) THEN ((rt1.c2)&(rt1.c2)) WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c2)AND(rt1.c2)) WHEN UPPER(rt1.c2) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((rt1.c2))>((rt1.c0))) END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN 'vE\n\to' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END) ISNULL) ASC, ((((CASE WHEN rt1.c0 THEN '-1258673987' END)OR(rt1.c0)))AND(NULL)));
SELECT COUNT(*) FROM rt1 WHERE (CASE '	kk*A.,a㶚'  WHEN ((rt1.c1)LIKE(rt1.c0)) THEN ((rt1.c2)&(rt1.c2)) WHEN ((rt1.c0) NOT NULL) THEN ((rt1.c2)AND(rt1.c2)) WHEN UPPER(rt1.c2) THEN ((rt1.c0)IS NOT(rt1.c0)) ELSE (((rt1.c2))>((rt1.c0))) END) ORDER BY ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN 'vE\n\to' THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 END) ISNULL) ASC, ((((CASE WHEN rt1.c0 THEN '-1258673987' END)OR(rt1.c0)))AND(NULL));
SELECT ALL * FROM rt1 WHERE ((((((((('/')OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))))OR(x'')))AND(SQLITE_COMPILEOPTION_GET(rt1.c0))))AND((+ (rt1.c1))))) ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((('/')OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))))OR(x'')))AND(SQLITE_COMPILEOPTION_GET(rt1.c0))))AND((+ (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((((('/')OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))))OR(x'')))AND(SQLITE_COMPILEOPTION_GET(rt1.c0))))AND((+ (rt1.c1))))) ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((('/')OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))))OR(x'')))AND(SQLITE_COMPILEOPTION_GET(rt1.c0))))AND((+ (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((((('/')OR(((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))))OR(x'')))AND(SQLITE_COMPILEOPTION_GET(rt1.c0))))AND((+ (rt1.c1))))) ORDER BY CAST(NULL AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((NOT (json_quote(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_quote(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (json_quote(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_quote(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (json_quote(rt1.c2))));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE) ORDER BY (((~ (rt1.c1)))>=(((rt1.c1)+(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((~ (rt1.c1)))>=(((rt1.c1)+(rt1.c1)))));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE) ORDER BY (((~ (rt1.c1)))>=(((rt1.c1)+(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((~ (rt1.c1)))>=(((rt1.c1)+(rt1.c1)))));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE) ORDER BY (((~ (rt1.c1)))>=(((rt1.c1)+(rt1.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, NULL))) ELSE vt0.c0 COLLATE BINARY END) ORDER BY (- (vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, NULL))) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, NULL))) ELSE vt0.c0 COLLATE BINARY END) ORDER BY (- (vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, NULL))) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, NULL))) ELSE vt0.c0 COLLATE BINARY END) ORDER BY (- (vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt0 WHERE (((STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((STRFTIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0, rt1 NOT INDEXED WHERE (LIKELY(((rt1.c0) BETWEEN (rt1.c0) AND (NULL)))) ORDER BY ('-1423952117' IN ((~ (vt0.c0)), ((x'')AND(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt1.c0) BETWEEN (rt1.c0) AND (NULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ('-1423952117' IN ((~ (vt0.c0)), ((x'')AND(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 NOT INDEXED WHERE (LIKELY(((rt1.c0) BETWEEN (rt1.c0) AND (NULL)))) ORDER BY ('-1423952117' IN ((~ (vt0.c0)), ((x'')AND(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt1.c0) BETWEEN (rt1.c0) AND (NULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ('-1423952117' IN ((~ (vt0.c0)), ((x'')AND(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 NOT INDEXED WHERE (LIKELY(((rt1.c0) BETWEEN (rt1.c0) AND (NULL)))) ORDER BY ('-1423952117' IN ((~ (vt0.c0)), ((x'')AND(rt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 COLLATE RTRIM)AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 COLLATE RTRIM)AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c2 AS BLOB))));
SELECT * FROM rt1 WHERE (((0.4944224018063623)/(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((0.4944224018063623)/(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((0.4944224018063623)/(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((0.4944224018063623)/(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((0.4944224018063623)/(rt1.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2) IS TRUE) COLLATE BINARY) ORDER BY ((rt1.c2) NOT NULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) NOT NULL) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2) IS TRUE) COLLATE BINARY) ORDER BY ((rt1.c2) NOT NULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) NOT NULL) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2) IS TRUE) COLLATE BINARY) ORDER BY ((rt1.c2) NOT NULL) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY((- ('56322938'))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((- ('56322938')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY((- ('56322938'))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((- ('56322938')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY((- ('56322938'))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER));
SELECT * FROM rt1, vt0 WHERE ((+ ('1135421586' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ ('1135421586' COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((+ ('1135421586' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ ('1135421586' COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((+ ('1135421586' COLLATE BINARY)));
SELECT * FROM rt1 WHERE ((((((((rt1.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))))AND(rt1.c2)))AND(rt1.c2 COLLATE NOCASE))) ORDER BY TRIM(DISTINCT rt1.c1)  NULLS FIRST, (((rt1.c2 IN ()))/(rt1.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))))AND(rt1.c2)))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY TRIM(DISTINCT rt1.c1)  NULLS FIRST, (((rt1.c2 IN ()))/(rt1.c2)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((((((rt1.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))))AND(rt1.c2)))AND(rt1.c2 COLLATE NOCASE))) ORDER BY TRIM(DISTINCT rt1.c1)  NULLS FIRST, (((rt1.c2 IN ()))/(rt1.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))))AND(rt1.c2)))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY TRIM(DISTINCT rt1.c1)  NULLS FIRST, (((rt1.c2 IN ()))/(rt1.c2)) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((((((rt1.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))))AND(rt1.c2)))AND(rt1.c2 COLLATE NOCASE))) ORDER BY TRIM(DISTINCT rt1.c1)  NULLS FIRST, (((rt1.c2 IN ()))/(rt1.c2)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c0)>=(rt1.c2)) THEN ((rt1.c1)<>(rt1.c2)) ELSE '' END) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS BLOB), ((((rt1.c0)OR((+ (rt1.c1)))))AND(((rt1.c0) NOTNULL)))  NULLS LAST, CAST((((rt1.c0, rt1.c2, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c1))) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)>=(rt1.c2)) THEN ((rt1.c1)!=(rt1.c2)) ELSE '' END) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS BLOB), ((((rt1.c0)OR((+ (rt1.c1)))))AND(((rt1.c0) NOTNULL)))  NULLS LAST, CAST((((rt1.c0, rt1.c2, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c1))) AS REAL));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c0)>=(rt1.c2)) THEN ((rt1.c1)<>(rt1.c2)) ELSE '' END) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS BLOB), ((((rt1.c0)OR((+ (rt1.c1)))))AND(((rt1.c0) NOTNULL)))  NULLS LAST, CAST((((rt1.c0, rt1.c2, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c1))) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)>=(rt1.c2)) THEN ((rt1.c1)!=(rt1.c2)) ELSE '' END) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS BLOB), ((((rt1.c0)OR((+ (rt1.c1)))))AND(((rt1.c0) NOTNULL)))  NULLS LAST, CAST((((rt1.c0, rt1.c2, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c1))) AS REAL));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c0)>=(rt1.c2)) THEN ((rt1.c1)<>(rt1.c2)) ELSE '' END) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS BLOB), ((((rt1.c0)OR((+ (rt1.c1)))))AND(((rt1.c0) NOTNULL)))  NULLS LAST, CAST((((rt1.c0, rt1.c2, rt1.c0))>=((rt1.c1, rt1.c1, rt1.c1))) AS REAL);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c0)AND(rt1.c2)))AND(0X3c3d6709)))AND(rt1.c1)))OR(rt1.c1)))OR(((rt1.c0)LIKE(rt1.c2)))))OR(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c0)AND(rt1.c2)))AND(0X3c3d6709)))AND(rt1.c1)))OR(rt1.c1)))OR(((rt1.c0)LIKE(rt1.c2)))))OR(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c0)AND(rt1.c2)))AND(0X3c3d6709)))AND(rt1.c1)))OR(rt1.c1)))OR(((rt1.c0)LIKE(rt1.c2)))))OR(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c0)AND(rt1.c2)))AND(0X3c3d6709)))AND(rt1.c1)))OR(rt1.c1)))OR(((rt1.c0)LIKE(rt1.c2)))))OR(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((((rt1.c0)AND(rt1.c2)))AND(0X3c3d6709)))AND(rt1.c1)))OR(rt1.c1)))OR(((rt1.c0)LIKE(rt1.c2)))))OR(((rt1.c0) IS TRUE))));
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (rt1.c1);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (CASE vt0.c0  WHEN vt0.c0 THEN x'' END IN ()) WHERE (SUBSTR((- (rt1.c0)), CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((SUBSTR((- (rt1.c0)), CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (CASE vt0.c0  WHEN vt0.c0 THEN x'' END IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (CASE vt0.c0  WHEN vt0.c0 THEN x'' END IN ()) WHERE (SUBSTR((- (rt1.c0)), CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((SUBSTR((- (rt1.c0)), CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (CASE vt0.c0  WHEN vt0.c0 THEN x'' END IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (CASE vt0.c0  WHEN vt0.c0 THEN x'' END IN ()) WHERE (SUBSTR((- (rt1.c0)), CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON 0.7398441574090082 WHERE (((((vt0.c0)=(vt0.c0))) BETWEEN (rt1.c0) AND (((((rt1.c2)OR(rt1.c1)))OR(vt0.c0))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))AND(rt1.c1 COLLATE RTRIM)))OR(((((rt1.c2)OR(vt0.c0)))OR(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0))) BETWEEN (rt1.c0) AND (((((rt1.c2)OR(rt1.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON 0.7398441574090082 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))AND(rt1.c1 COLLATE RTRIM)))OR(((((rt1.c2)OR(vt0.c0)))OR(rt1.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON 0.7398441574090082 WHERE (((((vt0.c0)=(vt0.c0))) BETWEEN (rt1.c0) AND (((((rt1.c2)OR(rt1.c1)))OR(vt0.c0))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))AND(rt1.c1 COLLATE RTRIM)))OR(((((rt1.c2)OR(vt0.c0)))OR(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0))) BETWEEN (rt1.c0) AND (((((rt1.c2)OR(rt1.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON 0.7398441574090082 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))AND(rt1.c1 COLLATE RTRIM)))OR(((((rt1.c2)OR(vt0.c0)))OR(rt1.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON 0.7398441574090082 WHERE (((((vt0.c0)=(vt0.c0))) BETWEEN (rt1.c0) AND (((((rt1.c2)OR(rt1.c1)))OR(vt0.c0))))) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))AND(rt1.c1 COLLATE RTRIM)))OR(((((rt1.c2)OR(vt0.c0)))OR(rt1.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==((~ (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==((~ (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))==((~ (rt1.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN 0.4594504375903825 THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN 0.4594504375903825 THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN 0.4594504375903825 THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN 0.4594504375903825 THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN 0.4594504375903825 THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c2 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS INTEGER));
SELECT ALL * FROM vt0, rt1 WHERE (IFNULL((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), rt1.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (IFNULL((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), rt1.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (IFNULL((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c2))), rt1.c2 COLLATE BINARY));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt1 WHERE (((((rt1.c0)IS(rt1.c2)))AND(rt1.c1 COLLATE NOCASE))) ORDER BY ('-34023760' IN ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)IS(rt1.c2)))AND(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY ('-34023760' IN ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))));
SELECT * FROM rt1 WHERE (((((rt1.c0)IS(rt1.c2)))AND(rt1.c1 COLLATE NOCASE))) ORDER BY ('-34023760' IN ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)IS(rt1.c2)))AND(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY ('-34023760' IN ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))));
SELECT * FROM rt1 WHERE (((((rt1.c0)IS(rt1.c2)))AND(rt1.c1 COLLATE NOCASE))) ORDER BY ('-34023760' IN ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0)>>(vt0.c0)))GLOB(((rt1.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))GLOB(((rt1.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0)>>(vt0.c0)))GLOB(((rt1.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))GLOB(((rt1.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0)>>(vt0.c0)))GLOB(((rt1.c0)IS NOT(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c0)IS(rt1.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)IS(rt1.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c0)IS(rt1.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)IS(rt1.c0))) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0) ORDER BY ((((rt1.c0)IS(rt1.c0))) IS FALSE) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY (NOT (rt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT (rt1.c1)) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY (NOT (rt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (NOT (rt1.c1)) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY (NOT (rt1.c1)) ASC;
SELECT * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c1);
SELECT * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE RTRIM;
SELECT ALL * FROM rt1, vt0 WHERE ((((CASE WHEN rt1.c1 THEN rt1.c2 END))>((((rt1.c1)/(rt1.c1)))))) ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (((rt1.c2)) BETWEEN ((0.5018531216086161)) AND ((rt1.c2))) THEN ((((((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0)) ELSE LOWER(DISTINCT rt1.c1) END;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c1 THEN rt1.c2 END))>((((rt1.c1)/(rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (((rt1.c2)) BETWEEN ((0.5018531216086161)) AND ((rt1.c2))) THEN ((((((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0)) ELSE LOWER(DISTINCT rt1.c1) END);
SELECT ALL * FROM rt1, vt0 WHERE ((((CASE WHEN rt1.c1 THEN rt1.c2 END))>((((rt1.c1)/(rt1.c1)))))) ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (((rt1.c2)) BETWEEN ((0.5018531216086161)) AND ((rt1.c2))) THEN ((((((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0)) ELSE LOWER(DISTINCT rt1.c1) END;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c1 THEN rt1.c2 END))>((((rt1.c1)/(rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (((rt1.c2)) BETWEEN ((0.5018531216086161)) AND ((rt1.c2))) THEN ((((((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0)) ELSE LOWER(DISTINCT rt1.c1) END);
SELECT ALL * FROM rt1, vt0 WHERE ((((CASE WHEN rt1.c1 THEN rt1.c2 END))>((((rt1.c1)/(rt1.c1)))))) ORDER BY CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (((rt1.c2)) BETWEEN ((0.5018531216086161)) AND ((rt1.c2))) THEN ((((((((rt1.c0)AND(vt0.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt0.c0)) ELSE LOWER(DISTINCT rt1.c1) END;
SELECT COUNT(*) FROM rt1 WHERE (IFNULL(DISTINCT ((NULL)LIKE(rt1.c2)), (rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((NULL)LIKE(rt1.c2)), (rt1.c1 IN ()))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (IFNULL(DISTINCT ((NULL)LIKE(rt1.c2)), (rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((NULL)LIKE(rt1.c2)), (rt1.c1 IN ()))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (IFNULL(DISTINCT ((NULL)LIKE(rt1.c2)), (rt1.c1 IN ())));
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c2)<(rt1.c1)) THEN (rt1.c0 IN ()) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY WHEN SQLITE_COMPILEOPTION_USED(rt1.c0) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN NULLIF(x'', rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN rt1.c0 COLLATE NOCASE WHEN 0.8394155733247092 THEN 'A⟐' COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<(rt1.c1)) THEN (rt1.c0 IN ()) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY WHEN SQLITE_COMPILEOPTION_USED(rt1.c0) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN NULLIF(x'', rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN rt1.c0 COLLATE NOCASE WHEN 0.8394155733247092 THEN 'A⟐' COLLATE BINARY END);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c2)<(rt1.c1)) THEN (rt1.c0 IN ()) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY WHEN SQLITE_COMPILEOPTION_USED(rt1.c0) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN NULLIF(x'', rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN rt1.c0 COLLATE NOCASE WHEN 0.8394155733247092 THEN 'A⟐' COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<(rt1.c1)) THEN (rt1.c0 IN ()) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY WHEN SQLITE_COMPILEOPTION_USED(rt1.c0) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN NULLIF(x'', rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN rt1.c0 COLLATE NOCASE WHEN 0.8394155733247092 THEN 'A⟐' COLLATE BINARY END);
SELECT ALL * FROM rt1 WHERE (CASE WHEN ((rt1.c2)<(rt1.c1)) THEN (rt1.c0 IN ()) WHEN rt1.c0 THEN rt1.c0 COLLATE BINARY WHEN SQLITE_COMPILEOPTION_USED(rt1.c0) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) ORDER BY CASE ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))  WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN NULLIF(x'', rt1.c0) WHEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END THEN rt1.c0 COLLATE NOCASE WHEN 0.8394155733247092 THEN 'A⟐' COLLATE BINARY END;
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c2)>>(rt1.c2)))AND((NOT (x'8749')))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY (((rt1.c2 IN ()))/(((rt1.c1)/(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)>>(rt1.c2)))AND((NOT (x'8749')))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ()))/(((rt1.c1)/(rt1.c0)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c2)>>(rt1.c2)))AND((NOT (x'8749')))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY (((rt1.c2 IN ()))/(((rt1.c1)/(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)>>(rt1.c2)))AND((NOT (x'8749')))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ()))/(((rt1.c1)/(rt1.c0)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c2)>>(rt1.c2)))AND((NOT (x'8749')))))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))) ORDER BY (((rt1.c2 IN ()))/(((rt1.c1)/(rt1.c0)))) DESC;
SELECT * FROM vt0, rt1 WHERE ((('-899561868') NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('-899561868') NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((('-899561868') NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('-899561868') NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((('-899561868') NOT NULL) COLLATE RTRIM);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c1) IS FALSE))AND(-6.66409505E8)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) IS FALSE))AND(-6.66409505E8)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c1) IS FALSE))AND(-6.66409505E8)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) IS FALSE))AND(-6.66409505E8)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c1) IS FALSE))AND(-6.66409505E8)))AND(CASE WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((x'e46301b3' COLLATE RTRIM) IS TRUE) WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c1 END) NOTNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((x'e46301b3' COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((x'e46301b3' COLLATE RTRIM) IS TRUE) WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c1 END) NOTNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((x'e46301b3' COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((x'e46301b3' COLLATE RTRIM) IS TRUE) WHERE (((CASE WHEN rt1.c0 THEN rt1.c1 END) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))OR((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))OR((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))OR((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))OR((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c1)))OR((rt1.c2 IN ()))));
SELECT ALL * FROM rt1, vt0 WHERE (CASE CASE WHEN rt1.c0 THEN rt1.c2 END  WHEN ((rt1.c1)||(vt0.c0)) THEN ((vt0.c0)AND(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c0 THEN rt1.c2 END  WHEN ((rt1.c1)||(vt0.c0)) THEN ((vt0.c0)AND(rt1.c1)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE CASE WHEN rt1.c0 THEN rt1.c2 END  WHEN ((rt1.c1)||(vt0.c0)) THEN ((vt0.c0)AND(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c0 THEN rt1.c2 END  WHEN ((rt1.c1)||(vt0.c0)) THEN ((vt0.c0)AND(rt1.c1)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE CASE WHEN rt1.c0 THEN rt1.c2 END  WHEN ((rt1.c1)||(vt0.c0)) THEN ((vt0.c0)AND(rt1.c1)) END);
SELECT COUNT(*) FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, 0.9175932634147682, rt1.c1)) AND ((rt1.c0, vt0.c0, rt1.c2))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, 0.9175932634147682, rt1.c1)) AND ((rt1.c0, vt0.c0, rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY '' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, 0.9175932634147682, rt1.c1)) AND ((rt1.c0, vt0.c0, rt1.c2))))) ORDER BY '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, 0.9175932634147682, rt1.c1)) AND ((rt1.c0, vt0.c0, rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY '' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, 0.9175932634147682, rt1.c1)) AND ((rt1.c0, vt0.c0, rt1.c2))))) ORDER BY '' DESC  NULLS LAST;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (((0.24075566006324955) NOT BETWEEN ('dp&1N''#fd') AND (vt0.c0)) IN (x'', CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)) WHERE (((((((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0)))OR(((((((((vt0.c0)OR('k')))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))))AND((- (rt1.c0)))))OR(CAST(x'' AS REAL))))AND(rt1.c2 COLLATE NOCASE))) ORDER BY CAST(((rt1.c1) ISNULL) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0)))OR(((((((((vt0.c0)OR('k')))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))))AND((- (rt1.c0)))))OR(CAST(x'' AS REAL))))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((0.24075566006324955) NOT BETWEEN ('dp&1N''#fd') AND (vt0.c0)) IN (x'', CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)) ORDER BY CAST(((rt1.c1) ISNULL) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (((0.24075566006324955) NOT BETWEEN ('dp&1N''#fd') AND (vt0.c0)) IN (x'', CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)) WHERE (((((((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0)))OR(((((((((vt0.c0)OR('k')))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))))AND((- (rt1.c0)))))OR(CAST(x'' AS REAL))))AND(rt1.c2 COLLATE NOCASE))) ORDER BY CAST(((rt1.c1) ISNULL) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0)))OR(((((((((vt0.c0)OR('k')))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))))AND((- (rt1.c0)))))OR(CAST(x'' AS REAL))))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (((0.24075566006324955) NOT BETWEEN ('dp&1N''#fd') AND (vt0.c0)) IN (x'', CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)) ORDER BY CAST(((rt1.c1) ISNULL) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON (((0.24075566006324955) NOT BETWEEN ('dp&1N''#fd') AND (vt0.c0)) IN (x'', CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 END)) WHERE (((((((((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c0)))OR(((((((((vt0.c0)OR('k')))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c0)))))AND((- (rt1.c0)))))OR(CAST(x'' AS REAL))))AND(rt1.c2 COLLATE NOCASE))) ORDER BY CAST(((rt1.c1) ISNULL) AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM rt1, vt0 WHERE ('zx');
SELECT SUM(count) FROM (SELECT (('zx') IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ('zx');
SELECT SUM(count) FROM (SELECT (('zx') IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ('zx');
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0)/(rt1.c1)))=(LIKE(rt1.c0, rt1.c0)))) ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(rt1.c1)))=(LIKE(rt1.c0, rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0)/(rt1.c1)))=(LIKE(rt1.c0, rt1.c0)))) ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(rt1.c1)))=(LIKE(rt1.c0, rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c0)/(rt1.c1)))=(LIKE(rt1.c0, rt1.c0)))) ORDER BY UNLIKELY(DISTINCT ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((NOT (rt1.c0))))<=((CAST(rt1.c0 AS TEXT))))) ORDER BY (~ (LIKELY(rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt1.c0))))<=((CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ (LIKELY(rt1.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((NOT (rt1.c0))))<=((CAST(rt1.c0 AS TEXT))))) ORDER BY (~ (LIKELY(rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt1.c0))))<=((CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ (LIKELY(rt1.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((NOT (rt1.c0))))<=((CAST(rt1.c0 AS TEXT))))) ORDER BY (~ (LIKELY(rt1.c2))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON 'I}?XGkxj' COLLATE RTRIM WHERE (((rt1.c2) BETWEEN (NULL) AND (rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (NULL) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON 'I}?XGkxj' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON 'I}?XGkxj' COLLATE RTRIM WHERE (((rt1.c2) BETWEEN (NULL) AND (rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN (NULL) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON 'I}?XGkxj' COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON 'I}?XGkxj' COLLATE RTRIM WHERE (((rt1.c2) BETWEEN (NULL) AND (rt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE ((1633709507) BETWEEN (rt1.c0) AND (rt1.c2))  WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS TRUE) END WHERE ((NOT (rt1.c0)) COLLATE RTRIM) ORDER BY ((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))|(CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE ((1633709507) BETWEEN (rt1.c0) AND (rt1.c2))  WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS TRUE) END ORDER BY ((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))|(CAST(vt0.c0 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE ((1633709507) BETWEEN (rt1.c0) AND (rt1.c2))  WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS TRUE) END WHERE ((NOT (rt1.c0)) COLLATE RTRIM) ORDER BY ((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))|(CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE ((1633709507) BETWEEN (rt1.c0) AND (rt1.c2))  WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS TRUE) END ORDER BY ((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))|(CAST(vt0.c0 AS REAL)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE ((1633709507) BETWEEN (rt1.c0) AND (rt1.c2))  WHEN (+ (vt0.c0)) THEN ((vt0.c0) IS TRUE) END WHERE ((NOT (rt1.c0)) COLLATE RTRIM) ORDER BY ((((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)))|(CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE ((~ (((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))))) ORDER BY CASE (NOT (rt1.c0))  WHEN rt1.c2 THEN CAST(vt0.c0 AS TEXT) END, rtreenode(((rt1.c0)<=(vt0.c0)), ((vt0.c0) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE (NOT (rt1.c0))  WHEN rt1.c2 THEN CAST(vt0.c0 AS TEXT) END, rtreenode(((rt1.c0)<=(vt0.c0)), ((vt0.c0) ISNULL)) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((~ (((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))))) ORDER BY CASE (NOT (rt1.c0))  WHEN rt1.c2 THEN CAST(vt0.c0 AS TEXT) END, rtreenode(((rt1.c0)<=(vt0.c0)), ((vt0.c0) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE (NOT (rt1.c0))  WHEN rt1.c2 THEN CAST(vt0.c0 AS TEXT) END, rtreenode(((rt1.c0)<=(vt0.c0)), ((vt0.c0) ISNULL)) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((~ (((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))))) ORDER BY CASE (NOT (rt1.c0))  WHEN rt1.c2 THEN CAST(vt0.c0 AS TEXT) END, rtreenode(((rt1.c0)<=(vt0.c0)), ((vt0.c0) ISNULL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(x'' AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(x'' AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(x'' AS NUMERIC) COLLATE BINARY);
SELECT * FROM vt0, rt1 WHERE (((((((((((((0.8600419297778937)OR(NULL COLLATE NOCASE)))OR(rt1.c0)))OR((((rt1.c1, rt1.c0, vt0.c0))!=((rt1.c0, rt1.c0, rt1.c1))))))AND(CAST(rt1.c2 AS BLOB))))OR(LAST_INSERT_ROWID())))OR(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.8600419297778937)OR(NULL COLLATE NOCASE)))OR(rt1.c0)))OR((((rt1.c1, rt1.c0, vt0.c0))<>((rt1.c0, rt1.c0, rt1.c1))))))AND(CAST(rt1.c2 AS BLOB))))OR(LAST_INSERT_ROWID())))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((((((((0.8600419297778937)OR(NULL COLLATE NOCASE)))OR(rt1.c0)))OR((((rt1.c1, rt1.c0, vt0.c0))!=((rt1.c0, rt1.c0, rt1.c1))))))AND(CAST(rt1.c2 AS BLOB))))OR(LAST_INSERT_ROWID())))OR(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.8600419297778937)OR(NULL COLLATE NOCASE)))OR(rt1.c0)))OR((((rt1.c1, rt1.c0, vt0.c0))<>((rt1.c0, rt1.c0, rt1.c1))))))AND(CAST(rt1.c2 AS BLOB))))OR(LAST_INSERT_ROWID())))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((((((((0.8600419297778937)OR(NULL COLLATE NOCASE)))OR(rt1.c0)))OR((((rt1.c1, rt1.c0, vt0.c0))!=((rt1.c0, rt1.c0, rt1.c1))))))AND(CAST(rt1.c2 AS BLOB))))OR(LAST_INSERT_ROWID())))OR(((rt1.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))<(0.031899761194260634)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))<(0.031899761194260634))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))<(0.031899761194260634)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c0)))<(0.031899761194260634))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))<(0.031899761194260634)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (rt1.c0)) COLLATE RTRIM) ORDER BY ((((']QW?)I{}')OR((rt1.c2 IN ()))))AND('cU')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((']QW?)I{}')OR((rt1.c2 IN ()))))AND('cU')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (rt1.c0)) COLLATE RTRIM) ORDER BY ((((']QW?)I{}')OR((rt1.c2 IN ()))))AND('cU')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((((']QW?)I{}')OR((rt1.c2 IN ()))))AND('cU')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (rt1.c0)) COLLATE RTRIM) ORDER BY ((((']QW?)I{}')OR((rt1.c2 IN ()))))AND('cU')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((0.7019202777675313) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (CASE WHEN rt1.c2 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((0.7019202777675313) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (CASE WHEN rt1.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((0.7019202777675313) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (CASE WHEN rt1.c2 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((0.7019202777675313) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (CASE WHEN rt1.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((0.7019202777675313) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (CASE WHEN rt1.c2 THEN rt1.c1 END)));
SELECT COUNT(*) FROM rt1 WHERE ((NOT ((rt1.c0 IN ())))) ORDER BY ((((((rt1.c2)AND(0.031899761194260634)))OR(rt1.c2))) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(0.031899761194260634)))OR(rt1.c2))) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((NOT ((rt1.c0 IN ())))) ORDER BY ((((((rt1.c2)AND(0.031899761194260634)))OR(rt1.c2))) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)AND(0.031899761194260634)))OR(rt1.c2))) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((NOT ((rt1.c0 IN ())))) ORDER BY ((((((rt1.c2)AND(0.031899761194260634)))OR(rt1.c2))) NOT BETWEEN (((rt1.c1) IS FALSE)) AND (((((rt1.c2)AND(rt1.c2)))OR(rt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c2 IN ()))AND(((vt0.c0) NOT NULL))))OR((('') BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY (- (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN ()))AND(((vt0.c0) NOT NULL))))OR((('') BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c2 IN ()))AND(((vt0.c0) NOT NULL))))OR((('') BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY (- (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN ()))AND(((vt0.c0) NOT NULL))))OR((('') BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c2 IN ()))AND(((vt0.c0) NOT NULL))))OR((('') BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY (- (((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (((((((0.1936604704153605)OR(rt1.c2)))OR(rt1.c1)))IS(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((0.1936604704153605)OR(rt1.c2)))OR(rt1.c1)))IS(rt1.c1))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((0.1936604704153605)OR(rt1.c2)))OR(rt1.c1)))IS(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((((0.1936604704153605)OR(rt1.c2)))OR(rt1.c1)))IS(rt1.c1))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((0.1936604704153605)OR(rt1.c2)))OR(rt1.c1)))IS(rt1.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY CAST(vt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY CAST(vt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY CAST(vt0.c0 AS TEXT) ASC;
SELECT * FROM vt0 CROSS JOIN rt1 ON (- ('-1365226979')) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (- ('-1365226979')));
SELECT * FROM vt0 CROSS JOIN rt1 ON (- ('-1365226979')) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (- ('-1365226979')));
SELECT * FROM vt0 CROSS JOIN rt1 ON (- ('-1365226979')) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL) DESC;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((x'a09a')))) ORDER BY ((((vt0.c0) NOT NULL))||(((vt0.c0)>=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((x'a09a')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))||(((vt0.c0)>=(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((x'a09a')))) ORDER BY ((((vt0.c0) NOT NULL))||(((vt0.c0)>=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((x'a09a')))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))||(((vt0.c0)>=(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((x'a09a')))) ORDER BY ((((vt0.c0) NOT NULL))||(((vt0.c0)>=(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1))) NOT NULL)) ORDER BY 0X467d3e2;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY 0x467d3e2);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1))) NOT NULL)) ORDER BY 0X467d3e2;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY 0x467d3e2);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON (((x''))>((CASE WHEN rt1.c1 THEN rt1.c0 END))) WHERE ((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) IN ())) ORDER BY rt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((x''))>((CASE WHEN rt1.c1 THEN rt1.c0 END))) ORDER BY rt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON (((x''))>((CASE WHEN rt1.c1 THEN rt1.c0 END))) WHERE ((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) IN ())) ORDER BY rt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (((x''))>((CASE WHEN rt1.c1 THEN rt1.c0 END))) ORDER BY rt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON (((x''))>((CASE WHEN rt1.c1 THEN rt1.c0 END))) WHERE ((((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c2)) IN ())) ORDER BY rt1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c1 IN ()))OR(x'')))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1 IN ()))OR(x'')))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c1 IN ()))OR(x'')))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1 IN ()))OR(x'')))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((((rt1.c1 IN ()))OR(x'')))AND(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c2) NOTNULL)  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN NULL END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2) NOTNULL)  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN NULL END END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c2) NOTNULL)  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN NULL END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2) NOTNULL)  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN NULL END END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c2) NOTNULL)  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN NULL END END);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.c0) ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.c0) ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.c0) ORDER BY CAST(rt1.c0 AS INTEGER) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) IS TRUE))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) IS TRUE))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c0) IS TRUE)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ORDER BY ((LIKELY(vt0.c0))<<((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0))<<((NOT (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ORDER BY ((LIKELY(vt0.c0))<<((NOT (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c0))<<((NOT (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ORDER BY ((LIKELY(vt0.c0))<<((NOT (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR('&''I說MRlH')))OR(rt1.c1)) COLLATE RTRIM) ORDER BY (((('Z&(!', 0.2987336080224564, rt1.c0))<((rt1.c0, rt1.c1, vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR('&''I說MRlH')))OR(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((('Z&(!', 0.2987336080224564, rt1.c0))<((rt1.c0, rt1.c1, vt0.c0))) IN ()) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR('&''I說MRlH')))OR(rt1.c1)) COLLATE RTRIM) ORDER BY (((('Z&(!', 0.2987336080224564, rt1.c0))<((rt1.c0, rt1.c1, vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR('&''I說MRlH')))OR(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((('Z&(!', 0.2987336080224564, rt1.c0))<((rt1.c0, rt1.c1, vt0.c0))) IN ()) DESC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)))OR('&''I說MRlH')))OR(rt1.c1)) COLLATE RTRIM) ORDER BY (((('Z&(!', 0.2987336080224564, rt1.c0))<((rt1.c0, rt1.c1, vt0.c0))) IN ()) DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (((vt0.c0)AND('-332527572'))))) ORDER BY ((((rt1.c0) NOTNULL))<=(((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)AND('-332527572'))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0) NOTNULL))<=(((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (((vt0.c0)AND('-332527572'))))) ORDER BY ((((rt1.c0) NOTNULL))<=(((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)AND('-332527572'))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0) NOTNULL))<=(((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (((vt0.c0)AND('-332527572'))))) ORDER BY ((((rt1.c0) NOTNULL))<=(((((((((rt1.c1)OR(rt1.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM rt1, vt0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (('' IN ()));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)<=(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<=(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)<=(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<=(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)<=(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (CAST(CAST(rt1.c0 AS BLOB) AS NUMERIC)) ORDER BY UNLIKELY(((((vt0.c0)OR(rt1.c1)))OR(rt1.c1))), ((((rt1.c1)*(vt0.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt0.c0 END) AND (((rt1.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY UNLIKELY(((((vt0.c0)OR(rt1.c1)))OR(rt1.c1))), ((((rt1.c1)*(vt0.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt0.c0 END) AND (((rt1.c1) ISNULL))) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(CAST(rt1.c0 AS BLOB) AS NUMERIC)) ORDER BY UNLIKELY(((((vt0.c0)OR(rt1.c1)))OR(rt1.c1))), ((((rt1.c1)*(vt0.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt0.c0 END) AND (((rt1.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY UNLIKELY(((((vt0.c0)OR(rt1.c1)))OR(rt1.c1))), ((((rt1.c1)*(vt0.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt0.c0 END) AND (((rt1.c1) ISNULL))) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(CAST(rt1.c0 AS BLOB) AS NUMERIC)) ORDER BY UNLIKELY(((((vt0.c0)OR(rt1.c1)))OR(rt1.c1))), ((((rt1.c1)*(vt0.c0))) BETWEEN (CASE WHEN rt1.c1 THEN vt0.c0 END) AND (((rt1.c1) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY UPPER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY UPPER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY UPPER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY UPPER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY UPPER(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c0  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE NOCASE WHERE (rt1.c1);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((((0.5985343265186913)AND(CAST(rt1.c2 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN '0.12038919138409976' THEN rt1.c0 END)))OR(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((0.5985343265186913)AND(CAST(rt1.c2 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN '0.12038919138409976' THEN rt1.c0 END)))OR(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((((0.5985343265186913)AND(CAST(rt1.c2 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN '0.12038919138409976' THEN rt1.c0 END)))OR(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((0.5985343265186913)AND(CAST(rt1.c2 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN '0.12038919138409976' THEN rt1.c0 END)))OR(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((((0.5985343265186913)AND(CAST(rt1.c2 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))OR(CASE WHEN '0.12038919138409976' THEN rt1.c0 END)))OR(rt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (x'b3ca') AND (rt1.c0)))|((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (x'b3ca') AND (rt1.c0)))|((NULL IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (x'b3ca') AND (rt1.c0)))|((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (x'b3ca') AND (rt1.c0)))|((NULL IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (x'b3ca') AND (rt1.c0)))|((NULL IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)) IN ())) ORDER BY CAST(((vt0.c0)GLOB(rt1.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((vt0.c0)GLOB(rt1.c2)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)) IN ())) ORDER BY CAST(((vt0.c0)GLOB(rt1.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(((vt0.c0)GLOB(rt1.c2)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)) IN ())) ORDER BY CAST(((vt0.c0)GLOB(rt1.c2)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c2) BETWEEN (vt0.c0) AND (-1.285096744E9))  WHEN ((((0.03673997466291645)OR(0.8958981565421276)))OR(vt0.c0)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) ISNULL);
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c2) BETWEEN (vt0.c0) AND (-1.285096744E9))  WHEN ((((0.03673997466291645)OR(0.8958981565421276)))OR(vt0.c0)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) ISNULL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c2) BETWEEN (vt0.c0) AND (-1.285096744E9))  WHEN ((((0.03673997466291645)OR(0.8958981565421276)))OR(vt0.c0)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) ISNULL);
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c2) BETWEEN (vt0.c0) AND (-1.285096744E9))  WHEN ((((0.03673997466291645)OR(0.8958981565421276)))OR(vt0.c0)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) ISNULL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c2) BETWEEN (vt0.c0) AND (-1.285096744E9))  WHEN ((((0.03673997466291645)OR(0.8958981565421276)))OR(vt0.c0)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END WHERE ((((rt1.c2 IN ())) NOTNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c1 END) ISNULL);
SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT x'babe')) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT x'babe')) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT x'babe')) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT x'babe')) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT x'babe')) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('-2030532280')AND(0xfffffffff6fcceca)))OR(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-2030532280')AND(0xfffffffff6fcceca)))OR(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('-2030532280')AND(0xfffffffff6fcceca)))OR(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('-2030532280')AND(0xfffffffff6fcceca)))OR(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('-2030532280')AND(0xfffffffff6fcceca)))OR(((vt0.c0)|(vt0.c0)))));
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2)LIKE(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)LIKE(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2)LIKE(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)LIKE(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c2)LIKE(rt1.c2)) IN ()));
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)>>(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)>>(vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN (((vt0.c0)>>(vt0.c0))))) ORDER BY vt0.c0;
SELECT * FROM vt0 WHERE (0.22803783255595378) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.22803783255595378) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (0.22803783255595378) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.22803783255595378) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (0.22803783255595378) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (((vt0.c0)!=((+ (rt1.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((((rt1.c0))==((rt1.c2))))) AND ((((rt1.c1) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)!=((+ (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0)) BETWEEN (((((rt1.c0))=((rt1.c2))))) AND ((((rt1.c1) NOT NULL)))) DESC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((vt0.c0)!=((+ (rt1.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((((rt1.c0))==((rt1.c2))))) AND ((((rt1.c1) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)!=((+ (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0)) BETWEEN (((((rt1.c0))=((rt1.c2))))) AND ((((rt1.c1) NOT NULL)))) DESC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((vt0.c0)!=((+ (rt1.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((((rt1.c0))==((rt1.c2))))) AND ((((rt1.c1) NOT NULL)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<>(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<>(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)<>(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0, rt1 WHERE (CASE ((rt1.c2)||(rt1.c2))  WHEN ((rt1.c0) IS TRUE) THEN QUOTE(rt1.c0) WHEN ((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)) THEN ((vt0.c0) IS TRUE) WHEN (((rt1.c2))!=((vt0.c0))) THEN ((vt0.c0)-(rt1.c2)) ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)||(rt1.c2))  WHEN ((rt1.c0) IS TRUE) THEN QUOTE(rt1.c0) WHEN ((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)) THEN ((vt0.c0) IS TRUE) WHEN (((rt1.c2))!=((vt0.c0))) THEN ((vt0.c0)-(rt1.c2)) ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CASE ((rt1.c2)||(rt1.c2))  WHEN ((rt1.c0) IS TRUE) THEN QUOTE(rt1.c0) WHEN ((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)) THEN ((vt0.c0) IS TRUE) WHEN (((rt1.c2))!=((vt0.c0))) THEN ((vt0.c0)-(rt1.c2)) ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)||(rt1.c2))  WHEN ((rt1.c0) IS TRUE) THEN QUOTE(rt1.c0) WHEN ((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)) THEN ((vt0.c0) IS TRUE) WHEN (((rt1.c2))!=((vt0.c0))) THEN ((vt0.c0)-(rt1.c2)) ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CASE ((rt1.c2)||(rt1.c2))  WHEN ((rt1.c0) IS TRUE) THEN QUOTE(rt1.c0) WHEN ((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)) THEN ((vt0.c0) IS TRUE) WHEN (((rt1.c2))!=((vt0.c0))) THEN ((vt0.c0)-(rt1.c2)) ELSE ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(''))) ORDER BY ((((((rt1.c2)%(rt1.c2)))AND(((rt1.c1) ISNULL))))AND(-6.66409505E8))  NULLS FIRST, 0.734963893076377  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(''))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)%(rt1.c2)))AND(((rt1.c1) ISNULL))))AND(-6.66409505E8))  NULLS FIRST, 0.734963893076377  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(''))) ORDER BY ((((((rt1.c2)%(rt1.c2)))AND(((rt1.c1) ISNULL))))AND(-6.66409505E8))  NULLS FIRST, 0.734963893076377  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(''))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)%(rt1.c2)))AND(((rt1.c1) ISNULL))))AND(-6.66409505E8))  NULLS FIRST, 0.734963893076377  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE(''))) ORDER BY ((((((rt1.c2)%(rt1.c2)))AND(((rt1.c1) ISNULL))))AND(-6.66409505E8))  NULLS FIRST, 0.734963893076377  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE ((+ (((vt0.c0)&(rt1.c0))))) ORDER BY ((rt1.c0) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)&(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0) IS TRUE) DESC);
SELECT * FROM vt0, rt1 WHERE ((+ (((vt0.c0)&(rt1.c0))))) ORDER BY ((rt1.c0) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)&(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0) IS TRUE) DESC);
SELECT * FROM vt0, rt1 WHERE ((+ (((vt0.c0)&(rt1.c0))))) ORDER BY ((rt1.c0) IS TRUE) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((x'') ISNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN ((x'') ISNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((x'') ISNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN ((x'') ISNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((x'') ISNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))OR((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))OR((~ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))OR((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))OR((~ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))OR((~ (vt0.c0))));
SELECT * FROM vt0, rt1 WHERE ((CAST(rt1.c0 AS BLOB) IN ())) ORDER BY (((rt1.c2))!=((rt1.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2))<>((rt1.c2))) COLLATE NOCASE);
SELECT * FROM vt0, rt1 WHERE ((CAST(rt1.c0 AS BLOB) IN ())) ORDER BY (((rt1.c2))!=((rt1.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2))<>((rt1.c2))) COLLATE NOCASE);
SELECT * FROM vt0, rt1 WHERE ((CAST(rt1.c0 AS BLOB) IN ())) ORDER BY (((rt1.c2))!=((rt1.c2))) COLLATE NOCASE;
SELECT ALL * FROM vt0, rt1 WHERE (((((NULL) BETWEEN (rt1.c0) AND (rt1.c0)))<(CAST(rt1.c2 AS BLOB)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (rt1.c0) AND (rt1.c0)))<(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((NULL) BETWEEN (rt1.c0) AND (rt1.c0)))<(CAST(rt1.c2 AS BLOB)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (rt1.c0) AND (rt1.c0)))<(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((NULL) BETWEEN (rt1.c0) AND (rt1.c0)))<(CAST(rt1.c2 AS BLOB)))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)&(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)&(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS INTEGER));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)GLOB(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)GLOB(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)GLOB(((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<<((- (rt1.c0)))) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))>=(((rt1.c2)IS NOT(rt1.c0))))) ORDER BY (((rt1.c0)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) AND ((((NULL)||(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))>=(((rt1.c2)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<<((- (rt1.c0)))) ORDER BY (((rt1.c0)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) AND ((((NULL)||(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<<((- (rt1.c0)))) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))>=(((rt1.c2)IS NOT(rt1.c0))))) ORDER BY (((rt1.c0)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) AND ((((NULL)||(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))>=(((rt1.c2)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<<((- (rt1.c0)))) ORDER BY (((rt1.c0)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) AND ((((NULL)||(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)<<((- (rt1.c0)))) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))>=(((rt1.c2)IS NOT(rt1.c0))))) ORDER BY (((rt1.c0)) NOT BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0)))) AND ((((NULL)||(vt0.c0)))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS INTEGER));
SELECT * FROM vt0 CROSS JOIN rt1 ON CAST(TRIM(DISTINCT vt0.c0) AS NUMERIC) WHERE (CASE WHEN (rt1.c0 IN (rt1.c0)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))) ELSE ((rt1.c1)<>(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c0 IN (rt1.c0)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))) ELSE ((rt1.c1)!=(rt1.c1)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(TRIM(DISTINCT vt0.c0) AS NUMERIC));
SELECT * FROM vt0 CROSS JOIN rt1 ON CAST(TRIM(DISTINCT vt0.c0) AS NUMERIC) WHERE (CASE WHEN (rt1.c0 IN (rt1.c0)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))) ELSE ((rt1.c1)<>(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c0 IN (rt1.c0)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))) ELSE ((rt1.c1)!=(rt1.c1)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(TRIM(DISTINCT vt0.c0) AS NUMERIC));
SELECT * FROM vt0 CROSS JOIN rt1 ON CAST(TRIM(DISTINCT vt0.c0) AS NUMERIC) WHERE (CASE WHEN (rt1.c0 IN (rt1.c0)) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c2, rt1.c1, rt1.c1))) ELSE ((rt1.c1)<>(rt1.c1)) END);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL), HEX(DISTINCT rt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL), HEX(DISTINCT rt1.c0)  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL), HEX(DISTINCT rt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL), HEX(DISTINCT rt1.c0)  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1) ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL), HEX(DISTINCT rt1.c0)  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((rt1.c2 COLLATE NOCASE) NOT NULL));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c0)&(rt1.c0)))GLOB('\rw')) WHERE ('C6/hJ%z鐕F') ORDER BY CAST(rt1.c2 COLLATE BINARY AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (('C6/hJ%z鐕F') IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c0)&(rt1.c0)))GLOB('\rw')) ORDER BY CAST(rt1.c2 COLLATE BINARY AS NUMERIC) DESC);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c0)&(rt1.c0)))GLOB('\rw')) WHERE ('C6/hJ%z鐕F') ORDER BY CAST(rt1.c2 COLLATE BINARY AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (('C6/hJ%z鐕F') IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c0)&(rt1.c0)))GLOB('\rw')) ORDER BY CAST(rt1.c2 COLLATE BINARY AS NUMERIC) DESC);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c0)&(rt1.c0)))GLOB('\rw')) WHERE ('C6/hJ%z鐕F') ORDER BY CAST(rt1.c2 COLLATE BINARY AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (json_object(rt1.c1, rt1.c0) COLLATE RTRIM) ORDER BY ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (CAST(rt1.c1 AS INTEGER))), ((0x539b2077) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(rt1.c1, rt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (CAST(rt1.c1 AS INTEGER))), ((0X539b2077) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (json_object(rt1.c1, rt1.c0) COLLATE RTRIM) ORDER BY ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (CAST(rt1.c1 AS INTEGER))), ((0x539b2077) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_object(rt1.c1, rt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (CAST(rt1.c1 AS INTEGER))), ((0X539b2077) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (json_object(rt1.c1, rt1.c0) COLLATE RTRIM) ORDER BY ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (CAST(rt1.c1 AS INTEGER))), ((0x539b2077) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)))) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))))) ORDER BY LENGTH(rt1.c2 COLLATE NOCASE) ASC, ((((((rt1.c0)!=(rt1.c0)))OR(rt1.c1 COLLATE BINARY)))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)))) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY LENGTH(rt1.c2 COLLATE NOCASE) ASC, ((((((rt1.c0)<>(rt1.c0)))OR(rt1.c1 COLLATE BINARY)))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)))) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))))) ORDER BY LENGTH(rt1.c2 COLLATE NOCASE) ASC, ((((((rt1.c0)!=(rt1.c0)))OR(rt1.c1 COLLATE BINARY)))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)))) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY LENGTH(rt1.c2 COLLATE NOCASE) ASC, ((((((rt1.c0)<>(rt1.c0)))OR(rt1.c1 COLLATE BINARY)))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c1)<=(rt1.c2)))) AND ((((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)))))) ORDER BY LENGTH(rt1.c2 COLLATE NOCASE) ASC, ((((((rt1.c0)!=(rt1.c0)))OR(rt1.c1 COLLATE BINARY)))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS FIRST;
SELECT * FROM rt1 WHERE (LOWER(rt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt1.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LOWER(rt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(rt1.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LOWER(rt1.c0) COLLATE BINARY);
SELECT * FROM vt0, rt1 WHERE ((((- (rt1.c2)))>((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))>((- (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((- (rt1.c2)))>((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))>((- (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((- (rt1.c2)))>((- (rt1.c2)))));
SELECT * FROM vt0, rt1 WHERE (CAST(rtreenode(rt1.c1, rt1.c0) AS NUMERIC)) ORDER BY CASE WHEN ((x'') IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN ((rt1.c1)/(rt1.c0)) THEN 'iY5\n' WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE rt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rtreenode(rt1.c1, rt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((x'') IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN ((rt1.c1)/(rt1.c0)) THEN 'iY5\n' WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE rt1.c0 END DESC);
SELECT * FROM vt0, rt1 WHERE (CAST(rtreenode(rt1.c1, rt1.c0) AS NUMERIC)) ORDER BY CASE WHEN ((x'') IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN ((rt1.c1)/(rt1.c0)) THEN 'iY5\n' WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE rt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rtreenode(rt1.c1, rt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN ((x'') IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN ((rt1.c1)/(rt1.c0)) THEN 'iY5\n' WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE rt1.c0 END DESC);
SELECT * FROM vt0, rt1 WHERE (CAST(rtreenode(rt1.c1, rt1.c0) AS NUMERIC)) ORDER BY CASE WHEN ((x'') IS TRUE) THEN ((rt1.c0) NOTNULL) WHEN ((rt1.c1)/(rt1.c0)) THEN 'iY5\n' WHEN rt1.c0 COLLATE BINARY THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE rt1.c0 END DESC;
SELECT * FROM rt1, vt0 WHERE ((('m\rR	蜍쮄4')LIKE(((((rt1.c2)OR(rt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('m\rR	蜍쮄4')LIKE(((((rt1.c2)OR(rt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((('m\rR	蜍쮄4')LIKE(((((rt1.c2)OR(rt1.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('m\rR	蜍쮄4')LIKE(((((rt1.c2)OR(rt1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((('m\rR	蜍쮄4')LIKE(((((rt1.c2)OR(rt1.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE ((- (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c2))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c2))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((- (rt1.c2)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((NULL IN ())) ORDER BY ((((rt1.c2)GLOB(rt1.c0)))AND(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)GLOB(rt1.c0)))AND(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NULL IN ())) ORDER BY ((((rt1.c2)GLOB(rt1.c0)))AND(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)GLOB(rt1.c0)))AND(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NULL IN ())) ORDER BY ((((rt1.c2)GLOB(rt1.c0)))AND(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))) ASC;
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((UPPER(rt1.c2)) IS FALSE)) ORDER BY CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE DESC, CASE WHEN (rt1.c1 IN (rt1.c0)) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE (((rt1.c2, rt1.c2, x''))<>((rt1.c0, rt1.c1, rt1.c0))) END, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c2)) IS FALSE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE DESC, CASE WHEN (rt1.c1 IN (rt1.c0)) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE (((rt1.c2, rt1.c2, x''))!=((rt1.c0, rt1.c1, rt1.c0))) END, vt0.c0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((UPPER(rt1.c2)) IS FALSE)) ORDER BY CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE DESC, CASE WHEN (rt1.c1 IN (rt1.c0)) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE (((rt1.c2, rt1.c2, x''))<>((rt1.c0, rt1.c1, rt1.c0))) END, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt1.c2)) IS FALSE)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE DESC, CASE WHEN (rt1.c1 IN (rt1.c0)) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE (((rt1.c2, rt1.c2, x''))!=((rt1.c0, rt1.c1, rt1.c0))) END, vt0.c0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((UPPER(rt1.c2)) IS FALSE)) ORDER BY CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE DESC, CASE WHEN (rt1.c1 IN (rt1.c0)) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c1 END ELSE (((rt1.c2, rt1.c2, x''))<>((rt1.c0, rt1.c1, rt1.c0))) END, vt0.c0;
SELECT * FROM vt0, rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((rt1.c1 IN ()));
SELECT COUNT(*) FROM rt1 WHERE (CHAR(CAST(NULL AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CAST(NULL AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CHAR(CAST(NULL AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CAST(NULL AS NUMERIC))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CHAR(CAST(NULL AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS TEXT)) ORDER BY ((rt1.c2 COLLATE NOCASE)OR(((NULL) BETWEEN (rt1.c0) AND (0xffffffffd8ff4638))))  NULLS LAST, (((rt1.c0)) BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2 COLLATE NOCASE)OR(((NULL) BETWEEN (rt1.c0) AND (0Xffffffffd8ff4638))))  NULLS LAST, (((rt1.c0)) BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((rt1.c2 IN ())))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS TEXT)) ORDER BY ((rt1.c2 COLLATE NOCASE)OR(((NULL) BETWEEN (rt1.c0) AND (0xffffffffd8ff4638))))  NULLS LAST, (((rt1.c0)) BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2 COLLATE NOCASE)OR(((NULL) BETWEEN (rt1.c0) AND (0Xffffffffd8ff4638))))  NULLS LAST, (((rt1.c0)) BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((rt1.c2 IN ())))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS TEXT)) ORDER BY ((rt1.c2 COLLATE NOCASE)OR(((NULL) BETWEEN (rt1.c0) AND (0xffffffffd8ff4638))))  NULLS LAST, (((rt1.c0)) BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((rt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0 COLLATE BINARY)IS(((rt1.c1) NOT BETWEEN (rt1.c2) AND (0.5004630735950861)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE BINARY)IS(((rt1.c1) NOT BETWEEN (rt1.c2) AND (0.5004630735950861))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0 COLLATE BINARY)IS(((rt1.c1) NOT BETWEEN (rt1.c2) AND (0.5004630735950861)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE BINARY)IS(((rt1.c1) NOT BETWEEN (rt1.c2) AND (0.5004630735950861))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c0 COLLATE BINARY)IS(((rt1.c1) NOT BETWEEN (rt1.c2) AND (0.5004630735950861)))));
SELECT * FROM rt1, vt0 WHERE ((- (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(TRIM(rt1.c2, rt1.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(TRIM(rt1.c2, rt1.c0) AS INTEGER));
SELECT * FROM rt1, vt0 WHERE ((- (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(TRIM(rt1.c2, rt1.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(TRIM(rt1.c2, rt1.c0) AS INTEGER));
SELECT * FROM rt1, vt0 WHERE ((- (((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(TRIM(rt1.c2, rt1.c0) AS INTEGER);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt1.c1)) AS NUMERIC) WHERE ((rt1.c1 COLLATE RTRIM IN (((vt0.c0) IS FALSE)))) ORDER BY ((((((((CASE WHEN rt1.c0 THEN x'6e34' WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END)AND(((rt1.c1)*(rt1.c2)))))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE rt1.c1  WHEN -1.178980649E9 THEN rt1.c1 ELSE rt1.c2 END)) DESC, CAST(CAST(rt1.c1 AS NUMERIC) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt1.c1)) AS NUMERIC) ORDER BY ((((((((CASE WHEN rt1.c0 THEN x'6e34' WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END)AND(((rt1.c1)*(rt1.c2)))))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE rt1.c1  WHEN -1.178980649E9 THEN rt1.c1 ELSE rt1.c2 END)) DESC, CAST(CAST(rt1.c1 AS NUMERIC) AS TEXT) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt1.c1)) AS NUMERIC) WHERE ((rt1.c1 COLLATE RTRIM IN (((vt0.c0) IS FALSE)))) ORDER BY ((((((((CASE WHEN rt1.c0 THEN x'6e34' WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END)AND(((rt1.c1)*(rt1.c2)))))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE rt1.c1  WHEN -1.178980649E9 THEN rt1.c1 ELSE rt1.c2 END)) DESC, CAST(CAST(rt1.c1 AS NUMERIC) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt1.c1)) AS NUMERIC) ORDER BY ((((((((CASE WHEN rt1.c0 THEN x'6e34' WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END)AND(((rt1.c1)*(rt1.c2)))))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE rt1.c1  WHEN -1.178980649E9 THEN rt1.c1 ELSE rt1.c2 END)) DESC, CAST(CAST(rt1.c1 AS NUMERIC) AS TEXT) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((~ (rt1.c1)) AS NUMERIC) WHERE ((rt1.c1 COLLATE RTRIM IN (((vt0.c0) IS FALSE)))) ORDER BY ((((((((CASE WHEN rt1.c0 THEN x'6e34' WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END)AND(((rt1.c1)*(rt1.c2)))))AND(rt1.c0)))OR(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE rt1.c1  WHEN -1.178980649E9 THEN rt1.c1 ELSE rt1.c2 END)) DESC, CAST(CAST(rt1.c1 AS NUMERIC) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2))) NOTNULL) WHERE (((((((vt0.c0)OR(rt1.c0)))AND(x'')))<=(LIKELIHOOD(x'f473', 0.32185349643784367)))) ORDER BY CASE rt1.c2  WHEN rt1.c2 COLLATE BINARY THEN (((vt0.c0))<=((rt1.c2))) ELSE CAST(rt1.c0 AS NUMERIC) END ASC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt1.c0)))AND(x'')))<=(LIKELIHOOD(x'f473', 0.32185349643784367)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2))) NOTNULL) ORDER BY CASE rt1.c2  WHEN rt1.c2 COLLATE BINARY THEN (((vt0.c0))<=((rt1.c2))) ELSE CAST(rt1.c0 AS NUMERIC) END ASC  NULLS FIRST, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2))) NOTNULL) WHERE (((((((vt0.c0)OR(rt1.c0)))AND(x'')))<=(LIKELIHOOD(x'f473', 0.32185349643784367)))) ORDER BY CASE rt1.c2  WHEN rt1.c2 COLLATE BINARY THEN (((vt0.c0))<=((rt1.c2))) ELSE CAST(rt1.c0 AS NUMERIC) END ASC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt1.c0)))AND(x'')))<=(LIKELIHOOD(x'f473', 0.32185349643784367)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2))) NOTNULL) ORDER BY CASE rt1.c2  WHEN rt1.c2 COLLATE BINARY THEN (((vt0.c0))<=((rt1.c2))) ELSE CAST(rt1.c0 AS NUMERIC) END ASC  NULLS FIRST, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((vt0.c0)AND(vt0.c0)))OR(rt1.c2))) NOTNULL) WHERE (((((((vt0.c0)OR(rt1.c0)))AND(x'')))<=(LIKELIHOOD(x'f473', 0.32185349643784367)))) ORDER BY CASE rt1.c2  WHEN rt1.c2 COLLATE BINARY THEN (((vt0.c0))<=((rt1.c2))) ELSE CAST(rt1.c0 AS NUMERIC) END ASC  NULLS FIRST, vt0.c0 DESC;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1)AND((((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)AND((((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1)AND((((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)AND((((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1)AND((((rt1.c0, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((x'')<(vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC, (LIKELY(vt0.c0) IN ()) DESC, ((vt0.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((x'')<(vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC, (LIKELY(vt0.c0) IN ()) DESC, ((vt0.c0 IN ()) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((x'')<(vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC, (LIKELY(vt0.c0) IN ()) DESC, ((vt0.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((x'')<(vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC, (LIKELY(vt0.c0) IN ()) DESC, ((vt0.c0 IN ()) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((x'')<(vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC, (LIKELY(vt0.c0) IN ()) DESC, ((vt0.c0 IN ()) IN ()) DESC;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))>(((vt0.c0) IS FALSE)))) ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))>(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))>(((vt0.c0) IS FALSE)))) ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))>(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))>(((vt0.c0) IS FALSE)))) ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON NULL WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON NULL);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON NULL WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON NULL);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON NULL WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (0x3532c045) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((0X3532c045) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (0x3532c045) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((0X3532c045) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (0x3532c045) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM;
SELECT * FROM vt0, rt1 WHERE ((CASE '-412665863'  WHEN NULL THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN x'' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE '-412665863'  WHEN NULL THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN x'' END IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((CASE '-412665863'  WHEN NULL THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN x'' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE '-412665863'  WHEN NULL THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN x'' END IN ())) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((CASE '-412665863'  WHEN NULL THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN x'' END IN ()));
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT '' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT '' COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT '' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT '' COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT '' COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1)AND(rt1.c2))) IS TRUE) WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1)AND(rt1.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1)AND(rt1.c2))) IS TRUE) WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1)AND(rt1.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c1)AND(rt1.c2))) IS TRUE) WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2) NOTNULL)) BETWEEN (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND ((((rt1.c2))>((x'')))))) ORDER BY (((rt1.c0)) NOT BETWEEN (('1648860793' COLLATE BINARY)) AND ((UNLIKELY(DISTINCT rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL)) BETWEEN (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND ((((rt1.c2))>((x'')))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN (('1648860793' COLLATE BINARY)) AND ((UNLIKELY(DISTINCT rt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2) NOTNULL)) BETWEEN (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND ((((rt1.c2))>((x'')))))) ORDER BY (((rt1.c0)) NOT BETWEEN (('1648860793' COLLATE BINARY)) AND ((UNLIKELY(DISTINCT rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL)) BETWEEN (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND ((((rt1.c2))>((x'')))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)) NOT BETWEEN (('1648860793' COLLATE BINARY)) AND ((UNLIKELY(DISTINCT rt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2) NOTNULL)) BETWEEN (((NULL) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND ((((rt1.c2))>((x'')))))) ORDER BY (((rt1.c0)) NOT BETWEEN (('1648860793' COLLATE BINARY)) AND ((UNLIKELY(DISTINCT rt1.c1))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((((x'')GLOB(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((x'')GLOB(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((((x'')GLOB(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((x'')GLOB(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((((x'')GLOB(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1 COLLATE BINARY)AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(IFNULL(DISTINCT rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 COLLATE BINARY)AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(IFNULL(DISTINCT rt1.c0, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1 COLLATE BINARY)AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(IFNULL(DISTINCT rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 COLLATE BINARY)AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(IFNULL(DISTINCT rt1.c0, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1 COLLATE BINARY)AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(IFNULL(DISTINCT rt1.c0, rt1.c1))));
SELECT * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE (rt1.c1) ORDER BY x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((HEX(vt0.c0)) IS FALSE)) ORDER BY (((- (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST, (((((vt0.c0)-(NULL)), '0.760208543060708', vt0.c0 COLLATE BINARY))<((vt0.c0, x'', vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST, (((((vt0.c0)-(NULL)), '0.760208543060708', vt0.c0 COLLATE BINARY))<((vt0.c0, x'', vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((HEX(vt0.c0)) IS FALSE)) ORDER BY (((- (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST, (((((vt0.c0)-(NULL)), '0.760208543060708', vt0.c0 COLLATE BINARY))<((vt0.c0, x'', vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST, (((((vt0.c0)-(NULL)), '0.760208543060708', vt0.c0 COLLATE BINARY))<((vt0.c0, x'', vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((HEX(vt0.c0)) IS FALSE)) ORDER BY (((- (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS LAST, (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST, (((((vt0.c0)-(NULL)), '0.760208543060708', vt0.c0 COLLATE BINARY))<((vt0.c0, x'', vt0.c0)))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0)))) ORDER BY ((NOT (vt0.c0)) IN (((vt0.c0)-(vt0.c0)))), (NOT (TRIM(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN (((vt0.c0)-(vt0.c0)))), (NOT (TRIM(vt0.c0))) DESC);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0)))) ORDER BY ((NOT (vt0.c0)) IN (((vt0.c0)-(vt0.c0)))), (NOT (TRIM(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((NOT (vt0.c0)) IN (((vt0.c0)-(vt0.c0)))), (NOT (TRIM(vt0.c0))) DESC);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (SQLITE_COMPILEOPTION_GET(vt0.c0)))) ORDER BY ((NOT (vt0.c0)) IN (((vt0.c0)-(vt0.c0)))), (NOT (TRIM(vt0.c0))) DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((0X34a544cc) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0X34a544cc) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((0X34a544cc) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0X34a544cc) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((0X34a544cc) NOTNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.060341017902758254);
SELECT SUM(count) FROM (SELECT ALL ((0.060341017902758254) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.060341017902758254);
SELECT SUM(count) FROM (SELECT ALL ((0.060341017902758254) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.060341017902758254);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE NOCASE WHERE (CASE ((rt1.c0)|(rt1.c0))  WHEN (rt1.c2 IN ()) THEN rt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)|(rt1.c0))  WHEN (rt1.c2 IN ()) THEN rt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE NOCASE WHERE (CASE ((rt1.c0)|(rt1.c0))  WHEN (rt1.c2 IN ()) THEN rt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)|(rt1.c0))  WHEN (rt1.c2 IN ()) THEN rt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB) COLLATE NOCASE WHERE (CASE ((rt1.c0)|(rt1.c0))  WHEN (rt1.c2 IN ()) THEN rt1.c0 COLLATE NOCASE END);
SELECT ALL * FROM rt1, vt0 WHERE (((NULL)GLOB(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((NULL)GLOB(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((NULL)GLOB(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (((rt1.c0)AND(rt1.c0))) AND ((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (((rt1.c0)AND(rt1.c0))) AND ((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (((rt1.c0)AND(rt1.c0))) AND ((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (((rt1.c0)AND(rt1.c0))) AND ((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (((rt1.c0)AND(rt1.c0))) AND ((((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c1, rt1.c2))))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 0.07600696785987027 END)+('K')));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 0.07600696785987027 END)+('K'))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 0.07600696785987027 END)+('K')));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 0.07600696785987027 END)+('K'))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 0.07600696785987027 END)+('K')));
SELECT ALL * FROM rt1 WHERE (CASE CAST(rt1.c1 AS REAL)  WHEN (rt1.c1 IN ()) THEN ((0Xffffffffc2a0a072)|(0.7578760271643938)) ELSE CAST(rt1.c0 AS TEXT) END) ORDER BY ((((rt1.c2) ISNULL))GLOB((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS REAL)  WHEN (rt1.c1 IN ()) THEN ((0Xffffffffc2a0a072)|(0.7578760271643938)) ELSE CAST(rt1.c0 AS TEXT) END) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) ISNULL))GLOB((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) DESC);
SELECT ALL * FROM rt1 WHERE (CASE CAST(rt1.c1 AS REAL)  WHEN (rt1.c1 IN ()) THEN ((0Xffffffffc2a0a072)|(0.7578760271643938)) ELSE CAST(rt1.c0 AS TEXT) END) ORDER BY ((((rt1.c2) ISNULL))GLOB((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c1 AS REAL)  WHEN (rt1.c1 IN ()) THEN ((0Xffffffffc2a0a072)|(0.7578760271643938)) ELSE CAST(rt1.c0 AS TEXT) END) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) ISNULL))GLOB((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) DESC);
SELECT ALL * FROM rt1 WHERE (CASE CAST(rt1.c1 AS REAL)  WHEN (rt1.c1 IN ()) THEN ((0Xffffffffc2a0a072)|(0.7578760271643938)) ELSE CAST(rt1.c0 AS TEXT) END) ORDER BY ((((rt1.c2) ISNULL))GLOB((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c0)<=(rt1.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (('1567900396') NOT BETWEEN (rt1.c2) AND (rt1.c2)) END) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (0.9784594858225292))) NOTNULL) ASC, (((vt0.c0)LIKE(rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)<=(rt1.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (('1567900396') NOT BETWEEN (rt1.c2) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (0.9784594858225292))) NOTNULL) ASC, (((vt0.c0)LIKE(rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c0)<=(rt1.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (('1567900396') NOT BETWEEN (rt1.c2) AND (rt1.c2)) END) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (0.9784594858225292))) NOTNULL) ASC, (((vt0.c0)LIKE(rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)<=(rt1.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (('1567900396') NOT BETWEEN (rt1.c2) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (0.9784594858225292))) NOTNULL) ASC, (((vt0.c0)LIKE(rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c0)<=(rt1.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE (('1567900396') NOT BETWEEN (rt1.c2) AND (rt1.c2)) END) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (0.9784594858225292))) NOTNULL) ASC, (((vt0.c0)LIKE(rt1.c1)) IN ()) DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((rt1.c2)|(vt0.c0)) COLLATE NOCASE WHERE (((NULL) IS FALSE)) ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (IFNULL(DISTINCT rt1.c0, rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((rt1.c2)|(vt0.c0)) COLLATE NOCASE ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (IFNULL(DISTINCT rt1.c0, rt1.c2))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((rt1.c2)|(vt0.c0)) COLLATE NOCASE WHERE (((NULL) IS FALSE)) ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (IFNULL(DISTINCT rt1.c0, rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((rt1.c2)|(vt0.c0)) COLLATE NOCASE ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (IFNULL(DISTINCT rt1.c0, rt1.c2))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((rt1.c2)|(vt0.c0)) COLLATE NOCASE WHERE (((NULL) IS FALSE)) ORDER BY ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (IFNULL(DISTINCT rt1.c0, rt1.c2))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(vt0.c0) AS TEXT)) ORDER BY HEX((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_GET(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY HEX((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(vt0.c0) AS TEXT)) ORDER BY HEX((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_GET(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY HEX((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(vt0.c0) AS TEXT)) ORDER BY HEX((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (json_extract(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, CAST('' AS REAL), ((rt1.c2) NOT NULL), rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, CAST('' AS REAL), ((rt1.c2) NOT NULL), rt1.c0)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (json_extract(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, CAST('' AS REAL), ((rt1.c2) NOT NULL), rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END, CAST('' AS REAL), ((rt1.c2) NOT NULL), rt1.c0)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((vt0.c0, rt1.c2, rt1.c1)))) NOT BETWEEN (((((((((x'abe7')OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c2))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((vt0.c0, rt1.c2, rt1.c1)))) NOT BETWEEN (((((((((x'abe7')OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c2))) AND (NULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((vt0.c0, rt1.c2, rt1.c1)))) NOT BETWEEN (((((((((x'abe7')OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c2))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((vt0.c0, rt1.c2, rt1.c1)))) NOT BETWEEN (((((((((x'abe7')OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c2))) AND (NULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c1, vt0.c0)) AND ((vt0.c0, rt1.c2, rt1.c1)))) NOT BETWEEN (((((((((x'abe7')OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c2))) AND (NULL)));
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1) IS TRUE))>>(CASE WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS TRUE))>>(CASE WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1) IS TRUE))>>(CASE WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS TRUE))>>(CASE WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY NULL);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1) IS TRUE))>>(CASE WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS REAL)) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '0.578413290067519')) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '0.578413290067519')) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS REAL)) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '0.578413290067519')) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '0.578413290067519')) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS REAL)) ORDER BY CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '0.578413290067519')) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((+ ((- (vt0.c0)))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON IFNULL(rt1.c2, x'') COLLATE BINARY WHERE (json_array(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END, CAST(rt1.c2 AS REAL))) ORDER BY (((((vt0.c0))<=((x'5d10'))))>=(rt1.c2 COLLATE BINARY)), LOWER(LTRIM(rt1.c0)) ASC, CASE WHEN CAST(vt0.c0 AS REAL) THEN ((('0.1632257060924429')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END, CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON IFNULL(rt1.c2, x'') COLLATE BINARY ORDER BY (((((vt0.c0))<=((x'5d10'))))>=(rt1.c2 COLLATE BINARY)), LOWER(LTRIM(rt1.c0)) ASC, CASE WHEN CAST(vt0.c0 AS REAL) THEN ((('0.1632257060924429')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON IFNULL(rt1.c2, x'') COLLATE BINARY WHERE (json_array(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END, CAST(rt1.c2 AS REAL))) ORDER BY (((((vt0.c0))<=((x'5d10'))))>=(rt1.c2 COLLATE BINARY)), LOWER(LTRIM(rt1.c0)) ASC, CASE WHEN CAST(vt0.c0 AS REAL) THEN ((('0.1632257060924429')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END, CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON IFNULL(rt1.c2, x'') COLLATE BINARY ORDER BY (((((vt0.c0))<=((x'5d10'))))>=(rt1.c2 COLLATE BINARY)), LOWER(LTRIM(rt1.c0)) ASC, CASE WHEN CAST(vt0.c0 AS REAL) THEN ((('0.1632257060924429')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON IFNULL(rt1.c2, x'') COLLATE BINARY WHERE (json_array(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END, CAST(rt1.c2 AS REAL))) ORDER BY (((((vt0.c0))<=((x'5d10'))))>=(rt1.c2 COLLATE BINARY)), LOWER(LTRIM(rt1.c0)) ASC, CASE WHEN CAST(vt0.c0 AS REAL) THEN ((('0.1632257060924429')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST;
SELECT * FROM rt1 WHERE ((+ (rt1.c1))) ORDER BY (NOT (rt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (rt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((+ (rt1.c1))) ORDER BY (NOT (rt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (rt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((+ (rt1.c1))) ORDER BY (NOT (rt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c1  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c1  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY rt1.c1  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) NOTNULL);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((rt1.c0)||(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN 0.8806480994514337 END)) WHERE ('GM');
SELECT SUM(count) FROM (SELECT (('GM') IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((rt1.c0)||(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN 0.8806480994514337 END)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((rt1.c0)||(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN 0.8806480994514337 END)) WHERE ('GM');
SELECT SUM(count) FROM (SELECT (('GM') IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((rt1.c0)||(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN 0.8806480994514337 END)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((rt1.c0)||(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN 0.8806480994514337 END)) WHERE ('GM');
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS FALSE))%((((rt1.c0))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE))%((((rt1.c0))>((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS FALSE))%((((rt1.c0))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE))%((((rt1.c0))>((rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) IS FALSE))%((((rt1.c0))>((rt1.c2))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((rt1.c0) IS TRUE)))) ORDER BY ((((rt1.c0)==(rt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)=(rt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((rt1.c0) IS TRUE)))) ORDER BY ((((rt1.c0)==(rt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0)=(rt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END) BETWEEN (((((rt1.c0)OR(rt1.c1)))AND(rt1.c2))) AND (((rt1.c0) IS TRUE)))) ORDER BY ((((rt1.c0)==(rt1.c0))) IS FALSE);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON (((rt1.c2) IS FALSE) IN ()) WHERE (((((rt1.c0) IS FALSE)) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c1 AS NUMERIC)))) ORDER BY (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)) IN ()) ASC, (x'' COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE)) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt1.c2) IS FALSE) IN ()) ORDER BY (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)) IN ()) ASC, (x'' COLLATE NOCASE IN ()));
SELECT ALL * FROM rt1 INNER JOIN vt0 ON (((rt1.c2) IS FALSE) IN ()) WHERE (((((rt1.c0) IS FALSE)) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c1 AS NUMERIC)))) ORDER BY (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)) IN ()) ASC, (x'' COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) IS FALSE)) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt1.c2) IS FALSE) IN ()) ORDER BY (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)) IN ()) ASC, (x'' COLLATE NOCASE IN ()));
SELECT ALL * FROM rt1 INNER JOIN vt0 ON (((rt1.c2) IS FALSE) IN ()) WHERE (((((rt1.c0) IS FALSE)) BETWEEN ((rt1.c2 IN ())) AND (CAST(rt1.c1 AS NUMERIC)))) ORDER BY (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)) IN ()) ASC, (x'' COLLATE NOCASE IN ());
SELECT * FROM rt1, vt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((+ (NULL)));
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(CAST(vt0.c0 AS INTEGER)));
SELECT COUNT(*) FROM rt1 WHERE ((((((((rt1.c0))!=((rt1.c1))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(rt1.c2))) ORDER BY json_remove(rt1.c1, ABS(DISTINCT rt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0))<>((rt1.c1))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY json_remove(rt1.c1, ABS(DISTINCT rt1.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((((((rt1.c0))!=((rt1.c1))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(rt1.c2))) ORDER BY json_remove(rt1.c1, ABS(DISTINCT rt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0))<>((rt1.c1))))OR(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY json_remove(rt1.c1, ABS(DISTINCT rt1.c1)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c0)))IS(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c0)))IS(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c0)))IS(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c0)))IS(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c0)))IS(((((rt1.c2)AND(rt1.c0)))OR(rt1.c0)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0)<(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0)<(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((vt0.c0)<(rt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN (- (rt1.c0)) THEN (~ (rt1.c1)) END) ORDER BY rt1.c0, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c0)) THEN (~ (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0, LAST_INSERT_ROWID());
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN (- (rt1.c0)) THEN (~ (rt1.c1)) END) ORDER BY rt1.c0, LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c0)) THEN (~ (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0, LAST_INSERT_ROWID());
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN (- (rt1.c0)) THEN (~ (rt1.c1)) END) ORDER BY rt1.c0, LAST_INSERT_ROWID();
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) ORDER BY CAST((((rt1.c2))<((rt1.c0))) AS REAL), ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2))<((rt1.c0))) AS REAL), ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) ORDER BY CAST((((rt1.c2))<((rt1.c0))) AS REAL), ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c2))<((rt1.c0))) AS REAL), ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)) AS TEXT)) ORDER BY CAST((((rt1.c2))<((rt1.c0))) AS REAL), ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC;
SELECT * FROM rt1 NOT INDEXED WHERE ((- (rt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 NOT INDEXED WHERE ((- (rt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 NOT INDEXED WHERE ((- (rt1.c0)));
SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0))||(0x58a48f4e))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST('}Q' AS BLOB)))), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt0.c0))||(0x58a48f4e))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST('}Q' AS BLOB)))), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0))||(0x58a48f4e))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST('}Q' AS BLOB)))), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt0.c0))||(0x58a48f4e))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST('}Q' AS BLOB)))), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((ABS(DISTINCT vt0.c0))||(0x58a48f4e))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((CAST('}Q' AS BLOB)))), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(TRIM(DISTINCT vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c1)OR(vt0.c0))  WHEN vt0.c0 THEN ((rt1.c2) BETWEEN (x'') AND (rt1.c1)) WHEN CAST(rt1.c0 AS INTEGER) THEN x'' COLLATE BINARY WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)) WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END WHEN ((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)) THEN CAST(0x5516c3ca AS REAL) END WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2, vt0.c0) WHEN highlight(vt0.c0, rt1.c2, rt1.c0, rt1.c1) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN (((rt1.c0))==((rt1.c2))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c1)OR(vt0.c0))  WHEN vt0.c0 THEN ((rt1.c2) BETWEEN (x'') AND (rt1.c1)) WHEN CAST(rt1.c0 AS INTEGER) THEN x'' COLLATE BINARY WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)) WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END WHEN ((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)) THEN CAST(0X5516c3ca AS REAL) END ORDER BY CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2, vt0.c0) WHEN highlight(vt0.c0, rt1.c2, rt1.c0, rt1.c1) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN (((rt1.c0))==((rt1.c2))) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c1)OR(vt0.c0))  WHEN vt0.c0 THEN ((rt1.c2) BETWEEN (x'') AND (rt1.c1)) WHEN CAST(rt1.c0 AS INTEGER) THEN x'' COLLATE BINARY WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)) WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END WHEN ((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)) THEN CAST(0x5516c3ca AS REAL) END WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2, vt0.c0) WHEN highlight(vt0.c0, rt1.c2, rt1.c0, rt1.c1) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN (((rt1.c0))==((rt1.c2))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c1)OR(vt0.c0))  WHEN vt0.c0 THEN ((rt1.c2) BETWEEN (x'') AND (rt1.c1)) WHEN CAST(rt1.c0 AS INTEGER) THEN x'' COLLATE BINARY WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)) WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END WHEN ((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)) THEN CAST(0X5516c3ca AS REAL) END ORDER BY CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2, vt0.c0) WHEN highlight(vt0.c0, rt1.c2, rt1.c0, rt1.c1) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN (((rt1.c0))==((rt1.c2))) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON CASE ((rt1.c1)OR(vt0.c0))  WHEN vt0.c0 THEN ((rt1.c2) BETWEEN (x'') AND (rt1.c1)) WHEN CAST(rt1.c0 AS INTEGER) THEN x'' COLLATE BINARY WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((((((((vt0.c0)AND(rt1.c2)))OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c2)) WHEN CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END THEN CASE rt1.c0  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c2 END WHEN ((((((((rt1.c2)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c1)) THEN CAST(0x5516c3ca AS REAL) END WHERE ((rt1.c0 IN ()) COLLATE NOCASE) ORDER BY CASE WHEN NULL THEN TRIM(DISTINCT rt1.c2, vt0.c0) WHEN highlight(vt0.c0, rt1.c2, rt1.c0, rt1.c1) THEN ((rt1.c2) ISNULL) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN (((rt1.c0))==((rt1.c2))) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE (LIKELIHOOD(((0X43ad2892)-(rt1.c0)), 0.40261348862836877));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((0x43ad2892)-(rt1.c0)), 0.40261348862836877)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (LIKELIHOOD(((0X43ad2892)-(rt1.c0)), 0.40261348862836877));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((0x43ad2892)-(rt1.c0)), 0.40261348862836877)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (LIKELIHOOD(((0X43ad2892)-(rt1.c0)), 0.40261348862836877));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()), vt0.c0, '1382631047'))<=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.12950535349603232, CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), vt0.c0, '1382631047'))<=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.12950535349603232, CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()), vt0.c0, '1382631047'))<=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.12950535349603232, CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), vt0.c0, '1382631047'))<=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.12950535349603232, CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()), vt0.c0, '1382631047'))<=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.12950535349603232, CAST(vt0.c0 AS NUMERIC)))));
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(rt1.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN CAST(rt1.c1 AS INTEGER) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(rt1.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN CAST(rt1.c1 AS INTEGER) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN vt0.c0 THEN CAST(rt1.c1 AS INTEGER) END);
SELECT * FROM rt1, vt0 WHERE (((rt1.c0) BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE NOCASE) ORDER BY CASE (rt1.c2 IN (vt0.c0, rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c0 THEN rt1.c1 END ELSE '1180476216' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE (rt1.c2 IN (vt0.c0, rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c0 THEN rt1.c1 END ELSE '1180476216' END DESC);
SELECT * FROM rt1, vt0 WHERE (((rt1.c0) BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE NOCASE) ORDER BY CASE (rt1.c2 IN (vt0.c0, rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c0 THEN rt1.c1 END ELSE '1180476216' END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE (rt1.c2 IN (vt0.c0, rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c0 THEN rt1.c1 END ELSE '1180476216' END DESC);
SELECT * FROM rt1, vt0 WHERE (((rt1.c0) BETWEEN (rt1.c2) AND (vt0.c0)) COLLATE NOCASE) ORDER BY CASE (rt1.c2 IN (vt0.c0, rt1.c2))  WHEN (rt1.c2 IN ()) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c0 THEN rt1.c1 END ELSE '1180476216' END DESC;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c1)AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c1)AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c1)AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c1)AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c1)AND(rt1.c1)))));
SELECT ALL * FROM vt0, rt1 WHERE (LIKELY(rt1.c0));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt1.c0)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELY(rt1.c0));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt1.c0)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELY(rt1.c0));
SELECT * FROM vt0, rt1 WHERE ((((~ (x'')))>(vt0.c0 COLLATE RTRIM))) ORDER BY (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)), rt1.c2, (rt1.c2 IN ())))<((CAST(rt1.c2 AS BLOB), CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END, ((vt0.c0)&(rt1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (x'')))>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)), rt1.c2, (rt1.c2 IN ())))<((CAST(rt1.c2 AS BLOB), CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END, ((vt0.c0)&(rt1.c2))))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((~ (x'')))>(vt0.c0 COLLATE RTRIM))) ORDER BY (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)), rt1.c2, (rt1.c2 IN ())))<((CAST(rt1.c2 AS BLOB), CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END, ((vt0.c0)&(rt1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (x'')))>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)), rt1.c2, (rt1.c2 IN ())))<((CAST(rt1.c2 AS BLOB), CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END, ((vt0.c0)&(rt1.c2))))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((~ (x'')))>(vt0.c0 COLLATE RTRIM))) ORDER BY (((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)), rt1.c2, (rt1.c2 IN ())))<((CAST(rt1.c2 AS BLOB), CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END, ((vt0.c0)&(rt1.c2))))) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (0.40265335313614636) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((0.40265335313614636) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC);
SELECT * FROM rt1 WHERE (0.40265335313614636) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((0.40265335313614636) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC);
SELECT * FROM rt1 WHERE (0.40265335313614636) ORDER BY NULL DESC;
SELECT * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)<<(((rt1.c1)IS NOT(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)<<(((rt1.c1)IS NOT(rt1.c2))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)<<(((rt1.c1)IS NOT(rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)<<(((rt1.c1)IS NOT(rt1.c2))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))||(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0))))) ORDER BY ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)<<(((rt1.c1)IS NOT(rt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST((~ (rt1.c2)) AS BLOB) WHERE (((((DATE(vt0.c0, rt1.c2, rt1.c1))OR((- (vt0.c0)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((DATE(vt0.c0, rt1.c2, rt1.c1))OR((- (vt0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST((~ (rt1.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST((~ (rt1.c2)) AS BLOB) WHERE (((((DATE(vt0.c0, rt1.c2, rt1.c1))OR((- (vt0.c0)))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((DATE(vt0.c0, rt1.c2, rt1.c1))OR((- (vt0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST((~ (rt1.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST((~ (rt1.c2)) AS BLOB) WHERE (((((DATE(vt0.c0, rt1.c2, rt1.c1))OR((- (vt0.c0)))))OR((vt0.c0 IN ()))));
SELECT ALL * FROM rt1, vt0 WHERE (((CAST('gX' AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('gX' AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST('gX' AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('gX' AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST('gX' AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)IS NOT(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)IS NOT(rt1.c1))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)IS NOT(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)IS NOT(rt1.c1))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END)IS NOT(rt1.c1)));
SELECT ALL * FROM vt0 WHERE (highlight((~ (vt0.c0)), (NOT (0.39104391833584984)), CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL))) ORDER BY ((vt0.c0 COLLATE BINARY)||(vt0.c0 COLLATE NOCASE)), '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight((~ (vt0.c0)), (NOT (0.39104391833584984)), CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)||(vt0.c0 COLLATE NOCASE)), '' DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (highlight((~ (vt0.c0)), (NOT (0.39104391833584984)), CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL))) ORDER BY ((vt0.c0 COLLATE BINARY)||(vt0.c0 COLLATE NOCASE)), '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((highlight((~ (vt0.c0)), (NOT (0.39104391833584984)), CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)||(vt0.c0 COLLATE NOCASE)), '' DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (highlight((~ (vt0.c0)), (NOT (0.39104391833584984)), CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL))) ORDER BY ((vt0.c0 COLLATE BINARY)||(vt0.c0 COLLATE NOCASE)), '' DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((((((((((vt0.c0))!=((vt0.c0))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0))!=((vt0.c0))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((((((((((vt0.c0))!=((vt0.c0))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0))!=((vt0.c0))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((((((((((vt0.c0))!=((vt0.c0))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) IS FALSE))) ORDER BY (((TRIM(DISTINCT rt1.c2)))<((rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c0) IS FALSE))) IS TRUE)  as count FROM rt1 ORDER BY (((TRIM(DISTINCT rt1.c2)))<((rt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) IS FALSE))) ORDER BY (((TRIM(DISTINCT rt1.c2)))<((rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c0) IS FALSE))) IS TRUE)  as count FROM rt1 ORDER BY (((TRIM(DISTINCT rt1.c2)))<((rt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(((rt1.c0) IS FALSE))) ORDER BY (((TRIM(DISTINCT rt1.c2)))<((rt1.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), 0.009924812996321197));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), 0.009924812996321197)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), 0.009924812996321197));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), 0.009924812996321197)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), 0.009924812996321197));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE BINARY AS REAL)) ORDER BY (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE BINARY AS REAL)) ORDER BY (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE BINARY AS REAL)) ORDER BY (((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, rt1 NOT INDEXED WHERE (ROUND(NULL, rt1.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((ROUND(NULL, rt1.c2) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 NOT INDEXED WHERE (ROUND(NULL, rt1.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((ROUND(NULL, rt1.c2) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 NOT INDEXED WHERE (ROUND(NULL, rt1.c2) COLLATE BINARY);
SELECT ALL * FROM rt1, vt0 WHERE (((((((NULL)AND(rt1.c2)))AND(1.87816899E9)))OR(CAST(0.227887209881785 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(rt1.c2)))AND(1.87816899E9)))OR(CAST(0.227887209881785 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((NULL)AND(rt1.c2)))AND(1.87816899E9)))OR(CAST(0.227887209881785 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(rt1.c2)))AND(1.87816899E9)))OR(CAST(0.227887209881785 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((NULL)AND(rt1.c2)))AND(1.87816899E9)))OR(CAST(0.227887209881785 AS BLOB))));
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 COLLATE RTRIM)IS((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)IS((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 COLLATE RTRIM)IS((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)IS((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c1 COLLATE RTRIM)IS((rt1.c2 IN ()))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1 IN ()))=((NOT ('tK'))))) ORDER BY (+ (CASE WHEN rt1.c2 THEN 0.7781987772435606 END)) DESC, CAST(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))=((NOT ('tK'))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ (CASE WHEN rt1.c2 THEN 0.7781987772435606 END)) DESC, CAST(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1 IN ()))=((NOT ('tK'))))) ORDER BY (+ (CASE WHEN rt1.c2 THEN 0.7781987772435606 END)) DESC, CAST(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))=((NOT ('tK'))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ (CASE WHEN rt1.c2 THEN 0.7781987772435606 END)) DESC, CAST(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c1 IN ()))=((NOT ('tK'))))) ORDER BY (+ (CASE WHEN rt1.c2 THEN 0.7781987772435606 END)) DESC, CAST(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)) AS TEXT);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((vt0.c0)<('')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(''))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((vt0.c0)<('')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<(''))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (((vt0.c0)<('')));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((((0.9013701946995101) NOT BETWEEN (rt1.c0) AND (vt0.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND ((NOT (0.1562071069169786)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9013701946995101) NOT BETWEEN (rt1.c0) AND (vt0.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND ((NOT (0.1562071069169786))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((((0.9013701946995101) NOT BETWEEN (rt1.c0) AND (vt0.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND ((NOT (0.1562071069169786)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9013701946995101) NOT BETWEEN (rt1.c0) AND (vt0.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND ((NOT (0.1562071069169786))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON vt0.c0 WHERE (((((0.9013701946995101) NOT BETWEEN (rt1.c0) AND (vt0.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND ((NOT (0.1562071069169786)))));
SELECT * FROM vt0 WHERE (((vt0.c0)|((vt0.c0 IN (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND ((~ (x'1acb390e')))) DESC, CAST((((vt0.c0))<=((vt0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND ((~ (x'1acb390e')))) DESC, CAST((((vt0.c0))<=((vt0.c0))) AS REAL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)|((vt0.c0 IN (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND ((~ (x'1acb390e')))) DESC, CAST((((vt0.c0))<=((vt0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND ((~ (x'1acb390e')))) DESC, CAST((((vt0.c0))<=((vt0.c0))) AS REAL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)|((vt0.c0 IN (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND ((~ (x'1acb390e')))) DESC, CAST((((vt0.c0))<=((vt0.c0))) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (+ (rt1.c0 COLLATE RTRIM)) WHERE (((((rt1.c0) NOTNULL))LIKE(((vt0.c0)<<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOTNULL))LIKE(((vt0.c0)<<(rt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (+ (rt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (+ (rt1.c0 COLLATE RTRIM)) WHERE (((((rt1.c0) NOTNULL))LIKE(((vt0.c0)<<(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOTNULL))LIKE(((vt0.c0)<<(rt1.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (+ (rt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (+ (rt1.c0 COLLATE RTRIM)) WHERE (((((rt1.c0) NOTNULL))LIKE(((vt0.c0)<<(rt1.c2)))));
SELECT * FROM rt1, vt0 WHERE ((~ (((rt1.c2) NOT BETWEEN (rt1.c1) AND (x'e004'))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c2) NOT BETWEEN (rt1.c1) AND (x'e004'))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULL);
SELECT * FROM rt1, vt0 WHERE ((~ (((rt1.c2) NOT BETWEEN (rt1.c1) AND (x'e004'))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c2) NOT BETWEEN (rt1.c1) AND (x'e004'))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULL);
SELECT * FROM rt1, vt0 WHERE ((~ (((rt1.c2) NOT BETWEEN (rt1.c1) AND (x'e004'))))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (LOWER(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (LOWER(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (LOWER(DISTINCT CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 END));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1)!=(rt1.c0)))*(CAST(rt1.c0 AS INTEGER)))) ORDER BY NULLIF(DISTINCT ((rt1.c1) NOT NULL), ((vt0.c0)<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<>(rt1.c0)))*(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULLIF(DISTINCT ((rt1.c1) NOT NULL), ((vt0.c0)<=(vt0.c0))));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1)!=(rt1.c0)))*(CAST(rt1.c0 AS INTEGER)))) ORDER BY NULLIF(DISTINCT ((rt1.c1) NOT NULL), ((vt0.c0)<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<>(rt1.c0)))*(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULLIF(DISTINCT ((rt1.c1) NOT NULL), ((vt0.c0)<=(vt0.c0))));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c1)!=(rt1.c0)))*(CAST(rt1.c0 AS INTEGER)))) ORDER BY NULLIF(DISTINCT ((rt1.c1) NOT NULL), ((vt0.c0)<=(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))&(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))&(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))&(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))&(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))&(((vt0.c0)|(vt0.c0)))));
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)) AS NUMERIC));
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE BINARY)GLOB(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY)GLOB(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE BINARY)GLOB(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY)GLOB(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE BINARY)GLOB(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN 0.1816926234566979 END) ORDER BY ((((vt0.c0) NOT NULL))>(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)LIKE(vt0.c0))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN 0.1816926234566979 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))>(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN 0.1816926234566979 END) ORDER BY ((((vt0.c0) NOT NULL))>(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)LIKE(vt0.c0))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN 0.1816926234566979 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))>(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0)LIKE(vt0.c0))  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN 0.1816926234566979 END) ORDER BY ((((vt0.c0) NOT NULL))>(((vt0.c0)%(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON LIKE(((rt1.c2)>=(rt1.c0)), CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END) WHERE (UNLIKELY(DISTINCT rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt1.c1)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON LIKE(((rt1.c2)>=(rt1.c0)), CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON LIKE(((rt1.c2)>=(rt1.c0)), CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END) WHERE (UNLIKELY(DISTINCT rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT rt1.c1)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON LIKE(((rt1.c2)>=(rt1.c0)), CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON LIKE(((rt1.c2)>=(rt1.c0)), CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END) WHERE (UNLIKELY(DISTINCT rt1.c1));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON '-1285096744' WHERE ((NOT ((((rt1.c2))=((rt1.c0)))))) ORDER BY CASE WHEN (((rt1.c1))<((rt1.c2))) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END ELSE ((rt1.c0) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c2))=((rt1.c0)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON '-1285096744' ORDER BY CASE WHEN (((rt1.c1))<((rt1.c2))) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END ELSE ((rt1.c0) NOT NULL) END  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON '-1285096744' WHERE ((NOT ((((rt1.c2))=((rt1.c0)))))) ORDER BY CASE WHEN (((rt1.c1))<((rt1.c2))) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END ELSE ((rt1.c0) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c2))=((rt1.c0)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON '-1285096744' ORDER BY CASE WHEN (((rt1.c1))<((rt1.c2))) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END ELSE ((rt1.c0) NOT NULL) END  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON '-1285096744' WHERE ((NOT ((((rt1.c2))=((rt1.c0)))))) ORDER BY CASE WHEN (((rt1.c1))<((rt1.c2))) THEN CASE WHEN vt0.c0 THEN rt1.c2 ELSE vt0.c0 END ELSE ((rt1.c0) NOT NULL) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((rt1.c2) IS FALSE))));
SELECT * FROM rt1 WHERE (((((rt1.c2)=('27407058'))) BETWEEN (CASE WHEN -9.66562883E8 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN 'd9{D⹠/' ELSE rt1.c2 END))) ORDER BY ((((HEX(DISTINCT rt1.c2))AND(((rt1.c2)/('0.007128539175110471')))))AND(x'ba29'));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)==('27407058'))) BETWEEN (CASE WHEN -9.66562883E8 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN 'd9{D⹠/' ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((HEX(DISTINCT rt1.c2))AND(((rt1.c2)/('0.007128539175110471')))))AND(x'ba29')));
SELECT * FROM rt1 WHERE (((((rt1.c2)=('27407058'))) BETWEEN (CASE WHEN -9.66562883E8 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN 'd9{D⹠/' ELSE rt1.c2 END))) ORDER BY ((((HEX(DISTINCT rt1.c2))AND(((rt1.c2)/('0.007128539175110471')))))AND(x'ba29'));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)==('27407058'))) BETWEEN (CASE WHEN -9.66562883E8 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN 'd9{D⹠/' ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((HEX(DISTINCT rt1.c2))AND(((rt1.c2)/('0.007128539175110471')))))AND(x'ba29')));
SELECT * FROM rt1 WHERE (((((rt1.c2)=('27407058'))) BETWEEN (CASE WHEN -9.66562883E8 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END) AND (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN 'd9{D⹠/' ELSE rt1.c2 END))) ORDER BY ((((HEX(DISTINCT rt1.c2))AND(((rt1.c2)/('0.007128539175110471')))))AND(x'ba29'));
SELECT * FROM vt0 WHERE ((- ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ((- (vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE ((+ (rt1.c1)) COLLATE NOCASE) ORDER BY ((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)IS NOT('-1503025407'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)IS NOT('-1503025407'))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((+ (rt1.c1)) COLLATE NOCASE) ORDER BY ((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)IS NOT('-1503025407'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)IS NOT('-1503025407'))))  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((+ (rt1.c1)) COLLATE NOCASE) ORDER BY ((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)IS NOT('-1503025407'))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)&(CAST(rt1.c2 AS BLOB)))) ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, (rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)&(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, (rt1.c1 IN ())));
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)&(CAST(rt1.c2 AS BLOB)))) ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, (rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM)&(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, (rt1.c1 IN ())));
SELECT ALL * FROM rt1 WHERE (((rt1.c1 COLLATE RTRIM)&(CAST(rt1.c2 AS BLOB)))) ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END, (rt1.c1 IN ()));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT)))));
SELECT * FROM vt0 WHERE (0.6849987620256712) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((0.6849987620256712) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (0.6849987620256712) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((0.6849987620256712) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (0.6849987620256712) ORDER BY vt0.c0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ('') AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ('') AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ('') AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ('') AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ('') AND (((vt0.c0)&(vt0.c0)))));
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c0)%(rt1.c0)))OR(((rt1.c0)%(rt1.c0)))))AND((((rt1.c2))<>((rt1.c2)))))) ORDER BY ((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(NULL)))/(CASE WHEN rt1.c2 THEN vt0.c0 ELSE x'' END))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(0X58bb1f68)))AND(rt1.c1)))))  NULLS FIRST, load_extension(rt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)%(rt1.c0)))OR(((rt1.c0)%(rt1.c0)))))AND((((rt1.c2))!=((rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(NULL)))/(CASE WHEN rt1.c2 THEN vt0.c0 ELSE x'' END))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(0x58bb1f68)))AND(rt1.c1)))))  NULLS FIRST, load_extension(rt1.c0) DESC);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c0)%(rt1.c0)))OR(((rt1.c0)%(rt1.c0)))))AND((((rt1.c2))<>((rt1.c2)))))) ORDER BY ((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(NULL)))/(CASE WHEN rt1.c2 THEN vt0.c0 ELSE x'' END))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(0X58bb1f68)))AND(rt1.c1)))))  NULLS FIRST, load_extension(rt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)%(rt1.c0)))OR(((rt1.c0)%(rt1.c0)))))AND((((rt1.c2))!=((rt1.c2)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(NULL)))/(CASE WHEN rt1.c2 THEN vt0.c0 ELSE x'' END))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(0x58bb1f68)))AND(rt1.c1)))))  NULLS FIRST, load_extension(rt1.c0) DESC);
SELECT * FROM rt1, vt0 WHERE (((((((rt1.c0)%(rt1.c0)))OR(((rt1.c0)%(rt1.c0)))))AND((((rt1.c2))<>((rt1.c2)))))) ORDER BY ((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c2)))OR(NULL)))/(CASE WHEN rt1.c2 THEN vt0.c0 ELSE x'' END))  NULLS FIRST, (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))AND(0X58bb1f68)))AND(rt1.c1)))))  NULLS FIRST, load_extension(rt1.c0) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)OR(rt1.c1)))/(((x'42da')IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(rt1.c1)))/(((x'42da')IS(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)OR(rt1.c1)))/(((x'42da')IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)OR(rt1.c1)))/(((x'42da')IS(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)OR(rt1.c1)))/(((x'42da')IS(rt1.c2)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt1 WHERE (TYPEOF(rt1.c0)) ORDER BY ((LIKELY(rt1.c1))OR(CAST(rt1.c2 AS NUMERIC))) ASC, ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))&((((rt1.c1, rt1.c0, vt0.c0))=((rt1.c1, rt1.c0, rt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt1.c0)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((LIKELY(rt1.c1))OR(CAST(rt1.c2 AS NUMERIC))) ASC, ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))&((((rt1.c1, rt1.c0, vt0.c0))=((rt1.c1, rt1.c0, rt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (TYPEOF(rt1.c0)) ORDER BY ((LIKELY(rt1.c1))OR(CAST(rt1.c2 AS NUMERIC))) ASC, ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))&((((rt1.c1, rt1.c0, vt0.c0))=((rt1.c1, rt1.c0, rt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt1.c0)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((LIKELY(rt1.c1))OR(CAST(rt1.c2 AS NUMERIC))) ASC, ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))&((((rt1.c1, rt1.c0, vt0.c0))=((rt1.c1, rt1.c0, rt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (TYPEOF(rt1.c0)) ORDER BY ((LIKELY(rt1.c1))OR(CAST(rt1.c2 AS NUMERIC))) ASC, ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))&((((rt1.c1, rt1.c0, vt0.c0))=((rt1.c1, rt1.c0, rt1.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.10040024819180549) ORDER BY ((rt1.c0 COLLATE NOCASE)=(rt1.c1)), CASE WHEN (- (vt0.c0)) THEN ((rt1.c2)%(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((0.10040024819180549) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0 COLLATE NOCASE)==(rt1.c1)), CASE WHEN (- (vt0.c0)) THEN ((rt1.c2)%(rt1.c1)) END DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.10040024819180549) ORDER BY ((rt1.c0 COLLATE NOCASE)=(rt1.c1)), CASE WHEN (- (vt0.c0)) THEN ((rt1.c2)%(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((0.10040024819180549) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c0 COLLATE NOCASE)==(rt1.c1)), CASE WHEN (- (vt0.c0)) THEN ((rt1.c2)%(rt1.c1)) END DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.10040024819180549) ORDER BY ((rt1.c0 COLLATE NOCASE)=(rt1.c1)), CASE WHEN (- (vt0.c0)) THEN ((rt1.c2)%(rt1.c1)) END DESC;
SELECT ALL * FROM rt1 WHERE ((~ (CASE WHEN 0.759624495285388 THEN rt1.c2 END))) ORDER BY rt1.c0 ASC  NULLS FIRST, ((((rt1.c1)<<(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN 0.759624495285388 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 ASC  NULLS FIRST, ((((rt1.c1)<<(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((~ (CASE WHEN 0.759624495285388 THEN rt1.c2 END))) ORDER BY rt1.c0 ASC  NULLS FIRST, ((((rt1.c1)<<(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN 0.759624495285388 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 ASC  NULLS FIRST, ((((rt1.c1)<<(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((~ (CASE WHEN 0.759624495285388 THEN rt1.c2 END))) ORDER BY rt1.c0 ASC  NULLS FIRST, ((((rt1.c1)<<(rt1.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ('|\n');
SELECT SUM(count) FROM (SELECT ALL (('|\n') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ('|\n');
SELECT SUM(count) FROM (SELECT ALL (('|\n') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ('|\n');
SELECT COUNT(*) FROM rt1, vt0 WHERE (LIKELIHOOD(DISTINCT ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), 0.7650756015756811)) ORDER BY ((((vt0.c0)&(rt1.c0)))<(((rt1.c0)<(rt1.c1)))), (((((rt1.c0)>=(rt1.c1)), ((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)), UNLIKELY(DISTINCT 0.9122403802136312)))>((rt1.c1, ((vt0.c0)<<(vt0.c0)), x''))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), 0.7650756015756811)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0)&(rt1.c0)))<(((rt1.c0)<(rt1.c1)))), (((((rt1.c0)>=(rt1.c1)), ((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)), UNLIKELY(DISTINCT 0.9122403802136312)))>((rt1.c1, ((vt0.c0)<<(vt0.c0)), x''))) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (LIKELIHOOD(DISTINCT ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), 0.7650756015756811)) ORDER BY ((((vt0.c0)&(rt1.c0)))<(((rt1.c0)<(rt1.c1)))), (((((rt1.c0)>=(rt1.c1)), ((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)), UNLIKELY(DISTINCT 0.9122403802136312)))>((rt1.c1, ((vt0.c0)<<(vt0.c0)), x''))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), 0.7650756015756811)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0)&(rt1.c0)))<(((rt1.c0)<(rt1.c1)))), (((((rt1.c0)>=(rt1.c1)), ((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)), UNLIKELY(DISTINCT 0.9122403802136312)))>((rt1.c1, ((vt0.c0)<<(vt0.c0)), x''))) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (LIKELIHOOD(DISTINCT ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), 0.7650756015756811)) ORDER BY ((((vt0.c0)&(rt1.c0)))<(((rt1.c0)<(rt1.c1)))), (((((rt1.c0)>=(rt1.c1)), ((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)), UNLIKELY(DISTINCT 0.9122403802136312)))>((rt1.c1, ((vt0.c0)<<(vt0.c0)), x''))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY ((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(0.31646643407489505)))OR(0.6741886494919067)))OR('0.4719278824590497')))OR(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(0.31646643407489505)))OR(0.6741886494919067)))OR('0.4719278824590497')))OR(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY ((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(0.31646643407489505)))OR(0.6741886494919067)))OR('0.4719278824590497')))OR(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(0.31646643407489505)))OR(0.6741886494919067)))OR('0.4719278824590497')))OR(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) ISNULL)) ORDER BY ((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(0.31646643407489505)))OR(0.6741886494919067)))OR('0.4719278824590497')))OR(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) ASC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((rt1.c0)OR(NULL)))OR(rt1.c0)))OR(0.04100334395709693)))OR(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)OR(NULL)))OR(rt1.c0)))OR(0.04100334395709693)))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((rt1.c0)OR(NULL)))OR(rt1.c0)))OR(0.04100334395709693)))OR(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)OR(NULL)))OR(rt1.c0)))OR(0.04100334395709693)))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((rt1.c0)OR(NULL)))OR(rt1.c0)))OR(0.04100334395709693)))OR(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0) IS FALSE) IN ()));
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c1) ORDER BY json_extract(rt1.c1 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0))) ASC  NULLS FIRST, (((((((((- (rt1.c1)))AND(((rt1.c2)/(0.2581785174282084)))))AND(((rt1.c2)!=(rt1.c2)))))OR(LIKELIHOOD(rt1.c1, 0.16667422405248788))))AND(CAST(rt1.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY json_extract(rt1.c1 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0))) ASC  NULLS FIRST, (((((((((- (rt1.c1)))AND(((rt1.c2)/(0.2581785174282084)))))AND(((rt1.c2)<>(rt1.c2)))))OR(LIKELIHOOD(rt1.c1, 0.16667422405248788))))AND(CAST(rt1.c1 AS TEXT))));
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c1) ORDER BY json_extract(rt1.c1 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0))) ASC  NULLS FIRST, (((((((((- (rt1.c1)))AND(((rt1.c2)/(0.2581785174282084)))))AND(((rt1.c2)!=(rt1.c2)))))OR(LIKELIHOOD(rt1.c1, 0.16667422405248788))))AND(CAST(rt1.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY json_extract(rt1.c1 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0))) ASC  NULLS FIRST, (((((((((- (rt1.c1)))AND(((rt1.c2)/(0.2581785174282084)))))AND(((rt1.c2)<>(rt1.c2)))))OR(LIKELIHOOD(rt1.c1, 0.16667422405248788))))AND(CAST(rt1.c1 AS TEXT))));
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c1) ORDER BY json_extract(rt1.c1 COLLATE RTRIM, ((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c0))) ASC  NULLS FIRST, (((((((((- (rt1.c1)))AND(((rt1.c2)/(0.2581785174282084)))))AND(((rt1.c2)!=(rt1.c2)))))OR(LIKELIHOOD(rt1.c1, 0.16667422405248788))))AND(CAST(rt1.c1 AS TEXT)));
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0)||(vt0.c0)))OR(((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0)))OR(((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0)||(vt0.c0)))OR(((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0)))OR(((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0)||(vt0.c0)))OR(((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((((rt1.c2 IN ()))AND(((vt0.c0)IS(rt1.c1)))))AND(((rt1.c1) IS TRUE))))AND(CAST(x'ab07' AS BLOB))))AND(LIKE(rt1.c0, x'', 'X')))) ORDER BY ((((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2 IN ()))AND(((vt0.c0)IS(rt1.c1)))))AND(((rt1.c1) IS TRUE))))AND(CAST(x'ab07' AS BLOB))))AND(LIKE(rt1.c0, x'', 'X')))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((((rt1.c2 IN ()))AND(((vt0.c0)IS(rt1.c1)))))AND(((rt1.c1) IS TRUE))))AND(CAST(x'ab07' AS BLOB))))AND(LIKE(rt1.c0, x'', 'X')))) ORDER BY ((((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2 IN ()))AND(((vt0.c0)IS(rt1.c1)))))AND(((rt1.c1) IS TRUE))))AND(CAST(x'ab07' AS BLOB))))AND(LIKE(rt1.c0, x'', 'X')))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((((rt1.c2 IN ()))AND(((vt0.c0)IS(rt1.c1)))))AND(((rt1.c1) IS TRUE))))AND(CAST(x'ab07' AS BLOB))))AND(LIKE(rt1.c0, x'', 'X')))) ORDER BY ((((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c1))) IS FALSE) ASC;
SELECT COUNT(*) FROM rt1 WHERE (((((((((CAST(NULL AS INTEGER))AND(((rt1.c2)>(rt1.c2)))))OR('-994047664')))OR((NOT (0.8308109818574059)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(NULL AS INTEGER))AND(((rt1.c2)>(rt1.c2)))))OR('-994047664')))OR((NOT (0.8308109818574059)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((CAST(NULL AS INTEGER))AND(((rt1.c2)>(rt1.c2)))))OR('-994047664')))OR((NOT (0.8308109818574059)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(NULL AS INTEGER))AND(((rt1.c2)>(rt1.c2)))))OR('-994047664')))OR((NOT (0.8308109818574059)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((CAST(NULL AS INTEGER))AND(((rt1.c2)>(rt1.c2)))))OR('-994047664')))OR((NOT (0.8308109818574059)))))OR(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT ALL * FROM vt0, rt1 WHERE (load_extension(x''));
SELECT SUM(count) FROM (SELECT ((load_extension(x'')) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (load_extension(x''));
SELECT SUM(count) FROM (SELECT ((load_extension(x'')) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (load_extension(x''));
SELECT * FROM vt0, rt1 WHERE (SQLITE_COMPILEOPTION_GET(rt1.c1) COLLATE BINARY) ORDER BY ((((rt1.c1) IS TRUE))<(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1) IS TRUE))<(rt1.c2)) DESC);
SELECT * FROM vt0, rt1 WHERE (SQLITE_COMPILEOPTION_GET(rt1.c1) COLLATE BINARY) ORDER BY ((((rt1.c1) IS TRUE))<(rt1.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1) IS TRUE))<(rt1.c2)) DESC);
SELECT * FROM vt0, rt1 WHERE (SQLITE_COMPILEOPTION_GET(rt1.c1) COLLATE BINARY) ORDER BY ((((rt1.c1) IS TRUE))<(rt1.c2)) DESC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, vt0.c0, NULL)))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, vt0.c0, NULL)))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, vt0.c0, NULL)))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, vt0.c0, NULL)))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((rt1.c2) BETWEEN ((((rt1.c2, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c1, vt0.c0, NULL)))) AND (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM rt1, vt0 WHERE (-1888100288);
SELECT SUM(count) FROM (SELECT ((-1888100288) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (-1888100288);
SELECT SUM(count) FROM (SELECT ((-1888100288) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (-1888100288);
SELECT COUNT(*) FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY '-471371954';
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(vt0.c0)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '-471371954');
SELECT COUNT(*) FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY '-471371954';
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(vt0.c0)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '-471371954');
SELECT COUNT(*) FROM vt0 WHERE ((((UNLIKELY(vt0.c0)))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY '-471371954';
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS NUMERIC)) ORDER BY (((rt1.c1 IN (rt1.c1, rt1.c1)))||(((rt1.c0)<=(rt1.c0)))) ASC  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((~ (rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN (rt1.c1, rt1.c1)))||(((rt1.c0)<=(rt1.c0)))) ASC  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((~ (rt1.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS NUMERIC)) ORDER BY (((rt1.c1 IN (rt1.c1, rt1.c1)))||(((rt1.c0)<=(rt1.c0)))) ASC  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((~ (rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN (rt1.c1, rt1.c1)))||(((rt1.c0)<=(rt1.c0)))) ASC  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((~ (rt1.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS NUMERIC)) ORDER BY (((rt1.c1 IN (rt1.c1, rt1.c1)))||(((rt1.c0)<=(rt1.c0)))) ASC  NULLS LAST, (((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND (((~ (rt1.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS INTEGER))>=(rt1.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c0) AND ('&k0Y{kt'))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) AND (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS INTEGER))>=(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c0) AND ('&k0Y{kt'))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) AND (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS INTEGER))>=(rt1.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c0) AND ('&k0Y{kt'))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) AND (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS INTEGER))>=(rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c0) AND ('&k0Y{kt'))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) AND (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS INTEGER))>=(rt1.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c0) AND ('&k0Y{kt'))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) AND (CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1))=((rt1.c1))))<(((rt1.c2) ISNULL)))) ORDER BY (('鐕' COLLATE BINARY) BETWEEN (0.507418587024853) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))==((rt1.c1))))<(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (('鐕' COLLATE BINARY) BETWEEN (0.507418587024853) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1))=((rt1.c1))))<(((rt1.c2) ISNULL)))) ORDER BY (('鐕' COLLATE BINARY) BETWEEN (0.507418587024853) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))==((rt1.c1))))<(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (('鐕' COLLATE BINARY) BETWEEN (0.507418587024853) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c1))=((rt1.c1))))<(((rt1.c2) ISNULL)))) ORDER BY (('鐕' COLLATE BINARY) BETWEEN (0.507418587024853) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))) ORDER BY (LOWER(vt0.c0) IN ()) DESC  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (LOWER(vt0.c0) IN ()) DESC  NULLS FIRST, NULL DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))) ORDER BY (LOWER(vt0.c0) IN ()) DESC  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (LOWER(vt0.c0) IN ()) DESC  NULLS FIRST, NULL DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END))) ORDER BY (LOWER(vt0.c0) IN ()) DESC  NULLS FIRST, NULL DESC;
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))) AND ((rt1.c2)))) ORDER BY LTRIM((rt1.c2 IN ()), rt1.c2 COLLATE RTRIM) DESC, (((vt0.c0)||(rt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LTRIM((rt1.c2 IN ()), rt1.c2 COLLATE RTRIM) DESC, (((vt0.c0)||(rt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))) AND ((rt1.c2)))) ORDER BY LTRIM((rt1.c2 IN ()), rt1.c2 COLLATE RTRIM) DESC, (((vt0.c0)||(rt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LTRIM((rt1.c2 IN ()), rt1.c2 COLLATE RTRIM) DESC, (((vt0.c0)||(rt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))) AND ((rt1.c2)))) ORDER BY LTRIM((rt1.c2 IN ()), rt1.c2 COLLATE RTRIM) DESC, (((vt0.c0)||(rt1.c0)) IN ())  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (CAST((- (rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST((- (rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST((- (rt1.c0)) AS REAL));
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))<(vt0.c0))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-593731621', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0))<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-593731621', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))<(vt0.c0))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-593731621', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0))<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-593731621', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))<(vt0.c0))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '-593731621', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('1106572342') ORDER BY '-585839180' DESC, ((((vt0.c0 IN (vt0.c0))))>((((vt0.c0)<(vt0.c0))))) DESC  NULLS LAST, (((vt0.c0, NULL, vt0.c0 COLLATE NOCASE))>=((((vt0.c0) NOT NULL), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN 0.21481318458731657 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.25053795632057685 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (('1106572342') IS TRUE)  as count FROM vt0 ORDER BY '-585839180' DESC, ((((vt0.c0 IN (vt0.c0))))>((((vt0.c0)<(vt0.c0))))) DESC  NULLS LAST, (((vt0.c0, NULL, vt0.c0 COLLATE NOCASE))>=((((vt0.c0) NOT NULL), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN 0.21481318458731657 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.25053795632057685 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('1106572342') ORDER BY '-585839180' DESC, ((((vt0.c0 IN (vt0.c0))))>((((vt0.c0)<(vt0.c0))))) DESC  NULLS LAST, (((vt0.c0, NULL, vt0.c0 COLLATE NOCASE))>=((((vt0.c0) NOT NULL), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN 0.21481318458731657 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.25053795632057685 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (('1106572342') IS TRUE)  as count FROM vt0 ORDER BY '-585839180' DESC, ((((vt0.c0 IN (vt0.c0))))>((((vt0.c0)<(vt0.c0))))) DESC  NULLS LAST, (((vt0.c0, NULL, vt0.c0 COLLATE NOCASE))>=((((vt0.c0) NOT NULL), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN 0.21481318458731657 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.25053795632057685 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('1106572342') ORDER BY '-585839180' DESC, ((((vt0.c0 IN (vt0.c0))))>((((vt0.c0)<(vt0.c0))))) DESC  NULLS LAST, (((vt0.c0, NULL, vt0.c0 COLLATE NOCASE))>=((((vt0.c0) NOT NULL), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE vt0.c0  WHEN 0.21481318458731657 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.25053795632057685 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM rt1 WHERE ((0X4c05fa0e IN ()));
SELECT SUM(count) FROM (SELECT (((0x4c05fa0e IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((0X4c05fa0e IN ()));
SELECT SUM(count) FROM (SELECT (((0x4c05fa0e IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((0X4c05fa0e IN ()));
SELECT ALL * FROM rt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)*((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)*((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)*((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)*((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)*((vt0.c0 IN ()))));
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN 0.7038603826567018 END WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN '' THEN rt1.c1 ELSE rt1.c1 END) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN '' THEN rt1.c1 ELSE rt1.c1 END) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN 0.7038603826567018 END);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN 0.7038603826567018 END WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN '' THEN rt1.c1 ELSE rt1.c1 END) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN '' THEN rt1.c1 ELSE rt1.c1 END) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN 0.7038603826567018 END);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) THEN 0.7038603826567018 END WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN '' THEN rt1.c1 ELSE rt1.c1 END) AND ((rt1.c1 IN ()))));
SELECT * FROM vt0, rt1 WHERE (UNLIKELY(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))) ORDER BY ((((((((((rt1.c0) NOTNULL))OR(CASE WHEN x'' THEN rt1.c2 ELSE rt1.c2 END)))AND(CASE rt1.c1  WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(x'')))OR(NULL))  NULLS LAST, (((((((rt1.c2))!=((rt1.c0))))AND(rt1.c2)))AND(CAST(rt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c0) NOTNULL))OR(CASE WHEN x'' THEN rt1.c2 ELSE rt1.c2 END)))AND(CASE rt1.c1  WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(x'')))OR(NULL))  NULLS LAST, (((((((rt1.c2))<>((rt1.c0))))AND(rt1.c2)))AND(CAST(rt1.c0 AS BLOB))));
SELECT * FROM vt0, rt1 WHERE (UNLIKELY(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))) ORDER BY ((((((((((rt1.c0) NOTNULL))OR(CASE WHEN x'' THEN rt1.c2 ELSE rt1.c2 END)))AND(CASE rt1.c1  WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(x'')))OR(NULL))  NULLS LAST, (((((((rt1.c2))!=((rt1.c0))))AND(rt1.c2)))AND(CAST(rt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c0) NOTNULL))OR(CASE WHEN x'' THEN rt1.c2 ELSE rt1.c2 END)))AND(CASE rt1.c1  WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(x'')))OR(NULL))  NULLS LAST, (((((((rt1.c2))<>((rt1.c0))))AND(rt1.c2)))AND(CAST(rt1.c0 AS BLOB))));
SELECT * FROM vt0, rt1 WHERE (UNLIKELY(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))) ORDER BY ((((((((((rt1.c0) NOTNULL))OR(CASE WHEN x'' THEN rt1.c2 ELSE rt1.c2 END)))AND(CASE rt1.c1  WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(x'')))OR(NULL))  NULLS LAST, (((((((rt1.c2))!=((rt1.c0))))AND(rt1.c2)))AND(CAST(rt1.c0 AS BLOB)));
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS BLOB)) IS TRUE)) ORDER BY 0.1436958461462262 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0.1436958461462262 ASC);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS BLOB)) IS TRUE)) ORDER BY 0.1436958461462262 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0.1436958461462262 ASC);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c1 AS BLOB)) IS TRUE)) ORDER BY 0.1436958461462262 ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0.9914126528849285 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.9914126528849285 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0.9914126528849285 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.9914126528849285 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0.9914126528849285 COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((((rt1.c1)OR(NULL)), TRIM(rt1.c2, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((rt1.c2 IN (rt1.c1)), rt1.c1 COLLATE NOCASE, 0.2023633367051424)))) ORDER BY (+ (((rt1.c1)GLOB(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((((rt1.c1)OR(NULL)), TRIM(rt1.c2, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((rt1.c2 IN (rt1.c1)), rt1.c1 COLLATE NOCASE, 0.2023633367051424)))) IS TRUE)  as count FROM rt1 ORDER BY (+ (((rt1.c1)GLOB(rt1.c1)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((((rt1.c1)OR(NULL)), TRIM(rt1.c2, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((rt1.c2 IN (rt1.c1)), rt1.c1 COLLATE NOCASE, 0.2023633367051424)))) ORDER BY (+ (((rt1.c1)GLOB(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((((rt1.c1)OR(NULL)), TRIM(rt1.c2, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((rt1.c2 IN (rt1.c1)), rt1.c1 COLLATE NOCASE, 0.2023633367051424)))) IS TRUE)  as count FROM rt1 ORDER BY (+ (((rt1.c1)GLOB(rt1.c1)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((((rt1.c1)OR(NULL)), TRIM(rt1.c2, rt1.c1), ((rt1.c2)%(rt1.c1)))) AND (((rt1.c2 IN (rt1.c1)), rt1.c1 COLLATE NOCASE, 0.2023633367051424)))) ORDER BY (+ (((rt1.c1)GLOB(rt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))-(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))-(NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))-(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))-(NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))-(NULL COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN (rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN (rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN (rt1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c2 IN (rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN (rt1.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (~ (CAST(rt1.c0 AS BLOB))) WHERE (((LIKELIHOOD(rt1.c0, 0.015386066237408236)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt1.c0, 0.015386066237408236)) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (~ (CAST(rt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (~ (CAST(rt1.c0 AS BLOB))) WHERE (((LIKELIHOOD(rt1.c0, 0.015386066237408236)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt1.c0, 0.015386066237408236)) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (~ (CAST(rt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (~ (CAST(rt1.c0 AS BLOB))) WHERE (((LIKELIHOOD(rt1.c0, 0.015386066237408236)) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8056345239114204 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8056345239114204 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8056345239114204 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8056345239114204 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8056345239114204 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN (((NOT (rt1.c1)))) AND (((~ (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN (((NOT (rt1.c1)))) AND (((~ (rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN (((NOT (rt1.c1)))) AND (((~ (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN (((NOT (rt1.c1)))) AND (((~ (rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN (((NOT (rt1.c1)))) AND (((~ (rt1.c1))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(SQLITE_COMPILEOPTION_USED(rt1.c0) AS INTEGER)) ORDER BY 0.49224375975750956 ASC  NULLS LAST, HEX(NULLIF(rt1.c0, -332527572)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_COMPILEOPTION_USED(rt1.c0) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0.49224375975750956 ASC  NULLS LAST, HEX(NULLIF(rt1.c0, -332527572)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(SQLITE_COMPILEOPTION_USED(rt1.c0) AS INTEGER)) ORDER BY 0.49224375975750956 ASC  NULLS LAST, HEX(NULLIF(rt1.c0, -332527572)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_COMPILEOPTION_USED(rt1.c0) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 ORDER BY 0.49224375975750956 ASC  NULLS LAST, HEX(NULLIF(rt1.c0, -332527572)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(SQLITE_COMPILEOPTION_USED(rt1.c0) AS INTEGER)) ORDER BY 0.49224375975750956 ASC  NULLS LAST, HEX(NULLIF(rt1.c0, -332527572)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE (((rt1.c1, rt1.c0, x''))=((rt1.c2, rt1.c1, rt1.c2)))  WHEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN rt1.c2 WHEN (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN CAST(rt1.c1 AS REAL) WHEN '' THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((0.46410376472539894))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c1, rt1.c0, x''))=((rt1.c2, rt1.c1, rt1.c2)))  WHEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN rt1.c2 WHEN (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN CAST(rt1.c1 AS REAL) WHEN '' THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((0.46410376472539894))) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE (((rt1.c1, rt1.c0, x''))=((rt1.c2, rt1.c1, rt1.c2)))  WHEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN rt1.c2 WHEN (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN CAST(rt1.c1 AS REAL) WHEN '' THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((0.46410376472539894))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c1, rt1.c0, x''))=((rt1.c2, rt1.c1, rt1.c2)))  WHEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN rt1.c2 WHEN (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN CAST(rt1.c1 AS REAL) WHEN '' THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((0.46410376472539894))) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE (((rt1.c1, rt1.c0, x''))=((rt1.c2, rt1.c1, rt1.c2)))  WHEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN rt1.c2 WHEN (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))) THEN CAST(rt1.c1 AS REAL) WHEN '' THEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((0.46410376472539894))) END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY COALESCE(LIKELIHOOD(vt0.c0, 0.5488174267951615), CAST(vt0.c0 AS INTEGER), TRIM(DISTINCT vt0.c0), ((vt0.c0)<=(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(LIKELIHOOD(vt0.c0, 0.5488174267951615), CAST(vt0.c0 AS INTEGER), TRIM(DISTINCT vt0.c0), ((vt0.c0)<=(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY COALESCE(LIKELIHOOD(vt0.c0, 0.5488174267951615), CAST(vt0.c0 AS INTEGER), TRIM(DISTINCT vt0.c0), ((vt0.c0)<=(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(LIKELIHOOD(vt0.c0, 0.5488174267951615), CAST(vt0.c0 AS INTEGER), TRIM(DISTINCT vt0.c0), ((vt0.c0)<=(vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY COALESCE(LIKELIHOOD(vt0.c0, 0.5488174267951615), CAST(vt0.c0 AS INTEGER), TRIM(DISTINCT vt0.c0), ((vt0.c0)<=(vt0.c0))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))AND(LOWER(DISTINCT rt1.c2))))OR(((-511266900)LIKE(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))AND(LOWER(DISTINCT rt1.c2))))OR(((-511266900)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))AND(LOWER(DISTINCT rt1.c2))))OR(((-511266900)LIKE(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))AND(LOWER(DISTINCT rt1.c2))))OR(((-511266900)LIKE(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)))AND(LOWER(DISTINCT rt1.c2))))OR(((-511266900)LIKE(rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))|((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))|((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))|((vt0.c0 IN ()))));
SELECT * FROM vt0, rt1 WHERE ((NOT (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END))) ORDER BY '792565317'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY '792565317'  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((NOT (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END))) ORDER BY '792565317'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY '792565317'  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((NOT (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END))) ORDER BY '792565317'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0X20d9ca98);
SELECT SUM(count) FROM (SELECT ((0x20d9ca98) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0X20d9ca98);
SELECT SUM(count) FROM (SELECT ((0x20d9ca98) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0X20d9ca98);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c2 IN ()))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END)))AND(JULIANDAY(rt1.c2, rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN ()))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END)))AND(JULIANDAY(rt1.c2, rt1.c0, rt1.c1)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c2 IN ()))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END)))AND(JULIANDAY(rt1.c2, rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2 IN ()))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END)))AND(JULIANDAY(rt1.c2, rt1.c0, rt1.c1)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c2 IN ()))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c0 END)))AND(JULIANDAY(rt1.c2, rt1.c0, rt1.c1))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(x''))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0))) ORDER BY (((0.4223820084993487) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(x''))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((0.4223820084993487) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(x''))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0))) ORDER BY (((0.4223820084993487) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(x''))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((0.4223820084993487) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(x''))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0))) ORDER BY (((0.4223820084993487) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS BLOB) WHERE (((((((vt0.c0)OR(rt1.c1)))AND(((rt1.c0)-(rt1.c2)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))) ORDER BY (0.6136855475888596 COLLATE NOCASE IN ())  NULLS FIRST, 0.7007994285726992 ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt1.c1)))AND(((rt1.c0)-(rt1.c2)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS BLOB) ORDER BY (0.6136855475888596 COLLATE NOCASE IN ())  NULLS FIRST, 0.7007994285726992 ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS BLOB) WHERE (((((((vt0.c0)OR(rt1.c1)))AND(((rt1.c0)-(rt1.c2)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))) ORDER BY (0.6136855475888596 COLLATE NOCASE IN ())  NULLS FIRST, 0.7007994285726992 ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt1.c1)))AND(((rt1.c0)-(rt1.c2)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS BLOB) ORDER BY (0.6136855475888596 COLLATE NOCASE IN ())  NULLS FIRST, 0.7007994285726992 ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS BLOB) WHERE (((((((vt0.c0)OR(rt1.c1)))AND(((rt1.c0)-(rt1.c2)))))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 END))) ORDER BY (0.6136855475888596 COLLATE NOCASE IN ())  NULLS FIRST, 0.7007994285726992 ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (~ ((- (0.561463533100288)))) WHERE ((((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((x'', CAST(rt1.c0 AS INTEGER), (rt1.c1 IN ()))) AND ((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END, x'', ((rt1.c2)+(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((x'', CAST(rt1.c0 AS INTEGER), (rt1.c1 IN ()))) AND ((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END, x'', ((rt1.c2)+(vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (~ ((- (0.561463533100288)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (~ ((- (0.561463533100288)))) WHERE ((((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((x'', CAST(rt1.c0 AS INTEGER), (rt1.c1 IN ()))) AND ((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END, x'', ((rt1.c2)+(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((x'', CAST(rt1.c0 AS INTEGER), (rt1.c1 IN ()))) AND ((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END, x'', ((rt1.c2)+(vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (~ ((- (0.561463533100288)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (~ ((- (0.561463533100288)))) WHERE ((((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((x'', CAST(rt1.c0 AS INTEGER), (rt1.c1 IN ()))) AND ((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END, x'', ((rt1.c2)+(vt0.c0))))));
SELECT ALL * FROM rt1, vt0 WHERE (((((((((rt1.c0)AND(rt1.c0)))OR(0.367919955939903)))AND(((((((((NULL)AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))))OR(((((vt0.c0)OR(vt0.c0)))OR(rt1.c1))))) ORDER BY ((rt1.c2 COLLATE BINARY)IS NOT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)AND(rt1.c0)))OR(0.367919955939903)))AND(((((((((NULL)AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))))OR(((((vt0.c0)OR(vt0.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c2 COLLATE BINARY)IS NOT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE (((((((((rt1.c0)AND(rt1.c0)))OR(0.367919955939903)))AND(((((((((NULL)AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))))OR(((((vt0.c0)OR(vt0.c0)))OR(rt1.c1))))) ORDER BY ((rt1.c2 COLLATE BINARY)IS NOT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)AND(rt1.c0)))OR(0.367919955939903)))AND(((((((((NULL)AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))))OR(((((vt0.c0)OR(vt0.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((rt1.c2 COLLATE BINARY)IS NOT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))));
SELECT ALL * FROM rt1, vt0 WHERE (((((((((rt1.c0)AND(rt1.c0)))OR(0.367919955939903)))AND(((((((((NULL)AND(vt0.c0)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))))OR(((((vt0.c0)OR(vt0.c0)))OR(rt1.c1))))) ORDER BY ((rt1.c2 COLLATE BINARY)IS NOT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0))));
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2))=((((rt1.c0)<>(rt1.c0)))))) ORDER BY ((CAST(rt1.c2 AS TEXT))>>(UNICODE(rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2))==((((rt1.c0)<>(rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(rt1.c2 AS TEXT))>>(UNICODE(rt1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2))=((((rt1.c0)<>(rt1.c0)))))) ORDER BY ((CAST(rt1.c2 AS TEXT))>>(UNICODE(rt1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2))==((((rt1.c0)<>(rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(rt1.c2 AS TEXT))>>(UNICODE(rt1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c2))=((((rt1.c0)<>(rt1.c0)))))) ORDER BY ((CAST(rt1.c2 AS TEXT))>>(UNICODE(rt1.c2))) ASC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0) NOTNULL)) IS TRUE)) ORDER BY ((((vt0.c0)%(rt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0)%(rt1.c0))) NOT NULL));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0) NOTNULL)) IS TRUE)) ORDER BY ((((vt0.c0)%(rt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0)%(rt1.c0))) NOT NULL));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0) NOTNULL)) IS TRUE)) ORDER BY ((((vt0.c0)%(rt1.c0))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) NOT NULL)) ORDER BY (((rt1.c1 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c1 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) NOT NULL)) ORDER BY (((rt1.c1 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c1 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))) NOT NULL)) ORDER BY (((rt1.c1 IN ()))LIKE(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS REAL))AND(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(vt0.c0 AS REAL))AND(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS REAL))AND(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(vt0.c0 AS REAL))AND(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (x'') ORDER BY ((CAST(vt0.c0 AS REAL))AND(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c1 END IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST((('')<(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')<(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST((('')<(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')<(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST((('')<(rt1.c1)) AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE ((('1987887694')%((((('\r')OR('')))OR(rt1.c2))))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1987887694')%((((('\r')OR('')))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((('1987887694')%((((('\r')OR('')))OR(rt1.c2))))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1987887694')%((((('\r')OR('')))OR(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((('1987887694')%((((('\r')OR('')))OR(rt1.c2))))) ORDER BY rt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c0)/(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)/(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c0)/(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)/(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((rt1.c0)/(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN x'' ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN x'' ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN x'' ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN x'' ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN x'' ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (LOWER(DISTINCT (((vt0.c0))==((vt0.c0))))) ORDER BY NULL ASC  NULLS LAST, vt0.c0 ASC  NULLS LAST, CAST(((vt0.c0)<>(vt0.c0)) AS REAL) DESC, (((((vt0.c0)-(0.6163252215184777))))>=((((vt0.c0)>(vt0.c0))))) DESC, (NOT ('-2008232580' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (((vt0.c0))==((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST, vt0.c0 ASC  NULLS LAST, CAST(((vt0.c0)!=(vt0.c0)) AS REAL) DESC, (((((vt0.c0)-(0.6163252215184777))))>=((((vt0.c0)>(vt0.c0))))) DESC, (NOT ('-2008232580' COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (LOWER(DISTINCT (((vt0.c0))==((vt0.c0))))) ORDER BY NULL ASC  NULLS LAST, vt0.c0 ASC  NULLS LAST, CAST(((vt0.c0)<>(vt0.c0)) AS REAL) DESC, (((((vt0.c0)-(0.6163252215184777))))>=((((vt0.c0)>(vt0.c0))))) DESC, (NOT ('-2008232580' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (((vt0.c0))==((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST, vt0.c0 ASC  NULLS LAST, CAST(((vt0.c0)!=(vt0.c0)) AS REAL) DESC, (((((vt0.c0)-(0.6163252215184777))))>=((((vt0.c0)>(vt0.c0))))) DESC, (NOT ('-2008232580' COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (LOWER(DISTINCT (((vt0.c0))==((vt0.c0))))) ORDER BY NULL ASC  NULLS LAST, vt0.c0 ASC  NULLS LAST, CAST(((vt0.c0)<>(vt0.c0)) AS REAL) DESC, (((((vt0.c0)-(0.6163252215184777))))>=((((vt0.c0)>(vt0.c0))))) DESC, (NOT ('-2008232580' COLLATE RTRIM));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)!=(vt0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN (rt1.c2, rt1.c0)) COLLATE NOCASE) ORDER BY rt1.c1  NULLS LAST, CAST(rt1.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c2, rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST, CAST(rt1.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN (rt1.c2, rt1.c0)) COLLATE NOCASE) ORDER BY rt1.c1  NULLS LAST, CAST(rt1.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c2, rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST, CAST(rt1.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c1 IN (rt1.c2, rt1.c0)) COLLATE NOCASE) ORDER BY rt1.c1  NULLS LAST, CAST(rt1.c0 COLLATE RTRIM AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY rt1.c2  NULLS FIRST, rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2  NULLS FIRST, rt1.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY rt1.c2  NULLS FIRST, rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2  NULLS FIRST, rt1.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY rt1.c2  NULLS FIRST, rt1.c2 DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (x'') ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0)+(rt1.c1)), 0.7604351917492493)  NULLS LAST, (((((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))<>((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0)+(rt1.c1)), 0.7604351917492493)  NULLS LAST, (((((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))!=((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (x'') ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0)+(rt1.c1)), 0.7604351917492493)  NULLS LAST, (((((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))<>((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt0 ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0)+(rt1.c1)), 0.7604351917492493)  NULLS LAST, (((((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))!=((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (x'') ORDER BY LIKELIHOOD(DISTINCT ((rt1.c0)+(rt1.c1)), 0.7604351917492493)  NULLS LAST, (((((((vt0.c0)AND(rt1.c2)))OR(rt1.c0))))<>((((((rt1.c1)OR(rt1.c2)))AND(vt0.c0)))))  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c2)<(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)<(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c2)<(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)<(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(((rt1.c2)<(vt0.c0)) AS TEXT));
SELECT * FROM rt1 INNER JOIN vt0 ON ((((vt0.c0)-(rt1.c0)))IS NOT(rt1.c0 COLLATE RTRIM)) WHERE (IFNULL(((rt1.c0)*(rt1.c1)), ((rt1.c2)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt1.c0)*(rt1.c1)), ((rt1.c2)IS(vt0.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((vt0.c0)-(rt1.c0)))IS NOT(rt1.c0 COLLATE RTRIM)));
SELECT * FROM rt1 INNER JOIN vt0 ON ((((vt0.c0)-(rt1.c0)))IS NOT(rt1.c0 COLLATE RTRIM)) WHERE (IFNULL(((rt1.c0)*(rt1.c1)), ((rt1.c2)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt1.c0)*(rt1.c1)), ((rt1.c2)IS(vt0.c0)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((vt0.c0)-(rt1.c0)))IS NOT(rt1.c0 COLLATE RTRIM)));
SELECT * FROM rt1 INNER JOIN vt0 ON ((((vt0.c0)-(rt1.c0)))IS NOT(rt1.c0 COLLATE RTRIM)) WHERE (IFNULL(((rt1.c0)*(rt1.c1)), ((rt1.c2)IS(vt0.c0))));
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c2)%(vt0.c0)) WHEN (+ (rt1.c0)) THEN ((vt0.c0)IS NOT(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c2)%(vt0.c0)) WHEN (+ (rt1.c0)) THEN ((vt0.c0)IS NOT(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c2)%(vt0.c0)) WHEN (+ (rt1.c0)) THEN ((vt0.c0)IS NOT(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c2)%(vt0.c0)) WHEN (+ (rt1.c0)) THEN ((vt0.c0)IS NOT(rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c2)%(vt0.c0)) WHEN (+ (rt1.c0)) THEN ((vt0.c0)IS NOT(rt1.c2)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '1236493178'))))AND((('pp') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((~ (vt0.c0)))GLOB((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '1236493178'))))AND((('pp') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))GLOB((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '1236493178'))))AND((('pp') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((~ (vt0.c0)))GLOB((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '1236493178'))))AND((('pp') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))GLOB((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, '1236493178'))))AND((('pp') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((~ (vt0.c0)))GLOB((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0 IN ())))==((((vt0.c0)*(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))=((((vt0.c0)*(vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0 IN ())))==((((vt0.c0)*(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))=((((vt0.c0)*(vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0 IN ())))==((((vt0.c0)*(vt0.c0))))) DESC;
SELECT ALL * FROM vt0, rt1 WHERE (json_array(rt1.c2 COLLATE RTRIM, ((rt1.c0) ISNULL), ((rt1.c1) NOTNULL), CAST(rt1.c1 AS NUMERIC), ((rt1.c1)IS NOT('')), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_array(rt1.c2 COLLATE RTRIM, ((rt1.c0) ISNULL), ((rt1.c1) NOTNULL), CAST(rt1.c1 AS NUMERIC), ((rt1.c1)IS NOT('')), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (json_array(rt1.c2 COLLATE RTRIM, ((rt1.c0) ISNULL), ((rt1.c1) NOTNULL), CAST(rt1.c1 AS NUMERIC), ((rt1.c1)IS NOT('')), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_array(rt1.c2 COLLATE RTRIM, ((rt1.c0) ISNULL), ((rt1.c1) NOTNULL), CAST(rt1.c1 AS NUMERIC), ((rt1.c1)IS NOT('')), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (json_array(rt1.c2 COLLATE RTRIM, ((rt1.c0) ISNULL), ((rt1.c1) NOTNULL), CAST(rt1.c1 AS NUMERIC), ((rt1.c1)IS NOT('')), (vt0.c0 IN ())));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))>=(((rt1.c0)-(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))>=(((rt1.c0)-(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))>=(((rt1.c0)-(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))>=(((rt1.c0)-(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))>=(((rt1.c0)-(rt1.c1)))));
SELECT * FROM rt1 WHERE (CASE WHEN (- (0.16916164552687063)) THEN ((1321478140) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (0.16916164552687063)) THEN ((1321478140) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c1) IS TRUE) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN (- (0.16916164552687063)) THEN ((1321478140) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (0.16916164552687063)) THEN ((1321478140) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c1) IS TRUE) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN (- (0.16916164552687063)) THEN ((1321478140) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c1) IS TRUE) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.230696111974662 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((('-334367232'))>=((vt0.c0)))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.230696111974662 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((('-334367232'))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.230696111974662 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((('-334367232'))>=((vt0.c0)))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.230696111974662 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((('-334367232'))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.230696111974662 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((('-334367232'))>=((vt0.c0)))))) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))AND(0.8610531019544242)))OR(json_quote(vt0.c0))))OR(((vt0.c0)-(NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))AND(0.8610531019544242)))OR(json_quote(vt0.c0))))OR(((vt0.c0)-(NULL)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))AND(0.8610531019544242)))OR(json_quote(vt0.c0))))OR(((vt0.c0)-(NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))AND(0.8610531019544242)))OR(json_quote(vt0.c0))))OR(((vt0.c0)-(NULL)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))AND(0.8610531019544242)))OR(json_quote(vt0.c0))))OR(((vt0.c0)-(NULL)))) ASC  NULLS LAST;
