-- Time: 2024/06/09 06:58:48
-- Database: database72
-- Database version: 3.40.0
-- seed value: 4023930872
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'', c0='-2060780270' WHERE ((LOWER(DISTINCT x'fa2b')) BETWEEN ('-2060780270') AND (CAST(vt0.c0 AS REAL))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -646247714);\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-2060780270'), ('\r!1yy92B'), (0.14105859634240292); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '52216'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('9'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.6718612166065635), ('0.14105859634240292'), (x'632c'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('-2060780270'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'f807'); -- 0ms;
UPDATE vt0 SET (c0, c0)=(-2.06078027E9, x''); -- 0ms;
END; -- 1ms;
VACUUM; -- 2ms;
PRAGMA busy_timeout = 0; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0.6718612166065635) WHERE CASE CAST(vt0.c0 AS NUMERIC)  WHEN TYPEOF(DISTINCT vt0.c0) THEN CAST(vt0.c0 AS TEXT) END; -- 9ms;
DELETE FROM vt0; -- 2ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='-2060780270' WHERE CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '21521'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(NULL, NULL, 0X5c583e62) WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))OR((((vt0.c0))<((vt0.c0))))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 3ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (0.1594494187124682); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 96873197); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1366343926);\n; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=('-307769554'); -- 7ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('૞#'); -- 6ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-423663406'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55366'); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0.35133904331102783); -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE ((vt0.c0 IN ()) IN ()); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('~i8g* e'); -- 16ms;
UPDATE OR IGNORE vt0 SET c0='559371977'; -- 16ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1055515876); -- 9ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)|(x'')) AS BLOB); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 656726561); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 1ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), ((((~ ('X&')))<((((('}d*l腑m')OR('1053695506')))AND('-366039020'))))), ('-778422254'); -- 0ms;
PRAGMA temp.threads = 2184022206560534182; -- 0ms;
ANALYZE vt1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 587802572); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((((-423663406)OR(1366383542)))OR(0.408151482534973))); -- 1ms;
UPDATE OR ROLLBACK vt1 SET c0='-623804224' WHERE (- (CAST(vt1.c0 AS REAL))); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
PRAGMA application_id = 2446221900740452334; -- 0ms;
PRAGMA main.journal_size_limit = 0; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('1695835024'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.6165729955567402); -- 0ms;
UPDATE vt0 SET c0='' WHERE (vt0.c0 IN (vt0.c0)) COLLATE RTRIM; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=559371977 unordered noskipscan'); -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('0.6718612166065635'), (NULL), (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38204'); -- 0ms;
ANALYZE temp; -- 1ms;
UPDATE OR IGNORE vt1 SET c0=0x3c190302, c0=1.141408081E9, c0='' WHERE HEX(x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-1220385802'), (0.7322755841791369), ('240888704'), (-4.23663406E8), ('i>I'); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
CREATE TABLE t0 (c0 REAL , c1 BLOB , c2 INTEGER ); -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE 0.7310242855896246 COLLATE BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 17ms;
REINDEX  vt1; -- 2ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE ((((vt1.c0) NOTNULL)) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0X65146390 THEN vt1.c0 END) AND (((vt1.c0)<=(vt1.c0)))); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (x'8a89'); -- 64ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 19ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1571379543); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2134727945); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(MAX(vt0.c0, vt0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(MAX(vt0.c0, vt0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(MAX(vt0.c0, vt0.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(MAX(vt0.c0, vt0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(MAX(vt0.c0, vt0.c0) AS NUMERIC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('-423663406'))>=((x''))));
SELECT SUM(count) FROM (SELECT ((((('-423663406'))>=((x'')))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('-423663406'))>=((x''))));
SELECT SUM(count) FROM (SELECT ((((('-423663406'))>=((x'')))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('-423663406'))>=((x''))));
SELECT COUNT(*) FROM vt1 WHERE (CASE SQLITE_VERSION()  WHEN ((vt1.c0)>=(0.4452597611090462)) THEN ((vt1.c0)>=(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)=(x'')) WHEN x'' THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_VERSION()  WHEN ((vt1.c0)>=(0.4452597611090462)) THEN ((vt1.c0)>=(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)==(x'')) WHEN x'' THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE SQLITE_VERSION()  WHEN ((vt1.c0)>=(0.4452597611090462)) THEN ((vt1.c0)>=(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)=(x'')) WHEN x'' THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_VERSION()  WHEN ((vt1.c0)>=(0.4452597611090462)) THEN ((vt1.c0)>=(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)==(x'')) WHEN x'' THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE SQLITE_VERSION()  WHEN ((vt1.c0)>=(0.4452597611090462)) THEN ((vt1.c0)>=(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)=(x'')) WHEN x'' THEN (vt1.c0 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS TEXT))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS TEXT))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS TEXT))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(vt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY vt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))IS('-1893938544')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))IS('-1893938544'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))IS('-1893938544')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))IS('-1893938544'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))IS('-1893938544')));
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB))) ORDER BY (+ (((vt1.c0)||(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)||(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB))) ORDER BY (+ (((vt1.c0)||(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c0)||(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 WHERE (NULLIF(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB))) ORDER BY (+ (((vt1.c0)||(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((rtreenode(vt0.c0, vt0.c0)))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((rtreenode(vt0.c0, vt0.c0)))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((rtreenode(vt0.c0, vt0.c0)))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((rtreenode(vt0.c0, vt0.c0)))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((rtreenode(vt0.c0, vt0.c0)))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((('')==((~ (vt1.c0))))) ORDER BY (((- (vt1.c0)))LIKE(((vt1.c0) IS FALSE))) DESC  NULLS LAST, ((((((((((vt1.c0) NOT NULL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'bbe3')))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')=((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0)))LIKE(((vt1.c0) IS FALSE))) DESC  NULLS LAST, ((((((((((vt1.c0) NOT NULL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'bbe3')))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('')==((~ (vt1.c0))))) ORDER BY (((- (vt1.c0)))LIKE(((vt1.c0) IS FALSE))) DESC  NULLS LAST, ((((((((((vt1.c0) NOT NULL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'bbe3')))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('')=((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0)))LIKE(((vt1.c0) IS FALSE))) DESC  NULLS LAST, ((((((((((vt1.c0) NOT NULL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'bbe3')))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('')==((~ (vt1.c0))))) ORDER BY (((- (vt1.c0)))LIKE(((vt1.c0) IS FALSE))) DESC  NULLS LAST, ((((((((((vt1.c0) NOT NULL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x'bbe3')))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN json_array_length(vt0.c0) THEN vt1.c0 COLLATE BINARY WHEN NULL THEN 0.5723385104991908 WHEN ((vt1.c0)LIKE(vt1.c0)) THEN 0x2eef80cd WHEN ((vt0.c0)<=('1027584544')) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) END) ORDER BY (x'' IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array_length(vt0.c0) THEN vt1.c0 COLLATE BINARY WHEN NULL THEN 0.5723385104991908 WHEN ((vt1.c0)LIKE(vt1.c0)) THEN 0X2eef80cd WHEN ((vt0.c0)<=('1027584544')) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (x'' IN ()) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN json_array_length(vt0.c0) THEN vt1.c0 COLLATE BINARY WHEN NULL THEN 0.5723385104991908 WHEN ((vt1.c0)LIKE(vt1.c0)) THEN 0x2eef80cd WHEN ((vt0.c0)<=('1027584544')) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) END) ORDER BY (x'' IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_array_length(vt0.c0) THEN vt1.c0 COLLATE BINARY WHEN NULL THEN 0.5723385104991908 WHEN ((vt1.c0)LIKE(vt1.c0)) THEN 0X2eef80cd WHEN ((vt0.c0)<=('1027584544')) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (x'' IN ()) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY LIKE(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END, 0.014000465334456869, '1') ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY LIKE(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END, 0.014000465334456869, '1') ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY LIKE(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END, 0.014000465334456869, '1') ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY LIKE(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END, 0.014000465334456869, '1') ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY LIKE(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END, 0.014000465334456869, '1') ASC;
SELECT * FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((NOT (vt1.c0))) IS TRUE) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))OR(x'')) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))OR(x'')) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(x'')) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (((((1433975340)AND(LIKE(vt1.c0, vt1.c0, 'H'))))OR(vt0.c0 COLLATE BINARY))) ORDER BY (NOT ((vt1.c0 IN ()))) ASC, CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((1433975340)AND(LIKE(vt1.c0, vt1.c0, 'H'))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT ((vt1.c0 IN ()))) ASC, CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((1433975340)AND(LIKE(vt1.c0, vt1.c0, 'H'))))OR(vt0.c0 COLLATE BINARY))) ORDER BY (NOT ((vt1.c0 IN ()))) ASC, CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((1433975340)AND(LIKE(vt1.c0, vt1.c0, 'H'))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT ((vt1.c0 IN ()))) ASC, CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((1433975340)AND(LIKE(vt1.c0, vt1.c0, 'H'))))OR(vt0.c0 COLLATE BINARY))) ORDER BY (NOT ((vt1.c0 IN ()))) ASC, CAST(vt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (-198527000);
SELECT SUM(count) FROM (SELECT ALL ((-198527000) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-198527000);
SELECT SUM(count) FROM (SELECT ALL ((-198527000) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-198527000);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))IS NOT((~ (x'2d40')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))IS NOT((~ (x'2d40'))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))IS NOT((~ (x'2d40')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB))IS NOT((~ (x'2d40'))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))IS NOT((~ (x'2d40')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((TYPEOF(vt1.c0)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt1.c0)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TYPEOF(vt1.c0)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt1.c0)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TYPEOF(vt1.c0)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0 COLLATE BINARY)));
SELECT * FROM vt1 WHERE ((((UNLIKELY(DISTINCT vt1.c0), (((vt1.c0))<((vt1.c0))), ((vt1.c0)<=(vt1.c0))))>((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (NOT (((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(DISTINCT vt1.c0), (((vt1.c0))<((vt1.c0))), ((vt1.c0)<=(vt1.c0))))>((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((UNLIKELY(DISTINCT vt1.c0), (((vt1.c0))<((vt1.c0))), ((vt1.c0)<=(vt1.c0))))>((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (NOT (((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(DISTINCT vt1.c0), (((vt1.c0))<((vt1.c0))), ((vt1.c0)<=(vt1.c0))))>((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((UNLIKELY(DISTINCT vt1.c0), (((vt1.c0))<((vt1.c0))), ((vt1.c0)<=(vt1.c0))))>((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (NOT (((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (x'2466'))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) ORDER BY (((TRIM(DISTINCT 0x3d3fb220)))<>((((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (x'2466'))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((TRIM(DISTINCT 0x3d3fb220)))!=((((vt0.c0)+(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (x'2466'))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) ORDER BY (((TRIM(DISTINCT 0x3d3fb220)))<>((((vt0.c0)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (x'2466'))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((TRIM(DISTINCT 0x3d3fb220)))!=((((vt0.c0)+(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (x'2466'))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c0))) ORDER BY (((TRIM(DISTINCT 0x3d3fb220)))<>((((vt0.c0)+(vt0.c0)))));
SELECT * FROM vt0 WHERE (((NULL) BETWEEN ((- (vt0.c0))) AND ('*sqHS' COLLATE NOCASE))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((- (vt0.c0))) AND ('*sqHS' COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((NULL) BETWEEN ((- (vt0.c0))) AND ('*sqHS' COLLATE NOCASE))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((- (vt0.c0))) AND ('*sqHS' COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((NULL) BETWEEN ((- (vt0.c0))) AND ('*sqHS' COLLATE NOCASE))) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM vt1 WHERE (COALESCE((vt1.c0 IN ()), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'c84e' WHEN vt1.c0 THEN vt1.c0 END, (((((((('-1143758919')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ORDER BY ((TYPEOF(vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((vt1.c0 IN ()), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'c84e' WHEN vt1.c0 THEN vt1.c0 END, (((((((('-1143758919')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((TYPEOF(vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST);
SELECT * FROM vt1 WHERE (COALESCE((vt1.c0 IN ()), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'c84e' WHEN vt1.c0 THEN vt1.c0 END, (((((((('-1143758919')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ORDER BY ((TYPEOF(vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((vt1.c0 IN ()), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'c84e' WHEN vt1.c0 THEN vt1.c0 END, (((((((('-1143758919')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((TYPEOF(vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST);
SELECT * FROM vt1 WHERE (COALESCE((vt1.c0 IN ()), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'c84e' WHEN vt1.c0 THEN vt1.c0 END, (((((((('-1143758919')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ORDER BY ((TYPEOF(vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) AS NUMERIC)) ORDER BY (((~ (vt1.c0)))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt1.c0)))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) AS NUMERIC)) ORDER BY (((~ (vt1.c0)))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (vt1.c0)))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) AS NUMERIC)) ORDER BY (((~ (vt1.c0)))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NOT (vt1.c0)), (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)+(vt1.c0)), x'', (+ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NOT (vt1.c0)), (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)+(vt1.c0)), x'', (+ (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NOT (vt1.c0)), (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)+(vt1.c0)), x'', (+ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NOT (vt1.c0)), (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)+(vt1.c0)), x'', (+ (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NOT (vt1.c0)), (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)+(vt1.c0)), x'', (+ (vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (PRINTF((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (PRINTF((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (PRINTF((NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type((NOT (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)), vt0.c0 COLLATE NOCASE, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS REAL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'');
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0)&(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)||(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE IFNULL(vt1.c0, vt1.c0) END) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<>(0.6597592470356467)))) AND ((((vt1.c0)>>(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0)&(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)||(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE IFNULL(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)!=(0.6597592470356467)))) AND ((((vt1.c0)>>(vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0)&(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)||(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE IFNULL(vt1.c0, vt1.c0) END) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<>(0.6597592470356467)))) AND ((((vt1.c0)>>(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0)&(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)||(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE IFNULL(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)!=(0.6597592470356467)))) AND ((((vt1.c0)>>(vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0)&(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)||(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE IFNULL(vt1.c0, vt1.c0) END) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)<>(0.6597592470356467)))) AND ((((vt1.c0)>>(vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))||(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))||(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))||(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))||(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE))||(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)LIKE(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)LIKE(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)LIKE(vt1.c0))) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN ())))) ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) AS REAL), ((LTRIM(vt1.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt1.c0))) DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) AS REAL), ((LTRIM(vt1.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt1.c0))) DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN ())))) ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) AS REAL), ((LTRIM(vt1.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt1.c0))) DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) AS REAL), ((LTRIM(vt1.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt1.c0))) DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((x'') NOTNULL)) AND ((vt1.c0 IN ())))) ORDER BY CAST((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) AS REAL), ((LTRIM(vt1.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (HEX(DISTINCT vt1.c0))) DESC, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 ELSE CASE 1433975340  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY LIKE(((vt0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), 'i')  NULLS LAST, CASE WHEN (((0.6746895738268831))!=((vt0.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN 1.43397534E9 WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 END;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 ELSE CASE 1433975340  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKE(((vt0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), 'i')  NULLS LAST, CASE WHEN (((0.6746895738268831))<>((vt0.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN 1.43397534E9 WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 END);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 ELSE CASE 1433975340  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY LIKE(((vt0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), 'i')  NULLS LAST, CASE WHEN (((0.6746895738268831))!=((vt0.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN 1.43397534E9 WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 END;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 ELSE CASE 1433975340  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKE(((vt0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), 'i')  NULLS LAST, CASE WHEN (((0.6746895738268831))<>((vt0.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN 1.43397534E9 WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 END);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt0.c0 ELSE CASE 1433975340  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY LIKE(((vt0.c0)>>(vt0.c0)), ((vt0.c0)<=(vt0.c0)), 'i')  NULLS LAST, CASE WHEN (((0.6746895738268831))!=((vt0.c0))) THEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN 1.43397534E9 WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 END;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((vt1.c0)%(vt1.c0)) IN (HEX(vt1.c0))), (vt1.c0 IN ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)%(vt1.c0)) IN (HEX(vt1.c0))), (vt1.c0 IN ((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((vt1.c0)%(vt1.c0)) IN (HEX(vt1.c0))), (vt1.c0 IN ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)%(vt1.c0)) IN (HEX(vt1.c0))), (vt1.c0 IN ((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((vt1.c0)%(vt1.c0)) IN (HEX(vt1.c0))), (vt1.c0 IN ((vt1.c0 IN ())));
SELECT ALL * FROM vt1, vt0 WHERE (((NULL) NOT NULL)) ORDER BY x'2385', ((vt1.c0)LIKE(CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'2385', ((vt1.c0)LIKE(CAST(vt0.c0 AS REAL)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((NULL) NOT NULL)) ORDER BY x'2385', ((vt1.c0)LIKE(CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'2385', ((vt1.c0)LIKE(CAST(vt0.c0 AS REAL)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((NULL) NOT NULL)) ORDER BY x'2385', ((vt1.c0)LIKE(CAST(vt0.c0 AS REAL)))  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT * FROM vt0, vt1 WHERE (UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))) NOT NULL)) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<>(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))!=(vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))) NOT NULL)) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<>(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))!=(vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))) NOT NULL)) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<>(vt0.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-1480096696') AND (vt1.c0)))) AND (((~ (vt1.c0)))))) ORDER BY (('0.6165729955567402')OR((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-1480096696') AND (vt1.c0)))) AND (((~ (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('0.6165729955567402')OR((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-1480096696') AND (vt1.c0)))) AND (((~ (vt1.c0)))))) ORDER BY (('0.6165729955567402')OR((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-1480096696') AND (vt1.c0)))) AND (((~ (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('0.6165729955567402')OR((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN ('-1480096696') AND (vt1.c0)))) AND (((~ (vt1.c0)))))) ORDER BY (('0.6165729955567402')OR((vt0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- (vt1.c0)));
SELECT * FROM vt1, vt0 WHERE (CAST((NOT (vt1.c0)) AS INTEGER)) ORDER BY (+ (CHANGES())) ASC, (((~ (vt1.c0)))|(((0.32175049832344094)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (CHANGES())) ASC, (((~ (vt1.c0)))|(((0.32175049832344094)==(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (CAST((NOT (vt1.c0)) AS INTEGER)) ORDER BY (+ (CHANGES())) ASC, (((~ (vt1.c0)))|(((0.32175049832344094)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (CHANGES())) ASC, (((~ (vt1.c0)))|(((0.32175049832344094)==(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (CAST((NOT (vt1.c0)) AS INTEGER)) ORDER BY (+ (CHANGES())) ASC, (((~ (vt1.c0)))|(((0.32175049832344094)=(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST((+ (vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(((-1794140537) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((-1794140537) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((-1794140537) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((-1794140537) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((-1794140537) IS FALSE) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((((((((0.014000465334456869)>=(vt0.c0)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffffdad180c0 ELSE vt1.c0 END)) DESC, (((vt0.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((0.014000465334456869)>=(vt0.c0)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffffdad180c0 ELSE vt1.c0 END)) DESC, (((vt0.c0) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((((((((0.014000465334456869)>=(vt0.c0)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffffdad180c0 ELSE vt1.c0 END)) DESC, (((vt0.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((0.014000465334456869)>=(vt0.c0)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffffdad180c0 ELSE vt1.c0 END)) DESC, (((vt0.c0) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((((((((0.014000465334456869)>=(vt0.c0)))OR(NULL)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffffdad180c0 ELSE vt1.c0 END)) DESC, (((vt0.c0) IS FALSE) IN ());
SELECT * FROM vt1, vt0 WHERE (((ABS(DISTINCT vt0.c0))GLOB(5.59371977E8 COLLATE NOCASE))) ORDER BY (((vt0.c0)>(vt1.c0)) IN (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt0.c0))GLOB(5.59371977E8 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)>(vt1.c0)) IN (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((ABS(DISTINCT vt0.c0))GLOB(5.59371977E8 COLLATE NOCASE))) ORDER BY (((vt0.c0)>(vt1.c0)) IN (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt0.c0))GLOB(5.59371977E8 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)>(vt1.c0)) IN (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((ABS(DISTINCT vt0.c0))GLOB(5.59371977E8 COLLATE NOCASE))) ORDER BY (((vt0.c0)>(vt1.c0)) IN (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '413404332' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '413404332' END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '413404332' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '413404332' END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '413404332' END);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0 COLLATE NOCASE, 0.9735644922846537));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt0.c0 COLLATE NOCASE, 0.9735644922846537)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0 COLLATE NOCASE, 0.9735644922846537));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt0.c0 COLLATE NOCASE, 0.9735644922846537)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0 COLLATE NOCASE, 0.9735644922846537));
SELECT * FROM vt0, vt1 WHERE ((('㠒૞')>=(ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('㠒૞')>=(ABS(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((('㠒૞')>=(ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('㠒૞')>=(ABS(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((('㠒૞')>=(ABS(vt0.c0))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN '?' THEN ((NULL) IS TRUE) ELSE vt1.c0 COLLATE BINARY END) ORDER BY (+ (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN '?' THEN ((NULL) IS TRUE) ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN '?' THEN ((NULL) IS TRUE) ELSE vt1.c0 COLLATE BINARY END) ORDER BY (+ (vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN '?' THEN ((NULL) IS TRUE) ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt0.c0 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN '?' THEN ((NULL) IS TRUE) ELSE vt1.c0 COLLATE BINARY END) ORDER BY (+ (vt0.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)IS(vt0.c0))))) ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)IS(vt0.c0))))) ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((vt0.c0)IS(vt0.c0))))) ORDER BY (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR((vt1.c0 IN ()))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) ISNULL)))) ORDER BY (((vt1.c0)>>(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE NOCASE)OR((vt1.c0 IN ()))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)>>(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR((vt1.c0 IN ()))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) ISNULL)))) ORDER BY (((vt1.c0)>>(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0 COLLATE NOCASE)OR((vt1.c0 IN ()))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)>>(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR((vt1.c0 IN ()))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((vt1.c0) ISNULL)))) ORDER BY (((vt1.c0)>>(vt1.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END IN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (0.09424687081371919) AND (vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (0.09424687081371919) AND (vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (0.09424687081371919) AND (vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (0.09424687081371919) AND (vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (0.09424687081371919) AND (vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'51b0')))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'51b0')))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'51b0')))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'51b0')))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'51b0')))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN json_patch(vt0.c0, x'') THEN (vt1.c0 IN ()) WHEN ((vt0.c0) ISNULL) THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt1.c0)) WHEN (+ (vt0.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS TRUE)  WHEN json_patch(vt0.c0, x'') THEN (vt1.c0 IN ()) WHEN ((vt0.c0) ISNULL) THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt1.c0)) WHEN (+ (vt0.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN json_patch(vt0.c0, x'') THEN (vt1.c0 IN ()) WHEN ((vt0.c0) ISNULL) THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt1.c0)) WHEN (+ (vt0.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS TRUE)  WHEN json_patch(vt0.c0, x'') THEN (vt1.c0 IN ()) WHEN ((vt0.c0) ISNULL) THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt1.c0)) WHEN (+ (vt0.c0)) THEN ((vt1.c0)%(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((UNLIKELY(DISTINCT vt1.c0), vt1.c0, 0.8407095767059732))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((UNLIKELY(DISTINCT vt1.c0), vt1.c0, 0.8407095767059732)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((UNLIKELY(DISTINCT vt1.c0), vt1.c0, 0.8407095767059732))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((UNLIKELY(DISTINCT vt1.c0), vt1.c0, 0.8407095767059732)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((UNLIKELY(DISTINCT vt1.c0), vt1.c0, 0.8407095767059732))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS BLOB))=(((('', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))==(((('', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS BLOB))=(((('', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))==(((('', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((vt0.c0))) COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS BLOB))=(((('', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0))) ORDER BY '770833651' DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY '770833651' DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) IS TRUE));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0))) ORDER BY '770833651' DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY '770833651' DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) IS TRUE));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0))) ORDER BY '770833651' DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) IS TRUE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT ((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT ((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT ((vt1.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((vt1.c0) IS TRUE) END);
SELECT COUNT(*) FROM vt0 WHERE (((TOTAL_CHANGES())<=(((vt0.c0) IS FALSE)))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())<=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((TOTAL_CHANGES())<=(((vt0.c0) IS FALSE)))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())<=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((TOTAL_CHANGES())<=(((vt0.c0) IS FALSE)))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((1695835024)GLOB(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN ((1695835024)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((1695835024)GLOB(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN ((1695835024)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((1695835024)GLOB(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)GLOB(LIKE(vt0.c0, vt0.c0, 'b'))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(LIKE(vt0.c0, vt0.c0, 'b')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)GLOB(LIKE(vt0.c0, vt0.c0, 'b'))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(LIKE(vt0.c0, vt0.c0, 'b')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)GLOB(LIKE(vt0.c0, vt0.c0, 'b'))));
SELECT * FROM vt0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (NOT (0.02272668013557555)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY CAST((((vt0.c0, vt0.c0, NULL))<=((vt1.c0, -4.23663406E8, vt1.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (NOT (0.02272668013557555)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c0, vt0.c0, NULL))<=((vt1.c0, -4.23663406E8, vt1.c0))) AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (NOT (0.02272668013557555)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY CAST((((vt0.c0, vt0.c0, NULL))<=((vt1.c0, -4.23663406E8, vt1.c0))) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (NOT (0.02272668013557555)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((((vt0.c0, vt0.c0, NULL))<=((vt1.c0, -4.23663406E8, vt1.c0))) AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN (NOT (0.02272668013557555)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY CAST((((vt0.c0, vt0.c0, NULL))<=((vt1.c0, -4.23663406E8, vt1.c0))) AS INTEGER);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN (((x''))=((vt0.c0))) THEN ((vt0.c0)<>(vt0.c0)) WHEN LTRIM(vt1.c0, vt1.c0) THEN vt1.c0 WHEN UPPER(vt1.c0) THEN ((((vt1.c0)OR(x'')))OR(vt1.c0)) ELSE (((((((('-1794140537')OR(vt1.c0)))AND('WIg/8.')))AND(vt1.c0)))OR(vt1.c0)) END) ORDER BY -562912809, CAST(((vt1.c0)%(0X69eb8b7c)) AS REAL)  NULLS FIRST, (- ('/r&Eꍥ')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((x''))==((vt0.c0))) THEN ((vt0.c0)<>(vt0.c0)) WHEN LTRIM(vt1.c0, vt1.c0) THEN vt1.c0 WHEN UPPER(vt1.c0) THEN ((((vt1.c0)OR(x'')))OR(vt1.c0)) ELSE (((((((('-1794140537')OR(vt1.c0)))AND('WIg/8.')))AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY -562912809, CAST(((vt1.c0)%(0x69eb8b7c)) AS REAL)  NULLS FIRST, (- ('/r&Eꍥ')) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN (((x''))=((vt0.c0))) THEN ((vt0.c0)<>(vt0.c0)) WHEN LTRIM(vt1.c0, vt1.c0) THEN vt1.c0 WHEN UPPER(vt1.c0) THEN ((((vt1.c0)OR(x'')))OR(vt1.c0)) ELSE (((((((('-1794140537')OR(vt1.c0)))AND('WIg/8.')))AND(vt1.c0)))OR(vt1.c0)) END) ORDER BY -562912809, CAST(((vt1.c0)%(0X69eb8b7c)) AS REAL)  NULLS FIRST, (- ('/r&Eꍥ')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((x''))==((vt0.c0))) THEN ((vt0.c0)<>(vt0.c0)) WHEN LTRIM(vt1.c0, vt1.c0) THEN vt1.c0 WHEN UPPER(vt1.c0) THEN ((((vt1.c0)OR(x'')))OR(vt1.c0)) ELSE (((((((('-1794140537')OR(vt1.c0)))AND('WIg/8.')))AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY -562912809, CAST(((vt1.c0)%(0x69eb8b7c)) AS REAL)  NULLS FIRST, (- ('/r&Eꍥ')) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM COLLATE BINARY WHERE ('276093002');
SELECT SUM(count) FROM (SELECT (('276093002') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM COLLATE BINARY WHERE ('276093002');
SELECT SUM(count) FROM (SELECT (('276093002') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON x'' COLLATE RTRIM COLLATE BINARY WHERE ('276093002');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt0.c0)))%(0.8391607466648763 COLLATE BINARY))) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))%(0.8391607466648763 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt0.c0)))%(0.8391607466648763 COLLATE BINARY))) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))%(0.8391607466648763 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((- (vt0.c0)))%(0.8391607466648763 COLLATE BINARY))) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (((GLOB(vt0.c0, vt0.c0))=(0.906190533029074))) ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((GLOB(vt0.c0, vt0.c0))=(0.906190533029074))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>=(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((GLOB(vt0.c0, vt0.c0))=(0.906190533029074))) ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((GLOB(vt0.c0, vt0.c0))=(0.906190533029074))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>=(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((GLOB(vt0.c0, vt0.c0))=(0.906190533029074))) ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>=(vt0.c0)))) ASC;
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) IS FALSE)) ORDER BY (+ (((vt1.c0)!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (((vt1.c0)!=(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) IS FALSE)) ORDER BY (+ (((vt1.c0)!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (((vt1.c0)!=(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c0))) IS FALSE)) ORDER BY (+ (((vt1.c0)!=(vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL)) ORDER BY LIKE(((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, 'L') DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY LIKE(((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, 'L') DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL)) ORDER BY LIKE(((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, 'L') DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY LIKE(((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, 'L') DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) NOT NULL)) ORDER BY LIKE(((((((((NULL)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, 'L') DESC, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0))))<=(((vt1.c0 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0))))<=(((vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0))))<=(((vt1.c0 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0))))<=(((vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)AND(vt1.c0))))<=(((vt1.c0 IN (vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((265569002) NOTNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((265569002) NOTNULL) COLLATE NOCASE DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((265569002) NOTNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((265569002) NOTNULL) COLLATE NOCASE DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((265569002) NOTNULL) COLLATE NOCASE DESC;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOTNULL)) ORDER BY (+ (vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (+ (vt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOTNULL)) ORDER BY (+ (vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (+ (vt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)<<(vt1.c0))) NOTNULL)) ORDER BY (+ (vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((x'')OR(vt0.c0 COLLATE BINARY)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((x'') IS FALSE))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(vt0.c0 COLLATE BINARY)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((x'') IS FALSE))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((x'')OR(vt0.c0 COLLATE BINARY)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((x'') IS FALSE))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(vt0.c0 COLLATE BINARY)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((x'') IS FALSE))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((x'')OR(vt0.c0 COLLATE BINARY)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((x'') IS FALSE))))AND(vt0.c0)));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (NULL);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c0)*(vt1.c0))  WHEN 0.8391607466648763 THEN (~ (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN vt1.c0 THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)*(vt1.c0))  WHEN 0.8391607466648763 THEN (~ (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN vt1.c0 THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (NULL)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c0)*(vt1.c0))  WHEN 0.8391607466648763 THEN (~ (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN vt1.c0 THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)*(vt1.c0))  WHEN 0.8391607466648763 THEN (~ (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN vt1.c0 THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (NULL)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c0)*(vt1.c0))  WHEN 0.8391607466648763 THEN (~ (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN vt1.c0 THEN vt1.c0 ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (NULL)) END);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((load_extension(vt1.c0) IN ())) ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((load_extension(vt1.c0) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((load_extension(vt1.c0) IN ())) ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((load_extension(vt1.c0) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((load_extension(vt1.c0) IN ())) ORDER BY (((NOT (vt0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)==(vt1.c0)) IN ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0)/(vt1.c0)))))  NULLS LAST, (+ ((((vt0.c0))>=((vt1.c0)))))  NULLS FIRST, (((((((((vt1.c0 IN ('q1!9\r', vt0.c0)))AND(0X39dada60)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)==(vt1.c0)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0)/(vt1.c0)))))  NULLS LAST, (+ ((((vt0.c0))>=((vt1.c0)))))  NULLS FIRST, (((((((((vt1.c0 IN ('q1!9\r', vt0.c0)))AND(0x39dada60)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)==(vt1.c0)) IN ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0)/(vt1.c0)))))  NULLS LAST, (+ ((((vt0.c0))>=((vt1.c0)))))  NULLS FIRST, (((((((((vt1.c0 IN ('q1!9\r', vt0.c0)))AND(0X39dada60)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)==(vt1.c0)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0)/(vt1.c0)))))  NULLS LAST, (+ ((((vt0.c0))>=((vt1.c0)))))  NULLS FIRST, (((((((((vt1.c0 IN ('q1!9\r', vt0.c0)))AND(0x39dada60)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0)==(vt1.c0)) IN ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt1.c0)/(vt1.c0)))))  NULLS LAST, (+ ((((vt0.c0))>=((vt1.c0)))))  NULLS FIRST, (((((((((vt1.c0 IN ('q1!9\r', vt0.c0)))AND(0X39dada60)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((vt0.c0 IN (vt0.c0)) AS INTEGER));
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 WHERE (LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM vt0 WHERE (LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)AND(0.6165729955567402)) COLLATE RTRIM) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN ((((((((0.4452597611090462)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) THEN ((0xffffffffcab4fb51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN LIKELIHOOD(vt1.c0, 0.7363814446617468) ELSE (- (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(0.6165729955567402)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN ((((((((0.4452597611090462)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) THEN ((0xffffffffcab4fb51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN LIKELIHOOD(vt1.c0, 0.7363814446617468) ELSE (- (vt1.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)AND(0.6165729955567402)) COLLATE RTRIM) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN ((((((((0.4452597611090462)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) THEN ((0xffffffffcab4fb51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN LIKELIHOOD(vt1.c0, 0.7363814446617468) ELSE (- (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(0.6165729955567402)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN ((((((((0.4452597611090462)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) THEN ((0xffffffffcab4fb51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN LIKELIHOOD(vt1.c0, 0.7363814446617468) ELSE (- (vt1.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)AND(0.6165729955567402)) COLLATE RTRIM) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN ((((((((0.4452597611090462)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) THEN ((0xffffffffcab4fb51) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN LIKELIHOOD(vt1.c0, 0.7363814446617468) ELSE (- (vt1.c0)) END;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE((vt1.c0 IN ()), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE((vt1.c0 IN ()), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE((vt1.c0 IN ()), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE((vt1.c0 IN ()), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE((vt1.c0 IN ()), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS TEXT)) ORDER BY x'e6cd'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY x'e6cd'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS TEXT)) ORDER BY x'e6cd'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY x'e6cd'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS TEXT)) ORDER BY x'e6cd'  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (TRIM((((('')AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((('')AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM((((('')AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((('')AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM((((('')AND(vt0.c0)))OR(vt0.c0))));
SELECT * FROM vt1, vt0 WHERE ('	徬V' COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('	徬V' COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('	徬V' COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('	徬V' COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('	徬V' COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY (((((vt1.c0))>((vt1.c0)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-2060780270' ELSE vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '265569002' END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))>((vt1.c0)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-2060780270' ELSE vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '265569002' END)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY (((((vt1.c0))>((vt1.c0)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-2060780270' ELSE vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '265569002' END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))>((vt1.c0)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-2060780270' ELSE vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '265569002' END)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY (((((vt1.c0))>((vt1.c0)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-2060780270' ELSE vt1.c0 END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '265569002' END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt1.c0)%(vt0.c0)))) WHERE (((vt1.c0)>>(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>>(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt1.c0)%(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt1.c0)%(vt0.c0)))) WHERE (((vt1.c0)>>(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>>(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt1.c0)%(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt1.c0)%(vt0.c0)))) WHERE (((vt1.c0)>>(vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (((((((((((-0.0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-0.0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((-0.0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-0.0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((-0.0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT * FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)!=(vt1.c0)) ELSE ((vt1.c0)|(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)!=(vt1.c0)) ELSE ((vt1.c0)|(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)!=(vt1.c0)) ELSE ((vt1.c0)|(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)!=(vt1.c0)) ELSE ((vt1.c0)|(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)!=(vt1.c0)) ELSE ((vt1.c0)|(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('誨' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('誨' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('誨' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('誨' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST('誨' AS TEXT));
SELECT * FROM vt1 WHERE (x'') ORDER BY (- ((~ (vt1.c0)))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'54db' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY (- ((~ (vt1.c0)))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'54db' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ASC);
SELECT * FROM vt1 WHERE (x'') ORDER BY (- ((~ (vt1.c0)))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'54db' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY (- ((~ (vt1.c0)))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'54db' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ASC);
SELECT * FROM vt1 WHERE (x'') ORDER BY (- ((~ (vt1.c0)))) DESC  NULLS LAST, (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN x'54db' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))=((vt1.c0, ((vt0.c0)<(vt1.c0)), ((vt0.c0)+(vt0.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))=((vt1.c0, ((vt0.c0)<(vt1.c0)), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))=((vt1.c0, ((vt0.c0)<(vt1.c0)), ((vt0.c0)+(vt0.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))=((vt1.c0, ((vt0.c0)<(vt1.c0)), ((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt1.c0)<<(vt0.c0))))=((vt1.c0, ((vt0.c0)<(vt1.c0)), ((vt0.c0)+(vt0.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) ISNULL) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) ELSE ((vt1.c0) IS TRUE) END);
SELECT ALL * FROM vt1 WHERE ((((((((((+ (vt1.c0)))AND((~ (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(((vt1.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt1.c0)))AND((~ (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(((vt1.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((+ (vt1.c0)))AND((~ (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(((vt1.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt1.c0)))AND((~ (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(((vt1.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((+ (vt1.c0)))AND((~ (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))OR(((vt1.c0)+(vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((LIKELY(DISTINCT vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((LIKELY(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((LIKELY(DISTINCT vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((LIKELY(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((LIKELY(DISTINCT vt1.c0)))));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (JULIANDAY('-1273541510', vt1.c0, vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (JULIANDAY('-1273541510', vt1.c0, vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (JULIANDAY('-1273541510', vt1.c0, vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (JULIANDAY('-1273541510', vt1.c0, vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (JULIANDAY('-1273541510', vt1.c0, vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))<(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))<(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))<(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))<(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c0)OR(vt0.c0)))<(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (((- (vt0.c0)))<>(CASE 0.7640184789810113  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<>(CASE 0.7640184789810113  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (((- (vt0.c0)))<>(CASE 0.7640184789810113  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<>(CASE 0.7640184789810113  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (((- (vt0.c0)))<>(CASE 0.7640184789810113  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)IS(vt0.c0)), 0.8641419068605966));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0)IS(vt0.c0)), 0.8641419068605966)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)IS(vt0.c0)), 0.8641419068605966));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0)IS(vt0.c0)), 0.8641419068605966)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)IS(vt0.c0)), 0.8641419068605966));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((0.01791573292846005)OR(vt0.c0)))AND(-6.23804224E8)))>=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((0.01791573292846005)OR(vt0.c0)))AND(-6.23804224E8)))>=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((0.01791573292846005)OR(vt0.c0)))AND(-6.23804224E8)))>=(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((0.01791573292846005)OR(vt0.c0)))AND(-6.23804224E8)))>=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((0.01791573292846005)OR(vt0.c0)))AND(-6.23804224E8)))>=(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY vt1.c0, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0, vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY vt1.c0, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0, vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY vt1.c0, vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((((CAST(vt0.c0 AS INTEGER))AND(((vt1.c0)>>(vt1.c0)))))OR((('-155824732')GLOB(vt1.c0)))))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt1.c0))))AND(((vt0.c0)-(1.027584544E9)))) WHERE (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))AND('!4f+Zg5')))AND(((vt0.c0)|(vt0.c0))))) ORDER BY ((((vt1.c0) NOTNULL))OR(((vt1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))AND('!4f+Zg5')))AND(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((((CAST(vt0.c0 AS INTEGER))AND(((vt1.c0)>>(vt1.c0)))))OR((('-155824732')GLOB(vt1.c0)))))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt1.c0))))AND(((vt0.c0)-(1.027584544E9)))) ORDER BY ((((vt1.c0) NOTNULL))OR(((vt1.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((((CAST(vt0.c0 AS INTEGER))AND(((vt1.c0)>>(vt1.c0)))))OR((('-155824732')GLOB(vt1.c0)))))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt1.c0))))AND(((vt0.c0)-(1.027584544E9)))) WHERE (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))AND('!4f+Zg5')))AND(((vt0.c0)|(vt0.c0))))) ORDER BY ((((vt1.c0) NOTNULL))OR(((vt1.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))AND('!4f+Zg5')))AND(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((((CAST(vt0.c0 AS INTEGER))AND(((vt1.c0)>>(vt1.c0)))))OR((('-155824732')GLOB(vt1.c0)))))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt1.c0))))AND(((vt0.c0)-(1.027584544E9)))) ORDER BY ((((vt1.c0) NOTNULL))OR(((vt1.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((((CAST(vt0.c0 AS INTEGER))AND(((vt1.c0)>>(vt1.c0)))))OR((('-155824732')GLOB(vt1.c0)))))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))AND(QUOTE(vt1.c0))))AND(((vt0.c0)-(1.027584544E9)))) WHERE (((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))AND('!4f+Zg5')))AND(((vt0.c0)|(vt0.c0))))) ORDER BY ((((vt1.c0) NOTNULL))OR(((vt1.c0) ISNULL)))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (NULLIF((vt1.c0 IN ()), vt0.c0)) ORDER BY (((~ (vt1.c0)))AND(LOWER(DISTINCT vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt1.c0 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.c0)))AND(LOWER(DISTINCT vt1.c0)))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (NULLIF((vt1.c0 IN ()), vt0.c0)) ORDER BY (((~ (vt1.c0)))AND(LOWER(DISTINCT vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt1.c0 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.c0)))AND(LOWER(DISTINCT vt1.c0)))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (NULLIF((vt1.c0 IN ()), vt0.c0)) ORDER BY (((~ (vt1.c0)))AND(LOWER(DISTINCT vt1.c0)))  NULLS FIRST;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<=(vt1.c0)))==((NOT (vt1.c0))))) ORDER BY 0.8834024652392576 DESC  NULLS LAST, CAST(((vt0.c0)+(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0)))==((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.8834024652392576 DESC  NULLS LAST, CAST(((vt0.c0)+(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<=(vt1.c0)))==((NOT (vt1.c0))))) ORDER BY 0.8834024652392576 DESC  NULLS LAST, CAST(((vt0.c0)+(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0)))==((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.8834024652392576 DESC  NULLS LAST, CAST(((vt0.c0)+(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<=(vt1.c0)))==((NOT (vt1.c0))))) ORDER BY 0.8834024652392576 DESC  NULLS LAST, CAST(((vt0.c0)+(vt0.c0)) AS TEXT);
SELECT COUNT(*) FROM vt0 WHERE ((- (''))) ORDER BY 0.6597592470356467;
SELECT SUM(count) FROM (SELECT ALL (((- (''))) IS TRUE)  as count FROM vt0 ORDER BY 0.6597592470356467);
SELECT COUNT(*) FROM vt0 WHERE ((- (''))) ORDER BY 0.6597592470356467;
SELECT SUM(count) FROM (SELECT ALL (((- (''))) IS TRUE)  as count FROM vt0 ORDER BY 0.6597592470356467);
SELECT COUNT(*) FROM vt0 WHERE ((- (''))) ORDER BY 0.6597592470356467;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.03825497016862611)) AS INTEGER)) ORDER BY (vt0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.03825497016862611)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.03825497016862611)) AS INTEGER)) ORDER BY (vt0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.03825497016862611)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.03825497016862611)) AS INTEGER)) ORDER BY (vt0.c0 COLLATE NOCASE IN ());
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)-(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 THEN vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)-(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 THEN vt1.c0 END DESC);
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)-(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 THEN vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)-(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 THEN vt1.c0 END DESC);
SELECT ALL * FROM vt1 WHERE (NULL) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)-(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN vt1.c0 THEN vt1.c0 END DESC;
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (0xec8e6f0) AND (vt1.c0 COLLATE NOCASE))) ORDER BY json_object(((vt1.c0)AND(vt1.c0)), ((vt1.c0)*(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (0xec8e6f0) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY json_object(((vt1.c0)AND(vt1.c0)), ((vt1.c0)*(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (0xec8e6f0) AND (vt1.c0 COLLATE NOCASE))) ORDER BY json_object(((vt1.c0)AND(vt1.c0)), ((vt1.c0)*(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (0xec8e6f0) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY json_object(((vt1.c0)AND(vt1.c0)), ((vt1.c0)*(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(0.1995949353930867 AS INTEGER) END) ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (vt0.c0 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(0.1995949353930867 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (vt0.c0 IN ()) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(0.1995949353930867 AS INTEGER) END) ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (vt0.c0 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(0.1995949353930867 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (vt0.c0 IN ()) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0)/(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE CAST(0.1995949353930867 AS INTEGER) END) ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (vt0.c0 IN ()) COLLATE NOCASE ASC;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (1282775382) ORDER BY ((vt1.c0 IN (vt1.c0, vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1282775382) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN (vt1.c0, vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (1282775382) ORDER BY ((vt1.c0 IN (vt1.c0, vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1282775382) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN (vt1.c0, vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (1282775382) ORDER BY ((vt1.c0 IN (vt1.c0, vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)<>(vt0.c0)))*(LIKELIHOOD(DISTINCT vt1.c0, 0.17413065965190977)))) ORDER BY ((((CHANGES())AND(((vt0.c0) IS TRUE))))AND(UPPER(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c0)))*(LIKELIHOOD(DISTINCT vt1.c0, 0.17413065965190977)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((CHANGES())AND(((vt0.c0) IS TRUE))))AND(UPPER(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)<>(vt0.c0)))*(LIKELIHOOD(DISTINCT vt1.c0, 0.17413065965190977)))) ORDER BY ((((CHANGES())AND(((vt0.c0) IS TRUE))))AND(UPPER(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c0)))*(LIKELIHOOD(DISTINCT vt1.c0, 0.17413065965190977)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((CHANGES())AND(((vt0.c0) IS TRUE))))AND(UPPER(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)<>(vt0.c0)))*(LIKELIHOOD(DISTINCT vt1.c0, 0.17413065965190977)))) ORDER BY ((((CHANGES())AND(((vt0.c0) IS TRUE))))AND(UPPER(DISTINCT vt1.c0)));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)%(-155824732)) IN (((vt1.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(-155824732)) IN (((vt1.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)%(-155824732)) IN (((vt1.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(-155824732)) IN (((vt1.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)%(-155824732)) IN (((vt1.c0)LIKE(vt0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) WHERE (vt0.c0) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) WHERE (vt0.c0) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((~ (vt0.c0)))AND(((vt1.c0)LIKE(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) WHERE (vt0.c0) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS FALSE) ASC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL))+(0X425bb263 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL))+(0X425bb263 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL))+(0X425bb263 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL))+(0X425bb263 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL))+(0X425bb263 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY (((x'7546', (~ (vt1.c0)), CAST(vt1.c0 AS BLOB)))>=((x'', vt1.c0, ((vt1.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((x'7546', (~ (vt1.c0)), CAST(vt1.c0 AS BLOB)))>=((x'', vt1.c0, ((vt1.c0)+(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY (((x'7546', (~ (vt1.c0)), CAST(vt1.c0 AS BLOB)))>=((x'', vt1.c0, ((vt1.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY (((x'7546', (~ (vt1.c0)), CAST(vt1.c0 AS BLOB)))>=((x'', vt1.c0, ((vt1.c0)+(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS INTEGER)) ORDER BY (((x'7546', (~ (vt1.c0)), CAST(vt1.c0 AS BLOB)))>=((x'', vt1.c0, ((vt1.c0)+(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt1.c0) IS FALSE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) IS FALSE)) IS FALSE));
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt1.c0) IS FALSE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) IS FALSE)) IS FALSE));
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt1.c0) IS FALSE)) IS FALSE);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) ISNULL)) ORDER BY ((json_extract(vt0.c0, vt0.c0))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((json_extract(vt0.c0, vt0.c0))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((NULL) ISNULL)) ORDER BY ((json_extract(vt0.c0, vt0.c0))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((json_extract(vt0.c0, vt0.c0))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT * FROM vt1, vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))=((((vt1.c0)*(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB)))==((((vt1.c0)*(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))=((((vt1.c0)*(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB)))==((((vt1.c0)*(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))=((((vt1.c0)*(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY vt1.c0 DESC, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 DESC, vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY vt1.c0 DESC, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0 DESC, vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY vt1.c0 DESC, vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ('now䏲w');
SELECT SUM(count) FROM (SELECT ALL (('now䏲w') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('now䏲w');
SELECT SUM(count) FROM (SELECT ALL (('now䏲w') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('now䏲w');
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT NULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT NULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT NULL)) NOT NULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((GLOB(vt1.c0, vt0.c0))) AND ((((vt0.c0)LIKE(x''))))) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN (('0.14105859634240292')) AND ((((vt1.c0) NOTNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((GLOB(vt1.c0, vt0.c0))) AND ((((vt0.c0)LIKE(x''))))) ORDER BY (((vt0.c0)) BETWEEN (('0.14105859634240292')) AND ((((vt1.c0) NOTNULL)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((GLOB(vt1.c0, vt0.c0))) AND ((((vt0.c0)LIKE(x''))))) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN (('0.14105859634240292')) AND ((((vt1.c0) NOTNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((GLOB(vt1.c0, vt0.c0))) AND ((((vt0.c0)LIKE(x''))))) ORDER BY (((vt0.c0)) BETWEEN (('0.14105859634240292')) AND ((((vt1.c0) NOTNULL)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((GLOB(vt1.c0, vt0.c0))) AND ((((vt0.c0)LIKE(x''))))) WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN (('0.14105859634240292')) AND ((((vt1.c0) NOTNULL)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END)GLOB((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-623804224'))) AS NUMERIC)  NULLS LAST, CAST(((vt1.c0)|(vt1.c0)) AS INTEGER) ASC, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt1.c0)<=(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END)GLOB((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-623804224'))) AS NUMERIC)  NULLS LAST, CAST(((vt1.c0)|(vt1.c0)) AS INTEGER) ASC, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt1.c0)<=(vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END)GLOB((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-623804224'))) AS NUMERIC)  NULLS LAST, CAST(((vt1.c0)|(vt1.c0)) AS INTEGER) ASC, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt1.c0)<=(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END)GLOB((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-623804224'))) AS NUMERIC)  NULLS LAST, CAST(((vt1.c0)|(vt1.c0)) AS INTEGER) ASC, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt1.c0)<=(vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END)GLOB((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt1.c0)) AND (('-623804224'))) AS NUMERIC)  NULLS LAST, CAST(((vt1.c0)|(vt1.c0)) AS INTEGER) ASC, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((vt1.c0)<=(vt1.c0)))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(LOWER(vt1.c0) AS TEXT)) ORDER BY 'K~ekO\nk>L' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(vt1.c0) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY 'K~ekO\nk>L' ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(LOWER(vt1.c0) AS TEXT)) ORDER BY 'K~ekO\nk>L' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(vt1.c0) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY 'K~ekO\nk>L' ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(LOWER(vt1.c0) AS TEXT)) ORDER BY 'K~ekO\nk>L' ASC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((vt0.c0)))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST, (~ (0.9924115903953679)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST, (~ (0.9924115903953679)) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((vt0.c0)))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST, (~ (0.9924115903953679)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST, (~ (0.9924115903953679)) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((vt0.c0)))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE))  NULLS FIRST, (~ (0.9924115903953679)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS TEXT))<<(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS TEXT))<<(((vt1.c0) NOT NULL))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS TEXT))<<(((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS TEXT))<<(((vt1.c0) NOT NULL))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS TEXT))<<(((vt1.c0) NOT NULL)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (vt0.c0 IN ())))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c0)))), CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)GLOB(vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.542128352855894) THEN vt0.c0 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c0)))), CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)GLOB(vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.542128352855894) THEN vt0.c0 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (vt0.c0 IN ())))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c0)))), CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)GLOB(vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.542128352855894) THEN vt0.c0 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c0)))), CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)GLOB(vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.542128352855894) THEN vt0.c0 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (vt0.c0 IN ())))) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((- (vt0.c0)))), CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)GLOB(vt0.c0)) WHEN LIKELIHOOD(vt0.c0, 0.542128352855894) THEN vt0.c0 COLLATE NOCASE END ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))%(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c0 THEN (- (vt0.c0)) ELSE ((vt0.c0)+(vt1.c0)) END) ORDER BY (((vt0.c0, vt1.c0 COLLATE BINARY, ((vt1.c0)||(vt1.c0))))<(((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0, 'bFfZ', '-2073540443'))!=((vt0.c0, vt1.c0, vt1.c0))), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, vt1.c0, ((((vt1.c0) IS FALSE))GLOB(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (- (vt0.c0)) ELSE ((vt0.c0)+(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0 COLLATE BINARY, ((vt1.c0)||(vt1.c0))))<(((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0, 'bFfZ', '-2073540443'))<>((vt0.c0, vt1.c0, vt1.c0))), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, vt1.c0, ((((vt1.c0) IS FALSE))GLOB(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c0 THEN (- (vt0.c0)) ELSE ((vt0.c0)+(vt1.c0)) END) ORDER BY (((vt0.c0, vt1.c0 COLLATE BINARY, ((vt1.c0)||(vt1.c0))))<(((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0, 'bFfZ', '-2073540443'))!=((vt0.c0, vt1.c0, vt1.c0))), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, vt1.c0, ((((vt1.c0) IS FALSE))GLOB(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (- (vt0.c0)) ELSE ((vt0.c0)+(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0 COLLATE BINARY, ((vt1.c0)||(vt1.c0))))<(((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0, 'bFfZ', '-2073540443'))<>((vt0.c0, vt1.c0, vt1.c0))), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, vt1.c0, ((((vt1.c0) IS FALSE))GLOB(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c0 THEN (- (vt0.c0)) ELSE ((vt0.c0)+(vt1.c0)) END) ORDER BY (((vt0.c0, vt1.c0 COLLATE BINARY, ((vt1.c0)||(vt1.c0))))<(((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0, 'bFfZ', '-2073540443'))!=((vt0.c0, vt1.c0, vt1.c0))), ((vt0.c0) NOTNULL)))) DESC  NULLS LAST, vt1.c0, ((((vt1.c0) IS FALSE))GLOB(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) ASC;
SELECT * FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ())) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ())) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ())) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt1.c0 IN ())  WHEN ((vt0.c0)||(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE (vt1.c0 IN ())  WHEN ((vt0.c0)||(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt1.c0 IN ())  WHEN ((vt0.c0)||(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE (vt1.c0 IN ())  WHEN ((vt0.c0)||(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE (vt1.c0 IN ())  WHEN ((vt0.c0)||(vt1.c0)) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) WHEN (- (vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('?+d4<M');
SELECT SUM(count) FROM (SELECT ALL (('?+d4<M') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('?+d4<M');
SELECT SUM(count) FROM (SELECT ALL (('?+d4<M') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('?+d4<M');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((NOT (vt0.c0)))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((NOT (vt0.c0)))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((NOT (vt0.c0)))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((+ (vt1.c0))));
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY ((vt1.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0)+(vt1.c0)) AS TEXT), TYPEOF(DISTINCT (NOT (vt1.c0))) DESC  NULLS FIRST, ((vt1.c0)+(((vt1.c0)%(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)+(vt1.c0)) AS TEXT), TYPEOF(DISTINCT (NOT (vt1.c0))) DESC  NULLS FIRST, ((vt1.c0)+(((vt1.c0)%(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0)+(vt1.c0)) AS TEXT), TYPEOF(DISTINCT (NOT (vt1.c0))) DESC  NULLS FIRST, ((vt1.c0)+(((vt1.c0)%(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)+(vt1.c0)) AS TEXT), TYPEOF(DISTINCT (NOT (vt1.c0))) DESC  NULLS FIRST, ((vt1.c0)+(((vt1.c0)%(vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0)+(vt1.c0)) AS TEXT), TYPEOF(DISTINCT (NOT (vt1.c0))) DESC  NULLS FIRST, ((vt1.c0)+(((vt1.c0)%(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((x'') ISNULL)) ORDER BY CAST(TRIM(vt1.c0) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(TRIM(vt1.c0) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((x'') ISNULL)) ORDER BY CAST(TRIM(vt1.c0) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(TRIM(vt1.c0) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((x'') ISNULL)) ORDER BY CAST(TRIM(vt1.c0) AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)/(vt0.c0)))|(HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(vt0.c0)))|(HEX(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)/(vt0.c0)))|(HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(vt0.c0)))|(HEX(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)/(vt0.c0)))|(HEX(vt1.c0))));
SELECT ALL * FROM vt0, vt1 WHERE ('-894108847') ORDER BY '-1528165511'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-894108847') IS TRUE)  as count FROM vt0, vt1 ORDER BY '-1528165511'  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ('-894108847') ORDER BY '-1528165511'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-894108847') IS TRUE)  as count FROM vt0, vt1 ORDER BY '-1528165511'  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ('-894108847') ORDER BY '-1528165511'  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(vt1.c0 COLLATE NOCASE)) ORDER BY ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) NOTNULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(vt1.c0 COLLATE NOCASE)) ORDER BY ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) NOTNULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(vt1.c0 COLLATE NOCASE)) ORDER BY ((vt0.c0) NOTNULL);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) ISNULL) DESC, LENGTH((((vt1.c0)) BETWEEN ((x'e121')) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) ISNULL) DESC, LENGTH((((vt1.c0)) BETWEEN ((x'e121')) AND ((vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) ISNULL) DESC, LENGTH((((vt1.c0)) BETWEEN ((x'e121')) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) ISNULL) DESC, LENGTH((((vt1.c0)) BETWEEN ((x'e121')) AND ((vt1.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)>=(vt1.c0)) WHERE ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY CAST((vt0.c0 IN (vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)>=(vt1.c0)) ORDER BY CAST((vt0.c0 IN (vt1.c0)) AS TEXT));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)>=(vt1.c0)) WHERE ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY CAST((vt0.c0 IN (vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)>=(vt1.c0)) ORDER BY CAST((vt0.c0 IN (vt1.c0)) AS TEXT));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON ((vt1.c0)>=(vt1.c0)) WHERE ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY CAST((vt0.c0 IN (vt1.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)<(vt1.c0)), vt1.c0))>((((vt1.c0)|(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)<(vt1.c0)), vt1.c0))>((((vt1.c0)|(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)<(vt1.c0)), vt1.c0))>((((vt1.c0)|(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)<(vt1.c0)), vt1.c0))>((((vt1.c0)|(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)<(vt1.c0)), vt1.c0))>((((vt1.c0)|(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOTNULL)))));
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))))OR(CAST(-8.60666894E8 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)>=(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))))OR(CAST(-8.60666894E8 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))))OR(CAST(-8.60666894E8 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)>=(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))))OR(CAST(-8.60666894E8 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))AND(((vt1.c0)>>(vt1.c0)))))OR(CAST(-8.60666894E8 AS TEXT))));
SELECT ALL * FROM vt1 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (vt1.c0)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))IS(((vt1.c0)&(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((vt0.c0 IN ())) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((vt0.c0 IN ())) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((vt0.c0 IN ())) ORDER BY vt0.c0 ASC;
SELECT * FROM vt0 WHERE (CASE WHEN json_array_length(vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN json_valid(vt0.c0) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_array_length(vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN json_valid(vt0.c0) ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN json_array_length(vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN json_valid(vt0.c0) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_array_length(vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN json_valid(vt0.c0) ELSE x'' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE x''  WHEN vt0.c0 THEN vt1.c0 END)<=(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN vt0.c0 THEN vt1.c0 END)<=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE x''  WHEN vt0.c0 THEN vt1.c0 END)<=(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN vt0.c0 THEN vt1.c0 END)<=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE x''  WHEN vt0.c0 THEN vt1.c0 END)<=(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((x'') IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((x'') IS TRUE));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((x'') IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((x'') IS TRUE));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((x'') IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN (CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN (CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN (CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, vt0.c0 ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))LIKE((((vt0.c0))<=((vt1.c0)))))) ORDER BY ((((('-9223372036854775808' IN ()))OR(((((0.014000465334456869)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))LIKE((((vt0.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((('-9223372036854775808' IN ()))OR(((((0.014000465334456869)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt1.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))LIKE((((vt0.c0))<=((vt1.c0)))))) ORDER BY ((((('-9223372036854775808' IN ()))OR(((((0.014000465334456869)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt1.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))LIKE((((vt0.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((('-9223372036854775808' IN ()))OR(((((0.014000465334456869)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt1.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT))LIKE((((vt0.c0))<=((vt1.c0)))))) ORDER BY ((((('-9223372036854775808' IN ()))OR(((((0.014000465334456869)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt1.c0) NOT NULL))) DESC;
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL))) AND ((0.09781251401241076, (+ (vt0.c0)), (- (vt0.c0)))))) ORDER BY (NOT (UNLIKELY(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL))) AND ((0.09781251401241076, (+ (vt0.c0)), (- (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (UNLIKELY(vt1.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL))) AND ((0.09781251401241076, (+ (vt0.c0)), (- (vt0.c0)))))) ORDER BY (NOT (UNLIKELY(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL))) AND ((0.09781251401241076, (+ (vt0.c0)), (- (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (UNLIKELY(vt1.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL))) AND ((0.09781251401241076, (+ (vt0.c0)), (- (vt0.c0)))))) ORDER BY (NOT (UNLIKELY(vt1.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (vt0.c0)))==((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))==((NOT (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (vt0.c0)))==((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))==((NOT (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (vt0.c0)))==((NOT (vt0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) ORDER BY (((((vt0.c0))>=((vt0.c0))))=(LIKELIHOOD(DISTINCT vt0.c0, 0.8537872775670723)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c0))))=(LIKELIHOOD(DISTINCT vt0.c0, 0.8537872775670723)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) ORDER BY (((((vt0.c0))>=((vt0.c0))))=(LIKELIHOOD(DISTINCT vt0.c0, 0.8537872775670723)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c0))))=(LIKELIHOOD(DISTINCT vt0.c0, 0.8537872775670723)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) ORDER BY (((((vt0.c0))>=((vt0.c0))))=(LIKELIHOOD(DISTINCT vt0.c0, 0.8537872775670723)))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)/(vt0.c0)))))  NULLS FIRST, vt0.c0;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (LAST_INSERT_ROWID())) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (~ (LAST_INSERT_ROWID())));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (LAST_INSERT_ROWID())) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (~ (LAST_INSERT_ROWID())));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (LAST_INSERT_ROWID())) WHERE (vt1.c0);
SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) ORDER BY ((TOTAL_CHANGES()) NOT BETWEEN (((0.5314359309792135)<=(vt1.c0))) AND (UPPER(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((TOTAL_CHANGES()) NOT BETWEEN (((0.5314359309792135)<=(vt1.c0))) AND (UPPER(vt1.c0))));
SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) ORDER BY ((TOTAL_CHANGES()) NOT BETWEEN (((0.5314359309792135)<=(vt1.c0))) AND (UPPER(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((TOTAL_CHANGES()) NOT BETWEEN (((0.5314359309792135)<=(vt1.c0))) AND (UPPER(vt1.c0))));
SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) ORDER BY ((TOTAL_CHANGES()) NOT BETWEEN (((0.5314359309792135)<=(vt1.c0))) AND (UPPER(vt1.c0)));
SELECT ALL * FROM vt0, vt1 WHERE ((((('-894108847')%(x''))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0))) ORDER BY ((HEX(DISTINCT vt1.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (0.3701228595812043))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-894108847')%(x''))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((HEX(DISTINCT vt1.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (0.3701228595812043))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((('-894108847')%(x''))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0))) ORDER BY ((HEX(DISTINCT vt1.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (0.3701228595812043))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-894108847')%(x''))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((HEX(DISTINCT vt1.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (0.3701228595812043))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((('-894108847')%(x''))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0))) ORDER BY ((HEX(DISTINCT vt1.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (0.3701228595812043))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY (+ (CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (+ (CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY (+ (CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (+ (CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY (+ (CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT * FROM vt1 INNER JOIN vt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CHAR(vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0) END WHERE (-110538335 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((-110538335 COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CHAR(vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0) END);
SELECT * FROM vt1 INNER JOIN vt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CHAR(vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0) END WHERE (-110538335 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((-110538335 COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CHAR(vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0) END);
SELECT * FROM vt1 INNER JOIN vt0 ON CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CHAR(vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0) END WHERE (-110538335 COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CAST(((0.6746895738268831) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((0.6746895738268831) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((0.6746895738268831) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((0.6746895738268831) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((0.6746895738268831) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN ('1244457994') AND (x'c5c7'))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN ('1244457994') AND (x'c5c7'))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN NULL END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN ('1244457994') AND (x'c5c7'))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN ('1244457994') AND (x'c5c7'))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN NULL END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN ('1244457994') AND (x'c5c7'))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN NULL END)));
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((TIME(vt1.c0, vt1.c0, vt1.c0))AND(((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((TIME(vt1.c0, vt1.c0, vt1.c0))AND(((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((TIME(vt1.c0, vt1.c0, vt1.c0))AND(((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((TIME(vt1.c0, vt1.c0, vt1.c0))AND(((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((TIME(vt1.c0, vt1.c0, vt1.c0))AND(((vt1.c0)IS NOT(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (NULL);
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (vt0.c0)));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((NULL)AND(0.20590548988404567 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY vt1.c0  NULLS LAST, ((NULL) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(0.20590548988404567 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt1.c0  NULLS LAST, ((NULL) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((NULL)AND(0.20590548988404567 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY vt1.c0  NULLS LAST, ((NULL) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(0.20590548988404567 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt1.c0  NULLS LAST, ((NULL) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (((((NULL)AND(0.20590548988404567 COLLATE NOCASE)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END))) ORDER BY vt1.c0  NULLS LAST, ((NULL) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((0.8545743523503146 COLLATE RTRIM)AND(vt0.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0)OR(vt0.c0))))>((SQLITE_COMPILEOPTION_USED(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8545743523503146 COLLATE RTRIM)AND(vt0.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0))))>((SQLITE_COMPILEOPTION_USED(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((0.8545743523503146 COLLATE RTRIM)AND(vt0.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0)OR(vt0.c0))))>((SQLITE_COMPILEOPTION_USED(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.8545743523503146 COLLATE RTRIM)AND(vt0.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c0))))>((SQLITE_COMPILEOPTION_USED(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((0.8545743523503146 COLLATE RTRIM)AND(vt0.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0)OR(vt0.c0))))>((SQLITE_COMPILEOPTION_USED(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((x'') ISNULL)) BETWEEN (-4.23663406E8 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY MAX(((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST, vt0.c0  NULLS FIRST, (+ (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') ISNULL)) BETWEEN (-4.23663406E8 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY MAX(((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST, vt0.c0  NULLS FIRST, (+ (NULL))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'') ISNULL)) BETWEEN (-4.23663406E8 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY MAX(((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST, vt0.c0  NULLS FIRST, (+ (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') ISNULL)) BETWEEN (-4.23663406E8 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY MAX(((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST, vt0.c0  NULLS FIRST, (+ (NULL))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'') ISNULL)) BETWEEN (-4.23663406E8 COLLATE BINARY) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY MAX(((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST, vt0.c0  NULLS FIRST, (+ (NULL))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN LIKELIHOOD(vt0.c0, 0.326942424813933) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN LIKELIHOOD(vt0.c0, 0.326942424813933) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN LIKELIHOOD(vt0.c0, 0.326942424813933) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN LIKELIHOOD(vt0.c0, 0.326942424813933) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN LIKELIHOOD(vt0.c0, 0.326942424813933) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY CASE WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY CASE WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY CASE WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY CASE WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY CASE WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1821648671 ELSE vt0.c0 END)IS(((vt0.c0)IS(vt0.c0))))) ORDER BY ((vt0.c0)<=(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1821648671 ELSE vt0.c0 END)IS(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1821648671 ELSE vt0.c0 END)IS(((vt0.c0)IS(vt0.c0))))) ORDER BY ((vt0.c0)<=(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1821648671 ELSE vt0.c0 END)IS(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1821648671 ELSE vt0.c0 END)IS(((vt0.c0)IS(vt0.c0))))) ORDER BY ((vt0.c0)<=(vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS REAL)))) ORDER BY -1220385802;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY -1220385802);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS REAL)))) ORDER BY -1220385802;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY -1220385802);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((0.9613897521647158 IN (vt0.c0)))))AND(json_array_length(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((0.9613897521647158 IN (vt0.c0)))))AND(json_array_length(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((0.9613897521647158 IN (vt0.c0)))))AND(json_array_length(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((0.9613897521647158 IN (vt0.c0)))))AND(json_array_length(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) NOT NULL));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))<(vt0.c0 COLLATE NOCASE)) WHERE (((((vt0.c0)-(vt1.c0)))-(vt1.c0 COLLATE RTRIM))) ORDER BY ((NULL)IS NOT(((vt1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt1.c0)))-(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))<(vt0.c0 COLLATE NOCASE)) ORDER BY ((NULL)IS NOT(((vt1.c0) IS FALSE))) ASC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))<(vt0.c0 COLLATE NOCASE)) WHERE (((((vt0.c0)-(vt1.c0)))-(vt1.c0 COLLATE RTRIM))) ORDER BY ((NULL)IS NOT(((vt1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt1.c0)))-(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))<(vt0.c0 COLLATE NOCASE)) ORDER BY ((NULL)IS NOT(((vt1.c0) IS FALSE))) ASC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))<(vt0.c0 COLLATE NOCASE)) WHERE (((((vt0.c0)-(vt1.c0)))-(vt1.c0 COLLATE RTRIM))) ORDER BY ((NULL)IS NOT(((vt1.c0) IS FALSE))) ASC;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (- (((NULL)*(vt0.c0)))) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))==((CASE WHEN vt0.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))=((CASE WHEN vt0.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (- (((NULL)*(vt0.c0)))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (- (((NULL)*(vt0.c0)))) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))==((CASE WHEN vt0.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))=((CASE WHEN vt0.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (- (((NULL)*(vt0.c0)))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (- (((NULL)*(vt0.c0)))) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))==((CASE WHEN vt0.c0 THEN vt1.c0 END))));
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((((('^6]fg*(,')AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((((('^6]fg*(,')AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((((('^6]fg*(,')AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((((('^6]fg*(,')AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((((('^6]fg*(,')AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)&(vt1.c0)) IN ())) ORDER BY LIKELIHOOD(x'da12', 0.0884340093865923) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(x'da12', 0.0884340093865923) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)&(vt1.c0)) IN ())) ORDER BY LIKELIHOOD(x'da12', 0.0884340093865923) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)&(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(x'da12', 0.0884340093865923) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)&(vt1.c0)) IN ())) ORDER BY LIKELIHOOD(x'da12', 0.0884340093865923) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((- (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((- (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((- (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)|(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)GLOB(vt0.c0)))<<(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY, ((vt1.c0)GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))<<(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY, ((vt1.c0)GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)GLOB(vt0.c0)))<<(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY, ((vt1.c0)GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))<<(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY, ((vt1.c0)GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)GLOB(vt0.c0)))<<(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY, ((vt1.c0)GLOB(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (('-626199684')||(vt1.c0)) WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN (('-626199684')||(vt1.c0)) WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (('-626199684')||(vt1.c0)) WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN (('-626199684')||(vt1.c0)) WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (('-626199684')||(vt1.c0)) WHEN (vt1.c0 IN ()) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((0.5900817807789303) NOT BETWEEN (vt0.c0) AND (0.09424687081371919))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((0.5900817807789303) NOT BETWEEN (vt0.c0) AND (0.09424687081371919))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((0.5900817807789303) NOT BETWEEN (vt0.c0) AND (0.09424687081371919))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((0.5900817807789303) NOT BETWEEN (vt0.c0) AND (0.09424687081371919))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((0.5900817807789303) NOT BETWEEN (vt0.c0) AND (0.09424687081371919))) NOTNULL));
SELECT * FROM vt1, vt0 WHERE (CASE (NULL IN ())  WHEN (+ (vt1.c0)) THEN vt1.c0 END) ORDER BY UNICODE(LIKELIHOOD(vt0.c0, 0.5419448970521831)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN (+ (vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNICODE(LIKELIHOOD(vt0.c0, 0.5419448970521831)) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CASE (NULL IN ())  WHEN (+ (vt1.c0)) THEN vt1.c0 END) ORDER BY UNICODE(LIKELIHOOD(vt0.c0, 0.5419448970521831)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN (+ (vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNICODE(LIKELIHOOD(vt0.c0, 0.5419448970521831)) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CASE (NULL IN ())  WHEN (+ (vt1.c0)) THEN vt1.c0 END) ORDER BY UNICODE(LIKELIHOOD(vt0.c0, 0.5419448970521831)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))) ORDER BY (vt1.c0 COLLATE RTRIM IN ((((vt0.c0, 'nA\)^_JD|', vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 COLLATE RTRIM IN ((((vt0.c0, 'nA\)^_JD|', vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))) ORDER BY (vt1.c0 COLLATE RTRIM IN ((((vt0.c0, 'nA\)^_JD|', vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt1.c0 COLLATE RTRIM IN ((((vt0.c0, 'nA\)^_JD|', vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0 IN ())))) ORDER BY (vt1.c0 COLLATE RTRIM IN ((((vt0.c0, 'nA\)^_JD|', vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT)) IS FALSE)) ORDER BY ((((((((((((((vt1.c0)OR('0.8407095767059732')))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((((vt1.c0)OR('0.8407095767059732')))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT)) IS FALSE)) ORDER BY ((((((((((((((vt1.c0)OR('0.8407095767059732')))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((((vt1.c0)OR('0.8407095767059732')))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS TEXT)) IS FALSE)) ORDER BY ((((((((((((((vt1.c0)OR('0.8407095767059732')))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))) ISNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-1601512034') ORDER BY (('HB0d_f') ISNULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1601512034') IS TRUE)  as count FROM vt0, vt1 ORDER BY (('HB0d_f') ISNULL) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-1601512034') ORDER BY (('HB0d_f') ISNULL) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1601512034') IS TRUE)  as count FROM vt0, vt1 ORDER BY (('HB0d_f') ISNULL) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-1601512034') ORDER BY (('HB0d_f') ISNULL) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (CASE (vt1.c0 IN ())  WHEN NULL THEN CAST(vt0.c0 AS INTEGER) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN ())  WHEN NULL THEN CAST(vt0.c0 AS INTEGER) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE (vt1.c0 IN ())  WHEN NULL THEN CAST(vt0.c0 AS INTEGER) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN ())  WHEN NULL THEN CAST(vt0.c0 AS INTEGER) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE (vt1.c0 IN ())  WHEN NULL THEN CAST(vt0.c0 AS INTEGER) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS NOT(vt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt1.c0)!=(vt1.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS NOT(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt1.c0)<>(vt1.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS NOT(vt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt1.c0)!=(vt1.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS NOT(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt1.c0)<>(vt1.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS NOT(vt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (((vt1.c0)!=(vt1.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))) DESC;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (x'') ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE NOCASE, (((((~ (vt0.c0)))AND((+ (vt0.c0)))))OR(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE NOCASE, (((((~ (vt0.c0)))AND((+ (vt0.c0)))))OR(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (x'') ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE NOCASE, (((((~ (vt0.c0)))AND((+ (vt0.c0)))))OR(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE NOCASE, (((((~ (vt0.c0)))AND((+ (vt0.c0)))))OR(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (x'') ORDER BY ((vt0.c0)<(vt0.c0)) COLLATE NOCASE, (((((~ (vt0.c0)))AND((+ (vt0.c0)))))OR(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT * FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT * FROM vt0, vt1 WHERE ('');
SELECT COUNT(*) FROM vt0 WHERE ('*dqxi') ORDER BY ((TYPEOF(vt0.c0)) BETWEEN (((vt0.c0)/(NULL))) AND ((('') ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (('*dqxi') IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0)) BETWEEN (((vt0.c0)/(NULL))) AND ((('') ISNULL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ('*dqxi') ORDER BY ((TYPEOF(vt0.c0)) BETWEEN (((vt0.c0)/(NULL))) AND ((('') ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (('*dqxi') IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(vt0.c0)) BETWEEN (((vt0.c0)/(NULL))) AND ((('') ISNULL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ('*dqxi') ORDER BY ((TYPEOF(vt0.c0)) BETWEEN (((vt0.c0)/(NULL))) AND ((('') ISNULL))) DESC;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN CAST(vt1.c0 AS REAL) THEN (vt1.c0 IN ()) ELSE (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) END);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ('', vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (COALESCE(NULL, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ('', vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (COALESCE(NULL, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ('', vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (COALESCE(NULL, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ('', vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (COALESCE(NULL, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ('', vt0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (COALESCE(NULL, vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) NOTNULL))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) NOTNULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) NOTNULL))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) NOTNULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)))) AND ((((vt1.c0) NOTNULL))))) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((0.4487346806089989))==((vt0.c0))) COLLATE RTRIM) ORDER BY ((((((((UPPER(DISTINCT vt0.c0))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((0.4487346806089989))=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((((UPPER(DISTINCT vt0.c0))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((0.4487346806089989))==((vt0.c0))) COLLATE RTRIM) ORDER BY ((((((((UPPER(DISTINCT vt0.c0))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((0.4487346806089989))=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((((UPPER(DISTINCT vt0.c0))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((0.4487346806089989))==((vt0.c0))) COLLATE RTRIM) ORDER BY ((((((((UPPER(DISTINCT vt0.c0))OR(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (HEX(DISTINCT ((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (HEX(DISTINCT ((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (HEX(DISTINCT ((vt1.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT vt1.c0))>(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (CASE x''  WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0))>(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (CASE x''  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT vt1.c0))>(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (CASE x''  WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0))>(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (CASE x''  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT vt1.c0))>(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (CASE x''  WHEN vt1.c0 THEN vt1.c0 END));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c0)IS NOT('-632013576')) THEN TRIM(0.5656059420773288) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(-6.23804224E8)))OR(vt0.c0)))AND(vt0.c0)) END WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c0)IS NOT('-632013576')) THEN TRIM(0.5656059420773288) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(-6.23804224E8)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c0)IS NOT('-632013576')) THEN TRIM(0.5656059420773288) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(-6.23804224E8)))OR(vt0.c0)))AND(vt0.c0)) END WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c0)IS NOT('-632013576')) THEN TRIM(0.5656059420773288) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(-6.23804224E8)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE RTRIM WHEN ((vt0.c0)IS NOT('-632013576')) THEN TRIM(0.5656059420773288) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(-6.23804224E8)))OR(vt0.c0)))AND(vt0.c0)) END WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CASE vt0.c0  WHEN 0.1986090338435308 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) ASC, ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c0  WHEN 0.1986090338435308 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) ASC, ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CASE vt0.c0  WHEN 0.1986090338435308 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) ASC, ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c0  WHEN 0.1986090338435308 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) ASC, ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS TRUE))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (CASE vt0.c0  WHEN 0.1986090338435308 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) ASC, ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt0.c0) IS TRUE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt0.c0) IS TRUE))) DESC;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (((vt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (((vt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (((vt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (((vt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (((vt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((+ (vt0.c0))) BETWEEN (('冡e' IN ())) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(0.9924115903953679 AS INTEGER))))AND('-2000934866')))AND((((vt1.c0))<>((0.12913321179903559))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN (('冡e' IN ())) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(0.9924115903953679 AS INTEGER))))AND('-2000934866')))AND((((vt1.c0))<>((0.12913321179903559))))) DESC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((+ (vt0.c0))) BETWEEN (('冡e' IN ())) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(0.9924115903953679 AS INTEGER))))AND('-2000934866')))AND((((vt1.c0))<>((0.12913321179903559))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN (('冡e' IN ())) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(0.9924115903953679 AS INTEGER))))AND('-2000934866')))AND((((vt1.c0))<>((0.12913321179903559))))) DESC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((+ (vt0.c0))) BETWEEN (('冡e' IN ())) AND (((vt0.c0) NOTNULL)))) ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(0.9924115903953679 AS INTEGER))))AND('-2000934866')))AND((((vt1.c0))<>((0.12913321179903559))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)LIKE(0.6031429671006413))))<((vt1.c0 COLLATE NOCASE)))) ORDER BY ((vt1.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)LIKE(0.6031429671006413))))<((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 IN ()) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)LIKE(0.6031429671006413))))<((vt1.c0 COLLATE NOCASE)))) ORDER BY ((vt1.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)LIKE(0.6031429671006413))))<((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 IN ()) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)LIKE(0.6031429671006413))))<((vt1.c0 COLLATE NOCASE)))) ORDER BY ((vt1.c0 IN ()) IN ())  NULLS FIRST;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT)) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT)) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT)) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)IS NOT(vt1.c0)))) WHERE (CHANGES()) ORDER BY (((+ (vt1.c0))) NOTNULL) DESC, (((vt1.c0 IN (vt0.c0, vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)IS NOT(vt1.c0)))) ORDER BY (((+ (vt1.c0))) NOTNULL) DESC, (((vt1.c0 IN (vt0.c0, vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)IS NOT(vt1.c0)))) WHERE (CHANGES()) ORDER BY (((+ (vt1.c0))) NOTNULL) DESC, (((vt1.c0 IN (vt0.c0, vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)IS NOT(vt1.c0)))) ORDER BY (((+ (vt1.c0))) NOTNULL) DESC, (((vt1.c0 IN (vt0.c0, vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0)IS NOT(vt1.c0)))) WHERE (CHANGES()) ORDER BY (((+ (vt1.c0))) NOTNULL) DESC, (((vt1.c0 IN (vt0.c0, vt0.c0)))IS NOT(vt0.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((- (vt0.c0)) IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0) ISNULL)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((- (vt0.c0)) IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0) ISNULL)))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((- (vt0.c0)) IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)), ((vt1.c0) ISNULL)))) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(vt0.c0 COLLATE BINARY)) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)-('-614099699')) THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((HEX(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)-('-614099699')) THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(vt0.c0 COLLATE BINARY)) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)-('-614099699')) THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ((HEX(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)-('-614099699')) THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(vt0.c0 COLLATE BINARY)) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN ((vt0.c0)-('-614099699')) THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((TRIM(vt0.c0) IN ())) ORDER BY json_array_length(((('-155824732', vt0.c0, vt1.c0)) BETWEEN ((x'', vt0.c0, vt1.c0)) AND ((vt1.c0, NULL, vt0.c0))), vt0.c0 COLLATE RTRIM)  NULLS LAST, ((TRIM(vt0.c0))*((+ (0.23331639378738245))));
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY json_array_length(((('-155824732', vt0.c0, vt1.c0)) BETWEEN ((x'', vt0.c0, vt1.c0)) AND ((vt1.c0, NULL, vt0.c0))), vt0.c0 COLLATE RTRIM)  NULLS LAST, ((TRIM(vt0.c0))*((+ (0.23331639378738245)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((TRIM(vt0.c0) IN ())) ORDER BY json_array_length(((('-155824732', vt0.c0, vt1.c0)) BETWEEN ((x'', vt0.c0, vt1.c0)) AND ((vt1.c0, NULL, vt0.c0))), vt0.c0 COLLATE RTRIM)  NULLS LAST, ((TRIM(vt0.c0))*((+ (0.23331639378738245))));
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY json_array_length(((('-155824732', vt0.c0, vt1.c0)) BETWEEN ((x'', vt0.c0, vt1.c0)) AND ((vt1.c0, NULL, vt0.c0))), vt0.c0 COLLATE RTRIM)  NULLS LAST, ((TRIM(vt0.c0))*((+ (0.23331639378738245)))));
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) ORDER BY CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE vt1.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE vt1.c0 END);
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) ORDER BY CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE vt1.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE vt1.c0 END);
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) NOT NULL)) ORDER BY CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) ELSE vt1.c0 END;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (1078401232);
SELECT SUM(count) FROM (SELECT ALL ((1078401232) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (1078401232);
SELECT SUM(count) FROM (SELECT ALL ((1078401232) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (1078401232);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))*(LIKELY(DISTINCT vt1.c0)))) ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST, ((((QUOTE(vt1.c0))AND(TRIM(vt1.c0))))OR(((vt1.c0)||(vt1.c0)))), (~ (x'a135')) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))*(LIKELY(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST, ((((QUOTE(vt1.c0))AND(TRIM(vt1.c0))))OR(((vt1.c0)||(vt1.c0)))), (~ (x'a135')) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))*(LIKELY(DISTINCT vt1.c0)))) ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST, ((((QUOTE(vt1.c0))AND(TRIM(vt1.c0))))OR(((vt1.c0)||(vt1.c0)))), (~ (x'a135')) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))*(LIKELY(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST, ((((QUOTE(vt1.c0))AND(TRIM(vt1.c0))))OR(((vt1.c0)||(vt1.c0)))), (~ (x'a135')) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))*(LIKELY(DISTINCT vt1.c0)))) ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) ASC  NULLS LAST, ((((QUOTE(vt1.c0))AND(TRIM(vt1.c0))))OR(((vt1.c0)||(vt1.c0)))), (~ (x'a135')) COLLATE RTRIM ASC;
SELECT ALL * FROM vt1, vt0 WHERE (x'b811') ORDER BY TYPEOF(((vt0.c0)>(vt0.c0))) ASC  NULLS LAST, (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))!=((CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)))  NULLS LAST, (((- (vt1.c0))) ISNULL) DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'b811') IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY TYPEOF(((vt0.c0)>(vt0.c0))) ASC  NULLS LAST, (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))<>((CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)))  NULLS LAST, (((- (vt1.c0))) ISNULL) DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (x'b811') ORDER BY TYPEOF(((vt0.c0)>(vt0.c0))) ASC  NULLS LAST, (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))!=((CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)))  NULLS LAST, (((- (vt1.c0))) ISNULL) DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'b811') IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY TYPEOF(((vt0.c0)>(vt0.c0))) ASC  NULLS LAST, (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))<>((CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)))  NULLS LAST, (((- (vt1.c0))) ISNULL) DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (x'b811') ORDER BY TYPEOF(((vt0.c0)>(vt0.c0))) ASC  NULLS LAST, (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))!=((CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)))  NULLS LAST, (((- (vt1.c0))) ISNULL) DESC  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)>>(vt1.c0))) NOT NULL)) ORDER BY ((((ABS(vt0.c0))OR(CAST(vt1.c0 AS INTEGER))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((ABS(vt0.c0))OR(CAST(vt1.c0 AS INTEGER))))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)>>(vt1.c0))) NOT NULL)) ORDER BY ((((ABS(vt0.c0))OR(CAST(vt1.c0 AS INTEGER))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((ABS(vt0.c0))OR(CAST(vt1.c0 AS INTEGER))))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)>>(vt1.c0))) NOT NULL)) ORDER BY ((((ABS(vt0.c0))OR(CAST(vt1.c0 AS INTEGER))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT x'', vt1.c0))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)%(vt1.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT x'', vt1.c0))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT x'', vt1.c0))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)%(vt1.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT x'', vt1.c0))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(TRIM(DISTINCT x'', vt1.c0))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(UNLIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)%(vt1.c0))))) ORDER BY vt1.c0;
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((~ (vt0.c0)))/(((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))/(((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((~ (vt0.c0)))/(((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))/(((vt0.c0)IS NOT(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((~ (vt0.c0)))/(((vt0.c0)IS NOT(vt0.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt1.c0)))>((((vt0.c0))>=((x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt1.c0)))>((((vt0.c0))>=((x'')))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt1.c0)))>((((vt0.c0))>=((x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt1.c0)))>((((vt0.c0))>=((x'')))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt1.c0)))>((((vt0.c0))>=((x''))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (HEX(DISTINCT json_type('-110546916'))) ORDER BY ((json(vt0.c0))>((NULL IN (vt0.c0)))), (((((vt1.c0 IN (x'', vt1.c0)))AND((vt1.c0 IN (x'd681')))))OR(CASE WHEN vt0.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT json_type('-110546916'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json(vt0.c0))>((NULL IN (vt0.c0)))), (((((vt1.c0 IN (x'', vt1.c0)))AND((vt1.c0 IN (x'd681')))))OR(CASE WHEN vt0.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (HEX(DISTINCT json_type('-110546916'))) ORDER BY ((json(vt0.c0))>((NULL IN (vt0.c0)))), (((((vt1.c0 IN (x'', vt1.c0)))AND((vt1.c0 IN (x'd681')))))OR(CASE WHEN vt0.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT json_type('-110546916'))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json(vt0.c0))>((NULL IN (vt0.c0)))), (((((vt1.c0 IN (x'', vt1.c0)))AND((vt1.c0 IN (x'd681')))))OR(CASE WHEN vt0.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1821648671 THEN vt1.c0 END))) ORDER BY (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1821648671 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1821648671 THEN vt1.c0 END))) ORDER BY (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1821648671 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN -1821648671 THEN vt1.c0 END))) ORDER BY (- (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<=(vt0.c0)))*((- (vt0.c0))))) ORDER BY ((((((((((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT BETWEEN (x'') AND (vt0.c0)))))OR('1244457994')))OR(NULL)))OR(highlight(vt0.c0, vt0.c0, vt1.c0, vt0.c0))))AND(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c0)))*((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT BETWEEN (x'') AND (vt0.c0)))))OR('1244457994')))OR(NULL)))OR(highlight(vt0.c0, vt0.c0, vt1.c0, vt0.c0))))AND(((vt0.c0) IS TRUE))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<=(vt0.c0)))*((- (vt0.c0))))) ORDER BY ((((((((((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT BETWEEN (x'') AND (vt0.c0)))))OR('1244457994')))OR(NULL)))OR(highlight(vt0.c0, vt0.c0, vt1.c0, vt0.c0))))AND(((vt0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c0)))*((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT BETWEEN (x'') AND (vt0.c0)))))OR('1244457994')))OR(NULL)))OR(highlight(vt0.c0, vt0.c0, vt1.c0, vt0.c0))))AND(((vt0.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LOWER((((vt1.c0))>=((vt0.c0))))) ORDER BY (- (-192406344))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER((((vt1.c0))>=((vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (-192406344))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LOWER((((vt1.c0))>=((vt0.c0))))) ORDER BY (- (-192406344))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER((((vt1.c0))>=((vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (-192406344))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((+ ('kQl')))<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((405364073)) BETWEEN (('*dqxi')) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ ('kQl')))<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((405364073)) BETWEEN (('*dqxi')) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((+ ('kQl')))<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((405364073)) BETWEEN (('*dqxi')) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ ('kQl')))<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((405364073)) BETWEEN (('*dqxi')) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((((+ ('kQl')))<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((405364073)) BETWEEN (('*dqxi')) AND (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.7121187340012896) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT vt0.c0, 0.7121187340012896) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.7121187340012896) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT vt0.c0, 0.7121187340012896) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.7121187340012896) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, -1803910966, (vt0.c0 IN ()))) AND ((((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY TRIM(((vt0.c0) BETWEEN ('1743794256') AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, -1803910966, (vt0.c0 IN ()))) AND ((((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c0) BETWEEN ('1743794256') AND (vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, -1803910966, (vt0.c0 IN ()))) AND ((((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY TRIM(((vt0.c0) BETWEEN ('1743794256') AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, -1803910966, (vt0.c0 IN ()))) AND ((((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(((vt0.c0) BETWEEN ('1743794256') AND (vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, -1803910966, (vt0.c0 IN ()))) AND ((((vt0.c0)|(vt0.c0)), (vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY TRIM(((vt0.c0) BETWEEN ('1743794256') AND (vt0.c0)))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ())) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt1 WHERE (((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.08800313952129091 END) AND (((((((((-1800438094)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY (((1035968965))<(((~ (vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.08800313952129091 END) AND (((((((((-1800438094)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((1035968965))<(((~ (vt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.08800313952129091 END) AND (((((((((-1800438094)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY (((1035968965))<(((~ (vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.08800313952129091 END) AND (((((((((-1800438094)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((1035968965))<(((~ (vt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((TYPEOF(DISTINCT vt1.c0)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.08800313952129091 END) AND (((((((((-1800438094)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY (((1035968965))<(((~ (vt1.c0)))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0.5374555181773102 END)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0.5374555181773102 END)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0.5374555181773102 END)) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0.5374555181773102 END)) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0.5374555181773102 END)) AND ((vt1.c0))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(0.0864517081920475 AS TEXT) WHERE ((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<((x'', vt1.c0, vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (RTRIM(vt1.c0)))) ORDER BY CAST(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<((x'', vt1.c0, vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (RTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(0.0864517081920475 AS TEXT) ORDER BY CAST(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(0.0864517081920475 AS TEXT) WHERE ((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<((x'', vt1.c0, vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (RTRIM(vt1.c0)))) ORDER BY CAST(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<((x'', vt1.c0, vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (RTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(0.0864517081920475 AS TEXT) ORDER BY CAST(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CAST(0.0864517081920475 AS TEXT) WHERE ((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<((x'', vt1.c0, vt0.c0, vt0.c0, vt0.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (RTRIM(vt1.c0)))) ORDER BY CAST(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((x'' COLLATE BINARY) BETWEEN ('\#' COLLATE NOCASE) AND ((~ (vt0.c0)))) ASC  NULLS LAST, CAST(vt0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((x'' COLLATE BINARY) BETWEEN ('\#' COLLATE NOCASE) AND ((~ (vt0.c0)))) ASC  NULLS LAST, CAST(vt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((x'' COLLATE BINARY) BETWEEN ('\#' COLLATE NOCASE) AND ((~ (vt0.c0)))) ASC  NULLS LAST, CAST(vt0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((x'' COLLATE BINARY) BETWEEN ('\#' COLLATE NOCASE) AND ((~ (vt0.c0)))) ASC  NULLS LAST, CAST(vt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((x'' COLLATE BINARY) BETWEEN ('\#' COLLATE NOCASE) AND ((~ (vt0.c0)))) ASC  NULLS LAST, CAST(vt0.c0 AS BLOB);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (vt1.c0) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY -537685982 ASC, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR((((NULL))<((vt1.c0))))))OR(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN (vt1.c0) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY -537685982 ASC, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR((((NULL))<((vt1.c0))))))OR(NULL)) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (vt1.c0) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY -537685982 ASC, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR((((NULL))<((vt1.c0))))))OR(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) BETWEEN (vt1.c0) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY -537685982 ASC, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR((((NULL))<((vt1.c0))))))OR(NULL)) ASC);
SELECT * FROM vt0, vt1 WHERE (((load_extension(vt0.c0, vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((load_extension(vt0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((load_extension(vt0.c0, vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((load_extension(vt0.c0, vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN '-874018136' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN (+ (vt1.c0)) ELSE '' END) ORDER BY ((UPPER(vt1.c0))==(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN '-874018136' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN (+ (vt1.c0)) ELSE '' END) IS TRUE)  as count FROM vt1 ORDER BY ((UPPER(vt1.c0))=(vt1.c0)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN '-874018136' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN (+ (vt1.c0)) ELSE '' END) ORDER BY ((UPPER(vt1.c0))==(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN '-874018136' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN (+ (vt1.c0)) ELSE '' END) IS TRUE)  as count FROM vt1 ORDER BY ((UPPER(vt1.c0))=(vt1.c0)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN '-874018136' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN (+ (vt1.c0)) ELSE '' END) ORDER BY ((UPPER(vt1.c0))==(vt1.c0)) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(((vt0.c0) NOT BETWEEN (0.2192641941743907) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(((vt0.c0) NOT BETWEEN (0.2192641941743907) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(((vt0.c0) NOT BETWEEN (0.2192641941743907) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(((vt0.c0) NOT BETWEEN (0.2192641941743907) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(((vt0.c0) NOT BETWEEN (0.2192641941743907) AND (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((((vt1.c0))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((((vt1.c0))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt1.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((((vt1.c0))!=((vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN 0.9134966807576952 THEN (~ (vt0.c0)) WHEN ((('kG2v#>cA7', vt0.c0, vt0.c0))<((vt0.c0, '\#', vt0.c0))) THEN CAST(vt1.c0 AS INTEGER) WHEN '' THEN ((vt0.c0) NOT NULL) ELSE COALESCE(DISTINCT vt1.c0, vt1.c0) END) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((NULL) BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9134966807576952 THEN (~ (vt0.c0)) WHEN ((('kG2v#>cA7', vt0.c0, vt0.c0))<((vt0.c0, '\#', vt0.c0))) THEN CAST(vt1.c0 AS INTEGER) WHEN '' THEN ((vt0.c0) NOT NULL) ELSE COALESCE(DISTINCT vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN 0.9134966807576952 THEN (~ (vt0.c0)) WHEN ((('kG2v#>cA7', vt0.c0, vt0.c0))<((vt0.c0, '\#', vt0.c0))) THEN CAST(vt1.c0 AS INTEGER) WHEN '' THEN ((vt0.c0) NOT NULL) ELSE COALESCE(DISTINCT vt1.c0, vt1.c0) END) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((NULL) BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.9134966807576952 THEN (~ (vt0.c0)) WHEN ((('kG2v#>cA7', vt0.c0, vt0.c0))<((vt0.c0, '\#', vt0.c0))) THEN CAST(vt1.c0 AS INTEGER) WHEN '' THEN ((vt0.c0) NOT NULL) ELSE COALESCE(DISTINCT vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN 0.9134966807576952 THEN (~ (vt0.c0)) WHEN ((('kG2v#>cA7', vt0.c0, vt0.c0))<((vt0.c0, '\#', vt0.c0))) THEN CAST(vt1.c0 AS INTEGER) WHEN '' THEN ((vt0.c0) NOT NULL) ELSE COALESCE(DISTINCT vt1.c0, vt1.c0) END) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((NULL) BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)<(vt0.c0))))<>((vt1.c0))) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ABS(TRIM(DISTINCT vt0.c0, vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)<(vt0.c0))))!=((vt1.c0))) ORDER BY ABS(TRIM(DISTINCT vt0.c0, vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)<(vt0.c0))))<>((vt1.c0))) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ABS(TRIM(DISTINCT vt0.c0, vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)<(vt0.c0))))!=((vt1.c0))) ORDER BY ABS(TRIM(DISTINCT vt0.c0, vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)<(vt0.c0))))<>((vt1.c0))) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) NOTNULL)) ORDER BY ABS(TRIM(DISTINCT vt0.c0, vt0.c0))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((~ (vt1.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (x''))))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((~ (vt1.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (x''))))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((~ (vt1.c0))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN 0.10852035714060071 THEN ((vt1.c0)>('/r&Eꍥ')) ELSE ((vt1.c0)&(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.10852035714060071 THEN ((vt1.c0)>('/r&Eꍥ')) ELSE ((vt1.c0)&(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN 0.10852035714060071 THEN ((vt1.c0)>('/r&Eꍥ')) ELSE ((vt1.c0)&(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.10852035714060071 THEN ((vt1.c0)>('/r&Eꍥ')) ELSE ((vt1.c0)&(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN 0.10852035714060071 THEN ((vt1.c0)>('/r&Eꍥ')) ELSE ((vt1.c0)&(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('');
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)!=(vt1.c0)))!=(ABS(DISTINCT -1e500)))) ORDER BY CASE ((vt0.c0)LIKE(-1204560590))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt1.c0, vt0.c0, vt0.c0))!=((x'', '改⪳', vt0.c0))) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(NULL)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<>(vt1.c0)))!=(ABS(DISTINCT -1e500)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY CASE ((vt0.c0)LIKE(-1204560590))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt1.c0, vt0.c0, vt0.c0))<>((x'', '改⪳', vt0.c0))) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(NULL)) END);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)!=(vt1.c0)))!=(ABS(DISTINCT -1e500)))) ORDER BY CASE ((vt0.c0)LIKE(-1204560590))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt1.c0, vt0.c0, vt0.c0))!=((x'', '改⪳', vt0.c0))) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(NULL)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<>(vt1.c0)))!=(ABS(DISTINCT -1e500)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY CASE ((vt0.c0)LIKE(-1204560590))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt1.c0, vt0.c0, vt0.c0))<>((x'', '改⪳', vt0.c0))) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(NULL)) END);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)!=(vt1.c0)))!=(ABS(DISTINCT -1e500)))) ORDER BY CASE ((vt0.c0)LIKE(-1204560590))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt1.c0, vt0.c0, vt0.c0))!=((x'', '改⪳', vt0.c0))) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(NULL)) END;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0 IN (vt0.c0, vt1.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt1.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0 IN (vt0.c0, vt1.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt1.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0 IN (vt0.c0, vt1.c0)))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (((0x39d96539)IS(vt1.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN (((0x39d96539)IS(vt1.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (((0x39d96539)IS(vt1.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN (((0x39d96539)IS(vt1.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN (((0x39d96539)IS(vt1.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (LIKELY(DISTINCT (NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (NOT (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELY(DISTINCT (NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (NOT (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELY(DISTINCT (NOT (vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0)<(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)-(vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)-(vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL)))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, vt1.c0, (vt1.c0 IN ())))=((1.743794256E9 COLLATE NOCASE, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (NOT (vt1.c0)))))) ORDER BY (+ (((vt1.c0)<=(vt0.c0)))) ASC, CASE WHEN ((vt0.c0)+(vt0.c0)) THEN (vt1.c0 IN (vt0.c0)) ELSE (vt1.c0 IN (vt0.c0, vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, vt1.c0, (vt1.c0 IN ())))=((1.743794256E9 COLLATE NOCASE, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (NOT (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (((vt1.c0)<=(vt0.c0)))) ASC, CASE WHEN ((vt0.c0)+(vt0.c0)) THEN (vt1.c0 IN (vt0.c0)) ELSE (vt1.c0 IN (vt0.c0, vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, vt1.c0, (vt1.c0 IN ())))=((1.743794256E9 COLLATE NOCASE, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (NOT (vt1.c0)))))) ORDER BY (+ (((vt1.c0)<=(vt0.c0)))) ASC, CASE WHEN ((vt0.c0)+(vt0.c0)) THEN (vt1.c0 IN (vt0.c0)) ELSE (vt1.c0 IN (vt0.c0, vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, vt1.c0, (vt1.c0 IN ())))=((1.743794256E9 COLLATE NOCASE, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (NOT (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (((vt1.c0)<=(vt0.c0)))) ASC, CASE WHEN ((vt0.c0)+(vt0.c0)) THEN (vt1.c0 IN (vt0.c0)) ELSE (vt1.c0 IN (vt0.c0, vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, vt1.c0, (vt1.c0 IN ())))=((1.743794256E9 COLLATE NOCASE, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (NOT (vt1.c0)))))) ORDER BY (+ (((vt1.c0)<=(vt0.c0)))) ASC, CASE WHEN ((vt0.c0)+(vt0.c0)) THEN (vt1.c0 IN (vt0.c0)) ELSE (vt1.c0 IN (vt0.c0, vt0.c0)) END DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT (- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (- (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT (- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (- (vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT (- (vt1.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS INTEGER)  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(vt0.c0)))), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'8b29', vt0.c0, vt0.c0))))AND(((x'') ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS INTEGER)  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(vt0.c0)))), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'8b29', vt0.c0, vt0.c0))))AND(((x'') ISNULL))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS INTEGER)  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(vt0.c0)))), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'8b29', vt0.c0, vt0.c0))))AND(((x'') ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS INTEGER)  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(vt0.c0)))), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'8b29', vt0.c0, vt0.c0))))AND(((x'') ISNULL))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS INTEGER)  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0)>(vt0.c0)))), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'8b29', vt0.c0, vt0.c0))))AND(((x'') ISNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(TRIM(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(TRIM(vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(TRIM(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(TRIM(vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(TRIM(vt1.c0, vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)OR(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'66ee' THEN vt1.c0 END THEN vt1.c0 END) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))>=((TYPEOF(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'66ee' THEN vt1.c0 END THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))>=((TYPEOF(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'66ee' THEN vt1.c0 END THEN vt1.c0 END) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))>=((TYPEOF(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'66ee' THEN vt1.c0 END THEN vt1.c0 END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))>=((TYPEOF(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'66ee' THEN vt1.c0 END THEN vt1.c0 END) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))>=((TYPEOF(vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (LOWER(DISTINCT CAST(vt1.c0 AS NUMERIC))) ORDER BY (+ (((((vt1.c0)OR(x'40308ea0')))OR(vt1.c0)))) ASC  NULLS LAST, NULL  NULLS LAST, 0x13df62ab  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((vt1.c0)OR(x'40308ea0')))OR(vt1.c0)))) ASC  NULLS LAST, NULL  NULLS LAST, 0x13df62ab  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(DISTINCT CAST(vt1.c0 AS NUMERIC))) ORDER BY (+ (((((vt1.c0)OR(x'40308ea0')))OR(vt1.c0)))) ASC  NULLS LAST, NULL  NULLS LAST, 0x13df62ab  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 ORDER BY (+ (((((vt1.c0)OR(x'40308ea0')))OR(vt1.c0)))) ASC  NULLS LAST, NULL  NULLS LAST, 0x13df62ab  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE ((((((((vt1.c0)AND(0.518281610377369)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))  WHEN UPPER(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)AND(0.518281610377369)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))  WHEN UPPER(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE ((((((((vt1.c0)AND(0.518281610377369)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))  WHEN UPPER(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)AND(0.518281610377369)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))  WHEN UPPER(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE ((((((((vt1.c0)AND(0.518281610377369)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))  WHEN UPPER(vt1.c0) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN (x'c061' IN ()) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)|(0.20875478218813825)) WHEN (~ (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN (x'c061' IN ()) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)|(0.20875478218813825)) WHEN (~ (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN (x'c061' IN ()) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)|(0.20875478218813825)) WHEN (~ (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN (x'c061' IN ()) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)|(0.20875478218813825)) WHEN (~ (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY CASE ((vt0.c0)%(vt0.c0))  WHEN UPPER(DISTINCT vt0.c0) THEN (x'c061' IN ()) WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)|(0.20875478218813825)) WHEN (~ (vt0.c0)) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(NULL)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) NOTNULL))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-110538335') NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((('-110538335') NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-110538335') NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((('-110538335') NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-110538335') NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt1.c0) NOT NULL))));
SELECT * FROM vt0, vt1 WHERE (CAST(LIKELY(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(LIKELY(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(LIKELY(vt1.c0) AS BLOB));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0, vt0.c0, 0.35133904331102783)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)GLOB(vt1.c0))))) ORDER BY (((((vt1.c0)) BETWEEN (('')) AND ((vt0.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, vt0.c0, 0.35133904331102783)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)) BETWEEN (('')) AND ((vt0.c0)))) IS FALSE) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0, vt0.c0, 0.35133904331102783)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)GLOB(vt1.c0))))) ORDER BY (((((vt1.c0)) BETWEEN (('')) AND ((vt0.c0)))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c0, vt0.c0, 0.35133904331102783)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0)) BETWEEN (('')) AND ((vt0.c0)))) IS FALSE) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((((vt0.c0, vt0.c0, 0.35133904331102783)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))AND((vt0.c0 IN ()))))OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)GLOB(vt1.c0))))) ORDER BY (((((vt1.c0)) BETWEEN (('')) AND ((vt0.c0)))) IS FALSE) ASC;
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((0.05125444982549654, vt1.c0, vt1.c0)))) NOT BETWEEN (vt1.c0) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))!=((0.05125444982549654, vt1.c0, vt1.c0)))) NOT BETWEEN (vt1.c0) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((0.05125444982549654, vt1.c0, vt1.c0)))) NOT BETWEEN (vt1.c0) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0))!=((0.05125444982549654, vt1.c0, vt1.c0)))) NOT BETWEEN (vt1.c0) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((0.05125444982549654, vt1.c0, vt1.c0)))) NOT BETWEEN (vt1.c0) AND ((vt1.c0 IN ()))));
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c0) IS TRUE))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(0.42015188092500033)))))OR(((vt0.c0)>=(vt0.c0))))) ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) IS TRUE))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(0.42015188092500033)))))OR(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c0) IS TRUE))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(0.42015188092500033)))))OR(((vt0.c0)>=(vt0.c0))))) ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) IS TRUE))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(0.42015188092500033)))))OR(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c0) IS TRUE))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(0.42015188092500033)))))OR(((vt0.c0)>=(vt0.c0))))) ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))IS(((vt0.c0) NOTNULL)))) ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))IS(((vt0.c0) NOTNULL)))) ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))IS(((vt0.c0) NOTNULL)))) ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((x'')) BETWEEN ((json_type(vt0.c0))) AND (((- ('-756287559')))))) ORDER BY (((0.2460820138325539))<=((IFNULL(DISTINCT vt0.c0, vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((json_type(vt0.c0))) AND (((- ('-756287559')))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((0.2460820138325539))<=((IFNULL(DISTINCT vt0.c0, vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((x'')) BETWEEN ((json_type(vt0.c0))) AND (((- ('-756287559')))))) ORDER BY (((0.2460820138325539))<=((IFNULL(DISTINCT vt0.c0, vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((json_type(vt0.c0))) AND (((- ('-756287559')))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((0.2460820138325539))<=((IFNULL(DISTINCT vt0.c0, vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (x'') ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CAST((- (x'be74')) AS BLOB)  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CAST((- (x'be74')) AS BLOB)  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt1, vt0 WHERE (x'') ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CAST((- (x'be74')) AS BLOB)  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CAST((- (x'be74')) AS BLOB)  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC);
SELECT * FROM vt1, vt0 WHERE (x'') ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) ASC  NULLS FIRST, CAST((- (x'be74')) AS BLOB)  NULLS FIRST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY ((((vt0.c0)LIKE(vt1.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)LIKE(vt1.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY ((((vt0.c0)LIKE(vt1.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)LIKE(vt1.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt1.c0 END COLLATE RTRIM) ORDER BY ((((vt0.c0)LIKE(vt1.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT * FROM vt0, vt1 WHERE ((vt0.c0 IN (((vt0.c0)||(vt0.c0)), ((vt1.c0) IS FALSE)))) ORDER BY ((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, NULL))OR(((vt1.c0)>(vt1.c0)))))AND(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0)||(vt0.c0)), ((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, NULL))OR(((vt1.c0)>(vt1.c0)))))AND(((vt0.c0) NOT NULL))));
SELECT * FROM vt0, vt1 WHERE ((vt0.c0 IN (((vt0.c0)||(vt0.c0)), ((vt1.c0) IS FALSE)))) ORDER BY ((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, NULL))OR(((vt1.c0)>(vt1.c0)))))AND(((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0)||(vt0.c0)), ((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, NULL))OR(((vt1.c0)>(vt1.c0)))))AND(((vt0.c0) NOT NULL))));
SELECT * FROM vt0, vt1 WHERE ((vt0.c0 IN (((vt0.c0)||(vt0.c0)), ((vt1.c0) IS FALSE)))) ORDER BY ((((COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, NULL))OR(((vt1.c0)>(vt1.c0)))))AND(((vt0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt1 WHERE ((((~ (vt1.c0))) BETWEEN (0.714740355386736) AND ((~ (0.010641244091255553)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (0.714740355386736) AND ((~ (0.010641244091255553))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((~ (vt1.c0))) BETWEEN (0.714740355386736) AND ((~ (0.010641244091255553)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (0.714740355386736) AND ((~ (0.010641244091255553))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((~ (vt1.c0))) BETWEEN (0.714740355386736) AND ((~ (0.010641244091255553)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS FALSE)))) ORDER BY CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)>(vt1.c0)) THEN LOWER(vt0.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)>(vt1.c0)) THEN LOWER(vt0.c0) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS FALSE)))) ORDER BY CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)>(vt1.c0)) THEN LOWER(vt0.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)>(vt1.c0)) THEN LOWER(vt0.c0) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))))AND(((vt0.c0) NOTNULL))))AND(((vt0.c0) IS FALSE)))) ORDER BY CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0)>(vt1.c0)) THEN LOWER(vt0.c0) END  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB) WHERE (((((TRIM(DISTINCT vt1.c0, vt0.c0))OR(vt0.c0)))OR((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt1.c0, vt0.c0))OR(vt0.c0)))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB) WHERE (((((TRIM(DISTINCT vt1.c0, vt0.c0))OR(vt0.c0)))OR((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(DISTINCT vt1.c0, vt0.c0))OR(vt0.c0)))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS BLOB) WHERE (((((TRIM(DISTINCT vt1.c0, vt0.c0))OR(vt0.c0)))OR((+ (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt0.c0) IS FALSE)))) ORDER BY ('/Jt醱k?%i' IN (((NULL)-(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ('/Jt醱k?%i' IN (((NULL)-(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt0.c0) IS FALSE)))) ORDER BY ('/Jt醱k?%i' IN (((NULL)-(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ('/Jt醱k?%i' IN (((NULL)-(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((- (((vt0.c0) IS FALSE)))) ORDER BY ('/Jt醱k?%i' IN (((NULL)-(vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))GLOB((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((+ ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON '!Q' WHERE ((+ (1433975340)));
SELECT SUM(count) FROM (SELECT ALL (((+ (1433975340))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON '!Q');
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON '!Q' WHERE ((+ (1433975340)));
SELECT SUM(count) FROM (SELECT ALL (((+ (1433975340))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON '!Q');
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON '!Q' WHERE ((+ (1433975340)));
SELECT ALL * FROM vt0, vt1 WHERE ((((((NULL)%(vt0.c0))))==((load_extension(vt1.c0, 'R/'))))) ORDER BY ((((vt1.c0)=(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((NULL)%(vt0.c0))))=((load_extension(vt1.c0, 'R/'))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)=(vt0.c0))) IS TRUE));
SELECT ALL * FROM vt0, vt1 WHERE ((((((NULL)%(vt0.c0))))==((load_extension(vt1.c0, 'R/'))))) ORDER BY ((((vt1.c0)=(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((((NULL)%(vt0.c0))))=((load_extension(vt1.c0, 'R/'))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)=(vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN 0.6993377385556331 THEN x'' COLLATE NOCASE ELSE vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT NULL)  WHEN 0.6993377385556331 THEN x'' COLLATE NOCASE ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN 0.6993377385556331 THEN x'' COLLATE NOCASE ELSE vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT NULL)  WHEN 0.6993377385556331 THEN x'' COLLATE NOCASE ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN 0.6993377385556331 THEN x'' COLLATE NOCASE ELSE vt1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt1 WHERE ((((x'' IN ()))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt1.c0 COLLATE NOCASE IN (((vt1.c0)IS(x'9637c278')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN (((vt1.c0)IS(x'9637c278')))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((x'' IN ()))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt1.c0 COLLATE NOCASE IN (((vt1.c0)IS(x'9637c278')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN (((vt1.c0)IS(x'9637c278')))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((x'' IN ()))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt1.c0 COLLATE NOCASE IN (((vt1.c0)IS(x'9637c278')))) DESC;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, x'', vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE '-258104297'  WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '-258104297'  WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE '-258104297'  WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '-258104297'  WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE '-258104297'  WHEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) THEN (vt1.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (vt1.c0)));
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0)))))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0)))))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (NULL) AND (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0)))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((json_object(vt1.c0, 0.2192641941743907, vt1.c0, vt0.c0)) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY x'', ((vt1.c0) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt1.c0, 0.2192641941743907, vt1.c0, vt0.c0)) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (IFNULL(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'', ((vt1.c0) NOT NULL) COLLATE NOCASE);
SELECT * FROM vt1, vt0 WHERE (((json_object(vt1.c0, 0.2192641941743907, vt1.c0, vt0.c0)) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY x'', ((vt1.c0) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((json_object(vt1.c0, 0.2192641941743907, vt1.c0, vt0.c0)) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (IFNULL(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'', ((vt1.c0) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((x'') NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((x'') NOTNULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((x'') NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((x'') NOTNULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((x'') NOTNULL)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, vt0.c0)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c0, vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, vt0.c0)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c0, vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, vt0.c0)) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((x'', (vt0.c0 IN ()), LOWER(vt1.c0)))=((vt1.c0, LIKELIHOOD(vt1.c0, 0.8678410363226886), CAST(vt0.c0 AS TEXT)))) WHERE ((((((vt0.c0 IN ()))AND('1335621018')))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND('1335621018')))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((x'', (vt0.c0 IN ()), LOWER(vt1.c0)))=((vt1.c0, LIKELIHOOD(vt1.c0, 0.8678410363226886), CAST(vt0.c0 AS TEXT)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((x'', (vt0.c0 IN ()), LOWER(vt1.c0)))=((vt1.c0, LIKELIHOOD(vt1.c0, 0.8678410363226886), CAST(vt0.c0 AS TEXT)))) WHERE ((((((vt0.c0 IN ()))AND('1335621018')))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND('1335621018')))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((x'', (vt0.c0 IN ()), LOWER(vt1.c0)))=((vt1.c0, LIKELIHOOD(vt1.c0, 0.8678410363226886), CAST(vt0.c0 AS TEXT)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((x'', (vt0.c0 IN ()), LOWER(vt1.c0)))=((vt1.c0, LIKELIHOOD(vt1.c0, 0.8678410363226886), CAST(vt0.c0 AS TEXT)))) WHERE ((((((vt0.c0 IN ()))AND('1335621018')))OR(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC) WHERE (((((vt1.c0)*(vt0.c0))) IS FALSE)) ORDER BY CASE WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.4823324012303749) THEN ((vt1.c0)||(vt1.c0)) ELSE ((((vt0.c0)OR(-1348516334)))AND(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC) ORDER BY CASE WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.4823324012303749) THEN ((vt1.c0)||(vt1.c0)) ELSE ((((vt0.c0)OR(-1348516334)))AND(vt1.c0)) END  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC) WHERE (((((vt1.c0)*(vt0.c0))) IS FALSE)) ORDER BY CASE WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.4823324012303749) THEN ((vt1.c0)||(vt1.c0)) ELSE ((((vt0.c0)OR(-1348516334)))AND(vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC) ORDER BY CASE WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.4823324012303749) THEN ((vt1.c0)||(vt1.c0)) ELSE ((((vt0.c0)OR(-1348516334)))AND(vt1.c0)) END  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS NUMERIC) WHERE (((((vt1.c0)*(vt0.c0))) IS FALSE)) ORDER BY CASE WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.4823324012303749) THEN ((vt1.c0)||(vt1.c0)) ELSE ((((vt0.c0)OR(-1348516334)))AND(vt1.c0)) END  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((+ (vt0.c0)), ((vt0.c0)IS NOT(vt1.c0)), (vt0.c0 IN (vt0.c0))))==((CAST(vt1.c0 AS NUMERIC), vt0.c0, ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0)), ((vt0.c0)IS NOT(vt1.c0)), (vt0.c0 IN (vt0.c0))))=((CAST(vt1.c0 AS NUMERIC), vt0.c0, ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((+ (vt0.c0)), ((vt0.c0)IS NOT(vt1.c0)), (vt0.c0 IN (vt0.c0))))==((CAST(vt1.c0 AS NUMERIC), vt0.c0, ((vt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0)), ((vt0.c0)IS NOT(vt1.c0)), (vt0.c0 IN (vt0.c0))))=((CAST(vt1.c0 AS NUMERIC), vt0.c0, ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((+ (vt0.c0)), ((vt0.c0)IS NOT(vt1.c0)), (vt0.c0 IN (vt0.c0))))==((CAST(vt1.c0 AS NUMERIC), vt0.c0, ((vt0.c0) IS TRUE)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(x'' COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(x'' COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(x'' COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS INTEGER), (((((((('FwB')OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))<((vt0.c0))), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN (vt1.c0, vt1.c0))))<=((CAST(vt0.c0 AS REAL), '970548537', vt1.c0, CASE 0.6176923277864097  WHEN vt0.c0 THEN vt1.c0 END, ((vt1.c0) IS TRUE), CAST(vt1.c0 AS REAL), (((vt1.c0))>((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS INTEGER), (((((((('FwB')OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))<((vt0.c0))), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN (vt1.c0, vt1.c0))))<=((CAST(vt0.c0 AS REAL), '970548537', vt1.c0, CASE 0.6176923277864097  WHEN vt0.c0 THEN vt1.c0 END, ((vt1.c0) IS TRUE), CAST(vt1.c0 AS REAL), (((vt1.c0))>((vt0.c0))))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS INTEGER), (((((((('FwB')OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))<((vt0.c0))), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN (vt1.c0, vt1.c0))))<=((CAST(vt0.c0 AS REAL), '970548537', vt1.c0, CASE 0.6176923277864097  WHEN vt0.c0 THEN vt1.c0 END, ((vt1.c0) IS TRUE), CAST(vt1.c0 AS REAL), (((vt1.c0))>((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS INTEGER), (((((((('FwB')OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))<((vt0.c0))), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN (vt1.c0, vt1.c0))))<=((CAST(vt0.c0 AS REAL), '970548537', vt1.c0, CASE 0.6176923277864097  WHEN vt0.c0 THEN vt1.c0 END, ((vt1.c0) IS TRUE), CAST(vt1.c0 AS REAL), (((vt1.c0))>((vt0.c0))))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS INTEGER), (((((((('FwB')OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))<((vt0.c0))), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN (vt1.c0, vt1.c0))))<=((CAST(vt0.c0 AS REAL), '970548537', vt1.c0, CASE 0.6176923277864097  WHEN vt0.c0 THEN vt1.c0 END, ((vt1.c0) IS TRUE), CAST(vt1.c0 AS REAL), (((vt1.c0))>((vt0.c0))))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST((+ (vt0.c0)) AS BLOB) DESC  NULLS FIRST, ((NOT (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS BLOB) DESC  NULLS FIRST, ((NOT (vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST((+ (vt0.c0)) AS BLOB) DESC  NULLS FIRST, ((NOT (vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS BLOB) DESC  NULLS FIRST, ((NOT (vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST((+ (vt0.c0)) AS BLOB) DESC  NULLS FIRST, ((NOT (vt0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<<(NULL)) AS BLOB)) ORDER BY (((('[') NOTNULL))==(((vt0.c0)IS NOT(vt0.c0)))) DESC, (NOT (((vt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<<(NULL)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((('[') NOTNULL))=(((vt0.c0)IS NOT(vt0.c0)))) DESC, (NOT (((vt0.c0) IS FALSE))) ASC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<<(NULL)) AS BLOB)) ORDER BY (((('[') NOTNULL))==(((vt0.c0)IS NOT(vt0.c0)))) DESC, (NOT (((vt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<<(NULL)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((('[') NOTNULL))=(((vt0.c0)IS NOT(vt0.c0)))) DESC, (NOT (((vt0.c0) IS FALSE))) ASC);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<<(NULL)) AS BLOB)) ORDER BY (((('[') NOTNULL))==(((vt0.c0)IS NOT(vt0.c0)))) DESC, (NOT (((vt0.c0) IS FALSE))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ('家0') ORDER BY ((((vt0.c0)OR(((vt0.c0)|('kG2v#>cA7')))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('家0') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((vt0.c0)|('kG2v#>cA7')))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ('家0') ORDER BY ((((vt0.c0)OR(((vt0.c0)|('kG2v#>cA7')))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('家0') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((vt0.c0)|('kG2v#>cA7')))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ('家0') ORDER BY ((((vt0.c0)OR(((vt0.c0)|('kG2v#>cA7')))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (IFNULL(DISTINCT vt0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(DISTINCT vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (IFNULL(DISTINCT vt0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(DISTINCT vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (IFNULL(DISTINCT vt0.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (NULL))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (NULL))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (NULL))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (NULL))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (NULL))) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) IS FALSE))AND((((vt0.c0))<=((vt0.c0))))), TYPEOF(DISTINCT (vt0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) IS FALSE))AND((((vt0.c0))<=((vt0.c0))))), TYPEOF(DISTINCT (vt0.c0 IN ())) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) IS FALSE))AND((((vt0.c0))<=((vt0.c0))))), TYPEOF(DISTINCT (vt0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)=(vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) IS FALSE))AND((((vt0.c0))<=((vt0.c0))))), TYPEOF(DISTINCT (vt0.c0 IN ())) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) IS FALSE))AND((((vt0.c0))<=((vt0.c0))))), TYPEOF(DISTINCT (vt0.c0 IN ())) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN 0.9759231999991522 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN 0.9759231999991522 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN 0.9759231999991522 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN 0.9759231999991522 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN 0.9759231999991522 ELSE vt0.c0 END)));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((0Xfd442ea))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((0xfd442ea)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((0Xfd442ea))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((0xfd442ea)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((0Xfd442ea))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, 0.6922995534865288)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, 0.6922995534865288)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, 0.6922995534865288)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, 0.6922995534865288)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, 0.6922995534865288)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN (((vt0.c0)<(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY TRIM(DISTINCT ((vt1.c0)>=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((vt1.c0)>=(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY TRIM(DISTINCT ((vt1.c0)>=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((vt1.c0)>=(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY TRIM(DISTINCT ((vt1.c0)>=(vt1.c0)));
SELECT * FROM vt1 WHERE (((((-195895798) NOT NULL))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((-195895798) NOT NULL))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT * FROM vt1 WHERE (((((-195895798) NOT NULL))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((-195895798) NOT NULL))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT * FROM vt1 WHERE (((((-195895798) NOT NULL))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c0 DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)<>(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c0)))))) ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((rtreenode(vt0.c0, vt1.c0), CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((+ (vt1.c0)), vt0.c0, (vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt1.c0)!=(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((rtreenode(vt0.c0, vt1.c0), CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((+ (vt1.c0)), vt0.c0, (vt0.c0 IN (vt0.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)<>(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c0)))))) ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((rtreenode(vt0.c0, vt1.c0), CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((+ (vt1.c0)), vt0.c0, (vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt1.c0)!=(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((rtreenode(vt0.c0, vt1.c0), CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((+ (vt1.c0)), vt0.c0, (vt0.c0 IN (vt0.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt1.c0)<>(vt0.c0)))) AND ((((vt1.c0)>=(vt1.c0)))))) ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((rtreenode(vt0.c0, vt1.c0), CASE NULL  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((+ (vt1.c0)), vt0.c0, (vt0.c0 IN (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE)) ORDER BY LIKELIHOOD(((((x'a386')AND(vt0.c0)))AND(vt0.c0)), 0.1161530685505302) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(((((x'a386')AND(vt0.c0)))AND(vt0.c0)), 0.1161530685505302) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE)) ORDER BY LIKELIHOOD(((((x'a386')AND(vt0.c0)))AND(vt0.c0)), 0.1161530685505302) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(((((x'a386')AND(vt0.c0)))AND(vt0.c0)), 0.1161530685505302) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE)) ORDER BY LIKELIHOOD(((((x'a386')AND(vt0.c0)))AND(vt0.c0)), 0.1161530685505302) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('rfa୹', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('rfa୹', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('rfa୹', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('rfa୹', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('rfa୹', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))*(((0.273895410268594) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))*(((0.273895410268594) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))*(((0.273895410268594) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))*(((0.273895410268594) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))*(((0.273895410268594) IS FALSE))));
SELECT * FROM vt1, vt0 WHERE ((- (vt1.c0))) ORDER BY (((vt0.c0 COLLATE RTRIM))<(((('hr^gS')/(vt0.c0))))) ASC  NULLS LAST, (((vt0.c0) IS FALSE) IN ()), (~ (CASE WHEN 0X4c759956 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))<(((('hr^gS')/(vt0.c0))))) ASC  NULLS LAST, (((vt0.c0) IS FALSE) IN ()), (~ (CASE WHEN 0X4c759956 THEN vt0.c0 END)));
SELECT * FROM vt1, vt0 WHERE ((- (vt1.c0))) ORDER BY (((vt0.c0 COLLATE RTRIM))<(((('hr^gS')/(vt0.c0))))) ASC  NULLS LAST, (((vt0.c0) IS FALSE) IN ()), (~ (CASE WHEN 0X4c759956 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))<(((('hr^gS')/(vt0.c0))))) ASC  NULLS LAST, (((vt0.c0) IS FALSE) IN ()), (~ (CASE WHEN 0X4c759956 THEN vt0.c0 END)));
SELECT * FROM vt1, vt0 WHERE ((- (vt1.c0))) ORDER BY (((vt0.c0 COLLATE RTRIM))<(((('hr^gS')/(vt0.c0))))) ASC  NULLS LAST, (((vt0.c0) IS FALSE) IN ()), (~ (CASE WHEN 0X4c759956 THEN vt0.c0 END));
SELECT * FROM vt1 WHERE ((- ((('dovTx먬O8') BETWEEN ('') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((('dovTx먬O8') BETWEEN ('') AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- ((('dovTx먬O8') BETWEEN ('') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((('dovTx먬O8') BETWEEN ('') AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- ((('dovTx먬O8') BETWEEN ('') AND (vt1.c0)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (NOT ((+ (vt1.c0)))) WHERE (((((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))))<=((vt0.c0)))) ORDER BY load_extension(vt0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))))<=((vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT ((+ (vt1.c0)))) ORDER BY load_extension(vt0.c0)  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN vt1 ON (NOT ((+ (vt1.c0)))) WHERE (((((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))))<=((vt0.c0)))) ORDER BY load_extension(vt0.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0)))))<=((vt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT ((+ (vt1.c0)))) ORDER BY load_extension(vt0.c0)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE ((((('&#vlḒ/') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((x'992d' IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL)))) ORDER BY ((('-756287559')) BETWEEN (('1635429725')) AND (((vt0.c0 IN (x'0b2d'))))) DESC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('&#vlḒ/') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((x'992d' IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((('-756287559')) BETWEEN (('1635429725')) AND (((vt0.c0 IN (x'0b2d'))))) DESC, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((('&#vlḒ/') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((x'992d' IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL)))) ORDER BY ((('-756287559')) BETWEEN (('1635429725')) AND (((vt0.c0 IN (x'0b2d'))))) DESC, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('&#vlḒ/') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((x'992d' IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((('-756287559')) BETWEEN (('1635429725')) AND (((vt0.c0 IN (x'0b2d'))))) DESC, vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((('&#vlḒ/') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((x'992d' IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOTNULL)))) ORDER BY ((('-756287559')) BETWEEN (('1635429725')) AND (((vt0.c0 IN (x'0b2d'))))) DESC, vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.02577149550327751 ELSE vt1.c0 END))==((vt1.c0))) DESC  NULLS FIRST, x'';
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.02577149550327751 ELSE vt1.c0 END))==((vt1.c0))) DESC  NULLS FIRST, x'');
SELECT ALL * FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.02577149550327751 ELSE vt1.c0 END))==((vt1.c0))) DESC  NULLS FIRST, x'';
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.02577149550327751 ELSE vt1.c0 END))==((vt1.c0))) DESC  NULLS FIRST, x'');
SELECT ALL * FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC)) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN 0.02577149550327751 ELSE vt1.c0 END))==((vt1.c0))) DESC  NULLS FIRST, x'';
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((json_array_length(vt0.c0)) BETWEEN ((- (vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) ORDER BY vt1.c0  NULLS FIRST, UNICODE(vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(vt0.c0)) BETWEEN ((- (vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS FIRST, UNICODE(vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((json_array_length(vt0.c0)) BETWEEN ((- (vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) ORDER BY vt1.c0  NULLS FIRST, UNICODE(vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(vt0.c0)) BETWEEN ((- (vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS FIRST, UNICODE(vt0.c0 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN '-778422254' WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, '-1220385802', vt1.c0, vt1.c0, vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)OR(vt0.c0)) END) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN '-778422254' WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, '-1220385802', vt1.c0, vt1.c0, vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN '-778422254' WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, '-1220385802', vt1.c0, vt1.c0, vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)OR(vt0.c0)) END) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN '-778422254' WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, '-1220385802', vt1.c0, vt1.c0, vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN '-778422254' WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, '-1220385802', vt1.c0, vt1.c0, vt0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)OR(vt0.c0)) END) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (RTRIM('-874018136')) ORDER BY (('F')<<(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM('-874018136')) IS TRUE)  as count FROM vt1 ORDER BY (('F')<<(vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (RTRIM('-874018136')) ORDER BY (('F')<<(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((RTRIM('-874018136')) IS TRUE)  as count FROM vt1 ORDER BY (('F')<<(vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (RTRIM('-874018136')) ORDER BY (('F')<<(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ('-1601512034') ORDER BY (((vt1.c0)GLOB(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (('-1601512034') IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)GLOB(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE ('-1601512034') ORDER BY (((vt1.c0)GLOB(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (('-1601512034') IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)GLOB(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE ('-1601512034') ORDER BY (((vt1.c0)GLOB(vt0.c0)) IN ());
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((0.005403032481341996 IN ())))>((((((vt1.c0)AND(vt0.c0)))AND(0.6675949955791003))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.005403032481341996 IN ())))>((((((vt1.c0)AND(vt0.c0)))AND(0.6675949955791003)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((0.005403032481341996 IN ())))>((((((vt1.c0)AND(vt0.c0)))AND(0.6675949955791003))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.005403032481341996 IN ())))>((((((vt1.c0)AND(vt0.c0)))AND(0.6675949955791003)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((0.005403032481341996 IN ())))>((((((vt1.c0)AND(vt0.c0)))AND(0.6675949955791003))))));
SELECT ALL * FROM vt1, vt0 WHERE ('0.5374555181773102') ORDER BY SQLITE_COMPILEOPTION_USED(((vt1.c0) ISNULL)) ASC, ((vt1.c0 COLLATE BINARY)OR(json_valid(NULL))) ASC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (('0.5374555181773102') IS TRUE)  as count FROM vt1, vt0 ORDER BY SQLITE_COMPILEOPTION_USED(((vt1.c0) ISNULL)) ASC, ((vt1.c0 COLLATE BINARY)OR(json_valid(NULL))) ASC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt1, vt0 WHERE ('0.5374555181773102') ORDER BY SQLITE_COMPILEOPTION_USED(((vt1.c0) ISNULL)) ASC, ((vt1.c0 COLLATE BINARY)OR(json_valid(NULL))) ASC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (('0.5374555181773102') IS TRUE)  as count FROM vt1, vt0 ORDER BY SQLITE_COMPILEOPTION_USED(((vt1.c0) ISNULL)) ASC, ((vt1.c0 COLLATE BINARY)OR(json_valid(NULL))) ASC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt1, vt0 WHERE ('0.5374555181773102') ORDER BY SQLITE_COMPILEOPTION_USED(((vt1.c0) ISNULL)) ASC, ((vt1.c0 COLLATE BINARY)OR(json_valid(NULL))) ASC  NULLS LAST, (+ (CAST(vt0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT ALL * FROM vt0 WHERE ('-1480096696') ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1480096696') IS TRUE)  as count FROM vt0 ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END) DESC);
SELECT ALL * FROM vt0 WHERE ('-1480096696') ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1480096696') IS TRUE)  as count FROM vt0 ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END) DESC);
SELECT ALL * FROM vt0 WHERE ('-1480096696') ORDER BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END) DESC;
SELECT ALL * FROM vt0 WHERE ('') ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ('') ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ('') ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE))IS(vt1.c0))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))|((- (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE))IS(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))|((- (vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE))IS(vt1.c0))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))|((- (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE))IS(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))|((- (vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE))IS(vt1.c0))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))|((- (vt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN (~ (vt0.c0)) END) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN (~ (vt0.c0)) END) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN (~ (vt0.c0)) END) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ (vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)||(COALESCE(vt1.c0, vt0.c0, vt0.c0, vt1.c0, x'', vt1.c0))) DESC, CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 ORDER BY ((vt1.c0 COLLATE RTRIM)||(COALESCE(vt1.c0, vt0.c0, vt0.c0, vt1.c0, x'', vt1.c0))) DESC, CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)||(COALESCE(vt1.c0, vt0.c0, vt0.c0, vt1.c0, x'', vt1.c0))) DESC, CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 ORDER BY ((vt1.c0 COLLATE RTRIM)||(COALESCE(vt1.c0, vt0.c0, vt0.c0, vt1.c0, x'', vt1.c0))) DESC, CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (((vt0.c0)>=(vt1.c0))))) ORDER BY ((vt1.c0 COLLATE RTRIM)||(COALESCE(vt1.c0, vt0.c0, vt0.c0, vt1.c0, x'', vt1.c0))) DESC, CAST(((vt0.c0) IS TRUE) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((((vt0.c0))=((vt0.c0)))))=((((vt0.c0) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))=((vt0.c0)))))=((((vt0.c0) IS FALSE)))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((((vt0.c0))=((vt0.c0)))))=((((vt0.c0) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))=((vt0.c0)))))=((((vt0.c0) IS FALSE)))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) NOTNULL) ELSE CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((((((vt0.c0))=((vt0.c0)))))=((((vt0.c0) IS FALSE)))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(-1.348516334E9)))AND('')))AND(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE)))) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))|(((vt0.c0)*(x'39fc')))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(-1.348516334E9)))AND('')))AND(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))|(((vt0.c0)*(x'39fc')))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(-1.348516334E9)))AND('')))AND(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE)))) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))|(((vt0.c0)*(x'39fc')))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(-1.348516334E9)))AND('')))AND(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))|(((vt0.c0)*(x'39fc')))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))AND(-1.348516334E9)))AND('')))AND(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE)))) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))|(((vt0.c0)*(x'39fc')))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.08800313952129091 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.08800313952129091 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.08800313952129091 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.08800313952129091 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.08800313952129091 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=(('-1919820371', ((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=(('-1919820371', ((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE))));
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=(('-1919820371', ((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=(('-1919820371', ((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE))));
SELECT * FROM vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=(('-1919820371', ((vt0.c0)&(vt0.c0)), vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<(vt1.c0)))%(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffff9fb2bfc9 END))) ORDER BY ((((('-778422254')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND((- (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0)))%(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffff9fb2bfc9 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((('-778422254')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND((- (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<(vt1.c0)))%(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffff9fb2bfc9 END))) ORDER BY ((((('-778422254')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND((- (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt1.c0)))%(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffff9fb2bfc9 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((('-778422254')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND((- (vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)<(vt1.c0)))%(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffff9fb2bfc9 END))) ORDER BY ((((('-778422254')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND((- (vt1.c0)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (vt1.c0))) ORDER BY (UNLIKELY(vt1.c0) IN (vt1.c0))  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER))>>(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (UNLIKELY(vt1.c0) IN (vt1.c0))  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER))>>(vt1.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (vt1.c0))) ORDER BY (UNLIKELY(vt1.c0) IN (vt1.c0))  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER))>>(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOTNULL) IN (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (UNLIKELY(vt1.c0) IN (vt1.c0))  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER))>>(vt1.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (vt1.c0))) ORDER BY (UNLIKELY(vt1.c0) IN (vt1.c0))  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER))>>(vt1.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR('410010225')) AS NUMERIC) WHERE (UNLIKELY(((vt1.c0)/(vt1.c0)))) ORDER BY ((((0X4f9bf59a) IS FALSE))|(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt1.c0)/(vt1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR('410010225')) AS NUMERIC) ORDER BY ((((0x4f9bf59a) IS FALSE))|(vt1.c0)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR('410010225')) AS NUMERIC) WHERE (UNLIKELY(((vt1.c0)/(vt1.c0)))) ORDER BY ((((0X4f9bf59a) IS FALSE))|(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt1.c0)/(vt1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR('410010225')) AS NUMERIC) ORDER BY ((((0x4f9bf59a) IS FALSE))|(vt1.c0)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR('410010225')) AS NUMERIC) WHERE (UNLIKELY(((vt1.c0)/(vt1.c0)))) ORDER BY ((((0X4f9bf59a) IS FALSE))|(vt1.c0));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0))<>((vt0.c0))))+(vt0.c0))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<>((vt0.c0))))+(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0))<>((vt0.c0))))+(vt0.c0))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<>((vt0.c0))))+(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0))<>((vt0.c0))))+(vt0.c0))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((((vt1.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0))) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT RTRIM(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT RTRIM(vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT RTRIM(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT RTRIM(vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT RTRIM(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (0.9134966807576952);
SELECT SUM(count) FROM (SELECT ((0.9134966807576952) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.9134966807576952);
SELECT SUM(count) FROM (SELECT ((0.9134966807576952) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.9134966807576952);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE ((json_insert(vt1.c0, vt1.c0, 0Xfd442ea) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((json_insert(vt1.c0, vt1.c0, 0xfd442ea) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((json_insert(vt1.c0, vt1.c0, 0Xfd442ea) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((json_insert(vt1.c0, vt1.c0, 0xfd442ea) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c0)AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt1.c0) NOTNULL))))AND(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt1.c0) NOTNULL))))AND(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c0)AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt1.c0) NOTNULL))))AND(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt1.c0) NOTNULL))))AND(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c0)AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt1.c0) NOTNULL))))AND(((vt0.c0)GLOB(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))<>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))<>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))!=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) ISNULL))IS(json_extract(vt1.c0, vt1.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))IS(json_extract(vt1.c0, vt1.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0) ISNULL))IS(json_extract(vt1.c0, vt1.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))IS(json_extract(vt1.c0, vt1.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((x''))))/(((0.3701228595812043)+(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((x''))))/(((0.3701228595812043)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((x''))))/(((0.3701228595812043)+(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((x''))))/(((0.3701228595812043)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((x''))))/(((0.3701228595812043)+(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS TEXT))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(NULL AS INTEGER))>=(((0.7717311337756008)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER))>=(((0.7717311337756008)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(NULL AS INTEGER))>=(((0.7717311337756008)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER))>=(((0.7717311337756008)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(NULL AS INTEGER))>=(((0.7717311337756008)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN -255850343 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN ((NULL)%(vt0.c0)) ELSE (~ (vt1.c0)) END) ORDER BY (((NOT (vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN -255850343 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN ((NULL)%(vt0.c0)) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((NOT (vt1.c0))) NOTNULL));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN -255850343 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN ((NULL)%(vt0.c0)) ELSE (~ (vt1.c0)) END) ORDER BY (((NOT (vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN -255850343 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN ((NULL)%(vt0.c0)) ELSE (~ (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((NOT (vt1.c0))) NOTNULL));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN -255850343 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN ((NULL)%(vt0.c0)) ELSE (~ (vt1.c0)) END) ORDER BY (((NOT (vt1.c0))) NOTNULL);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((0x39d96539)!=(vt1.c0))))>((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))) ORDER BY ((((vt0.c0)=(vt1.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0X39d96539)<>(vt1.c0))))>((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)==(vt1.c0))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((0x39d96539)!=(vt1.c0))))>((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))) ORDER BY ((((vt0.c0)=(vt1.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0X39d96539)<>(vt1.c0))))>((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)==(vt1.c0))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((0x39d96539)!=(vt1.c0))))>((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))) ORDER BY ((((vt0.c0)=(vt1.c0))) ISNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) NOT NULL)) ORDER BY ((vt1.c0) IS FALSE) DESC, ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS FALSE) DESC, ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) NOT NULL)) ORDER BY ((vt1.c0) IS FALSE) DESC, ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS FALSE) DESC, ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) NOT NULL)) ORDER BY ((vt1.c0) IS FALSE) DESC, ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((~ (vt0.c0)))>=((NOT (vt1.c0))))) ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))>=((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((~ (vt0.c0)))>=((NOT (vt1.c0))))) ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))>=((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((~ (vt0.c0)))>=((NOT (vt1.c0))))) ORDER BY CAST(((vt0.c0)&(vt0.c0)) AS TEXT);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0) ISNULL))AND(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('誨')))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) ISNULL))AND(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('誨')))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ ((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0) ISNULL))AND(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('誨')))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) ISNULL))AND(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('誨')))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ ((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0) ISNULL))AND(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('誨')))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (~ ((vt0.c0 IN ()))) DESC;
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 END) ORDER BY CAST(((NULL)OR(vt0.c0)) AS INTEGER) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((NULL)OR(vt0.c0)) AS INTEGER) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0)*(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 END) ORDER BY CAST(((NULL)OR(vt0.c0)) AS INTEGER) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((NULL)OR(vt0.c0)) AS INTEGER) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0)*(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN vt0.c0 END) ORDER BY CAST(((NULL)OR(vt0.c0)) AS INTEGER) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL) ASC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0)*(vt1.c0))));
SELECT * FROM vt0 WHERE ((~ ('-1717806924')));
SELECT SUM(count) FROM (SELECT (((~ ('-1717806924'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ('-1717806924')));
SELECT SUM(count) FROM (SELECT (((~ ('-1717806924'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ('-1717806924')));
SELECT ALL * FROM vt0, vt1 WHERE (((0.1995949353930867) IS FALSE)) ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.1995949353930867) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((0.1995949353930867) IS FALSE)) ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.1995949353930867) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((0.1995949353930867) IS FALSE)) ORDER BY CAST(vt0.c0 AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (NOT (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0, vt1 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (NOT (((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt0, vt1 WHERE ((+ ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (NOT (((vt0.c0) NOTNULL)));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (MAX(x'', vt0.c0)) AND (((vt1.c0)<>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (MAX(x'', vt0.c0)) AND (((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (MAX(x'', vt0.c0)) AND (((vt1.c0)<>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (MAX(x'', vt0.c0)) AND (((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (MAX(x'', vt0.c0)) AND (((vt1.c0)<>(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((json_extract('x~3UrJd%', vt0.c0))>>(ABS(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((json_extract('x~3UrJd%', vt0.c0))>>(ABS(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((json_extract('x~3UrJd%', vt0.c0))>>(ABS(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((json_extract('x~3UrJd%', vt0.c0))>>(ABS(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c0 THEN ('hW!䱺3%*G' IN ()) ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ('hW!䱺3%*G' IN ()) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c0 THEN ('hW!䱺3%*G' IN ()) ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ('hW!䱺3%*G' IN ()) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt0.c0 THEN ('hW!䱺3%*G' IN ()) ELSE (vt1.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER)) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER)) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER)) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)*((((vt1.c0, x'', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER))), (((((vt1.c0))<>((vt1.c0))))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)*((((vt1.c0, x'', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER))), (((((vt1.c0))!=((vt1.c0))))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)*((((vt1.c0, x'', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER))), (((((vt1.c0))<>((vt1.c0))))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)*((((vt1.c0, x'', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER))), (((((vt1.c0))!=((vt1.c0))))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)*((((vt1.c0, x'', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY ((((vt1.c0)>>(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CAST(vt1.c0 AS INTEGER))), (((((vt1.c0))<>((vt1.c0))))<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST((((0.9411762644566213, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.9411762644566213, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT ALL * FROM vt1, vt0 WHERE (CAST((((0.9411762644566213, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.9411762644566213, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED);
SELECT ALL * FROM vt1, vt0 WHERE (CAST((((0.9411762644566213, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY 1335621018 ASC  NULLS LAST, ((('૞#' IN ())) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN (vt1.c0, vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY 1335621018 ASC  NULLS LAST, ((('૞#' IN ())) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN (vt1.c0, vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY 1335621018 ASC  NULLS LAST, ((('૞#' IN ())) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN (vt1.c0, vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY 1335621018 ASC  NULLS LAST, ((('૞#' IN ())) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ((vt1.c0 IN (vt1.c0, vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))IS(((vt1.c0)>=(vt0.c0)))) WHERE (UPPER(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ORDER BY ((vt0.c0) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))IS(((vt1.c0)>=(vt0.c0)))) ORDER BY ((vt0.c0) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))IS(((vt1.c0)>=(vt0.c0)))) WHERE (UPPER(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ORDER BY ((vt0.c0) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))IS(((vt1.c0)>=(vt0.c0)))) ORDER BY ((vt0.c0) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((vt0.c0)+(vt0.c0)))IS(((vt1.c0)>=(vt0.c0)))) WHERE (UPPER(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) ORDER BY ((vt0.c0) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)/(vt0.c0))))) ORDER BY CAST(UNLIKELY(NULL) AS BLOB) ASC  NULLS LAST, CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 764882932 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(UNLIKELY(NULL) AS BLOB) ASC  NULLS LAST, CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 764882932 END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)/(vt0.c0))))) ORDER BY CAST(UNLIKELY(NULL) AS BLOB) ASC  NULLS LAST, CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 764882932 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(UNLIKELY(NULL) AS BLOB) ASC  NULLS LAST, CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 764882932 END DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)/(vt0.c0))))) ORDER BY CAST(UNLIKELY(NULL) AS BLOB) ASC  NULLS LAST, CASE WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE 764882932 END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(x'', vt0.c0 COLLATE RTRIM)) ORDER BY ((276093002)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(x'', vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY ((276093002)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(x'', vt0.c0 COLLATE RTRIM)) ORDER BY ((276093002)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(x'', vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY ((276093002)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(x'', vt0.c0 COLLATE RTRIM)) ORDER BY ((276093002)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) ORDER BY ((((- (vt0.c0))))<((vt0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((- (vt0.c0))))<((vt0.c0 COLLATE RTRIM)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) ORDER BY ((((- (vt0.c0))))<((vt0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((- (vt0.c0))))<((vt0.c0 COLLATE RTRIM)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) ORDER BY ((((- (vt0.c0))))<((vt0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))>(((- (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS INTEGER)))>(((- (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))>(((- (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt1.c0 AS INTEGER)))>(((- (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))>(((- (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN NULL THEN vt1.c0 END IN (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN vt1.c0 END IN (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN NULL THEN vt1.c0 END IN (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN vt1.c0 END IN (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN NULL THEN vt1.c0 END IN (((vt1.c0) IS TRUE))));
SELECT ALL * FROM vt0, vt1 WHERE (((json_valid(x''))<=(((x'9112')<<(vt0.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_valid(x''))<=(((x'9112')<<(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((json_valid(x''))<=(((x'9112')<<(vt0.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_valid(x''))<=(((x'9112')<<(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((json_valid(x''))<=(((x'9112')<<(vt0.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL))/((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) ORDER BY (((((vt0.c0 IN ()))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt1.c0) IS FALSE)))  NULLS FIRST, 0.3187260888064032 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))/((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0 IN ()))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt1.c0) IS FALSE)))  NULLS FIRST, 0.3187260888064032 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL))/((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) ORDER BY (((((vt0.c0 IN ()))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt1.c0) IS FALSE)))  NULLS FIRST, 0.3187260888064032 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))/((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0 IN ()))AND(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt1.c0) IS FALSE)))  NULLS FIRST, 0.3187260888064032 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN ('쪐O') AND (vt1.c0)))==(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (- ((((0x60d7a59c))!=((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN ('쪐O') AND (vt1.c0)))==(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- ((((0x60d7a59c))<>((vt1.c0))))) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN ('쪐O') AND (vt1.c0)))==(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (- ((((0x60d7a59c))!=((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN ('쪐O') AND (vt1.c0)))==(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- ((((0x60d7a59c))<>((vt1.c0))))) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN ('쪐O') AND (vt1.c0)))==(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (- ((((0x60d7a59c))!=((vt1.c0))))) DESC;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0)<=(vt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((0xffffffffd2ebf7b9)==((- (vt0.c0)))) WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((0xffffffffd2ebf7b9)=((- (vt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((0xffffffffd2ebf7b9)==((- (vt0.c0)))) WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((0xffffffffd2ebf7b9)=((- (vt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((0xffffffffd2ebf7b9)==((- (vt0.c0)))) WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0))<((vt0.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN 0.8862196050625777 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END, ((((vt0.c0)*(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'WIg/8.' THEN vt1.c0 WHEN vt0.c0 THEN '814549484' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN 0.8862196050625777 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END, ((((vt0.c0)*(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'WIg/8.' THEN vt1.c0 WHEN vt0.c0 THEN '814549484' END))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN 0.8862196050625777 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END, ((((vt0.c0)*(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'WIg/8.' THEN vt1.c0 WHEN vt0.c0 THEN '814549484' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN 0.8862196050625777 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END, ((((vt0.c0)*(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'WIg/8.' THEN vt1.c0 WHEN vt0.c0 THEN '814549484' END))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CASE ((vt0.c0)>>(vt0.c0))  WHEN 0.8862196050625777 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END, ((((vt0.c0)*(vt0.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'WIg/8.' THEN vt1.c0 WHEN vt0.c0 THEN '814549484' END))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOTNULL))/(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))/(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOTNULL))/(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))/(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOTNULL))/(CAST(vt1.c0 AS TEXT))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)>(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)>(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)>(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(vt0.c0) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)*(NULL)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(vt0.c0) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)*(NULL)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(vt0.c0) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)*(NULL)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(vt0.c0) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)*(NULL)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TRIM(vt0.c0) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)*(NULL)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((json_array_length(vt0.c0))<<((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((json_array_length(vt0.c0))<<((vt1.c0 IN ())))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((json_array_length(vt0.c0))<<((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((json_array_length(vt0.c0))<<((vt1.c0 IN ())))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END) ORDER BY ((json_array_length(vt0.c0))<<((vt1.c0 IN ())))  NULLS LAST;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) IS TRUE)) NOTNULL)) ORDER BY (+ (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) IS TRUE)) NOTNULL)) ORDER BY (+ (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL) IS TRUE)) NOTNULL)) ORDER BY (+ (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ()))*(CAST(vt1.c0 AS REAL)))) ORDER BY ((((vt0.c0 COLLATE BINARY)AND((vt1.c0 IN ()))))AND((vt1.c0 IN ()))) DESC  NULLS FIRST, ((((vt1.c0)+('>b)')))&(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))*(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0 COLLATE BINARY)AND((vt1.c0 IN ()))))AND((vt1.c0 IN ()))) DESC  NULLS FIRST, ((((vt1.c0)+('>b)')))&(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ()))*(CAST(vt1.c0 AS REAL)))) ORDER BY ((((vt0.c0 COLLATE BINARY)AND((vt1.c0 IN ()))))AND((vt1.c0 IN ()))) DESC  NULLS FIRST, ((((vt1.c0)+('>b)')))&(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))*(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0 COLLATE BINARY)AND((vt1.c0 IN ()))))AND((vt1.c0 IN ()))) DESC  NULLS FIRST, ((((vt1.c0)+('>b)')))&(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE));
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0))) IS FALSE)) ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('O\raH]'))) AND (((vt1.c0)>=(vt1.c0)))) ASC  NULLS FIRST, ((((((vt1.c0)>(0.02272668013557555)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('O\raH]'))) AND (((vt1.c0)>=(vt1.c0)))) ASC  NULLS FIRST, ((((((vt1.c0)>(0.02272668013557555)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0))) IS FALSE)) ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('O\raH]'))) AND (((vt1.c0)>=(vt1.c0)))) ASC  NULLS FIRST, ((((((vt1.c0)>(0.02272668013557555)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('O\raH]'))) AND (((vt1.c0)>=(vt1.c0)))) ASC  NULLS FIRST, ((((((vt1.c0)>(0.02272668013557555)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)-(vt1.c0))) IS FALSE)) ORDER BY (((((vt1.c0))<=((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('O\raH]'))) AND (((vt1.c0)>=(vt1.c0)))) ASC  NULLS FIRST, ((((((vt1.c0)>(0.02272668013557555)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT * FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c0)))AND((NOT (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) ORDER BY (((vt0.c0)&(vt0.c0)) IN (CASE WHEN 0.044302771695335474 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<>(vt0.c0)))AND((NOT (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)&(vt0.c0)) IN (CASE WHEN 0.044302771695335474 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c0)))AND((NOT (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) ORDER BY (((vt0.c0)&(vt0.c0)) IN (CASE WHEN 0.044302771695335474 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<>(vt0.c0)))AND((NOT (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)&(vt0.c0)) IN (CASE WHEN 0.044302771695335474 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((((((vt0.c0)<>(vt0.c0)))AND((NOT (vt0.c0)))))OR(((vt0.c0)-(vt0.c0))))) ORDER BY (((vt0.c0)&(vt0.c0)) IN (CASE WHEN 0.044302771695335474 THEN vt0.c0 ELSE vt0.c0 END));
SELECT ALL * FROM vt1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN IFNULL(vt1.c0, vt1.c0) ELSE ((vt1.c0)%(x'')) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN IFNULL(vt1.c0, vt1.c0) ELSE ((vt1.c0)%(x'')) END);
SELECT ALL * FROM vt1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN IFNULL(vt1.c0, vt1.c0) ELSE ((vt1.c0)%(x'')) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN IFNULL(vt1.c0, vt1.c0) ELSE ((vt1.c0)%(x'')) END);
SELECT ALL * FROM vt1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) ORDER BY CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (vt1.c0 IN ()) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN IFNULL(vt1.c0, vt1.c0) ELSE ((vt1.c0)%(x'')) END;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)>(vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((vt0.c0 IN ())) ORDER BY (((0xfffffffff93bbc9b))<(((((vt0.c0)) BETWEEN (('OoB㱇IH')) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)>(vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ORDER BY (((0Xfffffffff93bbc9b))<(((((vt0.c0)) BETWEEN (('OoB㱇IH')) AND ((vt0.c0))))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)>(vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((vt0.c0 IN ())) ORDER BY (((0xfffffffff93bbc9b))<(((((vt0.c0)) BETWEEN (('OoB㱇IH')) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)>(vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) ORDER BY (((0Xfffffffff93bbc9b))<(((((vt0.c0)) BETWEEN (('OoB㱇IH')) AND ((vt0.c0))))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)>(vt1.c0))) AND (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) WHERE ((vt0.c0 IN ())) ORDER BY (((0xfffffffff93bbc9b))<(((((vt0.c0)) BETWEEN (('OoB㱇IH')) AND ((vt0.c0))))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY UNLIKELY(DISTINCT (NOT (vt1.c0))) ASC  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE BINARY)))OR(((vt1.c0)>>(vt1.c0)))))OR((~ ('./')))))AND((~ (vt1.c0))))  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNLIKELY(DISTINCT (NOT (vt1.c0))) ASC  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE BINARY)))OR(((vt1.c0)>>(vt1.c0)))))OR((~ ('./')))))AND((~ (vt1.c0))))  NULLS LAST, NULL  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY UNLIKELY(DISTINCT (NOT (vt1.c0))) ASC  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE BINARY)))OR(((vt1.c0)>>(vt1.c0)))))OR((~ ('./')))))AND((~ (vt1.c0))))  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNLIKELY(DISTINCT (NOT (vt1.c0))) ASC  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE BINARY)))OR(((vt1.c0)>>(vt1.c0)))))OR((~ ('./')))))AND((~ (vt1.c0))))  NULLS LAST, NULL  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY UNLIKELY(DISTINCT (NOT (vt1.c0))) ASC  NULLS FIRST, ((((((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE BINARY)))OR(((vt1.c0)>>(vt1.c0)))))OR((~ ('./')))))AND((~ (vt1.c0))))  NULLS LAST, NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))<=(((vt0.c0)OR(vt1.c0)))) WHERE ((((vt1.c0 IN ())) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt0.c0)&(vt1.c0))))) ORDER BY CASE vt1.c0  WHEN x'90bc' THEN vt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt0.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))<=(((vt0.c0)OR(vt1.c0)))) ORDER BY CASE vt1.c0  WHEN x'90bc' THEN vt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))<=(((vt0.c0)OR(vt1.c0)))) WHERE ((((vt1.c0 IN ())) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt0.c0)&(vt1.c0))))) ORDER BY CASE vt1.c0  WHEN x'90bc' THEN vt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt0.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))<=(((vt0.c0)OR(vt1.c0)))) ORDER BY CASE vt1.c0  WHEN x'90bc' THEN vt0.c0 END COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))<=(((vt0.c0)OR(vt1.c0)))) WHERE ((((vt1.c0 IN ())) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt0.c0)&(vt1.c0))))) ORDER BY CASE vt1.c0  WHEN x'90bc' THEN vt0.c0 END COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt0.c0))) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE ('\rv	,');
SELECT SUM(count) FROM (SELECT (('\rv	,') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('\rv	,');
SELECT SUM(count) FROM (SELECT (('\rv	,') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('\rv	,');
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON -1528165511 WHERE (((vt1.c0 COLLATE NOCASE)LIKE(((0.24165789017003758)!=(vt0.c0))))) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)LIKE(((0.24165789017003758)!=(vt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON -1528165511 ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS BLOB));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON -1528165511 WHERE (((vt1.c0 COLLATE NOCASE)LIKE(((0.24165789017003758)!=(vt0.c0))))) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)LIKE(((0.24165789017003758)!=(vt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON -1528165511 ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS BLOB));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON -1528165511 WHERE (((vt1.c0 COLLATE NOCASE)LIKE(((0.24165789017003758)!=(vt0.c0))))) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM vt1 WHERE (1548675908) ORDER BY ((CAST(vt1.c0 AS INTEGER))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, '-1528165511' DESC  NULLS FIRST, 0X2a22b47b;
SELECT SUM(count) FROM (SELECT ALL ((1548675908) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, '-1528165511' DESC  NULLS FIRST, 0x2a22b47b);
SELECT ALL COUNT(*) FROM vt1 WHERE (1548675908) ORDER BY ((CAST(vt1.c0 AS INTEGER))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, '-1528165511' DESC  NULLS FIRST, 0X2a22b47b;
SELECT SUM(count) FROM (SELECT ALL ((1548675908) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, '-1528165511' DESC  NULLS FIRST, 0x2a22b47b);
SELECT ALL * FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0 IN ()))<>(((vt0.c0)>=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0 IN ()))<>(((vt0.c0)>=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0 IN ()))<>(((vt0.c0)>=(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0) COLLATE NOCASE) ORDER BY ((RTRIM(vt1.c0))GLOB((NOT ('x&')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((RTRIM(vt1.c0))GLOB((NOT ('x&')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0) COLLATE NOCASE) ORDER BY ((RTRIM(vt1.c0))GLOB((NOT ('x&')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((RTRIM(vt1.c0))GLOB((NOT ('x&')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0) COLLATE NOCASE) ORDER BY ((RTRIM(vt1.c0))GLOB((NOT ('x&')))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)IS(vt0.c0)) COLLATE RTRIM) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)IS(vt0.c0)) COLLATE RTRIM) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c0)IS(vt0.c0)) COLLATE RTRIM) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS REAL) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('1579102968', (((vt0.c0))<=((vt0.c0))), ((vt0.c0)IS NOT(NULL)), ((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)<=(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('1579102968', (((vt0.c0))<=((vt0.c0))), ((vt0.c0)IS NOT(NULL)), ((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)<=(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('1579102968', (((vt0.c0))<=((vt0.c0))), ((vt0.c0)IS NOT(NULL)), ((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)<=(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('1579102968', (((vt0.c0))<=((vt0.c0))), ((vt0.c0)IS NOT(NULL)), ((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)<=(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('1579102968', (((vt0.c0))<=((vt0.c0))), ((vt0.c0)IS NOT(NULL)), ((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)<=(vt0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM))));
SELECT * FROM vt1 WHERE ((((vt1.c0)AND(vt1.c0)) IN ())) ORDER BY TOTAL_CHANGES()  NULLS FIRST, (((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)) IN (((vt1.c0)<(vt1.c0)), 684608435))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY TOTAL_CHANGES()  NULLS FIRST, (((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)) IN (((vt1.c0)<(vt1.c0)), 684608435))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)AND(vt1.c0)) IN ())) ORDER BY TOTAL_CHANGES()  NULLS FIRST, (((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)) IN (((vt1.c0)<(vt1.c0)), 684608435))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY TOTAL_CHANGES()  NULLS FIRST, (((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)) IN (((vt1.c0)<(vt1.c0)), 684608435))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)AND(vt1.c0)) IN ())) ORDER BY TOTAL_CHANGES()  NULLS FIRST, (((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)) IN (((vt1.c0)<(vt1.c0)), 684608435))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS(((NULL) BETWEEN (0xec8e6f0) AND ('706917499'))))) ORDER BY CAST((+ (NULL)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))IS(((NULL) BETWEEN (0Xec8e6f0) AND ('706917499'))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST((+ (NULL)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS(((NULL) BETWEEN (0xec8e6f0) AND ('706917499'))))) ORDER BY CAST((+ (NULL)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))IS(((NULL) BETWEEN (0Xec8e6f0) AND ('706917499'))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST((+ (NULL)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))IS(((NULL) BETWEEN (0xec8e6f0) AND ('706917499'))))) ORDER BY CAST((+ (NULL)) AS REAL)  NULLS FIRST;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)==(((vt1.c0)&(vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (CAST(x'05a4' AS INTEGER)) AND (((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)==(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (CAST(x'05a4' AS INTEGER)) AND (((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)==(((vt1.c0)&(vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (CAST(x'05a4' AS INTEGER)) AND (((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)==(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (CAST(x'05a4' AS INTEGER)) AND (((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)==(((vt1.c0)&(vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (CAST(x'05a4' AS INTEGER)) AND (((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)>>(vt1.c0)))-(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt1.c0)))-(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)>>(vt1.c0)))-(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt1.c0)))-(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)>>(vt1.c0)))-(((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT BETWEEN (0X18295d69) AND ((((vt1.c0, 265569002, vt1.c0))==((vt0.c0, x'', vt0.c0)))))) ORDER BY ((NULL)IS NOT(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, (((0X13df62ab))==(((vt1.c0 IN (vt1.c0, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt0.c0))) NOT BETWEEN (0x18295d69) AND ((((vt1.c0, 265569002, vt1.c0))=((vt0.c0, x'', vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULL)IS NOT(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, (((0x13df62ab))==(((vt1.c0 IN (vt1.c0, vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT BETWEEN (0X18295d69) AND ((((vt1.c0, 265569002, vt1.c0))==((vt0.c0, x'', vt0.c0)))))) ORDER BY ((NULL)IS NOT(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, (((0X13df62ab))==(((vt1.c0 IN (vt1.c0, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)-(vt0.c0))) NOT BETWEEN (0x18295d69) AND ((((vt1.c0, 265569002, vt1.c0))=((vt0.c0, x'', vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULL)IS NOT(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, (((0x13df62ab))==(((vt1.c0 IN (vt1.c0, vt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT BETWEEN (0X18295d69) AND ((((vt1.c0, 265569002, vt1.c0))==((vt0.c0, x'', vt0.c0)))))) ORDER BY ((NULL)IS NOT(((vt1.c0) IS TRUE))) DESC  NULLS FIRST, (((0X13df62ab))==(((vt1.c0 IN (vt1.c0, vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE((vt1.c0 IN ()), vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((vt1.c0 IN ()), vt1.c0)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE((vt1.c0 IN ()), vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((vt1.c0 IN ()), vt1.c0)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (COALESCE((vt1.c0 IN ()), vt1.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c0)AND(0X69eb8b7c)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(0x69eb8b7c)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c0)AND(0X69eb8b7c)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(0x69eb8b7c)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c0)AND(0X69eb8b7c)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<>((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<>((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0)))) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ((((vt0.c0))<((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((NOT (vt1.c0))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((((((((((((((vt1.c0)OR(x'7f16')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((((((((((((((vt1.c0)OR(x'7f16')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((NOT (vt1.c0))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((((((((((((((vt1.c0)OR(x'7f16')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((((((((((((((vt1.c0)OR(x'7f16')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND ((NOT (vt1.c0))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((((((((((((((vt1.c0)OR(x'7f16')))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((((((vt0.c0) NOTNULL))AND((('0.8391607466648763')IS NOT(vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOTNULL))AND((('0.8391607466648763')IS NOT(vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((((((vt0.c0) NOTNULL))AND((('0.8391607466648763')IS NOT(vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOTNULL))AND((('0.8391607466648763')IS NOT(vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY ((((((vt0.c0) NOTNULL))AND((('0.8391607466648763')IS NOT(vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((1078401232)AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) IS TRUE)))) ORDER BY CASE (+ (vt0.c0))  WHEN json_insert(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0)AND(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((1078401232)AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (+ (vt0.c0))  WHEN json_insert(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0)AND(vt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((1078401232)AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) IS TRUE)))) ORDER BY CASE (+ (vt0.c0))  WHEN json_insert(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0)AND(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((1078401232)AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (+ (vt0.c0))  WHEN json_insert(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0)AND(vt0.c0)) END DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) ORDER BY '-551722247'  NULLS FIRST, (- (((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY '-551722247'  NULLS FIRST, (- (((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) ORDER BY '-551722247'  NULLS FIRST, (- (((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY '-551722247'  NULLS FIRST, (- (((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) ISNULL)) ORDER BY '-551722247'  NULLS FIRST, (- (((vt0.c0) ISNULL)));
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT * FROM vt0 WHERE (CASE WHEN (('1066820812') NOT NULL) THEN ((vt0.c0)%(vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END) ORDER BY (~ ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('1066820812') NOT NULL) THEN ((vt0.c0)%(vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN (('1066820812') NOT NULL) THEN ((vt0.c0)%(vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END) ORDER BY (~ ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('1066820812') NOT NULL) THEN ((vt0.c0)%(vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN (('1066820812') NOT NULL) THEN ((vt0.c0)%(vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END) ORDER BY (~ ((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)=(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)=(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)=(vt1.c0)) COLLATE BINARY);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ ((+ (vt0.c0))))) ORDER BY ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ ((+ (vt0.c0))))) ORDER BY ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((~ ((+ (vt0.c0))))) ORDER BY ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)<>(0.5167618933765141)))OR((vt1.c0 IN ()))))OR((- (vt1.c0))))) ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1294840941', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)!=(0.5167618933765141)))OR((vt1.c0 IN ()))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1294840941', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)<>(0.5167618933765141)))OR((vt1.c0 IN ()))))OR((- (vt1.c0))))) ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1294840941', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)!=(0.5167618933765141)))OR((vt1.c0 IN ()))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1294840941', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)<>(0.5167618933765141)))OR((vt1.c0 IN ()))))OR((- (vt1.c0))))) ORDER BY ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1294840941', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON HEX(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) WHERE (JULIANDAY(LIKELIHOOD(DISTINCT vt0.c0, 0.7731781410481124), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), UPPER(DISTINCT vt0.c0), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt0.c0));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(LIKELIHOOD(DISTINCT vt0.c0, 0.7731781410481124), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), UPPER(DISTINCT vt0.c0), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt0.c0)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON HEX(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON HEX(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) WHERE (JULIANDAY(LIKELIHOOD(DISTINCT vt0.c0, 0.7731781410481124), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), UPPER(DISTINCT vt0.c0), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt0.c0));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(LIKELIHOOD(DISTINCT vt0.c0, 0.7731781410481124), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), UPPER(DISTINCT vt0.c0), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt0.c0)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON HEX(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON HEX(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) WHERE (JULIANDAY(LIKELIHOOD(DISTINCT vt0.c0, 0.7731781410481124), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), UPPER(DISTINCT vt0.c0), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))), vt0.c0));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'05aa' WHEN x'' THEN vt1.c0 END)) WHERE (x'38fd');
SELECT SUM(count) FROM (SELECT ((x'38fd') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'05aa' WHEN x'' THEN vt1.c0 END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'05aa' WHEN x'' THEN vt1.c0 END)) WHERE (x'38fd');
SELECT SUM(count) FROM (SELECT ((x'38fd') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'05aa' WHEN x'' THEN vt1.c0 END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'05aa' WHEN x'' THEN vt1.c0 END)) WHERE (x'38fd');
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((((((vt0.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) WHERE ('ui|k?{H&*' COLLATE BINARY) ORDER BY (((NOT (vt0.c0)))*((- (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('ui|k?{H&*' COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((((vt0.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ORDER BY (((NOT (vt0.c0)))*((- (vt1.c0)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((((((vt0.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) WHERE ('ui|k?{H&*' COLLATE BINARY) ORDER BY (((NOT (vt0.c0)))*((- (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('ui|k?{H&*' COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((((vt0.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) ORDER BY (((NOT (vt0.c0)))*((- (vt1.c0)))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((((((vt0.c0) NOT NULL))OR(((vt1.c0) IS TRUE))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) WHERE ('ui|k?{H&*' COLLATE BINARY) ORDER BY (((NOT (vt0.c0)))*((- (vt1.c0)))) ASC;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt1.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt1.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt1.c0)));
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.37234102478670406)) COLLATE BINARY) ORDER BY (NOT (-1927174088)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.37234102478670406)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (NOT (-1927174088)) ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.37234102478670406)) COLLATE BINARY) ORDER BY (NOT (-1927174088)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.37234102478670406)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (NOT (-1927174088)) ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.37234102478670406)) COLLATE BINARY) ORDER BY (NOT (-1927174088)) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY ((((vt1.c0, '410010225', vt0.c0))>((vt0.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0, '410010225', vt0.c0))>((vt0.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY ((((vt1.c0, '410010225', vt0.c0))>((vt0.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0, '410010225', vt0.c0))>((vt0.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY ((((vt1.c0, '410010225', vt0.c0))>((vt0.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) BETWEEN (TRIM(vt0.c0)) AND (0.5830661417193066 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0))) BETWEEN (TRIM(vt0.c0)) AND (0.5830661417193066 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) BETWEEN (TRIM(vt0.c0)) AND (0.5830661417193066 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0))) BETWEEN (TRIM(vt0.c0)) AND (0.5830661417193066 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) BETWEEN (TRIM(vt0.c0)) AND (0.5830661417193066 COLLATE NOCASE)));
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((vt1.c0)&(vt1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)&(vt1.c0))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((vt1.c0)&(vt1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)&(vt1.c0))) IS TRUE) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((vt1.c0)&(vt1.c0))) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, COALESCE(DISTINCT x'8c4ecb4f', json(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, COALESCE(DISTINCT x'8c4ecb4f', json(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, COALESCE(DISTINCT x'8c4ecb4f', json(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, COALESCE(DISTINCT x'8c4ecb4f', json(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC  NULLS LAST, COALESCE(DISTINCT x'8c4ecb4f', json(NULL)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) ORDER BY (((vt1.c0)AND(NULL)) IN ()), LIKELIHOOD((vt1.c0 IN ()), 0.9234162245826837) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)AND(NULL)) IN ()), LIKELIHOOD((vt1.c0 IN ()), 0.9234162245826837) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) ORDER BY (((vt1.c0)AND(NULL)) IN ()), LIKELIHOOD((vt1.c0 IN ()), 0.9234162245826837) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)AND(NULL)) IN ()), LIKELIHOOD((vt1.c0 IN ()), 0.9234162245826837) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) ORDER BY (((vt1.c0)AND(NULL)) IN ()), LIKELIHOOD((vt1.c0 IN ()), 0.9234162245826837) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.c0) NOTNULL))));
SELECT * FROM vt1 WHERE (('k/mE#rz' IN (MIN(vt1.c0, vt1.c0)))) ORDER BY ((((CAST(vt1.c0 AS NUMERIC))AND(vt1.c0)))OR((((x'0bc5bccebe02', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 'Q~(*&p8sZ')) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('k/mE#rz' IN (MIN(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS NUMERIC))AND(vt1.c0)))OR((((x'0bc5bccebe02', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 'Q~(*&p8sZ')) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (('k/mE#rz' IN (MIN(vt1.c0, vt1.c0)))) ORDER BY ((((CAST(vt1.c0 AS NUMERIC))AND(vt1.c0)))OR((((x'0bc5bccebe02', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 'Q~(*&p8sZ')) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('k/mE#rz' IN (MIN(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS NUMERIC))AND(vt1.c0)))OR((((x'0bc5bccebe02', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 'Q~(*&p8sZ')) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (('k/mE#rz' IN (MIN(vt1.c0, vt1.c0)))) ORDER BY ((((CAST(vt1.c0 AS NUMERIC))AND(vt1.c0)))OR((((x'0bc5bccebe02', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, 'Q~(*&p8sZ')) AND ((vt1.c0, vt1.c0, vt1.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) ISNULL))AND((NOT (vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) ISNULL))AND((NOT (vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) ISNULL))AND((NOT (vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) ISNULL))AND((NOT (vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) ISNULL))AND((NOT (vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR(vt0.c0)));
SELECT ALL * FROM vt1 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (x'' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOTNULL))<<(((vt1.c0)IS(vt1.c0))))) ORDER BY CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, x'8d2b')) AND ((vt0.c0, vt0.c0, vt1.c0))) END  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL))<<(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, x'8d2b')) AND ((vt0.c0, vt0.c0, vt1.c0))) END  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOTNULL))<<(((vt1.c0)IS(vt1.c0))))) ORDER BY CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, x'8d2b')) AND ((vt0.c0, vt0.c0, vt1.c0))) END  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL))<<(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, x'8d2b')) AND ((vt0.c0, vt0.c0, vt1.c0))) END  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOTNULL))<<(((vt1.c0)IS(vt1.c0))))) ORDER BY CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, x'8d2b')) AND ((vt0.c0, vt0.c0, vt1.c0))) END  NULLS FIRST, ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) ASC;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))IS(((vt1.c0)AND(vt0.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))!=((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))IS(((vt1.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))<>((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))IS(((vt1.c0)AND(vt0.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))!=((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))IS(((vt1.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))<>((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))IS(((vt1.c0)AND(vt0.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0))!=((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('-307769554');
SELECT SUM(count) FROM (SELECT (('-307769554') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-307769554');
SELECT SUM(count) FROM (SELECT (('-307769554') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-307769554');
SELECT * FROM vt0 WHERE (((('O4' IN (vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((('O4' IN (vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('O4' IN (vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((('O4' IN (vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('O4' IN (vt0.c0, vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT CAST(vt0.c0 AS TEXT), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(vt0.c0 AS TEXT), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT CAST(vt0.c0 AS TEXT), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(vt0.c0 AS TEXT), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT CAST(vt0.c0 AS TEXT), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (NOT (vt1.c0));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (NOT (vt1.c0));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (NOT (vt1.c0));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((~ ('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ ('')) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((~ ('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ ('')) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((~ ('')) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), '')) AND ((((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), '')) AND ((((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), '')) AND ((((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), '')) AND ((((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)), '')) AND ((((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c0) IS TRUE))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c0) IS TRUE))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((((vt0.c0) IS TRUE))OR(vt0.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) IS FALSE))) AND (((('1473107731')AND(vt0.c0)), 1087381537, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) IS FALSE))) AND (((('1473107731')AND(vt0.c0)), 1087381537, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) IS FALSE))) AND (((('1473107731')AND(vt0.c0)), 1087381537, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) IS FALSE))) AND (((('1473107731')AND(vt0.c0)), 1087381537, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), vt0.c0, ((vt0.c0) IS FALSE))) AND (((('1473107731')AND(vt0.c0)), 1087381537, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY (((NOT (vt0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((- (QUOTE(vt0.c0)))) ORDER BY 1.087381537E9 ASC  NULLS LAST, TRIM((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((- (QUOTE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 1.087381537E9 ASC  NULLS LAST, TRIM((vt0.c0 IN ())));
SELECT * FROM vt0 WHERE ((- (QUOTE(vt0.c0)))) ORDER BY 1.087381537E9 ASC  NULLS LAST, TRIM((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((- (QUOTE(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 1.087381537E9 ASC  NULLS LAST, TRIM((vt0.c0 IN ())));
SELECT * FROM vt0 WHERE ((- (QUOTE(vt0.c0)))) ORDER BY 1.087381537E9 ASC  NULLS LAST, TRIM((vt0.c0 IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))>>(NULLIF('q~(*&p8sz', vt1.c0)))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt1.c0))))>>(NULLIF('q~(*&p8sz', vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))>>(NULLIF('q~(*&p8sz', vt1.c0)))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt1.c0))))>>(NULLIF('q~(*&p8sz', vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))>>(NULLIF('q~(*&p8sz', vt1.c0)))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (vt0.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (LOWER(NULL)))) ORDER BY ((((((((TYPEOF(vt1.c0))OR(vt1.c0)))OR((((vt1.c0))>((vt1.c0))))))OR(((NULL)IS(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((TYPEOF(vt1.c0))OR(vt1.c0)))OR((((vt1.c0))>((vt1.c0))))))OR(((NULL)IS(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (LOWER(NULL)))) ORDER BY ((((((((TYPEOF(vt1.c0))OR(vt1.c0)))OR((((vt1.c0))>((vt1.c0))))))OR(((NULL)IS(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((TYPEOF(vt1.c0))OR(vt1.c0)))OR((((vt1.c0))>((vt1.c0))))))OR(((NULL)IS(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (LOWER(NULL)))) ORDER BY ((((((((TYPEOF(vt1.c0))OR(vt1.c0)))OR((((vt1.c0))>((vt1.c0))))))OR(((NULL)IS(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('561029496', vt0.c0, vt0.c0))))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR('-1088422571')) END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('561029496', vt0.c0, vt0.c0))))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR('-1088422571')) END);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('561029496', vt0.c0, vt0.c0))))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR('-1088422571')) END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('561029496', vt0.c0, vt0.c0))))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR('-1088422571')) END);
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('561029496', vt0.c0, vt0.c0))))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR('-1088422571')) END;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)+('1170779545')))) AND ((((vt1.c0)<(vt1.c0)))))) ORDER BY (~ ((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt1.c0)+('1170779545')))) AND ((((vt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)+('1170779545')))) AND ((((vt1.c0)<(vt1.c0)))))) ORDER BY (~ ((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt1.c0)+('1170779545')))) AND ((((vt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)+('1170779545')))) AND ((((vt1.c0)<(vt1.c0)))))) ORDER BY (~ ((vt1.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c0) IS TRUE))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0))<=((vt0.c0)))) ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN (((vt1.c0, '-2073540443', vt1.c0)) BETWEEN ((-1276596514, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) END DESC, IFNULL(((vt1.c0) BETWEEN (vt1.c0) AND (0.1588812583701078)), ((vt0.c0)<=(vt1.c0)))  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN (((vt1.c0, '-2073540443', vt1.c0)) BETWEEN ((-1276596514, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) END DESC, IFNULL(((vt1.c0) BETWEEN (vt1.c0) AND (0.1588812583701078)), ((vt0.c0)<=(vt1.c0)))  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0))<=((vt0.c0)))) ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN (((vt1.c0, '-2073540443', vt1.c0)) BETWEEN ((-1276596514, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) END DESC, IFNULL(((vt1.c0) BETWEEN (vt1.c0) AND (0.1588812583701078)), ((vt0.c0)<=(vt1.c0)))  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN (((vt1.c0, '-2073540443', vt1.c0)) BETWEEN ((-1276596514, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) END DESC, IFNULL(((vt1.c0) BETWEEN (vt1.c0) AND (0.1588812583701078)), ((vt0.c0)<=(vt1.c0)))  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0))<=((vt0.c0)))) ORDER BY CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN (((vt1.c0, '-2073540443', vt1.c0)) BETWEEN ((-1276596514, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) END DESC, IFNULL(((vt1.c0) BETWEEN (vt1.c0) AND (0.1588812583701078)), ((vt0.c0)<=(vt1.c0)))  NULLS FIRST, ((vt0.c0) ISNULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (INSTR(vt1.c0 COLLATE NOCASE, ((vt1.c0)IS NOT(vt0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt1.c0 COLLATE NOCASE, ((vt1.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL);
SELECT * FROM vt0, vt1 WHERE (INSTR(vt1.c0 COLLATE NOCASE, ((vt1.c0)IS NOT(vt0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt1.c0 COLLATE NOCASE, ((vt1.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL);
SELECT * FROM vt0, vt1 WHERE (INSTR(vt1.c0 COLLATE NOCASE, ((vt1.c0)IS NOT(vt0.c0)))) ORDER BY NULL;
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN ((x'91b5') IS TRUE) THEN x'' ELSE (vt1.c0 IN (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>>(vt0.c0))  WHEN ((x'91b5') IS TRUE) THEN x'' ELSE (vt1.c0 IN (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN ((x'91b5') IS TRUE) THEN x'' ELSE (vt1.c0 IN (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)>>(vt0.c0))  WHEN ((x'91b5') IS TRUE) THEN x'' ELSE (vt1.c0 IN (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c0)>>(vt0.c0))  WHEN ((x'91b5') IS TRUE) THEN x'' ELSE (vt1.c0 IN (vt1.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(json_quote(vt0.c0))))OR(((vt1.c0) NOTNULL))))OR(0.5662304455471395)))OR(UNICODE(vt1.c0))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY)!=(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(json_quote(vt0.c0))))OR(((vt1.c0) NOTNULL))))OR(0.5662304455471395)))OR(UNICODE(vt1.c0))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY)<>(vt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(json_quote(vt0.c0))))OR(((vt1.c0) NOTNULL))))OR(0.5662304455471395)))OR(UNICODE(vt1.c0))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY)!=(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))IS NOT(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(json_quote(vt0.c0))))OR(((vt1.c0) NOTNULL))))OR(0.5662304455471395)))OR(UNICODE(vt1.c0))) ASC  NULLS LAST, ((vt0.c0 COLLATE BINARY)<>(vt0.c0)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.5441595503570704, vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.5441595503570704, vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.5441595503570704, vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.5441595503570704, vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.5441595503570704, vt0.c0))) AS INTEGER));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND (((((vt1.c0))!=((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND (((((vt1.c0))!=((vt1.c0))))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND (((((vt1.c0))!=((vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND (((((vt1.c0))!=((vt1.c0))))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND (((((vt1.c0))!=((vt1.c0)))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) ELSE ((vt0.c0) IS TRUE) END);
SELECT * FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) ORDER BY ((json_array_length(vt1.c0, vt0.c0)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json_array_length(vt1.c0, vt0.c0)) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) ORDER BY ((json_array_length(vt1.c0, vt0.c0)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json_array_length(vt1.c0, vt0.c0)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((x'') BETWEEN (vt1.c0) AND (NULL)))LIKE(UPPER(vt1.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (vt1.c0) AND (NULL)))LIKE(UPPER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((x'') BETWEEN (vt1.c0) AND (NULL)))LIKE(UPPER(vt1.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') BETWEEN (vt1.c0) AND (NULL)))LIKE(UPPER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((x'') BETWEEN (vt1.c0) AND (NULL)))LIKE(UPPER(vt1.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((UNICODE(vt0.c0))||(UNLIKELY(DISTINCT vt0.c0)))  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((UNICODE(vt0.c0))||(UNLIKELY(DISTINCT vt0.c0)))  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((UNICODE(vt0.c0))||(UNLIKELY(DISTINCT vt0.c0)))  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((UNICODE(vt0.c0))||(UNLIKELY(DISTINCT vt0.c0)))  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((UNICODE(vt0.c0))||(UNLIKELY(DISTINCT vt0.c0)))  NULLS LAST, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (DATETIME(vt1.c0, ABS(DISTINCT vt1.c0), COALESCE(vt1.c0, vt0.c0, vt1.c0, vt1.c0))) ORDER BY (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(vt1.c0, ABS(DISTINCT vt1.c0), COALESCE(vt1.c0, vt0.c0, vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (DATETIME(vt1.c0, ABS(DISTINCT vt1.c0), COALESCE(vt1.c0, vt0.c0, vt1.c0, vt1.c0))) ORDER BY (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(vt1.c0, ABS(DISTINCT vt1.c0), COALESCE(vt1.c0, vt0.c0, vt1.c0, vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (DATETIME(vt1.c0, ABS(DISTINCT vt1.c0), COALESCE(vt1.c0, vt0.c0, vt1.c0, vt1.c0))) ORDER BY (CAST(vt1.c0 AS BLOB) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))LIKE(0.4035918720705459)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))LIKE(0.4035918720705459))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))LIKE(0.4035918720705459)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))LIKE(0.4035918720705459))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))LIKE(0.4035918720705459)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (UNICODE(((0.2368146125246089) NOT NULL))) ORDER BY CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((vt0.c0) NOTNULL) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((0.2368146125246089) NOT NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((vt0.c0) NOTNULL) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (UNICODE(((0.2368146125246089) NOT NULL))) ORDER BY CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((vt0.c0) NOTNULL) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((0.2368146125246089) NOT NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((vt0.c0) NOTNULL) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (UNICODE(((0.2368146125246089) NOT NULL))) ORDER BY CASE WHEN (vt0.c0 IN (vt1.c0)) THEN ((vt0.c0) NOTNULL) ELSE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE '748533555'  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)-(-1798864389)));
SELECT SUM(count) FROM (SELECT ((((CASE '748533555'  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)-(-1798864389))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE '748533555'  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)-(-1798864389)));
SELECT SUM(count) FROM (SELECT ((((CASE '748533555'  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)-(-1798864389))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE '748533555'  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)-(-1798864389)));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))) AND ((CAST(vt1.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))) AND ((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))) AND ((CAST(vt1.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))) AND ((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(NULL)))) AND ((CAST(vt1.c0 AS INTEGER)))));
SELECT COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), (+ (NULL))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), (+ (NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), (+ (NULL))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), (+ (NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT CAST(vt1.c0 AS TEXT), (+ (NULL))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((NOT ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((NOT ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((NOT ((+ (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0)>=(0.3791162163879245)) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0)>=(0.3791162163879245)) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0)>=(0.3791162163879245)) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0)>=(0.3791162163879245)) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN UNLIKELY(vt1.c0) THEN ((vt1.c0)>=(0.3791162163879245)) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))IS(vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))IS(vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) NOT NULL))IS(vt0.c0)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN json_remove(vt1.c0, vt0.c0) THEN NULL WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)!=(vt1.c0)) WHEN (~ (vt1.c0)) THEN (((vt1.c0))>=((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((vt0.c0)||(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS REAL)  WHEN json_remove(vt1.c0, vt0.c0) THEN NULL WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)<>(vt1.c0)) WHEN (~ (vt1.c0)) THEN (((vt1.c0))>=((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((vt0.c0)||(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN json_remove(vt1.c0, vt0.c0) THEN NULL WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)!=(vt1.c0)) WHEN (~ (vt1.c0)) THEN (((vt1.c0))>=((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((vt0.c0)||(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt1.c0 AS REAL)  WHEN json_remove(vt1.c0, vt0.c0) THEN NULL WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0) IS FALSE) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)<>(vt1.c0)) WHEN (~ (vt1.c0)) THEN (((vt1.c0))>=((vt0.c0))) WHEN (- (vt0.c0)) THEN ((vt1.c0) IS FALSE) ELSE ((vt0.c0)||(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c0)))|(((vt1.c0) NOTNULL))) WHERE (((((vt0.c0)&(vt0.c0))) NOT NULL)) ORDER BY (- (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c0)))|(((vt1.c0) NOTNULL))) ORDER BY (- (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c0)))|(((vt1.c0) NOTNULL))) WHERE (((((vt0.c0)&(vt0.c0))) NOT NULL)) ORDER BY (- (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c0)))|(((vt1.c0) NOTNULL))) ORDER BY (- (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c0)))|(((vt1.c0) NOTNULL))) WHERE (((((vt0.c0)&(vt0.c0))) NOT NULL)) ORDER BY (- (TRIM(DISTINCT vt1.c0, vt0.c0)))  NULLS FIRST;
