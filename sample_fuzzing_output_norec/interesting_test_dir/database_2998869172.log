-- Time: 2024/06/09 15:12:52
-- Database: database72
-- Database version: 3.40.0
-- seed value: 2998869172
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, tokenize = "porter ascii"); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, languageid="lid", notindexed=c0); -- 0ms;
UPDATE vt0 SET (c0)=(0.6077656467056473) WHERE '0.6077656467056473'; -- 0ms;
REINDEX; -- 1ms;
DELETE FROM vt1 WHERE (((vt1.c0)IS(x'')) IN ()); -- 0ms;
UPDATE OR IGNORE vt1 SET (lid)=(0.6530562475875995); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (x'1d25'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=260914936,8');\n; -- 0ms;
UPDATE OR REPLACE vt1 SET c0=0xf8d3ef8, c0='kㅊ'; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 829591413); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('') WHERE (((vt0.c0 IN (vt0.c1)))GLOB(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('-1001049782'); -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE OR ABORT vt1 SET c0=NULL; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.16202735071094465), (x''), (''); -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=('423579960') WHERE ((0.7599276705886814)&(((((vt1.c0)OR(vt1.c0)))AND(vt1.lid)))); -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0)=(NULL, NULL); -- 0ms;
UPDATE vt0 SET (c0, c1)=(x'', x'') WHERE ((x'') NOT BETWEEN (((vt0.c1)IS NOT(vt0.c0))) AND (vt0.c0 COLLATE NOCASE)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '13731'); -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE vt1 SET lid=x''; -- 0ms;
UPDATE OR REPLACE vt2 SET (c0, c2)=(0Xffffffffaa0d2577, '') WHERE ((NOT (vt2.c0)) IN ()); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET lid=x'' WHERE ((((vt1.lid)>(vt1.c0)))OR('423579960')); -- 0ms;
UPDATE OR FAIL vt1 SET lid=x'', c0=x'' WHERE vt1.lid; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
INSERT INTO vt2(vt2) VALUES('merge=-1657468686,4');\n; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('automerge', 11); -- 0ms;
INSERT OR FAIL INTO vt0(c0, c1) VALUES (x'', '!'); -- 0ms;
INSERT OR IGNORE INTO vt2(c1) VALUES (0.657143855099755); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(0x193f5138) WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<=((~ (vt0.c1)))); -- 0ms;
INSERT OR IGNORE INTO vt2(c1) VALUES ('-1657468686'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL), (0.3730734810335531), (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0X35aa30b7, 0.5357108411996511); -- 0ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 4ms;
UPDATE OR ROLLBACK vt1 SET lid=NULL WHERE (NOT ((vt1.c0 IN ()))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=260914936,7');\n; -- 0ms;
INSERT INTO vt2(vt2) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt1 SET lid=NULL WHERE UNLIKELY(((vt1.c0)<(-1657468686))); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR ABORT vt1 SET (c0, c0)=(NULL, 'q*'); -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES (-1.441979017E9, x'0139', ''); -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c1, c1)=('X/䡕d', 0xffffffffa8ff5232, 0.9158378052887924); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='EV6Hz', c1=-1.001049782E9 WHERE ((HEX(0.07531847156147731)) ISNULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt2(c1, c0, c2) VALUES (0.19737464286853446, x'', NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt2', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', '900346039', '0.5357108411996511', 260914936, 0.0628261800247677), (NULL, NULL, '', 0.27772196680993866, NULL), (0.5357108411996511, NULL, NULL, x'57ee', x''); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c1) VALUES (-1617915574, 0x241f9385), (0.5357108411996511, x''), ('Oy2\nv', 0xffffffffa8ff5232), (x'', x''), (NULL, 0.5488897861675438); -- 1ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '55456'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE vt1 SET c0=x'', c0=0.8000968486953332 WHERE ((('EV6Hz')) BETWEEN ((vt1.lid)) AND ((0x738b72c9))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD('-1441979017' COLLATE RTRIM, 0.48061840385849497); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT NTH_VALUE((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))+(CASE rt0.c0  WHEN rt0.c3 THEN NULL ELSE rt0.c0 END)), ((rt0.c1)&(rt0.c4)) COLLATE RTRIM) OVER () FROM rt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE IFNULL(CAST(vt0.c0 AS TEXT), vt0.c0); -- 5ms;
INSERT OR ABORT INTO rt0(c4, c3) VALUES (x'', 0.23721400733959153); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2132051522); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 14); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
SELECT ALL COUNT(*) FROM rt0 WHERE (CHANGES()) ORDER BY (NOT (((rt0.c2)%(rt0.c0)))), rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2)%(rt0.c0)))), rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CHANGES()) ORDER BY (NOT (((rt0.c2)%(rt0.c0)))), rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c2)%(rt0.c0)))), rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CHANGES()) ORDER BY (NOT (((rt0.c2)%(rt0.c0)))), rt0.c1  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.lid))<((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.lid))<((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.lid))<((vt0.c0))) IN ()));
SELECT * FROM rt0 WHERE (0Xffffffffdea48d0c);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffdea48d0c) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0Xffffffffdea48d0c);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffdea48d0c) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0Xffffffffdea48d0c);
SELECT ALL COUNT(*) FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c2)))AND(vt2.c2)))AND(vt1.lid)) COLLATE RTRIM WHERE (CAST(((((vt0.c0)OR(vt2.c1)))AND(vt1.lid)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt2.c1)))AND(vt1.lid)) AS INTEGER)) IS TRUE)  as count FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c2)))AND(vt2.c2)))AND(vt1.lid)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c2)))AND(vt2.c2)))AND(vt1.lid)) COLLATE RTRIM WHERE (CAST(((((vt0.c0)OR(vt2.c1)))AND(vt1.lid)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt2.c1)))AND(vt1.lid)) AS INTEGER)) IS TRUE)  as count FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c2)))AND(vt2.c2)))AND(vt1.lid)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((((((vt0.c1)OR(vt0.c1)))AND(vt2.c2)))AND(vt2.c2)))AND(vt1.lid)) COLLATE RTRIM WHERE (CAST(((((vt0.c0)OR(vt2.c1)))AND(vt1.lid)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c1))) BETWEEN ((((vt0.c0))>((vt0.c1)))) AND (((vt0.c1)&(vt0.c1))))) ORDER BY ((LIKELIHOOD(vt0.c0, 0.08510081116797863))%(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, TOTAL_CHANGES()  NULLS LAST, (('' IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c1))) BETWEEN ((((vt0.c0))>((vt0.c1)))) AND (((vt0.c1)&(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(vt0.c0, 0.08510081116797863))%(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, TOTAL_CHANGES()  NULLS LAST, (('' IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c1))) BETWEEN ((((vt0.c0))>((vt0.c1)))) AND (((vt0.c1)&(vt0.c1))))) ORDER BY ((LIKELIHOOD(vt0.c0, 0.08510081116797863))%(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, TOTAL_CHANGES()  NULLS LAST, (('' IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c1))) BETWEEN ((((vt0.c0))>((vt0.c1)))) AND (((vt0.c1)&(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(vt0.c0, 0.08510081116797863))%(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, TOTAL_CHANGES()  NULLS LAST, (('' IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c1))) BETWEEN ((((vt0.c0))>((vt0.c1)))) AND (((vt0.c1)&(vt0.c1))))) ORDER BY ((LIKELIHOOD(vt0.c0, 0.08510081116797863))%(vt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, TOTAL_CHANGES()  NULLS LAST, (('' IN ()) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt2 WHERE ((((+ (vt2.c2)))>=((('-1698768806')<(vt2.c0))))) ORDER BY vt2.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt2.c2)))>=((('-1698768806')<(vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY vt2.c2  NULLS LAST);
SELECT COUNT(*) FROM vt2 WHERE ((((+ (vt2.c2)))>=((('-1698768806')<(vt2.c0))))) ORDER BY vt2.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt2.c2)))>=((('-1698768806')<(vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY vt2.c2  NULLS LAST);
SELECT COUNT(*) FROM vt2 WHERE ((((+ (vt2.c2)))>=((('-1698768806')<(vt2.c0))))) ORDER BY vt2.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, vt2 FULL OUTER JOIN vt0 ON CASE WHEN ((vt2.c1) BETWEEN (rt0.c4) AND (rt0.c4)) THEN highlight(rt0.c3, vt2.c2, rt0.c1, rt0.c4) END WHERE (TYPEOF(((((vt1.c0)AND(rt0.c4)))AND(vt1.lid))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((vt1.c0)AND(rt0.c4)))AND(vt1.lid)))) IS TRUE)  as count FROM rt0, vt1, vt2 FULL OUTER JOIN vt0 ON CASE WHEN ((vt2.c1) BETWEEN (rt0.c4) AND (rt0.c4)) THEN highlight(rt0.c3, vt2.c2, rt0.c1, rt0.c4) END);
SELECT ALL COUNT(*) FROM rt0, vt1, vt2 FULL OUTER JOIN vt0 ON CASE WHEN ((vt2.c1) BETWEEN (rt0.c4) AND (rt0.c4)) THEN highlight(rt0.c3, vt2.c2, rt0.c1, rt0.c4) END WHERE (TYPEOF(((((vt1.c0)AND(rt0.c4)))AND(vt1.lid))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((vt1.c0)AND(rt0.c4)))AND(vt1.lid)))) IS TRUE)  as count FROM rt0, vt1, vt2 FULL OUTER JOIN vt0 ON CASE WHEN ((vt2.c1) BETWEEN (rt0.c4) AND (rt0.c4)) THEN highlight(rt0.c3, vt2.c2, rt0.c1, rt0.c4) END);
SELECT ALL COUNT(*) FROM rt0, vt1, vt2 FULL OUTER JOIN vt0 ON CASE WHEN ((vt2.c1) BETWEEN (rt0.c4) AND (rt0.c4)) THEN highlight(rt0.c3, vt2.c2, rt0.c1, rt0.c4) END WHERE (TYPEOF(((((vt1.c0)AND(rt0.c4)))AND(vt1.lid))));
SELECT * FROM vt1 WHERE (((((((((vt1.lid)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid END)))AND((vt1.c0 IN (vt1.c0, vt1.lid, vt1.lid)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN NULL END)))AND(load_extension('900346039')))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))==(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, 'oy2\nv'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.lid)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid END)))AND((vt1.c0 IN (vt1.c0, vt1.lid, vt1.lid)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN NULL END)))AND(load_extension('900346039')))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))=(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, 'oy2\nv'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((vt1.lid)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid END)))AND((vt1.c0 IN (vt1.c0, vt1.lid, vt1.lid)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN NULL END)))AND(load_extension('900346039')))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))==(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, 'oy2\nv'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.lid)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid END)))AND((vt1.c0 IN (vt1.c0, vt1.lid, vt1.lid)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN NULL END)))AND(load_extension('900346039')))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))=(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, 'oy2\nv'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((vt1.lid)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid END)))AND((vt1.c0 IN (vt1.c0, vt1.lid, vt1.lid)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN NULL END)))AND(load_extension('900346039')))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))==(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, 'oy2\nv'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN rt0 ON ((RTRIM(vt0.c1))GLOB(CASE WHEN rt0.c2 THEN vt1.lid END)) CROSS JOIN vt2 ON ((((vt0.c0 COLLATE BINARY)OR(((rt0.c1) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((RTRIM(vt0.c1))GLOB(CASE WHEN rt0.c2 THEN vt1.lid END)) CROSS JOIN vt2 ON ((((vt0.c0 COLLATE BINARY)OR(((rt0.c1) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN rt0 ON ((RTRIM(vt0.c1))GLOB(CASE WHEN rt0.c2 THEN vt1.lid END)) CROSS JOIN vt2 ON ((((vt0.c0 COLLATE BINARY)OR(((rt0.c1) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((RTRIM(vt0.c1))GLOB(CASE WHEN rt0.c2 THEN vt1.lid END)) CROSS JOIN vt2 ON ((((vt0.c0 COLLATE BINARY)OR(((rt0.c1) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN rt0 ON ((RTRIM(vt0.c1))GLOB(CASE WHEN rt0.c2 THEN vt1.lid END)) CROSS JOIN vt2 ON ((((vt0.c0 COLLATE BINARY)OR(((rt0.c1) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))) WHERE (vt1.c0);
SELECT * FROM vt1, vt2, vt0, rt0 WHERE ((((vt2.c0)) NOT BETWEEN ((CAST(vt1.lid AS INTEGER))) AND ((NULL COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0)) NOT BETWEEN ((CAST(vt1.lid AS INTEGER))) AND ((NULL COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt2, vt0, rt0);
SELECT * FROM vt1, vt2, vt0, rt0 WHERE ((((vt2.c0)) NOT BETWEEN ((CAST(vt1.lid AS INTEGER))) AND ((NULL COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0)) NOT BETWEEN ((CAST(vt1.lid AS INTEGER))) AND ((NULL COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt2, vt0, rt0);
SELECT * FROM vt1, vt2, vt0, rt0 WHERE ((((vt2.c0)) NOT BETWEEN ((CAST(vt1.lid AS INTEGER))) AND ((NULL COLLATE NOCASE))));
SELECT * FROM vt2, rt0, vt0, vt1 WHERE (CAST((~ (0.5559601199970446)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (0.5559601199970446)) AS NUMERIC)) IS TRUE)  as count FROM vt2, rt0, vt0, vt1);
SELECT * FROM vt2, rt0, vt0, vt1 WHERE (CAST((~ (0.5559601199970446)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (0.5559601199970446)) AS NUMERIC)) IS TRUE)  as count FROM vt2, rt0, vt0, vt1);
SELECT * FROM vt2, rt0, vt0, vt1 WHERE (CAST((~ (0.5559601199970446)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE ((json_array_length('xM/') IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_array_length('xM/') IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((json_array_length('xM/') IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_array_length('xM/') IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((json_array_length('xM/') IN ()));
SELECT COUNT(*) FROM vt1, rt0, vt2 WHERE (LENGTH(((vt2.c1) BETWEEN (rt0.c3) AND (vt2.c2)))) ORDER BY (+ (rt0.c4)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt2.c1) BETWEEN (rt0.c3) AND (vt2.c2)))) IS TRUE)  as count FROM vt1, rt0, vt2 ORDER BY (+ (rt0.c4)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt2 WHERE (LENGTH(((vt2.c1) BETWEEN (rt0.c3) AND (vt2.c2)))) ORDER BY (+ (rt0.c4)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt2.c1) BETWEEN (rt0.c3) AND (vt2.c2)))) IS TRUE)  as count FROM vt1, rt0, vt2 ORDER BY (+ (rt0.c4)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt2 WHERE (LENGTH(((vt2.c1) BETWEEN (rt0.c3) AND (vt2.c2)))) ORDER BY (+ (rt0.c4)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM vt1, rt0, vt0, vt2 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt2.c2)), STRFTIME(rt0.c4, rt0.c1, vt0.c1), json_remove(vt1.lid, x'')))=(((+ (rt0.c1)), ((rt0.c4) IS TRUE), CAST(rt0.c3 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt2.c2)), STRFTIME(rt0.c4, rt0.c1, vt0.c1), json_remove(vt1.lid, x'')))==(((+ (rt0.c1)), ((rt0.c4) IS TRUE), CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM vt1, rt0, vt0, vt2);
SELECT * FROM vt1, rt0, vt0, vt2 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt2.c2)), STRFTIME(rt0.c4, rt0.c1, vt0.c1), json_remove(vt1.lid, x'')))=(((+ (rt0.c1)), ((rt0.c4) IS TRUE), CAST(rt0.c3 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt2.c2)), STRFTIME(rt0.c4, rt0.c1, vt0.c1), json_remove(vt1.lid, x'')))==(((+ (rt0.c1)), ((rt0.c4) IS TRUE), CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM vt1, rt0, vt0, vt2);
SELECT * FROM vt1, rt0, vt0, vt2 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt2.c2)), STRFTIME(rt0.c4, rt0.c1, vt0.c1), json_remove(vt1.lid, x'')))=(((+ (rt0.c1)), ((rt0.c4) IS TRUE), CAST(rt0.c3 AS BLOB)))));
SELECT * FROM vt2, vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT * FROM vt2, vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT * FROM vt2, vt0, vt1 WHERE (x'');
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.lid)|(vt1.lid)))) INNER JOIN vt2 ON (highlight(vt1.c0, NULL, 297612515, vt2.c0) IN ()) WHERE ((((vt2.c0 IN ()))>=(((vt1.lid)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0 IN ()))>=(((vt1.lid)%(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.lid)|(vt1.lid)))) INNER JOIN vt2 ON (highlight(vt1.c0, NULL, 297612515, vt2.c0) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.lid)|(vt1.lid)))) INNER JOIN vt2 ON (highlight(vt1.c0, NULL, 297612515, vt2.c0) IN ()) WHERE ((((vt2.c0 IN ()))>=(((vt1.lid)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0 IN ()))>=(((vt1.lid)%(vt1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.lid)|(vt1.lid)))) INNER JOIN vt2 ON (highlight(vt1.c0, NULL, 297612515, vt2.c0) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (NOT (((vt1.lid)|(vt1.lid)))) INNER JOIN vt2 ON (highlight(vt1.c0, NULL, 297612515, vt2.c0) IN ()) WHERE ((((vt2.c0 IN ()))>=(((vt1.lid)%(vt1.c0)))));
SELECT COUNT(*) FROM rt0, vt0, vt1, vt2 WHERE (((((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c3)))AND(vt2.c0)))AND(vt2.c1)))*(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt2.c1))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c3)))AND(vt2.c0)))AND(vt2.c1)))*(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt2.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1, vt2 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1, vt2 WHERE (((((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c3)))AND(vt2.c0)))AND(vt2.c1)))*(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt2.c1))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c3)))AND(vt2.c0)))AND(vt2.c1)))*(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt2.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1, vt2 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1, vt2 WHERE (((((((((((rt0.c4)AND(vt1.c0)))OR(rt0.c3)))AND(vt2.c0)))AND(vt2.c1)))*(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt2.c1))))) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt2 WHERE ((- (0.4232408718385189))) ORDER BY ((((rt0.c0 IN ())))>=(('297612515'))), ((CAST(0.9551021556900109 AS TEXT))>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (0.4232408718385189))) IS TRUE)  as count FROM vt0, rt0, vt2 ORDER BY ((((rt0.c0 IN ())))>=(('297612515'))), ((CAST(0.9551021556900109 AS TEXT))>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ASC);
SELECT ALL * FROM vt0, rt0, vt2 WHERE ((- (0.4232408718385189))) ORDER BY ((((rt0.c0 IN ())))>=(('297612515'))), ((CAST(0.9551021556900109 AS TEXT))>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (0.4232408718385189))) IS TRUE)  as count FROM vt0, rt0, vt2 ORDER BY ((((rt0.c0 IN ())))>=(('297612515'))), ((CAST(0.9551021556900109 AS TEXT))>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ASC);
SELECT ALL * FROM vt0, rt0, vt2 WHERE ((- (0.4232408718385189))) ORDER BY ((((rt0.c0 IN ())))>=(('297612515'))), ((CAST(0.9551021556900109 AS TEXT))>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)) ASC;
SELECT ALL * FROM vt2, vt1, rt0, vt0 WHERE ((CASE vt2.c1  WHEN vt2.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.lid WHEN rt0.c2 THEN x'' END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c1  WHEN vt2.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.lid WHEN rt0.c2 THEN x'' END IN ())) IS TRUE)  as count FROM vt2, vt1, rt0, vt0);
SELECT ALL * FROM vt2, vt1, rt0, vt0 WHERE ((CASE vt2.c1  WHEN vt2.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.lid WHEN rt0.c2 THEN x'' END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c1  WHEN vt2.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.lid WHEN rt0.c2 THEN x'' END IN ())) IS TRUE)  as count FROM vt2, vt1, rt0, vt0);
SELECT ALL * FROM vt2, vt1, rt0, vt0 WHERE ((CASE vt2.c1  WHEN vt2.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt1.lid WHEN rt0.c2 THEN x'' END IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((+ (vt0.c0)))AND(((rt0.c0)AND(rt0.c3)))))OR(rt0.c4))) ORDER BY CASE TRIM(rt0.c2)  WHEN 0.6102676524179533 THEN (~ (rt0.c1)) WHEN ((vt0.c1)>>(rt0.c0)) THEN (vt0.c0 IN (rt0.c0)) WHEN vt0.c1 THEN (~ (rt0.c1)) ELSE (('423579960')AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(((rt0.c0)AND(rt0.c3)))))OR(rt0.c4))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE TRIM(rt0.c2)  WHEN 0.6102676524179533 THEN (~ (rt0.c1)) WHEN ((vt0.c1)>>(rt0.c0)) THEN (vt0.c0 IN (rt0.c0)) WHEN vt0.c1 THEN (~ (rt0.c1)) ELSE (('423579960')AND(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((+ (vt0.c0)))AND(((rt0.c0)AND(rt0.c3)))))OR(rt0.c4))) ORDER BY CASE TRIM(rt0.c2)  WHEN 0.6102676524179533 THEN (~ (rt0.c1)) WHEN ((vt0.c1)>>(rt0.c0)) THEN (vt0.c0 IN (rt0.c0)) WHEN vt0.c1 THEN (~ (rt0.c1)) ELSE (('423579960')AND(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))AND(((rt0.c0)AND(rt0.c3)))))OR(rt0.c4))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE TRIM(rt0.c2)  WHEN 0.6102676524179533 THEN (~ (rt0.c1)) WHEN ((vt0.c1)>>(rt0.c0)) THEN (vt0.c0 IN (rt0.c0)) WHEN vt0.c1 THEN (~ (rt0.c1)) ELSE (('423579960')AND(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((+ (vt0.c0)))AND(((rt0.c0)AND(rt0.c3)))))OR(rt0.c4))) ORDER BY CASE TRIM(rt0.c2)  WHEN 0.6102676524179533 THEN (~ (rt0.c1)) WHEN ((vt0.c1)>>(rt0.c0)) THEN (vt0.c0 IN (rt0.c0)) WHEN vt0.c1 THEN (~ (rt0.c1)) ELSE (('423579960')AND(vt0.c0)) END;
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CAST(NULL AS TEXT) WHERE (LIKELIHOOD(UPPER(DISTINCT rt0.c4), 0.6097971896243941)) ORDER BY (((- (rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(UPPER(DISTINCT rt0.c4), 0.6097971896243941)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CAST(NULL AS TEXT) ORDER BY (((- (rt0.c0))) IS TRUE));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CAST(NULL AS TEXT) WHERE (LIKELIHOOD(UPPER(DISTINCT rt0.c4), 0.6097971896243941)) ORDER BY (((- (rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(UPPER(DISTINCT rt0.c4), 0.6097971896243941)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CAST(NULL AS TEXT) ORDER BY (((- (rt0.c0))) IS TRUE));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CAST(NULL AS TEXT) WHERE (LIKELIHOOD(UPPER(DISTINCT rt0.c4), 0.6097971896243941)) ORDER BY (((- (rt0.c0))) IS TRUE);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE BINARY)||(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt1.lid COLLATE BINARY)||(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE BINARY)||(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt1.lid COLLATE BINARY)||(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.lid COLLATE BINARY)||(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt2 INNER JOIN vt1 ON (CAST(vt1.lid AS TEXT) IN (CAST(rt0.c0 AS NUMERIC), CASE WHEN vt2.c2 THEN rt0.c1 ELSE vt2.c1 END)) WHERE (((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c2)))AND(vt1.lid)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c2)IS NOT(rt0.c4)))&(((vt2.c1) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c2)))AND(vt1.lid)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt2 INNER JOIN vt1 ON (CAST(vt1.lid AS TEXT) IN (CAST(rt0.c0 AS NUMERIC), CASE WHEN vt2.c2 THEN rt0.c1 ELSE vt2.c1 END)) ORDER BY ((((rt0.c2)IS NOT(rt0.c4)))&(((vt2.c1) IS TRUE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt2 INNER JOIN vt1 ON (CAST(vt1.lid AS TEXT) IN (CAST(rt0.c0 AS NUMERIC), CASE WHEN vt2.c2 THEN rt0.c1 ELSE vt2.c1 END)) WHERE (((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c2)))AND(vt1.lid)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c2)IS NOT(rt0.c4)))&(((vt2.c1) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c2)))AND(vt1.lid)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt2 INNER JOIN vt1 ON (CAST(vt1.lid AS TEXT) IN (CAST(rt0.c0 AS NUMERIC), CASE WHEN vt2.c2 THEN rt0.c1 ELSE vt2.c1 END)) ORDER BY ((((rt0.c2)IS NOT(rt0.c4)))&(((vt2.c1) IS TRUE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt2 INNER JOIN vt1 ON (CAST(vt1.lid AS TEXT) IN (CAST(rt0.c0 AS NUMERIC), CASE WHEN vt2.c2 THEN rt0.c1 ELSE vt2.c1 END)) WHERE (((((((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c2)))AND(vt1.lid)))OR(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c2)IS NOT(rt0.c4)))&(((vt2.c1) IS TRUE))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN vt0 ON (~ (json_quote(vt0.c0))) WHERE (((vt0.c0) BETWEEN (CAST(0.8869668169101671 AS TEXT)) AND ((vt0.c1 IN (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(0.8869668169101671 AS TEXT)) AND ((vt0.c1 IN (vt1.lid))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (~ (json_quote(vt0.c0))));
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN vt0 ON (~ (json_quote(vt0.c0))) WHERE (((vt0.c0) BETWEEN (CAST(0.8869668169101671 AS TEXT)) AND ((vt0.c1 IN (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(0.8869668169101671 AS TEXT)) AND ((vt0.c1 IN (vt1.lid))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (~ (json_quote(vt0.c0))));
SELECT COUNT(*) FROM vt1 NOT INDEXED INNER JOIN vt0 ON (~ (json_quote(vt0.c0))) WHERE (((vt0.c0) BETWEEN (CAST(0.8869668169101671 AS TEXT)) AND ((vt0.c1 IN (vt1.lid)))));
SELECT ALL * FROM vt2, rt0, vt0 WHERE (CAST(((((vt0.c0)AND(rt0.c3)))AND(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(rt0.c3)))AND(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT ALL * FROM vt2, rt0, vt0 WHERE (CAST(((((vt0.c0)AND(rt0.c3)))AND(rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(rt0.c3)))AND(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT ALL * FROM vt2, rt0, vt0 WHERE (CAST(((((vt0.c0)AND(rt0.c3)))AND(rt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt2 ON (vt2.c1 IN (((rt0.c0) BETWEEN (vt2.c1) AND (vt1.c0)))) CROSS JOIN vt1 ON (((vt1.lid)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c1 ELSE vt1.lid END)) AND ((((((rt0.c2)OR(vt2.c0)))OR(rt0.c0))))) RIGHT OUTER JOIN rt0 ON ((vt2.c1) ISNULL) COLLATE RTRIM WHERE (('-1128314795' IN ())) ORDER BY (((vt0.c1) ISNULL) IN (CASE vt2.c1  WHEN vt1.c0 THEN rt0.c0 END)) DESC  NULLS FIRST, ((NULLIF(rt0.c2, vt1.c0))/(((vt2.c1) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((('-1128314795' IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON (vt2.c1 IN (((rt0.c0) BETWEEN (vt2.c1) AND (vt1.c0)))) CROSS JOIN vt1 ON (((vt1.lid)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c1 ELSE vt1.lid END)) AND ((((((rt0.c2)OR(vt2.c0)))OR(rt0.c0))))) RIGHT OUTER JOIN rt0 ON ((vt2.c1) ISNULL) COLLATE RTRIM ORDER BY (((vt0.c1) ISNULL) IN (CASE vt2.c1  WHEN vt1.c0 THEN rt0.c0 END)) DESC  NULLS FIRST, ((NULLIF(rt0.c2, vt1.c0))/(((vt2.c1) ISNULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt2 ON (vt2.c1 IN (((rt0.c0) BETWEEN (vt2.c1) AND (vt1.c0)))) CROSS JOIN vt1 ON (((vt1.lid)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c1 ELSE vt1.lid END)) AND ((((((rt0.c2)OR(vt2.c0)))OR(rt0.c0))))) RIGHT OUTER JOIN rt0 ON ((vt2.c1) ISNULL) COLLATE RTRIM WHERE (('-1128314795' IN ())) ORDER BY (((vt0.c1) ISNULL) IN (CASE vt2.c1  WHEN vt1.c0 THEN rt0.c0 END)) DESC  NULLS FIRST, ((NULLIF(rt0.c2, vt1.c0))/(((vt2.c1) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((('-1128314795' IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON (vt2.c1 IN (((rt0.c0) BETWEEN (vt2.c1) AND (vt1.c0)))) CROSS JOIN vt1 ON (((vt1.lid)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c1 ELSE vt1.lid END)) AND ((((((rt0.c2)OR(vt2.c0)))OR(rt0.c0))))) RIGHT OUTER JOIN rt0 ON ((vt2.c1) ISNULL) COLLATE RTRIM ORDER BY (((vt0.c1) ISNULL) IN (CASE vt2.c1  WHEN vt1.c0 THEN rt0.c0 END)) DESC  NULLS FIRST, ((NULLIF(rt0.c2, vt1.c0))/(((vt2.c1) ISNULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((x'6d7b')AND(vt0.c1)))AND(vt0.c0))) IS TRUE)) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'6d7b')AND(vt0.c1)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((x'6d7b')AND(vt0.c1)))AND(vt0.c0))) IS TRUE)) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'6d7b')AND(vt0.c1)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((x'6d7b')AND(vt0.c1)))AND(vt0.c0))) IS TRUE)) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt2 ON ((vt1.lid) BETWEEN (vt2.c2) AND (vt2.c0)) COLLATE NOCASE WHERE (((vt2.c1) BETWEEN (((vt1.c0)IS NOT(vt2.c2))) AND (vt1.lid))) ORDER BY (~ (((vt2.c2)IS(vt2.c1))))  NULLS FIRST, (((vt2.c1)) BETWEEN ((((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c1)))) AND ((((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt2.c1) BETWEEN (((vt1.c0)IS NOT(vt2.c2))) AND (vt1.lid))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt2 ON ((vt1.lid) BETWEEN (vt2.c2) AND (vt2.c0)) COLLATE NOCASE ORDER BY (~ (((vt2.c2)IS(vt2.c1))))  NULLS FIRST, (((vt2.c1)) BETWEEN ((((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c1)))) AND ((((NULL) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt2 ON ((vt1.lid) BETWEEN (vt2.c2) AND (vt2.c0)) COLLATE NOCASE WHERE (((vt2.c1) BETWEEN (((vt1.c0)IS NOT(vt2.c2))) AND (vt1.lid))) ORDER BY (~ (((vt2.c2)IS(vt2.c1))))  NULLS FIRST, (((vt2.c1)) BETWEEN ((((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c1)))) AND ((((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((vt2.c1) BETWEEN (((vt1.c0)IS NOT(vt2.c2))) AND (vt1.lid))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt2 ON ((vt1.lid) BETWEEN (vt2.c2) AND (vt2.c0)) COLLATE NOCASE ORDER BY (~ (((vt2.c2)IS(vt2.c1))))  NULLS FIRST, (((vt2.c1)) BETWEEN ((((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c1)))) AND ((((NULL) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt2 ON ((vt1.lid) BETWEEN (vt2.c2) AND (vt2.c0)) COLLATE NOCASE WHERE (((vt2.c1) BETWEEN (((vt1.c0)IS NOT(vt2.c2))) AND (vt1.lid))) ORDER BY (~ (((vt2.c2)IS(vt2.c1))))  NULLS FIRST, (((vt2.c1)) BETWEEN ((((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c1)))) AND ((((NULL) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT '', CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT '', CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT '', CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT '', CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT '', CAST(vt0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt2, vt1 NATURAL JOIN vt0 WHERE ((- ((((vt2.c1))<((vt2.c0)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((vt2.c1))<((vt2.c0)))))) IS TRUE)  as count FROM vt2, vt1 NATURAL JOIN vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt1 NATURAL JOIN vt0 WHERE ((- ((((vt2.c1))<((vt2.c0)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((vt2.c1))<((vt2.c0)))))) IS TRUE)  as count FROM vt2, vt1 NATURAL JOIN vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt1 NATURAL JOIN vt0 WHERE ((- ((((vt2.c1))<((vt2.c0)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt2 LEFT OUTER JOIN vt0 ON ((((((vt1.lid)AND(vt1.lid)))AND(vt2.c1))) BETWEEN ((- (vt0.c1))) AND (NULL)) WHERE ((((~ (vt2.c0))) BETWEEN ((vt2.c0 IN ())) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt2.c1, vt1.c0, vt1.c0))<((vt0.c1, vt1.lid, vt2.c0))) IN ());
SELECT SUM(count) FROM (SELECT (((((~ (vt2.c0))) BETWEEN ((vt2.c0 IN ())) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt1, vt2 LEFT OUTER JOIN vt0 ON ((((((vt1.lid)AND(vt1.lid)))AND(vt2.c1))) BETWEEN ((- (vt0.c1))) AND (NULL)) ORDER BY ((((vt2.c1, vt1.c0, vt1.c0))<((vt0.c1, vt1.lid, vt2.c0))) IN ()));
SELECT COUNT(*) FROM vt1, vt2 LEFT OUTER JOIN vt0 ON ((((((vt1.lid)AND(vt1.lid)))AND(vt2.c1))) BETWEEN ((- (vt0.c1))) AND (NULL)) WHERE ((((~ (vt2.c0))) BETWEEN ((vt2.c0 IN ())) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt2.c1, vt1.c0, vt1.c0))<((vt0.c1, vt1.lid, vt2.c0))) IN ());
SELECT SUM(count) FROM (SELECT (((((~ (vt2.c0))) BETWEEN ((vt2.c0 IN ())) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt1, vt2 LEFT OUTER JOIN vt0 ON ((((((vt1.lid)AND(vt1.lid)))AND(vt2.c1))) BETWEEN ((- (vt0.c1))) AND (NULL)) ORDER BY ((((vt2.c1, vt1.c0, vt1.c0))<((vt0.c1, vt1.lid, vt2.c0))) IN ()));
SELECT COUNT(*) FROM vt1, vt2 LEFT OUTER JOIN vt0 ON ((((((vt1.lid)AND(vt1.lid)))AND(vt2.c1))) BETWEEN ((- (vt0.c1))) AND (NULL)) WHERE ((((~ (vt2.c0))) BETWEEN ((vt2.c0 IN ())) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt2.c1, vt1.c0, vt1.c0))<((vt0.c1, vt1.lid, vt2.c0))) IN ());
SELECT * FROM vt2, rt0 WHERE (((vt2.c2)GLOB(((rt0.c4) NOT BETWEEN (vt2.c2) AND (rt0.c4))))) ORDER BY (CASE vt2.c1  WHEN rt0.c3 THEN rt0.c4 END IN (CASE WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c4)|(rt0.c1)))) DESC, NULL  NULLS LAST, CAST(IFNULL(rt0.c4, rt0.c3) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((vt2.c2)GLOB(((rt0.c4) NOT BETWEEN (vt2.c2) AND (rt0.c4))))) IS TRUE)  as count FROM vt2, rt0 ORDER BY (CASE vt2.c1  WHEN rt0.c3 THEN rt0.c4 END IN (CASE WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c4)|(rt0.c1)))) DESC, NULL  NULLS LAST, CAST(IFNULL(rt0.c4, rt0.c3) AS TEXT) DESC);
SELECT * FROM vt2, rt0 WHERE (((vt2.c2)GLOB(((rt0.c4) NOT BETWEEN (vt2.c2) AND (rt0.c4))))) ORDER BY (CASE vt2.c1  WHEN rt0.c3 THEN rt0.c4 END IN (CASE WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c4)|(rt0.c1)))) DESC, NULL  NULLS LAST, CAST(IFNULL(rt0.c4, rt0.c3) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((vt2.c2)GLOB(((rt0.c4) NOT BETWEEN (vt2.c2) AND (rt0.c4))))) IS TRUE)  as count FROM vt2, rt0 ORDER BY (CASE vt2.c1  WHEN rt0.c3 THEN rt0.c4 END IN (CASE WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c4)|(rt0.c1)))) DESC, NULL  NULLS LAST, CAST(IFNULL(rt0.c4, rt0.c3) AS TEXT) DESC);
SELECT * FROM vt2, rt0 WHERE (((vt2.c2)GLOB(((rt0.c4) NOT BETWEEN (vt2.c2) AND (rt0.c4))))) ORDER BY (CASE vt2.c1  WHEN rt0.c3 THEN rt0.c4 END IN (CASE WHEN rt0.c3 THEN rt0.c1 END, ((rt0.c4)|(rt0.c1)))) DESC, NULL  NULLS LAST, CAST(IFNULL(rt0.c4, rt0.c3) AS TEXT) DESC;
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT json_array_length('', vt2.c2)) INNER JOIN vt2 ON CASE ('Kㅊ' IN ())  WHEN '' THEN (((rt0.c4))==((rt0.c0))) END WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT json_array_length('', vt2.c2)) INNER JOIN vt2 ON CASE ('Kㅊ' IN ())  WHEN '' THEN (((rt0.c4))=((rt0.c0))) END);
SELECT ALL * FROM rt0, vt1 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT json_array_length('', vt2.c2)) INNER JOIN vt2 ON CASE ('Kㅊ' IN ())  WHEN '' THEN (((rt0.c4))==((rt0.c0))) END WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT json_array_length('', vt2.c2)) INNER JOIN vt2 ON CASE ('Kㅊ' IN ())  WHEN '' THEN (((rt0.c4))=((rt0.c0))) END);
SELECT * FROM vt0 INNER JOIN rt0 ON ((((('r0jA\r*+6') NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((rt0.c1 IN (rt0.c0))))) FULL OUTER JOIN vt2 ON (((- (vt0.c0)))+(x'')) WHERE ((~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((('r0jA\r*+6') NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((rt0.c1 IN (rt0.c0))))) FULL OUTER JOIN vt2 ON (((- (vt0.c0)))+(x'')));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((('r0jA\r*+6') NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((rt0.c1 IN (rt0.c0))))) FULL OUTER JOIN vt2 ON (((- (vt0.c0)))+(x'')) WHERE ((~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((('r0jA\r*+6') NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((rt0.c1 IN (rt0.c0))))) FULL OUTER JOIN vt2 ON (((- (vt0.c0)))+(x'')));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((('r0jA\r*+6') NOT BETWEEN (rt0.c1) AND (rt0.c1))))<(((rt0.c1 IN (rt0.c0))))) FULL OUTER JOIN vt2 ON (((- (vt0.c0)))+(x'')) WHERE ((~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))));
SELECT COUNT(*) FROM vt2 WHERE (CASE ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c2))  WHEN NULLIF(DISTINCT vt2.c2, vt2.c1) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c1)) END) ORDER BY ((((vt2.c2) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(vt2.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c2))  WHEN NULLIF(DISTINCT vt2.c2, vt2.c1) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c1)) END) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c2) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(vt2.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt2 WHERE (CASE ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c2))  WHEN NULLIF(DISTINCT vt2.c2, vt2.c1) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c1)) END) ORDER BY ((((vt2.c2) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(vt2.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c2))  WHEN NULLIF(DISTINCT vt2.c2, vt2.c1) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c1)) END) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c2) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(vt2.c0 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt2 WHERE (CASE ((vt2.c1) NOT BETWEEN (vt2.c1) AND (vt2.c2))  WHEN NULLIF(DISTINCT vt2.c2, vt2.c1) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c1)) END) ORDER BY ((((vt2.c2) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(vt2.c0 COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((- (rt0.c1)))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c2)))OR(vt0.c1)))OR(vt0.c1)))) CROSS JOIN vt2 ON CASE WHEN CASE WHEN '' THEN vt2.c1 END THEN '606049157' ELSE (((vt2.c0)) BETWEEN ((vt2.c1)) AND (('+Y'))) END WHERE (CASE WHEN ((x'') NOTNULL) THEN vt2.c0 COLLATE RTRIM END) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') NOTNULL) THEN vt2.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (+ (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c2)))OR(vt0.c1)))OR(vt0.c1)))) CROSS JOIN vt2 ON CASE WHEN CASE WHEN '' THEN vt2.c1 END THEN '606049157' ELSE (((vt2.c0)) BETWEEN ((vt2.c1)) AND (('+Y'))) END ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (+ (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c2)))OR(vt0.c1)))OR(vt0.c1)))) CROSS JOIN vt2 ON CASE WHEN CASE WHEN '' THEN vt2.c1 END THEN '606049157' ELSE (((vt2.c0)) BETWEEN ((vt2.c1)) AND (('+Y'))) END WHERE (CASE WHEN ((x'') NOTNULL) THEN vt2.c0 COLLATE RTRIM END) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') NOTNULL) THEN vt2.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (+ (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c2)))OR(vt0.c1)))OR(vt0.c1)))) CROSS JOIN vt2 ON CASE WHEN CASE WHEN '' THEN vt2.c1 END THEN '606049157' ELSE (((vt2.c0)) BETWEEN ((vt2.c1)) AND (('+Y'))) END ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt2, rt0 WHERE (((CAST(vt1.lid AS NUMERIC)) BETWEEN (NULL) AND (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))) ORDER BY (NOT (rt0.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.lid AS NUMERIC)) BETWEEN (NULL) AND (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt1, vt2, rt0 ORDER BY (NOT (rt0.c3)) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt2, rt0 WHERE (((CAST(vt1.lid AS NUMERIC)) BETWEEN (NULL) AND (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))) ORDER BY (NOT (rt0.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.lid AS NUMERIC)) BETWEEN (NULL) AND (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))) IS TRUE)  as count FROM vt1, vt2, rt0 ORDER BY (NOT (rt0.c3)) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt2, rt0 WHERE (((CAST(vt1.lid AS NUMERIC)) BETWEEN (NULL) AND (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c3))))) ORDER BY (NOT (rt0.c3)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((((((((- (vt2.c2)))OR((rt0.c1 IN ()))))AND((vt1.c0 IN (rt0.c0, vt1.lid)))))OR(((vt0.c0)GLOB('-2136070833')))))AND(CASE WHEN vt2.c0 THEN vt1.lid WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN vt2.c2 END)) CROSS JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((vt2.c2) IS TRUE)) AND ((((vt2.c0))<(('1543727685'))))) WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.7510198405943275))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.7510198405943275)))) IS TRUE)  as count FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((((((((- (vt2.c2)))OR((rt0.c1 IN ()))))AND((vt1.c0 IN (rt0.c0, vt1.lid)))))OR(((vt0.c0)GLOB('-2136070833')))))AND(CASE WHEN vt2.c0 THEN vt1.lid WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN vt2.c2 END)) CROSS JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((vt2.c2) IS TRUE)) AND ((((vt2.c0))<(('1543727685'))))));
SELECT ALL COUNT(*) FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((((((((- (vt2.c2)))OR((rt0.c1 IN ()))))AND((vt1.c0 IN (rt0.c0, vt1.lid)))))OR(((vt0.c0)GLOB('-2136070833')))))AND(CASE WHEN vt2.c0 THEN vt1.lid WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN vt2.c2 END)) CROSS JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((vt2.c2) IS TRUE)) AND ((((vt2.c0))<(('1543727685'))))) WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.7510198405943275))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.7510198405943275)))) IS TRUE)  as count FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((((((((- (vt2.c2)))OR((rt0.c1 IN ()))))AND((vt1.c0 IN (rt0.c0, vt1.lid)))))OR(((vt0.c0)GLOB('-2136070833')))))AND(CASE WHEN vt2.c0 THEN vt1.lid WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN vt2.c2 END)) CROSS JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((vt2.c2) IS TRUE)) AND ((((vt2.c0))<(('1543727685'))))));
SELECT ALL COUNT(*) FROM vt1, vt2 LEFT OUTER JOIN vt0 ON (((((((((- (vt2.c2)))OR((rt0.c1 IN ()))))AND((vt1.c0 IN (rt0.c0, vt1.lid)))))OR(((vt0.c0)GLOB('-2136070833')))))AND(CASE WHEN vt2.c0 THEN vt1.lid WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN vt2.c2 END)) CROSS JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((vt2.c2) IS TRUE)) AND ((((vt2.c0))<(('1543727685'))))) WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c3, 0.7510198405943275))));
SELECT * FROM vt0 WHERE (json_extract(vt0.c1, CASE WHEN 0.0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (vt0.c0 IN ()), highlight(vt0.c1, vt0.c0, vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(vt0.c1, CASE WHEN 0.0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (vt0.c0 IN ()), highlight(vt0.c1, vt0.c0, vt0.c0, vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_extract(vt0.c1, CASE WHEN 0.0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (vt0.c0 IN ()), highlight(vt0.c1, vt0.c0, vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(vt0.c1, CASE WHEN 0.0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, (vt0.c0 IN ()), highlight(vt0.c1, vt0.c0, vt0.c0, vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt2, vt1 WHERE (0xffffffffd60e8567) ORDER BY ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffd60e8567) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE BINARY COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt2, vt1 WHERE (0xffffffffd60e8567) ORDER BY ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffd60e8567) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE BINARY COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt2, vt1 WHERE (0xffffffffd60e8567) ORDER BY ((vt1.c0) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt2, rt0 WHERE ('-257645527');
SELECT SUM(count) FROM (SELECT (('-257645527') IS TRUE)  as count FROM vt2, rt0);
SELECT ALL * FROM vt2, rt0 WHERE ('-257645527');
SELECT SUM(count) FROM (SELECT (('-257645527') IS TRUE)  as count FROM vt2, rt0);
SELECT ALL * FROM vt2, rt0 WHERE ('-257645527');
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) IS FALSE) WHERE (DATE(UPPER(DISTINCT rt0.c3), rt0.c4 COLLATE NOCASE, ((vt0.c1) ISNULL), vt2.c2, '-210927195')) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(UPPER(DISTINCT rt0.c3), rt0.c4 COLLATE NOCASE, ((vt0.c1) ISNULL), vt2.c2, '-210927195')) IS TRUE)  as count FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) IS FALSE) ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) IS FALSE) WHERE (DATE(UPPER(DISTINCT rt0.c3), rt0.c4 COLLATE NOCASE, ((vt0.c1) ISNULL), vt2.c2, '-210927195')) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(UPPER(DISTINCT rt0.c3), rt0.c4 COLLATE NOCASE, ((vt0.c1) ISNULL), vt2.c2, '-210927195')) IS TRUE)  as count FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) IS FALSE) ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) IS FALSE) WHERE (DATE(UPPER(DISTINCT rt0.c3), rt0.c4 COLLATE NOCASE, ((vt0.c1) ISNULL), vt2.c2, '-210927195')) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((- (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((vt0.c0) ISNULL))));
SELECT * FROM vt1, vt2 WHERE (vt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c2) IS TRUE)  as count FROM vt1, vt2);
SELECT * FROM vt1, vt2 WHERE (vt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c2) IS TRUE)  as count FROM vt1, vt2);
SELECT * FROM vt1, vt2 WHERE (vt2.c2);
SELECT ALL COUNT(*) FROM vt0, vt1, vt2 WHERE (vt1.c0) ORDER BY CASE TYPEOF(vt2.c2)  WHEN ((vt1.c0)LIKE(vt2.c0)) THEN (+ (vt0.c0)) WHEN ((vt2.c0)>>(vt2.c0)) THEN ((vt2.c0)IS NOT(vt0.c1)) WHEN vt1.c0 COLLATE NOCASE THEN IFNULL(DISTINCT vt0.c0, vt2.c0) WHEN vt0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN (~ (vt0.c0)) THEN ((vt1.lid) NOT BETWEEN (vt0.c1) AND (vt2.c1)) ELSE CAST(vt2.c0 AS NUMERIC) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, vt2 ORDER BY CASE TYPEOF(vt2.c2)  WHEN ((vt1.c0)LIKE(vt2.c0)) THEN (+ (vt0.c0)) WHEN ((vt2.c0)>>(vt2.c0)) THEN ((vt2.c0)IS NOT(vt0.c1)) WHEN vt1.c0 COLLATE NOCASE THEN IFNULL(DISTINCT vt0.c0, vt2.c0) WHEN vt0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN (~ (vt0.c0)) THEN ((vt1.lid) NOT BETWEEN (vt0.c1) AND (vt2.c1)) ELSE CAST(vt2.c0 AS NUMERIC) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, vt2 WHERE (vt1.c0) ORDER BY CASE TYPEOF(vt2.c2)  WHEN ((vt1.c0)LIKE(vt2.c0)) THEN (+ (vt0.c0)) WHEN ((vt2.c0)>>(vt2.c0)) THEN ((vt2.c0)IS NOT(vt0.c1)) WHEN vt1.c0 COLLATE NOCASE THEN IFNULL(DISTINCT vt0.c0, vt2.c0) WHEN vt0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN (~ (vt0.c0)) THEN ((vt1.lid) NOT BETWEEN (vt0.c1) AND (vt2.c1)) ELSE CAST(vt2.c0 AS NUMERIC) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, vt2 ORDER BY CASE TYPEOF(vt2.c2)  WHEN ((vt1.c0)LIKE(vt2.c0)) THEN (+ (vt0.c0)) WHEN ((vt2.c0)>>(vt2.c0)) THEN ((vt2.c0)IS NOT(vt0.c1)) WHEN vt1.c0 COLLATE NOCASE THEN IFNULL(DISTINCT vt0.c0, vt2.c0) WHEN vt0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN (~ (vt0.c0)) THEN ((vt1.lid) NOT BETWEEN (vt0.c1) AND (vt2.c1)) ELSE CAST(vt2.c0 AS NUMERIC) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, vt2 WHERE (vt1.c0) ORDER BY CASE TYPEOF(vt2.c2)  WHEN ((vt1.c0)LIKE(vt2.c0)) THEN (+ (vt0.c0)) WHEN ((vt2.c0)>>(vt2.c0)) THEN ((vt2.c0)IS NOT(vt0.c1)) WHEN vt1.c0 COLLATE NOCASE THEN IFNULL(DISTINCT vt0.c0, vt2.c0) WHEN vt0.c1 THEN CAST(vt2.c1 AS TEXT) WHEN (~ (vt0.c0)) THEN ((vt1.lid) NOT BETWEEN (vt0.c1) AND (vt2.c1)) ELSE CAST(vt2.c0 AS NUMERIC) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((rt0.c1)=(rt0.c4)) IN (CAST('G<,xQ' AS REAL))) WHERE (((CASE rt0.c4  WHEN vt2.c2 THEN vt0.c0 ELSE rt0.c3 END)LIKE('0.8000968486953332' COLLATE BINARY))) ORDER BY ((json_array_length(rt0.c3))|(((rt0.c1)/(vt0.c0)))), ((CAST(vt2.c2 AS NUMERIC)) BETWEEN (((0.29509468584780074)<(vt0.c1))) AND ((((vt1.lid, rt0.c3, rt0.c0)) BETWEEN ((NULL, rt0.c3, rt0.c3)) AND ((vt1.lid, vt2.c1, '1256258173')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN vt2.c2 THEN vt0.c0 ELSE rt0.c3 END)LIKE('0.8000968486953332' COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((rt0.c1)=(rt0.c4)) IN (CAST('G<,xQ' AS REAL))) ORDER BY ((json_array_length(rt0.c3))|(((rt0.c1)/(vt0.c0)))), ((CAST(vt2.c2 AS NUMERIC)) BETWEEN (((0.29509468584780074)<(vt0.c1))) AND ((((vt1.lid, rt0.c3, rt0.c0)) BETWEEN ((NULL, rt0.c3, rt0.c3)) AND ((vt1.lid, vt2.c1, '1256258173')))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((rt0.c1)=(rt0.c4)) IN (CAST('G<,xQ' AS REAL))) WHERE (((CASE rt0.c4  WHEN vt2.c2 THEN vt0.c0 ELSE rt0.c3 END)LIKE('0.8000968486953332' COLLATE BINARY))) ORDER BY ((json_array_length(rt0.c3))|(((rt0.c1)/(vt0.c0)))), ((CAST(vt2.c2 AS NUMERIC)) BETWEEN (((0.29509468584780074)<(vt0.c1))) AND ((((vt1.lid, rt0.c3, rt0.c0)) BETWEEN ((NULL, rt0.c3, rt0.c3)) AND ((vt1.lid, vt2.c1, '1256258173')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c4  WHEN vt2.c2 THEN vt0.c0 ELSE rt0.c3 END)LIKE('0.8000968486953332' COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((rt0.c1)=(rt0.c4)) IN (CAST('G<,xQ' AS REAL))) ORDER BY ((json_array_length(rt0.c3))|(((rt0.c1)/(vt0.c0)))), ((CAST(vt2.c2 AS NUMERIC)) BETWEEN (((0.29509468584780074)<(vt0.c1))) AND ((((vt1.lid, rt0.c3, rt0.c0)) BETWEEN ((NULL, rt0.c3, rt0.c3)) AND ((vt1.lid, vt2.c1, '1256258173')))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((rt0.c1)=(rt0.c4)) IN (CAST('G<,xQ' AS REAL))) WHERE (((CASE rt0.c4  WHEN vt2.c2 THEN vt0.c0 ELSE rt0.c3 END)LIKE('0.8000968486953332' COLLATE BINARY))) ORDER BY ((json_array_length(rt0.c3))|(((rt0.c1)/(vt0.c0)))), ((CAST(vt2.c2 AS NUMERIC)) BETWEEN (((0.29509468584780074)<(vt0.c1))) AND ((((vt1.lid, rt0.c3, rt0.c0)) BETWEEN ((NULL, rt0.c3, rt0.c3)) AND ((vt1.lid, vt2.c1, '1256258173')))))  NULLS LAST;
SELECT * FROM vt1, vt0, vt2, rt0 WHERE (rt0.c4) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt1, vt0, vt2, rt0 ORDER BY rt0.c2);
SELECT * FROM vt1, vt0, vt2, rt0 WHERE (rt0.c4) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt1, vt0, vt2, rt0 ORDER BY rt0.c2);
SELECT * FROM vt1, vt0, vt2, rt0 WHERE (rt0.c4) ORDER BY rt0.c2;
SELECT * FROM vt0 CROSS JOIN vt2 ON ((vt1.lid COLLATE RTRIM)|(((vt2.c0)<(rt0.c1)))) FULL OUTER JOIN rt0 ON rt0.c4 LEFT OUTER JOIN vt1 ON CAST((- (vt1.c0)) AS TEXT) WHERE (MAX('', ((vt0.c1)+(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX('', ((vt0.c1)+(vt2.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON ((vt1.lid COLLATE RTRIM)|(((vt2.c0)<(rt0.c1)))) FULL OUTER JOIN rt0 ON rt0.c4 LEFT OUTER JOIN vt1 ON CAST((- (vt1.c0)) AS TEXT));
SELECT * FROM vt0 CROSS JOIN vt2 ON ((vt1.lid COLLATE RTRIM)|(((vt2.c0)<(rt0.c1)))) FULL OUTER JOIN rt0 ON rt0.c4 LEFT OUTER JOIN vt1 ON CAST((- (vt1.c0)) AS TEXT) WHERE (MAX('', ((vt0.c1)+(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX('', ((vt0.c1)+(vt2.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON ((vt1.lid COLLATE RTRIM)|(((vt2.c0)<(rt0.c1)))) FULL OUTER JOIN rt0 ON rt0.c4 LEFT OUTER JOIN vt1 ON CAST((- (vt1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1, vt2, rt0 INNER JOIN vt0 ON (vt2.c0 COLLATE RTRIM IN (((((((((vt2.c1)OR(vt2.c2)))AND(rt0.c2)))OR(vt2.c1)))AND(rt0.c0)))) WHERE (((CAST(-2136070833 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(-2136070833 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1, vt2, rt0 INNER JOIN vt0 ON (vt2.c0 COLLATE RTRIM IN (((((((((vt2.c1)OR(vt2.c2)))AND(rt0.c2)))OR(vt2.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt1, vt2, rt0 INNER JOIN vt0 ON (vt2.c0 COLLATE RTRIM IN (((((((((vt2.c1)OR(vt2.c2)))AND(rt0.c2)))OR(vt2.c1)))AND(rt0.c0)))) WHERE (((CAST(-2136070833 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(-2136070833 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1, vt2, rt0 INNER JOIN vt0 ON (vt2.c0 COLLATE RTRIM IN (((((((((vt2.c1)OR(vt2.c2)))AND(rt0.c2)))OR(vt2.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt1, vt2, rt0 INNER JOIN vt0 ON (vt2.c0 COLLATE RTRIM IN (((((((((vt2.c1)OR(vt2.c2)))AND(rt0.c2)))OR(vt2.c1)))AND(rt0.c0)))) WHERE (((CAST(-2136070833 AS BLOB)) IS FALSE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c1 CROSS JOIN vt1 ON ((((((vt2.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), (vt1.c0 IN ()), vt0.c0, ((vt0.c0)>=(vt2.c1)), (((vt2.c2)) NOT BETWEEN ((x'2c1d')) AND ((vt2.c0)))))!=(('-1128314795', ((vt0.c0) NOTNULL), ((vt0.c0)<<(rt0.c4)), (((vt0.c0, rt0.c1, vt2.c2)) BETWEEN ((0xffffffffd6937653, vt2.c0, vt1.lid)) AND ((-2.136070833E9, vt0.c1, vt0.c1))), CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt2.c2 WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c3 END))) FULL OUTER JOIN vt2 ON COALESCE(((((rt0.c4)OR(rt0.c1)))OR(rt0.c2)), (~ (vt2.c2)), (rt0.c1 IN ()), rt0.c3 COLLATE NOCASE) WHERE ((((vt0.c0, -2060065129, rt0.c2)) BETWEEN ((CAST(rt0.c3 AS TEXT), (vt1.c0 IN ()), ((rt0.c2) NOT BETWEEN (0.8485351043821097) AND (rt0.c1)))) AND ((CASE vt2.c2  WHEN vt2.c2 THEN rt0.c1 END, CAST(vt2.c2 AS TEXT), ((vt1.lid) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, -2060065129, rt0.c2)) BETWEEN ((CAST(rt0.c3 AS TEXT), (vt1.c0 IN ()), ((rt0.c2) NOT BETWEEN (0.8485351043821097) AND (rt0.c1)))) AND ((CASE vt2.c2  WHEN vt2.c2 THEN rt0.c1 END, CAST(vt2.c2 AS TEXT), ((vt1.lid) IS FALSE))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c1 CROSS JOIN vt1 ON ((((((vt2.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), (vt1.c0 IN ()), vt0.c0, ((vt0.c0)>=(vt2.c1)), (((vt2.c2)) NOT BETWEEN ((x'2c1d')) AND ((vt2.c0)))))<>(('-1128314795', ((vt0.c0) NOTNULL), ((vt0.c0)<<(rt0.c4)), (((vt0.c0, rt0.c1, vt2.c2)) BETWEEN ((0xffffffffd6937653, vt2.c0, vt1.lid)) AND ((-2.136070833E9, vt0.c1, vt0.c1))), CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt2.c2 WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c3 END))) FULL OUTER JOIN vt2 ON COALESCE(((((rt0.c4)OR(rt0.c1)))OR(rt0.c2)), (~ (vt2.c2)), (rt0.c1 IN ()), rt0.c3 COLLATE NOCASE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c1 CROSS JOIN vt1 ON ((((((vt2.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), (vt1.c0 IN ()), vt0.c0, ((vt0.c0)>=(vt2.c1)), (((vt2.c2)) NOT BETWEEN ((x'2c1d')) AND ((vt2.c0)))))!=(('-1128314795', ((vt0.c0) NOTNULL), ((vt0.c0)<<(rt0.c4)), (((vt0.c0, rt0.c1, vt2.c2)) BETWEEN ((0xffffffffd6937653, vt2.c0, vt1.lid)) AND ((-2.136070833E9, vt0.c1, vt0.c1))), CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt2.c2 WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c3 END))) FULL OUTER JOIN vt2 ON COALESCE(((((rt0.c4)OR(rt0.c1)))OR(rt0.c2)), (~ (vt2.c2)), (rt0.c1 IN ()), rt0.c3 COLLATE NOCASE) WHERE ((((vt0.c0, -2060065129, rt0.c2)) BETWEEN ((CAST(rt0.c3 AS TEXT), (vt1.c0 IN ()), ((rt0.c2) NOT BETWEEN (0.8485351043821097) AND (rt0.c1)))) AND ((CASE vt2.c2  WHEN vt2.c2 THEN rt0.c1 END, CAST(vt2.c2 AS TEXT), ((vt1.lid) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, -2060065129, rt0.c2)) BETWEEN ((CAST(rt0.c3 AS TEXT), (vt1.c0 IN ()), ((rt0.c2) NOT BETWEEN (0.8485351043821097) AND (rt0.c1)))) AND ((CASE vt2.c2  WHEN vt2.c2 THEN rt0.c1 END, CAST(vt2.c2 AS TEXT), ((vt1.lid) IS FALSE))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c1 CROSS JOIN vt1 ON ((((((vt2.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), (vt1.c0 IN ()), vt0.c0, ((vt0.c0)>=(vt2.c1)), (((vt2.c2)) NOT BETWEEN ((x'2c1d')) AND ((vt2.c0)))))<>(('-1128314795', ((vt0.c0) NOTNULL), ((vt0.c0)<<(rt0.c4)), (((vt0.c0, rt0.c1, vt2.c2)) BETWEEN ((0xffffffffd6937653, vt2.c0, vt1.lid)) AND ((-2.136070833E9, vt0.c1, vt0.c1))), CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt2.c2 WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c3 END))) FULL OUTER JOIN vt2 ON COALESCE(((((rt0.c4)OR(rt0.c1)))OR(rt0.c2)), (~ (vt2.c2)), (rt0.c1 IN ()), rt0.c3 COLLATE NOCASE));
SELECT ALL * FROM rt0, vt1, vt0, vt2 WHERE (0.484957318165983) ORDER BY ((((rt0.c2 COLLATE RTRIM)AND(vt2.c0)))OR(NULLIF(NULL, vt2.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.484957318165983) IS TRUE)  as count FROM rt0, vt1, vt0, vt2 ORDER BY ((((rt0.c2 COLLATE RTRIM)AND(vt2.c0)))OR(NULLIF(NULL, vt2.c1))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0, vt2 WHERE (0.484957318165983) ORDER BY ((((rt0.c2 COLLATE RTRIM)AND(vt2.c0)))OR(NULLIF(NULL, vt2.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.484957318165983) IS TRUE)  as count FROM rt0, vt1, vt0, vt2 ORDER BY ((((rt0.c2 COLLATE RTRIM)AND(vt2.c0)))OR(NULLIF(NULL, vt2.c1))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0, vt2 WHERE (0.484957318165983) ORDER BY ((((rt0.c2 COLLATE RTRIM)AND(vt2.c0)))OR(NULLIF(NULL, vt2.c1))) DESC  NULLS LAST;
SELECT ALL * FROM vt2, rt0, vt0, vt1 WHERE (((((CASE WHEN rt0.c1 THEN vt1.c0 ELSE vt2.c2 END)OR(((vt2.c1)=(rt0.c2)))))AND((((vt2.c1)) NOT BETWEEN ((vt2.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c1 THEN vt1.c0 ELSE vt2.c2 END)OR(((vt2.c1)==(rt0.c2)))))AND((((vt2.c1)) NOT BETWEEN ((vt2.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt2, rt0, vt0, vt1);
SELECT ALL * FROM vt2, rt0, vt0, vt1 WHERE (((((CASE WHEN rt0.c1 THEN vt1.c0 ELSE vt2.c2 END)OR(((vt2.c1)=(rt0.c2)))))AND((((vt2.c1)) NOT BETWEEN ((vt2.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c1 THEN vt1.c0 ELSE vt2.c2 END)OR(((vt2.c1)==(rt0.c2)))))AND((((vt2.c1)) NOT BETWEEN ((vt2.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt2, rt0, vt0, vt1);
SELECT ALL * FROM vt2, rt0, vt0, vt1 WHERE (((((CASE WHEN rt0.c1 THEN vt1.c0 ELSE vt2.c2 END)OR(((vt2.c1)=(rt0.c2)))))AND((((vt2.c1)) NOT BETWEEN ((vt2.c2)) AND ((rt0.c1))))));
SELECT * FROM rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt2.c1)OR(vt1.lid)))OR(rt0.c3)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-326993063')) END WHERE (((vt0.c0 COLLATE NOCASE)+(((vt2.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)+(((vt2.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt2.c1)OR(vt1.lid)))OR(rt0.c3)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-326993063')) END);
SELECT * FROM rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt2.c1)OR(vt1.lid)))OR(rt0.c3)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-326993063')) END WHERE (((vt0.c0 COLLATE NOCASE)+(((vt2.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)+(((vt2.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt2.c1)OR(vt1.lid)))OR(rt0.c3)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-326993063')) END);
SELECT * FROM rt0, vt0, vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((((vt2.c1)OR(vt1.lid)))OR(rt0.c3)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-326993063')) END WHERE (((vt0.c0 COLLATE NOCASE)+(((vt2.c1) NOT NULL))));
SELECT COUNT(*) FROM vt1, rt0, vt2 WHERE (HEX(((rt0.c1)>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c1)>(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, vt2);
SELECT COUNT(*) FROM vt1, rt0, vt2 WHERE (HEX(((rt0.c1)>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c1)>(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0, vt2);
SELECT COUNT(*) FROM vt1, rt0, vt2 WHERE (HEX(((rt0.c1)>(vt1.c0))));
SELECT ALL * FROM vt2 WHERE (CASE WHEN (~ (vt2.c0)) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c2)) END) ORDER BY ((((vt2.c2))=((vt2.c2))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt2.c0)) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c2)) END) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c2))==((vt2.c2))) IN ()) DESC);
SELECT ALL * FROM vt2 WHERE (CASE WHEN (~ (vt2.c0)) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c2)) END) ORDER BY ((((vt2.c2))=((vt2.c2))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt2.c0)) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c2)) END) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c2))==((vt2.c2))) IN ()) DESC);
SELECT ALL * FROM vt2 WHERE (CASE WHEN (~ (vt2.c0)) THEN ((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c2)) END) ORDER BY ((((vt2.c2))=((vt2.c2))) IN ()) DESC;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((- (rt0.c3)))AND(UPPER(vt1.c0))))OR(vt1.lid)));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c3)))AND(UPPER(vt1.c0))))OR(vt1.lid))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((- (rt0.c3)))AND(UPPER(vt1.c0))))OR(vt1.lid)));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c3)))AND(UPPER(vt1.c0))))OR(vt1.lid))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((- (rt0.c3)))AND(UPPER(vt1.c0))))OR(vt1.lid)));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c2, vt0.c1))<((rt0.c2, rt0.c2, rt0.c2)))) IS FALSE) WHERE (CAST(((rt0.c2) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c2, vt0.c1))<((rt0.c2, rt0.c2, rt0.c2)))) IS FALSE));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c2, vt0.c1))<((rt0.c2, rt0.c2, rt0.c2)))) IS FALSE) WHERE (CAST(((rt0.c2) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c2, vt0.c1))<((rt0.c2, rt0.c2, rt0.c2)))) IS FALSE));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c3, rt0.c2, vt0.c1))<((rt0.c2, rt0.c2, rt0.c2)))) IS FALSE) WHERE (CAST(((rt0.c2) IS FALSE) AS INTEGER));
SELECT ALL * FROM vt1, vt2, vt0 WHERE (((((vt1.lid)=(vt2.c2)))GLOB(CASE vt2.c2  WHEN x'' THEN vt2.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt2.c0 THEN vt2.c1 WHEN 'X/䡕d' THEN 900346039 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)=(vt2.c2)))GLOB(CASE vt2.c2  WHEN x'' THEN vt2.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt2.c0 THEN vt2.c1 WHEN 'X/䡕d' THEN 900346039 END))) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT ALL * FROM vt1, vt2, vt0 WHERE (((((vt1.lid)=(vt2.c2)))GLOB(CASE vt2.c2  WHEN x'' THEN vt2.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt2.c0 THEN vt2.c1 WHEN 'X/䡕d' THEN 900346039 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)=(vt2.c2)))GLOB(CASE vt2.c2  WHEN x'' THEN vt2.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt2.c0 THEN vt2.c1 WHEN 'X/䡕d' THEN 900346039 END))) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT ALL * FROM vt1, vt2, vt0 WHERE (((((vt1.lid)=(vt2.c2)))GLOB(CASE vt2.c2  WHEN x'' THEN vt2.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt2.c0 THEN vt2.c1 WHEN 'X/䡕d' THEN 900346039 END)));
SELECT * FROM rt0, vt1, vt2 WHERE (NULL) ORDER BY ((((vt1.lid)*('-1459662286'))) NOT BETWEEN (json_extract(rt0.c0, rt0.c1, rt0.c0, x'c954a00c', vt2.c0, rt0.c3)) AND (NULL COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, vt2 ORDER BY ((((vt1.lid)*('-1459662286'))) NOT BETWEEN (json_extract(rt0.c0, rt0.c1, rt0.c0, x'c954a00c', vt2.c0, rt0.c3)) AND (NULL COLLATE NOCASE))  NULLS LAST);
SELECT * FROM rt0, vt1, vt2 WHERE (NULL) ORDER BY ((((vt1.lid)*('-1459662286'))) NOT BETWEEN (json_extract(rt0.c0, rt0.c1, rt0.c0, x'c954a00c', vt2.c0, rt0.c3)) AND (NULL COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, vt2 ORDER BY ((((vt1.lid)*('-1459662286'))) NOT BETWEEN (json_extract(rt0.c0, rt0.c1, rt0.c0, x'c954a00c', vt2.c0, rt0.c3)) AND (NULL COLLATE NOCASE))  NULLS LAST);
SELECT * FROM rt0, vt1, vt2 WHERE (NULL) ORDER BY ((((vt1.lid)*('-1459662286'))) NOT BETWEEN (json_extract(rt0.c0, rt0.c1, rt0.c0, x'c954a00c', vt2.c0, rt0.c3)) AND (NULL COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3) NOTNULL))OR(rt0.c4 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(CASE WHEN rt0.c4 THEN rt0.c0 END)))AND((+ (rt0.c4)))) WHERE (CAST(((rt0.c2)<=(x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<=(x'')) AS TEXT)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3) NOTNULL))OR(rt0.c4 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(CASE WHEN rt0.c4 THEN rt0.c0 END)))AND((+ (rt0.c4)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3) NOTNULL))OR(rt0.c4 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(CASE WHEN rt0.c4 THEN rt0.c0 END)))AND((+ (rt0.c4)))) WHERE (CAST(((rt0.c2)<=(x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<=(x'')) AS TEXT)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3) NOTNULL))OR(rt0.c4 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(CASE WHEN rt0.c4 THEN rt0.c0 END)))AND((+ (rt0.c4)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3) NOTNULL))OR(rt0.c4 COLLATE RTRIM)))AND((vt1.c0 IN ()))))OR(CASE WHEN rt0.c4 THEN rt0.c0 END)))AND((+ (rt0.c4)))) WHERE (CAST(((rt0.c2)<=(x'')) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (x'')) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) LEFT OUTER JOIN vt2 ON (((rt0.c2)%(vt2.c1)) IN ()) WHERE (((((vt2.c2) IS TRUE))&(((((((((rt0.c1)AND(vt1.lid)))AND(vt2.c1)))AND(rt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c2) IS TRUE))&(((((((((rt0.c1)AND(vt1.lid)))AND(vt2.c1)))AND(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (x'')) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) LEFT OUTER JOIN vt2 ON (((rt0.c2)%(vt2.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (x'')) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) LEFT OUTER JOIN vt2 ON (((rt0.c2)%(vt2.c1)) IN ()) WHERE (((((vt2.c2) IS TRUE))&(((((((((rt0.c1)AND(vt1.lid)))AND(vt2.c1)))AND(rt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c2) IS TRUE))&(((((((((rt0.c1)AND(vt1.lid)))AND(vt2.c1)))AND(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (x'')) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) LEFT OUTER JOIN vt2 ON (((rt0.c2)%(vt2.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (x'')) FULL OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) LEFT OUTER JOIN vt2 ON (((rt0.c2)%(vt2.c1)) IN ()) WHERE (((((vt2.c2) IS TRUE))&(((((((((rt0.c1)AND(vt1.lid)))AND(vt2.c1)))AND(rt0.c1)))OR(vt0.c0)))));
SELECT * FROM vt0, rt0, vt2 WHERE ((NOT (vt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c0)*(rt0.c1))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt2 ORDER BY ((((rt0.c0)*(rt0.c1))) NOT NULL) ASC);
SELECT * FROM vt0, rt0, vt2 WHERE ((NOT (vt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c0)*(rt0.c1))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt2 ORDER BY ((((rt0.c0)*(rt0.c1))) NOT NULL) ASC);
SELECT * FROM vt0, rt0, vt2 WHERE ((NOT (vt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c0)*(rt0.c1))) NOT NULL) ASC;
SELECT * FROM vt1, vt0, vt2 WHERE (vt1.c0) ORDER BY CASE WHEN vt1.c0 THEN '-1128314795' ELSE vt1.lid END COLLATE RTRIM ASC  NULLS FIRST, CASE vt1.c0  WHEN vt2.c1 THEN vt2.c1 WHEN vt0.c0 THEN vt2.c2 WHEN vt1.lid THEN vt2.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt1.lid THEN vt2.c2 ELSE vt1.c0 END COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, vt2 ORDER BY CASE WHEN vt1.c0 THEN '-1128314795' ELSE vt1.lid END COLLATE RTRIM ASC  NULLS FIRST, CASE vt1.c0  WHEN vt2.c1 THEN vt2.c1 WHEN vt0.c0 THEN vt2.c2 WHEN vt1.lid THEN vt2.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt1.lid THEN vt2.c2 ELSE vt1.c0 END COLLATE BINARY COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt1, vt0, vt2 WHERE (vt1.c0) ORDER BY CASE WHEN vt1.c0 THEN '-1128314795' ELSE vt1.lid END COLLATE RTRIM ASC  NULLS FIRST, CASE vt1.c0  WHEN vt2.c1 THEN vt2.c1 WHEN vt0.c0 THEN vt2.c2 WHEN vt1.lid THEN vt2.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt1.lid THEN vt2.c2 ELSE vt1.c0 END COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, vt2 ORDER BY CASE WHEN vt1.c0 THEN '-1128314795' ELSE vt1.lid END COLLATE RTRIM ASC  NULLS FIRST, CASE vt1.c0  WHEN vt2.c1 THEN vt2.c1 WHEN vt0.c0 THEN vt2.c2 WHEN vt1.lid THEN vt2.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt1.lid THEN vt2.c2 ELSE vt1.c0 END COLLATE BINARY COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt1, vt0, vt2 WHERE (vt1.c0) ORDER BY CASE WHEN vt1.c0 THEN '-1128314795' ELSE vt1.lid END COLLATE RTRIM ASC  NULLS FIRST, CASE vt1.c0  WHEN vt2.c1 THEN vt2.c1 WHEN vt0.c0 THEN vt2.c2 WHEN vt1.lid THEN vt2.c0 WHEN vt2.c2 THEN vt2.c0 WHEN vt1.lid THEN vt2.c2 ELSE vt1.c0 END COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY WHERE (CASE ((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c1))  WHEN ((((vt2.c1)AND(vt0.c1)))OR(vt0.c0)) THEN LTRIM(vt2.c2, vt2.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c1))  WHEN ((((vt2.c1)AND(vt0.c1)))OR(vt0.c0)) THEN LTRIM(vt2.c2, vt2.c1) END) IS TRUE)  as count FROM vt2 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM vt2 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY WHERE (CASE ((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c1))  WHEN ((((vt2.c1)AND(vt0.c1)))OR(vt0.c0)) THEN LTRIM(vt2.c2, vt2.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c1))  WHEN ((((vt2.c1)AND(vt0.c1)))OR(vt0.c0)) THEN LTRIM(vt2.c2, vt2.c1) END) IS TRUE)  as count FROM vt2 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM vt2 INNER JOIN vt0 ON CAST(vt0.c0 AS TEXT) COLLATE BINARY WHERE (CASE ((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c1))  WHEN ((((vt2.c1)AND(vt0.c1)))OR(vt0.c0)) THEN LTRIM(vt2.c2, vt2.c1) END);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0, vt1 WHERE (CASE ((((((((vt2.c1)OR(rt0.c4)))OR(vt2.c0)))AND(vt1.lid)))OR(vt0.c1))  WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt2.c1)) THEN CAST(vt2.c1 AS BLOB) ELSE json_quote(vt2.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt2.c1)OR(rt0.c4)))OR(vt2.c0)))AND(vt1.lid)))OR(vt0.c1))  WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt2.c1)) THEN CAST(vt2.c1 AS BLOB) ELSE json_quote(vt2.c1) END) IS TRUE)  as count FROM vt2, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0, vt1 WHERE (CASE ((((((((vt2.c1)OR(rt0.c4)))OR(vt2.c0)))AND(vt1.lid)))OR(vt0.c1))  WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt2.c1)) THEN CAST(vt2.c1 AS BLOB) ELSE json_quote(vt2.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt2.c1)OR(rt0.c4)))OR(vt2.c0)))AND(vt1.lid)))OR(vt0.c1))  WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt2.c1)) THEN CAST(vt2.c1 AS BLOB) ELSE json_quote(vt2.c1) END) IS TRUE)  as count FROM vt2, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0, vt1 WHERE (CASE ((((((((vt2.c1)OR(rt0.c4)))OR(vt2.c0)))AND(vt1.lid)))OR(vt0.c1))  WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt2.c1)) THEN CAST(vt2.c1 AS BLOB) ELSE json_quote(vt2.c1) END);
SELECT ALL * FROM vt0, vt2, rt0 NOT INDEXED WHERE (((TRIM(DISTINCT vt0.c1, rt0.c3))-((((NULL))<((vt2.c1)))))) ORDER BY '0.7599276705886814', (((CASE vt2.c2  WHEN rt0.c2 THEN vt2.c1 ELSE vt0.c0 END))>((HEX(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c1, rt0.c3))-((((NULL))<((vt2.c1)))))) IS TRUE)  as count FROM vt0, vt2, rt0 ORDER BY '0.7599276705886814', (((CASE vt2.c2  WHEN rt0.c2 THEN vt2.c1 ELSE vt0.c0 END))>((HEX(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt2, rt0 NOT INDEXED WHERE (((TRIM(DISTINCT vt0.c1, rt0.c3))-((((NULL))<((vt2.c1)))))) ORDER BY '0.7599276705886814', (((CASE vt2.c2  WHEN rt0.c2 THEN vt2.c1 ELSE vt0.c0 END))>((HEX(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c1, rt0.c3))-((((NULL))<((vt2.c1)))))) IS TRUE)  as count FROM vt0, vt2, rt0 ORDER BY '0.7599276705886814', (((CASE vt2.c2  WHEN rt0.c2 THEN vt2.c1 ELSE vt0.c0 END))>((HEX(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt2, rt0 NOT INDEXED WHERE (((TRIM(DISTINCT vt0.c1, rt0.c3))-((((NULL))<((vt2.c1)))))) ORDER BY '0.7599276705886814', (((CASE vt2.c2  WHEN rt0.c2 THEN vt2.c1 ELSE vt0.c0 END))>((HEX(rt0.c3)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c4) NOT BETWEEN ('-559641332') AND (rt0.c1))) ISNULL)) ORDER BY (((vt1.lid IN ()))/(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN ('-559641332') AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((vt1.lid IN ()))/(vt0.c0)));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c4) NOT BETWEEN ('-559641332') AND (rt0.c1))) ISNULL)) ORDER BY (((vt1.lid IN ()))/(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN ('-559641332') AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((vt1.lid IN ()))/(vt0.c0)));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c4) NOT BETWEEN ('-559641332') AND (rt0.c1))) ISNULL)) ORDER BY (((vt1.lid IN ()))/(vt0.c0));
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt2 ON (((rt0.c4, vt2.c0, vt2.c1)) NOT BETWEEN ((((vt2.c0) IS TRUE), json_array_length(rt0.c0, vt2.c0), (rt0.c4 IN ()))) AND ((vt0.c0 COLLATE BINARY, (NOT (rt0.c0)), ((rt0.c1)<(rt0.c1))))) FULL OUTER JOIN vt1 ON ((LENGTH(vt2.c2))||(CASE WHEN vt2.c2 THEN vt2.c2 ELSE vt1.c0 END)) WHERE (((rt0.c4 COLLATE BINARY) IS FALSE)) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt2 ON (((rt0.c4, vt2.c0, vt2.c1)) NOT BETWEEN ((((vt2.c0) IS TRUE), json_array_length(rt0.c0, vt2.c0), (rt0.c4 IN ()))) AND ((vt0.c0 COLLATE BINARY, (NOT (rt0.c0)), ((rt0.c1)<(rt0.c1))))) FULL OUTER JOIN vt1 ON ((LENGTH(vt2.c2))||(CASE WHEN vt2.c2 THEN vt2.c2 ELSE vt1.c0 END)) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt2 ON (((rt0.c4, vt2.c0, vt2.c1)) NOT BETWEEN ((((vt2.c0) IS TRUE), json_array_length(rt0.c0, vt2.c0), (rt0.c4 IN ()))) AND ((vt0.c0 COLLATE BINARY, (NOT (rt0.c0)), ((rt0.c1)<(rt0.c1))))) FULL OUTER JOIN vt1 ON ((LENGTH(vt2.c2))||(CASE WHEN vt2.c2 THEN vt2.c2 ELSE vt1.c0 END)) WHERE (((rt0.c4 COLLATE BINARY) IS FALSE)) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt2 ON (((rt0.c4, vt2.c0, vt2.c1)) NOT BETWEEN ((((vt2.c0) IS TRUE), json_array_length(rt0.c0, vt2.c0), (rt0.c4 IN ()))) AND ((vt0.c0 COLLATE BINARY, (NOT (rt0.c0)), ((rt0.c1)<(rt0.c1))))) FULL OUTER JOIN vt1 ON ((LENGTH(vt2.c2))||(CASE WHEN vt2.c2 THEN vt2.c2 ELSE vt1.c0 END)) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (rtreenode(((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE))) ORDER BY vt0.c0 ASC  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN 0.48914075342211094 THEN vt0.c0 END THEN LOWER(vt0.c1) ELSE vt0.c1 COLLATE NOCASE END DESC, (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rtreenode(((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN 0.48914075342211094 THEN vt0.c0 END THEN LOWER(vt0.c1) ELSE vt0.c1 COLLATE NOCASE END DESC, (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (rtreenode(((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE))) ORDER BY vt0.c0 ASC  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN 0.48914075342211094 THEN vt0.c0 END THEN LOWER(vt0.c1) ELSE vt0.c1 COLLATE NOCASE END DESC, (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rtreenode(((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN 0.48914075342211094 THEN vt0.c0 END THEN LOWER(vt0.c1) ELSE vt0.c1 COLLATE NOCASE END DESC, (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (rtreenode(((vt0.c0) IS TRUE), ((vt0.c0) IS TRUE))) ORDER BY vt0.c0 ASC  NULLS LAST, CASE vt0.c1 COLLATE RTRIM  WHEN CASE WHEN 0.48914075342211094 THEN vt0.c0 END THEN LOWER(vt0.c1) ELSE vt0.c1 COLLATE NOCASE END DESC, (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) IN ())  NULLS LAST;
SELECT * FROM vt2, vt1, vt0, rt0 WHERE ((((rt0.c4 IN ()))==(((((rt0.c4)AND(rt0.c1)))OR(rt0.c1))))) ORDER BY ((((vt2.c0)<<(vt1.c0)))&(CAST(vt2.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))==(((((rt0.c4)AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM vt2, vt1, vt0, rt0 ORDER BY ((((vt2.c0)<<(vt1.c0)))&(CAST(vt2.c0 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM vt2, vt1, vt0, rt0 WHERE ((((rt0.c4 IN ()))==(((((rt0.c4)AND(rt0.c1)))OR(rt0.c1))))) ORDER BY ((((vt2.c0)<<(vt1.c0)))&(CAST(vt2.c0 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))==(((((rt0.c4)AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM vt2, vt1, vt0, rt0 ORDER BY ((((vt2.c0)<<(vt1.c0)))&(CAST(vt2.c0 AS BLOB))) DESC  NULLS LAST);
SELECT * FROM vt2, vt1, vt0, rt0 WHERE ((((rt0.c4 IN ()))==(((((rt0.c4)AND(rt0.c1)))OR(rt0.c1))))) ORDER BY ((((vt2.c0)<<(vt1.c0)))&(CAST(vt2.c0 AS BLOB))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt2, vt1, rt0 WHERE ((('260914936') BETWEEN (DATE(vt0.c1, rt0.c3, rt0.c4, vt2.c0, vt0.c1, NULL, '1095078022')) AND (((((vt1.c0)AND(0.2600938329202801)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('260914936') BETWEEN (DATE(vt0.c1, rt0.c3, rt0.c4, vt2.c0, vt0.c1, NULL, '1095078022')) AND (((((vt1.c0)AND(0.2600938329202801)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt2, vt1, rt0 WHERE ((('260914936') BETWEEN (DATE(vt0.c1, rt0.c3, rt0.c4, vt2.c0, vt0.c1, NULL, '1095078022')) AND (((((vt1.c0)AND(0.2600938329202801)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('260914936') BETWEEN (DATE(vt0.c1, rt0.c3, rt0.c4, vt2.c0, vt0.c1, NULL, '1095078022')) AND (((((vt1.c0)AND(0.2600938329202801)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt2, vt1, rt0 WHERE ((('260914936') BETWEEN (DATE(vt0.c1, rt0.c3, rt0.c4, vt2.c0, vt0.c1, NULL, '1095078022')) AND (((((vt1.c0)AND(0.2600938329202801)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3)-(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END THEN '-1996255617' WHEN ((rt0.c1)>(rt0.c4)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN COALESCE(rt0.c2, rt0.c1) END) ORDER BY LTRIM(((rt0.c4)*(rt0.c1)), (x'' IN (rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)-(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END THEN '-1996255617' WHEN ((rt0.c1)>(rt0.c4)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN COALESCE(rt0.c2, rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(((rt0.c4)*(rt0.c1)), (x'' IN (rt0.c3))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3)-(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END THEN '-1996255617' WHEN ((rt0.c1)>(rt0.c4)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN COALESCE(rt0.c2, rt0.c1) END) ORDER BY LTRIM(((rt0.c4)*(rt0.c1)), (x'' IN (rt0.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)-(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END THEN '-1996255617' WHEN ((rt0.c1)>(rt0.c4)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN COALESCE(rt0.c2, rt0.c1) END) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(((rt0.c4)*(rt0.c1)), (x'' IN (rt0.c3))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3)-(rt0.c0))  WHEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END THEN '-1996255617' WHEN ((rt0.c1)>(rt0.c4)) THEN rt0.c4 WHEN rt0.c2 COLLATE BINARY THEN COALESCE(rt0.c2, rt0.c1) END) ORDER BY LTRIM(((rt0.c4)*(rt0.c1)), (x'' IN (rt0.c3))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.lid)AND(rt0.c4)))AND(rt0.c3)) IN ()) LEFT OUTER JOIN rt0 ON ((((vt2.c0) BETWEEN (vt2.c2) AND (vt1.lid))) ISNULL) LEFT OUTER JOIN vt2 ON ((0.1252968412755593) ISNULL) WHERE (CASE vt2.c1  WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN vt0.c1 THEN vt1.lid END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt2.c1  WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN vt0.c1 THEN vt1.lid END COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.lid)AND(rt0.c4)))AND(rt0.c3)) IN ()) LEFT OUTER JOIN rt0 ON ((((vt2.c0) BETWEEN (vt2.c2) AND (vt1.lid))) ISNULL) LEFT OUTER JOIN vt2 ON ((0.1252968412755593) ISNULL));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.lid)AND(rt0.c4)))AND(rt0.c3)) IN ()) LEFT OUTER JOIN rt0 ON ((((vt2.c0) BETWEEN (vt2.c2) AND (vt1.lid))) ISNULL) LEFT OUTER JOIN vt2 ON ((0.1252968412755593) ISNULL) WHERE (CASE vt2.c1  WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN vt0.c1 THEN vt1.lid END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE vt2.c1  WHEN rt0.c4 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN vt0.c1 THEN vt1.lid END COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((vt1.lid)AND(rt0.c4)))AND(rt0.c3)) IN ()) LEFT OUTER JOIN rt0 ON ((((vt2.c0) BETWEEN (vt2.c2) AND (vt1.lid))) ISNULL) LEFT OUTER JOIN vt2 ON ((0.1252968412755593) ISNULL));
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c2)AND(vt2.c2)))AND(vt2.c1)) COLLATE RTRIM) ORDER BY vt2.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c2)AND(vt2.c2)))AND(vt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 ORDER BY vt2.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c2)AND(vt2.c2)))AND(vt2.c1)) COLLATE RTRIM) ORDER BY vt2.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c2)AND(vt2.c2)))AND(vt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 ORDER BY vt2.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c2)AND(vt2.c2)))AND(vt2.c1)) COLLATE RTRIM) ORDER BY vt2.c2  NULLS FIRST;
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt0 ON CHAR(((vt1.lid)LIKE(vt0.c0))) CROSS JOIN vt1 ON CASE WHEN (+ (vt1.lid)) THEN ((((((((rt0.c1)OR(vt1.lid)))OR(vt2.c0)))AND(rt0.c2)))AND(rt0.c3)) ELSE vt2.c2 END CROSS JOIN rt0 ON ((((SQLITE_COMPILEOPTION_GET(rt0.c1))AND((NULL IN (vt1.lid, rt0.c0)))))AND(rt0.c2)) WHERE (((((vt0.c1)IS(rt0.c1)))<<(CAST(vt1.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(rt0.c1)))<<(CAST(vt1.lid AS INTEGER)))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON CHAR(((vt1.lid)LIKE(vt0.c0))) CROSS JOIN vt1 ON CASE WHEN (+ (vt1.lid)) THEN ((((((((rt0.c1)OR(vt1.lid)))OR(vt2.c0)))AND(rt0.c2)))AND(rt0.c3)) ELSE vt2.c2 END CROSS JOIN rt0 ON ((((SQLITE_COMPILEOPTION_GET(rt0.c1))AND((NULL IN (vt1.lid, rt0.c0)))))AND(rt0.c2)));
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt0 ON CHAR(((vt1.lid)LIKE(vt0.c0))) CROSS JOIN vt1 ON CASE WHEN (+ (vt1.lid)) THEN ((((((((rt0.c1)OR(vt1.lid)))OR(vt2.c0)))AND(rt0.c2)))AND(rt0.c3)) ELSE vt2.c2 END CROSS JOIN rt0 ON ((((SQLITE_COMPILEOPTION_GET(rt0.c1))AND((NULL IN (vt1.lid, rt0.c0)))))AND(rt0.c2)) WHERE (((((vt0.c1)IS(rt0.c1)))<<(CAST(vt1.lid AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(rt0.c1)))<<(CAST(vt1.lid AS INTEGER)))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON CHAR(((vt1.lid)LIKE(vt0.c0))) CROSS JOIN vt1 ON CASE WHEN (+ (vt1.lid)) THEN ((((((((rt0.c1)OR(vt1.lid)))OR(vt2.c0)))AND(rt0.c2)))AND(rt0.c3)) ELSE vt2.c2 END CROSS JOIN rt0 ON ((((SQLITE_COMPILEOPTION_GET(rt0.c1))AND((NULL IN (vt1.lid, rt0.c0)))))AND(rt0.c2)));
SELECT * FROM vt2 LEFT OUTER JOIN vt0 ON ((- (rt0.c4)) IN ()) RIGHT OUTER JOIN rt0 ON (NOT ((('x/䡕d') NOT BETWEEN (rt0.c1) AND (vt2.c0)))) WHERE (COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c3, ((((0xffffffffaa0d2577)OR(rt0.c3)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) ORDER BY ((vt2.c0) BETWEEN (((((rt0.c3)OR(vt0.c0)))OR(rt0.c3))) AND ((~ (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c3, ((((0Xffffffffaa0d2577)OR(rt0.c3)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON ((- (rt0.c4)) IN ()) RIGHT OUTER JOIN rt0 ON (NOT ((('x/䡕d') NOT BETWEEN (rt0.c1) AND (vt2.c0)))) ORDER BY ((vt2.c0) BETWEEN (((((rt0.c3)OR(vt0.c0)))OR(rt0.c3))) AND ((~ (rt0.c0))))  NULLS FIRST);
SELECT * FROM vt2 LEFT OUTER JOIN vt0 ON ((- (rt0.c4)) IN ()) RIGHT OUTER JOIN rt0 ON (NOT ((('x/䡕d') NOT BETWEEN (rt0.c1) AND (vt2.c0)))) WHERE (COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c3, ((((0xffffffffaa0d2577)OR(rt0.c3)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) ORDER BY ((vt2.c0) BETWEEN (((((rt0.c3)OR(vt0.c0)))OR(rt0.c3))) AND ((~ (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c3, ((((0Xffffffffaa0d2577)OR(rt0.c3)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON ((- (rt0.c4)) IN ()) RIGHT OUTER JOIN rt0 ON (NOT ((('x/䡕d') NOT BETWEEN (rt0.c1) AND (vt2.c0)))) ORDER BY ((vt2.c0) BETWEEN (((((rt0.c3)OR(vt0.c0)))OR(rt0.c3))) AND ((~ (rt0.c0))))  NULLS FIRST);
SELECT * FROM vt2 LEFT OUTER JOIN vt0 ON ((- (rt0.c4)) IN ()) RIGHT OUTER JOIN rt0 ON (NOT ((('x/䡕d') NOT BETWEEN (rt0.c1) AND (vt2.c0)))) WHERE (COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c3, ((((0xffffffffaa0d2577)OR(rt0.c3)))AND(rt0.c0)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) ORDER BY ((vt2.c0) BETWEEN (((((rt0.c3)OR(vt0.c0)))OR(rt0.c3))) AND ((~ (rt0.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((LIKELY(DISTINCT vt1.c0))>>(((vt1.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt1.c0))>>(((vt1.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((LIKELY(DISTINCT vt1.c0))>>(((vt1.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt1.c0))>>(((vt1.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((LIKELY(DISTINCT vt1.c0))>>(((vt1.c0)+(vt1.c0)))));
SELECT COUNT(*) FROM vt1, rt0, vt0, vt2 WHERE (((vt1.c0)&(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt0, vt2);
SELECT COUNT(*) FROM vt1, rt0, vt0, vt2 WHERE (((vt1.c0)&(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0, vt0, vt2);
SELECT COUNT(*) FROM vt1, rt0, vt0, vt2 WHERE (((vt1.c0)&(rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt2 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.lid ELSE vt1.c0 END DESC, CASE WHEN (vt1.lid IN (vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END WHEN ((vt1.lid)LIKE(vt1.c0)) THEN (+ (vt1.c0)) WHEN ((vt1.lid)/(vt1.c0)) THEN (vt1.lid IN ()) END, (((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))<((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.lid ELSE vt1.c0 END DESC, CASE WHEN (vt1.lid IN (vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END WHEN ((vt1.lid)LIKE(vt1.c0)) THEN (+ (vt1.c0)) WHEN ((vt1.lid)/(vt1.c0)) THEN (vt1.lid IN ()) END, (((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))<((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.lid ELSE vt1.c0 END DESC, CASE WHEN (vt1.lid IN (vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END WHEN ((vt1.lid)LIKE(vt1.c0)) THEN (+ (vt1.c0)) WHEN ((vt1.lid)/(vt1.c0)) THEN (vt1.lid IN ()) END, (((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))<((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.lid ELSE vt1.c0 END DESC, CASE WHEN (vt1.lid IN (vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END WHEN ((vt1.lid)LIKE(vt1.c0)) THEN (+ (vt1.c0)) WHEN ((vt1.lid)/(vt1.c0)) THEN (vt1.lid IN ()) END, (((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))<((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((((((((((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.lid ELSE vt1.c0 END DESC, CASE WHEN (vt1.lid IN (vt1.lid)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END WHEN ((vt1.lid)LIKE(vt1.c0)) THEN (+ (vt1.c0)) WHEN ((vt1.lid)/(vt1.c0)) THEN (vt1.lid IN ()) END, (((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))<((vt1.lid, vt1.c0, vt1.c0, vt1.lid, vt1.lid))) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0, vt1, vt0 WHERE (NULLIF(((vt1.lid)GLOB(rt0.c1)), -6.94978989E8));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.lid)GLOB(rt0.c1)), -6.94978989E8)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (NULLIF(((vt1.lid)GLOB(rt0.c1)), -6.94978989E8));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.lid)GLOB(rt0.c1)), -6.94978989E8)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (NULLIF(((vt1.lid)GLOB(rt0.c1)), -6.94978989E8));
SELECT * FROM vt1 WHERE ((((vt1.lid IN (vt1.lid))) NOT BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.lid)&(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN (vt1.lid))) NOT BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.lid)&(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.lid IN (vt1.lid))) NOT BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.lid)&(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid IN (vt1.lid))) NOT BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.lid)&(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.lid IN (vt1.lid))) NOT BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((vt1.lid)&(vt1.lid)))));
SELECT COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (((((((vt0.c0))>=((vt2.c1))))OR(0.03995106476640231)))AND(CAST(x'94f1' AS REAL))) WHERE (((((vt0.c0)AND(rt0.c2))) IS TRUE)) ORDER BY json_valid((~ (rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (((((((vt0.c0))>=((vt2.c1))))OR(0.03995106476640231)))AND(CAST(x'94f1' AS REAL))) ORDER BY json_valid((~ (rt0.c4)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (((((((vt0.c0))>=((vt2.c1))))OR(0.03995106476640231)))AND(CAST(x'94f1' AS REAL))) WHERE (((((vt0.c0)AND(rt0.c2))) IS TRUE)) ORDER BY json_valid((~ (rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (((((((vt0.c0))>=((vt2.c1))))OR(0.03995106476640231)))AND(CAST(x'94f1' AS REAL))) ORDER BY json_valid((~ (rt0.c4)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (((((((vt0.c0))>=((vt2.c1))))OR(0.03995106476640231)))AND(CAST(x'94f1' AS REAL))) WHERE (((((vt0.c0)AND(rt0.c2))) IS TRUE)) ORDER BY json_valid((~ (rt0.c4)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))))=(((((((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))) DESC, ((- (vt1.c0)) IN (((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)), ((vt1.c0)/(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))))==(((((((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))) DESC, ((- (vt1.c0)) IN (((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)), ((vt1.c0)/(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))))=(((((((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))) DESC, ((- (vt1.c0)) IN (((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)), ((vt1.c0)/(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))))==(((((((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))) DESC, ((- (vt1.c0)) IN (((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)), ((vt1.c0)/(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))))=(((((((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))AND(vt1.lid)))OR(vt1.lid)))) DESC, ((- (vt1.c0)) IN (((((vt1.lid)AND(vt1.lid)))AND(vt1.c0)), ((vt1.c0)/(vt1.c0))));
SELECT ALL * FROM vt0, rt0, vt2, vt1 WHERE (CAST((((rt0.c1))>=((rt0.c2))) AS NUMERIC)) ORDER BY CHAR(rt0.c3 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, vt2, vt1 ORDER BY CHAR(rt0.c3 COLLATE RTRIM));
SELECT ALL * FROM vt0, rt0, vt2, vt1 WHERE (CAST((((rt0.c1))>=((rt0.c2))) AS NUMERIC)) ORDER BY CHAR(rt0.c3 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))>=((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, vt2, vt1 ORDER BY CHAR(rt0.c3 COLLATE RTRIM));
SELECT ALL * FROM vt0, rt0, vt2, vt1 WHERE (CAST((((rt0.c1))>=((rt0.c2))) AS NUMERIC)) ORDER BY CHAR(rt0.c3 COLLATE RTRIM);
SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))AND(((vt1.lid) NOTNULL))))OR(vt1.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))AND(((vt1.lid) NOTNULL))))OR(vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))AND(((vt1.lid) NOTNULL))))OR(vt1.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))AND(((vt1.lid) NOTNULL))))OR(vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))AND(((vt1.lid) NOTNULL))))OR(vt1.lid COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE (((((rt0.c0, rt0.c0, vt2.c2))==((rt0.c1, rt0.c3, vt0.c1))) IN ())) ORDER BY ((((load_extension(rt0.c4, NULL))OR('')))AND(CASE vt2.c1  WHEN rt0.c2 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c0, vt2.c2))==((rt0.c1, rt0.c3, vt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((((load_extension(rt0.c4, NULL))OR('')))AND(CASE vt2.c1  WHEN rt0.c2 THEN rt0.c2 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE (((((rt0.c0, rt0.c0, vt2.c2))==((rt0.c1, rt0.c3, vt0.c1))) IN ())) ORDER BY ((((load_extension(rt0.c4, NULL))OR('')))AND(CASE vt2.c1  WHEN rt0.c2 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c0, vt2.c2))==((rt0.c1, rt0.c3, vt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((((load_extension(rt0.c4, NULL))OR('')))AND(CASE vt2.c1  WHEN rt0.c2 THEN rt0.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ('-833094735');
SELECT SUM(count) FROM (SELECT (('-833094735') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('-833094735');
SELECT SUM(count) FROM (SELECT (('-833094735') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('-833094735');
SELECT COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt2, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, vt2, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (CAST(vt1.c0 AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC)))>((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) INNER JOIN vt1 ON (- (((vt1.c0) IS TRUE))) WHERE ((rt0.c4 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC)))>((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) INNER JOIN vt1 ON (- (((vt1.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC)))>((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) INNER JOIN vt1 ON (- (((vt1.c0) IS TRUE))) WHERE ((rt0.c4 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC)))>((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) INNER JOIN vt1 ON (- (((vt1.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC)))>((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))) INNER JOIN vt1 ON (- (((vt1.c0) IS TRUE))) WHERE ((rt0.c4 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE (((((((((rt0.c0)AND(0.08652286350281746)))AND(0.2827369280263561)))AND(rt0.c1)))AND(vt2.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(0.08652286350281746)))AND(0.2827369280263561)))AND(rt0.c1)))AND(vt2.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE (((((((((rt0.c0)AND(0.08652286350281746)))AND(0.2827369280263561)))AND(rt0.c1)))AND(vt2.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(0.08652286350281746)))AND(0.2827369280263561)))AND(rt0.c1)))AND(vt2.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE (((((((((rt0.c0)AND(0.08652286350281746)))AND(0.2827369280263561)))AND(rt0.c1)))AND(vt2.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), (NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), (NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), (NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), (NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)), (NOT (vt0.c0)));
SELECT * FROM rt0, vt0 NATURAL JOIN vt2 WHERE (CASE CAST(NULL AS INTEGER)  WHEN ((((0.657143855099755)AND(vt2.c2)))OR(vt0.c0)) THEN CASE WHEN 0.596867088213352 THEN vt2.c1 ELSE vt2.c0 END ELSE ((rt0.c4) NOTNULL) END) ORDER BY ']r&h0' COLLATE NOCASE DESC, CAST((rt0.c4 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(NULL AS INTEGER)  WHEN ((((0.657143855099755)AND(vt2.c2)))OR(vt0.c0)) THEN CASE WHEN 0.596867088213352 THEN vt2.c1 ELSE vt2.c0 END ELSE ((rt0.c4) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt2 ORDER BY ']r&h0' COLLATE NOCASE DESC, CAST((rt0.c4 IN ()) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0, vt0 NATURAL JOIN vt2 WHERE (CASE CAST(NULL AS INTEGER)  WHEN ((((0.657143855099755)AND(vt2.c2)))OR(vt0.c0)) THEN CASE WHEN 0.596867088213352 THEN vt2.c1 ELSE vt2.c0 END ELSE ((rt0.c4) NOTNULL) END) ORDER BY ']r&h0' COLLATE NOCASE DESC, CAST((rt0.c4 IN ()) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(NULL AS INTEGER)  WHEN ((((0.657143855099755)AND(vt2.c2)))OR(vt0.c0)) THEN CASE WHEN 0.596867088213352 THEN vt2.c1 ELSE vt2.c0 END ELSE ((rt0.c4) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt2 ORDER BY ']r&h0' COLLATE NOCASE DESC, CAST((rt0.c4 IN ()) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0, vt0 NATURAL JOIN vt2 WHERE (CASE CAST(NULL AS INTEGER)  WHEN ((((0.657143855099755)AND(vt2.c2)))OR(vt0.c0)) THEN CASE WHEN 0.596867088213352 THEN vt2.c1 ELSE vt2.c0 END ELSE ((rt0.c4) NOTNULL) END) ORDER BY ']r&h0' COLLATE NOCASE DESC, CAST((rt0.c4 IN ()) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM vt2, rt0 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY CASE vt2.c0 COLLATE BINARY  WHEN 0.9120522115042003 THEN ((rt0.c2)>(rt0.c3)) WHEN ((rt0.c1) NOTNULL) THEN CASE WHEN rt0.c3 THEN vt2.c0 END WHEN ((rt0.c2) NOT NULL) THEN (((vt2.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)IS(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt2.c1))) WHEN CAST(vt2.c2 AS NUMERIC) THEN (((vt2.c1))=((vt2.c2))) WHEN ((rt0.c3)%(rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN vt2.c0 THEN (('G<,xQ') NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4 COLLATE NOCASE) IS TRUE)  as count FROM vt2, rt0 ORDER BY CASE vt2.c0 COLLATE BINARY  WHEN 0.9120522115042003 THEN ((rt0.c2)>(rt0.c3)) WHEN ((rt0.c1) NOTNULL) THEN CASE WHEN rt0.c3 THEN vt2.c0 END WHEN ((rt0.c2) NOT NULL) THEN (((vt2.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)IS(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt2.c1))) WHEN CAST(vt2.c2 AS NUMERIC) THEN (((vt2.c1))==((vt2.c2))) WHEN ((rt0.c3)%(rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN vt2.c0 THEN (('G<,xQ') NOTNULL) END);
SELECT ALL * FROM vt2, rt0 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY CASE vt2.c0 COLLATE BINARY  WHEN 0.9120522115042003 THEN ((rt0.c2)>(rt0.c3)) WHEN ((rt0.c1) NOTNULL) THEN CASE WHEN rt0.c3 THEN vt2.c0 END WHEN ((rt0.c2) NOT NULL) THEN (((vt2.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)IS(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt2.c1))) WHEN CAST(vt2.c2 AS NUMERIC) THEN (((vt2.c1))=((vt2.c2))) WHEN ((rt0.c3)%(rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN vt2.c0 THEN (('G<,xQ') NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4 COLLATE NOCASE) IS TRUE)  as count FROM vt2, rt0 ORDER BY CASE vt2.c0 COLLATE BINARY  WHEN 0.9120522115042003 THEN ((rt0.c2)>(rt0.c3)) WHEN ((rt0.c1) NOTNULL) THEN CASE WHEN rt0.c3 THEN vt2.c0 END WHEN ((rt0.c2) NOT NULL) THEN (((vt2.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)IS(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt2.c1))) WHEN CAST(vt2.c2 AS NUMERIC) THEN (((vt2.c1))==((vt2.c2))) WHEN ((rt0.c3)%(rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN vt2.c0 THEN (('G<,xQ') NOTNULL) END);
SELECT ALL * FROM vt2, rt0 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY CASE vt2.c0 COLLATE BINARY  WHEN 0.9120522115042003 THEN ((rt0.c2)>(rt0.c3)) WHEN ((rt0.c1) NOTNULL) THEN CASE WHEN rt0.c3 THEN vt2.c0 END WHEN ((rt0.c2) NOT NULL) THEN (((vt2.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)IS(rt0.c3)) THEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt2.c1))) WHEN CAST(vt2.c2 AS NUMERIC) THEN (((vt2.c1))=((vt2.c2))) WHEN ((rt0.c3)%(rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN vt2.c0 THEN (('G<,xQ') NOTNULL) END;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(NULL AS REAL)) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(NULL AS REAL)) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(NULL AS REAL)) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(NULL AS REAL)) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(NULL AS REAL)) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END  WHEN (((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))AND(rt0.c1)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c3)) AND ((vt0.c1, vt1.lid, vt1.c0, vt1.c0, rt0.c1))) THEN (NULL IN ()) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((x'') NOT NULL) ELSE CASE vt1.lid  WHEN rt0.c1 THEN rt0.c1 END END) ORDER BY (((((((('-1646542541')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END  WHEN (((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))AND(rt0.c1)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c3)) AND ((vt0.c1, vt1.lid, vt1.c0, vt1.c0, rt0.c1))) THEN (NULL IN ()) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((x'') NOT NULL) ELSE CASE vt1.lid  WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((((('-1646542541')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END  WHEN (((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))AND(rt0.c1)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c3)) AND ((vt0.c1, vt1.lid, vt1.c0, vt1.c0, rt0.c1))) THEN (NULL IN ()) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((x'') NOT NULL) ELSE CASE vt1.lid  WHEN rt0.c1 THEN rt0.c1 END END) ORDER BY (((((((('-1646542541')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END  WHEN (((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))AND(rt0.c1)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c3)) AND ((vt0.c1, vt1.lid, vt1.c0, vt1.c0, rt0.c1))) THEN (NULL IN ()) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((x'') NOT NULL) ELSE CASE vt1.lid  WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((((('-1646542541')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (CASE CASE vt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END  WHEN (((vt1.c0, vt1.lid, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.lid)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN ((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))AND(rt0.c1)))AND(rt0.c2)) WHEN (((rt0.c1, rt0.c0, rt0.c2, vt0.c1, vt0.c1)) BETWEEN ((rt0.c1, rt0.c1, NULL, rt0.c1, rt0.c3)) AND ((vt0.c1, vt1.lid, vt1.c0, vt1.c0, rt0.c1))) THEN (NULL IN ()) WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((x'') NOT NULL) ELSE CASE vt1.lid  WHEN rt0.c1 THEN rt0.c1 END END) ORDER BY (((((((('-1646542541')OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 FULL OUTER JOIN rt0 ON CASE vt2.c1 COLLATE NOCASE  WHEN ((0X1ef9528d) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c0)OR(vt0.c1)) END WHERE (((((((vt0.c0)AND(rt0.c3)))AND(((x'')|(vt1.c0)))))OR('K<[￿'))) ORDER BY (((CAST(vt2.c1 AS REAL), ((rt0.c2)IS NOT(rt0.c0)), (- (rt0.c1))))<=((((rt0.c3) ISNULL), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0))>((rt0.c0)))))) ASC, (((vt2.c2)) BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c4)AND(NULL)))OR('/')))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt0.c3)))AND(((x'')|(vt1.c0)))))OR('K<[￿'))) IS TRUE)  as count FROM vt1, vt2, vt0 FULL OUTER JOIN rt0 ON CASE vt2.c1 COLLATE NOCASE  WHEN ((0x1ef9528d) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c0)OR(vt0.c1)) END ORDER BY (((CAST(vt2.c1 AS REAL), ((rt0.c2)IS NOT(rt0.c0)), (- (rt0.c1))))<=((((rt0.c3) ISNULL), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0))>((rt0.c0)))))) ASC, (((vt2.c2)) BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c4)AND(NULL)))OR('/'))))));
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 FULL OUTER JOIN rt0 ON CASE vt2.c1 COLLATE NOCASE  WHEN ((0X1ef9528d) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c0)OR(vt0.c1)) END WHERE (((((((vt0.c0)AND(rt0.c3)))AND(((x'')|(vt1.c0)))))OR('K<[￿'))) ORDER BY (((CAST(vt2.c1 AS REAL), ((rt0.c2)IS NOT(rt0.c0)), (- (rt0.c1))))<=((((rt0.c3) ISNULL), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0))>((rt0.c0)))))) ASC, (((vt2.c2)) BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c4)AND(NULL)))OR('/')))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt0.c3)))AND(((x'')|(vt1.c0)))))OR('K<[￿'))) IS TRUE)  as count FROM vt1, vt2, vt0 FULL OUTER JOIN rt0 ON CASE vt2.c1 COLLATE NOCASE  WHEN ((0x1ef9528d) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c0)OR(vt0.c1)) END ORDER BY (((CAST(vt2.c1 AS REAL), ((rt0.c2)IS NOT(rt0.c0)), (- (rt0.c1))))<=((((rt0.c3) ISNULL), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0))>((rt0.c0)))))) ASC, (((vt2.c2)) BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c4)AND(NULL)))OR('/'))))));
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 FULL OUTER JOIN rt0 ON CASE vt2.c1 COLLATE NOCASE  WHEN ((0X1ef9528d) IS TRUE) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c0)OR(vt0.c1)) END WHERE (((((((vt0.c0)AND(rt0.c3)))AND(((x'')|(vt1.c0)))))OR('K<[￿'))) ORDER BY (((CAST(vt2.c1 AS REAL), ((rt0.c2)IS NOT(rt0.c0)), (- (rt0.c1))))<=((((rt0.c3) ISNULL), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c0))>((rt0.c0)))))) ASC, (((vt2.c2)) BETWEEN (((+ (vt0.c0)))) AND ((((((rt0.c4)AND(NULL)))OR('/')))));
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN rt0 ON CASE (~ (vt2.c2))  WHEN CASE WHEN rt0.c0 THEN vt2.c0 ELSE vt2.c1 END THEN (- (vt2.c0)) END WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2) ISNULL) ELSE (((0xffffffff9f90914a)) BETWEEN ((rt0.c0)) AND ((1.938518729E9))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c2) ISNULL) ELSE (((0xffffffff9f90914a)) BETWEEN ((rt0.c0)) AND ((1.938518729E9))) END) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON CASE (~ (vt2.c2))  WHEN CASE WHEN rt0.c0 THEN vt2.c0 ELSE vt2.c1 END THEN (- (vt2.c0)) END);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN rt0 ON CASE (~ (vt2.c2))  WHEN CASE WHEN rt0.c0 THEN vt2.c0 ELSE vt2.c1 END THEN (- (vt2.c0)) END WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2) ISNULL) ELSE (((0xffffffff9f90914a)) BETWEEN ((rt0.c0)) AND ((1.938518729E9))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((rt0.c2) ISNULL) ELSE (((0xffffffff9f90914a)) BETWEEN ((rt0.c0)) AND ((1.938518729E9))) END) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON CASE (~ (vt2.c2))  WHEN CASE WHEN rt0.c0 THEN vt2.c0 ELSE vt2.c1 END THEN (- (vt2.c0)) END);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN rt0 ON CASE (~ (vt2.c2))  WHEN CASE WHEN rt0.c0 THEN vt2.c0 ELSE vt2.c1 END THEN (- (vt2.c0)) END WHERE (CASE WHEN rt0.c2 THEN ((rt0.c2) ISNULL) ELSE (((0xffffffff9f90914a)) BETWEEN ((rt0.c0)) AND ((1.938518729E9))) END);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt2 WHERE (SUBSTR(((vt2.c1)=(vt2.c1)), (~ (vt2.c2))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((vt2.c1)=(vt2.c1)), (~ (vt2.c2)))) IS TRUE)  as count FROM vt1, vt2);
SELECT ALL * FROM vt1, vt2 WHERE (SUBSTR(((vt2.c1)=(vt2.c1)), (~ (vt2.c2))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((vt2.c1)=(vt2.c1)), (~ (vt2.c2)))) IS TRUE)  as count FROM vt1, vt2);
SELECT ALL * FROM vt1, vt2 WHERE (SUBSTR(((vt2.c1)=(vt2.c1)), (~ (vt2.c2))));
SELECT ALL * FROM vt0, vt1, vt2 WHERE (CAST(((vt2.c2) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, vt2);
SELECT ALL * FROM vt0, vt1, vt2 WHERE (CAST(((vt2.c2) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, vt2);
SELECT ALL * FROM vt0, vt1, vt2 WHERE (CAST(((vt2.c2) ISNULL) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) WHERE (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((0X5db3dc1c))) IN ())) ORDER BY ((((((vt1.lid, rt0.c4, vt1.c0))>=((NULL, vt1.c0, vt1.lid))), NULL, ((9.00346039E8) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<=(((((vt1.lid)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((vt1.c0)<=(rt0.c2)), ')ㅊ')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((0X5db3dc1c))) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) ORDER BY ((((((vt1.lid, rt0.c4, vt1.c0))>=((NULL, vt1.c0, vt1.lid))), NULL, ((9.00346039E8) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<=(((((vt1.lid)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((vt1.c0)<=(rt0.c2)), ')ㅊ')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) WHERE (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((0X5db3dc1c))) IN ())) ORDER BY ((((((vt1.lid, rt0.c4, vt1.c0))>=((NULL, vt1.c0, vt1.lid))), NULL, ((9.00346039E8) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<=(((((vt1.lid)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((vt1.c0)<=(rt0.c2)), ')ㅊ')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((0X5db3dc1c))) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) ORDER BY ((((((vt1.lid, rt0.c4, vt1.c0))>=((NULL, vt1.c0, vt1.lid))), NULL, ((9.00346039E8) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<=(((((vt1.lid)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((vt1.c0)<=(rt0.c2)), ')ㅊ')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON HEX(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4))) WHERE (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((0X5db3dc1c))) IN ())) ORDER BY ((((((vt1.lid, rt0.c4, vt1.c0))>=((NULL, vt1.c0, vt1.lid))), NULL, ((9.00346039E8) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<=(((((vt1.lid)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((vt1.c0)<=(rt0.c2)), ')ㅊ')))  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((NULL)AND(vt0.c0)))OR(vt0.c1)))/(rt0.c3)) WHERE ((((NOT (rt0.c1)))>>(rt0.c0))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1)))>>(rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((NULL)AND(vt0.c0)))OR(vt0.c1)))/(rt0.c3)) ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((NULL)AND(vt0.c0)))OR(vt0.c1)))/(rt0.c3)) WHERE ((((NOT (rt0.c1)))>>(rt0.c0))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1)))>>(rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((NULL)AND(vt0.c0)))OR(vt0.c1)))/(rt0.c3)) ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt0 ON ((((((NULL)AND(vt0.c0)))OR(vt0.c1)))/(rt0.c3)) WHERE ((((NOT (rt0.c1)))>>(rt0.c0))) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM vt2, vt0, vt1, rt0 WHERE (vt2.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c1) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT * FROM vt2, vt0, vt1, rt0 WHERE (vt2.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c1) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT * FROM vt2, vt0, vt1, rt0 WHERE (vt2.c1);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE ((((PRINTF(rt0.c4), JULIANDAY(vt0.c0, vt2.c2, rt0.c1, vt2.c0, vt2.c1, vt1.lid, rt0.c4), CASE vt1.lid  WHEN vt0.c1 THEN rt0.c2 WHEN vt1.lid THEN vt2.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt2.c0 THEN vt2.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))<=((CASE vt1.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 0Xffffffff81ad598e THEN vt0.c0 ELSE 0.5279736250719494 END, ((rt0.c0)>(vt2.c1)), vt2.c2))));
SELECT SUM(count) FROM (SELECT (((((PRINTF(rt0.c4), JULIANDAY(vt0.c0, vt2.c2, rt0.c1, vt2.c0, vt2.c1, vt1.lid, rt0.c4), CASE vt1.lid  WHEN vt0.c1 THEN rt0.c2 WHEN vt1.lid THEN vt2.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt2.c0 THEN vt2.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))<=((CASE vt1.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 0xffffffff81ad598e THEN vt0.c0 ELSE 0.5279736250719494 END, ((rt0.c0)>(vt2.c1)), vt2.c2)))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE ((((PRINTF(rt0.c4), JULIANDAY(vt0.c0, vt2.c2, rt0.c1, vt2.c0, vt2.c1, vt1.lid, rt0.c4), CASE vt1.lid  WHEN vt0.c1 THEN rt0.c2 WHEN vt1.lid THEN vt2.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt2.c0 THEN vt2.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))<=((CASE vt1.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 0Xffffffff81ad598e THEN vt0.c0 ELSE 0.5279736250719494 END, ((rt0.c0)>(vt2.c1)), vt2.c2))));
SELECT SUM(count) FROM (SELECT (((((PRINTF(rt0.c4), JULIANDAY(vt0.c0, vt2.c2, rt0.c1, vt2.c0, vt2.c1, vt1.lid, rt0.c4), CASE vt1.lid  WHEN vt0.c1 THEN rt0.c2 WHEN vt1.lid THEN vt2.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt2.c0 THEN vt2.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))<=((CASE vt1.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 0xffffffff81ad598e THEN vt0.c0 ELSE 0.5279736250719494 END, ((rt0.c0)>(vt2.c1)), vt2.c2)))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE ((((PRINTF(rt0.c4), JULIANDAY(vt0.c0, vt2.c2, rt0.c1, vt2.c0, vt2.c1, vt1.lid, rt0.c4), CASE vt1.lid  WHEN vt0.c1 THEN rt0.c2 WHEN vt1.lid THEN vt2.c2 WHEN vt1.c0 THEN rt0.c2 WHEN vt2.c0 THEN vt2.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))<=((CASE vt1.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 0Xffffffff81ad598e THEN vt0.c0 ELSE 0.5279736250719494 END, ((rt0.c0)>(vt2.c1)), vt2.c2))));
SELECT COUNT(*) FROM rt0, vt2 FULL OUTER JOIN vt0 ON (((vt0.c1)LIKE(vt2.c2)) IN ((vt0.c1 IN (2050259692)), (NOT (vt0.c0)))) WHERE (NULL) ORDER BY (((((vt0.c0)AND(rt0.c2)), rt0.c2, (vt2.c0 IN ()), (((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))), ((((rt0.c2)AND(vt2.c0)))AND(vt2.c0))))==(((~ ('xM/')), ((rt0.c2)&(vt2.c2)), CASE vt2.c0  WHEN vt0.c1 THEN NULL ELSE rt0.c1 END, (NOT (vt2.c2)), DATE(vt0.c1, vt2.c1, vt2.c1))))  NULLS FIRST, '..' ASC  NULLS FIRST, ((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))-(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt2 FULL OUTER JOIN vt0 ON (((vt0.c1)LIKE(vt2.c2)) IN ((vt0.c1 IN (2050259692)), (NOT (vt0.c0)))) ORDER BY (((((vt0.c0)AND(rt0.c2)), rt0.c2, (vt2.c0 IN ()), (((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))), ((((rt0.c2)AND(vt2.c0)))AND(vt2.c0))))==(((~ ('xM/')), ((rt0.c2)&(vt2.c2)), CASE vt2.c0  WHEN vt0.c1 THEN NULL ELSE rt0.c1 END, (NOT (vt2.c2)), DATE(vt0.c1, vt2.c1, vt2.c1))))  NULLS FIRST, '..' ASC  NULLS FIRST, ((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))-(x'')) ASC);
SELECT COUNT(*) FROM rt0, vt2 FULL OUTER JOIN vt0 ON (((vt0.c1)LIKE(vt2.c2)) IN ((vt0.c1 IN (2050259692)), (NOT (vt0.c0)))) WHERE (NULL) ORDER BY (((((vt0.c0)AND(rt0.c2)), rt0.c2, (vt2.c0 IN ()), (((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))), ((((rt0.c2)AND(vt2.c0)))AND(vt2.c0))))==(((~ ('xM/')), ((rt0.c2)&(vt2.c2)), CASE vt2.c0  WHEN vt0.c1 THEN NULL ELSE rt0.c1 END, (NOT (vt2.c2)), DATE(vt0.c1, vt2.c1, vt2.c1))))  NULLS FIRST, '..' ASC  NULLS FIRST, ((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))-(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt2 FULL OUTER JOIN vt0 ON (((vt0.c1)LIKE(vt2.c2)) IN ((vt0.c1 IN (2050259692)), (NOT (vt0.c0)))) ORDER BY (((((vt0.c0)AND(rt0.c2)), rt0.c2, (vt2.c0 IN ()), (((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))), ((((rt0.c2)AND(vt2.c0)))AND(vt2.c0))))==(((~ ('xM/')), ((rt0.c2)&(vt2.c2)), CASE vt2.c0  WHEN vt0.c1 THEN NULL ELSE rt0.c1 END, (NOT (vt2.c2)), DATE(vt0.c1, vt2.c1, vt2.c1))))  NULLS FIRST, '..' ASC  NULLS FIRST, ((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))-(x'')) ASC);
SELECT COUNT(*) FROM rt0, vt2 FULL OUTER JOIN vt0 ON (((vt0.c1)LIKE(vt2.c2)) IN ((vt0.c1 IN (2050259692)), (NOT (vt0.c0)))) WHERE (NULL) ORDER BY (((((vt0.c0)AND(rt0.c2)), rt0.c2, (vt2.c0 IN ()), (((vt0.c0)) BETWEEN ((vt2.c2)) AND ((vt0.c0))), ((((rt0.c2)AND(vt2.c0)))AND(vt2.c0))))==(((~ ('xM/')), ((rt0.c2)&(vt2.c2)), CASE vt2.c0  WHEN vt0.c1 THEN NULL ELSE rt0.c1 END, (NOT (vt2.c2)), DATE(vt0.c1, vt2.c1, vt2.c1))))  NULLS FIRST, '..' ASC  NULLS FIRST, ((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))-(x'')) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, vt2 WHERE (0.48395691530791785 COLLATE NOCASE) ORDER BY CASE (- (rt0.c3))  WHEN (vt0.c1 IN ()) THEN CASE '-2119345778'  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.lid END ELSE (rt0.c3 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.48395691530791785 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1, vt2 ORDER BY CASE (- (rt0.c3))  WHEN (vt0.c1 IN ()) THEN CASE '-2119345778'  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.lid END ELSE (rt0.c3 IN ()) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, vt2 WHERE (0.48395691530791785 COLLATE NOCASE) ORDER BY CASE (- (rt0.c3))  WHEN (vt0.c1 IN ()) THEN CASE '-2119345778'  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.lid END ELSE (rt0.c3 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.48395691530791785 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1, vt2 ORDER BY CASE (- (rt0.c3))  WHEN (vt0.c1 IN ()) THEN CASE '-2119345778'  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.lid END ELSE (rt0.c3 IN ()) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, vt2 WHERE (0.48395691530791785 COLLATE NOCASE) ORDER BY CASE (- (rt0.c3))  WHEN (vt0.c1 IN ()) THEN CASE '-2119345778'  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.lid END ELSE (rt0.c3 IN ()) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt2 CROSS JOIN vt1 ON CASE (vt2.c1 IN ())  WHEN vt2.c1 THEN ((vt2.c0)%(vt2.c2)) WHEN ((vt0.c0)IS(vt1.lid)) THEN vt2.c2 WHEN ((vt0.c1)<(vt2.c2)) THEN (- (vt0.c1)) WHEN ((vt1.lid) NOT BETWEEN (vt2.c0) AND (vt0.c0)) THEN ((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN UNLIKELY(vt2.c1) THEN ((vt2.c2) NOTNULL) END CROSS JOIN vt0 ON vt1.lid WHERE (CAST(vt1.lid AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.lid AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt2 CROSS JOIN vt1 ON CASE (vt2.c1 IN ())  WHEN vt2.c1 THEN ((vt2.c0)%(vt2.c2)) WHEN ((vt0.c0)IS(vt1.lid)) THEN vt2.c2 WHEN ((vt0.c1)<(vt2.c2)) THEN (- (vt0.c1)) WHEN ((vt1.lid) NOT BETWEEN (vt2.c0) AND (vt0.c0)) THEN ((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN UNLIKELY(vt2.c1) THEN ((vt2.c2) NOTNULL) END CROSS JOIN vt0 ON vt1.lid);
SELECT COUNT(*) FROM vt2 CROSS JOIN vt1 ON CASE (vt2.c1 IN ())  WHEN vt2.c1 THEN ((vt2.c0)%(vt2.c2)) WHEN ((vt0.c0)IS(vt1.lid)) THEN vt2.c2 WHEN ((vt0.c1)<(vt2.c2)) THEN (- (vt0.c1)) WHEN ((vt1.lid) NOT BETWEEN (vt2.c0) AND (vt0.c0)) THEN ((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN UNLIKELY(vt2.c1) THEN ((vt2.c2) NOTNULL) END CROSS JOIN vt0 ON vt1.lid WHERE (CAST(vt1.lid AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.lid AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt2 CROSS JOIN vt1 ON CASE (vt2.c1 IN ())  WHEN vt2.c1 THEN ((vt2.c0)%(vt2.c2)) WHEN ((vt0.c0)IS(vt1.lid)) THEN vt2.c2 WHEN ((vt0.c1)<(vt2.c2)) THEN (- (vt0.c1)) WHEN ((vt1.lid) NOT BETWEEN (vt2.c0) AND (vt0.c0)) THEN ((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN UNLIKELY(vt2.c1) THEN ((vt2.c2) NOTNULL) END CROSS JOIN vt0 ON vt1.lid);
SELECT COUNT(*) FROM vt2 CROSS JOIN vt1 ON CASE (vt2.c1 IN ())  WHEN vt2.c1 THEN ((vt2.c0)%(vt2.c2)) WHEN ((vt0.c0)IS(vt1.lid)) THEN vt2.c2 WHEN ((vt0.c1)<(vt2.c2)) THEN (- (vt0.c1)) WHEN ((vt1.lid) NOT BETWEEN (vt2.c0) AND (vt0.c0)) THEN ((vt2.c1) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN UNLIKELY(vt2.c1) THEN ((vt2.c2) NOTNULL) END CROSS JOIN vt0 ON vt1.lid WHERE (CAST(vt1.lid AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt2 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON rt0.c2 COLLATE NOCASE WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt2 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON rt0.c2 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt2 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON rt0.c2 COLLATE NOCASE WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt2 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON rt0.c2 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt2 INNER JOIN vt0 ON (- (NULL)) LEFT OUTER JOIN vt1 ON rt0.c2 COLLATE NOCASE WHERE (rt0.c1);
SELECT COUNT(*) FROM vt1, vt2, vt0 WHERE (QUOTE('xm/'));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE('xm/')) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT COUNT(*) FROM vt1, vt2, vt0 WHERE (QUOTE('xm/'));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE('xm/')) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT COUNT(*) FROM vt1, vt2, vt0 WHERE (QUOTE('xm/'));
SELECT COUNT(*) FROM vt1, vt0 WHERE (GLOB(vt0.c0, ((vt1.lid) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(vt0.c0, ((vt1.lid) BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (GLOB(vt0.c0, ((vt1.lid) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((GLOB(vt0.c0, ((vt1.lid) BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (GLOB(vt0.c0, ((vt1.lid) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (((vt1.c0) NOTNULL)) AND ('gI')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt1.c0) NOTNULL)) AND ('gI'))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (((vt1.c0) NOTNULL)) AND ('gI')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt1.c0) NOTNULL)) AND ('gI'))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (((vt1.c0) NOTNULL)) AND ('gI')));
SELECT COUNT(*) FROM vt1 WHERE (LOWER(DISTINCT (- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (- (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(DISTINCT (- (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (- (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(DISTINCT (- (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt2 WHERE ((((NOT (vt2.c1)))*((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt2.c1)))*((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt2);
SELECT ALL COUNT(*) FROM vt1, vt2 WHERE ((((NOT (vt2.c1)))*((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt2.c1)))*((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt2);
SELECT ALL COUNT(*) FROM vt1, vt2 WHERE ((((NOT (vt2.c1)))*((NOT (vt1.c0)))));
SELECT * FROM vt0, vt1, rt0 WHERE (COALESCE(DISTINCT ((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt1.lid)), LOWER(vt0.c1), rt0.c3 COLLATE RTRIM, (vt1.c0 IN ()))) ORDER BY LOWER(vt1.lid) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt1.lid)), LOWER(vt0.c1), rt0.c3 COLLATE RTRIM, (vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY LOWER(vt1.lid) COLLATE BINARY);
SELECT * FROM vt0, vt1, rt0 WHERE (COALESCE(DISTINCT ((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt1.lid)), LOWER(vt0.c1), rt0.c3 COLLATE RTRIM, (vt1.c0 IN ()))) ORDER BY LOWER(vt1.lid) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt1.lid)), LOWER(vt0.c1), rt0.c3 COLLATE RTRIM, (vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY LOWER(vt1.lid) COLLATE BINARY);
SELECT * FROM vt0, vt1, rt0 WHERE (COALESCE(DISTINCT ((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt1.lid)), LOWER(vt0.c1), rt0.c3 COLLATE RTRIM, (vt1.c0 IN ()))) ORDER BY LOWER(vt1.lid) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (vt0.c1);
SELECT ALL * FROM vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (vt2.c0);
SELECT ALL * FROM rt0 NATURAL JOIN vt2 WHERE (((((rt0.c4)LIKE(rt0.c1))) NOT BETWEEN (CAST(vt2.c1 AS NUMERIC)) AND ((- (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)LIKE(rt0.c1))) NOT BETWEEN (CAST(vt2.c1 AS NUMERIC)) AND ((- (NULL))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt2);
SELECT ALL * FROM rt0 NATURAL JOIN vt2 WHERE (((((rt0.c4)LIKE(rt0.c1))) NOT BETWEEN (CAST(vt2.c1 AS NUMERIC)) AND ((- (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)LIKE(rt0.c1))) NOT BETWEEN (CAST(vt2.c1 AS NUMERIC)) AND ((- (NULL))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt2);
SELECT ALL * FROM rt0 NATURAL JOIN vt2 WHERE (((((rt0.c4)LIKE(rt0.c1))) NOT BETWEEN (CAST(vt2.c1 AS NUMERIC)) AND ((- (NULL)))));
SELECT ALL COUNT(*) FROM vt2 WHERE ('-927393279');
SELECT SUM(count) FROM (SELECT (('-927393279') IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ('-927393279');
SELECT SUM(count) FROM (SELECT (('-927393279') IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ('-927393279');
SELECT * FROM vt2, rt0 WHERE ((((((- (vt2.c1)))OR(((vt2.c2) IS TRUE))))OR(((vt2.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt2.c1)))OR(((vt2.c2) IS TRUE))))OR(((vt2.c2) NOT NULL)))) IS TRUE)  as count FROM vt2, rt0);
SELECT * FROM vt2, rt0 WHERE ((((((- (vt2.c1)))OR(((vt2.c2) IS TRUE))))OR(((vt2.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt2.c1)))OR(((vt2.c2) IS TRUE))))OR(((vt2.c2) NOT NULL)))) IS TRUE)  as count FROM vt2, rt0);
SELECT * FROM vt2, rt0 WHERE ((((((- (vt2.c1)))OR(((vt2.c2) IS TRUE))))OR(((vt2.c2) NOT NULL))));
SELECT COUNT(*) FROM vt2, rt0, vt0, vt1 WHERE (((CAST(vt2.c2 AS INTEGER)) BETWEEN (((vt2.c0)AND(rt0.c2))) AND ((~ (vt2.c2))))) ORDER BY (((((rt0.c1, vt0.c1, vt0.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.lid, vt2.c2, vt2.c2)) AND ((vt1.lid, rt0.c3, x'', rt0.c2, vt2.c2)))) IS FALSE) DESC  NULLS LAST, json_object(vt2.c1 COLLATE BINARY, CAST(vt1.lid AS NUMERIC))  NULLS LAST, ((((rt0.c0))==((vt2.c0))) IN (vt2.c1 COLLATE NOCASE, ((rt0.c4)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c2 AS INTEGER)) BETWEEN (((vt2.c0)AND(rt0.c2))) AND ((~ (vt2.c2))))) IS TRUE)  as count FROM vt2, rt0, vt0 NOT INDEXED, vt1 ORDER BY (((((rt0.c1, vt0.c1, vt0.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.lid, vt2.c2, vt2.c2)) AND ((vt1.lid, rt0.c3, x'', rt0.c2, vt2.c2)))) IS FALSE) DESC  NULLS LAST, json_object(vt2.c1 COLLATE BINARY, CAST(vt1.lid AS NUMERIC))  NULLS LAST, ((((rt0.c0))=((vt2.c0))) IN (vt2.c1 COLLATE NOCASE, ((rt0.c4)<<(vt1.c0)))));
SELECT COUNT(*) FROM vt2, rt0, vt0, vt1 WHERE (((CAST(vt2.c2 AS INTEGER)) BETWEEN (((vt2.c0)AND(rt0.c2))) AND ((~ (vt2.c2))))) ORDER BY (((((rt0.c1, vt0.c1, vt0.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.lid, vt2.c2, vt2.c2)) AND ((vt1.lid, rt0.c3, x'', rt0.c2, vt2.c2)))) IS FALSE) DESC  NULLS LAST, json_object(vt2.c1 COLLATE BINARY, CAST(vt1.lid AS NUMERIC))  NULLS LAST, ((((rt0.c0))==((vt2.c0))) IN (vt2.c1 COLLATE NOCASE, ((rt0.c4)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c2 AS INTEGER)) BETWEEN (((vt2.c0)AND(rt0.c2))) AND ((~ (vt2.c2))))) IS TRUE)  as count FROM vt2, rt0, vt0 NOT INDEXED, vt1 ORDER BY (((((rt0.c1, vt0.c1, vt0.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.lid, vt2.c2, vt2.c2)) AND ((vt1.lid, rt0.c3, x'', rt0.c2, vt2.c2)))) IS FALSE) DESC  NULLS LAST, json_object(vt2.c1 COLLATE BINARY, CAST(vt1.lid AS NUMERIC))  NULLS LAST, ((((rt0.c0))=((vt2.c0))) IN (vt2.c1 COLLATE NOCASE, ((rt0.c4)<<(vt1.c0)))));
SELECT COUNT(*) FROM vt2, rt0, vt0, vt1 WHERE (((CAST(vt2.c2 AS INTEGER)) BETWEEN (((vt2.c0)AND(rt0.c2))) AND ((~ (vt2.c2))))) ORDER BY (((((rt0.c1, vt0.c1, vt0.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, vt1.lid, vt2.c2, vt2.c2)) AND ((vt1.lid, rt0.c3, x'', rt0.c2, vt2.c2)))) IS FALSE) DESC  NULLS LAST, json_object(vt2.c1 COLLATE BINARY, CAST(vt1.lid AS NUMERIC))  NULLS LAST, ((((rt0.c0))==((vt2.c0))) IN (vt2.c1 COLLATE NOCASE, ((rt0.c4)<<(vt1.c0))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)=(vt1.lid)), (((vt0.c0, vt1.lid, vt1.lid)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c1)) AND ((NULL, vt0.c0, vt0.c1))), ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)))) AND (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_array_length(vt0.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.lid) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)=(vt1.lid)), (((vt0.c0, vt1.lid, vt1.lid)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c1)) AND ((NULL, vt0.c0, vt0.c1))), ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)))) AND (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_array_length(vt0.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.lid) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)=(vt1.lid)), (((vt0.c0, vt1.lid, vt1.lid)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c1)) AND ((NULL, vt0.c0, vt0.c1))), ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)))) AND (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_array_length(vt0.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.lid) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)=(vt1.lid)), (((vt0.c0, vt1.lid, vt1.lid)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c1)) AND ((NULL, vt0.c0, vt0.c1))), ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)))) AND (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_array_length(vt0.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.lid) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c1)=(vt1.lid)), (((vt0.c0, vt1.lid, vt1.lid)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c1)) AND ((NULL, vt0.c0, vt0.c1))), ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)))) AND (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_array_length(vt0.c0, vt0.c0), ((vt0.c1) BETWEEN (vt1.lid) AND (vt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c4, rt0.c1) AS TEXT)) ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN x'' WHEN (~ (rt0.c2)) THEN (((rt0.c0, -1.7976931348623157E308, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c3))) WHEN rt0.c4 COLLATE BINARY THEN rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(rt0.c4, rt0.c1) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN x'' WHEN (~ (rt0.c2)) THEN (((rt0.c0, -1.7976931348623157E308, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c3))) WHEN rt0.c4 COLLATE BINARY THEN rt0.c1 END DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c4, rt0.c1) AS TEXT)) ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN x'' WHEN (~ (rt0.c2)) THEN (((rt0.c0, -1.7976931348623157E308, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c3))) WHEN rt0.c4 COLLATE BINARY THEN rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(NULLIF(rt0.c4, rt0.c1) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN x'' WHEN (~ (rt0.c2)) THEN (((rt0.c0, -1.7976931348623157E308, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c3))) WHEN rt0.c4 COLLATE BINARY THEN rt0.c1 END DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c4, rt0.c1) AS TEXT)) ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN x'' WHEN (~ (rt0.c2)) THEN (((rt0.c0, -1.7976931348623157E308, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c3))) WHEN rt0.c4 COLLATE BINARY THEN rt0.c1 END DESC;
SELECT * FROM rt0, vt2, vt0 WHERE (CASE ((vt0.c1)LIKE(rt0.c3))  WHEN SQLITE_VERSION() THEN ((((vt2.c1)AND(vt0.c0)))AND(rt0.c1)) WHEN ((vt2.c0) NOTNULL) THEN CASE WHEN vt0.c1 THEN '-710450050' END WHEN ((vt2.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS INTEGER) END) ORDER BY ((CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 END)-((- (vt0.c1)))), ((rt0.c3) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((-1128314795)<=(rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)LIKE(rt0.c3))  WHEN SQLITE_VERSION() THEN ((((vt2.c1)AND(vt0.c0)))AND(rt0.c1)) WHEN ((vt2.c0) NOTNULL) THEN CASE WHEN vt0.c1 THEN '-710450050' END WHEN ((vt2.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 END)-((- (vt0.c1)))), ((rt0.c3) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((-1128314795)<=(rt0.c3)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt2, vt0 WHERE (CASE ((vt0.c1)LIKE(rt0.c3))  WHEN SQLITE_VERSION() THEN ((((vt2.c1)AND(vt0.c0)))AND(rt0.c1)) WHEN ((vt2.c0) NOTNULL) THEN CASE WHEN vt0.c1 THEN '-710450050' END WHEN ((vt2.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS INTEGER) END) ORDER BY ((CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 END)-((- (vt0.c1)))), ((rt0.c3) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((-1128314795)<=(rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)LIKE(rt0.c3))  WHEN SQLITE_VERSION() THEN ((((vt2.c1)AND(vt0.c0)))AND(rt0.c1)) WHEN ((vt2.c0) NOTNULL) THEN CASE WHEN vt0.c1 THEN '-710450050' END WHEN ((vt2.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 END)-((- (vt0.c1)))), ((rt0.c3) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((-1128314795)<=(rt0.c3)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt2, vt0 WHERE (CASE ((vt0.c1)LIKE(rt0.c3))  WHEN SQLITE_VERSION() THEN ((((vt2.c1)AND(vt0.c0)))AND(rt0.c1)) WHEN ((vt2.c0) NOTNULL) THEN CASE WHEN vt0.c1 THEN '-710450050' END WHEN ((vt2.c0) BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(rt0.c3 AS INTEGER) END) ORDER BY ((CASE rt0.c0  WHEN rt0.c4 THEN vt0.c0 END)-((- (vt0.c1)))), ((rt0.c3) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((-1128314795)<=(rt0.c3)))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((vt2.c2)/(rt0.c3)) END LEFT OUTER JOIN rt0 ON (+ (vt2.c2 COLLATE BINARY)) WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((vt2.c2)/(rt0.c3)) END LEFT OUTER JOIN rt0 ON (+ (vt2.c2 COLLATE BINARY)));
SELECT * FROM vt0, vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((vt2.c2)/(rt0.c3)) END LEFT OUTER JOIN rt0 ON (+ (vt2.c2 COLLATE BINARY)) WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN vt1 ON CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) THEN ((vt2.c2)/(rt0.c3)) END LEFT OUTER JOIN rt0 ON (+ (vt2.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt2 WHERE ((~ ((((vt2.c1, 0.8379048692414952, vt2.c0)) BETWEEN ((vt2.c1, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, '260914936')))))) ORDER BY ((CAST(vt2.c0 AS TEXT)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt2.c1, 0.8379048692414952, vt2.c0)) BETWEEN ((vt2.c1, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, '260914936')))))) IS TRUE)  as count FROM vt2 ORDER BY ((CAST(vt2.c0 AS TEXT)) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE ((~ ((((vt2.c1, 0.8379048692414952, vt2.c0)) BETWEEN ((vt2.c1, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, '260914936')))))) ORDER BY ((CAST(vt2.c0 AS TEXT)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt2.c1, 0.8379048692414952, vt2.c0)) BETWEEN ((vt2.c1, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, '260914936')))))) IS TRUE)  as count FROM vt2 ORDER BY ((CAST(vt2.c0 AS TEXT)) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE ((~ ((((vt2.c1, 0.8379048692414952, vt2.c0)) BETWEEN ((vt2.c1, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, '260914936')))))) ORDER BY ((CAST(vt2.c0 AS TEXT)) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON CAST(CASE WHEN rt0.c3 THEN vt2.c0 END AS TEXT) INNER JOIN vt2 ON (+ (rt0.c3 COLLATE BINARY)) WHERE ((NOT (vt2.c1 COLLATE BINARY))) ORDER BY ((-1.441979017E9) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt2.c2) BETWEEN (rt0.c3) AND (vt2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt2.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON CAST(CASE WHEN rt0.c3 THEN vt2.c0 END AS TEXT) INNER JOIN vt2 ON (+ (rt0.c3 COLLATE BINARY)) ORDER BY ((-1.441979017E9) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt2.c2) BETWEEN (rt0.c3) AND (vt2.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON CAST(CASE WHEN rt0.c3 THEN vt2.c0 END AS TEXT) INNER JOIN vt2 ON (+ (rt0.c3 COLLATE BINARY)) WHERE ((NOT (vt2.c1 COLLATE BINARY))) ORDER BY ((-1.441979017E9) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt2.c2) BETWEEN (rt0.c3) AND (vt2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt2.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON CAST(CASE WHEN rt0.c3 THEN vt2.c0 END AS TEXT) INNER JOIN vt2 ON (+ (rt0.c3 COLLATE BINARY)) ORDER BY ((-1.441979017E9) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt2.c2) BETWEEN (rt0.c3) AND (vt2.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt2, vt0 WHERE (CASE vt2.c2  WHEN 0xffffffffa6581a98 THEN vt2.c0 COLLATE NOCASE ELSE (- (vt2.c1)) END) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ((CASE vt2.c2  WHEN 0Xffffffffa6581a98 THEN vt2.c0 COLLATE NOCASE ELSE (- (vt2.c1)) END) IS TRUE)  as count FROM vt2, vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()));
SELECT * FROM vt2, vt0 WHERE (CASE vt2.c2  WHEN 0xffffffffa6581a98 THEN vt2.c0 COLLATE NOCASE ELSE (- (vt2.c1)) END) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ((CASE vt2.c2  WHEN 0Xffffffffa6581a98 THEN vt2.c0 COLLATE NOCASE ELSE (- (vt2.c1)) END) IS TRUE)  as count FROM vt2, vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()));
SELECT * FROM vt2, vt0 WHERE (CASE vt2.c2  WHEN 0xffffffffa6581a98 THEN vt2.c0 COLLATE NOCASE ELSE (- (vt2.c1)) END) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ());
SELECT ALL * FROM rt0, vt0, vt2 WHERE (((rt0.c0) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((~ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((~ (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0, vt2);
SELECT ALL * FROM rt0, vt0, vt2 WHERE (((rt0.c0) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((~ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((~ (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0, vt2);
SELECT ALL * FROM rt0, vt0, vt2 WHERE (((rt0.c0) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((~ (rt0.c4)))));
SELECT * FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt1.lid))))%(((vt2.c2) BETWEEN (rt0.c0) AND (vt2.c2)))) INNER JOIN vt0 ON (((rt0.c4)AND(rt0.c2)) IN (x'')) WHERE (((((vt2.c0) BETWEEN (vt0.c1) AND (rt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt2.c1 THEN vt0.c1 WHEN rt0.c3 THEN vt1.lid WHEN vt0.c0 THEN vt2.c2 WHEN vt1.c0 THEN vt2.c1 ELSE vt2.c0 END))) ORDER BY vt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) BETWEEN (vt0.c1) AND (rt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt2.c1 THEN vt0.c1 WHEN rt0.c3 THEN vt1.lid WHEN vt0.c0 THEN vt2.c2 WHEN vt1.c0 THEN vt2.c1 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt1.lid))))%(((vt2.c2) BETWEEN (rt0.c0) AND (vt2.c2)))) INNER JOIN vt0 ON (((rt0.c4)AND(rt0.c2)) IN (x'')) ORDER BY vt2.c0  NULLS FIRST);
SELECT * FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt1.lid))))%(((vt2.c2) BETWEEN (rt0.c0) AND (vt2.c2)))) INNER JOIN vt0 ON (((rt0.c4)AND(rt0.c2)) IN (x'')) WHERE (((((vt2.c0) BETWEEN (vt0.c1) AND (rt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt2.c1 THEN vt0.c1 WHEN rt0.c3 THEN vt1.lid WHEN vt0.c0 THEN vt2.c2 WHEN vt1.c0 THEN vt2.c1 ELSE vt2.c0 END))) ORDER BY vt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) BETWEEN (vt0.c1) AND (rt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt2.c1 THEN vt0.c1 WHEN rt0.c3 THEN vt1.lid WHEN vt0.c0 THEN vt2.c2 WHEN vt1.c0 THEN vt2.c1 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt1.lid))))%(((vt2.c2) BETWEEN (rt0.c0) AND (vt2.c2)))) INNER JOIN vt0 ON (((rt0.c4)AND(rt0.c2)) IN (x'')) ORDER BY vt2.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN (- (0.5279736250719494)) ELSE ((rt0.c4)!=(vt0.c0)) END INNER JOIN rt0 ON ((((((((x'')OR(rt0.c3 COLLATE RTRIM)))OR((- (vt1.c0)))))AND(1.256258173E9)))AND((NOT (rt0.c4)))) WHERE (rt0.c3) ORDER BY CAST(rt0.c4 AS INTEGER) COLLATE BINARY, ((rt0.c3)GLOB(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN (- (0.5279736250719494)) ELSE ((rt0.c4)!=(vt0.c0)) END INNER JOIN rt0 ON ((((((((x'')OR(rt0.c3 COLLATE RTRIM)))OR((- (vt1.c0)))))AND(1.256258173E9)))AND((NOT (rt0.c4)))) ORDER BY CAST(rt0.c4 AS INTEGER) COLLATE BINARY, ((rt0.c3)GLOB(vt0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN (- (0.5279736250719494)) ELSE ((rt0.c4)!=(vt0.c0)) END INNER JOIN rt0 ON ((((((((x'')OR(rt0.c3 COLLATE RTRIM)))OR((- (vt1.c0)))))AND(1.256258173E9)))AND((NOT (rt0.c4)))) WHERE (rt0.c3) ORDER BY CAST(rt0.c4 AS INTEGER) COLLATE BINARY, ((rt0.c3)GLOB(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN (- (0.5279736250719494)) ELSE ((rt0.c4)!=(vt0.c0)) END INNER JOIN rt0 ON ((((((((x'')OR(rt0.c3 COLLATE RTRIM)))OR((- (vt1.c0)))))AND(1.256258173E9)))AND((NOT (rt0.c4)))) ORDER BY CAST(rt0.c4 AS INTEGER) COLLATE BINARY, ((rt0.c3)GLOB(vt0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN (- (0.5279736250719494)) ELSE ((rt0.c4)!=(vt0.c0)) END INNER JOIN rt0 ON ((((((((x'')OR(rt0.c3 COLLATE RTRIM)))OR((- (vt1.c0)))))AND(1.256258173E9)))AND((NOT (rt0.c4)))) WHERE (rt0.c3) ORDER BY CAST(rt0.c4 AS INTEGER) COLLATE BINARY, ((rt0.c3)GLOB(vt0.c0)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt0, vt2, vt1 WHERE (((x'' COLLATE NOCASE)+(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE)+(x''))) IS TRUE)  as count FROM vt0, vt2, vt1);
SELECT ALL COUNT(*) FROM vt0, vt2, vt1 WHERE (((x'' COLLATE NOCASE)+(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE)+(x''))) IS TRUE)  as count FROM vt0, vt2, vt1);
SELECT ALL COUNT(*) FROM vt0, vt2, vt1 WHERE (((x'' COLLATE NOCASE)+(x'')));
SELECT COUNT(*) FROM vt1 INNER JOIN vt2 ON ((rt0.c3 IN (vt2.c0)) IN (vt2.c1)) RIGHT OUTER JOIN rt0 ON ((((vt2.c1)IS(vt2.c0)))==(CASE WHEN rt0.c3 THEN vt2.c0 ELSE vt1.lid END)) CROSS JOIN vt0 ON (('-') IS FALSE) WHERE (CASE (vt0.c0 IN ())  WHEN ((((vt1.c0)OR(vt0.c1)))AND(rt0.c4)) THEN '-' ELSE COALESCE(vt2.c1, rt0.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((((vt1.c0)OR(vt0.c1)))AND(rt0.c4)) THEN '-' ELSE COALESCE(vt2.c1, rt0.c4) END) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON ((rt0.c3 IN (vt2.c0)) IN (vt2.c1)) RIGHT OUTER JOIN rt0 ON ((((vt2.c1)IS(vt2.c0)))==(CASE WHEN rt0.c3 THEN vt2.c0 ELSE vt1.lid END)) CROSS JOIN vt0 ON (('-') IS FALSE));
SELECT COUNT(*) FROM vt1 INNER JOIN vt2 ON ((rt0.c3 IN (vt2.c0)) IN (vt2.c1)) RIGHT OUTER JOIN rt0 ON ((((vt2.c1)IS(vt2.c0)))==(CASE WHEN rt0.c3 THEN vt2.c0 ELSE vt1.lid END)) CROSS JOIN vt0 ON (('-') IS FALSE) WHERE (CASE (vt0.c0 IN ())  WHEN ((((vt1.c0)OR(vt0.c1)))AND(rt0.c4)) THEN '-' ELSE COALESCE(vt2.c1, rt0.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN ((((vt1.c0)OR(vt0.c1)))AND(rt0.c4)) THEN '-' ELSE COALESCE(vt2.c1, rt0.c4) END) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON ((rt0.c3 IN (vt2.c0)) IN (vt2.c1)) RIGHT OUTER JOIN rt0 ON ((((vt2.c1)IS(vt2.c0)))==(CASE WHEN rt0.c3 THEN vt2.c0 ELSE vt1.lid END)) CROSS JOIN vt0 ON (('-') IS FALSE));
SELECT * FROM vt1 NOT INDEXED, rt0, vt2 FULL OUTER JOIN vt0 ON (((CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END, HEX(vt2.c1), ((vt1.c0) BETWEEN ('') AND (vt2.c2))))>((((rt0.c2)OR(vt2.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), ((vt2.c0) BETWEEN (vt2.c2) AND (rt0.c0))))) WHERE (x'') ORDER BY (((-1172134179)AND(vt2.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0, vt2 FULL OUTER JOIN vt0 ON (((CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END, HEX(vt2.c1), ((vt1.c0) BETWEEN ('') AND (vt2.c2))))>((((rt0.c2)OR(vt2.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), ((vt2.c0) BETWEEN (vt2.c2) AND (rt0.c0))))) ORDER BY (((-1172134179)AND(vt2.c2)) IN ()));
SELECT * FROM vt1 NOT INDEXED, rt0, vt2 FULL OUTER JOIN vt0 ON (((CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END, HEX(vt2.c1), ((vt1.c0) BETWEEN ('') AND (vt2.c2))))>((((rt0.c2)OR(vt2.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), ((vt2.c0) BETWEEN (vt2.c2) AND (rt0.c0))))) WHERE (x'') ORDER BY (((-1172134179)AND(vt2.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0, vt2 FULL OUTER JOIN vt0 ON (((CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END, HEX(vt2.c1), ((vt1.c0) BETWEEN ('') AND (vt2.c2))))>((((rt0.c2)OR(vt2.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), ((vt2.c0) BETWEEN (vt2.c2) AND (rt0.c0))))) ORDER BY (((-1172134179)AND(vt2.c2)) IN ()));
SELECT * FROM vt1 NOT INDEXED, rt0, vt2 FULL OUTER JOIN vt0 ON (((CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END, HEX(vt2.c1), ((vt1.c0) BETWEEN ('') AND (vt2.c2))))>((((rt0.c2)OR(vt2.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), ((vt2.c0) BETWEEN (vt2.c2) AND (rt0.c0))))) WHERE (x'') ORDER BY (((-1172134179)AND(vt2.c2)) IN ());
SELECT COUNT(*) FROM vt0, rt0, vt2 WHERE ((((((+ (rt0.c1)))OR(((((rt0.c0)OR(vt0.c0)))AND(vt2.c0)))))AND(0.7292628064632666)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))OR(((((rt0.c0)OR(vt0.c0)))AND(vt2.c0)))))AND(0.7292628064632666))) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT COUNT(*) FROM vt0, rt0, vt2 WHERE ((((((+ (rt0.c1)))OR(((((rt0.c0)OR(vt0.c0)))AND(vt2.c0)))))AND(0.7292628064632666)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))OR(((((rt0.c0)OR(vt0.c0)))AND(vt2.c0)))))AND(0.7292628064632666))) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT COUNT(*) FROM vt0, rt0, vt2 WHERE ((((((+ (rt0.c1)))OR(((((rt0.c0)OR(vt0.c0)))AND(vt2.c0)))))AND(0.7292628064632666)));
SELECT COUNT(*) FROM vt1 WHERE (((~ (vt1.lid)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt1.lid)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((~ (vt1.lid)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt1.lid)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((~ (vt1.lid)) IN ()));
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ((((rt0.c4))>=((vt0.c1))), ((vt0.c0) NOTNULL)))) ORDER BY (- (((0.13003111958682523)|(rt0.c2))))  NULLS FIRST, CASE (((rt0.c1, rt0.c3, rt0.c3))<=((vt0.c1, rt0.c4, rt0.c4)))  WHEN (((vt1.lid)) BETWEEN ((rt0.c2)) AND ((x''))) THEN rt0.c2 WHEN vt1.c0 COLLATE NOCASE THEN (vt1.lid IN ()) WHEN ((((vt1.c0)AND(rt0.c4)))OR(rt0.c2)) THEN (NULL IN (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS BLOB) IN ((((rt0.c4))>=((vt0.c1))), ((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (((0.13003111958682523)|(rt0.c2))))  NULLS FIRST, CASE (((rt0.c1, rt0.c3, rt0.c3))<=((vt0.c1, rt0.c4, rt0.c4)))  WHEN (((vt1.lid)) BETWEEN ((rt0.c2)) AND ((x''))) THEN rt0.c2 WHEN vt1.c0 COLLATE NOCASE THEN (vt1.lid IN ()) WHEN ((((vt1.c0)AND(rt0.c4)))OR(rt0.c2)) THEN (NULL IN (rt0.c1)) END DESC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ((((rt0.c4))>=((vt0.c1))), ((vt0.c0) NOTNULL)))) ORDER BY (- (((0.13003111958682523)|(rt0.c2))))  NULLS FIRST, CASE (((rt0.c1, rt0.c3, rt0.c3))<=((vt0.c1, rt0.c4, rt0.c4)))  WHEN (((vt1.lid)) BETWEEN ((rt0.c2)) AND ((x''))) THEN rt0.c2 WHEN vt1.c0 COLLATE NOCASE THEN (vt1.lid IN ()) WHEN ((((vt1.c0)AND(rt0.c4)))OR(rt0.c2)) THEN (NULL IN (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS BLOB) IN ((((rt0.c4))>=((vt0.c1))), ((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (((0.13003111958682523)|(rt0.c2))))  NULLS FIRST, CASE (((rt0.c1, rt0.c3, rt0.c3))<=((vt0.c1, rt0.c4, rt0.c4)))  WHEN (((vt1.lid)) BETWEEN ((rt0.c2)) AND ((x''))) THEN rt0.c2 WHEN vt1.c0 COLLATE NOCASE THEN (vt1.lid IN ()) WHEN ((((vt1.c0)AND(rt0.c4)))OR(rt0.c2)) THEN (NULL IN (rt0.c1)) END DESC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ((((rt0.c4))>=((vt0.c1))), ((vt0.c0) NOTNULL)))) ORDER BY (- (((0.13003111958682523)|(rt0.c2))))  NULLS FIRST, CASE (((rt0.c1, rt0.c3, rt0.c3))<=((vt0.c1, rt0.c4, rt0.c4)))  WHEN (((vt1.lid)) BETWEEN ((rt0.c2)) AND ((x''))) THEN rt0.c2 WHEN vt1.c0 COLLATE NOCASE THEN (vt1.lid IN ()) WHEN ((((vt1.c0)AND(rt0.c4)))OR(rt0.c2)) THEN (NULL IN (rt0.c1)) END DESC;
SELECT * FROM vt1, rt0, vt2 WHERE ((vt1.c0 COLLATE RTRIM IN ())) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, rt0, vt2 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1, rt0, vt2 WHERE ((vt1.c0 COLLATE RTRIM IN ())) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, rt0, vt2 ORDER BY vt1.c0 ASC);
SELECT * FROM vt1, rt0, vt2 WHERE ((vt1.c0 COLLATE RTRIM IN ())) ORDER BY vt1.c0 ASC;
SELECT * FROM vt1 WHERE (((0.6432533280274427 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0.6432533280274427 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((0.6432533280274427 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0.6432533280274427 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((0.6432533280274427 IN ()) IN ()));
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE ((NOT (CAST(vt2.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt2.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, vt2);
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE ((NOT (CAST(vt2.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt2.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, vt2);
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE ((NOT (CAST(vt2.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt2 ON ((vt2.c1 COLLATE NOCASE) ISNULL) WHERE (CAST(((((rt0.c1)OR(vt2.c0)))AND(vt2.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(vt2.c0)))AND(vt2.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt2 ON ((vt2.c1 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt2 ON ((vt2.c1 COLLATE NOCASE) ISNULL) WHERE (CAST(((((rt0.c1)OR(vt2.c0)))AND(vt2.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(vt2.c0)))AND(vt2.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt2 ON ((vt2.c1 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt2 ON ((vt2.c1 COLLATE NOCASE) ISNULL) WHERE (CAST(((((rt0.c1)OR(vt2.c0)))AND(vt2.c2)) AS INTEGER));
SELECT ALL * FROM rt0, vt0, vt2 WHERE (((((rt0.c2)<<(vt0.c1)))LIKE(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<(vt0.c1)))LIKE(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, vt2);
SELECT ALL * FROM rt0, vt0, vt2 WHERE (((((rt0.c2)<<(vt0.c1)))LIKE(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<(vt0.c1)))LIKE(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, vt2);
SELECT ALL * FROM rt0, vt0, vt2 WHERE (((((rt0.c2)<<(vt0.c1)))LIKE(rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((~ (rt0.c3))) ORDER BY (CAST(rt0.c2 AS BLOB) IN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt2.c1)))) ASC, CAST(rt0.c4 AS NUMERIC) COLLATE BINARY, ((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(x''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3))) IS TRUE)  as count FROM vt2, rt0, vt0 ORDER BY (CAST(rt0.c2 AS BLOB) IN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt2.c1)))) ASC, CAST(rt0.c4 AS NUMERIC) COLLATE BINARY, ((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(x''))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((~ (rt0.c3))) ORDER BY (CAST(rt0.c2 AS BLOB) IN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt2.c1)))) ASC, CAST(rt0.c4 AS NUMERIC) COLLATE BINARY, ((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(x''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3))) IS TRUE)  as count FROM vt2, rt0, vt0 ORDER BY (CAST(rt0.c2 AS BLOB) IN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt2.c1)))) ASC, CAST(rt0.c4 AS NUMERIC) COLLATE BINARY, ((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(x''))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((~ (rt0.c3))) ORDER BY (CAST(rt0.c2 AS BLOB) IN (((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt2.c1)))) ASC, CAST(rt0.c4 AS NUMERIC) COLLATE BINARY, ((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c1)))OR(x''))) IS TRUE) ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt2 ON (((((x'')) BETWEEN ((rt0.c4)) AND (('(Frc'))))&(rt0.c0)) WHERE (CASE WHEN ((((vt2.c0)AND(vt2.c1)))OR(vt2.c0)) THEN (- (rt0.c1)) ELSE ((((rt0.c4)AND(0.2048044058952564)))AND(vt2.c0)) END) ORDER BY CASE vt2.c0  WHEN rt0.c3 THEN '-1343479076' END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt2.c0)AND(vt2.c1)))OR(vt2.c0)) THEN (- (rt0.c1)) ELSE ((((rt0.c4)AND(0.2048044058952564)))AND(vt2.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt2 ON (((((x'')) BETWEEN ((rt0.c4)) AND (('(Frc'))))&(rt0.c0)) ORDER BY CASE vt2.c0  WHEN rt0.c3 THEN '-1343479076' END COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt2 ON (((((x'')) BETWEEN ((rt0.c4)) AND (('(Frc'))))&(rt0.c0)) WHERE (CASE WHEN ((((vt2.c0)AND(vt2.c1)))OR(vt2.c0)) THEN (- (rt0.c1)) ELSE ((((rt0.c4)AND(0.2048044058952564)))AND(vt2.c0)) END) ORDER BY CASE vt2.c0  WHEN rt0.c3 THEN '-1343479076' END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt2.c0)AND(vt2.c1)))OR(vt2.c0)) THEN (- (rt0.c1)) ELSE ((((rt0.c4)AND(0.2048044058952564)))AND(vt2.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt2 ON (((((x'')) BETWEEN ((rt0.c4)) AND (('(Frc'))))&(rt0.c0)) ORDER BY CASE vt2.c0  WHEN rt0.c3 THEN '-1343479076' END COLLATE BINARY DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt2 ON (((((x'')) BETWEEN ((rt0.c4)) AND (('(Frc'))))&(rt0.c0)) WHERE (CASE WHEN ((((vt2.c0)AND(vt2.c1)))OR(vt2.c0)) THEN (- (rt0.c1)) ELSE ((((rt0.c4)AND(0.2048044058952564)))AND(vt2.c0)) END) ORDER BY CASE vt2.c0  WHEN rt0.c3 THEN '-1343479076' END COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN vt2.c0 END)|(((rt0.c3)%(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN vt2.c0 END)|(((rt0.c3)%(rt0.c4))))) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN vt2.c0 END)|(((rt0.c3)%(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN vt2.c0 END)|(((rt0.c3)%(rt0.c4))))) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN vt2.c0 END)|(((rt0.c3)%(rt0.c4)))));
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (~ (CASE rt0.c4  WHEN rt0.c0 THEN 1543727685 END)) WHERE (CAST(((vt0.c1) IS TRUE) AS NUMERIC)) ORDER BY (~ ((~ (rt0.c1)))), (((+ (rt0.c4)))<(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (~ (CASE rt0.c4  WHEN rt0.c0 THEN 1543727685 END)) ORDER BY (~ ((~ (rt0.c1)))), (((+ (rt0.c4)))<(rt0.c2)) DESC);
SELECT COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (~ (CASE rt0.c4  WHEN rt0.c0 THEN 1543727685 END)) WHERE (CAST(((vt0.c1) IS TRUE) AS NUMERIC)) ORDER BY (~ ((~ (rt0.c1)))), (((+ (rt0.c4)))<(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (~ (CASE rt0.c4  WHEN rt0.c0 THEN 1543727685 END)) ORDER BY (~ ((~ (rt0.c1)))), (((+ (rt0.c4)))<(rt0.c2)) DESC);
SELECT COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON (~ (CASE rt0.c4  WHEN rt0.c0 THEN 1543727685 END)) WHERE (CAST(((vt0.c1) IS TRUE) AS NUMERIC)) ORDER BY (~ ((~ (rt0.c1)))), (((+ (rt0.c4)))<(rt0.c2)) DESC;
SELECT * FROM rt0, vt0, vt2, vt1 WHERE ((((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND ((NULL)))) IS TRUE)  as count FROM rt0, vt0, vt2, vt1);
SELECT * FROM rt0, vt0, vt2, vt1 WHERE ((((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND ((NULL)))) IS TRUE)  as count FROM rt0, vt0, vt2, vt1);
SELECT * FROM rt0, vt0, vt2, vt1 WHERE ((((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND ((NULL))));
SELECT * FROM vt2, rt0 WHERE ((((0.5060225600640097 IN (vt2.c0))) NOT BETWEEN (NULL) AND (' St6')));
SELECT SUM(count) FROM (SELECT ALL (((((0.5060225600640097 IN (vt2.c0))) NOT BETWEEN (NULL) AND (' St6'))) IS TRUE)  as count FROM vt2, rt0);
SELECT * FROM vt2, rt0 WHERE ((((0.5060225600640097 IN (vt2.c0))) NOT BETWEEN (NULL) AND (' St6')));
SELECT SUM(count) FROM (SELECT ALL (((((0.5060225600640097 IN (vt2.c0))) NOT BETWEEN (NULL) AND (' St6'))) IS TRUE)  as count FROM vt2, rt0);
SELECT * FROM vt2, rt0 WHERE ((((0.5060225600640097 IN (vt2.c0))) NOT BETWEEN (NULL) AND (' St6')));
SELECT ALL COUNT(*) FROM vt2, vt0, rt0 WHERE (CASE WHEN (- (vt2.c0)) THEN vt2.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt2.c0)) THEN vt2.c2 END) IS TRUE)  as count FROM vt2, vt0 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0 WHERE (CASE WHEN (- (vt2.c0)) THEN vt2.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt2.c0)) THEN vt2.c2 END) IS TRUE)  as count FROM vt2, vt0 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0 WHERE (CASE WHEN (- (vt2.c0)) THEN vt2.c2 END);
SELECT * FROM vt2, vt1, rt0, vt0 WHERE ((((rt0.c4, vt1.lid, vt2.c1)) BETWEEN (((rt0.c0 IN ()), ((((((((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(vt2.c0)))AND(0Xffffffffb7085fa8)))AND(rt0.c1)))AND(vt2.c1)))AND('TS3')))OR(rt0.c0)), ((vt0.c1) BETWEEN (vt2.c0) AND (vt2.c0)))) AND (((((rt0.c3))<=((rt0.c1))), json_extract(0.8850367466290616, rt0.c2), ((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, vt1.lid, vt2.c1)) BETWEEN (((rt0.c0 IN ()), ((((((((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(vt2.c0)))AND(0xffffffffb7085fa8)))AND(rt0.c1)))AND(vt2.c1)))AND('TS3')))OR(rt0.c0)), ((vt0.c1) BETWEEN (vt2.c0) AND (vt2.c0)))) AND (((((rt0.c3))<=((rt0.c1))), json_extract(0.8850367466290616, rt0.c2), ((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt2, vt1, rt0, vt0);
SELECT * FROM vt2, vt1, rt0, vt0 WHERE ((((rt0.c4, vt1.lid, vt2.c1)) BETWEEN (((rt0.c0 IN ()), ((((((((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(vt2.c0)))AND(0Xffffffffb7085fa8)))AND(rt0.c1)))AND(vt2.c1)))AND('TS3')))OR(rt0.c0)), ((vt0.c1) BETWEEN (vt2.c0) AND (vt2.c0)))) AND (((((rt0.c3))<=((rt0.c1))), json_extract(0.8850367466290616, rt0.c2), ((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, vt1.lid, vt2.c1)) BETWEEN (((rt0.c0 IN ()), ((((((((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(vt2.c0)))AND(0xffffffffb7085fa8)))AND(rt0.c1)))AND(vt2.c1)))AND('TS3')))OR(rt0.c0)), ((vt0.c1) BETWEEN (vt2.c0) AND (vt2.c0)))) AND (((((rt0.c3))<=((rt0.c1))), json_extract(0.8850367466290616, rt0.c2), ((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt2, vt1, rt0, vt0);
SELECT * FROM vt2, vt1, rt0, vt0 WHERE ((((rt0.c4, vt1.lid, vt2.c1)) BETWEEN (((rt0.c0 IN ()), ((((((((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(vt2.c0)))AND(0Xffffffffb7085fa8)))AND(rt0.c1)))AND(vt2.c1)))AND('TS3')))OR(rt0.c0)), ((vt0.c1) BETWEEN (vt2.c0) AND (vt2.c0)))) AND (((((rt0.c3))<=((rt0.c1))), json_extract(0.8850367466290616, rt0.c2), ((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((((vt2.c1 IN (vt0.c0, vt0.c1))) BETWEEN (((vt0.c1) ISNULL)) AND (CASE vt0.c1  WHEN vt2.c0 THEN vt2.c2 WHEN vt2.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt2.c1 IN (vt0.c0, vt0.c1))) BETWEEN (((vt0.c1) ISNULL)) AND (CASE vt0.c1  WHEN vt2.c0 THEN vt2.c2 WHEN vt2.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((((vt2.c1 IN (vt0.c0, vt0.c1))) BETWEEN (((vt0.c1) ISNULL)) AND (CASE vt0.c1  WHEN vt2.c0 THEN vt2.c2 WHEN vt2.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt2.c1 IN (vt0.c0, vt0.c1))) BETWEEN (((vt0.c1) ISNULL)) AND (CASE vt0.c1  WHEN vt2.c0 THEN vt2.c2 WHEN vt2.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((((vt2.c1 IN (vt0.c0, vt0.c1))) BETWEEN (((vt0.c1) ISNULL)) AND (CASE vt0.c1  WHEN vt2.c0 THEN vt2.c2 WHEN vt2.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c0 END)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(vt1.lid COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.lid COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(vt1.lid COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.lid COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(vt1.lid COLLATE RTRIM AS BLOB));
SELECT ALL * FROM vt1, vt2, rt0, vt0 WHERE (vt1.lid) ORDER BY (((vt1.lid IN ())) IS TRUE), (+ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))+(rt0.c4 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1, vt2, rt0, vt0 ORDER BY (((vt1.lid IN ())) IS TRUE), (+ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))+(rt0.c4 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt2, rt0, vt0 WHERE (vt1.lid) ORDER BY (((vt1.lid IN ())) IS TRUE), (+ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))+(rt0.c4 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1, vt2, rt0, vt0 ORDER BY (((vt1.lid IN ())) IS TRUE), (+ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))+(rt0.c4 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt2, rt0, vt0 WHERE (vt1.lid) ORDER BY (((vt1.lid IN ())) IS TRUE), (+ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))+(rt0.c4 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt2 WHERE ((vt2.c2 IN ()) COLLATE BINARY) ORDER BY ((NULL)<=(((((vt2.c1)AND(vt2.c2)))OR(vt2.c0)))) DESC  NULLS LAST, (((((((((vt2.c0)AND(vt2.c2)))OR(vt1.c0)))AND(vt1.lid)))OR(vt2.c1)) IN (CAST(vt2.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((vt2.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt2 ORDER BY ((NULL)<=(((((vt2.c1)AND(vt2.c2)))OR(vt2.c0)))) DESC  NULLS LAST, (((((((((vt2.c0)AND(vt2.c2)))OR(vt1.c0)))AND(vt1.lid)))OR(vt2.c1)) IN (CAST(vt2.c2 AS TEXT))));
SELECT ALL * FROM vt1, vt2 WHERE ((vt2.c2 IN ()) COLLATE BINARY) ORDER BY ((NULL)<=(((((vt2.c1)AND(vt2.c2)))OR(vt2.c0)))) DESC  NULLS LAST, (((((((((vt2.c0)AND(vt2.c2)))OR(vt1.c0)))AND(vt1.lid)))OR(vt2.c1)) IN (CAST(vt2.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((vt2.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt2 ORDER BY ((NULL)<=(((((vt2.c1)AND(vt2.c2)))OR(vt2.c0)))) DESC  NULLS LAST, (((((((((vt2.c0)AND(vt2.c2)))OR(vt1.c0)))AND(vt1.lid)))OR(vt2.c1)) IN (CAST(vt2.c2 AS TEXT))));
SELECT ALL * FROM vt1, vt2 WHERE ((vt2.c2 IN ()) COLLATE BINARY) ORDER BY ((NULL)<=(((((vt2.c1)AND(vt2.c2)))OR(vt2.c0)))) DESC  NULLS LAST, (((((((((vt2.c0)AND(vt2.c2)))OR(vt1.c0)))AND(vt1.lid)))OR(vt2.c1)) IN (CAST(vt2.c2 AS TEXT)));
SELECT COUNT(*) FROM vt2 WHERE (((((((vt2.c0)|(vt2.c2)))AND(((((vt2.c1)OR(vt2.c0)))AND(vt2.c1)))))OR(vt2.c0))) ORDER BY CAST(CAST(vt2.c0 AS TEXT) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0)|(vt2.c2)))AND(((((vt2.c1)OR(vt2.c0)))AND(vt2.c1)))))OR(vt2.c0))) IS TRUE)  as count FROM vt2 ORDER BY CAST(CAST(vt2.c0 AS TEXT) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt2 WHERE (((((((vt2.c0)|(vt2.c2)))AND(((((vt2.c1)OR(vt2.c0)))AND(vt2.c1)))))OR(vt2.c0))) ORDER BY CAST(CAST(vt2.c0 AS TEXT) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0)|(vt2.c2)))AND(((((vt2.c1)OR(vt2.c0)))AND(vt2.c1)))))OR(vt2.c0))) IS TRUE)  as count FROM vt2 ORDER BY CAST(CAST(vt2.c0 AS TEXT) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt2 WHERE (((((((vt2.c0)|(vt2.c2)))AND(((((vt2.c1)OR(vt2.c0)))AND(vt2.c1)))))OR(vt2.c0))) ORDER BY CAST(CAST(vt2.c0 AS TEXT) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM vt2, vt1 WHERE (CASE WHEN CASE vt2.c0  WHEN vt1.lid THEN vt2.c2 ELSE vt2.c1 END THEN ((vt2.c1)||(vt2.c0)) ELSE (vt1.lid IN ()) END) ORDER BY (((CAST(vt1.lid AS TEXT), ((vt2.c2) NOT NULL), x'900dc5e9'))>=(((((vt1.c0, vt2.c2, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c2, vt2.c1, vt2.c1))), highlight(vt2.c2, vt2.c1, vt1.c0, vt1.c0), ((vt2.c0) BETWEEN (vt2.c2) AND (vt2.c1))))), ((~ (vt2.c1)) IN (((vt1.lid)!=(vt2.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt2.c0  WHEN vt1.lid THEN vt2.c2 ELSE vt2.c1 END THEN ((vt2.c1)||(vt2.c0)) ELSE (vt1.lid IN ()) END) IS TRUE)  as count FROM vt2, vt1 ORDER BY (((CAST(vt1.lid AS TEXT), ((vt2.c2) NOT NULL), x'900dc5e9'))>=(((((vt1.c0, vt2.c2, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c2, vt2.c1, vt2.c1))), highlight(vt2.c2, vt2.c1, vt1.c0, vt1.c0), ((vt2.c0) BETWEEN (vt2.c2) AND (vt2.c1))))), ((~ (vt2.c1)) IN (((vt1.lid)!=(vt2.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt2, vt1 WHERE (CASE WHEN CASE vt2.c0  WHEN vt1.lid THEN vt2.c2 ELSE vt2.c1 END THEN ((vt2.c1)||(vt2.c0)) ELSE (vt1.lid IN ()) END) ORDER BY (((CAST(vt1.lid AS TEXT), ((vt2.c2) NOT NULL), x'900dc5e9'))>=(((((vt1.c0, vt2.c2, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c2, vt2.c1, vt2.c1))), highlight(vt2.c2, vt2.c1, vt1.c0, vt1.c0), ((vt2.c0) BETWEEN (vt2.c2) AND (vt2.c1))))), ((~ (vt2.c1)) IN (((vt1.lid)!=(vt2.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt2.c0  WHEN vt1.lid THEN vt2.c2 ELSE vt2.c1 END THEN ((vt2.c1)||(vt2.c0)) ELSE (vt1.lid IN ()) END) IS TRUE)  as count FROM vt2, vt1 ORDER BY (((CAST(vt1.lid AS TEXT), ((vt2.c2) NOT NULL), x'900dc5e9'))>=(((((vt1.c0, vt2.c2, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c2, vt2.c1, vt2.c1))), highlight(vt2.c2, vt2.c1, vt1.c0, vt1.c0), ((vt2.c0) BETWEEN (vt2.c2) AND (vt2.c1))))), ((~ (vt2.c1)) IN (((vt1.lid)!=(vt2.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt2, vt1 WHERE (CASE WHEN CASE vt2.c0  WHEN vt1.lid THEN vt2.c2 ELSE vt2.c1 END THEN ((vt2.c1)||(vt2.c0)) ELSE (vt1.lid IN ()) END) ORDER BY (((CAST(vt1.lid AS TEXT), ((vt2.c2) NOT NULL), x'900dc5e9'))>=(((((vt1.c0, vt2.c2, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c2, vt2.c1, vt2.c1))), highlight(vt2.c2, vt2.c1, vt1.c0, vt1.c0), ((vt2.c0) BETWEEN (vt2.c2) AND (vt2.c1))))), ((~ (vt2.c1)) IN (((vt1.lid)!=(vt2.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt2, vt1 WHERE (((CASE WHEN vt1.c0 THEN rt0.c0 END)GLOB(x''))) ORDER BY ((vt1.c0) NOT BETWEEN (((((vt2.c2)AND(vt0.c0)))OR(vt0.c1))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN rt0.c0 END)GLOB(x''))) IS TRUE)  as count FROM rt0, vt0, vt2, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (((((vt2.c2)AND(vt0.c0)))OR(vt0.c1))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt2, vt1 WHERE (((CASE WHEN vt1.c0 THEN rt0.c0 END)GLOB(x''))) ORDER BY ((vt1.c0) NOT BETWEEN (((((vt2.c2)AND(vt0.c0)))OR(vt0.c1))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN rt0.c0 END)GLOB(x''))) IS TRUE)  as count FROM rt0, vt0, vt2, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (((((vt2.c2)AND(vt0.c0)))OR(vt0.c1))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt2, vt1 WHERE (((CASE WHEN vt1.c0 THEN rt0.c0 END)GLOB(x''))) ORDER BY ((vt1.c0) NOT BETWEEN (((((vt2.c2)AND(vt0.c0)))OR(vt0.c1))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) DESC;
SELECT * FROM vt1, vt2 WHERE ((((CAST(vt2.c2 AS REAL)))<=(((~ (vt2.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt2.c2 AS REAL)))<=(((~ (vt2.c0)))))) IS TRUE)  as count FROM vt1, vt2);
SELECT * FROM vt1, vt2 WHERE ((((CAST(vt2.c2 AS REAL)))<=(((~ (vt2.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt2.c2 AS REAL)))<=(((~ (vt2.c0)))))) IS TRUE)  as count FROM vt1, vt2);
SELECT * FROM vt1, vt2 WHERE ((((CAST(vt2.c2 AS REAL)))<=(((~ (vt2.c0))))));
SELECT ALL * FROM vt2, vt1 WHERE (((((vt2.c2)==(vt2.c0))) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c1 ELSE 0.03995106476640231 END) AND (((vt1.c0)>(vt2.c2))))) ORDER BY ((vt2.c1)+(CAST(vt1.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c2)=(vt2.c0))) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c1 ELSE 0.03995106476640231 END) AND (((vt1.c0)>(vt2.c2))))) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((vt2.c1)+(CAST(vt1.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt2, vt1 WHERE (((((vt2.c2)==(vt2.c0))) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c1 ELSE 0.03995106476640231 END) AND (((vt1.c0)>(vt2.c2))))) ORDER BY ((vt2.c1)+(CAST(vt1.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c2)=(vt2.c0))) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c1 ELSE 0.03995106476640231 END) AND (((vt1.c0)>(vt2.c2))))) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((vt2.c1)+(CAST(vt1.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt2, vt1 WHERE (((((vt2.c2)==(vt2.c0))) BETWEEN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c1 ELSE 0.03995106476640231 END) AND (((vt1.c0)>(vt2.c2))))) ORDER BY ((vt2.c1)+(CAST(vt1.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0)OR(vt1.lid)))AND(vt1.lid)) COLLATE BINARY) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.lid)))AND(vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0)OR(vt1.lid)))AND(vt1.lid)) COLLATE BINARY) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.lid)))AND(vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (((((vt1.c0)OR(vt1.lid)))AND(vt1.lid)) COLLATE BINARY) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC;
SELECT COUNT(*) FROM rt0, vt2 WHERE (((TYPEOF(rt0.c2))IS(((vt2.c1)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c2))IS(((vt2.c1)AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt2);
SELECT COUNT(*) FROM rt0, vt2 WHERE (((TYPEOF(rt0.c2))IS(((vt2.c1)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c2))IS(((vt2.c1)AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt2);
SELECT COUNT(*) FROM rt0, vt2 WHERE (((TYPEOF(rt0.c2))IS(((vt2.c1)AND(rt0.c3)))));
SELECT COUNT(*) FROM vt1 WHERE (0.8850367466290616);
SELECT SUM(count) FROM (SELECT ((0.8850367466290616) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.8850367466290616);
SELECT SUM(count) FROM (SELECT ((0.8850367466290616) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.8850367466290616);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (((((vt0.c0)OR(rt0.c3)))AND(rt0.c0))) AND (rt0.c0)) WHERE (NULL) ORDER BY rtreenode(((((((((rt0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c0)), (vt0.c0 IN ())) DESC  NULLS LAST, CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC, ((rt0.c1) NOT BETWEEN ((rt0.c3 IN (rt0.c2))) AND (((vt0.c1)IS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (((((vt0.c0)OR(rt0.c3)))AND(rt0.c0))) AND (rt0.c0)) ORDER BY rtreenode(((((((((rt0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c0)), (vt0.c0 IN ())) DESC  NULLS LAST, CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC, ((rt0.c1) NOT BETWEEN ((rt0.c3 IN (rt0.c2))) AND (((vt0.c1)IS(rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (((((vt0.c0)OR(rt0.c3)))AND(rt0.c0))) AND (rt0.c0)) WHERE (NULL) ORDER BY rtreenode(((((((((rt0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c0)), (vt0.c0 IN ())) DESC  NULLS LAST, CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC, ((rt0.c1) NOT BETWEEN ((rt0.c3 IN (rt0.c2))) AND (((vt0.c1)IS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (((((vt0.c0)OR(rt0.c3)))AND(rt0.c0))) AND (rt0.c0)) ORDER BY rtreenode(((((((((rt0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c0)), (vt0.c0 IN ())) DESC  NULLS LAST, CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC, ((rt0.c1) NOT BETWEEN ((rt0.c3 IN (rt0.c2))) AND (((vt0.c1)IS(rt0.c0)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((ABS(vt0.c0)) NOT BETWEEN (((((vt0.c0)OR(rt0.c3)))AND(rt0.c0))) AND (rt0.c0)) WHERE (NULL) ORDER BY rtreenode(((((((((rt0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c3)))OR(vt0.c0)), (vt0.c0 IN ())) DESC  NULLS LAST, CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC, ((rt0.c1) NOT BETWEEN ((rt0.c3 IN (rt0.c2))) AND (((vt0.c1)IS(rt0.c0))));
SELECT ALL * FROM rt0, vt0, vt1 CROSS JOIN vt2 ON ((CASE WHEN vt0.c0 THEN vt2.c1 WHEN vt1.lid THEN vt1.lid WHEN rt0.c0 THEN vt2.c2 ELSE rt0.c3 END)<=(rt0.c1)) WHERE (vt0.c1) ORDER BY rt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, vt1 CROSS JOIN vt2 ON ((CASE WHEN vt0.c0 THEN vt2.c1 WHEN vt1.lid THEN vt1.lid WHEN rt0.c0 THEN vt2.c2 ELSE rt0.c3 END)<=(rt0.c1)) ORDER BY rt0.c0 COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0, vt1 CROSS JOIN vt2 ON ((CASE WHEN vt0.c0 THEN vt2.c1 WHEN vt1.lid THEN vt1.lid WHEN rt0.c0 THEN vt2.c2 ELSE rt0.c3 END)<=(rt0.c1)) WHERE (vt0.c1) ORDER BY rt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, vt1 CROSS JOIN vt2 ON ((CASE WHEN vt0.c0 THEN vt2.c1 WHEN vt1.lid THEN vt1.lid WHEN rt0.c0 THEN vt2.c2 ELSE rt0.c3 END)<=(rt0.c1)) ORDER BY rt0.c0 COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0, vt1 CROSS JOIN vt2 ON ((CASE WHEN vt0.c0 THEN vt2.c1 WHEN vt1.lid THEN vt1.lid WHEN rt0.c0 THEN vt2.c2 ELSE rt0.c3 END)<=(rt0.c1)) WHERE (vt0.c1) ORDER BY rt0.c0 COLLATE RTRIM;
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END AS NUMERIC)) ORDER BY CAST(vt1.lid COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.lid COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END AS NUMERIC)) ORDER BY CAST(vt1.lid COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.lid COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END AS NUMERIC)) ORDER BY CAST(vt1.lid COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0, vt0 NOT INDEXED WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 NOT INDEXED WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 NOT INDEXED WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt2, vt1 WHERE (((((((vt1.c0)OR(vt2.c1)))AND(-1224187992)))==(CAST(vt2.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt2.c1)))AND(-1224187992)))=(CAST(vt2.c0 AS TEXT)))) IS TRUE)  as count FROM vt2, vt1);
SELECT COUNT(*) FROM vt2, vt1 WHERE (((((((vt1.c0)OR(vt2.c1)))AND(-1224187992)))==(CAST(vt2.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt2.c1)))AND(-1224187992)))=(CAST(vt2.c0 AS TEXT)))) IS TRUE)  as count FROM vt2, vt1);
SELECT COUNT(*) FROM vt2, vt1 WHERE (((((((vt1.c0)OR(vt2.c1)))AND(-1224187992)))==(CAST(vt2.c0 AS TEXT))));
SELECT * FROM rt0 WHERE (CAST((0.5279736250719494 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((0.5279736250719494 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((0.5279736250719494 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((0.5279736250719494 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((0.5279736250719494 IN ()) AS TEXT));
SELECT * FROM vt1 INNER JOIN vt0 ON ((- (vt0.c0)) IN ()) WHERE ((((vt0.c1)) NOT BETWEEN ((ABS(DISTINCT vt0.c0))) AND ((((vt0.c1)!=(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((ABS(DISTINCT vt0.c0))) AND ((((vt0.c1)!=(vt1.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((- (vt0.c0)) IN ()));
SELECT * FROM vt1 INNER JOIN vt0 ON ((- (vt0.c0)) IN ()) WHERE ((((vt0.c1)) NOT BETWEEN ((ABS(DISTINCT vt0.c0))) AND ((((vt0.c1)!=(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((ABS(DISTINCT vt0.c0))) AND ((((vt0.c1)!=(vt1.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((- (vt0.c0)) IN ()));
SELECT * FROM vt1 INNER JOIN vt0 ON ((- (vt0.c0)) IN ()) WHERE ((((vt0.c1)) NOT BETWEEN ((ABS(DISTINCT vt0.c0))) AND ((((vt0.c1)!=(vt1.c0))))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))) ISNULL));
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0)LIKE(vt1.lid)) ELSE LIKELIHOOD(vt1.c0, 0.23124627796294261) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0)LIKE(vt1.lid)) ELSE LIKELIHOOD(vt1.c0, 0.23124627796294261) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0)LIKE(vt1.lid)) ELSE LIKELIHOOD(vt1.c0, 0.23124627796294261) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0)LIKE(vt1.lid)) ELSE LIKELIHOOD(vt1.c0, 0.23124627796294261) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.lid COLLATE BINARY THEN ((vt1.c0)LIKE(vt1.lid)) ELSE LIKELIHOOD(vt1.c0, 0.23124627796294261) END);
SELECT ALL * FROM vt1, vt2 WHERE ((((vt2.c1)&(vt2.c2)) IN (((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c1)&(vt2.c2)) IN (((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt2);
SELECT ALL * FROM vt1, vt2 WHERE ((((vt2.c1)&(vt2.c2)) IN (((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c1)&(vt2.c2)) IN (((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt2);
SELECT ALL * FROM vt1, vt2 WHERE ((((vt2.c1)&(vt2.c2)) IN (((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))));
SELECT ALL * FROM vt0, vt1, rt0, vt2 WHERE ('') ORDER BY ('' IN ()) ASC, TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1, rt0, vt2 ORDER BY ('' IN ()) ASC, TOTAL_CHANGES());
SELECT ALL * FROM vt0, vt1, rt0, vt2 WHERE ('') ORDER BY ('' IN ()) ASC, TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1, rt0, vt2 ORDER BY ('' IN ()) ASC, TOTAL_CHANGES());
SELECT ALL * FROM vt0, vt1, rt0, vt2 WHERE ('') ORDER BY ('' IN ()) ASC, TOTAL_CHANGES();
SELECT * FROM vt1 CROSS JOIN vt2 ON (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt2.c2))))==((((vt2.c2)*(vt2.c1))))) CROSS JOIN vt0 ON ((((vt2.c0) BETWEEN (0.027492815244088198) AND (vt1.lid)))-((((('0.8379048692414952')AND(vt0.c1)))OR(vt2.c1)))) WHERE ((((((vt0.c1))>((vt2.c1)))) BETWEEN ((((vt0.c1))<>((vt1.c0)))) AND ((~ (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((vt2.c1)))) BETWEEN ((((vt0.c1))!=((vt1.c0)))) AND ((~ (vt2.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt2 ON (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt2.c2))))==((((vt2.c2)*(vt2.c1))))) CROSS JOIN vt0 ON ((((vt2.c0) BETWEEN (0.027492815244088198) AND (vt1.lid)))-((((('0.8379048692414952')AND(vt0.c1)))OR(vt2.c1)))));
SELECT * FROM vt1 CROSS JOIN vt2 ON (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt2.c2))))==((((vt2.c2)*(vt2.c1))))) CROSS JOIN vt0 ON ((((vt2.c0) BETWEEN (0.027492815244088198) AND (vt1.lid)))-((((('0.8379048692414952')AND(vt0.c1)))OR(vt2.c1)))) WHERE ((((((vt0.c1))>((vt2.c1)))) BETWEEN ((((vt0.c1))<>((vt1.c0)))) AND ((~ (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((vt2.c1)))) BETWEEN ((((vt0.c1))!=((vt1.c0)))) AND ((~ (vt2.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt2 ON (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt2.c2))))==((((vt2.c2)*(vt2.c1))))) CROSS JOIN vt0 ON ((((vt2.c0) BETWEEN (0.027492815244088198) AND (vt1.lid)))-((((('0.8379048692414952')AND(vt0.c1)))OR(vt2.c1)))));
SELECT * FROM vt1 CROSS JOIN vt2 ON (((((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt2.c2))))==((((vt2.c2)*(vt2.c1))))) CROSS JOIN vt0 ON ((((vt2.c0) BETWEEN (0.027492815244088198) AND (vt1.lid)))-((((('0.8379048692414952')AND(vt0.c1)))OR(vt2.c1)))) WHERE ((((((vt0.c1))>((vt2.c1)))) BETWEEN ((((vt0.c1))<>((vt1.c0)))) AND ((~ (vt2.c0)))));
SELECT ALL * FROM vt2, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt0.c0 END)) AND ((((vt2.c0)-(vt2.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt0.c0 END)) AND ((((vt2.c0)-(vt2.c1)))))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt0.c0 END)) AND ((((vt2.c0)-(vt2.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt0.c0 END)) AND ((((vt2.c0)-(vt2.c1)))))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt2.c2 WHEN vt2.c1 THEN vt0.c0 END)) AND ((((vt2.c0)-(vt2.c1))))));
SELECT ALL COUNT(*) FROM vt2 WHERE (CASE ((vt2.c1) NOT BETWEEN (vt2.c0) AND (0.9551021556900109))  WHEN NULL THEN (0.18799680360471716 IN (vt2.c0)) ELSE CAST(vt2.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt2.c1) NOT BETWEEN (vt2.c0) AND (0.9551021556900109))  WHEN NULL THEN (0.18799680360471716 IN (vt2.c0)) ELSE CAST(vt2.c1 AS BLOB) END) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CASE ((vt2.c1) NOT BETWEEN (vt2.c0) AND (0.9551021556900109))  WHEN NULL THEN (0.18799680360471716 IN (vt2.c0)) ELSE CAST(vt2.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt2.c1) NOT BETWEEN (vt2.c0) AND (0.9551021556900109))  WHEN NULL THEN (0.18799680360471716 IN (vt2.c0)) ELSE CAST(vt2.c1 AS BLOB) END) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CASE ((vt2.c1) NOT BETWEEN (vt2.c0) AND (0.9551021556900109))  WHEN NULL THEN (0.18799680360471716 IN (vt2.c0)) ELSE CAST(vt2.c1 AS BLOB) END);
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE (CASE WHEN (rt0.c4 IN ()) THEN (- (rt0.c4)) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN UNLIKELY(rt0.c2) THEN ((vt0.c0)AND(rt0.c0)) END) ORDER BY ((((rt0.c0)%(rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c4 IN ()) THEN (- (rt0.c4)) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN UNLIKELY(rt0.c2) THEN ((vt0.c0)AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY ((((rt0.c0)%(rt0.c0))) NOTNULL));
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE (CASE WHEN (rt0.c4 IN ()) THEN (- (rt0.c4)) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN UNLIKELY(rt0.c2) THEN ((vt0.c0)AND(rt0.c0)) END) ORDER BY ((((rt0.c0)%(rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c4 IN ()) THEN (- (rt0.c4)) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN UNLIKELY(rt0.c2) THEN ((vt0.c0)AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY ((((rt0.c0)%(rt0.c0))) NOTNULL));
SELECT * FROM rt0 NOT INDEXED, vt0 WHERE (CASE WHEN (rt0.c4 IN ()) THEN (- (rt0.c4)) WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN UNLIKELY(rt0.c2) THEN ((vt0.c0)AND(rt0.c0)) END) ORDER BY ((((rt0.c0)%(rt0.c0))) NOTNULL);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE (CAST('' COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE (CAST('' COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE (CAST('' COLLATE NOCASE AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.lid IN (((vt1.lid) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((vt1.lid IN (((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.lid IN (((vt1.lid) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((vt1.lid IN (((vt1.lid) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.lid IN (((vt1.lid) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE) BETWEEN (((vt2.c1)||(vt2.c2))) AND (CASE vt2.c1  WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c2 END)));
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE NOCASE) BETWEEN (((vt2.c1)||(vt2.c2))) AND (CASE vt2.c1  WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c2 END))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE) BETWEEN (((vt2.c1)||(vt2.c2))) AND (CASE vt2.c1  WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c2 END)));
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE NOCASE) BETWEEN (((vt2.c1)||(vt2.c2))) AND (CASE vt2.c1  WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c2 END))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE) BETWEEN (((vt2.c1)||(vt2.c2))) AND (CASE vt2.c1  WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c2 END)));
SELECT * FROM vt2, vt1 WHERE (((json_quote(vt2.c1))%((~ (0.8238944650873183)))));
SELECT SUM(count) FROM (SELECT ((((json_quote(vt2.c1))%((~ (0.8238944650873183))))) IS TRUE)  as count FROM vt2, vt1);
SELECT * FROM vt2, vt1 WHERE (((json_quote(vt2.c1))%((~ (0.8238944650873183)))));
SELECT SUM(count) FROM (SELECT ((((json_quote(vt2.c1))%((~ (0.8238944650873183))))) IS TRUE)  as count FROM vt2, vt1);
SELECT * FROM vt2, vt1 WHERE (((json_quote(vt2.c1))%((~ (0.8238944650873183)))));
SELECT * FROM vt2 RIGHT OUTER JOIN rt0 ON ((((vt2.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=((((vt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)) AS INTEGER) WHERE ('-2119345778' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-2119345778' COLLATE NOCASE) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON ((((vt2.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=((((vt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)) AS INTEGER));
SELECT * FROM vt2 RIGHT OUTER JOIN rt0 ON ((((vt2.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=((((vt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)) AS INTEGER) WHERE ('-2119345778' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-2119345778' COLLATE NOCASE) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON ((((vt2.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=((((vt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)) AS INTEGER));
SELECT COUNT(*) FROM vt0, vt2, rt0, vt1 WHERE (CAST(((('-1172134179', vt2.c0, rt0.c4))<>((vt1.lid, -1.459662286E9, vt1.c0))) AS INTEGER)) ORDER BY CASE json_quote(vt2.c1)  WHEN vt1.lid THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c0)) WHEN ((vt2.c1) BETWEEN (vt2.c0) AND (vt2.c1)) THEN ((vt2.c0)IS NOT(vt2.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c1, rt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('-1172134179', vt2.c0, rt0.c4))<>((vt1.lid, -1.459662286E9, vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, vt2, rt0, vt1 ORDER BY CASE json_quote(vt2.c1)  WHEN vt1.lid THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c0)) WHEN ((vt2.c1) BETWEEN (vt2.c0) AND (vt2.c1)) THEN ((vt2.c0)IS NOT(vt2.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c1, rt0.c1) END DESC);
SELECT COUNT(*) FROM vt0, vt2, rt0, vt1 WHERE (CAST(((('-1172134179', vt2.c0, rt0.c4))<>((vt1.lid, -1.459662286E9, vt1.c0))) AS INTEGER)) ORDER BY CASE json_quote(vt2.c1)  WHEN vt1.lid THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c0)) WHEN ((vt2.c1) BETWEEN (vt2.c0) AND (vt2.c1)) THEN ((vt2.c0)IS NOT(vt2.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c1, rt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('-1172134179', vt2.c0, rt0.c4))<>((vt1.lid, -1.459662286E9, vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, vt2, rt0, vt1 ORDER BY CASE json_quote(vt2.c1)  WHEN vt1.lid THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c0)) WHEN ((vt2.c1) BETWEEN (vt2.c0) AND (vt2.c1)) THEN ((vt2.c0)IS NOT(vt2.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c1, rt0.c1) END DESC);
SELECT COUNT(*) FROM vt0, vt2, rt0, vt1 WHERE (CAST(((('-1172134179', vt2.c0, rt0.c4))<>((vt1.lid, -1.459662286E9, vt1.c0))) AS INTEGER)) ORDER BY CASE json_quote(vt2.c1)  WHEN vt1.lid THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c0)) WHEN ((vt2.c1) BETWEEN (vt2.c0) AND (vt2.c1)) THEN ((vt2.c0)IS NOT(vt2.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 ELSE COALESCE(DISTINCT vt0.c1, rt0.c1) END DESC;
SELECT COUNT(*) FROM vt2 WHERE (('阖ᤣ' IN ((vt2.c1 IN ()), CAST(vt2.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((('阖ᤣ' IN ((vt2.c1 IN ()), CAST(vt2.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt2 NOT INDEXED);
SELECT COUNT(*) FROM vt2 WHERE (('阖ᤣ' IN ((vt2.c1 IN ()), CAST(vt2.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((('阖ᤣ' IN ((vt2.c1 IN ()), CAST(vt2.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt2 NOT INDEXED);
SELECT COUNT(*) FROM vt2 WHERE (('阖ᤣ' IN ((vt2.c1 IN ()), CAST(vt2.c1 AS NUMERIC))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON vt2.c2 FULL OUTER JOIN vt1 ON ((((vt1.lid) BETWEEN (vt0.c1) AND (vt2.c1)))<(((vt0.c0) ISNULL))) FULL OUTER JOIN vt2 ON LIKELIHOOD(vt2.c1 COLLATE NOCASE, 0.8929335174162435) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON vt2.c2 FULL OUTER JOIN vt1 ON ((((vt1.lid) BETWEEN (vt0.c1) AND (vt2.c1)))<(((vt0.c0) ISNULL))) FULL OUTER JOIN vt2 ON LIKELIHOOD(vt2.c1 COLLATE NOCASE, 0.8929335174162435));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON vt2.c2 FULL OUTER JOIN vt1 ON ((((vt1.lid) BETWEEN (vt0.c1) AND (vt2.c1)))<(((vt0.c0) ISNULL))) FULL OUTER JOIN vt2 ON LIKELIHOOD(vt2.c1 COLLATE NOCASE, 0.8929335174162435) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON vt2.c2 FULL OUTER JOIN vt1 ON ((((vt1.lid) BETWEEN (vt0.c1) AND (vt2.c1)))<(((vt0.c0) ISNULL))) FULL OUTER JOIN vt2 ON LIKELIHOOD(vt2.c1 COLLATE NOCASE, 0.8929335174162435));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)))%(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)))%(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)))%(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)))%(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)))%(((rt0.c2) IS FALSE))));
SELECT * FROM vt0, vt2, rt0 WHERE (vt2.c1) ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN vt2.c1 WHEN vt2.c0 THEN x'0e7eb2fb' WHEN vt2.c0 THEN '-1459662286' WHEN '' THEN vt2.c0 ELSE vt2.c1 END)LIKE((((vt0.c0, vt0.c0, rt0.c2))<((vt2.c2, vt2.c2, x'71f2'))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c1) IS TRUE)  as count FROM vt0, vt2, rt0 ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN vt2.c1 WHEN vt2.c0 THEN x'0e7eb2fb' WHEN vt2.c0 THEN '-1459662286' WHEN '' THEN vt2.c0 ELSE vt2.c1 END)LIKE((((vt0.c0, vt0.c0, rt0.c2))<((vt2.c2, vt2.c2, x'71f2'))))) DESC);
SELECT * FROM vt0, vt2, rt0 WHERE (vt2.c1) ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN vt2.c1 WHEN vt2.c0 THEN x'0e7eb2fb' WHEN vt2.c0 THEN '-1459662286' WHEN '' THEN vt2.c0 ELSE vt2.c1 END)LIKE((((vt0.c0, vt0.c0, rt0.c2))<((vt2.c2, vt2.c2, x'71f2'))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c1) IS TRUE)  as count FROM vt0, vt2, rt0 ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN vt2.c1 WHEN vt2.c0 THEN x'0e7eb2fb' WHEN vt2.c0 THEN '-1459662286' WHEN '' THEN vt2.c0 ELSE vt2.c1 END)LIKE((((vt0.c0, vt0.c0, rt0.c2))<((vt2.c2, vt2.c2, x'71f2'))))) DESC);
SELECT * FROM vt0, vt2, rt0 WHERE (vt2.c1) ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN vt2.c1 WHEN vt2.c0 THEN x'0e7eb2fb' WHEN vt2.c0 THEN '-1459662286' WHEN '' THEN vt2.c0 ELSE vt2.c1 END)LIKE((((vt0.c0, vt0.c0, rt0.c2))<((vt2.c2, vt2.c2, x'71f2'))))) DESC;
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT * FROM vt0, vt1 WHERE (((((((((1818292347)AND(vt1.c0)))OR(vt0.c1)))AND(load_extension(vt1.c0, vt1.c0))))OR(INSTR(x'', vt1.lid))));
SELECT SUM(count) FROM (SELECT ((((((((((1818292347)AND(vt1.c0)))OR(vt0.c1)))AND(load_extension(vt1.c0, vt1.c0))))OR(INSTR(x'', vt1.lid)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((1818292347)AND(vt1.c0)))OR(vt0.c1)))AND(load_extension(vt1.c0, vt1.c0))))OR(INSTR(x'', vt1.lid))));
SELECT SUM(count) FROM (SELECT ((((((((((1818292347)AND(vt1.c0)))OR(vt0.c1)))AND(load_extension(vt1.c0, vt1.c0))))OR(INSTR(x'', vt1.lid)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((1818292347)AND(vt1.c0)))OR(vt0.c1)))AND(load_extension(vt1.c0, vt1.c0))))OR(INSTR(x'', vt1.lid))));
SELECT ALL * FROM vt0, vt1, vt2, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, vt2, rt0);
SELECT ALL * FROM vt0, vt1, vt2, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, vt2, rt0);
SELECT ALL * FROM vt0, vt1, vt2, rt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, vt2, vt1 WHERE (CAST(rt0.c2 AS TEXT) COLLATE RTRIM) ORDER BY (((rt0.c3)<(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt2, vt1 ORDER BY (((rt0.c3)<(rt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt2, vt1 WHERE (CAST(rt0.c2 AS TEXT) COLLATE RTRIM) ORDER BY (((rt0.c3)<(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt2, vt1 ORDER BY (((rt0.c3)<(rt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt2, vt1 WHERE (CAST(rt0.c2 AS TEXT) COLLATE RTRIM) ORDER BY (((rt0.c3)<(rt0.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)GLOB(rt0.c2))) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(rt0.c4))) AND (((rt0.c0) IS FALSE)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4006543823276222))+(((rt0.c3)==(rt0.c0)))) DESC, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))!=((rt0.c4 IN (rt0.c1))))  NULLS LAST, (((rt0.c0))>=((rt0.c1))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)GLOB(rt0.c2))) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(rt0.c4))) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4006543823276222))+(((rt0.c3)=(rt0.c0)))) DESC, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))!=((rt0.c4 IN (rt0.c1))))  NULLS LAST, (((rt0.c0))>=((rt0.c1))) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)GLOB(rt0.c2))) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(rt0.c4))) AND (((rt0.c0) IS FALSE)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4006543823276222))+(((rt0.c3)==(rt0.c0)))) DESC, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))!=((rt0.c4 IN (rt0.c1))))  NULLS LAST, (((rt0.c0))>=((rt0.c1))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)GLOB(rt0.c2))) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(rt0.c4))) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4006543823276222))+(((rt0.c3)=(rt0.c0)))) DESC, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))!=((rt0.c4 IN (rt0.c1))))  NULLS LAST, (((rt0.c0))>=((rt0.c1))) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)GLOB(rt0.c2))) BETWEEN (((((rt0.c0)AND(rt0.c0)))AND(rt0.c4))) AND (((rt0.c0) IS FALSE)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.4006543823276222))+(((rt0.c3)==(rt0.c0)))) DESC, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)))!=((rt0.c4 IN (rt0.c1))))  NULLS LAST, (((rt0.c0))>=((rt0.c1))) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt2, vt1, vt0 WHERE ((((vt1.lid)) NOT BETWEEN ((vt2.c0 COLLATE NOCASE)) AND ((CAST(vt2.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) NOT BETWEEN ((vt2.c0 COLLATE NOCASE)) AND ((CAST(vt2.c1 AS INTEGER))))) IS TRUE)  as count FROM vt2, vt1, vt0);
SELECT * FROM vt2, vt1, vt0 WHERE ((((vt1.lid)) NOT BETWEEN ((vt2.c0 COLLATE NOCASE)) AND ((CAST(vt2.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) NOT BETWEEN ((vt2.c0 COLLATE NOCASE)) AND ((CAST(vt2.c1 AS INTEGER))))) IS TRUE)  as count FROM vt2, vt1, vt0);
SELECT * FROM vt2, vt1, vt0 WHERE ((((vt1.lid)) NOT BETWEEN ((vt2.c0 COLLATE NOCASE)) AND ((CAST(vt2.c1 AS INTEGER)))));
SELECT COUNT(*) FROM vt0, vt2 WHERE (((vt2.c0)|(CASE vt0.c0  WHEN vt2.c1 THEN vt0.c1 ELSE vt2.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt2.c0)|(CASE vt0.c0  WHEN vt2.c1 THEN vt0.c1 ELSE vt2.c1 END))) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (((vt2.c0)|(CASE vt0.c0  WHEN vt2.c1 THEN vt0.c1 ELSE vt2.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt2.c0)|(CASE vt0.c0  WHEN vt2.c1 THEN vt0.c1 ELSE vt2.c1 END))) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (((vt2.c0)|(CASE vt0.c0  WHEN vt2.c1 THEN vt0.c1 ELSE vt2.c1 END)));
SELECT ALL * FROM vt2 WHERE (LOWER(DISTINCT (vt2.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt2.c1 IN ()))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (LOWER(DISTINCT (vt2.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt2.c1 IN ()))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (LOWER(DISTINCT (vt2.c1 IN ())));
SELECT COUNT(*) FROM vt1, vt2, vt0 WHERE ((((('贌%\n' COLLATE NOCASE)OR(((((vt2.c0)OR(vt1.lid)))OR('F㿩/.*ou')))))OR((NOT (-1.617915574E9))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('贌%\n' COLLATE NOCASE)OR(((((vt2.c0)OR(vt1.lid)))OR('F㿩/.*ou')))))OR((NOT (-1.617915574E9))))) IS TRUE)  as count FROM vt1, vt2, vt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt2, vt0 WHERE ((((('贌%\n' COLLATE NOCASE)OR(((((vt2.c0)OR(vt1.lid)))OR('F㿩/.*ou')))))OR((NOT (-1.617915574E9))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('贌%\n' COLLATE NOCASE)OR(((((vt2.c0)OR(vt1.lid)))OR('F㿩/.*ou')))))OR((NOT (-1.617915574E9))))) IS TRUE)  as count FROM vt1, vt2, vt0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt2, vt0 WHERE ((((('贌%\n' COLLATE NOCASE)OR(((((vt2.c0)OR(vt1.lid)))OR('F㿩/.*ou')))))OR((NOT (-1.617915574E9))))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt2, rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c4 AS INTEGER)  WHEN (vt1.lid IN ()) THEN (((rt0.c4, vt1.lid, rt0.c1))>((rt0.c4, vt2.c2, rt0.c2))) END WHERE (((CASE WHEN rt0.c1 THEN rt0.c4 WHEN vt2.c2 THEN rt0.c0 WHEN vt2.c1 THEN rt0.c3 END)>(((((rt0.c4)AND(rt0.c0)))AND(rt0.c1))))) ORDER BY CASE CHAR(rt0.c3)  WHEN vt1.lid THEN ((rt0.c1)&(vt1.lid)) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c4 WHEN vt2.c2 THEN rt0.c0 WHEN vt2.c1 THEN rt0.c3 END)>(((((rt0.c4)AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM vt2, rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c4 AS INTEGER)  WHEN (vt1.lid IN ()) THEN (((rt0.c4, vt1.lid, rt0.c1))>((rt0.c4, vt2.c2, rt0.c2))) END ORDER BY CASE CHAR(rt0.c3)  WHEN vt1.lid THEN ((rt0.c1)&(vt1.lid)) END);
SELECT COUNT(*) FROM vt2, rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c4 AS INTEGER)  WHEN (vt1.lid IN ()) THEN (((rt0.c4, vt1.lid, rt0.c1))>((rt0.c4, vt2.c2, rt0.c2))) END WHERE (((CASE WHEN rt0.c1 THEN rt0.c4 WHEN vt2.c2 THEN rt0.c0 WHEN vt2.c1 THEN rt0.c3 END)>(((((rt0.c4)AND(rt0.c0)))AND(rt0.c1))))) ORDER BY CASE CHAR(rt0.c3)  WHEN vt1.lid THEN ((rt0.c1)&(vt1.lid)) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c4 WHEN vt2.c2 THEN rt0.c0 WHEN vt2.c1 THEN rt0.c3 END)>(((((rt0.c4)AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM vt2, rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c4 AS INTEGER)  WHEN (vt1.lid IN ()) THEN (((rt0.c4, vt1.lid, rt0.c1))>((rt0.c4, vt2.c2, rt0.c2))) END ORDER BY CASE CHAR(rt0.c3)  WHEN vt1.lid THEN ((rt0.c1)&(vt1.lid)) END);
SELECT COUNT(*) FROM vt2, rt0 LEFT OUTER JOIN vt1 ON CASE CAST(rt0.c4 AS INTEGER)  WHEN (vt1.lid IN ()) THEN (((rt0.c4, vt1.lid, rt0.c1))>((rt0.c4, vt2.c2, rt0.c2))) END WHERE (((CASE WHEN rt0.c1 THEN rt0.c4 WHEN vt2.c2 THEN rt0.c0 WHEN vt2.c1 THEN rt0.c3 END)>(((((rt0.c4)AND(rt0.c0)))AND(rt0.c1))))) ORDER BY CASE CHAR(rt0.c3)  WHEN vt1.lid THEN ((rt0.c1)&(vt1.lid)) END;
SELECT ALL * FROM vt0, vt2 WHERE (((((vt0.c0) BETWEEN (vt2.c1) AND (vt0.c1)))/(((vt2.c2)<=(0.7648795857108887)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt2.c1) AND (vt0.c1)))/(((vt2.c2)<=(0.7648795857108887))))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL * FROM vt0, vt2 WHERE (((((vt0.c0) BETWEEN (vt2.c1) AND (vt0.c1)))/(((vt2.c2)<=(0.7648795857108887)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt2.c1) AND (vt0.c1)))/(((vt2.c2)<=(0.7648795857108887))))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL * FROM vt0, vt2 WHERE (((((vt0.c0) BETWEEN (vt2.c1) AND (vt0.c1)))/(((vt2.c2)<=(0.7648795857108887)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)IS NOT(vt1.c0))) NOTNULL) CROSS JOIN rt0 ON ((((((rt0.c2)OR(vt1.lid)))OR(rt0.c3))) NOT NULL) WHERE ((~ (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)IS NOT(vt1.c0))) NOTNULL) CROSS JOIN rt0 ON ((((((rt0.c2)OR(vt1.lid)))OR(rt0.c3))) NOT NULL) ORDER BY (NULL IN ()) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)IS NOT(vt1.c0))) NOTNULL) CROSS JOIN rt0 ON ((((((rt0.c2)OR(vt1.lid)))OR(rt0.c3))) NOT NULL) WHERE ((~ (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (NULL IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c0)IS NOT(vt1.c0))) NOTNULL) CROSS JOIN rt0 ON ((((((rt0.c2)OR(vt1.lid)))OR(rt0.c3))) NOT NULL) ORDER BY (NULL IN ()) ASC);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON '<G' INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.lid)))=(vt2.c1 COLLATE NOCASE)) INNER JOIN vt2 ON TOTAL_CHANGES() WHERE ((((('')IS(vt2.c2)))%(NULL))) ORDER BY CASE WHEN COALESCE(vt2.c1, vt0.c1) THEN (((vt2.c0))>=((rt0.c3))) ELSE vt2.c1 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL (((((('')IS(vt2.c2)))%(NULL))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON '<G' INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.lid)))==(vt2.c1 COLLATE NOCASE)) INNER JOIN vt2 ON TOTAL_CHANGES() ORDER BY CASE WHEN COALESCE(vt2.c1, vt0.c1) THEN (((vt2.c0))>=((rt0.c3))) ELSE vt2.c1 COLLATE BINARY END);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON '<G' INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.lid)))=(vt2.c1 COLLATE NOCASE)) INNER JOIN vt2 ON TOTAL_CHANGES() WHERE ((((('')IS(vt2.c2)))%(NULL))) ORDER BY CASE WHEN COALESCE(vt2.c1, vt0.c1) THEN (((vt2.c0))>=((rt0.c3))) ELSE vt2.c1 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL (((((('')IS(vt2.c2)))%(NULL))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON '<G' INNER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.lid)))==(vt2.c1 COLLATE NOCASE)) INNER JOIN vt2 ON TOTAL_CHANGES() ORDER BY CASE WHEN COALESCE(vt2.c1, vt0.c1) THEN (((vt2.c0))>=((rt0.c3))) ELSE vt2.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt1, vt2, vt0, rt0 WHERE (((((rt0.c1)OR(vt2.c2)))GLOB(vt2.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(vt2.c2)))GLOB(vt2.c0))) IS TRUE)  as count FROM vt1, vt2, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt2, vt0, rt0 WHERE (((((rt0.c1)OR(vt2.c2)))GLOB(vt2.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(vt2.c2)))GLOB(vt2.c0))) IS TRUE)  as count FROM vt1, vt2, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt2, vt0, rt0 WHERE (((((rt0.c1)OR(vt2.c2)))GLOB(vt2.c0)));
SELECT COUNT(*) FROM vt1, rt0, vt2, vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt2, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt2, vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt2, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt2, vt0 WHERE (CAST(x'' AS BLOB));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (NULL)));
SELECT ALL * FROM vt0, vt1 INNER JOIN vt2 ON UNLIKELY(vt2.c2) COLLATE NOCASE INNER JOIN rt0 ON TYPEOF(((((vt1.lid)AND(rt0.c0)))AND(rt0.c0))) WHERE (((vt2.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt1.c0))))) ORDER BY ((((NULL) ISNULL))<=(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN vt2 ON UNLIKELY(vt2.c2) COLLATE NOCASE INNER JOIN rt0 ON TYPEOF(((((vt1.lid)AND(rt0.c0)))AND(rt0.c0))) ORDER BY ((((NULL) ISNULL))<=(rt0.c1)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 INNER JOIN vt2 ON UNLIKELY(vt2.c2) COLLATE NOCASE INNER JOIN rt0 ON TYPEOF(((((vt1.lid)AND(rt0.c0)))AND(rt0.c0))) WHERE (((vt2.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt1.c0))))) ORDER BY ((((NULL) ISNULL))<=(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN vt2 ON UNLIKELY(vt2.c2) COLLATE NOCASE INNER JOIN rt0 ON TYPEOF(((((vt1.lid)AND(rt0.c0)))AND(rt0.c0))) ORDER BY ((((NULL) ISNULL))<=(rt0.c1)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 INNER JOIN vt2 ON UNLIKELY(vt2.c2) COLLATE NOCASE INNER JOIN rt0 ON TYPEOF(((((vt1.lid)AND(rt0.c0)))AND(rt0.c0))) WHERE (((vt2.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt1.c0))))) ORDER BY ((((NULL) ISNULL))<=(rt0.c1)) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))LIKE(CAST(vt1.lid AS TEXT)))) ORDER BY '423579960';
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))LIKE(CAST(vt1.lid AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY '423579960');
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))LIKE(CAST(vt1.lid AS TEXT)))) ORDER BY '423579960';
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))LIKE(CAST(vt1.lid AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY '423579960');
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))LIKE(CAST(vt1.lid AS TEXT)))) ORDER BY '423579960';
SELECT COUNT(*) FROM vt2 NOT INDEXED NATURAL JOIN vt1 WHERE (((2.60914936E8)LIKE(UPPER(vt2.c1)))) ORDER BY ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c1)) COLLATE BINARY  NULLS LAST, ((vt1.c0 COLLATE NOCASE)>>(CAST(vt1.lid AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((2.60914936E8)LIKE(UPPER(vt2.c1)))) IS TRUE)  as count FROM vt2 NATURAL JOIN vt1 ORDER BY ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c1)) COLLATE BINARY  NULLS LAST, ((vt1.c0 COLLATE NOCASE)>>(CAST(vt1.lid AS BLOB))) ASC);
SELECT COUNT(*) FROM vt2 NOT INDEXED NATURAL JOIN vt1 WHERE (((2.60914936E8)LIKE(UPPER(vt2.c1)))) ORDER BY ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c1)) COLLATE BINARY  NULLS LAST, ((vt1.c0 COLLATE NOCASE)>>(CAST(vt1.lid AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((2.60914936E8)LIKE(UPPER(vt2.c1)))) IS TRUE)  as count FROM vt2 NATURAL JOIN vt1 ORDER BY ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c1)) COLLATE BINARY  NULLS LAST, ((vt1.c0 COLLATE NOCASE)>>(CAST(vt1.lid AS BLOB))) ASC);
SELECT COUNT(*) FROM vt2 NOT INDEXED NATURAL JOIN vt1 WHERE (((2.60914936E8)LIKE(UPPER(vt2.c1)))) ORDER BY ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c1)) COLLATE BINARY  NULLS LAST, ((vt1.c0 COLLATE NOCASE)>>(CAST(vt1.lid AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (vt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c2) IS TRUE)  as count FROM vt0, rt0, vt2, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (vt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c2) IS TRUE)  as count FROM vt0, rt0, vt2, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (vt2.c2);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((((((vt2.c0))<=((rt0.c3))))%(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0))<=((rt0.c3))))%(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((((((vt2.c0))<=((rt0.c3))))%(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0))<=((rt0.c3))))%(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((((((vt2.c0))<=((rt0.c3))))%(((vt0.c0)>=(vt0.c0)))));
SELECT * FROM vt0, vt2 CROSS JOIN vt1 ON (((UPPER(DISTINCT vt1.c0), (~ (vt2.c1)), ((vt2.c1) BETWEEN (vt0.c1) AND (vt2.c0))))=((CASE WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c0 END, vt1.c0, ((vt1.c0) NOTNULL)))) WHERE ((((((vt2.c1) BETWEEN (vt1.c0) AND (vt0.c0)), vt1.lid COLLATE NOCASE, ''))!=(((- (vt0.c0)), ((vt2.c1)OR(vt1.lid)), (((vt1.c0))=((vt2.c2)))))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c1) BETWEEN (vt1.c0) AND (vt0.c0)), vt1.lid COLLATE NOCASE, ''))<>(((- (vt0.c0)), ((vt2.c1)OR(vt1.lid)), (((vt1.c0))==((vt2.c2))))))) IS TRUE)  as count FROM vt0, vt2 CROSS JOIN vt1 ON (((UPPER(DISTINCT vt1.c0), (~ (vt2.c1)), ((vt2.c1) BETWEEN (vt0.c1) AND (vt2.c0))))==((CASE WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c0 END, vt1.c0, ((vt1.c0) NOTNULL)))));
SELECT * FROM vt0, vt2 CROSS JOIN vt1 ON (((UPPER(DISTINCT vt1.c0), (~ (vt2.c1)), ((vt2.c1) BETWEEN (vt0.c1) AND (vt2.c0))))=((CASE WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c0 END, vt1.c0, ((vt1.c0) NOTNULL)))) WHERE ((((((vt2.c1) BETWEEN (vt1.c0) AND (vt0.c0)), vt1.lid COLLATE NOCASE, ''))!=(((- (vt0.c0)), ((vt2.c1)OR(vt1.lid)), (((vt1.c0))=((vt2.c2)))))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c1) BETWEEN (vt1.c0) AND (vt0.c0)), vt1.lid COLLATE NOCASE, ''))<>(((- (vt0.c0)), ((vt2.c1)OR(vt1.lid)), (((vt1.c0))==((vt2.c2))))))) IS TRUE)  as count FROM vt0, vt2 CROSS JOIN vt1 ON (((UPPER(DISTINCT vt1.c0), (~ (vt2.c1)), ((vt2.c1) BETWEEN (vt0.c1) AND (vt2.c0))))==((CASE WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c0 END, vt1.c0, ((vt1.c0) NOTNULL)))));
SELECT * FROM vt0, vt2 CROSS JOIN vt1 ON (((UPPER(DISTINCT vt1.c0), (~ (vt2.c1)), ((vt2.c1) BETWEEN (vt0.c1) AND (vt2.c0))))=((CASE WHEN vt2.c1 THEN vt2.c1 ELSE vt2.c0 END, vt1.c0, ((vt1.c0) NOTNULL)))) WHERE ((((((vt2.c1) BETWEEN (vt1.c0) AND (vt0.c0)), vt1.lid COLLATE NOCASE, ''))!=(((- (vt0.c0)), ((vt2.c1)OR(vt1.lid)), (((vt1.c0))=((vt2.c2)))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('1095078022' COLLATE NOCASE)+(((vt0.c1)*(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((('1095078022' COLLATE NOCASE)+(((vt0.c1)*(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('1095078022' COLLATE NOCASE)+(((vt0.c1)*(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((('1095078022' COLLATE NOCASE)+(((vt0.c1)*(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('1095078022' COLLATE NOCASE)+(((vt0.c1)*(vt1.lid)))));
SELECT * FROM vt2, vt1, rt0, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt2, vt1, rt0, vt0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) ASC);
SELECT * FROM vt2, vt1, rt0, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt2, vt1, rt0, vt0 ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) ASC);
SELECT * FROM vt2, vt1, rt0, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) ORDER BY (CAST(vt0.c0 AS NUMERIC) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) ISNULL)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) ISNULL)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt1, vt2 RIGHT OUTER JOIN rt0 ON LIKE(CASE WHEN vt2.c1 THEN rt0.c1 WHEN vt2.c1 THEN vt2.c0 WHEN rt0.c1 THEN rt0.c0 END, ((((((((vt2.c2)AND(vt2.c1)))AND(rt0.c1)))OR(vt2.c0)))AND(vt2.c1)), ')') WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt1, vt2 RIGHT OUTER JOIN rt0 ON LIKE(CASE WHEN vt2.c1 THEN rt0.c1 WHEN vt2.c1 THEN vt2.c0 WHEN rt0.c1 THEN rt0.c0 END, ((((((((vt2.c2)AND(vt2.c1)))AND(rt0.c1)))OR(vt2.c0)))AND(vt2.c1)), ')'));
SELECT ALL COUNT(*) FROM vt1, vt2 RIGHT OUTER JOIN rt0 ON LIKE(CASE WHEN vt2.c1 THEN rt0.c1 WHEN vt2.c1 THEN vt2.c0 WHEN rt0.c1 THEN rt0.c0 END, ((((((((vt2.c2)AND(vt2.c1)))AND(rt0.c1)))OR(vt2.c0)))AND(vt2.c1)), ')') WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt1, vt2 RIGHT OUTER JOIN rt0 ON LIKE(CASE WHEN vt2.c1 THEN rt0.c1 WHEN vt2.c1 THEN vt2.c0 WHEN rt0.c1 THEN rt0.c0 END, ((((((((vt2.c2)AND(vt2.c1)))AND(rt0.c1)))OR(vt2.c0)))AND(vt2.c1)), ')'));
SELECT ALL COUNT(*) FROM vt1, vt2 RIGHT OUTER JOIN rt0 ON LIKE(CASE WHEN vt2.c1 THEN rt0.c1 WHEN vt2.c1 THEN vt2.c0 WHEN rt0.c1 THEN rt0.c0 END, ((((((((vt2.c2)AND(vt2.c1)))AND(rt0.c1)))OR(vt2.c0)))AND(vt2.c1)), ')') WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER));
SELECT ALL * FROM rt0, vt2 WHERE (CASE WHEN ' c{%}}' THEN CASE WHEN rt0.c1 THEN '' END WHEN CAST(vt2.c0 AS NUMERIC) THEN (((rt0.c2))<((rt0.c1))) WHEN CASE WHEN vt2.c2 THEN rt0.c2 ELSE vt2.c1 END THEN ')nTOR' ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ' c{%}}' THEN CASE WHEN rt0.c1 THEN '' END WHEN CAST(vt2.c0 AS NUMERIC) THEN (((rt0.c2))<((rt0.c1))) WHEN CASE WHEN vt2.c2 THEN rt0.c2 ELSE vt2.c1 END THEN ')nTOR' ELSE NULL END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt2);
SELECT ALL * FROM rt0, vt2 WHERE (CASE WHEN ' c{%}}' THEN CASE WHEN rt0.c1 THEN '' END WHEN CAST(vt2.c0 AS NUMERIC) THEN (((rt0.c2))<((rt0.c1))) WHEN CASE WHEN vt2.c2 THEN rt0.c2 ELSE vt2.c1 END THEN ')nTOR' ELSE NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ' c{%}}' THEN CASE WHEN rt0.c1 THEN '' END WHEN CAST(vt2.c0 AS NUMERIC) THEN (((rt0.c2))<((rt0.c1))) WHEN CASE WHEN vt2.c2 THEN rt0.c2 ELSE vt2.c1 END THEN ')nTOR' ELSE NULL END) IS TRUE)  as count FROM rt0 NOT INDEXED, vt2);
SELECT ALL * FROM rt0, vt2 WHERE (CASE WHEN ' c{%}}' THEN CASE WHEN rt0.c1 THEN '' END WHEN CAST(vt2.c0 AS NUMERIC) THEN (((rt0.c2))<((rt0.c1))) WHEN CASE WHEN vt2.c2 THEN rt0.c2 ELSE vt2.c1 END THEN ')nTOR' ELSE NULL END);
SELECT COUNT(*) FROM vt1, vt0, vt2 WHERE (((((vt0.c0)=(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, vt2);
SELECT COUNT(*) FROM vt1, vt0, vt2 WHERE (((((vt0.c0)=(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, vt2);
SELECT COUNT(*) FROM vt1, vt0, vt2 WHERE (((((vt0.c0)=(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt2, vt1, rt0 WHERE ('1121135083') ORDER BY vt2.c1;
SELECT SUM(count) FROM (SELECT (('1121135083') IS TRUE)  as count FROM vt2, vt1, rt0 ORDER BY vt2.c1);
SELECT COUNT(*) FROM vt2, vt1, rt0 WHERE ('1121135083') ORDER BY vt2.c1;
SELECT SUM(count) FROM (SELECT (('1121135083') IS TRUE)  as count FROM vt2, vt1, rt0 ORDER BY vt2.c1);
SELECT COUNT(*) FROM vt2, vt1, rt0 WHERE ('1121135083') ORDER BY vt2.c1;
SELECT * FROM rt0, vt2, vt1, vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt0, vt2, vt1, vt0);
SELECT * FROM rt0, vt2, vt1, vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt0, vt2, vt1, vt0);
SELECT * FROM rt0, vt2, vt1, vt0 WHERE (CAST(x'' AS BLOB));
SELECT COUNT(*) FROM vt2, vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((((vt0.c1)) NOT BETWEEN ((vt2.c2)) AND ((vt2.c2)))))!=((CAST(vt1.lid AS TEXT)))) WHERE (((vt1.lid) IS FALSE)) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(CAST(rt0.c2 AS REAL))))AND((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.lid) IS FALSE)) IS TRUE)  as count FROM vt2, vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((((vt0.c1)) NOT BETWEEN ((vt2.c2)) AND ((vt2.c2)))))<>((CAST(vt1.lid AS TEXT)))) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(CAST(rt0.c2 AS REAL))))AND((+ (rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt2, vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((((vt0.c1)) NOT BETWEEN ((vt2.c2)) AND ((vt2.c2)))))!=((CAST(vt1.lid AS TEXT)))) WHERE (((vt1.lid) IS FALSE)) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(CAST(rt0.c2 AS REAL))))AND((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.lid) IS FALSE)) IS TRUE)  as count FROM vt2, vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((((vt0.c1)) NOT BETWEEN ((vt2.c2)) AND ((vt2.c2)))))<>((CAST(vt1.lid AS TEXT)))) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(CAST(rt0.c2 AS REAL))))AND((+ (rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt2, vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((((vt0.c1)) NOT BETWEEN ((vt2.c2)) AND ((vt2.c2)))))!=((CAST(vt1.lid AS TEXT)))) WHERE (((vt1.lid) IS FALSE)) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR(CAST(rt0.c2 AS REAL))))AND((+ (rt0.c0)))) ASC;
SELECT * FROM vt1 FULL OUTER JOIN vt2 ON vt1.lid INNER JOIN rt0 ON ((((rt0.c1) NOT NULL))<=((- (rt0.c0)))) WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN ((vt2.c1) NOT BETWEEN (vt1.lid) AND (vt2.c2)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE NOCASE THEN ((vt2.c1) NOT BETWEEN (vt1.lid) AND (vt2.c2)) ELSE NULL END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt2 ON vt1.lid INNER JOIN rt0 ON ((((rt0.c1) NOT NULL))<=((- (rt0.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt2 ON vt1.lid INNER JOIN rt0 ON ((((rt0.c1) NOT NULL))<=((- (rt0.c0)))) WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN ((vt2.c1) NOT BETWEEN (vt1.lid) AND (vt2.c2)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 COLLATE NOCASE THEN ((vt2.c1) NOT BETWEEN (vt1.lid) AND (vt2.c2)) ELSE NULL END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt2 ON vt1.lid INNER JOIN rt0 ON ((((rt0.c1) NOT NULL))<=((- (rt0.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt2 ON vt1.lid INNER JOIN rt0 ON ((((rt0.c1) NOT NULL))<=((- (rt0.c0)))) WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN ((vt2.c1) NOT BETWEEN (vt1.lid) AND (vt2.c2)) ELSE NULL END);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN rt0 ON ((NULL)||(CAST(rt0.c4 AS TEXT))) CROSS JOIN vt1 ON x'8abd' CROSS JOIN vt0 ON CASE CAST(vt1.lid AS NUMERIC)  WHEN vt2.c0 COLLATE BINARY THEN '-257645527' END WHERE (((rt0.c2)>=(vt2.c1)) COLLATE RTRIM) ORDER BY ((CASE vt2.c0  WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt2.c1 WHEN vt1.c0 THEN rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((- (rt0.c4))))>((GLOB(rt0.c2, rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>=(vt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 CROSS JOIN rt0 ON ((NULL)||(CAST(rt0.c4 AS TEXT))) CROSS JOIN vt1 ON x'8abd' CROSS JOIN vt0 ON CASE CAST(vt1.lid AS NUMERIC)  WHEN vt2.c0 COLLATE BINARY THEN '-257645527' END ORDER BY ((CASE vt2.c0  WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt2.c1 WHEN vt1.c0 THEN rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((- (rt0.c4))))>((GLOB(rt0.c2, rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN rt0 ON ((NULL)||(CAST(rt0.c4 AS TEXT))) CROSS JOIN vt1 ON x'8abd' CROSS JOIN vt0 ON CASE CAST(vt1.lid AS NUMERIC)  WHEN vt2.c0 COLLATE BINARY THEN '-257645527' END WHERE (((rt0.c2)>=(vt2.c1)) COLLATE RTRIM) ORDER BY ((CASE vt2.c0  WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt2.c1 WHEN vt1.c0 THEN rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((- (rt0.c4))))>((GLOB(rt0.c2, rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>=(vt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 CROSS JOIN rt0 ON ((NULL)||(CAST(rt0.c4 AS TEXT))) CROSS JOIN vt1 ON x'8abd' CROSS JOIN vt0 ON CASE CAST(vt1.lid AS NUMERIC)  WHEN vt2.c0 COLLATE BINARY THEN '-257645527' END ORDER BY ((CASE vt2.c0  WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt2.c1 WHEN vt1.c0 THEN rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((- (rt0.c4))))>((GLOB(rt0.c2, rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN rt0 ON ((NULL)||(CAST(rt0.c4 AS TEXT))) CROSS JOIN vt1 ON x'8abd' CROSS JOIN vt0 ON CASE CAST(vt1.lid AS NUMERIC)  WHEN vt2.c0 COLLATE BINARY THEN '-257645527' END WHERE (((rt0.c2)>=(vt2.c1)) COLLATE RTRIM) ORDER BY ((CASE vt2.c0  WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN vt2.c1 WHEN vt1.c0 THEN rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((- (rt0.c4))))>((GLOB(rt0.c2, rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt2 CROSS JOIN vt0 ON CAST(724946374 AS INTEGER) RIGHT OUTER JOIN rt0 ON ((x'' COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (vt2.c1)) WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((0.23287500697143348) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt1.c0 IN ()))|(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((0.23287500697143348) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt2 CROSS JOIN vt0 ON CAST(724946374 AS INTEGER) RIGHT OUTER JOIN rt0 ON ((x'' COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (vt2.c1)) ORDER BY (((vt1.c0 IN ()))|(vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt2 CROSS JOIN vt0 ON CAST(724946374 AS INTEGER) RIGHT OUTER JOIN rt0 ON ((x'' COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (vt2.c1)) WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((0.23287500697143348) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt1.c0 IN ()))|(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (((0.23287500697143348) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt2 CROSS JOIN vt0 ON CAST(724946374 AS INTEGER) RIGHT OUTER JOIN rt0 ON ((x'' COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (vt2.c1)) ORDER BY (((vt1.c0 IN ()))|(vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt2 CROSS JOIN vt0 ON CAST(724946374 AS INTEGER) RIGHT OUTER JOIN rt0 ON ((x'' COLLATE BINARY) NOT BETWEEN ((vt0.c0 IN ())) AND (vt2.c1)) WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((0.23287500697143348) NOT BETWEEN (rt0.c3) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY (((vt1.c0 IN ()))|(vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((((((rt0.c0) ISNULL))OR(rt0.c0)))OR(rt0.c3 COLLATE NOCASE)))AND((((vt1.lid)) NOT BETWEEN ((rt0.c0)) AND ((vt1.lid))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c4))))OR(CAST(0x6ea625df AS INTEGER))))AND((rt0.c3 IN ()))))AND(NULL)))OR(rt0.c2 COLLATE BINARY))) ORDER BY CASE ((((((((rt0.c2)OR(vt1.lid)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.lid THEN vt1.lid ELSE rt0.c0 END THEN rt0.c3 ELSE ((rt0.c2)IS(rt0.c1)) END ASC  NULLS LAST, (- (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((rt0.c0) ISNULL))OR(rt0.c0)))OR(rt0.c3 COLLATE NOCASE)))AND((((vt1.lid)) NOT BETWEEN ((rt0.c0)) AND ((vt1.lid))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c4))))OR(CAST(0X6ea625df AS INTEGER))))AND((rt0.c3 IN ()))))AND(NULL)))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE ((((((((rt0.c2)OR(vt1.lid)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.lid THEN vt1.lid ELSE rt0.c0 END THEN rt0.c3 ELSE ((rt0.c2)IS(rt0.c1)) END ASC  NULLS LAST, (- (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((((((rt0.c0) ISNULL))OR(rt0.c0)))OR(rt0.c3 COLLATE NOCASE)))AND((((vt1.lid)) NOT BETWEEN ((rt0.c0)) AND ((vt1.lid))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c4))))OR(CAST(0x6ea625df AS INTEGER))))AND((rt0.c3 IN ()))))AND(NULL)))OR(rt0.c2 COLLATE BINARY))) ORDER BY CASE ((((((((rt0.c2)OR(vt1.lid)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.lid THEN vt1.lid ELSE rt0.c0 END THEN rt0.c3 ELSE ((rt0.c2)IS(rt0.c1)) END ASC  NULLS LAST, (- (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((rt0.c0) ISNULL))OR(rt0.c0)))OR(rt0.c3 COLLATE NOCASE)))AND((((vt1.lid)) NOT BETWEEN ((rt0.c0)) AND ((vt1.lid))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c4))))OR(CAST(0X6ea625df AS INTEGER))))AND((rt0.c3 IN ()))))AND(NULL)))OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE ((((((((rt0.c2)OR(vt1.lid)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.lid THEN vt1.lid ELSE rt0.c0 END THEN rt0.c3 ELSE ((rt0.c2)IS(rt0.c1)) END ASC  NULLS LAST, (- (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((((((rt0.c0) ISNULL))OR(rt0.c0)))OR(rt0.c3 COLLATE NOCASE)))AND((((vt1.lid)) NOT BETWEEN ((rt0.c0)) AND ((vt1.lid))))))AND(SQLITE_COMPILEOPTION_GET(rt0.c4))))OR(CAST(0x6ea625df AS INTEGER))))AND((rt0.c3 IN ()))))AND(NULL)))OR(rt0.c2 COLLATE BINARY))) ORDER BY CASE ((((((((rt0.c2)OR(vt1.lid)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.lid THEN vt1.lid ELSE rt0.c0 END THEN rt0.c3 ELSE ((rt0.c2)IS(rt0.c1)) END ASC  NULLS LAST, (- (rt0.c2)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)||(vt1.lid))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)|(vt1.c0))))) ORDER BY (vt1.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)||(vt1.lid))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)||(vt1.lid))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)|(vt1.c0))))) ORDER BY (vt1.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)||(vt1.lid))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)||(vt1.lid))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (((vt1.c0)|(vt1.c0))))) ORDER BY (vt1.c0 IN ()) DESC;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt1.lid) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) ORDER BY TYPEOF((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.lid)))) ASC  NULLS FIRST, ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 ELSE 0.8512961564953869 END)<=(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0 NOT INDEXED ORDER BY TYPEOF((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.lid)))) ASC  NULLS FIRST, ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 ELSE 0.8512961564953869 END)<=(NULL)) DESC);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt1.lid) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) ORDER BY TYPEOF((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.lid)))) ASC  NULLS FIRST, ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 ELSE 0.8512961564953869 END)<=(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, vt0 NOT INDEXED ORDER BY TYPEOF((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.lid)))) ASC  NULLS FIRST, ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 ELSE 0.8512961564953869 END)<=(NULL)) DESC);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt1.lid) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) ORDER BY TYPEOF((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.lid)))) ASC  NULLS FIRST, ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 ELSE 0.8512961564953869 END)<=(NULL)) DESC;
SELECT * FROM vt1, vt0 WHERE (x'') ORDER BY (((((((('1818292347')AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((('1818292347')AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(x''))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (x'') ORDER BY (((((((('1818292347')AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((('1818292347')AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(x''))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (x'') ORDER BY (((((((('1818292347')AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(x''))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB)) ORDER BY TYPEOF(((vt0.c0)<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((vt0.c0)<(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB)) ORDER BY TYPEOF(((vt0.c0)<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((vt0.c0)<(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)) AS BLOB)) ORDER BY TYPEOF(((vt0.c0)<(vt0.c0)));
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE ('1154641666');
SELECT SUM(count) FROM (SELECT (('1154641666') IS TRUE)  as count FROM rt0, vt1, vt2);
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE ('1154641666');
SELECT SUM(count) FROM (SELECT (('1154641666') IS TRUE)  as count FROM rt0, vt1, vt2);
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE ('1154641666');
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 WHERE ('0.9551021556900109');
SELECT SUM(count) FROM (SELECT (('0.9551021556900109') IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 WHERE ('0.9551021556900109');
SELECT SUM(count) FROM (SELECT (('0.9551021556900109') IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 WHERE ('0.9551021556900109');
SELECT * FROM rt0, vt2, vt0 WHERE ((((((NOT (vt0.c1)))OR((((rt0.c2)) BETWEEN ((vt2.c1)) AND ((vt2.c1))))))OR((~ (rt0.c1))))) ORDER BY ((vt2.c0)<(vt2.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c1)))OR((((rt0.c2)) BETWEEN ((vt2.c1)) AND ((vt2.c1))))))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY ((vt2.c0)<(vt2.c1)) COLLATE NOCASE ASC);
SELECT * FROM rt0, vt2, vt0 WHERE ((((((NOT (vt0.c1)))OR((((rt0.c2)) BETWEEN ((vt2.c1)) AND ((vt2.c1))))))OR((~ (rt0.c1))))) ORDER BY ((vt2.c0)<(vt2.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c1)))OR((((rt0.c2)) BETWEEN ((vt2.c1)) AND ((vt2.c1))))))OR((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY ((vt2.c0)<(vt2.c1)) COLLATE NOCASE ASC);
SELECT * FROM rt0, vt2, vt0 WHERE ((((((NOT (vt0.c1)))OR((((rt0.c2)) BETWEEN ((vt2.c1)) AND ((vt2.c1))))))OR((~ (rt0.c1))))) ORDER BY ((vt2.c0)<(vt2.c1)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt2, vt1, rt0, vt0 WHERE (CAST(1710412227 AS NUMERIC)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(1710412227 AS NUMERIC)) IS TRUE)  as count FROM vt2, vt1, rt0, vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt2, vt1, rt0, vt0 WHERE (CAST(1710412227 AS NUMERIC)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(1710412227 AS NUMERIC)) IS TRUE)  as count FROM vt2, vt1, rt0, vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt2, vt1, rt0, vt0 WHERE (CAST(1710412227 AS NUMERIC)) ORDER BY x'' DESC;
SELECT * FROM vt2, vt0, vt1, rt0 WHERE (x'49bf');
SELECT SUM(count) FROM (SELECT ALL ((x'49bf') IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT * FROM vt2, vt0, vt1, rt0 WHERE (x'49bf');
SELECT SUM(count) FROM (SELECT ALL ((x'49bf') IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT * FROM vt2, vt0, vt1, rt0 WHERE (x'49bf');
SELECT COUNT(*) FROM rt0 INNER JOIN vt2 ON vt1.c0 FULL OUTER JOIN vt1 ON CASE vt2.c1  WHEN vt2.c2 THEN ((rt0.c1)>=(rt0.c4)) WHEN ((vt2.c0) IS FALSE) THEN rt0.c0 WHEN TYPEOF('-1617915574') THEN ((((((((vt2.c1)OR(vt2.c0)))AND(vt2.c2)))OR(vt2.c2)))AND(vt0.c1)) END LEFT OUTER JOIN vt0 ON (vt0.c1 COLLATE BINARY IN (((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))) WHERE (((((((((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))OR(vt2.c0)))AND(vt1.lid)))AND(rt0.c3)))AND(rt0.c2)))<=((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((0.3768037788442764)))))) ORDER BY UPPER(DISTINCT ((vt0.c1) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))OR(vt2.c0)))AND(vt1.lid)))AND(rt0.c3)))AND(rt0.c2)))<=((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((0.3768037788442764)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt2 ON vt1.c0 FULL OUTER JOIN vt1 ON CASE vt2.c1  WHEN vt2.c2 THEN ((rt0.c1)>=(rt0.c4)) WHEN ((vt2.c0) IS FALSE) THEN rt0.c0 WHEN TYPEOF('-1617915574') THEN ((((((((vt2.c1)OR(vt2.c0)))AND(vt2.c2)))OR(vt2.c2)))AND(vt0.c1)) END LEFT OUTER JOIN vt0 ON (vt0.c1 COLLATE BINARY IN (((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))) ORDER BY UPPER(DISTINCT ((vt0.c1) IS FALSE)) DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt2 ON vt1.c0 FULL OUTER JOIN vt1 ON CASE vt2.c1  WHEN vt2.c2 THEN ((rt0.c1)>=(rt0.c4)) WHEN ((vt2.c0) IS FALSE) THEN rt0.c0 WHEN TYPEOF('-1617915574') THEN ((((((((vt2.c1)OR(vt2.c0)))AND(vt2.c2)))OR(vt2.c2)))AND(vt0.c1)) END LEFT OUTER JOIN vt0 ON (vt0.c1 COLLATE BINARY IN (((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))) WHERE (((((((((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))OR(vt2.c0)))AND(vt1.lid)))AND(rt0.c3)))AND(rt0.c2)))<=((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((0.3768037788442764)))))) ORDER BY UPPER(DISTINCT ((vt0.c1) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))OR(vt2.c0)))AND(vt1.lid)))AND(rt0.c3)))AND(rt0.c2)))<=((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((0.3768037788442764)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt2 ON vt1.c0 FULL OUTER JOIN vt1 ON CASE vt2.c1  WHEN vt2.c2 THEN ((rt0.c1)>=(rt0.c4)) WHEN ((vt2.c0) IS FALSE) THEN rt0.c0 WHEN TYPEOF('-1617915574') THEN ((((((((vt2.c1)OR(vt2.c0)))AND(vt2.c2)))OR(vt2.c2)))AND(vt0.c1)) END LEFT OUTER JOIN vt0 ON (vt0.c1 COLLATE BINARY IN (((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))) ORDER BY UPPER(DISTINCT ((vt0.c1) IS FALSE)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt2, vt1, vt0 WHERE (vt0.c1) ORDER BY vt1.c0  NULLS LAST, ((NULLIF(DISTINCT vt1.c0, vt2.c2)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt2, vt1, vt0 ORDER BY vt1.c0  NULLS LAST, ((NULLIF(DISTINCT vt1.c0, vt2.c2)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt2, vt1, vt0 WHERE (vt0.c1) ORDER BY vt1.c0  NULLS LAST, ((NULLIF(DISTINCT vt1.c0, vt2.c2)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt2, vt1, vt0 ORDER BY vt1.c0  NULLS LAST, ((NULLIF(DISTINCT vt1.c0, vt2.c2)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt2, vt1, vt0 WHERE (vt0.c1) ORDER BY vt1.c0  NULLS LAST, ((NULLIF(DISTINCT vt1.c0, vt2.c2)) IS FALSE);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((rt0.c2)<(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((rt0.c2)<(vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((rt0.c2)<(vt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c0))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c0))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c0))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c0))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULLIF(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c0))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT ALL * FROM vt2, vt0, vt1 WHERE (CAST(1.818292347E9 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.818292347E9 AS BLOB)) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT ALL * FROM vt2, vt0, vt1 WHERE (CAST(1.818292347E9 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.818292347E9 AS BLOB)) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT ALL * FROM vt2, vt0, vt1 WHERE (CAST(1.818292347E9 AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (ABS((((rt0.c1, rt0.c1, vt0.c0))!=((rt0.c2, vt1.c0, vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((ABS((((rt0.c1, rt0.c1, vt0.c0))<>((rt0.c2, vt1.c0, vt1.lid))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (ABS((((rt0.c1, rt0.c1, vt0.c0))!=((rt0.c2, vt1.c0, vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((ABS((((rt0.c1, rt0.c1, vt0.c0))<>((rt0.c2, vt1.c0, vt1.lid))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (ABS((((rt0.c1, rt0.c1, vt0.c0))!=((rt0.c2, vt1.c0, vt1.lid)))));
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE (CAST(vt2.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY (((NOT (vt2.c0)))GLOB(((vt2.c1)<>('>7jꛝ2')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt2.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1, vt2 ORDER BY (((NOT (vt2.c0)))GLOB(((vt2.c1)!=('>7jꛝ2')))) DESC);
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE (CAST(vt2.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY (((NOT (vt2.c0)))GLOB(((vt2.c1)<>('>7jꛝ2')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt2.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt1, vt2 ORDER BY (((NOT (vt2.c0)))GLOB(((vt2.c1)!=('>7jꛝ2')))) DESC);
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE (CAST(vt2.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY (((NOT (vt2.c0)))GLOB(((vt2.c1)<>('>7jꛝ2')))) DESC;
SELECT * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0)))%(CAST(vt1.lid AS REAL)))) ORDER BY CAST(((vt1.lid)%(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(vt1.c0)))%(CAST(vt1.lid AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.lid)%(vt1.c0)) AS BLOB));
SELECT * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0)))%(CAST(vt1.lid AS REAL)))) ORDER BY CAST(((vt1.lid)%(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>>(vt1.c0)))%(CAST(vt1.lid AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.lid)%(vt1.c0)) AS BLOB));
SELECT * FROM vt1 WHERE (((((vt1.c0)>>(vt1.c0)))%(CAST(vt1.lid AS REAL)))) ORDER BY CAST(((vt1.lid)%(vt1.c0)) AS BLOB);
SELECT COUNT(*) FROM vt2, rt0, vt0, vt1 WHERE (CAST(vt2.c2 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt2, rt0, vt0, vt1);
SELECT COUNT(*) FROM vt2, rt0, vt0, vt1 WHERE (CAST(vt2.c2 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c2 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt2, rt0, vt0, vt1);
SELECT COUNT(*) FROM vt2, rt0, vt0, vt1 WHERE (CAST(vt2.c2 COLLATE RTRIM AS INTEGER));
SELECT ALL * FROM vt2 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3)%(rt0.c0)))AND((((rt0.c3)) BETWEEN ((vt2.c1)) AND ((vt2.c0))))))OR(rt0.c4)))OR(((rt0.c4) BETWEEN (vt2.c2) AND (vt2.c2)))))AND((rt0.c2 IN ()))) CROSS JOIN vt1 ON ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))AND(((vt1.c0) ISNULL))))AND(rt0.c0)) WHERE (((NOT (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3)%(rt0.c0)))AND((((rt0.c3)) BETWEEN ((vt2.c1)) AND ((vt2.c0))))))OR(rt0.c4)))OR(((rt0.c4) BETWEEN (vt2.c2) AND (vt2.c2)))))AND((rt0.c2 IN ()))) CROSS JOIN vt1 ON ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))AND(((vt1.c0) ISNULL))))AND(rt0.c0)));
SELECT ALL * FROM vt2 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3)%(rt0.c0)))AND((((rt0.c3)) BETWEEN ((vt2.c1)) AND ((vt2.c0))))))OR(rt0.c4)))OR(((rt0.c4) BETWEEN (vt2.c2) AND (vt2.c2)))))AND((rt0.c2 IN ()))) CROSS JOIN vt1 ON ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))AND(((vt1.c0) ISNULL))))AND(rt0.c0)) WHERE (((NOT (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3)%(rt0.c0)))AND((((rt0.c3)) BETWEEN ((vt2.c1)) AND ((vt2.c0))))))OR(rt0.c4)))OR(((rt0.c4) BETWEEN (vt2.c2) AND (vt2.c2)))))AND((rt0.c2 IN ()))) CROSS JOIN vt1 ON ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))AND(((vt1.c0) ISNULL))))AND(rt0.c0)));
SELECT ALL * FROM vt2 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c3)%(rt0.c0)))AND((((rt0.c3)) BETWEEN ((vt2.c1)) AND ((vt2.c0))))))OR(rt0.c4)))OR(((rt0.c4) BETWEEN (vt2.c2) AND (vt2.c2)))))AND((rt0.c2 IN ()))) CROSS JOIN vt1 ON ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))AND(((vt1.c0) ISNULL))))AND(rt0.c0)) WHERE (((NOT (rt0.c2)) IN ()));
SELECT COUNT(*) FROM vt2, vt0 FULL OUTER JOIN vt1 ON (((vt2.c0, vt2.c1, vt1.lid, x'1e9f', vt0.c1)) BETWEEN ((x'', (('0.7648795857108887')+(vt2.c2)), 0.3062809025735834, ((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)), UPPER(vt0.c1))) AND ((((vt2.c1)GLOB(vt0.c1)), ((vt0.c1) ISNULL), COALESCE(DISTINCT vt0.c0, vt2.c2), (vt1.lid IN ()), vt0.c0))) WHERE (((((vt2.c2)|(vt1.lid))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt1.lid))) AND ((NOT (vt2.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c2)|(vt1.lid))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt1.lid))) AND ((NOT (vt2.c2))))) IS TRUE)  as count FROM vt2, vt0 FULL OUTER JOIN vt1 ON (((vt2.c0, vt2.c1, vt1.lid, x'1e9f', vt0.c1)) BETWEEN ((x'', (('0.7648795857108887')+(vt2.c2)), 0.3062809025735834, ((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)), UPPER(vt0.c1))) AND ((((vt2.c1)GLOB(vt0.c1)), ((vt0.c1) ISNULL), COALESCE(DISTINCT vt0.c0, vt2.c2), (vt1.lid IN ()), vt0.c0))));
SELECT COUNT(*) FROM vt2, vt0 FULL OUTER JOIN vt1 ON (((vt2.c0, vt2.c1, vt1.lid, x'1e9f', vt0.c1)) BETWEEN ((x'', (('0.7648795857108887')+(vt2.c2)), 0.3062809025735834, ((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)), UPPER(vt0.c1))) AND ((((vt2.c1)GLOB(vt0.c1)), ((vt0.c1) ISNULL), COALESCE(DISTINCT vt0.c0, vt2.c2), (vt1.lid IN ()), vt0.c0))) WHERE (((((vt2.c2)|(vt1.lid))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt1.lid))) AND ((NOT (vt2.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c2)|(vt1.lid))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt1.lid))) AND ((NOT (vt2.c2))))) IS TRUE)  as count FROM vt2, vt0 FULL OUTER JOIN vt1 ON (((vt2.c0, vt2.c1, vt1.lid, x'1e9f', vt0.c1)) BETWEEN ((x'', (('0.7648795857108887')+(vt2.c2)), 0.3062809025735834, ((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)), UPPER(vt0.c1))) AND ((((vt2.c1)GLOB(vt0.c1)), ((vt0.c1) ISNULL), COALESCE(DISTINCT vt0.c0, vt2.c2), (vt1.lid IN ()), vt0.c0))));
SELECT COUNT(*) FROM vt2, vt0 FULL OUTER JOIN vt1 ON (((vt2.c0, vt2.c1, vt1.lid, x'1e9f', vt0.c1)) BETWEEN ((x'', (('0.7648795857108887')+(vt2.c2)), 0.3062809025735834, ((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)), UPPER(vt0.c1))) AND ((((vt2.c1)GLOB(vt0.c1)), ((vt0.c1) ISNULL), COALESCE(DISTINCT vt0.c0, vt2.c2), (vt1.lid IN ()), vt0.c0))) WHERE (((((vt2.c2)|(vt1.lid))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))AND(vt1.lid))) AND ((NOT (vt2.c2)))));
SELECT * FROM vt0, vt1, vt2, rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c0))==((vt2.c2, vt0.c1, vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c4, rt0.c0))==((vt2.c2, vt0.c1, vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, vt2, rt0);
SELECT * FROM vt0, vt1, vt2, rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c0))==((vt2.c2, vt0.c1, vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c4, rt0.c0))==((vt2.c2, vt0.c1, vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, vt2, rt0);
SELECT * FROM vt0, vt1, vt2, rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c0))==((vt2.c2, vt0.c1, vt0.c1))) COLLATE NOCASE);
SELECT * FROM rt0, vt2 NOT INDEXED, vt1 WHERE ((((((rt0.c1, rt0.c2, vt2.c0))>((x'', rt0.c3, vt2.c1))))+(0.9936251024039496)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c2, vt2.c0))>((x'', rt0.c3, vt2.c1))))+(0.9936251024039496))) IS TRUE)  as count FROM rt0, vt2, vt1);
SELECT * FROM rt0, vt2 NOT INDEXED, vt1 WHERE ((((((rt0.c1, rt0.c2, vt2.c0))>((x'', rt0.c3, vt2.c1))))+(0.9936251024039496)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c2, vt2.c0))>((x'', rt0.c3, vt2.c1))))+(0.9936251024039496))) IS TRUE)  as count FROM rt0, vt2, vt1);
SELECT * FROM rt0, vt2 NOT INDEXED, vt1 WHERE ((((((rt0.c1, rt0.c2, vt2.c0))>((x'', rt0.c3, vt2.c1))))+(0.9936251024039496)));
SELECT * FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON NULL WHERE ((((- (rt0.c2))) BETWEEN (((((rt0.c4)AND(rt0.c4)))OR(rt0.c2))) AND (((vt0.c0)AND(rt0.c0))))) ORDER BY -1.224187992E9  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2))) BETWEEN (((((rt0.c4)AND(rt0.c4)))OR(rt0.c2))) AND (((vt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON NULL ORDER BY -1.224187992E9  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON NULL WHERE ((((- (rt0.c2))) BETWEEN (((((rt0.c4)AND(rt0.c4)))OR(rt0.c2))) AND (((vt0.c0)AND(rt0.c0))))) ORDER BY -1.224187992E9  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2))) BETWEEN (((((rt0.c4)AND(rt0.c4)))OR(rt0.c2))) AND (((vt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON NULL ORDER BY -1.224187992E9  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON NULL WHERE ((((- (rt0.c2))) BETWEEN (((((rt0.c4)AND(rt0.c4)))OR(rt0.c2))) AND (((vt0.c0)AND(rt0.c0))))) ORDER BY -1.224187992E9  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt2.c2 END) BETWEEN (((rt0.c4) IS TRUE)) AND (((vt2.c0) IS TRUE))) INNER JOIN rt0 ON ((((vt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4))) IN ((((rt0.c0))==((0.484957318165983))))) WHERE (((((vt1.c0)OR(rt0.c4)))OR(vt2.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(rt0.c4)))OR(vt2.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt2.c2 END) BETWEEN (((rt0.c4) IS TRUE)) AND (((vt2.c0) IS TRUE))) INNER JOIN rt0 ON ((((vt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4))) IN ((((rt0.c0))==((0.484957318165983))))));
SELECT COUNT(*) FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt2.c2 END) BETWEEN (((rt0.c4) IS TRUE)) AND (((vt2.c0) IS TRUE))) INNER JOIN rt0 ON ((((vt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4))) IN ((((rt0.c0))==((0.484957318165983))))) WHERE (((((vt1.c0)OR(rt0.c4)))OR(vt2.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(rt0.c4)))OR(vt2.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt2.c2 END) BETWEEN (((rt0.c4) IS TRUE)) AND (((vt2.c0) IS TRUE))) INNER JOIN rt0 ON ((((vt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c4))) IN ((((rt0.c0))==((0.484957318165983))))));
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT COUNT(*) FROM vt2, vt0, rt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE NOCASE) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE NOCASE) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ('' COLLATE NOCASE);
SELECT ALL * FROM vt2, vt0 WHERE ((((((vt2.c2)AND(vt0.c1)))OR(vt0.c1)) IN (CAST(vt2.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c2)AND(vt0.c1)))OR(vt0.c1)) IN (CAST(vt2.c1 AS TEXT)))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ((((((vt2.c2)AND(vt0.c1)))OR(vt0.c1)) IN (CAST(vt2.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c2)AND(vt0.c1)))OR(vt0.c1)) IN (CAST(vt2.c1 AS TEXT)))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ((((((vt2.c2)AND(vt0.c1)))OR(vt0.c1)) IN (CAST(vt2.c1 AS TEXT))));
SELECT * FROM vt2, vt0, vt1 WHERE (CAST((x'' IN (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT * FROM vt2, vt0, vt1 WHERE (CAST((x'' IN (vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT * FROM vt2, vt0, vt1 WHERE (CAST((x'' IN (vt0.c1)) AS REAL));
SELECT * FROM vt1, vt2 INNER JOIN rt0 ON CAST(CAST(vt2.c2 AS TEXT) AS INTEGER) WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (x''))) ORDER BY TRIM((-2.10927195E8 IN ()), ((((rt0.c1)AND(vt2.c0)))AND(rt0.c3)))  NULLS FIRST, CASE WHEN ((((vt1.lid)AND(rt0.c4)))AND(rt0.c2)) THEN ((vt1.lid)GLOB('?')) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (x''))) IS TRUE)  as count FROM vt1, vt2 INNER JOIN rt0 ON CAST(CAST(vt2.c2 AS TEXT) AS INTEGER) ORDER BY TRIM((-2.10927195E8 IN ()), ((((rt0.c1)AND(vt2.c0)))AND(rt0.c3)))  NULLS FIRST, CASE WHEN ((((vt1.lid)AND(rt0.c4)))AND(rt0.c2)) THEN ((vt1.lid)GLOB('?')) END ASC);
SELECT * FROM vt1, vt2 INNER JOIN rt0 ON CAST(CAST(vt2.c2 AS TEXT) AS INTEGER) WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (x''))) ORDER BY TRIM((-2.10927195E8 IN ()), ((((rt0.c1)AND(vt2.c0)))AND(rt0.c3)))  NULLS FIRST, CASE WHEN ((((vt1.lid)AND(rt0.c4)))AND(rt0.c2)) THEN ((vt1.lid)GLOB('?')) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (x''))) IS TRUE)  as count FROM vt1, vt2 INNER JOIN rt0 ON CAST(CAST(vt2.c2 AS TEXT) AS INTEGER) ORDER BY TRIM((-2.10927195E8 IN ()), ((((rt0.c1)AND(vt2.c0)))AND(rt0.c3)))  NULLS FIRST, CASE WHEN ((((vt1.lid)AND(rt0.c4)))AND(rt0.c2)) THEN ((vt1.lid)GLOB('?')) END ASC);
SELECT * FROM vt1, vt2 INNER JOIN rt0 ON CAST(CAST(vt2.c2 AS TEXT) AS INTEGER) WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (x''))) ORDER BY TRIM((-2.10927195E8 IN ()), ((((rt0.c1)AND(vt2.c0)))AND(rt0.c3)))  NULLS FIRST, CASE WHEN ((((vt1.lid)AND(rt0.c4)))AND(rt0.c2)) THEN ((vt1.lid)GLOB('?')) END ASC;
SELECT COUNT(*) FROM vt1, rt0, vt2 WHERE (rt0.c1) ORDER BY CAST((((vt1.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt2.c0))) AS TEXT) DESC  NULLS FIRST, ((NULL) NOT NULL)  NULLS FIRST, ((vt2.c0 COLLATE BINARY)&('2002611230')) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, vt2 ORDER BY CAST((((vt1.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt2.c0))) AS TEXT) DESC  NULLS FIRST, ((NULL) NOT NULL)  NULLS FIRST, ((vt2.c0 COLLATE BINARY)&('2002611230')) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt2 WHERE (rt0.c1) ORDER BY CAST((((vt1.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt2.c0))) AS TEXT) DESC  NULLS FIRST, ((NULL) NOT NULL)  NULLS FIRST, ((vt2.c0 COLLATE BINARY)&('2002611230')) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0, vt2 ORDER BY CAST((((vt1.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt2.c0))) AS TEXT) DESC  NULLS FIRST, ((NULL) NOT NULL)  NULLS FIRST, ((vt2.c0 COLLATE BINARY)&('2002611230')) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt2 WHERE (rt0.c1) ORDER BY CAST((((vt1.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt2.c0))) AS TEXT) DESC  NULLS FIRST, ((NULL) NOT NULL)  NULLS FIRST, ((vt2.c0 COLLATE BINARY)&('2002611230')) ASC;
SELECT ALL * FROM vt0, vt2 WHERE ((((vt0.c1))>=((CAST(vt2.c0 AS REAL))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))>=((CAST(vt2.c0 AS REAL))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 WHERE ((((vt0.c1))>=((CAST(vt2.c0 AS REAL))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))>=((CAST(vt2.c0 AS REAL))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 WHERE ((((vt0.c1))>=((CAST(vt2.c0 AS REAL))))) ORDER BY x''  NULLS FIRST;
SELECT * FROM vt0, vt2, vt1, rt0 WHERE (CASE WHEN (~ (rt0.c4)) THEN (vt2.c1 IN (vt2.c2)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c4 AS REAL) WHEN (((vt2.c1))>=((0.13003111958682523))) THEN '&|' END) ORDER BY (((('-559641332')IS NOT(vt0.c1))) BETWEEN (((0.5687313999512659) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (vt2.c0 COLLATE NOCASE)) DESC, CAST((~ (vt1.lid)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c4)) THEN (vt2.c1 IN (vt2.c2)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c4 AS REAL) WHEN (((vt2.c1))>=((0.13003111958682523))) THEN '&|' END) IS TRUE)  as count FROM vt0, vt2, vt1, rt0 ORDER BY (((('-559641332')IS NOT(vt0.c1))) BETWEEN (((0.5687313999512659) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (vt2.c0 COLLATE NOCASE)) DESC, CAST((~ (vt1.lid)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt0, vt2, vt1, rt0 WHERE (CASE WHEN (~ (rt0.c4)) THEN (vt2.c1 IN (vt2.c2)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c4 AS REAL) WHEN (((vt2.c1))>=((0.13003111958682523))) THEN '&|' END) ORDER BY (((('-559641332')IS NOT(vt0.c1))) BETWEEN (((0.5687313999512659) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (vt2.c0 COLLATE NOCASE)) DESC, CAST((~ (vt1.lid)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c4)) THEN (vt2.c1 IN (vt2.c2)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c4 AS REAL) WHEN (((vt2.c1))>=((0.13003111958682523))) THEN '&|' END) IS TRUE)  as count FROM vt0, vt2, vt1, rt0 ORDER BY (((('-559641332')IS NOT(vt0.c1))) BETWEEN (((0.5687313999512659) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (vt2.c0 COLLATE NOCASE)) DESC, CAST((~ (vt1.lid)) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM vt0, vt2, vt1, rt0 WHERE (CASE WHEN (~ (rt0.c4)) THEN (vt2.c1 IN (vt2.c2)) WHEN (+ (rt0.c0)) THEN CAST(rt0.c4 AS REAL) WHEN (((vt2.c1))>=((0.13003111958682523))) THEN '&|' END) ORDER BY (((('-559641332')IS NOT(vt0.c1))) BETWEEN (((0.5687313999512659) NOT BETWEEN (rt0.c0) AND (rt0.c4))) AND (vt2.c0 COLLATE NOCASE)) DESC, CAST((~ (vt1.lid)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt2 FULL OUTER JOIN rt0 ON ((TRIM(DISTINCT '2050259692'))LIKE(((rt0.c3) NOTNULL))) WHERE (TRIM(DISTINCT 0.5388579063504007, UPPER(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 0.5388579063504007, UPPER(rt0.c4))) IS TRUE)  as count FROM vt1, vt2 FULL OUTER JOIN rt0 ON ((TRIM(DISTINCT '2050259692'))LIKE(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, vt2 FULL OUTER JOIN rt0 ON ((TRIM(DISTINCT '2050259692'))LIKE(((rt0.c3) NOTNULL))) WHERE (TRIM(DISTINCT 0.5388579063504007, UPPER(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 0.5388579063504007, UPPER(rt0.c4))) IS TRUE)  as count FROM vt1, vt2 FULL OUTER JOIN rt0 ON ((TRIM(DISTINCT '2050259692'))LIKE(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, vt2 FULL OUTER JOIN rt0 ON ((TRIM(DISTINCT '2050259692'))LIKE(((rt0.c3) NOTNULL))) WHERE (TRIM(DISTINCT 0.5388579063504007, UPPER(rt0.c4)));
SELECT COUNT(*) FROM vt0, rt0, vt1 CROSS JOIN vt2 ON ((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt2.c2) IS FALSE))))OR((-1178658671 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))) WHERE ((((NOT (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1 CROSS JOIN vt2 ON ((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt2.c2) IS FALSE))))OR((-1178658671 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))));
SELECT COUNT(*) FROM vt0, rt0, vt1 CROSS JOIN vt2 ON ((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt2.c2) IS FALSE))))OR((-1178658671 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))) WHERE ((((NOT (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1 CROSS JOIN vt2 ON ((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt2.c2) IS FALSE))))OR((-1178658671 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))));
SELECT COUNT(*) FROM vt0, rt0, vt1 CROSS JOIN vt2 ON ((((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)))AND(CAST(rt0.c2 AS NUMERIC))))AND(((vt2.c2) IS FALSE))))OR((-1178658671 IN ()))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))) WHERE ((((NOT (rt0.c0))) IS FALSE));
SELECT ALL * FROM vt2, rt0, vt1 WHERE (((((rt0.c0)<=(0x5c036a45))) BETWEEN (vt2.c1 COLLATE NOCASE) AND (((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt2.c0)))OR(vt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(0X5c036a45))) BETWEEN (vt2.c1 COLLATE NOCASE) AND (((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt2.c0)))OR(vt2.c1))))) IS TRUE)  as count FROM vt2, rt0, vt1);
SELECT ALL * FROM vt2, rt0, vt1 WHERE (((((rt0.c0)<=(0x5c036a45))) BETWEEN (vt2.c1 COLLATE NOCASE) AND (((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt2.c0)))OR(vt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<=(0X5c036a45))) BETWEEN (vt2.c1 COLLATE NOCASE) AND (((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt2.c0)))OR(vt2.c1))))) IS TRUE)  as count FROM vt2, rt0, vt1);
SELECT ALL * FROM vt2, rt0, vt1 WHERE (((((rt0.c0)<=(0x5c036a45))) BETWEEN (vt2.c1 COLLATE NOCASE) AND (((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))AND(vt2.c0)))OR(vt2.c1)))));
SELECT ALL * FROM vt0, vt1, vt2 WHERE (((((((vt2.c0)OR(vt0.c1)))AND(vt2.c2)))&(CASE vt2.c0  WHEN vt2.c1 THEN vt2.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)OR(vt0.c1)))AND(vt2.c2)))&(CASE vt2.c0  WHEN vt2.c1 THEN vt2.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, vt2);
SELECT ALL * FROM vt0, vt1, vt2 WHERE (((((((vt2.c0)OR(vt0.c1)))AND(vt2.c2)))&(CASE vt2.c0  WHEN vt2.c1 THEN vt2.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)OR(vt0.c1)))AND(vt2.c2)))&(CASE vt2.c0  WHEN vt2.c1 THEN vt2.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, vt2);
SELECT ALL * FROM vt0, vt1, vt2 WHERE (((((((vt2.c0)OR(vt0.c1)))AND(vt2.c2)))&(CASE vt2.c0  WHEN vt2.c1 THEN vt2.c0 ELSE vt0.c0 END)));
SELECT * FROM rt0, vt1, vt0, vt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1, vt0, vt2);
SELECT * FROM rt0, vt1, vt0, vt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1, vt0, vt2);
SELECT * FROM rt0, vt1, vt0, vt2 WHERE (x'');
SELECT COUNT(*) FROM vt0, vt2 WHERE ((CASE WHEN vt0.c1 THEN vt2.c1 END IN (((vt2.c0) IS FALSE)))) ORDER BY (vt2.c1 IN ()) COLLATE BINARY ASC, (vt2.c1 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt2.c1 END IN (((vt2.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (vt2.c1 IN ()) COLLATE BINARY ASC, (vt2.c1 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2 WHERE ((CASE WHEN vt0.c1 THEN vt2.c1 END IN (((vt2.c0) IS FALSE)))) ORDER BY (vt2.c1 IN ()) COLLATE BINARY ASC, (vt2.c1 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt2.c1 END IN (((vt2.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (vt2.c1 IN ()) COLLATE BINARY ASC, (vt2.c1 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2 WHERE ((CASE WHEN vt0.c1 THEN vt2.c1 END IN (((vt2.c0) IS FALSE)))) ORDER BY (vt2.c1 IN ()) COLLATE BINARY ASC, (vt2.c1 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2, vt1.lid)))) WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2, vt1.lid)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2, vt1.lid)))) WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2, vt1.lid)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2, vt1.lid)))) WHERE (((rt0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 AS TEXT)) ORDER BY 'v#' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY 'v#' DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 AS TEXT)) ORDER BY 'v#' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY 'v#' DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c4 AS TEXT)) ORDER BY 'v#' DESC;
SELECT * FROM vt1, vt0 LEFT OUTER JOIN vt2 ON NULL WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN vt2 ON NULL);
SELECT * FROM vt1, vt0 LEFT OUTER JOIN vt2 ON NULL WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN vt2 ON NULL);
SELECT * FROM vt1, vt0 LEFT OUTER JOIN vt2 ON NULL WHERE ((CAST(vt1.c0 AS REAL) IN ()));
SELECT ALL * FROM vt0, rt0, vt1, vt2 WHERE (NULL) ORDER BY (((rt0.c3, rt0.c0, vt2.c1)) BETWEEN ((((vt0.c1) ISNULL), CASE WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END, ((rt0.c3)IS(vt0.c1)))) AND (((vt0.c1 IN ()), CAST(vt2.c2 AS BLOB), vt2.c1 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, vt1, vt2 ORDER BY (((rt0.c3, rt0.c0, vt2.c1)) BETWEEN ((((vt0.c1) ISNULL), CASE WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END, ((rt0.c3)IS(vt0.c1)))) AND (((vt0.c1 IN ()), CAST(vt2.c2 AS BLOB), vt2.c1 COLLATE BINARY))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1, vt2 WHERE (NULL) ORDER BY (((rt0.c3, rt0.c0, vt2.c1)) BETWEEN ((((vt0.c1) ISNULL), CASE WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END, ((rt0.c3)IS(vt0.c1)))) AND (((vt0.c1 IN ()), CAST(vt2.c2 AS BLOB), vt2.c1 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, vt1, vt2 ORDER BY (((rt0.c3, rt0.c0, vt2.c1)) BETWEEN ((((vt0.c1) ISNULL), CASE WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END, ((rt0.c3)IS(vt0.c1)))) AND (((vt0.c1 IN ()), CAST(vt2.c2 AS BLOB), vt2.c1 COLLATE BINARY))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1, vt2 WHERE (NULL) ORDER BY (((rt0.c3, rt0.c0, vt2.c1)) BETWEEN ((((vt0.c1) ISNULL), CASE WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END, ((rt0.c3)IS(vt0.c1)))) AND (((vt0.c1 IN ()), CAST(vt2.c2 AS BLOB), vt2.c1 COLLATE BINARY))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE (UNLIKELY(DISTINCT NULL) COLLATE NOCASE) ORDER BY ((((0.9578247717505189)OR(rt0.c3 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt2, vt0, vt1 ORDER BY ((((0.9578247717505189)OR(rt0.c3 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE (UNLIKELY(DISTINCT NULL) COLLATE NOCASE) ORDER BY ((((0.9578247717505189)OR(rt0.c3 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT NULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt2, vt0, vt1 ORDER BY ((((0.9578247717505189)OR(rt0.c3 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE (UNLIKELY(DISTINCT NULL) COLLATE NOCASE) ORDER BY ((((0.9578247717505189)OR(rt0.c3 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM vt2, rt0 WHERE ((~ (((((0.19019445789322342)OR(rt0.c4)))AND(vt2.c0))))) ORDER BY (((- (vt2.c2))) NOT BETWEEN (IFNULL(DISTINCT vt2.c2, '0.8379048692414952')) AND (rt0.c3 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((0.19019445789322342)OR(rt0.c4)))AND(vt2.c0))))) IS TRUE)  as count FROM vt2, rt0 ORDER BY (((- (vt2.c2))) NOT BETWEEN (IFNULL(DISTINCT vt2.c2, '0.8379048692414952')) AND (rt0.c3 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt2, rt0 WHERE ((~ (((((0.19019445789322342)OR(rt0.c4)))AND(vt2.c0))))) ORDER BY (((- (vt2.c2))) NOT BETWEEN (IFNULL(DISTINCT vt2.c2, '0.8379048692414952')) AND (rt0.c3 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((0.19019445789322342)OR(rt0.c4)))AND(vt2.c0))))) IS TRUE)  as count FROM vt2, rt0 ORDER BY (((- (vt2.c2))) NOT BETWEEN (IFNULL(DISTINCT vt2.c2, '0.8379048692414952')) AND (rt0.c3 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt2, rt0 WHERE ((~ (((((0.19019445789322342)OR(rt0.c4)))AND(vt2.c0))))) ORDER BY (((- (vt2.c2))) NOT BETWEEN (IFNULL(DISTINCT vt2.c2, '0.8379048692414952')) AND (rt0.c3 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((0.4785530298153531, 0.8850367466290616, NULL))=((CASE rt0.c4  WHEN rt0.c2 THEN x'2ca9' WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END, (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))), (- (rt0.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((0.4785530298153531, 0.8850367466290616, NULL))=((CASE rt0.c4  WHEN rt0.c2 THEN x'2ca9' WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END, (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))), (- (rt0.c3))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((0.4785530298153531, 0.8850367466290616, NULL))=((CASE rt0.c4  WHEN rt0.c2 THEN x'2ca9' WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END, (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))), (- (rt0.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((0.4785530298153531, 0.8850367466290616, NULL))=((CASE rt0.c4  WHEN rt0.c2 THEN x'2ca9' WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END, (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))), (- (rt0.c3))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((0.4785530298153531, 0.8850367466290616, NULL))=((CASE rt0.c4  WHEN rt0.c2 THEN x'2ca9' WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END, (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))), (- (rt0.c3))))) ASC  NULLS FIRST;
SELECT * FROM vt2 RIGHT OUTER JOIN rt0 ON '1543727685' RIGHT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c4) NOTNULL))) WHERE (((((('r)Z8')) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c3 THEN vt1.lid ELSE vt2.c0 END) AND ((rt0.c3 IN (rt0.c3))))) ORDER BY (NOT (DATETIME(rt0.c0, rt0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((('r)Z8')) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c3 THEN vt1.lid ELSE vt2.c0 END) AND ((rt0.c3 IN (rt0.c3))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON '1543727685' RIGHT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c4) NOTNULL))) ORDER BY (NOT (DATETIME(rt0.c0, rt0.c2, rt0.c1))) ASC);
SELECT * FROM vt2 RIGHT OUTER JOIN rt0 ON '1543727685' RIGHT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c4) NOTNULL))) WHERE (((((('r)Z8')) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c3 THEN vt1.lid ELSE vt2.c0 END) AND ((rt0.c3 IN (rt0.c3))))) ORDER BY (NOT (DATETIME(rt0.c0, rt0.c2, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((('r)Z8')) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c3 THEN vt1.lid ELSE vt2.c0 END) AND ((rt0.c3 IN (rt0.c3))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON '1543727685' RIGHT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c4) NOTNULL))) ORDER BY (NOT (DATETIME(rt0.c0, rt0.c2, rt0.c1))) ASC);
SELECT * FROM vt2 RIGHT OUTER JOIN rt0 ON '1543727685' RIGHT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c4) NOTNULL))) WHERE (((((('r)Z8')) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c3 THEN vt1.lid ELSE vt2.c0 END) AND ((rt0.c3 IN (rt0.c3))))) ORDER BY (NOT (DATETIME(rt0.c0, rt0.c2, rt0.c1))) ASC;
SELECT * FROM vt1 FULL OUTER JOIN vt2 ON ((x'')GLOB((((vt2.c1))>((vt1.lid))))) WHERE ((((~ (vt2.c1)))/(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt2.c1)))/(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt2 ON ((x'')GLOB((((vt2.c1))>((vt1.lid))))));
SELECT * FROM vt1 FULL OUTER JOIN vt2 ON ((x'')GLOB((((vt2.c1))>((vt1.lid))))) WHERE ((((~ (vt2.c1)))/(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt2.c1)))/(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt2 ON ((x'')GLOB((((vt2.c1))>((vt1.lid))))));
SELECT * FROM vt1 FULL OUTER JOIN vt2 ON ((x'')GLOB((((vt2.c1))>((vt1.lid))))) WHERE ((((~ (vt2.c1)))/(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, vt2, vt1, rt0 WHERE (vt2.c0) ORDER BY HEX(((vt1.lid)>=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt0, vt2, vt1, rt0 ORDER BY HEX(((vt1.lid)>=(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, vt2, vt1, rt0 WHERE (vt2.c0) ORDER BY HEX(((vt1.lid)>=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt0, vt2, vt1, rt0 ORDER BY HEX(((vt1.lid)>=(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, vt2, vt1, rt0 WHERE (vt2.c0) ORDER BY HEX(((vt1.lid)>=(rt0.c2)));
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((((((vt2.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c1))))GLOB(CAST(x'81e8' AS TEXT)))) ORDER BY ((NULL)AND(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c1))))GLOB(CAST(x'81e8' AS TEXT)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((NULL)AND(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((((((vt2.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c1))))GLOB(CAST(x'81e8' AS TEXT)))) ORDER BY ((NULL)AND(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c1))))GLOB(CAST(x'81e8' AS TEXT)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((NULL)AND(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((((((vt2.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c1))))GLOB(CAST(x'81e8' AS TEXT)))) ORDER BY ((NULL)AND(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))) DESC;
SELECT ALL * FROM vt2, vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (((vt0.c0 IN ()))%(vt2.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c1)OR(915419599)))OR(((vt0.c0)AND(vt2.c1)))))OR((vt2.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((vt0.c0 IN ()))%(vt2.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c1)OR(915419599)))OR(((vt0.c0)AND(vt2.c1)))))OR((vt2.c1 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt2, vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (((vt0.c0 IN ()))%(vt2.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c1)OR(915419599)))OR(((vt0.c0)AND(vt2.c1)))))OR((vt2.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((vt0.c0 IN ()))%(vt2.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c1)OR(915419599)))OR(((vt0.c0)AND(vt2.c1)))))OR((vt2.c1 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt2, vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (((vt0.c0 IN ()))%(vt2.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c1)OR(915419599)))OR(((vt0.c0)AND(vt2.c1)))))OR((vt2.c1 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE (TYPEOF(json_insert(x'', vt1.c0, rt0.c2, rt0.c0, rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(json_insert(x'', vt1.c0, rt0.c2, rt0.c0, rt0.c4))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (TYPEOF(json_insert(x'', vt1.c0, rt0.c2, rt0.c0, rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(json_insert(x'', vt1.c0, rt0.c2, rt0.c0, rt0.c4))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (TYPEOF(json_insert(x'', vt1.c0, rt0.c2, rt0.c0, rt0.c4)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)), 0.5504808759247771, rt0.c1, CAST(rt0.c4 AS TEXT), rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1)>(rt0.c4)), (+ (rt0.c2)), (rt0.c3 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c4 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)), 0.5504808759247771, rt0.c1, CAST(rt0.c4 AS TEXT), rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1)>(rt0.c4)), (+ (rt0.c2)), (rt0.c3 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c4 AS REAL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)), 0.5504808759247771, rt0.c1, CAST(rt0.c4 AS TEXT), rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1)>(rt0.c4)), (+ (rt0.c2)), (rt0.c3 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c4 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)), 0.5504808759247771, rt0.c1, CAST(rt0.c4 AS TEXT), rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1)>(rt0.c4)), (+ (rt0.c2)), (rt0.c3 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c4 AS REAL))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)), 0.5504808759247771, rt0.c1, CAST(rt0.c4 AS TEXT), rt0.c1 COLLATE NOCASE)) AND ((((rt0.c1)>(rt0.c4)), (+ (rt0.c2)), (rt0.c3 IN ()), ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c4 AS REAL)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((CAST(vt0.c1 AS BLOB))AND(x'0a54')))AND(((vt0.c0)-('')))) WHERE (CAST((NOT (rt0.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c4)) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((CAST(vt0.c1 AS BLOB))AND(x'0a54')))AND(((vt0.c0)-('')))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((CAST(vt0.c1 AS BLOB))AND(x'0a54')))AND(((vt0.c0)-('')))) WHERE (CAST((NOT (rt0.c4)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c4)) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((CAST(vt0.c1 AS BLOB))AND(x'0a54')))AND(((vt0.c0)-('')))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((CAST(vt0.c1 AS BLOB))AND(x'0a54')))AND(((vt0.c0)-('')))) WHERE (CAST((NOT (rt0.c4)) AS REAL));
SELECT COUNT(*) FROM vt1 INNER JOIN vt2 ON CASE ((vt2.c2)IS NOT(rt0.c0))  WHEN ((vt2.c0) NOTNULL) THEN 0.19290470481184885 ELSE vt2.c1 END RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((vt2.c0)) AND ((0Xffffffffd7622ab6))) COLLATE NOCASE WHERE (CASE (((x'')) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))  WHEN (~ (vt1.lid)) THEN (rt0.c1 IN ()) ELSE (vt2.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (((x'')) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))  WHEN (~ (vt1.lid)) THEN (rt0.c1 IN ()) ELSE (vt2.c2 IN ()) END) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON CASE ((vt2.c2)IS NOT(rt0.c0))  WHEN ((vt2.c0) NOTNULL) THEN 0.19290470481184885 ELSE vt2.c1 END RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((vt2.c0)) AND ((0xffffffffd7622ab6))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 INNER JOIN vt2 ON CASE ((vt2.c2)IS NOT(rt0.c0))  WHEN ((vt2.c0) NOTNULL) THEN 0.19290470481184885 ELSE vt2.c1 END RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((vt2.c0)) AND ((0Xffffffffd7622ab6))) COLLATE NOCASE WHERE (CASE (((x'')) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))  WHEN (~ (vt1.lid)) THEN (rt0.c1 IN ()) ELSE (vt2.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (((x'')) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0)))  WHEN (~ (vt1.lid)) THEN (rt0.c1 IN ()) ELSE (vt2.c2 IN ()) END) IS TRUE)  as count FROM vt1 INNER JOIN vt2 ON CASE ((vt2.c2)IS NOT(rt0.c0))  WHEN ((vt2.c0) NOTNULL) THEN 0.19290470481184885 ELSE vt2.c1 END RIGHT OUTER JOIN rt0 ON (((rt0.c4)) BETWEEN ((vt2.c0)) AND ((0xffffffffd7622ab6))) COLLATE NOCASE);
SELECT * FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON CASE HEX(DISTINCT vt2.c2)  WHEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.lid) IS TRUE) THEN CAST(x'' AS INTEGER) WHEN vt1.c0 THEN ((rt0.c4) NOT NULL) ELSE (vt2.c1 IN ()) END WHERE (((CASE NULL  WHEN vt1.lid THEN vt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 END)<=(''))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (((vt2.c2) IS TRUE)) AND (((rt0.c0)GLOB(vt1.lid)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN vt1.lid THEN vt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 END)<=(''))) IS TRUE)  as count FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON CASE HEX(DISTINCT vt2.c2)  WHEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.lid) IS TRUE) THEN CAST(x'' AS INTEGER) WHEN vt1.c0 THEN ((rt0.c4) NOT NULL) ELSE (vt2.c1 IN ()) END ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (((vt2.c2) IS TRUE)) AND (((rt0.c0)GLOB(vt1.lid)))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON CASE HEX(DISTINCT vt2.c2)  WHEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.lid) IS TRUE) THEN CAST(x'' AS INTEGER) WHEN vt1.c0 THEN ((rt0.c4) NOT NULL) ELSE (vt2.c1 IN ()) END WHERE (((CASE NULL  WHEN vt1.lid THEN vt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 END)<=(''))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (((vt2.c2) IS TRUE)) AND (((rt0.c0)GLOB(vt1.lid)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN vt1.lid THEN vt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 END)<=(''))) IS TRUE)  as count FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON CASE HEX(DISTINCT vt2.c2)  WHEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.lid) IS TRUE) THEN CAST(x'' AS INTEGER) WHEN vt1.c0 THEN ((rt0.c4) NOT NULL) ELSE (vt2.c1 IN ()) END ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (((vt2.c2) IS TRUE)) AND (((rt0.c0)GLOB(vt1.lid)))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 LEFT OUTER JOIN vt2 ON CASE HEX(DISTINCT vt2.c2)  WHEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.lid) IS TRUE) THEN CAST(x'' AS INTEGER) WHEN vt1.c0 THEN ((rt0.c4) NOT NULL) ELSE (vt2.c1 IN ()) END WHERE (((CASE NULL  WHEN vt1.lid THEN vt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c1 THEN rt0.c1 END)<=(''))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (((vt2.c2) IS TRUE)) AND (((rt0.c0)GLOB(vt1.lid)))) DESC  NULLS LAST;
SELECT * FROM vt0, vt2 NATURAL JOIN vt1 WHERE ((((+ (vt2.c1)))>=(CASE vt0.c1  WHEN vt2.c2 THEN vt0.c0 ELSE vt2.c2 END))) ORDER BY (((((((((vt2.c1)AND(vt0.c0)))OR(vt2.c2)))AND(vt2.c1)))AND(vt0.c0)) IN ()) DESC  NULLS LAST, NULLIF(((vt2.c2) BETWEEN (vt0.c0) AND (vt2.c2)), ((vt0.c1) IS FALSE))  NULLS FIRST, (((((NULL IN ()))AND(((vt2.c0) NOTNULL))))AND(((vt1.lid)<>(vt1.lid))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt2.c1)))>=(CASE vt0.c1  WHEN vt2.c2 THEN vt0.c0 ELSE vt2.c2 END))) IS TRUE)  as count FROM vt0, vt2 NATURAL JOIN vt1 ORDER BY (((((((((vt2.c1)AND(vt0.c0)))OR(vt2.c2)))AND(vt2.c1)))AND(vt0.c0)) IN ()) DESC  NULLS LAST, NULLIF(((vt2.c2) BETWEEN (vt0.c0) AND (vt2.c2)), ((vt0.c1) IS FALSE))  NULLS FIRST, (((((NULL IN ()))AND(((vt2.c0) NOTNULL))))AND(((vt1.lid)<>(vt1.lid))))  NULLS FIRST);
SELECT * FROM vt0, vt2 NATURAL JOIN vt1 WHERE ((((+ (vt2.c1)))>=(CASE vt0.c1  WHEN vt2.c2 THEN vt0.c0 ELSE vt2.c2 END))) ORDER BY (((((((((vt2.c1)AND(vt0.c0)))OR(vt2.c2)))AND(vt2.c1)))AND(vt0.c0)) IN ()) DESC  NULLS LAST, NULLIF(((vt2.c2) BETWEEN (vt0.c0) AND (vt2.c2)), ((vt0.c1) IS FALSE))  NULLS FIRST, (((((NULL IN ()))AND(((vt2.c0) NOTNULL))))AND(((vt1.lid)<>(vt1.lid))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt2.c1)))>=(CASE vt0.c1  WHEN vt2.c2 THEN vt0.c0 ELSE vt2.c2 END))) IS TRUE)  as count FROM vt0, vt2 NATURAL JOIN vt1 ORDER BY (((((((((vt2.c1)AND(vt0.c0)))OR(vt2.c2)))AND(vt2.c1)))AND(vt0.c0)) IN ()) DESC  NULLS LAST, NULLIF(((vt2.c2) BETWEEN (vt0.c0) AND (vt2.c2)), ((vt0.c1) IS FALSE))  NULLS FIRST, (((((NULL IN ()))AND(((vt2.c0) NOTNULL))))AND(((vt1.lid)<>(vt1.lid))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt2, vt1 WHERE (CASE ((vt2.c2)LIKE(rt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.lid) BETWEEN (vt2.c2) AND (vt1.lid)) WHEN ((NULL) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (- (rt0.c3)) WHEN CASE x'4197'  WHEN 0.12086144760484985 THEN 0.5559601199970446 ELSE rt0.c4 END THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c2)LIKE(rt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.lid) BETWEEN (vt2.c2) AND (vt1.lid)) WHEN ((NULL) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (- (rt0.c3)) WHEN CASE x'4197'  WHEN 0.12086144760484985 THEN 0.5559601199970446 ELSE rt0.c4 END THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt2, vt1);
SELECT ALL COUNT(*) FROM rt0, vt2, vt1 WHERE (CASE ((vt2.c2)LIKE(rt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.lid) BETWEEN (vt2.c2) AND (vt1.lid)) WHEN ((NULL) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (- (rt0.c3)) WHEN CASE x'4197'  WHEN 0.12086144760484985 THEN 0.5559601199970446 ELSE rt0.c4 END THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c2)LIKE(rt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.lid) BETWEEN (vt2.c2) AND (vt1.lid)) WHEN ((NULL) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (- (rt0.c3)) WHEN CASE x'4197'  WHEN 0.12086144760484985 THEN 0.5559601199970446 ELSE rt0.c4 END THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt2, vt1);
SELECT ALL COUNT(*) FROM rt0, vt2, vt1 WHERE (CASE ((vt2.c2)LIKE(rt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.lid) BETWEEN (vt2.c2) AND (vt1.lid)) WHEN ((NULL) BETWEEN (rt0.c3) AND (rt0.c4)) THEN (- (rt0.c3)) WHEN CASE x'4197'  WHEN 0.12086144760484985 THEN 0.5559601199970446 ELSE rt0.c4 END THEN ((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)) END);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS REAL)) ISNULL) WHERE ((+ (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY '_?夅MRO1j' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS REAL)) ISNULL) ORDER BY '_?夅MRO1j' ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS REAL)) ISNULL) WHERE ((+ (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY '_?夅MRO1j' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS REAL)) ISNULL) ORDER BY '_?夅MRO1j' ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(vt1.c0 AS REAL)) ISNULL) WHERE ((+ (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY '_?夅MRO1j' ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, vt1, vt2 WHERE (rt0.c0) ORDER BY CAST((((rt0.c1))==((rt0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1, vt2 ORDER BY CAST((((rt0.c1))=((rt0.c0))) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1, vt2 WHERE (rt0.c0) ORDER BY CAST((((rt0.c1))==((rt0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, vt1, vt2 ORDER BY CAST((((rt0.c1))=((rt0.c0))) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1, vt2 WHERE (rt0.c0) ORDER BY CAST((((rt0.c1))==((rt0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)) IN (rt0.c0))) ORDER BY (- (rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)) IN (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)) IN (rt0.c0))) ORDER BY (- (rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)) IN (rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)) IN (rt0.c0))) ORDER BY (- (rt0.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN ((rt0.c1)OR(rt0.c0)) WHEN ((rt0.c0)IS(rt0.c4)) THEN NULL WHEN (((rt0.c4, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) THEN COALESCE(DISTINCT rt0.c4, x'') WHEN HEX(rt0.c4) THEN (rt0.c0 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c0)) END) ORDER BY (rt0.c4 COLLATE NOCASE IN (HEX(DISTINCT rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN ((rt0.c1)OR(rt0.c0)) WHEN ((rt0.c0)IS(rt0.c4)) THEN NULL WHEN (((rt0.c4, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) THEN COALESCE(DISTINCT rt0.c4, x'') WHEN HEX(rt0.c4) THEN (rt0.c0 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 COLLATE NOCASE IN (HEX(DISTINCT rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN ((rt0.c1)OR(rt0.c0)) WHEN ((rt0.c0)IS(rt0.c4)) THEN NULL WHEN (((rt0.c4, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) THEN COALESCE(DISTINCT rt0.c4, x'') WHEN HEX(rt0.c4) THEN (rt0.c0 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c0)) END) ORDER BY (rt0.c4 COLLATE NOCASE IN (HEX(DISTINCT rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c1)) THEN ((rt0.c1)OR(rt0.c0)) WHEN ((rt0.c0)IS(rt0.c4)) THEN NULL WHEN (((rt0.c4, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) THEN COALESCE(DISTINCT rt0.c4, x'') WHEN HEX(rt0.c4) THEN (rt0.c0 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c4 COLLATE NOCASE IN (HEX(DISTINCT rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (~ (rt0.c1)) THEN ((rt0.c1)OR(rt0.c0)) WHEN ((rt0.c0)IS(rt0.c4)) THEN NULL WHEN (((rt0.c4, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c2))) THEN COALESCE(DISTINCT rt0.c4, x'') WHEN HEX(rt0.c4) THEN (rt0.c0 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c0)) END) ORDER BY (rt0.c4 COLLATE NOCASE IN (HEX(DISTINCT rt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0))) IN ()));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((('\1')>(0xffffffffd3b655aa)))OR(((vt0.c1) BETWEEN (0.34146347002892885) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('\1')>(0Xffffffffd3b655aa)))OR(((vt0.c1) BETWEEN (0.34146347002892885) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((('\1')>(0xffffffffd3b655aa)))OR(((vt0.c1) BETWEEN (0.34146347002892885) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('\1')>(0Xffffffffd3b655aa)))OR(((vt0.c1) BETWEEN (0.34146347002892885) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((('\1')>(0xffffffffd3b655aa)))OR(((vt0.c1) BETWEEN (0.34146347002892885) AND (vt1.c0)))));
SELECT * FROM vt1, vt0, vt2 NOT INDEXED, rt0 WHERE (CASE WHEN ABS(DISTINCT vt0.c1) THEN (vt2.c2 IN ()) END) ORDER BY json_type(((((rt0.c0)OR(rt0.c0)))OR(vt2.c2))) ASC, (((vt1.c0)) NOT BETWEEN ((0x675f22ce)) AND (('-1710494260'))), CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.5463981386455086) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(DISTINCT vt0.c1) THEN (vt2.c2 IN ()) END) IS TRUE)  as count FROM vt1, vt0, vt2, rt0 ORDER BY json_type(((((rt0.c0)OR(rt0.c0)))OR(vt2.c2))) ASC, (((vt1.c0)) NOT BETWEEN ((0x675f22ce)) AND (('-1710494260'))), CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.5463981386455086) AS REAL) DESC);
SELECT * FROM vt1, vt0, vt2 NOT INDEXED, rt0 WHERE (CASE WHEN ABS(DISTINCT vt0.c1) THEN (vt2.c2 IN ()) END) ORDER BY json_type(((((rt0.c0)OR(rt0.c0)))OR(vt2.c2))) ASC, (((vt1.c0)) NOT BETWEEN ((0x675f22ce)) AND (('-1710494260'))), CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.5463981386455086) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(DISTINCT vt0.c1) THEN (vt2.c2 IN ()) END) IS TRUE)  as count FROM vt1, vt0, vt2, rt0 ORDER BY json_type(((((rt0.c0)OR(rt0.c0)))OR(vt2.c2))) ASC, (((vt1.c0)) NOT BETWEEN ((0x675f22ce)) AND (('-1710494260'))), CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.5463981386455086) AS REAL) DESC);
SELECT * FROM vt1, vt0, vt2 NOT INDEXED, rt0 WHERE (CASE WHEN ABS(DISTINCT vt0.c1) THEN (vt2.c2 IN ()) END) ORDER BY json_type(((((rt0.c0)OR(rt0.c0)))OR(vt2.c2))) ASC, (((vt1.c0)) NOT BETWEEN ((0x675f22ce)) AND (('-1710494260'))), CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.5463981386455086) AS REAL) DESC;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON IFNULL((vt1.c0 IN ()), ((rt0.c4)LIKE(vt1.lid))) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB))==(((rt0.c2)+(vt0.c1)))) WHERE (((((vt0.c1, 0xf8d3ef8, rt0.c1)) BETWEEN ((vt1.lid, -296331003, vt1.c0)) AND ((vt1.c0, vt0.c0, rt0.c3))) IN (((vt0.c0) NOTNULL), ((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, 0Xf8d3ef8, rt0.c1)) BETWEEN ((vt1.lid, -296331003, vt1.c0)) AND ((vt1.c0, vt0.c0, rt0.c3))) IN (((vt0.c0) NOTNULL), ((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON IFNULL((vt1.c0 IN ()), ((rt0.c4)LIKE(vt1.lid))) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB))==(((rt0.c2)+(vt0.c1)))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON IFNULL((vt1.c0 IN ()), ((rt0.c4)LIKE(vt1.lid))) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB))==(((rt0.c2)+(vt0.c1)))) WHERE (((((vt0.c1, 0xf8d3ef8, rt0.c1)) BETWEEN ((vt1.lid, -296331003, vt1.c0)) AND ((vt1.c0, vt0.c0, rt0.c3))) IN (((vt0.c0) NOTNULL), ((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, 0Xf8d3ef8, rt0.c1)) BETWEEN ((vt1.lid, -296331003, vt1.c0)) AND ((vt1.c0, vt0.c0, rt0.c3))) IN (((vt0.c0) NOTNULL), ((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON IFNULL((vt1.c0 IN ()), ((rt0.c4)LIKE(vt1.lid))) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB))==(((rt0.c2)+(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST('-1459662286' AS BLOB) IN (((((rt0.c4)OR(vt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-1459662286' AS BLOB) IN (((((rt0.c4)OR(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST('-1459662286' AS BLOB) IN (((((rt0.c4)OR(vt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST('-1459662286' AS BLOB) IN (((((rt0.c4)OR(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST('-1459662286' AS BLOB) IN (((((rt0.c4)OR(vt0.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt0, vt2 WHERE ((((vt2.c2)||(vt2.c2)) IN ((((vt2.c2))<((vt0.c0)))))) ORDER BY vt2.c2;
SELECT SUM(count) FROM (SELECT (((((vt2.c2)||(vt2.c2)) IN ((((vt2.c2))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY vt2.c2);
SELECT COUNT(*) FROM vt0, vt2 WHERE ((((vt2.c2)||(vt2.c2)) IN ((((vt2.c2))<((vt0.c0)))))) ORDER BY vt2.c2;
SELECT SUM(count) FROM (SELECT (((((vt2.c2)||(vt2.c2)) IN ((((vt2.c2))<((vt0.c0)))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY vt2.c2);
SELECT COUNT(*) FROM vt0, vt2 WHERE ((((vt2.c2)||(vt2.c2)) IN ((((vt2.c2))<((vt0.c0)))))) ORDER BY vt2.c2;
SELECT ALL * FROM vt1 WHERE (0.6258277403017645) ORDER BY CAST(SQLITE_SOURCE_ID() AS NUMERIC), CAST(CASE vt1.lid  WHEN 0.9120522115042003 THEN vt1.c0 END AS NUMERIC) ASC  NULLS LAST, (((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)), (~ (vt1.c0)), IFNULL(vt1.lid, vt1.lid)))<((LIKELIHOOD(vt1.lid, 0.8458308360187802), ((vt1.c0)+(vt1.lid)), (+ (vt1.lid))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6258277403017645) IS TRUE)  as count FROM vt1 ORDER BY CAST(SQLITE_SOURCE_ID() AS NUMERIC), CAST(CASE vt1.lid  WHEN 0.9120522115042003 THEN vt1.c0 END AS NUMERIC) ASC  NULLS LAST, (((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)), (~ (vt1.c0)), IFNULL(vt1.lid, vt1.lid)))<((LIKELIHOOD(vt1.lid, 0.8458308360187802), ((vt1.c0)+(vt1.lid)), (+ (vt1.lid))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (0.6258277403017645) ORDER BY CAST(SQLITE_SOURCE_ID() AS NUMERIC), CAST(CASE vt1.lid  WHEN 0.9120522115042003 THEN vt1.c0 END AS NUMERIC) ASC  NULLS LAST, (((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)), (~ (vt1.c0)), IFNULL(vt1.lid, vt1.lid)))<((LIKELIHOOD(vt1.lid, 0.8458308360187802), ((vt1.c0)+(vt1.lid)), (+ (vt1.lid))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.6258277403017645) IS TRUE)  as count FROM vt1 ORDER BY CAST(SQLITE_SOURCE_ID() AS NUMERIC), CAST(CASE vt1.lid  WHEN 0.9120522115042003 THEN vt1.c0 END AS NUMERIC) ASC  NULLS LAST, (((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)), (~ (vt1.c0)), IFNULL(vt1.lid, vt1.lid)))<((LIKELIHOOD(vt1.lid, 0.8458308360187802), ((vt1.c0)+(vt1.lid)), (+ (vt1.lid))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (0.6258277403017645) ORDER BY CAST(SQLITE_SOURCE_ID() AS NUMERIC), CAST(CASE vt1.lid  WHEN 0.9120522115042003 THEN vt1.c0 END AS NUMERIC) ASC  NULLS LAST, (((((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)), (~ (vt1.c0)), IFNULL(vt1.lid, vt1.lid)))<((LIKELIHOOD(vt1.lid, 0.8458308360187802), ((vt1.c0)+(vt1.lid)), (+ (vt1.lid))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt2 RIGHT OUTER JOIN vt1 ON ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE WHERE (((((rt0.c4 COLLATE BINARY)OR(vt2.c0 COLLATE NOCASE)))AND(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4 COLLATE BINARY)OR(vt2.c0 COLLATE NOCASE)))AND(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, vt2 RIGHT OUTER JOIN vt1 ON ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt2 RIGHT OUTER JOIN vt1 ON ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE WHERE (((((rt0.c4 COLLATE BINARY)OR(vt2.c0 COLLATE NOCASE)))AND(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4 COLLATE BINARY)OR(vt2.c0 COLLATE NOCASE)))AND(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, vt2 RIGHT OUTER JOIN vt1 ON ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt2 RIGHT OUTER JOIN vt1 ON ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE WHERE (((((rt0.c4 COLLATE BINARY)OR(vt2.c0 COLLATE NOCASE)))AND(TOTAL_CHANGES())));
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c2) ISNULL))) AND ((((vt0.c0) BETWEEN (1.710412227E9) AND (rt0.c4)))))) ORDER BY CAST((rt0.c0 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((rt0.c2) ISNULL))) AND ((((vt0.c0) BETWEEN (1.710412227E9) AND (rt0.c4)))))) IS TRUE)  as count FROM vt2, rt0, vt0 ORDER BY CAST((rt0.c0 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c2) ISNULL))) AND ((((vt0.c0) BETWEEN (1.710412227E9) AND (rt0.c4)))))) ORDER BY CAST((rt0.c0 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((rt0.c2) ISNULL))) AND ((((vt0.c0) BETWEEN (1.710412227E9) AND (rt0.c4)))))) IS TRUE)  as count FROM vt2, rt0, vt0 ORDER BY CAST((rt0.c0 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((rt0.c2) ISNULL))) AND ((((vt0.c0) BETWEEN (1.710412227E9) AND (rt0.c4)))))) ORDER BY CAST((rt0.c0 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM vt2 WHERE (x'') ORDER BY (vt2.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2 ORDER BY (vt2.c1 IN ())  NULLS FIRST);
SELECT ALL * FROM vt2 WHERE (x'') ORDER BY (vt2.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt2 ORDER BY (vt2.c1 IN ())  NULLS FIRST);
SELECT ALL * FROM vt2 WHERE (x'') ORDER BY (vt2.c1 IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN (0X3ed32309))) ORDER BY PRINTF(vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (0X3ed32309))) IS TRUE)  as count FROM vt0 ORDER BY PRINTF(vt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN (0X3ed32309))) ORDER BY PRINTF(vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (0X3ed32309))) IS TRUE)  as count FROM vt0 ORDER BY PRINTF(vt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN (0X3ed32309))) ORDER BY PRINTF(vt0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3)<>(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3)!=(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3)<>(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3)!=(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3)<>(rt0.c4)))));
SELECT ALL * FROM rt0, vt2 WHERE ((((rt0.c4, vt2.c2, rt0.c2)) BETWEEN ((vt2.c1 COLLATE NOCASE, CASE WHEN vt2.c1 THEN rt0.c4 ELSE vt2.c1 END, (('<*') IS TRUE))) AND (((vt2.c1 IN (rt0.c1, rt0.c1)), (((rt0.c1))=((vt2.c1))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))))) ORDER BY LIKELIHOOD(rt0.c4 COLLATE RTRIM, 0.32461208965292565)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4, vt2.c2, rt0.c2)) BETWEEN ((vt2.c1 COLLATE NOCASE, CASE WHEN vt2.c1 THEN rt0.c4 ELSE vt2.c1 END, (('<*') IS TRUE))) AND (((vt2.c1 IN (rt0.c1, rt0.c1)), (((rt0.c1))==((vt2.c1))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt2 ORDER BY LIKELIHOOD(rt0.c4 COLLATE RTRIM, 0.32461208965292565)  NULLS LAST);
SELECT ALL * FROM rt0, vt2 WHERE ((((rt0.c4, vt2.c2, rt0.c2)) BETWEEN ((vt2.c1 COLLATE NOCASE, CASE WHEN vt2.c1 THEN rt0.c4 ELSE vt2.c1 END, (('<*') IS TRUE))) AND (((vt2.c1 IN (rt0.c1, rt0.c1)), (((rt0.c1))=((vt2.c1))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))))) ORDER BY LIKELIHOOD(rt0.c4 COLLATE RTRIM, 0.32461208965292565)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4, vt2.c2, rt0.c2)) BETWEEN ((vt2.c1 COLLATE NOCASE, CASE WHEN vt2.c1 THEN rt0.c4 ELSE vt2.c1 END, (('<*') IS TRUE))) AND (((vt2.c1 IN (rt0.c1, rt0.c1)), (((rt0.c1))==((vt2.c1))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt2 ORDER BY LIKELIHOOD(rt0.c4 COLLATE RTRIM, 0.32461208965292565)  NULLS LAST);
SELECT ALL * FROM rt0, vt2 WHERE ((((rt0.c4, vt2.c2, rt0.c2)) BETWEEN ((vt2.c1 COLLATE NOCASE, CASE WHEN vt2.c1 THEN rt0.c4 ELSE vt2.c1 END, (('<*') IS TRUE))) AND (((vt2.c1 IN (rt0.c1, rt0.c1)), (((rt0.c1))=((vt2.c1))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))))) ORDER BY LIKELIHOOD(rt0.c4 COLLATE RTRIM, 0.32461208965292565)  NULLS LAST;
SELECT ALL * FROM vt1, vt0, vt2 WHERE (((((((vt2.c2) IS TRUE))OR('')))OR(((vt2.c1)!=(vt2.c0))))) ORDER BY (~ (((vt2.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c2) IS TRUE))OR('')))OR(((vt2.c1)!=(vt2.c0))))) IS TRUE)  as count FROM vt1, vt0, vt2 ORDER BY (~ (((vt2.c0) IS FALSE))));
SELECT ALL * FROM vt1, vt0, vt2 WHERE (((((((vt2.c2) IS TRUE))OR('')))OR(((vt2.c1)!=(vt2.c0))))) ORDER BY (~ (((vt2.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c2) IS TRUE))OR('')))OR(((vt2.c1)!=(vt2.c0))))) IS TRUE)  as count FROM vt1, vt0, vt2 ORDER BY (~ (((vt2.c0) IS FALSE))));
SELECT ALL * FROM vt1, vt0, vt2 WHERE (((((((vt2.c2) IS TRUE))OR('')))OR(((vt2.c1)!=(vt2.c0))))) ORDER BY (~ (((vt2.c0) IS FALSE)));
SELECT * FROM vt2, vt1 WHERE ((((vt2.c2, vt1.lid, x'')) NOT BETWEEN (((~ (vt2.c2)), ((vt1.c0)<=(vt1.lid)), CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END)) AND (((vt2.c0 IN ()), ((vt1.lid) IS TRUE), ((vt1.c0) BETWEEN (vt2.c2) AND (NULL)))))) ORDER BY CASE WHEN (vt2.c0 IN (vt1.lid)) THEN ABS(NULL) WHEN (('1710412227')=(vt2.c1)) THEN CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END WHEN LIKELY(DISTINCT vt2.c0) THEN ((((vt2.c1)OR(vt2.c0)))AND(vt2.c0)) ELSE ((vt2.c1) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c2, vt1.lid, x'')) NOT BETWEEN (((~ (vt2.c2)), ((vt1.c0)<=(vt1.lid)), CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END)) AND (((vt2.c0 IN ()), ((vt1.lid) IS TRUE), ((vt1.c0) BETWEEN (vt2.c2) AND (NULL)))))) IS TRUE)  as count FROM vt2, vt1 ORDER BY CASE WHEN (vt2.c0 IN (vt1.lid)) THEN ABS(NULL) WHEN (('1710412227')==(vt2.c1)) THEN CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END WHEN LIKELY(DISTINCT vt2.c0) THEN ((((vt2.c1)OR(vt2.c0)))AND(vt2.c0)) ELSE ((vt2.c1) IS TRUE) END);
SELECT * FROM vt2, vt1 WHERE ((((vt2.c2, vt1.lid, x'')) NOT BETWEEN (((~ (vt2.c2)), ((vt1.c0)<=(vt1.lid)), CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END)) AND (((vt2.c0 IN ()), ((vt1.lid) IS TRUE), ((vt1.c0) BETWEEN (vt2.c2) AND (NULL)))))) ORDER BY CASE WHEN (vt2.c0 IN (vt1.lid)) THEN ABS(NULL) WHEN (('1710412227')=(vt2.c1)) THEN CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END WHEN LIKELY(DISTINCT vt2.c0) THEN ((((vt2.c1)OR(vt2.c0)))AND(vt2.c0)) ELSE ((vt2.c1) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c2, vt1.lid, x'')) NOT BETWEEN (((~ (vt2.c2)), ((vt1.c0)<=(vt1.lid)), CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END)) AND (((vt2.c0 IN ()), ((vt1.lid) IS TRUE), ((vt1.c0) BETWEEN (vt2.c2) AND (NULL)))))) IS TRUE)  as count FROM vt2, vt1 ORDER BY CASE WHEN (vt2.c0 IN (vt1.lid)) THEN ABS(NULL) WHEN (('1710412227')==(vt2.c1)) THEN CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END WHEN LIKELY(DISTINCT vt2.c0) THEN ((((vt2.c1)OR(vt2.c0)))AND(vt2.c0)) ELSE ((vt2.c1) IS TRUE) END);
SELECT * FROM vt2, vt1 WHERE ((((vt2.c2, vt1.lid, x'')) NOT BETWEEN (((~ (vt2.c2)), ((vt1.c0)<=(vt1.lid)), CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END)) AND (((vt2.c0 IN ()), ((vt1.lid) IS TRUE), ((vt1.c0) BETWEEN (vt2.c2) AND (NULL)))))) ORDER BY CASE WHEN (vt2.c0 IN (vt1.lid)) THEN ABS(NULL) WHEN (('1710412227')=(vt2.c1)) THEN CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 END WHEN LIKELY(DISTINCT vt2.c0) THEN ((((vt2.c1)OR(vt2.c0)))AND(vt2.c0)) ELSE ((vt2.c1) IS TRUE) END;
SELECT COUNT(*) FROM vt1, vt2 WHERE (((IFNULL(DISTINCT vt2.c2, vt1.lid)) NOT BETWEEN (CASE WHEN vt2.c2 THEN vt2.c1 END) AND (vt2.c0 COLLATE RTRIM))) ORDER BY ((load_extension(vt2.c0))*(((vt2.c0)%('1672549657')))), vt2.c1 DESC  NULLS FIRST, ((CAST(vt2.c2 AS NUMERIC)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt2.c2, vt1.lid)) NOT BETWEEN (CASE WHEN vt2.c2 THEN vt2.c1 END) AND (vt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt2 ORDER BY ((load_extension(vt2.c0))*(((vt2.c0)%('1672549657')))), vt2.c1 DESC  NULLS FIRST, ((CAST(vt2.c2 AS NUMERIC)) IS FALSE) ASC);
SELECT COUNT(*) FROM vt1, vt2 WHERE (((IFNULL(DISTINCT vt2.c2, vt1.lid)) NOT BETWEEN (CASE WHEN vt2.c2 THEN vt2.c1 END) AND (vt2.c0 COLLATE RTRIM))) ORDER BY ((load_extension(vt2.c0))*(((vt2.c0)%('1672549657')))), vt2.c1 DESC  NULLS FIRST, ((CAST(vt2.c2 AS NUMERIC)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt2.c2, vt1.lid)) NOT BETWEEN (CASE WHEN vt2.c2 THEN vt2.c1 END) AND (vt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt2 ORDER BY ((load_extension(vt2.c0))*(((vt2.c0)%('1672549657')))), vt2.c1 DESC  NULLS FIRST, ((CAST(vt2.c2 AS NUMERIC)) IS FALSE) ASC);
SELECT COUNT(*) FROM vt1, vt2 WHERE (((IFNULL(DISTINCT vt2.c2, vt1.lid)) NOT BETWEEN (CASE WHEN vt2.c2 THEN vt2.c1 END) AND (vt2.c0 COLLATE RTRIM))) ORDER BY ((load_extension(vt2.c0))*(((vt2.c0)%('1672549657')))), vt2.c1 DESC  NULLS FIRST, ((CAST(vt2.c2 AS NUMERIC)) IS FALSE) ASC;
SELECT * FROM rt0, vt0, vt2, vt1 WHERE (((((rt0.c2) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, vt2, vt1);
SELECT * FROM rt0, vt0, vt2, vt1 WHERE (((((rt0.c2) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, vt2, vt1);
SELECT * FROM rt0, vt0, vt2, vt1 WHERE (((((rt0.c2) NOTNULL)) NOT NULL));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((LIKELY(rt0.c0) IN (((rt0.c4)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((LIKELY(rt0.c0) IN (((rt0.c4)+(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((LIKELY(rt0.c0) IN (((rt0.c4)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((LIKELY(rt0.c0) IN (((rt0.c4)+(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((LIKELY(rt0.c0) IN (((rt0.c4)+(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt1, vt2, vt0, rt0 WHERE (CASE vt2.c1 COLLATE BINARY  WHEN NULL THEN '-1512123224' ELSE (vt0.c0 IN (vt2.c0)) END) ORDER BY (((NULLIF(DISTINCT rt0.c1, rt0.c4)))>((CAST('K挰A뀨''M6.4' AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt2.c1 COLLATE BINARY  WHEN NULL THEN '-1512123224' ELSE (vt0.c0 IN (vt2.c0)) END) IS TRUE)  as count FROM vt1, vt2, vt0, rt0 ORDER BY (((NULLIF(DISTINCT rt0.c1, rt0.c4)))>((CAST('K挰A뀨''M6.4' AS BLOB))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt2, vt0, rt0 WHERE (CASE vt2.c1 COLLATE BINARY  WHEN NULL THEN '-1512123224' ELSE (vt0.c0 IN (vt2.c0)) END) ORDER BY (((NULLIF(DISTINCT rt0.c1, rt0.c4)))>((CAST('K挰A뀨''M6.4' AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt2.c1 COLLATE BINARY  WHEN NULL THEN '-1512123224' ELSE (vt0.c0 IN (vt2.c0)) END) IS TRUE)  as count FROM vt1, vt2, vt0, rt0 ORDER BY (((NULLIF(DISTINCT rt0.c1, rt0.c4)))>((CAST('K挰A뀨''M6.4' AS BLOB))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt2, vt0, rt0 WHERE (CASE vt2.c1 COLLATE BINARY  WHEN NULL THEN '-1512123224' ELSE (vt0.c0 IN (vt2.c0)) END) ORDER BY (((NULLIF(DISTINCT rt0.c1, rt0.c4)))>((CAST('K挰A뀨''M6.4' AS BLOB))))  NULLS FIRST;
SELECT ALL * FROM vt2 WHERE (((vt2.c0)!=(vt2.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0)<>(vt2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((vt2.c0)!=(vt2.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0)<>(vt2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((vt2.c0)!=(vt2.c2)) COLLATE RTRIM);
SELECT ALL * FROM vt2, vt0, rt0 WHERE (CASE x''  WHEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c2)) END) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT ALL * FROM vt2, vt0, rt0 WHERE (CASE x''  WHEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c2)) END) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT ALL * FROM vt2, vt0, rt0 WHERE (CASE x''  WHEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c2)) END);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON RTRIM(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END) FULL OUTER JOIN vt2 ON IFNULL(DISTINCT CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt2.c1 WHEN vt2.c1 THEN vt0.c1 WHEN vt2.c0 THEN vt2.c2 WHEN rt0.c1 THEN vt1.lid END, ((rt0.c2)-(vt0.c0))) FULL OUTER JOIN vt0 ON ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))<=((((vt2.c1, vt0.c1, rt0.c1)) BETWEEN ((vt0.c0, NULL, vt1.c0)) AND ((rt0.c3, rt0.c3, vt2.c0))))) WHERE (x'') ORDER BY (~ (rt0.c3 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON RTRIM(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END) FULL OUTER JOIN vt2 ON IFNULL(DISTINCT CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt2.c1 WHEN vt2.c1 THEN vt0.c1 WHEN vt2.c0 THEN vt2.c2 WHEN rt0.c1 THEN vt1.lid END, ((rt0.c2)-(vt0.c0))) FULL OUTER JOIN vt0 ON ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))<=((((vt2.c1, vt0.c1, rt0.c1)) BETWEEN ((vt0.c0, NULL, vt1.c0)) AND ((rt0.c3, rt0.c3, vt2.c0))))) ORDER BY (~ (rt0.c3 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON RTRIM(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END) FULL OUTER JOIN vt2 ON IFNULL(DISTINCT CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt2.c1 WHEN vt2.c1 THEN vt0.c1 WHEN vt2.c0 THEN vt2.c2 WHEN rt0.c1 THEN vt1.lid END, ((rt0.c2)-(vt0.c0))) FULL OUTER JOIN vt0 ON ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))<=((((vt2.c1, vt0.c1, rt0.c1)) BETWEEN ((vt0.c0, NULL, vt1.c0)) AND ((rt0.c3, rt0.c3, vt2.c0))))) WHERE (x'') ORDER BY (~ (rt0.c3 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON RTRIM(CASE vt1.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END) FULL OUTER JOIN vt2 ON IFNULL(DISTINCT CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt2.c1 WHEN vt2.c1 THEN vt0.c1 WHEN vt2.c0 THEN vt2.c2 WHEN rt0.c1 THEN vt1.lid END, ((rt0.c2)-(vt0.c0))) FULL OUTER JOIN vt0 ON ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))<=((((vt2.c1, vt0.c1, rt0.c1)) BETWEEN ((vt0.c0, NULL, vt1.c0)) AND ((rt0.c3, rt0.c3, vt2.c0))))) ORDER BY (~ (rt0.c3 COLLATE NOCASE))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(vt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(vt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1)) NOTNULL));
SELECT * FROM vt2, rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt2, rt0, vt0, vt1);
SELECT * FROM vt2, rt0, vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt2, rt0, vt0, vt1);
SELECT * FROM vt2, rt0, vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c2) NOT NULL))IS NOT(((rt0.c1) IS TRUE)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND (((((vt1.c0, vt0.c1, rt0.c0, vt1.lid, x'd5d7', rt0.c4, vt0.c1))>((rt0.c2, rt0.c0, x'', rt0.c4, vt0.c1, vt0.c0, rt0.c1)))))) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(vt0.c0)) NOT NULL), (((rt0.c1)||(vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))IS NOT(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND (((((vt1.c0, vt0.c1, rt0.c0, vt1.lid, x'd5d7', rt0.c4, vt0.c1))>((rt0.c2, rt0.c0, x'', rt0.c4, vt0.c1, vt0.c0, rt0.c1)))))) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(vt0.c0)) NOT NULL), (((rt0.c1)||(vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c2) NOT NULL))IS NOT(((rt0.c1) IS TRUE)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND (((((vt1.c0, vt0.c1, rt0.c0, vt1.lid, x'd5d7', rt0.c4, vt0.c1))>((rt0.c2, rt0.c0, x'', rt0.c4, vt0.c1, vt0.c0, rt0.c1)))))) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(vt0.c0)) NOT NULL), (((rt0.c1)||(vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))IS NOT(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND (((((vt1.c0, vt0.c1, rt0.c0, vt1.lid, x'd5d7', rt0.c4, vt0.c1))>((rt0.c2, rt0.c0, x'', rt0.c4, vt0.c1, vt0.c0, rt0.c1)))))) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(vt0.c0)) NOT NULL), (((rt0.c1)||(vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c2) NOT NULL))IS NOT(((rt0.c1) IS TRUE)))) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND (((((vt1.c0, vt0.c1, rt0.c0, vt1.lid, x'd5d7', rt0.c4, vt0.c1))>((rt0.c2, rt0.c0, x'', rt0.c4, vt0.c1, vt0.c0, rt0.c1)))))) ASC  NULLS FIRST, ((SQLITE_COMPILEOPTION_USED(vt0.c0)) NOT NULL), (((rt0.c1)||(vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('-1441979017')AND((- (rt0.c4)))))AND((((rt0.c3, '1121135083', rt0.c3)) BETWEEN ((rt0.c3, NULL, rt0.c2)) AND ((rt0.c1, x'', rt0.c2)))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1441979017')AND((- (rt0.c4)))))AND((((rt0.c3, '1121135083', rt0.c3)) BETWEEN ((rt0.c3, NULL, rt0.c2)) AND ((rt0.c1, x'', rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('-1441979017')AND((- (rt0.c4)))))AND((((rt0.c3, '1121135083', rt0.c3)) BETWEEN ((rt0.c3, NULL, rt0.c2)) AND ((rt0.c1, x'', rt0.c2)))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('-1441979017')AND((- (rt0.c4)))))AND((((rt0.c3, '1121135083', rt0.c3)) BETWEEN ((rt0.c3, NULL, rt0.c2)) AND ((rt0.c1, x'', rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('-1441979017')AND((- (rt0.c4)))))AND((((rt0.c3, '1121135083', rt0.c3)) BETWEEN ((rt0.c3, NULL, rt0.c2)) AND ((rt0.c1, x'', rt0.c2)))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON ((vt2.c0)-(vt2.c1)) COLLATE NOCASE WHERE (((IFNULL(rt0.c0, rt0.c3))*(((vt1.lid)&(vt2.c1))))) ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY ASC, (((((rt0.c3))=(('-1504175464')))) NOT BETWEEN (IFNULL(DISTINCT vt1.c0, vt2.c1)) AND (CASE rt0.c3  WHEN vt0.c1 THEN '-1441979017' WHEN rt0.c3 THEN NULL WHEN NULL THEN x'' END)) ASC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c0, rt0.c3))*(((vt1.lid)&(vt2.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON ((vt2.c0)-(vt2.c1)) COLLATE NOCASE ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY ASC, (((((rt0.c3))==(('-1504175464')))) NOT BETWEEN (IFNULL(DISTINCT vt1.c0, vt2.c1)) AND (CASE rt0.c3  WHEN vt0.c1 THEN '-1441979017' WHEN rt0.c3 THEN NULL WHEN NULL THEN x'' END)) ASC);
SELECT ALL * FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON ((vt2.c0)-(vt2.c1)) COLLATE NOCASE WHERE (((IFNULL(rt0.c0, rt0.c3))*(((vt1.lid)&(vt2.c1))))) ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY ASC, (((((rt0.c3))=(('-1504175464')))) NOT BETWEEN (IFNULL(DISTINCT vt1.c0, vt2.c1)) AND (CASE rt0.c3  WHEN vt0.c1 THEN '-1441979017' WHEN rt0.c3 THEN NULL WHEN NULL THEN x'' END)) ASC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c0, rt0.c3))*(((vt1.lid)&(vt2.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON ((vt2.c0)-(vt2.c1)) COLLATE NOCASE ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY ASC, (((((rt0.c3))==(('-1504175464')))) NOT BETWEEN (IFNULL(DISTINCT vt1.c0, vt2.c1)) AND (CASE rt0.c3  WHEN vt0.c1 THEN '-1441979017' WHEN rt0.c3 THEN NULL WHEN NULL THEN x'' END)) ASC);
SELECT ALL * FROM vt0, rt0, vt1 FULL OUTER JOIN vt2 ON ((vt2.c0)-(vt2.c1)) COLLATE NOCASE WHERE (((IFNULL(rt0.c0, rt0.c3))*(((vt1.lid)&(vt2.c1))))) ORDER BY ((rt0.c0) NOTNULL) COLLATE BINARY ASC, (((((rt0.c3))=(('-1504175464')))) NOT BETWEEN (IFNULL(DISTINCT vt1.c0, vt2.c1)) AND (CASE rt0.c3  WHEN vt0.c1 THEN '-1441979017' WHEN rt0.c3 THEN NULL WHEN NULL THEN x'' END)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)IS(CASE WHEN vt0.c0 THEN 'O' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)IS(CASE WHEN vt0.c0 THEN 'O' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)IS(CASE WHEN vt0.c0 THEN 'O' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)IS(CASE WHEN vt0.c0 THEN 'O' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)IS(CASE WHEN vt0.c0 THEN 'O' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE COLLATE BINARY) ORDER BY (((((rt0.c1))>=((rt0.c2))))-(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))>=((rt0.c2))))-(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE COLLATE BINARY) ORDER BY (((((rt0.c1))>=((rt0.c2))))-(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))>=((rt0.c2))))-(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE COLLATE BINARY) ORDER BY (((((rt0.c1))>=((rt0.c2))))-(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOTNULL)) NOT NULL) WHERE (((((-385428543)GLOB('')))<=((((rt0.c3, rt0.c1, rt0.c4)) BETWEEN (('-559641332', vt1.lid, vt0.c1)) AND ((rt0.c1, vt0.c0, vt1.c0)))))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((-385428543)GLOB('')))<=((((rt0.c3, rt0.c1, rt0.c4)) BETWEEN (('-559641332', vt1.lid, vt0.c1)) AND ((rt0.c1, vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOTNULL)) NOT NULL) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOTNULL)) NOT NULL) WHERE (((((-385428543)GLOB('')))<=((((rt0.c3, rt0.c1, rt0.c4)) BETWEEN (('-559641332', vt1.lid, vt0.c1)) AND ((rt0.c1, vt0.c0, vt1.c0)))))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((-385428543)GLOB('')))<=((((rt0.c3, rt0.c1, rt0.c4)) BETWEEN (('-559641332', vt1.lid, vt0.c1)) AND ((rt0.c1, vt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOTNULL)) NOT NULL) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOTNULL)) NOT NULL) WHERE (((((-385428543)GLOB('')))<=((((rt0.c3, rt0.c1, rt0.c4)) BETWEEN (('-559641332', vt1.lid, vt0.c1)) AND ((rt0.c1, vt0.c0, vt1.c0)))))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 WHERE (CAST(0xfffffffff6b160e5 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0Xfffffffff6b160e5 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, vt2);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 WHERE (CAST(0xfffffffff6b160e5 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0Xfffffffff6b160e5 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, vt2);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 WHERE (CAST(0xfffffffff6b160e5 AS INTEGER));
SELECT ALL * FROM rt0, vt1, vt2, vt0 WHERE ((((CAST(vt2.c2 AS TEXT), vt1.c0, ((rt0.c4) NOTNULL)))==((SQLITE_SOURCE_ID(), ((x'')AND(vt2.c2)), (vt2.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt2.c2 AS TEXT), vt1.c0, ((rt0.c4) NOTNULL)))==((SQLITE_SOURCE_ID(), ((x'')AND(vt2.c2)), (vt2.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt1, vt2, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt1, vt2, vt0 WHERE ((((CAST(vt2.c2 AS TEXT), vt1.c0, ((rt0.c4) NOTNULL)))==((SQLITE_SOURCE_ID(), ((x'')AND(vt2.c2)), (vt2.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt2.c2 AS TEXT), vt1.c0, ((rt0.c4) NOTNULL)))==((SQLITE_SOURCE_ID(), ((x'')AND(vt2.c2)), (vt2.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt1, vt2, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt1, vt2, vt0 WHERE ((((CAST(vt2.c2 AS TEXT), vt1.c0, ((rt0.c4) NOTNULL)))==((SQLITE_SOURCE_ID(), ((x'')AND(vt2.c2)), (vt2.c1 IN ())))));
SELECT ALL COUNT(*) FROM vt2 WHERE (((-1865739365) BETWEEN (((0.6862897386719874) BETWEEN (NULL) AND (vt2.c2))) AND (QUOTE('-1996255617'))));
SELECT SUM(count) FROM (SELECT ALL ((((-1865739365) BETWEEN (((0.6862897386719874) BETWEEN (NULL) AND (vt2.c2))) AND (QUOTE('-1996255617')))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((-1865739365) BETWEEN (((0.6862897386719874) BETWEEN (NULL) AND (vt2.c2))) AND (QUOTE('-1996255617'))));
SELECT SUM(count) FROM (SELECT ALL ((((-1865739365) BETWEEN (((0.6862897386719874) BETWEEN (NULL) AND (vt2.c2))) AND (QUOTE('-1996255617')))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((-1865739365) BETWEEN (((0.6862897386719874) BETWEEN (NULL) AND (vt2.c2))) AND (QUOTE('-1996255617'))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c1) NOTNULL)))) ORDER BY (((((vt1.lid, vt1.c0, vt0.c0)) BETWEEN ((vt1.lid, vt1.c0, NULL)) AND ((vt1.c0, NULL, vt1.c0))))<>(CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY (((((vt1.lid, vt1.c0, vt0.c0)) BETWEEN ((vt1.lid, vt1.c0, NULL)) AND ((vt1.c0, NULL, vt1.c0))))<>(CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c1) NOTNULL)))) ORDER BY (((((vt1.lid, vt1.c0, vt0.c0)) BETWEEN ((vt1.lid, vt1.c0, NULL)) AND ((vt1.c0, NULL, vt1.c0))))<>(CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY (((((vt1.lid, vt1.c0, vt0.c0)) BETWEEN ((vt1.lid, vt1.c0, NULL)) AND ((vt1.c0, NULL, vt1.c0))))<>(CAST(vt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c1) NOTNULL)))) ORDER BY (((((vt1.lid, vt1.c0, vt0.c0)) BETWEEN ((vt1.lid, vt1.c0, NULL)) AND ((vt1.c0, NULL, vt1.c0))))<>(CAST(vt0.c1 AS TEXT)));
SELECT * FROM vt2 WHERE (((vt2.c2)<<(((vt2.c1)<('')))));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2)<<(((vt2.c1)<(''))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (((vt2.c2)<<(((vt2.c1)<('')))));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2)<<(((vt2.c1)<(''))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (((vt2.c2)<<(((vt2.c1)<('')))));
SELECT * FROM vt0 WHERE (CASE json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c1)  WHEN CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c1)  WHEN CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c1)  WHEN CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE json_array(vt0.c0, vt0.c0, vt0.c1, vt0.c1)  WHEN CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM rt0, vt1 WHERE (0xfffffffff326d8d1) ORDER BY CAST(((rt0.c0)||(vt1.c0)) AS BLOB)  NULLS FIRST, rt0.c0 COLLATE BINARY ASC, CASE WHEN ((rt0.c1)!=(rt0.c4)) THEN ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)))OR(vt1.lid)))AND(rt0.c2)) ELSE x'' END DESC;
SELECT SUM(count) FROM (SELECT ((0xfffffffff326d8d1) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c0)||(vt1.c0)) AS BLOB)  NULLS FIRST, rt0.c0 COLLATE BINARY ASC, CASE WHEN ((rt0.c1)<>(rt0.c4)) THEN ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)))OR(vt1.lid)))AND(rt0.c2)) ELSE x'' END DESC);
SELECT ALL * FROM rt0, vt1 WHERE (0xfffffffff326d8d1) ORDER BY CAST(((rt0.c0)||(vt1.c0)) AS BLOB)  NULLS FIRST, rt0.c0 COLLATE BINARY ASC, CASE WHEN ((rt0.c1)!=(rt0.c4)) THEN ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)))OR(vt1.lid)))AND(rt0.c2)) ELSE x'' END DESC;
SELECT SUM(count) FROM (SELECT ((0xfffffffff326d8d1) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(((rt0.c0)||(vt1.c0)) AS BLOB)  NULLS FIRST, rt0.c0 COLLATE BINARY ASC, CASE WHEN ((rt0.c1)<>(rt0.c4)) THEN ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)))OR(vt1.lid)))AND(rt0.c2)) ELSE x'' END DESC);
SELECT ALL * FROM rt0, vt1 WHERE (0xfffffffff326d8d1) ORDER BY CAST(((rt0.c0)||(vt1.c0)) AS BLOB)  NULLS FIRST, rt0.c0 COLLATE BINARY ASC, CASE WHEN ((rt0.c1)!=(rt0.c4)) THEN ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)))OR(vt1.lid)))AND(rt0.c2)) ELSE x'' END DESC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT)) ORDER BY rt0.c3 ASC, (CAST(rt0.c3 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 ASC, (CAST(rt0.c3 AS REAL) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT)) ORDER BY rt0.c3 ASC, (CAST(rt0.c3 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 ASC, (CAST(rt0.c3 AS REAL) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS TEXT)) ORDER BY rt0.c3 ASC, (CAST(rt0.c3 AS REAL) IN ());
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST((~ (0.8006270336105787)) AS TEXT) FULL OUTER JOIN vt2 ON HEX(rt0.c2) FULL OUTER JOIN vt1 ON (((0xffffffffe43793bb))>=((((vt0.c1) ISNULL)))) WHERE ((((((0.976042795482476) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c2)), (- (rt0.c4)), x'', CASE rt0.c0  WHEN rt0.c0 THEN vt2.c0 ELSE rt0.c3 END))<((((rt0.c0)*(vt2.c0)), NULL, vt0.c1, ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1)), (- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.976042795482476) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c2)), (- (rt0.c4)), x'', CASE rt0.c0  WHEN rt0.c0 THEN vt2.c0 ELSE rt0.c3 END))<((((rt0.c0)*(vt2.c0)), NULL, vt0.c1, ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1)), (- (vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST((~ (0.8006270336105787)) AS TEXT) FULL OUTER JOIN vt2 ON HEX(rt0.c2) FULL OUTER JOIN vt1 ON (((0xffffffffe43793bb))>=((((vt0.c1) ISNULL)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST((~ (0.8006270336105787)) AS TEXT) FULL OUTER JOIN vt2 ON HEX(rt0.c2) FULL OUTER JOIN vt1 ON (((0xffffffffe43793bb))>=((((vt0.c1) ISNULL)))) WHERE ((((((0.976042795482476) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c2)), (- (rt0.c4)), x'', CASE rt0.c0  WHEN rt0.c0 THEN vt2.c0 ELSE rt0.c3 END))<((((rt0.c0)*(vt2.c0)), NULL, vt0.c1, ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1)), (- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.976042795482476) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c2)), (- (rt0.c4)), x'', CASE rt0.c0  WHEN rt0.c0 THEN vt2.c0 ELSE rt0.c3 END))<((((rt0.c0)*(vt2.c0)), NULL, vt0.c1, ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1)), (- (vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST((~ (0.8006270336105787)) AS TEXT) FULL OUTER JOIN vt2 ON HEX(rt0.c2) FULL OUTER JOIN vt1 ON (((0xffffffffe43793bb))>=((((vt0.c1) ISNULL)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST((~ (0.8006270336105787)) AS TEXT) FULL OUTER JOIN vt2 ON HEX(rt0.c2) FULL OUTER JOIN vt1 ON (((0xffffffffe43793bb))>=((((vt0.c1) ISNULL)))) WHERE ((((((0.976042795482476) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c1 IN (rt0.c2)), (- (rt0.c4)), x'', CASE rt0.c0  WHEN rt0.c0 THEN vt2.c0 ELSE rt0.c3 END))<((((rt0.c0)*(vt2.c0)), NULL, vt0.c1, ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1)), (- (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt2 CROSS JOIN vt1 ON TYPEOF(DISTINCT CASE rt0.c4  WHEN vt2.c0 THEN rt0.c2 ELSE rt0.c1 END) FULL OUTER JOIN rt0 ON (~ (((vt1.c0)<(vt1.lid)))) WHERE ((CAST(rt0.c1 AS BLOB) IN (((((vt1.lid)OR(vt0.c0)))AND(rt0.c2))))) ORDER BY CAST(((rt0.c2)-(vt2.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS BLOB) IN (((((vt1.lid)OR(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, vt2 CROSS JOIN vt1 ON TYPEOF(DISTINCT CASE rt0.c4  WHEN vt2.c0 THEN rt0.c2 ELSE rt0.c1 END) FULL OUTER JOIN rt0 ON (~ (((vt1.c0)<(vt1.lid)))) ORDER BY CAST(((rt0.c2)-(vt2.c1)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0, vt2 CROSS JOIN vt1 ON TYPEOF(DISTINCT CASE rt0.c4  WHEN vt2.c0 THEN rt0.c2 ELSE rt0.c1 END) FULL OUTER JOIN rt0 ON (~ (((vt1.c0)<(vt1.lid)))) WHERE ((CAST(rt0.c1 AS BLOB) IN (((((vt1.lid)OR(vt0.c0)))AND(rt0.c2))))) ORDER BY CAST(((rt0.c2)-(vt2.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS BLOB) IN (((((vt1.lid)OR(vt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, vt2 CROSS JOIN vt1 ON TYPEOF(DISTINCT CASE rt0.c4  WHEN vt2.c0 THEN rt0.c2 ELSE rt0.c1 END) FULL OUTER JOIN rt0 ON (~ (((vt1.c0)<(vt1.lid)))) ORDER BY CAST(((rt0.c2)-(vt2.c1)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE (((((rt0.c4)+(vt1.lid))) BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c1))) AND ((vt0.c1 IN ())))) ORDER BY CAST(vt2.c1 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)+(vt1.lid))) BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt2, vt0, vt1 ORDER BY CAST(vt2.c1 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE (((((rt0.c4)+(vt1.lid))) BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c1))) AND ((vt0.c1 IN ())))) ORDER BY CAST(vt2.c1 AS TEXT) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)+(vt1.lid))) BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt2, vt0, vt1 ORDER BY CAST(vt2.c1 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE (((((rt0.c4)+(vt1.lid))) BETWEEN ((vt1.c0 IN (rt0.c3, rt0.c1))) AND ((vt0.c1 IN ())))) ORDER BY CAST(vt2.c1 AS TEXT) COLLATE RTRIM;
SELECT COUNT(*) FROM vt2, rt0, vt1, vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt2, rt0, vt1, vt0);
SELECT COUNT(*) FROM vt2, rt0, vt1, vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt2, rt0, vt1, vt0);
SELECT COUNT(*) FROM vt2, rt0, vt1, vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1, vt2 WHERE ((+ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, vt2);
SELECT ALL COUNT(*) FROM vt0, vt1, vt2 WHERE ((+ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, vt2);
SELECT ALL COUNT(*) FROM vt0, vt1, vt2 WHERE ((+ (CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt2 WHERE (LOWER(((vt2.c0)-(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt2.c0)-(vt2.c0)))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (LOWER(((vt2.c0)-(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt2.c0)-(vt2.c0)))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (LOWER(((vt2.c0)-(vt2.c0))));
SELECT * FROM vt0 WHERE (((((((vt0.c1)<>(vt0.c1)))OR(0Xffffffffeef092be)))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<>(vt0.c1)))OR(0xffffffffeef092be)))OR(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)<>(vt0.c1)))OR(0Xffffffffeef092be)))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<>(vt0.c1)))OR(0xffffffffeef092be)))OR(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)<>(vt0.c1)))OR(0Xffffffffeef092be)))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt0, vt1, rt0, vt2 WHERE (((((vt1.c0)<=(vt0.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((x'39d4')) AND ((vt0.c1)))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt0.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((x'39d4')) AND ((vt0.c1)))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, rt0, vt2);
SELECT COUNT(*) FROM vt0, vt1, rt0, vt2 WHERE (((((vt1.c0)<=(vt0.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((x'39d4')) AND ((vt0.c1)))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt0.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((x'39d4')) AND ((vt0.c1)))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, rt0, vt2);
SELECT COUNT(*) FROM vt0, vt1, rt0, vt2 WHERE (((((vt1.c0)<=(vt0.c0))) BETWEEN ((((vt1.lid)) NOT BETWEEN ((x'39d4')) AND ((vt0.c1)))) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0.8989141157274899 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)IS NOT((- (rt0.c3)))) WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN vt1.lid COLLATE BINARY WHEN CASE WHEN vt1.lid THEN rt0.c1 END THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END THEN ((('o]刲])8\rxG', rt0.c3, rt0.c1)) BETWEEN ((vt1.lid, rt0.c1, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c1))) END) ORDER BY CAST(0.2534976554650661 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN vt1.lid COLLATE BINARY WHEN CASE WHEN vt1.lid THEN rt0.c1 END THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END THEN ((('o]刲])8\rxG', rt0.c3, rt0.c1)) BETWEEN ((vt1.lid, rt0.c1, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c1))) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0.8989141157274899 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)IS NOT((- (rt0.c3)))) ORDER BY CAST(0.2534976554650661 AS TEXT));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0.8989141157274899 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)IS NOT((- (rt0.c3)))) WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN vt1.lid COLLATE BINARY WHEN CASE WHEN vt1.lid THEN rt0.c1 END THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END THEN ((('o]刲])8\rxG', rt0.c3, rt0.c1)) BETWEEN ((vt1.lid, rt0.c1, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c1))) END) ORDER BY CAST(0.2534976554650661 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN vt1.lid COLLATE BINARY WHEN CASE WHEN vt1.lid THEN rt0.c1 END THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END THEN ((('o]刲])8\rxG', rt0.c3, rt0.c1)) BETWEEN ((vt1.lid, rt0.c1, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c1))) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0.8989141157274899 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)IS NOT((- (rt0.c3)))) ORDER BY CAST(0.2534976554650661 AS TEXT));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0.8989141157274899 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)IS NOT((- (rt0.c3)))) WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) THEN vt1.lid COLLATE BINARY WHEN CASE WHEN vt1.lid THEN rt0.c1 END THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 END THEN ((('o]刲])8\rxG', rt0.c3, rt0.c1)) BETWEEN ((vt1.lid, rt0.c1, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c1))) END) ORDER BY CAST(0.2534976554650661 AS TEXT);
SELECT * FROM vt0, vt1, rt0, vt2 WHERE (((CASE WHEN vt2.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c0 WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END) NOT BETWEEN (TYPEOF(rt0.c4)) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c0 WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END) NOT BETWEEN (TYPEOF(rt0.c4)) AND (''))) IS TRUE)  as count FROM vt0, vt1, rt0, vt2);
SELECT * FROM vt0, vt1, rt0, vt2 WHERE (((CASE WHEN vt2.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c0 WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END) NOT BETWEEN (TYPEOF(rt0.c4)) AND ('')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c0 WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END) NOT BETWEEN (TYPEOF(rt0.c4)) AND (''))) IS TRUE)  as count FROM vt0, vt1, rt0, vt2);
SELECT * FROM vt0, vt1, rt0, vt2 WHERE (((CASE WHEN vt2.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c0 WHEN vt2.c1 THEN vt0.c1 ELSE rt0.c1 END) NOT BETWEEN (TYPEOF(rt0.c4)) AND ('')));
SELECT COUNT(*) FROM vt2, rt0 WHERE (((((((vt2.c1)AND(vt2.c1)))OR(vt2.c2)))<=(((x'5035')=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c1)AND(vt2.c1)))OR(vt2.c2)))<=(((x'5035')=(rt0.c3))))) IS TRUE)  as count FROM vt2, rt0);
SELECT COUNT(*) FROM vt2, rt0 WHERE (((((((vt2.c1)AND(vt2.c1)))OR(vt2.c2)))<=(((x'5035')=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c1)AND(vt2.c1)))OR(vt2.c2)))<=(((x'5035')=(rt0.c3))))) IS TRUE)  as count FROM vt2, rt0);
SELECT COUNT(*) FROM vt2, rt0 WHERE (((((((vt2.c1)AND(vt2.c1)))OR(vt2.c2)))<=(((x'5035')=(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt2, vt1, vt0, rt0 WHERE (CASE ((rt0.c3) ISNULL)  WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((vt1.lid)IS(vt2.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) ISNULL)  WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((vt1.lid)IS(vt2.c1)) END) IS TRUE)  as count FROM vt2, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt2, vt1, vt0, rt0 WHERE (CASE ((rt0.c3) ISNULL)  WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((vt1.lid)IS(vt2.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) ISNULL)  WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((vt1.lid)IS(vt2.c1)) END) IS TRUE)  as count FROM vt2, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt2, vt1, vt0, rt0 WHERE (CASE ((rt0.c3) ISNULL)  WHEN ((vt1.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((vt1.lid)IS(vt2.c1)) END);
SELECT * FROM rt0, vt0, vt2 WHERE ((((((((((((vt2.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(CAST(vt2.c2 AS INTEGER))))AND(rt0.c0 COLLATE BINARY)))OR(x'f249')))AND(((vt2.c0) BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt2.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(CAST(vt2.c2 AS INTEGER))))AND(rt0.c0 COLLATE BINARY)))OR(x'f249')))AND(((vt2.c0) BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS TEXT)  NULLS LAST);
SELECT * FROM rt0, vt0, vt2 WHERE ((((((((((((vt2.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(CAST(vt2.c2 AS INTEGER))))AND(rt0.c0 COLLATE BINARY)))OR(x'f249')))AND(((vt2.c0) BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt2.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(CAST(vt2.c2 AS INTEGER))))AND(rt0.c0 COLLATE BINARY)))OR(x'f249')))AND(((vt2.c0) BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS TEXT)  NULLS LAST);
SELECT * FROM rt0, vt0, vt2 WHERE ((((((((((((vt2.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))OR(CAST(vt2.c2 AS INTEGER))))AND(rt0.c0 COLLATE BINARY)))OR(x'f249')))AND(((vt2.c0) BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS TEXT)  NULLS LAST;
SELECT * FROM vt0, vt2 WHERE (CASE (- (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt2.c2) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN 1.543727685E9 THEN vt0.c0 ELSE vt0.c0 END WHEN INSTR(vt2.c0, NULL) THEN CAST(vt2.c0 AS NUMERIC) ELSE ((vt2.c1)<<(vt2.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt2.c2) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN 1.543727685E9 THEN vt0.c0 ELSE vt0.c0 END WHEN INSTR(vt2.c0, NULL) THEN CAST(vt2.c0 AS NUMERIC) ELSE ((vt2.c1)<<(vt2.c2)) END) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE (CASE (- (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt2.c2) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN 1.543727685E9 THEN vt0.c0 ELSE vt0.c0 END WHEN INSTR(vt2.c0, NULL) THEN CAST(vt2.c0 AS NUMERIC) ELSE ((vt2.c1)<<(vt2.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt2.c2) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN 1.543727685E9 THEN vt0.c0 ELSE vt0.c0 END WHEN INSTR(vt2.c0, NULL) THEN CAST(vt2.c0 AS NUMERIC) ELSE ((vt2.c1)<<(vt2.c2)) END) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE (CASE (- (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt2.c2) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN 1.543727685E9 THEN vt0.c0 ELSE vt0.c0 END WHEN INSTR(vt2.c0, NULL) THEN CAST(vt2.c0 AS NUMERIC) ELSE ((vt2.c1)<<(vt2.c2)) END);
SELECT COUNT(*) FROM vt2, vt0, vt1 WHERE (((CAST(vt2.c2 AS BLOB))>>(CASE WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c2 AS BLOB))>>(CASE WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT COUNT(*) FROM vt2, vt0, vt1 WHERE (((CAST(vt2.c2 AS BLOB))>>(CASE WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c2 AS BLOB))>>(CASE WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT COUNT(*) FROM vt2, vt0, vt1 WHERE (((CAST(vt2.c2 AS BLOB))>>(CASE WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, vt1 WHERE (IFNULL(DISTINCT (vt1.lid IN ()), (vt0.c0 IN ()))) ORDER BY (- (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (vt1.lid IN ()), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0, vt1 WHERE (IFNULL(DISTINCT (vt1.lid IN ()), (vt0.c0 IN ()))) ORDER BY (- (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (vt1.lid IN ()), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0, vt1 WHERE (IFNULL(DISTINCT (vt1.lid IN ()), (vt0.c0 IN ()))) ORDER BY (- (((vt0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c0))))<=((((rt0.c2)%(rt0.c4)))))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c0))))<=((((rt0.c2)%(rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c0))))<=((((rt0.c2)%(rt0.c4)))))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)OR(rt0.c0))))<=((((rt0.c2)%(rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)OR(rt0.c0))))<=((((rt0.c2)%(rt0.c4)))))) ORDER BY rt0.c3;
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE (((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c3)))||(DATETIME(NULL, vt0.c1, '1868091306', vt2.c0, 'yp~Kh'))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c3)))||(DATETIME(NULL, vt0.c1, '1868091306', vt2.c0, 'yp~Kh')))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE (((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c3)))||(DATETIME(NULL, vt0.c1, '1868091306', vt2.c0, 'yp~Kh'))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c3)))||(DATETIME(NULL, vt0.c1, '1868091306', vt2.c0, 'yp~Kh')))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE (((((x'') NOT BETWEEN (rt0.c4) AND (rt0.c3)))||(DATETIME(NULL, vt0.c1, '1868091306', vt2.c0, 'yp~Kh'))));
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((x'', '-2017338715', vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))) AS INTEGER)) ORDER BY ((((vt1.lid, NULL, vt1.lid, '', vt1.c0))=((x'', vt1.c0, vt1.lid, vt1.c0, vt1.lid))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((x'', '-2017338715', vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid, NULL, vt1.lid, '', vt1.c0))==((x'', vt1.c0, vt1.lid, vt1.c0, vt1.lid))) IN ()) ASC);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((x'', '-2017338715', vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))) AS INTEGER)) ORDER BY ((((vt1.lid, NULL, vt1.lid, '', vt1.c0))=((x'', vt1.c0, vt1.lid, vt1.c0, vt1.lid))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((x'', '-2017338715', vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid, NULL, vt1.lid, '', vt1.c0))==((x'', vt1.c0, vt1.lid, vt1.c0, vt1.lid))) IN ()) ASC);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0, vt1.c0, x'')) BETWEEN ((x'', '-2017338715', vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.lid))) AS INTEGER)) ORDER BY ((((vt1.lid, NULL, vt1.lid, '', vt1.c0))=((x'', vt1.c0, vt1.lid, vt1.c0, vt1.lid))) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0 COLLATE NOCASE);
SELECT * FROM vt1 CROSS JOIN vt2 ON (((((vt1.c0))<((vt2.c0))))||(((vt2.c0)AND(vt2.c0)))) WHERE (ABS(((',]3DJMGj') BETWEEN (vt2.c1) AND (vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((',]3DJMGj') BETWEEN (vt2.c1) AND (vt1.lid)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt2 ON (((((vt1.c0))<((vt2.c0))))||(((vt2.c0)AND(vt2.c0)))));
SELECT * FROM vt1 CROSS JOIN vt2 ON (((((vt1.c0))<((vt2.c0))))||(((vt2.c0)AND(vt2.c0)))) WHERE (ABS(((',]3DJMGj') BETWEEN (vt2.c1) AND (vt1.lid))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((',]3DJMGj') BETWEEN (vt2.c1) AND (vt1.lid)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt2 ON (((((vt1.c0))<((vt2.c0))))||(((vt2.c0)AND(vt2.c0)))));
SELECT * FROM vt1 CROSS JOIN vt2 ON (((((vt1.c0))<((vt2.c0))))||(((vt2.c0)AND(vt2.c0)))) WHERE (ABS(((',]3DJMGj') BETWEEN (vt2.c1) AND (vt1.lid))));
SELECT ALL COUNT(*) FROM vt2, vt0, vt1 WHERE ((((((((((('1938518729')OR(vt2.c2)))OR(vt1.lid)))AND(vt2.c0)))OR(vt1.c0))) BETWEEN ((vt1.lid IN ())) AND (vt2.c0 COLLATE RTRIM))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('1938518729')OR(vt2.c2)))OR(vt1.lid)))AND(vt2.c0)))OR(vt1.c0))) BETWEEN ((vt1.lid IN ())) AND (vt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt2, vt0, vt1 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1 WHERE ((((((((((('1938518729')OR(vt2.c2)))OR(vt1.lid)))AND(vt2.c0)))OR(vt1.c0))) BETWEEN ((vt1.lid IN ())) AND (vt2.c0 COLLATE RTRIM))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('1938518729')OR(vt2.c2)))OR(vt1.lid)))AND(vt2.c0)))OR(vt1.c0))) BETWEEN ((vt1.lid IN ())) AND (vt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt2, vt0, vt1 ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1 WHERE ((((((((((('1938518729')OR(vt2.c2)))OR(vt1.lid)))AND(vt2.c0)))OR(vt1.c0))) BETWEEN ((vt1.lid IN ())) AND (vt2.c0 COLLATE RTRIM))) ORDER BY vt0.c1;
SELECT ALL * FROM rt0, vt0, vt2, vt1 WHERE ((~ ((- (vt2.c0))))) ORDER BY ''  NULLS LAST, ((((((vt0.c1)&(vt1.c0)))OR(CASE rt0.c2  WHEN vt2.c0 THEN rt0.c4 ELSE rt0.c0 END)))AND(9.15419599E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt2.c0))))) IS TRUE)  as count FROM rt0, vt0, vt2, vt1 ORDER BY ''  NULLS LAST, ((((((vt0.c1)&(vt1.c0)))OR(CASE rt0.c2  WHEN vt2.c0 THEN rt0.c4 ELSE rt0.c0 END)))AND(9.15419599E8))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt2, vt1 WHERE ((~ ((- (vt2.c0))))) ORDER BY ''  NULLS LAST, ((((((vt0.c1)&(vt1.c0)))OR(CASE rt0.c2  WHEN vt2.c0 THEN rt0.c4 ELSE rt0.c0 END)))AND(9.15419599E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((- (vt2.c0))))) IS TRUE)  as count FROM rt0, vt0, vt2, vt1 ORDER BY ''  NULLS LAST, ((((((vt0.c1)&(vt1.c0)))OR(CASE rt0.c2  WHEN vt2.c0 THEN rt0.c4 ELSE rt0.c0 END)))AND(9.15419599E8))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt2, vt1 WHERE ((~ ((- (vt2.c0))))) ORDER BY ''  NULLS LAST, ((((((vt0.c1)&(vt1.c0)))OR(CASE rt0.c2  WHEN vt2.c0 THEN rt0.c4 ELSE rt0.c0 END)))AND(9.15419599E8))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c3 IN ()) IN (TYPEOF(rt0.c0), ((rt0.c0)>>(0.7962349965529821)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN (TYPEOF(rt0.c0), ((rt0.c0)>>(0.7962349965529821))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3 IN ()) IN (TYPEOF(rt0.c0), ((rt0.c0)>>(0.7962349965529821)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN (TYPEOF(rt0.c0), ((rt0.c0)>>(0.7962349965529821))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3 IN ()) IN (TYPEOF(rt0.c0), ((rt0.c0)>>(0.7962349965529821)))));
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE (((CASE vt1.lid  WHEN rt0.c3 THEN rt0.c3 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.lid  WHEN rt0.c3 THEN rt0.c3 END) NOT NULL)) IS TRUE)  as count FROM rt0, vt2, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE (((CASE vt1.lid  WHEN rt0.c3 THEN rt0.c3 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.lid  WHEN rt0.c3 THEN rt0.c3 END) NOT NULL)) IS TRUE)  as count FROM rt0, vt2, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE (((CASE vt1.lid  WHEN rt0.c3 THEN rt0.c3 END) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt2 ON CAST(LIKE(rt0.c4, vt2.c1, 'n') AS TEXT) WHERE (LIKELIHOOD((vt2.c0 IN (vt2.c1)), 0.8716731143832996)) ORDER BY ((((x'c499')OR(CAST(rt0.c3 AS BLOB))))OR(RTRIM(0.14812055725361417))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((vt2.c0 IN (vt2.c1)), 0.8716731143832996)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt2 ON CAST(LIKE(rt0.c4, vt2.c1, 'n') AS TEXT) ORDER BY ((((x'c499')OR(CAST(rt0.c3 AS BLOB))))OR(RTRIM(0.14812055725361417))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt2 ON CAST(LIKE(rt0.c4, vt2.c1, 'n') AS TEXT) WHERE (LIKELIHOOD((vt2.c0 IN (vt2.c1)), 0.8716731143832996)) ORDER BY ((((x'c499')OR(CAST(rt0.c3 AS BLOB))))OR(RTRIM(0.14812055725361417))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((vt2.c0 IN (vt2.c1)), 0.8716731143832996)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt2 ON CAST(LIKE(rt0.c4, vt2.c1, 'n') AS TEXT) ORDER BY ((((x'c499')OR(CAST(rt0.c3 AS BLOB))))OR(RTRIM(0.14812055725361417))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt2 ON CAST(LIKE(rt0.c4, vt2.c1, 'n') AS TEXT) WHERE (LIKELIHOOD((vt2.c0 IN (vt2.c1)), 0.8716731143832996)) ORDER BY ((((x'c499')OR(CAST(rt0.c3 AS BLOB))))OR(RTRIM(0.14812055725361417))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt2 ON CASE COALESCE(DISTINCT rt0.c1, rt0.c4, vt0.c0, vt1.lid)  WHEN ((((((((NULL)OR(vt0.c1)))OR(x'')))AND(vt1.c0)))OR(rt0.c1)) THEN NULL ELSE (vt1.c0 IN ()) END CROSS JOIN vt1 ON ((vt0.c0)IS(((((vt2.c0)OR(rt0.c0)))AND(vt2.c2)))) WHERE (rt0.c1) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt2 ON CASE COALESCE(DISTINCT rt0.c1, rt0.c4, vt0.c0, vt1.lid)  WHEN ((((((((NULL)OR(vt0.c1)))OR(x'')))AND(vt1.c0)))OR(rt0.c1)) THEN NULL ELSE (vt1.c0 IN ()) END CROSS JOIN vt1 ON ((vt0.c0)IS(((((vt2.c0)OR(rt0.c0)))AND(vt2.c2)))) ORDER BY rt0.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt2 ON CASE COALESCE(DISTINCT rt0.c1, rt0.c4, vt0.c0, vt1.lid)  WHEN ((((((((NULL)OR(vt0.c1)))OR(x'')))AND(vt1.c0)))OR(rt0.c1)) THEN NULL ELSE (vt1.c0 IN ()) END CROSS JOIN vt1 ON ((vt0.c0)IS(((((vt2.c0)OR(rt0.c0)))AND(vt2.c2)))) WHERE (rt0.c1) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt2 ON CASE COALESCE(DISTINCT rt0.c1, rt0.c4, vt0.c0, vt1.lid)  WHEN ((((((((NULL)OR(vt0.c1)))OR(x'')))AND(vt1.c0)))OR(rt0.c1)) THEN NULL ELSE (vt1.c0 IN ()) END CROSS JOIN vt1 ON ((vt0.c0)IS(((((vt2.c0)OR(rt0.c0)))AND(vt2.c2)))) ORDER BY rt0.c4  NULLS LAST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt2 ON ((vt2.c1)-(vt1.lid)) COLLATE NOCASE WHERE ((((+ (NULL)))>=(vt2.c1))) ORDER BY ((((((((((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))OR(CASE WHEN vt1.lid THEN vt2.c0 ELSE vt2.c1 END)))AND(vt2.c1)))AND(vt2.c2)))OR((vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL)))>=(vt2.c1))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt2 ON ((vt2.c1)-(vt1.lid)) COLLATE NOCASE ORDER BY ((((((((((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))OR(CASE WHEN vt1.lid THEN vt2.c0 ELSE vt2.c1 END)))AND(vt2.c1)))AND(vt2.c2)))OR((vt1.lid IN ()))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt2 ON ((vt2.c1)-(vt1.lid)) COLLATE NOCASE WHERE ((((+ (NULL)))>=(vt2.c1))) ORDER BY ((((((((((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))OR(CASE WHEN vt1.lid THEN vt2.c0 ELSE vt2.c1 END)))AND(vt2.c1)))AND(vt2.c2)))OR((vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL)))>=(vt2.c1))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt2 ON ((vt2.c1)-(vt1.lid)) COLLATE NOCASE ORDER BY ((((((((((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))OR(CASE WHEN vt1.lid THEN vt2.c0 ELSE vt2.c1 END)))AND(vt2.c1)))AND(vt2.c2)))OR((vt1.lid IN ()))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt2 ON ((vt2.c1)-(vt1.lid)) COLLATE NOCASE WHERE ((((+ (NULL)))>=(vt2.c1))) ORDER BY ((((((((((((vt2.c0)AND(vt1.c0)))AND(vt1.c0)))OR(CASE WHEN vt1.lid THEN vt2.c0 ELSE vt2.c1 END)))AND(vt2.c1)))AND(vt2.c2)))OR((vt1.lid IN ())));
SELECT ALL * FROM rt0, vt2 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((rt0.c4)>=(vt0.c0)), 0.542040939080137) CROSS JOIN vt0 ON ((((((((rt0.c3 COLLATE BINARY)AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN rt0.c1 END)))OR(vt2.c0 COLLATE RTRIM)))OR(CAST('1364375426' AS INTEGER))))AND(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE ((((rt0.c1)) NOT BETWEEN (((~ (vt0.c0)))) AND (((+ (rt0.c2)))))) ORDER BY ((rt0.c2 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((~ (vt0.c0)))) AND (((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt2 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((rt0.c4)>=(vt0.c0)), 0.542040939080137) CROSS JOIN vt0 ON ((((((((rt0.c3 COLLATE BINARY)AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN rt0.c1 END)))OR(vt2.c0 COLLATE RTRIM)))OR(CAST('1364375426' AS INTEGER))))AND(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) ORDER BY ((rt0.c2 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt2 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((rt0.c4)>=(vt0.c0)), 0.542040939080137) CROSS JOIN vt0 ON ((((((((rt0.c3 COLLATE BINARY)AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN rt0.c1 END)))OR(vt2.c0 COLLATE RTRIM)))OR(CAST('1364375426' AS INTEGER))))AND(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) WHERE ((((rt0.c1)) NOT BETWEEN (((~ (vt0.c0)))) AND (((+ (rt0.c2)))))) ORDER BY ((rt0.c2 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN (((~ (vt0.c0)))) AND (((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt2 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((rt0.c4)>=(vt0.c0)), 0.542040939080137) CROSS JOIN vt0 ON ((((((((rt0.c3 COLLATE BINARY)AND(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN rt0.c1 END)))OR(vt2.c0 COLLATE RTRIM)))OR(CAST('1364375426' AS INTEGER))))AND(((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) ORDER BY ((rt0.c2 COLLATE NOCASE) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt2, rt0 WHERE (((((rt0.c3) BETWEEN (vt2.c0) AND (rt0.c3)))IS('膚p')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (vt2.c0) AND (rt0.c3)))IS('膚p'))) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT ALL * FROM vt0, vt2, rt0 WHERE (((((rt0.c3) BETWEEN (vt2.c0) AND (rt0.c3)))IS('膚p')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (vt2.c0) AND (rt0.c3)))IS('膚p'))) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT ALL * FROM vt0, vt2, rt0 WHERE (((((rt0.c3) BETWEEN (vt2.c0) AND (rt0.c3)))IS('膚p')));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('1095078022')OR('-1224187992')))OR(rt0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((((x'')OR(rt0.c3)))OR(rt0.c0)))+(COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((('1095078022')OR('-1224187992')))OR(rt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((x'')OR(rt0.c3)))OR(rt0.c0)))+(COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('1095078022')OR('-1224187992')))OR(rt0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((((x'')OR(rt0.c3)))OR(rt0.c0)))+(COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((('1095078022')OR('-1224187992')))OR(rt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((x'')OR(rt0.c3)))OR(rt0.c0)))+(COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('1095078022')OR('-1224187992')))OR(rt0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((((x'')OR(rt0.c3)))OR(rt0.c0)))+(COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c1))) ASC;
SELECT * FROM vt0, vt2, rt0 WHERE (CAST((vt2.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt2.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT * FROM vt0, vt2, rt0 WHERE (CAST((vt2.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt2.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT * FROM vt0, vt2, rt0 WHERE (CAST((vt2.c0 IN ()) AS INTEGER));
SELECT COUNT(*) FROM vt1, vt2 WHERE ((((+ (NULL)))<=((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c2))))));
SELECT SUM(count) FROM (SELECT (((((+ (NULL)))<=((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c2)))))) IS TRUE)  as count FROM vt1, vt2);
SELECT COUNT(*) FROM vt1, vt2 WHERE ((((+ (NULL)))<=((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c2))))));
SELECT SUM(count) FROM (SELECT (((((+ (NULL)))<=((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c2)))))) IS TRUE)  as count FROM vt1, vt2);
SELECT COUNT(*) FROM vt1, vt2 WHERE ((((+ (NULL)))<=((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c2))))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.lid)))+(((vt1.c0)|(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.lid)))+(((vt1.c0)|(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.lid)))+(((vt1.c0)|(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.lid)))+(((vt1.c0)|(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.lid)))+(((vt1.c0)|(vt1.lid)))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0, vt1, vt2 WHERE ('') ORDER BY json_array_length(vt0.c0, ((vt1.c0) NOTNULL))  NULLS LAST, (((~ (vt2.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1, vt2 ORDER BY json_array_length(vt0.c0, ((vt1.c0) NOTNULL))  NULLS LAST, (((~ (vt2.c0))) IS FALSE));
SELECT ALL * FROM vt0, vt1, vt2 WHERE ('') ORDER BY json_array_length(vt0.c0, ((vt1.c0) NOTNULL))  NULLS LAST, (((~ (vt2.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1, vt2 ORDER BY json_array_length(vt0.c0, ((vt1.c0) NOTNULL))  NULLS LAST, (((~ (vt2.c0))) IS FALSE));
SELECT ALL * FROM vt0, vt1, vt2 WHERE ('') ORDER BY json_array_length(vt0.c0, ((vt1.c0) NOTNULL))  NULLS LAST, (((~ (vt2.c0))) IS FALSE);
SELECT COUNT(*) FROM vt1, vt0, vt2 WHERE (CAST(vt2.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY (((((((('v\%b''\i')OR('1094188365')))AND(((vt1.lid)LIKE(vt1.lid)))))AND((vt1.lid IN ()))))OR(((x'')<(vt2.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, vt2 ORDER BY (((((((('v\%b''\i')OR('1094188365')))AND(((vt1.lid)LIKE(vt1.lid)))))AND((vt1.lid IN ()))))OR(((x'')<(vt2.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, vt2 WHERE (CAST(vt2.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY (((((((('v\%b''\i')OR('1094188365')))AND(((vt1.lid)LIKE(vt1.lid)))))AND((vt1.lid IN ()))))OR(((x'')<(vt2.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, vt2 ORDER BY (((((((('v\%b''\i')OR('1094188365')))AND(((vt1.lid)LIKE(vt1.lid)))))AND((vt1.lid IN ()))))OR(((x'')<(vt2.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, vt2 WHERE (CAST(vt2.c1 COLLATE NOCASE AS NUMERIC)) ORDER BY (((((((('v\%b''\i')OR('1094188365')))AND(((vt1.lid)LIKE(vt1.lid)))))AND((vt1.lid IN ()))))OR(((x'')<(vt2.c2))))  NULLS LAST;
SELECT * FROM vt2, vt1, rt0, vt0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c3)) THEN vt0.c1 COLLATE BINARY ELSE TRIM(vt1.lid) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c3)) THEN vt0.c1 COLLATE BINARY ELSE TRIM(vt1.lid) END) IS TRUE)  as count FROM vt2, vt1, rt0, vt0);
SELECT * FROM vt2, vt1, rt0, vt0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c3)) THEN vt0.c1 COLLATE BINARY ELSE TRIM(vt1.lid) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c3)) THEN vt0.c1 COLLATE BINARY ELSE TRIM(vt1.lid) END) IS TRUE)  as count FROM vt2, vt1, rt0, vt0);
SELECT * FROM vt2, vt1, rt0, vt0 WHERE (CASE (((vt0.c0))<=((vt0.c0)))  WHEN ((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c3)) THEN vt0.c1 COLLATE BINARY ELSE TRIM(vt1.lid) END);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE ((((((vt2.c1 IN (vt0.c1)))OR(((((rt0.c4)OR(vt2.c0)))AND(NULL)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((vt2.c1 IN (vt0.c1)))OR(((((rt0.c4)OR(vt2.c0)))AND(NULL)))))OR(NULL))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE ((((((vt2.c1 IN (vt0.c1)))OR(((((rt0.c4)OR(vt2.c0)))AND(NULL)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((vt2.c1 IN (vt0.c1)))OR(((((rt0.c4)OR(vt2.c0)))AND(NULL)))))OR(NULL))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE ((((((vt2.c1 IN (vt0.c1)))OR(((((rt0.c4)OR(vt2.c0)))AND(NULL)))))OR(NULL)));
SELECT ALL * FROM vt0 WHERE (((((('-1001049782')>>(vt0.c0)), vt0.c0, (('-1462894971')>>(vt0.c0)), (- (vt0.c1)), NULL))=((((((vt0.c1)OR(-1756658935)))OR(vt0.c0)), (('iS')>(vt0.c1)), vt0.c1, ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), (((vt0.c0, vt0.c0, NULL, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))) ORDER BY (((vt0.c1 IN ())) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((('-1001049782')>>(vt0.c0)), vt0.c0, (('-1462894971')>>(vt0.c0)), (- (vt0.c1)), NULL))==((((((vt0.c1)OR(-1756658935)))OR(vt0.c0)), (('iS')>(vt0.c1)), vt0.c1, ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), (((vt0.c0, vt0.c0, NULL, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT ALL * FROM vt0 WHERE (((((('-1001049782')>>(vt0.c0)), vt0.c0, (('-1462894971')>>(vt0.c0)), (- (vt0.c1)), NULL))=((((((vt0.c1)OR(-1756658935)))OR(vt0.c0)), (('iS')>(vt0.c1)), vt0.c1, ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), (((vt0.c0, vt0.c0, NULL, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))) ORDER BY (((vt0.c1 IN ())) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((('-1001049782')>>(vt0.c0)), vt0.c0, (('-1462894971')>>(vt0.c0)), (- (vt0.c1)), NULL))==((((((vt0.c1)OR(-1756658935)))OR(vt0.c0)), (('iS')>(vt0.c1)), vt0.c1, ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), (((vt0.c0, vt0.c0, NULL, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE))));
SELECT ALL * FROM vt0 WHERE (((((('-1001049782')>>(vt0.c0)), vt0.c0, (('-1462894971')>>(vt0.c0)), (- (vt0.c1)), NULL))=((((((vt0.c1)OR(-1756658935)))OR(vt0.c0)), (('iS')>(vt0.c1)), vt0.c1, ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)), (((vt0.c0, vt0.c0, NULL, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))))) ORDER BY (((vt0.c1 IN ())) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((NOT (rt0.c3)))=(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN 1754431517 THEN rt0.c0 ELSE 0.3365630817633287 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))=(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN 1754431517 THEN rt0.c0 ELSE 0.3365630817633287 END))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((NOT (rt0.c3)))=(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN 1754431517 THEN rt0.c0 ELSE 0.3365630817633287 END)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))=(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN 1754431517 THEN rt0.c0 ELSE 0.3365630817633287 END))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((NOT (rt0.c3)))=(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c3 THEN x'' WHEN 1754431517 THEN rt0.c0 ELSE 0.3365630817633287 END)));
SELECT COUNT(*) FROM rt0, vt2 WHERE ((((COALESCE(rt0.c2, rt0.c3)))>=((((rt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(rt0.c2, rt0.c3)))>=((((rt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0, vt2);
SELECT COUNT(*) FROM rt0, vt2 WHERE ((((COALESCE(rt0.c2, rt0.c3)))>=((((rt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(rt0.c2, rt0.c3)))>=((((rt0.c0) ISNULL))))) IS TRUE)  as count FROM rt0, vt2);
SELECT COUNT(*) FROM rt0, vt2 WHERE ((((COALESCE(rt0.c2, rt0.c3)))>=((((rt0.c0) ISNULL)))));
SELECT ALL * FROM vt2 WHERE (vt2.c2) ORDER BY ((CASE WHEN 0.4232408718385189 THEN vt2.c0 ELSE '+y' END)<=(((vt2.c1) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt2.c2) IS TRUE)  as count FROM vt2 ORDER BY ((CASE WHEN 0.4232408718385189 THEN vt2.c0 ELSE '+y' END)<=(((vt2.c1) IS FALSE))) ASC  NULLS LAST);
SELECT ALL * FROM vt2 WHERE (vt2.c2) ORDER BY ((CASE WHEN 0.4232408718385189 THEN vt2.c0 ELSE '+y' END)<=(((vt2.c1) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt2.c2) IS TRUE)  as count FROM vt2 ORDER BY ((CASE WHEN 0.4232408718385189 THEN vt2.c0 ELSE '+y' END)<=(((vt2.c1) IS FALSE))) ASC  NULLS LAST);
SELECT ALL * FROM vt2 WHERE (vt2.c2) ORDER BY ((CASE WHEN 0.4232408718385189 THEN vt2.c0 ELSE '+y' END)<=(((vt2.c1) IS FALSE))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((-1792300700 IN (vt0.c0, '')) IN ()));
SELECT SUM(count) FROM (SELECT ((((-1792300700 IN (vt0.c0, '')) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-1792300700 IN (vt0.c0, '')) IN ()));
SELECT SUM(count) FROM (SELECT ((((-1792300700 IN (vt0.c0, '')) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-1792300700 IN (vt0.c0, '')) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt1.lid AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.lid AS BLOB) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt1.lid AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.lid AS BLOB) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((CAST(vt1.lid AS BLOB) IN ()));
SELECT * FROM rt0, vt2 WHERE (rt0.c0) ORDER BY ((rt0.c0)&(((rt0.c4) ISNULL))) DESC, json_extract(CAST(rt0.c0 AS REAL), CASE WHEN vt2.c0 THEN vt2.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt2 ORDER BY ((rt0.c0)&(((rt0.c4) ISNULL))) DESC, json_extract(CAST(rt0.c0 AS REAL), CASE WHEN vt2.c0 THEN vt2.c2 END)  NULLS FIRST);
SELECT * FROM rt0, vt2 WHERE (rt0.c0) ORDER BY ((rt0.c0)&(((rt0.c4) ISNULL))) DESC, json_extract(CAST(rt0.c0 AS REAL), CASE WHEN vt2.c0 THEN vt2.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt2 ORDER BY ((rt0.c0)&(((rt0.c4) ISNULL))) DESC, json_extract(CAST(rt0.c0 AS REAL), CASE WHEN vt2.c0 THEN vt2.c2 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))AND(vt2.c2)) AS REAL)) ORDER BY ((rt0.c0)-(x'' COLLATE BINARY)) ASC  NULLS LAST, 0.7196483423041645  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))AND(vt2.c2)) AS REAL)) IS TRUE)  as count FROM vt2, vt1, rt0 ORDER BY ((rt0.c0)-(x'' COLLATE BINARY)) ASC  NULLS LAST, 0.7196483423041645  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))AND(vt2.c2)) AS REAL)) ORDER BY ((rt0.c0)-(x'' COLLATE BINARY)) ASC  NULLS LAST, 0.7196483423041645  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))AND(vt2.c2)) AS REAL)) IS TRUE)  as count FROM vt2, vt1, rt0 ORDER BY ((rt0.c0)-(x'' COLLATE BINARY)) ASC  NULLS LAST, 0.7196483423041645  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))AND(vt2.c2)) AS REAL)) ORDER BY ((rt0.c0)-(x'' COLLATE BINARY)) ASC  NULLS LAST, 0.7196483423041645  NULLS FIRST;
SELECT COUNT(*) FROM vt2, rt0, vt1, vt0 WHERE (((((vt2.c2) NOT BETWEEN (NULL) AND (vt2.c1)))-(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (~ (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c2) NOT BETWEEN (NULL) AND (vt2.c1)))-(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt2, rt0, vt1, vt0 ORDER BY (~ (rt0.c2)) ASC);
SELECT COUNT(*) FROM vt2, rt0, vt1, vt0 WHERE (((((vt2.c2) NOT BETWEEN (NULL) AND (vt2.c1)))-(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (~ (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c2) NOT BETWEEN (NULL) AND (vt2.c1)))-(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt2, rt0, vt1, vt0 ORDER BY (~ (rt0.c2)) ASC);
SELECT COUNT(*) FROM vt2, rt0, vt1, vt0 WHERE (((((vt2.c2) NOT BETWEEN (NULL) AND (vt2.c1)))-(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (~ (rt0.c2)) ASC;
SELECT ALL * FROM vt2, vt1, vt0, rt0 WHERE ((CASE vt2.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.lid THEN rt0.c3 ELSE vt1.c0 END IN (CASE vt1.lid  WHEN vt2.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt2.c0 THEN vt2.c1 ELSE vt2.c2 END, (rt0.c0 IN ())))) ORDER BY ((rt0.c3)IS NOT(vt2.c0)), ((rt0.c3 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.lid THEN rt0.c3 ELSE vt1.c0 END IN (CASE vt1.lid  WHEN vt2.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt2.c0 THEN vt2.c1 ELSE vt2.c2 END, (rt0.c0 IN ())))) IS TRUE)  as count FROM vt2, vt1, vt0, rt0 ORDER BY ((rt0.c3)IS NOT(vt2.c0)), ((rt0.c3 COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt2, vt1, vt0, rt0 WHERE ((CASE vt2.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.lid THEN rt0.c3 ELSE vt1.c0 END IN (CASE vt1.lid  WHEN vt2.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt2.c0 THEN vt2.c1 ELSE vt2.c2 END, (rt0.c0 IN ())))) ORDER BY ((rt0.c3)IS NOT(vt2.c0)), ((rt0.c3 COLLATE BINARY) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.lid THEN rt0.c3 ELSE vt1.c0 END IN (CASE vt1.lid  WHEN vt2.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt2.c0 THEN vt2.c1 ELSE vt2.c2 END, (rt0.c0 IN ())))) IS TRUE)  as count FROM vt2, vt1, vt0, rt0 ORDER BY ((rt0.c3)IS NOT(vt2.c0)), ((rt0.c3 COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt2, vt1, vt0, rt0 WHERE ((CASE vt2.c1  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.lid THEN rt0.c3 ELSE vt1.c0 END IN (CASE vt1.lid  WHEN vt2.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL WHEN vt2.c0 THEN vt2.c1 ELSE vt2.c2 END, (rt0.c0 IN ())))) ORDER BY ((rt0.c3)IS NOT(vt2.c0)), ((rt0.c3 COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt1, vt2, rt0 INNER JOIN vt0 ON CASE CASE vt2.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END  WHEN CAST('?v㇏L\ru!o' AS BLOB) THEN CAST(vt1.lid AS BLOB) WHEN ((vt1.c0)-(vt1.c0)) THEN ((rt0.c1) NOT NULL) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((rt0.c1)AND(vt2.c2)))AND(rt0.c2)))OR('\r>	㿩Ai2,{')))AND(vt2.c2)) ELSE (~ (vt2.c0)) END WHERE ((((((vt2.c0))>((vt0.c0))))IS NOT(((vt1.lid)>=(rt0.c2))))) ORDER BY -1.178658671E9 ASC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0))>((vt0.c0))))IS NOT(((vt1.lid)>=(rt0.c2))))) IS TRUE)  as count FROM vt1, vt2, rt0 INNER JOIN vt0 ON CASE CASE vt2.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END  WHEN CAST('?v㇏L\ru!o' AS BLOB) THEN CAST(vt1.lid AS BLOB) WHEN ((vt1.c0)-(vt1.c0)) THEN ((rt0.c1) NOT NULL) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((rt0.c1)AND(vt2.c2)))AND(rt0.c2)))OR('\r>	㿩Ai2,{')))AND(vt2.c2)) ELSE (~ (vt2.c0)) END ORDER BY -1.178658671E9 ASC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1, vt2, rt0 INNER JOIN vt0 ON CASE CASE vt2.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END  WHEN CAST('?v㇏L\ru!o' AS BLOB) THEN CAST(vt1.lid AS BLOB) WHEN ((vt1.c0)-(vt1.c0)) THEN ((rt0.c1) NOT NULL) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((rt0.c1)AND(vt2.c2)))AND(rt0.c2)))OR('\r>	㿩Ai2,{')))AND(vt2.c2)) ELSE (~ (vt2.c0)) END WHERE ((((((vt2.c0))>((vt0.c0))))IS NOT(((vt1.lid)>=(rt0.c2))))) ORDER BY -1.178658671E9 ASC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0))>((vt0.c0))))IS NOT(((vt1.lid)>=(rt0.c2))))) IS TRUE)  as count FROM vt1, vt2, rt0 INNER JOIN vt0 ON CASE CASE vt2.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END  WHEN CAST('?v㇏L\ru!o' AS BLOB) THEN CAST(vt1.lid AS BLOB) WHEN ((vt1.c0)-(vt1.c0)) THEN ((rt0.c1) NOT NULL) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((rt0.c1)AND(vt2.c2)))AND(rt0.c2)))OR('\r>	㿩Ai2,{')))AND(vt2.c2)) ELSE (~ (vt2.c0)) END ORDER BY -1.178658671E9 ASC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1, vt2, rt0 INNER JOIN vt0 ON CASE CASE vt2.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END  WHEN CAST('?v㇏L\ru!o' AS BLOB) THEN CAST(vt1.lid AS BLOB) WHEN ((vt1.c0)-(vt1.c0)) THEN ((rt0.c1) NOT NULL) WHEN vt0.c1 COLLATE RTRIM THEN ((((((((rt0.c1)AND(vt2.c2)))AND(rt0.c2)))OR('\r>	㿩Ai2,{')))AND(vt2.c2)) ELSE (~ (vt2.c0)) END WHERE ((((((vt2.c0))>((vt0.c0))))IS NOT(((vt1.lid)>=(rt0.c2))))) ORDER BY -1.178658671E9 ASC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c4)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt0, vt2 WHERE ((- (COALESCE(vt1.lid, vt2.c1))));
SELECT SUM(count) FROM (SELECT (((- (COALESCE(vt1.lid, vt2.c1)))) IS TRUE)  as count FROM vt1, vt0, rt0, vt2);
SELECT COUNT(*) FROM vt1, vt0, rt0, vt2 WHERE ((- (COALESCE(vt1.lid, vt2.c1))));
SELECT SUM(count) FROM (SELECT (((- (COALESCE(vt1.lid, vt2.c1)))) IS TRUE)  as count FROM vt1, vt0, rt0, vt2);
SELECT COUNT(*) FROM vt1, vt0, rt0, vt2 WHERE ((- (COALESCE(vt1.lid, vt2.c1))));
SELECT * FROM vt1, rt0 WHERE (COALESCE(-1743098252, ((rt0.c3)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(-1743098252, ((rt0.c3)LIKE(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (COALESCE(-1743098252, ((rt0.c3)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(-1743098252, ((rt0.c3)LIKE(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (COALESCE(-1743098252, ((rt0.c3)LIKE(rt0.c0))));
SELECT COUNT(*) FROM vt2, rt0, vt1, vt0 WHERE (((((vt1.lid)/(rt0.c1))) BETWEEN (CASE rt0.c3  WHEN vt2.c0 THEN vt2.c1 END) AND ((((vt2.c2, rt0.c2, vt2.c1)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c3)) AND ((vt1.c0, vt2.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)/(rt0.c1))) BETWEEN (CASE rt0.c3  WHEN vt2.c0 THEN vt2.c1 END) AND ((((vt2.c2, rt0.c2, vt2.c1)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c3)) AND ((vt1.c0, vt2.c0, rt0.c4)))))) IS TRUE)  as count FROM vt2, rt0, vt1, vt0);
SELECT COUNT(*) FROM vt2, rt0, vt1, vt0 WHERE (((((vt1.lid)/(rt0.c1))) BETWEEN (CASE rt0.c3  WHEN vt2.c0 THEN vt2.c1 END) AND ((((vt2.c2, rt0.c2, vt2.c1)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c3)) AND ((vt1.c0, vt2.c0, rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)/(rt0.c1))) BETWEEN (CASE rt0.c3  WHEN vt2.c0 THEN vt2.c1 END) AND ((((vt2.c2, rt0.c2, vt2.c1)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c3)) AND ((vt1.c0, vt2.c0, rt0.c4)))))) IS TRUE)  as count FROM vt2, rt0, vt1, vt0);
SELECT COUNT(*) FROM vt2, rt0, vt1, vt0 WHERE (((((vt1.lid)/(rt0.c1))) BETWEEN (CASE rt0.c3  WHEN vt2.c0 THEN vt2.c1 END) AND ((((vt2.c2, rt0.c2, vt2.c1)) NOT BETWEEN ((rt0.c4, vt1.c0, rt0.c3)) AND ((vt1.c0, vt2.c0, rt0.c4))))));
SELECT ALL * FROM vt0, vt2 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt2.c1 END)*(((vt2.c2) NOT BETWEEN (vt2.c2) AND (vt0.c1))))) ORDER BY vt2.c2;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt2.c1 END)*(((vt2.c2) NOT BETWEEN (vt2.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY vt2.c2);
SELECT ALL * FROM vt0, vt2 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt2.c1 END)*(((vt2.c2) NOT BETWEEN (vt2.c2) AND (vt0.c1))))) ORDER BY vt2.c2;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt2.c1 END)*(((vt2.c2) NOT BETWEEN (vt2.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY vt2.c2);
SELECT ALL * FROM vt0, vt2 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt2.c1 END)*(((vt2.c2) NOT BETWEEN (vt2.c2) AND (vt0.c1))))) ORDER BY vt2.c2;
SELECT ALL COUNT(*) FROM vt2 WHERE (CASE UNLIKELY(vt2.c1)  WHEN CAST(vt2.c1 AS BLOB) THEN ((vt2.c0) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN ((vt2.c1) NOT NULL) THEN ((vt2.c2) NOT NULL) WHEN (vt2.c2 IN ()) THEN (+ (vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(vt2.c1)  WHEN CAST(vt2.c1 AS BLOB) THEN ((vt2.c0) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN ((vt2.c1) NOT NULL) THEN ((vt2.c2) NOT NULL) WHEN (vt2.c2 IN ()) THEN (+ (vt2.c0)) END) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CASE UNLIKELY(vt2.c1)  WHEN CAST(vt2.c1 AS BLOB) THEN ((vt2.c0) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN ((vt2.c1) NOT NULL) THEN ((vt2.c2) NOT NULL) WHEN (vt2.c2 IN ()) THEN (+ (vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(vt2.c1)  WHEN CAST(vt2.c1 AS BLOB) THEN ((vt2.c0) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN ((vt2.c1) NOT NULL) THEN ((vt2.c2) NOT NULL) WHEN (vt2.c2 IN ()) THEN (+ (vt2.c0)) END) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CASE UNLIKELY(vt2.c1)  WHEN CAST(vt2.c1 AS BLOB) THEN ((vt2.c0) NOT BETWEEN (vt2.c2) AND (vt2.c0)) WHEN ((vt2.c1) NOT NULL) THEN ((vt2.c2) NOT NULL) WHEN (vt2.c2 IN ()) THEN (+ (vt2.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT COUNT(*) FROM vt1, vt0, rt0 NATURAL JOIN vt2 WHERE (((((((((((((((((vt2.c1)AND(rt0.c4)))OR(vt0.c0)))OR(vt0.c1)))AND('qR	勹*Thl')))AND(rt0.c0)))OR(rt0.c2)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(TIME(vt2.c1, 972798191, rt0.c4, rt0.c3, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt2.c1)AND(rt0.c4)))OR(vt0.c0)))OR(vt0.c1)))AND('qR	勹*Thl')))AND(rt0.c0)))OR(rt0.c2)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(TIME(vt2.c1, 972798191, rt0.c4, rt0.c3, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN vt2);
SELECT COUNT(*) FROM vt1, vt0, rt0 NATURAL JOIN vt2 WHERE (((((((((((((((((vt2.c1)AND(rt0.c4)))OR(vt0.c0)))OR(vt0.c1)))AND('qR	勹*Thl')))AND(rt0.c0)))OR(rt0.c2)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(TIME(vt2.c1, 972798191, rt0.c4, rt0.c3, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt2.c1)AND(rt0.c4)))OR(vt0.c0)))OR(vt0.c1)))AND('qR	勹*Thl')))AND(rt0.c0)))OR(rt0.c2)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(TIME(vt2.c1, 972798191, rt0.c4, rt0.c3, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN vt2);
SELECT COUNT(*) FROM vt1, vt0, rt0 NATURAL JOIN vt2 WHERE (((((((((((((((((vt2.c1)AND(rt0.c4)))OR(vt0.c0)))OR(vt0.c1)))AND('qR	勹*Thl')))AND(rt0.c0)))OR(rt0.c2)))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(TIME(vt2.c1, 972798191, rt0.c4, rt0.c3, vt1.c0))));
SELECT * FROM vt1, vt0, vt2, rt0 WHERE ((((- (rt0.c0))) BETWEEN (((rt0.c4) NOT NULL)) AND (((vt1.lid)GLOB(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) BETWEEN (((rt0.c4) NOT NULL)) AND (((vt1.lid)GLOB(rt0.c4))))) IS TRUE)  as count FROM vt1, vt0, vt2, rt0);
SELECT * FROM vt1, vt0, vt2, rt0 WHERE ((((- (rt0.c0))) BETWEEN (((rt0.c4) NOT NULL)) AND (((vt1.lid)GLOB(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) BETWEEN (((rt0.c4) NOT NULL)) AND (((vt1.lid)GLOB(rt0.c4))))) IS TRUE)  as count FROM vt1, vt0, vt2, rt0);
SELECT * FROM vt1, vt0, vt2, rt0 WHERE ((((- (rt0.c0))) BETWEEN (((rt0.c4) NOT NULL)) AND (((vt1.lid)GLOB(rt0.c4)))));
SELECT ALL COUNT(*) FROM vt2, vt1 FULL OUTER JOIN vt0 ON vt2.c2 FULL OUTER JOIN rt0 ON CASE WHEN (((vt2.c1))==((vt0.c0))) THEN CAST(vt2.c0 AS REAL) ELSE (~ (vt1.c0)) END WHERE (vt0.c0) ORDER BY vt2.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt2, vt1 FULL OUTER JOIN vt0 ON vt2.c2 FULL OUTER JOIN rt0 ON CASE WHEN (((vt2.c1))==((vt0.c0))) THEN CAST(vt2.c0 AS REAL) ELSE (~ (vt1.c0)) END ORDER BY vt2.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt1 FULL OUTER JOIN vt0 ON vt2.c2 FULL OUTER JOIN rt0 ON CASE WHEN (((vt2.c1))==((vt0.c0))) THEN CAST(vt2.c0 AS REAL) ELSE (~ (vt1.c0)) END WHERE (vt0.c0) ORDER BY vt2.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt2, vt1 FULL OUTER JOIN vt0 ON vt2.c2 FULL OUTER JOIN rt0 ON CASE WHEN (((vt2.c1))==((vt0.c0))) THEN CAST(vt2.c0 AS REAL) ELSE (~ (vt1.c0)) END ORDER BY vt2.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt1 FULL OUTER JOIN vt0 ON vt2.c2 FULL OUTER JOIN rt0 ON CASE WHEN (((vt2.c1))==((vt0.c0))) THEN CAST(vt2.c0 AS REAL) ELSE (~ (vt1.c0)) END WHERE (vt0.c0) ORDER BY vt2.c1 ASC  NULLS FIRST;
SELECT * FROM rt0 NOT INDEXED WHERE (CASE WHEN ((rt0.c1)OR(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)) ELSE '-1657468686' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)OR(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)) ELSE '-1657468686' END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (CASE WHEN ((rt0.c1)OR(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)) ELSE '-1657468686' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)OR(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)) ELSE '-1657468686' END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (CASE WHEN ((rt0.c1)OR(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)) ELSE '-1657468686' END);
SELECT ALL * FROM rt0, vt2 WHERE (((vt2.c2 COLLATE BINARY) NOTNULL)) ORDER BY (((CAST(vt2.c1 AS NUMERIC), CAST(rt0.c1 AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN vt2.c0 END, rt0.c2 COLLATE RTRIM, CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN vt2.c2 THEN rt0.c1 END))!=((((rt0.c1) IS TRUE), LIKELY(DISTINCT rt0.c3), 9.15419599E8, (vt2.c0 IN ()), ((vt2.c2) NOT BETWEEN (rt0.c4) AND (vt2.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0, vt2 ORDER BY (((CAST(vt2.c1 AS NUMERIC), CAST(rt0.c1 AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN vt2.c0 END, rt0.c2 COLLATE RTRIM, CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN vt2.c2 THEN rt0.c1 END))!=((((rt0.c1) IS TRUE), LIKELY(DISTINCT rt0.c3), 9.15419599E8, (vt2.c0 IN ()), ((vt2.c2) NOT BETWEEN (rt0.c4) AND (vt2.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt2 WHERE (((vt2.c2 COLLATE BINARY) NOTNULL)) ORDER BY (((CAST(vt2.c1 AS NUMERIC), CAST(rt0.c1 AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN vt2.c0 END, rt0.c2 COLLATE RTRIM, CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN vt2.c2 THEN rt0.c1 END))!=((((rt0.c1) IS TRUE), LIKELY(DISTINCT rt0.c3), 9.15419599E8, (vt2.c0 IN ()), ((vt2.c2) NOT BETWEEN (rt0.c4) AND (vt2.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0, vt2 ORDER BY (((CAST(vt2.c1 AS NUMERIC), CAST(rt0.c1 AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN vt2.c0 END, rt0.c2 COLLATE RTRIM, CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN vt2.c2 THEN rt0.c1 END))!=((((rt0.c1) IS TRUE), LIKELY(DISTINCT rt0.c3), 9.15419599E8, (vt2.c0 IN ()), ((vt2.c2) NOT BETWEEN (rt0.c4) AND (vt2.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt2 WHERE (((vt2.c2 COLLATE BINARY) NOTNULL)) ORDER BY (((CAST(vt2.c1 AS NUMERIC), CAST(rt0.c1 AS TEXT), CASE rt0.c2  WHEN rt0.c2 THEN vt2.c0 END, rt0.c2 COLLATE RTRIM, CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN vt2.c2 THEN rt0.c1 END))!=((((rt0.c1) IS TRUE), LIKELY(DISTINCT rt0.c3), 9.15419599E8, (vt2.c0 IN ()), ((vt2.c2) NOT BETWEEN (rt0.c4) AND (vt2.c2)))))  NULLS LAST;
SELECT ALL * FROM vt2, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt0.c1)) THEN IFNULL(vt2.c0, rt0.c2) END WHERE ((((vt0.c1 IN (rt0.c0)))>=(0x7a52f9))) ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c0)OR(rt0.c3)))AND(vt2.c0)) WHEN ((vt0.c0) NOT NULL) THEN (vt2.c0 IN ()) WHEN (vt2.c0 IN (-1657468686)) THEN CAST(vt2.c2 AS REAL) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (rt0.c0)))>=(0x7a52f9))) IS TRUE)  as count FROM vt2, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt0.c1)) THEN IFNULL(vt2.c0, rt0.c2) END ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c0)OR(rt0.c3)))AND(vt2.c0)) WHEN ((vt0.c0) NOT NULL) THEN (vt2.c0 IN ()) WHEN (vt2.c0 IN (-1657468686)) THEN CAST(vt2.c2 AS REAL) END);
SELECT ALL * FROM vt2, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt0.c1)) THEN IFNULL(vt2.c0, rt0.c2) END WHERE ((((vt0.c1 IN (rt0.c0)))>=(0x7a52f9))) ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c0)OR(rt0.c3)))AND(vt2.c0)) WHEN ((vt0.c0) NOT NULL) THEN (vt2.c0 IN ()) WHEN (vt2.c0 IN (-1657468686)) THEN CAST(vt2.c2 AS REAL) END;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (rt0.c0)))>=(0x7a52f9))) IS TRUE)  as count FROM vt2, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt0.c1)) THEN IFNULL(vt2.c0, rt0.c2) END ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c0)OR(rt0.c3)))AND(vt2.c0)) WHEN ((vt0.c0) NOT NULL) THEN (vt2.c0 IN ()) WHEN (vt2.c0 IN (-1657468686)) THEN CAST(vt2.c2 AS REAL) END);
SELECT ALL * FROM vt2, vt0, rt0 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt0.c1)) THEN IFNULL(vt2.c0, rt0.c2) END WHERE ((((vt0.c1 IN (rt0.c0)))>=(0x7a52f9))) ORDER BY CASE WHEN vt0.c1 THEN ((((vt0.c0)OR(rt0.c3)))AND(vt2.c0)) WHEN ((vt0.c0) NOT NULL) THEN (vt2.c0 IN ()) WHEN (vt2.c0 IN (-1657468686)) THEN CAST(vt2.c2 AS REAL) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)GLOB(rt0.c3)))OR(x'')))AND(((rt0.c1)IS(rt0.c0))))) ORDER BY rt0.c0, (((('M{}^\nA') IS FALSE)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((rt0.c2, rt0.c2, rt0.c3))!=((rt0.c2, rt0.c0, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)GLOB(rt0.c3)))OR(x'')))AND(((rt0.c1)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, (((('M{}^\nA') IS FALSE)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((rt0.c2, rt0.c2, rt0.c3))<>((rt0.c2, rt0.c0, rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)GLOB(rt0.c3)))OR(x'')))AND(((rt0.c1)IS(rt0.c0))))) ORDER BY rt0.c0, (((('M{}^\nA') IS FALSE)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((rt0.c2, rt0.c2, rt0.c3))!=((rt0.c2, rt0.c0, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)GLOB(rt0.c3)))OR(x'')))AND(((rt0.c1)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, (((('M{}^\nA') IS FALSE)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((rt0.c2, rt0.c2, rt0.c3))<>((rt0.c2, rt0.c0, rt0.c3))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)GLOB(rt0.c3)))OR(x'')))AND(((rt0.c1)IS(rt0.c0))))) ORDER BY rt0.c0, (((('M{}^\nA') IS FALSE)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) AND ((((rt0.c2, rt0.c2, rt0.c3))!=((rt0.c2, rt0.c0, rt0.c3))))) ASC;
SELECT COUNT(*) FROM vt1, vt0, vt2, rt0 WHERE (MAX(rt0.c3, ((('-296331003')) NOT BETWEEN ((rt0.c1)) AND ((vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(rt0.c3, ((('-296331003')) NOT BETWEEN ((rt0.c1)) AND ((vt1.lid))))) IS TRUE)  as count FROM vt1, vt0, vt2, rt0);
SELECT COUNT(*) FROM vt1, vt0, vt2, rt0 WHERE (MAX(rt0.c3, ((('-296331003')) NOT BETWEEN ((rt0.c1)) AND ((vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(rt0.c3, ((('-296331003')) NOT BETWEEN ((rt0.c1)) AND ((vt1.lid))))) IS TRUE)  as count FROM vt1, vt0, vt2, rt0);
SELECT COUNT(*) FROM vt1, vt0, vt2, rt0 WHERE (MAX(rt0.c3, ((('-296331003')) NOT BETWEEN ((rt0.c1)) AND ((vt1.lid)))));
SELECT COUNT(*) FROM vt2, vt1 WHERE ((x'' IN (0Xffffffffa9c114ed, (vt2.c0 IN ())))) ORDER BY CAST(CASE WHEN vt2.c1 THEN vt1.c0 WHEN vt1.lid THEN vt2.c1 WHEN vt1.lid THEN vt2.c2 ELSE NULL END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (0Xffffffffa9c114ed, (vt2.c0 IN ())))) IS TRUE)  as count FROM vt2, vt1 ORDER BY CAST(CASE WHEN vt2.c1 THEN vt1.c0 WHEN vt1.lid THEN vt2.c1 WHEN vt1.lid THEN vt2.c2 ELSE NULL END AS INTEGER) DESC);
SELECT COUNT(*) FROM vt2, vt1 WHERE ((x'' IN (0Xffffffffa9c114ed, (vt2.c0 IN ())))) ORDER BY CAST(CASE WHEN vt2.c1 THEN vt1.c0 WHEN vt1.lid THEN vt2.c1 WHEN vt1.lid THEN vt2.c2 ELSE NULL END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (0Xffffffffa9c114ed, (vt2.c0 IN ())))) IS TRUE)  as count FROM vt2, vt1 ORDER BY CAST(CASE WHEN vt2.c1 THEN vt1.c0 WHEN vt1.lid THEN vt2.c1 WHEN vt1.lid THEN vt2.c2 ELSE NULL END AS INTEGER) DESC);
SELECT COUNT(*) FROM vt2, vt1 WHERE ((x'' IN (0Xffffffffa9c114ed, (vt2.c0 IN ())))) ORDER BY CAST(CASE WHEN vt2.c1 THEN vt1.c0 WHEN vt1.lid THEN vt2.c1 WHEN vt1.lid THEN vt2.c2 ELSE NULL END AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE (((((rt0.c4)-(vt0.c0)))%(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)-(vt0.c0)))%(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE (((((rt0.c4)-(vt0.c0)))%(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)-(vt0.c0)))%(TOTAL_CHANGES()))) IS TRUE)  as count FROM vt2, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE (((((rt0.c4)-(vt0.c0)))%(TOTAL_CHANGES())));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)>('iV')) COLLATE NOCASE COLLATE BINARY WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)>('iV')) COLLATE NOCASE COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)>('iV')) COLLATE NOCASE COLLATE BINARY WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)>('iV')) COLLATE NOCASE COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)>('iV')) COLLATE NOCASE COLLATE BINARY WHERE (rt0.c1);
SELECT ALL * FROM vt2 WHERE ((((vt2.c1 IN (vt2.c1, vt2.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c1 IN (vt2.c1, vt2.c0))) ISNULL)) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((((vt2.c1 IN (vt2.c1, vt2.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c1 IN (vt2.c1, vt2.c0))) ISNULL)) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((((vt2.c1 IN (vt2.c1, vt2.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt2, rt0 FULL OUTER JOIN vt0 ON ((((((0xffffffffaaa73090, rt0.c0, vt2.c1)) BETWEEN ((rt0.c3, rt0.c4, vt2.c1)) AND ((vt1.c0, rt0.c4, rt0.c3)))))>((rtreenode(vt2.c2, vt2.c0)))) RIGHT OUTER JOIN vt1 ON 0.3570299436509039 WHERE (CAST(rt0.c4 COLLATE BINARY AS INTEGER)) ORDER BY (NOT ((- (vt2.c2)))) DESC  NULLS FIRST, vt1.lid DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt2, rt0 FULL OUTER JOIN vt0 ON ((((((0xffffffffaaa73090, rt0.c0, vt2.c1)) BETWEEN ((rt0.c3, rt0.c4, vt2.c1)) AND ((vt1.c0, rt0.c4, rt0.c3)))))>((rtreenode(vt2.c2, vt2.c0)))) RIGHT OUTER JOIN vt1 ON 0.3570299436509039 ORDER BY (NOT ((- (vt2.c2)))) DESC  NULLS FIRST, vt1.lid DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, rt0 FULL OUTER JOIN vt0 ON ((((((0xffffffffaaa73090, rt0.c0, vt2.c1)) BETWEEN ((rt0.c3, rt0.c4, vt2.c1)) AND ((vt1.c0, rt0.c4, rt0.c3)))))>((rtreenode(vt2.c2, vt2.c0)))) RIGHT OUTER JOIN vt1 ON 0.3570299436509039 WHERE (CAST(rt0.c4 COLLATE BINARY AS INTEGER)) ORDER BY (NOT ((- (vt2.c2)))) DESC  NULLS FIRST, vt1.lid DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt2, rt0 FULL OUTER JOIN vt0 ON ((((((0xffffffffaaa73090, rt0.c0, vt2.c1)) BETWEEN ((rt0.c3, rt0.c4, vt2.c1)) AND ((vt1.c0, rt0.c4, rt0.c3)))))>((rtreenode(vt2.c2, vt2.c0)))) RIGHT OUTER JOIN vt1 ON 0.3570299436509039 ORDER BY (NOT ((- (vt2.c2)))) DESC  NULLS FIRST, vt1.lid DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (0xffffffff89038e7f) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c2))>=((rt0.c4)))))  NULLS LAST, (((((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c3, rt0.c4, rt0.c0))))AND(((rt0.c4)&(NULL)))))AND(rt0.c1 COLLATE BINARY)) DESC, load_extension(rt0.c4) ASC;
SELECT SUM(count) FROM (SELECT ((0Xffffffff89038e7f) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c2))>=((rt0.c4)))))  NULLS LAST, (((((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c3, rt0.c4, rt0.c0))))AND(((rt0.c4)&(NULL)))))AND(rt0.c1 COLLATE BINARY)) DESC, load_extension(rt0.c4) ASC);
SELECT ALL * FROM rt0 WHERE (0xffffffff89038e7f) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c2))>=((rt0.c4)))))  NULLS LAST, (((((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c3, rt0.c4, rt0.c0))))AND(((rt0.c4)&(NULL)))))AND(rt0.c1 COLLATE BINARY)) DESC, load_extension(rt0.c4) ASC;
SELECT SUM(count) FROM (SELECT ((0Xffffffff89038e7f) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c2))>=((rt0.c4)))))  NULLS LAST, (((((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c3, rt0.c4, rt0.c0))))AND(((rt0.c4)&(NULL)))))AND(rt0.c1 COLLATE BINARY)) DESC, load_extension(rt0.c4) ASC);
SELECT ALL * FROM rt0, vt0, vt2 WHERE (ABS(COALESCE(vt2.c0, vt2.c1, rt0.c3, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((ABS(COALESCE(vt2.c0, vt2.c1, rt0.c3, vt0.c1))) IS TRUE)  as count FROM rt0, vt0, vt2);
SELECT ALL * FROM rt0, vt0, vt2 WHERE (ABS(COALESCE(vt2.c0, vt2.c1, rt0.c3, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((ABS(COALESCE(vt2.c0, vt2.c1, rt0.c3, vt0.c1))) IS TRUE)  as count FROM rt0, vt0, vt2);
SELECT ALL * FROM rt0, vt0, vt2 WHERE (ABS(COALESCE(vt2.c0, vt2.c1, rt0.c3, vt0.c1)));
SELECT ALL * FROM rt0, vt1 WHERE ((~ (CASE NULL  WHEN rt0.c2 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE NULL  WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((~ (CASE NULL  WHEN rt0.c2 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE NULL  WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((~ (CASE NULL  WHEN rt0.c2 THEN rt0.c3 END)));
SELECT COUNT(*) FROM vt1, vt2 INNER JOIN vt0 ON (ABS(DISTINCT vt2.c1) IN ()) WHERE (CASE CHAR(vt2.c1)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE CHAR(vt2.c1)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END) IS TRUE)  as count FROM vt1, vt2 INNER JOIN vt0 ON (ABS(DISTINCT vt2.c1) IN ()));
SELECT COUNT(*) FROM vt1, vt2 INNER JOIN vt0 ON (ABS(DISTINCT vt2.c1) IN ()) WHERE (CASE CHAR(vt2.c1)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE CHAR(vt2.c1)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END) IS TRUE)  as count FROM vt1, vt2 INNER JOIN vt0 ON (ABS(DISTINCT vt2.c1) IN ()));
SELECT COUNT(*) FROM vt1, vt2 INNER JOIN vt0 ON (ABS(DISTINCT vt2.c1) IN ()) WHERE (CASE CHAR(vt2.c1)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END);
SELECT COUNT(*) FROM rt0, vt1, vt0, vt2 WHERE (((((((((((vt2.c0) BETWEEN (rt0.c4) AND (vt2.c1)))OR((~ (vt2.c1)))))AND((~ (NULL)))))OR(((vt0.c0) IS FALSE))))OR(((((vt0.c0)OR(rt0.c2)))AND(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c0) BETWEEN (rt0.c4) AND (vt2.c1)))OR((~ (vt2.c1)))))AND((~ (NULL)))))OR(((vt0.c0) IS FALSE))))OR(((((vt0.c0)OR(rt0.c2)))AND(vt2.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0, vt2);
SELECT COUNT(*) FROM rt0, vt1, vt0, vt2 WHERE (((((((((((vt2.c0) BETWEEN (rt0.c4) AND (vt2.c1)))OR((~ (vt2.c1)))))AND((~ (NULL)))))OR(((vt0.c0) IS FALSE))))OR(((((vt0.c0)OR(rt0.c2)))AND(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c0) BETWEEN (rt0.c4) AND (vt2.c1)))OR((~ (vt2.c1)))))AND((~ (NULL)))))OR(((vt0.c0) IS FALSE))))OR(((((vt0.c0)OR(rt0.c2)))AND(vt2.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0, vt2);
SELECT COUNT(*) FROM rt0, vt1, vt0, vt2 WHERE (((((((((((vt2.c0) BETWEEN (rt0.c4) AND (vt2.c1)))OR((~ (vt2.c1)))))AND((~ (NULL)))))OR(((vt0.c0) IS FALSE))))OR(((((vt0.c0)OR(rt0.c2)))AND(vt2.c0)))));
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN vt0 ON ((CASE vt2.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt1.lid WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS(x'')) RIGHT OUTER JOIN rt0 ON ((MIN(vt0.c0, vt1.lid)) NOT BETWEEN (CASE vt0.c0  WHEN vt2.c1 THEN rt0.c1 END) AND (CASE WHEN vt2.c0 THEN x'fb3b' WHEN vt1.c0 THEN rt0.c1 WHEN vt1.lid THEN vt1.lid ELSE rt0.c4 END)) LEFT OUTER JOIN vt1 ON CAST((((vt1.lid, rt0.c4, vt0.c0, vt2.c1, rt0.c3))<=((vt0.c0, vt2.c2, vt0.c1, vt1.c0, vt2.c2))) AS REAL) WHERE (CASE WHEN x'' THEN (((vt2.c1, vt2.c0, NULL))<((vt0.c1, 'K挰A뀨''M6.4', vt1.c0))) ELSE (vt1.c0 IN (vt1.lid)) END) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN (((vt2.c1, vt2.c0, NULL))<((vt0.c1, 'K挰A뀨''M6.4', vt1.c0))) ELSE (vt1.c0 IN (vt1.lid)) END) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON ((CASE vt2.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt1.lid WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS(x'')) RIGHT OUTER JOIN rt0 ON ((MIN(vt0.c0, vt1.lid)) NOT BETWEEN (CASE vt0.c0  WHEN vt2.c1 THEN rt0.c1 END) AND (CASE WHEN vt2.c0 THEN x'fb3b' WHEN vt1.c0 THEN rt0.c1 WHEN vt1.lid THEN vt1.lid ELSE rt0.c4 END)) LEFT OUTER JOIN vt1 ON CAST((((vt1.lid, rt0.c4, vt0.c0, vt2.c1, rt0.c3))<=((vt0.c0, vt2.c2, vt0.c1, vt1.c0, vt2.c2))) AS REAL) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER));
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN vt0 ON ((CASE vt2.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt1.lid WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS(x'')) RIGHT OUTER JOIN rt0 ON ((MIN(vt0.c0, vt1.lid)) NOT BETWEEN (CASE vt0.c0  WHEN vt2.c1 THEN rt0.c1 END) AND (CASE WHEN vt2.c0 THEN x'fb3b' WHEN vt1.c0 THEN rt0.c1 WHEN vt1.lid THEN vt1.lid ELSE rt0.c4 END)) LEFT OUTER JOIN vt1 ON CAST((((vt1.lid, rt0.c4, vt0.c0, vt2.c1, rt0.c3))<=((vt0.c0, vt2.c2, vt0.c1, vt1.c0, vt2.c2))) AS REAL) WHERE (CASE WHEN x'' THEN (((vt2.c1, vt2.c0, NULL))<((vt0.c1, 'K挰A뀨''M6.4', vt1.c0))) ELSE (vt1.c0 IN (vt1.lid)) END) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN (((vt2.c1, vt2.c0, NULL))<((vt0.c1, 'K挰A뀨''M6.4', vt1.c0))) ELSE (vt1.c0 IN (vt1.lid)) END) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON ((CASE vt2.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt1.lid WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS(x'')) RIGHT OUTER JOIN rt0 ON ((MIN(vt0.c0, vt1.lid)) NOT BETWEEN (CASE vt0.c0  WHEN vt2.c1 THEN rt0.c1 END) AND (CASE WHEN vt2.c0 THEN x'fb3b' WHEN vt1.c0 THEN rt0.c1 WHEN vt1.lid THEN vt1.lid ELSE rt0.c4 END)) LEFT OUTER JOIN vt1 ON CAST((((vt1.lid, rt0.c4, vt0.c0, vt2.c1, rt0.c3))<=((vt0.c0, vt2.c2, vt0.c1, vt1.c0, vt2.c2))) AS REAL) ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 CROSS JOIN rt0 ON UPPER(rt0.c2) WHERE (LAST_INSERT_ROWID()) ORDER BY (((((~ (vt2.c2)))AND(CAST(vt2.c0 AS NUMERIC))))OR(((((vt1.lid)OR(vt1.lid)))OR(vt2.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, vt2 CROSS JOIN rt0 ON UPPER(rt0.c2) ORDER BY (((((~ (vt2.c2)))AND(CAST(vt2.c0 AS NUMERIC))))OR(((((vt1.lid)OR(vt1.lid)))OR(vt2.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 CROSS JOIN rt0 ON UPPER(rt0.c2) WHERE (LAST_INSERT_ROWID()) ORDER BY (((((~ (vt2.c2)))AND(CAST(vt2.c0 AS NUMERIC))))OR(((((vt1.lid)OR(vt1.lid)))OR(vt2.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, vt2 CROSS JOIN rt0 ON UPPER(rt0.c2) ORDER BY (((((~ (vt2.c2)))AND(CAST(vt2.c0 AS NUMERIC))))OR(((((vt1.lid)OR(vt1.lid)))OR(vt2.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 CROSS JOIN rt0 ON UPPER(rt0.c2) WHERE (LAST_INSERT_ROWID()) ORDER BY (((((~ (vt2.c2)))AND(CAST(vt2.c0 AS NUMERIC))))OR(((((vt1.lid)OR(vt1.lid)))OR(vt2.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))))));
SELECT ALL COUNT(*) FROM vt0, vt1, vt2, rt0 WHERE (CASE WHEN ((rt0.c4)/(vt0.c0)) THEN vt2.c0 ELSE ((vt1.c0)IS NOT(vt1.c0)) END) ORDER BY (((vt2.c0 IN ()))<(((((vt2.c2)AND(vt2.c2)))OR(vt2.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)/(vt0.c0)) THEN vt2.c0 ELSE ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, vt2, rt0 NOT INDEXED ORDER BY (((vt2.c0 IN ()))<(((((vt2.c2)AND(vt2.c2)))OR(vt2.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1, vt2, rt0 WHERE (CASE WHEN ((rt0.c4)/(vt0.c0)) THEN vt2.c0 ELSE ((vt1.c0)IS NOT(vt1.c0)) END) ORDER BY (((vt2.c0 IN ()))<(((((vt2.c2)AND(vt2.c2)))OR(vt2.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)/(vt0.c0)) THEN vt2.c0 ELSE ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, vt2, rt0 NOT INDEXED ORDER BY (((vt2.c0 IN ()))<(((((vt2.c2)AND(vt2.c2)))OR(vt2.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1, vt2, rt0 WHERE (CASE WHEN ((rt0.c4)/(vt0.c0)) THEN vt2.c0 ELSE ((vt1.c0)IS NOT(vt1.c0)) END) ORDER BY (((vt2.c0 IN ()))<(((((vt2.c2)AND(vt2.c2)))OR(vt2.c1))));
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE ((((vt2.c2 IN ()))<=(vt2.c0 COLLATE BINARY))) ORDER BY ((((vt2.c1)=(vt1.lid)))=(CASE WHEN vt1.lid THEN vt2.c1 ELSE vt2.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt2.c2 IN ()))<=(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((((vt2.c1)=(vt1.lid)))==(CASE WHEN vt1.lid THEN vt2.c1 ELSE vt2.c1 END)) ASC);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE ((((vt2.c2 IN ()))<=(vt2.c0 COLLATE BINARY))) ORDER BY ((((vt2.c1)=(vt1.lid)))=(CASE WHEN vt1.lid THEN vt2.c1 ELSE vt2.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt2.c2 IN ()))<=(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((((vt2.c1)=(vt1.lid)))==(CASE WHEN vt1.lid THEN vt2.c1 ELSE vt2.c1 END)) ASC);
SELECT ALL COUNT(*) FROM vt2, vt1 WHERE ((((vt2.c2 IN ()))<=(vt2.c0 COLLATE BINARY))) ORDER BY ((((vt2.c1)=(vt1.lid)))=(CASE WHEN vt1.lid THEN vt2.c1 ELSE vt2.c1 END)) ASC;
SELECT ALL * FROM vt0, vt1, vt2 WHERE (0xffffffffb78eabd1) ORDER BY LIKELIHOOD(TRIM(vt0.c1), 0.4919142347397901) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffb78eabd1) IS TRUE)  as count FROM vt0, vt1, vt2 ORDER BY LIKELIHOOD(TRIM(vt0.c1), 0.4919142347397901) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, vt2 WHERE (0xffffffffb78eabd1) ORDER BY LIKELIHOOD(TRIM(vt0.c1), 0.4919142347397901) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffb78eabd1) IS TRUE)  as count FROM vt0, vt1, vt2 ORDER BY LIKELIHOOD(TRIM(vt0.c1), 0.4919142347397901) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, vt2 WHERE (0xffffffffb78eabd1) ORDER BY LIKELIHOOD(TRIM(vt0.c1), 0.4919142347397901) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))OR(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))OR(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))OR(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))OR(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(CAST(rt0.c1 AS TEXT))))OR(CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c4) ORDER BY UNLIKELY((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY UNLIKELY((NOT (rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c4) ORDER BY UNLIKELY((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY UNLIKELY((NOT (rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c4) ORDER BY UNLIKELY((NOT (rt0.c0)));
SELECT * FROM vt0, vt2, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt2, vt1);
SELECT * FROM vt0, vt2, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt2, vt1);
SELECT * FROM vt0, vt2, vt1 WHERE (vt0.c0);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt2 ON (((+ (rt0.c0)))<(((vt2.c1)>(rt0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt2 ON (((+ (rt0.c0)))<(((vt2.c1)>(rt0.c0)))));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt2 ON (((+ (rt0.c0)))<(((vt2.c1)>(rt0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt2 ON (((+ (rt0.c0)))<(((vt2.c1)>(rt0.c0)))));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN vt2 ON (((+ (rt0.c0)))<(((vt2.c1)>(rt0.c0)))) WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.lid AS INTEGER)) ORDER BY ((vt1.lid COLLATE RTRIM)<<((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.lid AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.lid COLLATE RTRIM)<<((vt1.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.lid AS INTEGER)) ORDER BY ((vt1.lid COLLATE RTRIM)<<((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.lid AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.lid COLLATE RTRIM)<<((vt1.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.lid AS INTEGER)) ORDER BY ((vt1.lid COLLATE RTRIM)<<((vt1.c0 IN ()))) DESC;
SELECT COUNT(*) FROM vt1, vt0, vt2, rt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt1, vt0, vt2, rt0);
SELECT COUNT(*) FROM vt1, vt0, vt2, rt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt1, vt0, vt2, rt0);
SELECT COUNT(*) FROM vt1, vt0, vt2, rt0 WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt2 WHERE (CAST((vt2.c1 IN (vt2.c0, vt2.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt2.c1 IN (vt2.c0, vt2.c1)) AS BLOB)) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (CAST((vt2.c1 IN (vt2.c0, vt2.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt2.c1 IN (vt2.c0, vt2.c1)) AS BLOB)) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (CAST((vt2.c1 IN (vt2.c0, vt2.c1)) AS BLOB));
SELECT ALL * FROM vt2 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c1)/(vt1.c0)))) AND ((CAST(rt0.c3 AS REAL)))) RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1)AND(x'5700')) WHEN ((rt0.c3)%(0X9274721)) THEN UPPER(vt0.c0) WHEN ((x'') NOT BETWEEN (vt2.c0) AND (vt0.c1)) THEN rt0.c2 COLLATE NOCASE ELSE NULL END INNER JOIN vt0 ON ((LOWER(vt1.lid))<<((rt0.c1 IN ()))) WHERE (((CAST(rt0.c3 AS BLOB)) BETWEEN (LIKELY(DISTINCT vt1.lid)) AND ((vt1.lid IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS BLOB)) BETWEEN (LIKELY(DISTINCT vt1.lid)) AND ((vt1.lid IN ())))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c1)/(vt1.c0)))) AND ((CAST(rt0.c3 AS REAL)))) RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1)AND(x'5700')) WHEN ((rt0.c3)%(0X9274721)) THEN UPPER(vt0.c0) WHEN ((x'') NOT BETWEEN (vt2.c0) AND (vt0.c1)) THEN rt0.c2 COLLATE NOCASE ELSE NULL END INNER JOIN vt0 ON ((LOWER(vt1.lid))<<((rt0.c1 IN ()))));
SELECT ALL * FROM vt2 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c1)/(vt1.c0)))) AND ((CAST(rt0.c3 AS REAL)))) RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1)AND(x'5700')) WHEN ((rt0.c3)%(0X9274721)) THEN UPPER(vt0.c0) WHEN ((x'') NOT BETWEEN (vt2.c0) AND (vt0.c1)) THEN rt0.c2 COLLATE NOCASE ELSE NULL END INNER JOIN vt0 ON ((LOWER(vt1.lid))<<((rt0.c1 IN ()))) WHERE (((CAST(rt0.c3 AS BLOB)) BETWEEN (LIKELY(DISTINCT vt1.lid)) AND ((vt1.lid IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS BLOB)) BETWEEN (LIKELY(DISTINCT vt1.lid)) AND ((vt1.lid IN ())))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON (((vt0.c0)) NOT BETWEEN ((((vt0.c1)/(vt1.c0)))) AND ((CAST(rt0.c3 AS REAL)))) RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1)AND(x'5700')) WHEN ((rt0.c3)%(0X9274721)) THEN UPPER(vt0.c0) WHEN ((x'') NOT BETWEEN (vt2.c0) AND (vt0.c1)) THEN rt0.c2 COLLATE NOCASE ELSE NULL END INNER JOIN vt0 ON ((LOWER(vt1.lid))<<((rt0.c1 IN ()))));
SELECT * FROM vt2 FULL OUTER JOIN rt0 ON CAST(vt0.c0 AS REAL) COLLATE BINARY CROSS JOIN vt1 ON (ROUND(vt2.c0, rt0.c2) IN (CASE vt1.c0  WHEN rt0.c4 THEN vt1.c0 END)) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE))=(((vt1.lid)>(vt1.c0)))) WHERE ((vt1.lid IN (rt0.c3, vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt1.lid IN (rt0.c3, vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt2 FULL OUTER JOIN rt0 ON CAST(vt0.c0 AS REAL) COLLATE BINARY CROSS JOIN vt1 ON (ROUND(vt2.c0, rt0.c2) IN (CASE vt1.c0  WHEN rt0.c4 THEN vt1.c0 END)) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE))=(((vt1.lid)>(vt1.c0)))));
SELECT * FROM vt2 FULL OUTER JOIN rt0 ON CAST(vt0.c0 AS REAL) COLLATE BINARY CROSS JOIN vt1 ON (ROUND(vt2.c0, rt0.c2) IN (CASE vt1.c0  WHEN rt0.c4 THEN vt1.c0 END)) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE))=(((vt1.lid)>(vt1.c0)))) WHERE ((vt1.lid IN (rt0.c3, vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt1.lid IN (rt0.c3, vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt2 FULL OUTER JOIN rt0 ON CAST(vt0.c0 AS REAL) COLLATE BINARY CROSS JOIN vt1 ON (ROUND(vt2.c0, rt0.c2) IN (CASE vt1.c0  WHEN rt0.c4 THEN vt1.c0 END)) RIGHT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE))=(((vt1.lid)>(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (('')LIKE(vt0.c1)) THEN ((vt1.c0)||(rt0.c4)) END CROSS JOIN vt0 ON ((NOT (rt0.c0)) IN ()) WHERE (((CAST(vt2.c1 AS NUMERIC)) NOT BETWEEN (((vt1.lid)-(rt0.c0))) AND (TYPEOF(rt0.c4)))) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c1 AS NUMERIC)) NOT BETWEEN (((vt1.lid)-(rt0.c0))) AND (TYPEOF(rt0.c4)))) IS TRUE)  as count FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (('')LIKE(vt0.c1)) THEN ((vt1.c0)||(rt0.c4)) END CROSS JOIN vt0 ON ((NOT (rt0.c0)) IN ()) ORDER BY rt0.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (('')LIKE(vt0.c1)) THEN ((vt1.c0)||(rt0.c4)) END CROSS JOIN vt0 ON ((NOT (rt0.c0)) IN ()) WHERE (((CAST(vt2.c1 AS NUMERIC)) NOT BETWEEN (((vt1.lid)-(rt0.c0))) AND (TYPEOF(rt0.c4)))) ORDER BY rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c1 AS NUMERIC)) NOT BETWEEN (((vt1.lid)-(rt0.c0))) AND (TYPEOF(rt0.c4)))) IS TRUE)  as count FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (('')LIKE(vt0.c1)) THEN ((vt1.c0)||(rt0.c4)) END CROSS JOIN vt0 ON ((NOT (rt0.c0)) IN ()) ORDER BY rt0.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON CASE WHEN (('')LIKE(vt0.c1)) THEN ((vt1.c0)||(rt0.c4)) END CROSS JOIN vt0 ON ((NOT (rt0.c0)) IN ()) WHERE (((CAST(vt2.c1 AS NUMERIC)) NOT BETWEEN (((vt1.lid)-(rt0.c0))) AND (TYPEOF(rt0.c4)))) ORDER BY rt0.c4  NULLS LAST;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((0.6102676524179533 COLLATE BINARY))==((((((rt0.c4)OR(vt1.lid)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.6102676524179533 COLLATE BINARY))=((((((rt0.c4)OR(vt1.lid)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((0.6102676524179533 COLLATE BINARY))==((((((rt0.c4)OR(vt1.lid)))OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.6102676524179533 COLLATE BINARY))=((((((rt0.c4)OR(vt1.lid)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((0.6102676524179533 COLLATE BINARY))==((((((rt0.c4)OR(vt1.lid)))OR(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 LEFT OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c4)) ISNULL) WHERE (((((((rt0.c0)OR(rt0.c4)))AND(vt2.c1)))IS(((rt0.c4)<(vt2.c2))))) ORDER BY (((vt2.c2, vt1.c0, rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((JULIANDAY(vt2.c0, vt2.c0, vt0.c0), CHANGES(), CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c4 END, ((vt2.c0)IS(rt0.c4)), ((NULL)||(NULL)))) AND ((((rt0.c1)<=(0xffffffffc7236633)), 0.6923225360273324 COLLATE NOCASE, ((-309411220)&(rt0.c0)), (vt1.c0 IN (rt0.c0, vt1.c0)), NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c4)))AND(vt2.c1)))IS(((rt0.c4)<(vt2.c2))))) IS TRUE)  as count FROM vt1, vt0, vt2 LEFT OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c4)) ISNULL) ORDER BY (((vt2.c2, vt1.c0, rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((JULIANDAY(vt2.c0, vt2.c0, vt0.c0), CHANGES(), CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c4 END, ((vt2.c0)IS(rt0.c4)), ((NULL)||(NULL)))) AND ((((rt0.c1)<=(0Xffffffffc7236633)), 0.6923225360273324 COLLATE NOCASE, ((-309411220)&(rt0.c0)), (vt1.c0 IN (rt0.c0, vt1.c0)), NULL))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 LEFT OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c4)) ISNULL) WHERE (((((((rt0.c0)OR(rt0.c4)))AND(vt2.c1)))IS(((rt0.c4)<(vt2.c2))))) ORDER BY (((vt2.c2, vt1.c0, rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((JULIANDAY(vt2.c0, vt2.c0, vt0.c0), CHANGES(), CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c4 END, ((vt2.c0)IS(rt0.c4)), ((NULL)||(NULL)))) AND ((((rt0.c1)<=(0xffffffffc7236633)), 0.6923225360273324 COLLATE NOCASE, ((-309411220)&(rt0.c0)), (vt1.c0 IN (rt0.c0, vt1.c0)), NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c4)))AND(vt2.c1)))IS(((rt0.c4)<(vt2.c2))))) IS TRUE)  as count FROM vt1, vt0, vt2 LEFT OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c4)) ISNULL) ORDER BY (((vt2.c2, vt1.c0, rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((JULIANDAY(vt2.c0, vt2.c0, vt0.c0), CHANGES(), CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c4 END, ((vt2.c0)IS(rt0.c4)), ((NULL)||(NULL)))) AND ((((rt0.c1)<=(0Xffffffffc7236633)), 0.6923225360273324 COLLATE NOCASE, ((-309411220)&(rt0.c0)), (vt1.c0 IN (rt0.c0, vt1.c0)), NULL))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2 LEFT OUTER JOIN rt0 ON ((LOWER(DISTINCT rt0.c4)) ISNULL) WHERE (((((((rt0.c0)OR(rt0.c4)))AND(vt2.c1)))IS(((rt0.c4)<(vt2.c2))))) ORDER BY (((vt2.c2, vt1.c0, rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((JULIANDAY(vt2.c0, vt2.c0, vt0.c0), CHANGES(), CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c4 END, ((vt2.c0)IS(rt0.c4)), ((NULL)||(NULL)))) AND ((((rt0.c1)<=(0xffffffffc7236633)), 0.6923225360273324 COLLATE NOCASE, ((-309411220)&(rt0.c0)), (vt1.c0 IN (rt0.c0, vt1.c0)), NULL))) ASC;
SELECT * FROM vt0, vt2 WHERE (CAST(DATETIME(vt2.c2, vt2.c2, '0.7962349965529821') AS TEXT)) ORDER BY ((CAST(vt2.c1 AS REAL))/(CASE WHEN vt2.c2 THEN vt2.c2 WHEN vt0.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c2 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(vt2.c2, vt2.c2, '0.7962349965529821') AS TEXT)) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((CAST(vt2.c1 AS REAL))/(CASE WHEN vt2.c2 THEN vt2.c2 WHEN vt0.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c2 ELSE vt0.c1 END)));
SELECT * FROM vt0, vt2 WHERE (CAST(DATETIME(vt2.c2, vt2.c2, '0.7962349965529821') AS TEXT)) ORDER BY ((CAST(vt2.c1 AS REAL))/(CASE WHEN vt2.c2 THEN vt2.c2 WHEN vt0.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c2 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((CAST(DATETIME(vt2.c2, vt2.c2, '0.7962349965529821') AS TEXT)) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((CAST(vt2.c1 AS REAL))/(CASE WHEN vt2.c2 THEN vt2.c2 WHEN vt0.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c2 ELSE vt0.c1 END)));
SELECT * FROM vt0, vt2 WHERE (CAST(DATETIME(vt2.c2, vt2.c2, '0.7962349965529821') AS TEXT)) ORDER BY ((CAST(vt2.c1 AS REAL))/(CASE WHEN vt2.c2 THEN vt2.c2 WHEN vt0.c1 THEN vt2.c1 WHEN vt2.c1 THEN vt2.c2 ELSE vt0.c1 END));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON -1.446963987E9 WHERE (((((((vt0.c1)AND(rt0.c4)))AND(rt0.c4))) IS TRUE)) ORDER BY (- (((((x'')AND(vt0.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c4)))AND(rt0.c4))) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON -1.446963987E9 ORDER BY (- (((((x'')AND(vt0.c0)))OR(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON -1.446963987E9 WHERE (((((((vt0.c1)AND(rt0.c4)))AND(rt0.c4))) IS TRUE)) ORDER BY (- (((((x'')AND(vt0.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(rt0.c4)))AND(rt0.c4))) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON -1.446963987E9 ORDER BY (- (((((x'')AND(vt0.c0)))OR(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON -1.446963987E9 WHERE (((((((vt0.c1)AND(rt0.c4)))AND(rt0.c4))) IS TRUE)) ORDER BY (- (((((x'')AND(vt0.c0)))OR(rt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c1 WHERE (LIKELIHOOD((((rt0.c1, vt0.c1, rt0.c1))!=((rt0.c0, vt0.c1, rt0.c1))), 0.8050088557461235));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt0.c1, vt0.c1, rt0.c1))!=((rt0.c0, vt0.c1, rt0.c1))), 0.8050088557461235)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c1);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c1 WHERE (LIKELIHOOD((((rt0.c1, vt0.c1, rt0.c1))!=((rt0.c0, vt0.c1, rt0.c1))), 0.8050088557461235));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt0.c1, vt0.c1, rt0.c1))!=((rt0.c0, vt0.c1, rt0.c1))), 0.8050088557461235)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c1);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c1 WHERE (LIKELIHOOD((((rt0.c1, vt0.c1, rt0.c1))!=((rt0.c0, vt0.c1, rt0.c1))), 0.8050088557461235));
SELECT ALL * FROM vt1, vt0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((x'' IN ()));
SELECT * FROM vt2, vt1, rt0, vt0 WHERE (LIKELY(DISTINCT CAST('-646187762' AS INTEGER))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST('-646187762' AS INTEGER))) IS TRUE)  as count FROM vt2, vt1, rt0, vt0 ORDER BY '');
SELECT * FROM vt2, vt1, rt0, vt0 WHERE (LIKELY(DISTINCT CAST('-646187762' AS INTEGER))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST('-646187762' AS INTEGER))) IS TRUE)  as count FROM vt2, vt1, rt0, vt0 ORDER BY '');
SELECT * FROM vt2, vt1, rt0, vt0 WHERE (LIKELY(DISTINCT CAST('-646187762' AS INTEGER))) ORDER BY '';
SELECT * FROM vt2, vt0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE))<((((vt0.c0) NOT NULL))))) ORDER BY (('P0랂uuP') ISNULL), ABS(DISTINCT vt0.c0 COLLATE NOCASE) ASC  NULLS LAST, CAST(((vt0.c0)*(vt2.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))<((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt2, vt0, rt0 ORDER BY (('P0랂uuP') ISNULL), ABS(DISTINCT vt0.c0 COLLATE NOCASE) ASC  NULLS LAST, CAST(((vt0.c0)*(vt2.c0)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt2, vt0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE))<((((vt0.c0) NOT NULL))))) ORDER BY (('P0랂uuP') ISNULL), ABS(DISTINCT vt0.c0 COLLATE NOCASE) ASC  NULLS LAST, CAST(((vt0.c0)*(vt2.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))<((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt2, vt0, rt0 ORDER BY (('P0랂uuP') ISNULL), ABS(DISTINCT vt0.c0 COLLATE NOCASE) ASC  NULLS LAST, CAST(((vt0.c0)*(vt2.c0)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt2, vt0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE))<((((vt0.c0) NOT NULL))))) ORDER BY (('P0랂uuP') ISNULL), ABS(DISTINCT vt0.c0 COLLATE NOCASE) ASC  NULLS LAST, CAST(((vt0.c0)*(vt2.c0)) AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt0, vt2 WHERE (LIKELY(DISTINCT CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt2.c0 THEN rt0.c4 WHEN vt2.c1 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt2.c0 THEN rt0.c4 WHEN vt2.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM vt1, vt0, rt0, vt2);
SELECT ALL * FROM vt1, vt0, rt0, vt2 WHERE (LIKELY(DISTINCT CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt2.c0 THEN rt0.c4 WHEN vt2.c1 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt2.c0 THEN rt0.c4 WHEN vt2.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM vt1, vt0, rt0, vt2);
SELECT ALL * FROM vt1, vt0, rt0, vt2 WHERE (LIKELY(DISTINCT CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt2.c0 THEN rt0.c4 WHEN vt2.c1 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (NOT (rt0.c3))) LEFT OUTER JOIN vt2 ON CAST(rt0.c4 COLLATE RTRIM AS INTEGER) INNER JOIN rt0 ON CASE WHEN ((((x'')AND(vt2.c0)))OR(vt2.c1)) THEN ((rt0.c3)AND(rt0.c0)) ELSE ((rt0.c3) BETWEEN (-1.56147483E8) AND (rt0.c2)) END WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (NOT (rt0.c3))) LEFT OUTER JOIN vt2 ON CAST(rt0.c4 COLLATE RTRIM AS INTEGER) INNER JOIN rt0 ON CASE WHEN ((((x'')AND(vt2.c0)))OR(vt2.c1)) THEN ((rt0.c3)AND(rt0.c0)) ELSE ((rt0.c3) BETWEEN (-1.56147483E8) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (NOT (rt0.c3))) LEFT OUTER JOIN vt2 ON CAST(rt0.c4 COLLATE RTRIM AS INTEGER) INNER JOIN rt0 ON CASE WHEN ((((x'')AND(vt2.c0)))OR(vt2.c1)) THEN ((rt0.c3)AND(rt0.c0)) ELSE ((rt0.c3) BETWEEN (-1.56147483E8) AND (rt0.c2)) END WHERE (((rt0.c3) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (NOT (rt0.c3))) LEFT OUTER JOIN vt2 ON CAST(rt0.c4 COLLATE RTRIM AS INTEGER) INNER JOIN rt0 ON CASE WHEN ((((x'')AND(vt2.c0)))OR(vt2.c1)) THEN ((rt0.c3)AND(rt0.c0)) ELSE ((rt0.c3) BETWEEN (-1.56147483E8) AND (rt0.c2)) END);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)<>(vt1.lid))  WHEN ((((((((0.48366398464206606)OR(vt1.lid)))OR(vt2.c0)))AND(NULL)))AND('0.7196483423041645')) THEN ((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c1)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END THEN ((vt2.c2) NOTNULL) WHEN vt2.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.lid)) ELSE ((0.21908772472780136)<>(vt2.c2)) END WHERE ((CASE vt2.c0  WHEN 2002611230 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c0  WHEN 2002611230 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)!=(vt1.lid))  WHEN ((((((((0.48366398464206606)OR(vt1.lid)))OR(vt2.c0)))AND(NULL)))AND('0.7196483423041645')) THEN ((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c1)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END THEN ((vt2.c2) NOTNULL) WHEN vt2.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.lid)) ELSE ((0.21908772472780136)<>(vt2.c2)) END);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)<>(vt1.lid))  WHEN ((((((((0.48366398464206606)OR(vt1.lid)))OR(vt2.c0)))AND(NULL)))AND('0.7196483423041645')) THEN ((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c1)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END THEN ((vt2.c2) NOTNULL) WHEN vt2.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.lid)) ELSE ((0.21908772472780136)<>(vt2.c2)) END WHERE ((CASE vt2.c0  WHEN 2002611230 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c0  WHEN 2002611230 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)!=(vt1.lid))  WHEN ((((((((0.48366398464206606)OR(vt1.lid)))OR(vt2.c0)))AND(NULL)))AND('0.7196483423041645')) THEN ((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c1)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END THEN ((vt2.c2) NOTNULL) WHEN vt2.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.lid)) ELSE ((0.21908772472780136)<>(vt2.c2)) END);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)<>(vt1.lid))  WHEN ((((((((0.48366398464206606)OR(vt1.lid)))OR(vt2.c0)))AND(NULL)))AND('0.7196483423041645')) THEN ((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c1)) WHEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END THEN ((vt2.c2) NOTNULL) WHEN vt2.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c1)))AND(vt1.lid)) ELSE ((0.21908772472780136)<>(vt2.c2)) END WHERE ((CASE vt2.c0  WHEN 2002611230 THEN vt0.c0 END IN ()));
SELECT * FROM vt0 NOT INDEXED, rt0, vt1 WHERE ((((('-1178658671')<(rt0.c2)))=(0.22351495768789942))) ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (vt0.c1)))) AND (((~ (NULL))))), ROUND((((vt0.c0))>=((rt0.c0))), vt1.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1178658671')<(rt0.c2)))==(0.22351495768789942))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (vt0.c1)))) AND (((~ (NULL))))), ROUND((((vt0.c0))>=((rt0.c0))), vt1.c0 COLLATE RTRIM) ASC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED, rt0, vt1 WHERE ((((('-1178658671')<(rt0.c2)))=(0.22351495768789942))) ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (vt0.c1)))) AND (((~ (NULL))))), ROUND((((vt0.c0))>=((rt0.c0))), vt1.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1178658671')<(rt0.c2)))==(0.22351495768789942))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (vt0.c1)))) AND (((~ (NULL))))), ROUND((((vt0.c0))>=((rt0.c0))), vt1.c0 COLLATE RTRIM) ASC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED, rt0, vt1 WHERE ((((('-1178658671')<(rt0.c2)))=(0.22351495768789942))) ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN (vt0.c1)))) AND (((~ (NULL))))), ROUND((((vt0.c0))>=((rt0.c0))), vt1.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT * FROM vt2 INNER JOIN vt1 ON (((((vt1.lid))!=((vt2.c1)))) NOT BETWEEN ((vt2.c2 IN ())) AND (((vt1.c0)>(vt2.c2)))) WHERE (CASE WHEN ((vt2.c1)IS NOT(vt1.c0)) THEN (+ (vt2.c0)) ELSE ((vt2.c0) NOT NULL) END) ORDER BY (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c1 ELSE vt1.lid END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c1)IS NOT(vt1.c0)) THEN (+ (vt2.c0)) ELSE ((vt2.c0) NOT NULL) END) IS TRUE)  as count FROM vt2 INNER JOIN vt1 ON (((((vt1.lid))!=((vt2.c1)))) NOT BETWEEN ((vt2.c2 IN ())) AND (((vt1.c0)>(vt2.c2)))) ORDER BY (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c1 ELSE vt1.lid END IN ()) ASC  NULLS FIRST);
SELECT * FROM vt2 INNER JOIN vt1 ON (((((vt1.lid))!=((vt2.c1)))) NOT BETWEEN ((vt2.c2 IN ())) AND (((vt1.c0)>(vt2.c2)))) WHERE (CASE WHEN ((vt2.c1)IS NOT(vt1.c0)) THEN (+ (vt2.c0)) ELSE ((vt2.c0) NOT NULL) END) ORDER BY (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c1 ELSE vt1.lid END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt2.c1)IS NOT(vt1.c0)) THEN (+ (vt2.c0)) ELSE ((vt2.c0) NOT NULL) END) IS TRUE)  as count FROM vt2 INNER JOIN vt1 ON (((((vt1.lid))!=((vt2.c1)))) NOT BETWEEN ((vt2.c2 IN ())) AND (((vt1.c0)>(vt2.c2)))) ORDER BY (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c1 ELSE vt1.lid END IN ()) ASC  NULLS FIRST);
SELECT * FROM vt2 INNER JOIN vt1 ON (((((vt1.lid))!=((vt2.c1)))) NOT BETWEEN ((vt2.c2 IN ())) AND (((vt1.c0)>(vt2.c2)))) WHERE (CASE WHEN ((vt2.c1)IS NOT(vt1.c0)) THEN (+ (vt2.c0)) ELSE ((vt2.c0) NOT NULL) END) ORDER BY (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c1 ELSE vt1.lid END IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt2, rt0, vt1, vt0 WHERE (((((rt0.c4) NOT NULL)) NOTNULL)) ORDER BY CASE (NOT (rt0.c0))  WHEN CASE WHEN NULL THEN vt0.c1 ELSE rt0.c1 END THEN ((rt0.c3)>>(vt2.c0)) END  NULLS LAST, CASE (rt0.c0 IN ())  WHEN x'' THEN (vt1.lid IN ()) ELSE ((rt0.c3)LIKE(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt2, rt0, vt1, vt0 ORDER BY CASE (NOT (rt0.c0))  WHEN CASE WHEN NULL THEN vt0.c1 ELSE rt0.c1 END THEN ((rt0.c3)>>(vt2.c0)) END  NULLS LAST, CASE (rt0.c0 IN ())  WHEN x'' THEN (vt1.lid IN ()) ELSE ((rt0.c3)LIKE(rt0.c2)) END);
SELECT ALL * FROM vt2, rt0, vt1, vt0 WHERE (((((rt0.c4) NOT NULL)) NOTNULL)) ORDER BY CASE (NOT (rt0.c0))  WHEN CASE WHEN NULL THEN vt0.c1 ELSE rt0.c1 END THEN ((rt0.c3)>>(vt2.c0)) END  NULLS LAST, CASE (rt0.c0 IN ())  WHEN x'' THEN (vt1.lid IN ()) ELSE ((rt0.c3)LIKE(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt2, rt0, vt1, vt0 ORDER BY CASE (NOT (rt0.c0))  WHEN CASE WHEN NULL THEN vt0.c1 ELSE rt0.c1 END THEN ((rt0.c3)>>(vt2.c0)) END  NULLS LAST, CASE (rt0.c0 IN ())  WHEN x'' THEN (vt1.lid IN ()) ELSE ((rt0.c3)LIKE(rt0.c2)) END);
SELECT ALL * FROM vt2, rt0, vt1, vt0 WHERE (((((rt0.c4) NOT NULL)) NOTNULL)) ORDER BY CASE (NOT (rt0.c0))  WHEN CASE WHEN NULL THEN vt0.c1 ELSE rt0.c1 END THEN ((rt0.c3)>>(vt2.c0)) END  NULLS LAST, CASE (rt0.c0 IN ())  WHEN x'' THEN (vt1.lid IN ()) ELSE ((rt0.c3)LIKE(rt0.c2)) END;
SELECT COUNT(*) FROM rt0, vt2, vt1, vt0 WHERE (CAST(rt0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM rt0, vt2, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt2, vt1, vt0 WHERE (CAST(rt0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM rt0, vt2, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt2, vt1, vt0 WHERE (CAST(rt0.c2 AS NUMERIC));
SELECT COUNT(*) FROM vt0, vt2 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3)))*((((vt1.lid))==((rt0.c3))))) FULL OUTER JOIN vt0 ON (((~ (rt0.c0)))/(rt0.c3)) WHERE (((((0.14600215874183176) ISNULL))<((NULL IN ())))) ORDER BY ((x'') IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((0.14600215874183176) ISNULL))<((NULL IN ())))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3)))*((((vt1.lid))=((rt0.c3))))) FULL OUTER JOIN vt0 ON (((~ (rt0.c0)))/(rt0.c3)) ORDER BY ((x'') IS TRUE));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3)))*((((vt1.lid))==((rt0.c3))))) FULL OUTER JOIN vt0 ON (((~ (rt0.c0)))/(rt0.c3)) WHERE (((((0.14600215874183176) ISNULL))<((NULL IN ())))) ORDER BY ((x'') IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((0.14600215874183176) ISNULL))<((NULL IN ())))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3)))*((((vt1.lid))=((rt0.c3))))) FULL OUTER JOIN vt0 ON (((~ (rt0.c0)))/(rt0.c3)) ORDER BY ((x'') IS TRUE));
SELECT * FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON ((vt2.c0 COLLATE BINARY) IS TRUE) WHERE (CAST((((vt2.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c2, vt2.c1))) AS REAL)) ORDER BY LTRIM(vt1.c0, vt2.c1);
SELECT SUM(count) FROM (SELECT ((CAST((((vt2.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c2, vt2.c1))) AS REAL)) IS TRUE)  as count FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON ((vt2.c0 COLLATE BINARY) IS TRUE) ORDER BY LTRIM(vt1.c0, vt2.c1));
SELECT * FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON ((vt2.c0 COLLATE BINARY) IS TRUE) WHERE (CAST((((vt2.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c2, vt2.c1))) AS REAL)) ORDER BY LTRIM(vt1.c0, vt2.c1);
SELECT SUM(count) FROM (SELECT ((CAST((((vt2.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c2, vt2.c1))) AS REAL)) IS TRUE)  as count FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON ((vt2.c0 COLLATE BINARY) IS TRUE) ORDER BY LTRIM(vt1.c0, vt2.c1));
SELECT * FROM vt0, rt0, vt2 LEFT OUTER JOIN vt1 ON ((vt2.c0 COLLATE BINARY) IS TRUE) WHERE (CAST((((vt2.c2, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c4)) AND ((rt0.c3, rt0.c2, vt2.c1))) AS REAL)) ORDER BY LTRIM(vt1.c0, vt2.c1);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2, rt0 WHERE (NULLIF(DISTINCT ((((vt1.c0)AND(rt0.c1)))OR(rt0.c3)), ((vt1.lid)IS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((((vt1.c0)AND(rt0.c1)))OR(rt0.c3)), ((vt1.lid)IS(vt0.c1)))) IS TRUE)  as count FROM vt1, vt0, vt2, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2, rt0 WHERE (NULLIF(DISTINCT ((((vt1.c0)AND(rt0.c1)))OR(rt0.c3)), ((vt1.lid)IS(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((((vt1.c0)AND(rt0.c1)))OR(rt0.c3)), ((vt1.lid)IS(vt0.c1)))) IS TRUE)  as count FROM vt1, vt0, vt2, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, vt2, rt0 WHERE (NULLIF(DISTINCT ((((vt1.c0)AND(rt0.c1)))OR(rt0.c3)), ((vt1.lid)IS(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c1))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c1))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c1))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c1))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c1))) AND (CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE ('''O');
SELECT SUM(count) FROM (SELECT ALL (('''O') IS TRUE)  as count FROM rt0, vt2);
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE ('''O');
SELECT SUM(count) FROM (SELECT ALL (('''O') IS TRUE)  as count FROM rt0, vt2);
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE ('''O');
SELECT ALL COUNT(*) FROM vt2, vt1, rt0, vt0 WHERE ((- (((vt2.c2)<(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((- (((vt2.c2)<(vt1.lid))))) IS TRUE)  as count FROM vt2, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0, vt0 WHERE ((- (((vt2.c2)<(vt1.lid)))));
SELECT SUM(count) FROM (SELECT (((- (((vt2.c2)<(vt1.lid))))) IS TRUE)  as count FROM vt2, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0, vt0 WHERE ((- (((vt2.c2)<(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))>>(((vt0.c0)||(vt0.c0))))) ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))>>(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c1) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))>>(((vt0.c0)||(vt0.c0))))) ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))>>(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c1) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))>>(((vt0.c0)||(vt0.c0))))) ORDER BY (vt0.c1 COLLATE RTRIM IN (((vt0.c1) IS FALSE))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE ((((((0.9551021556900109)GLOB(vt1.c0))))==((((vt2.c0) BETWEEN (vt1.lid) AND (vt2.c1)))))) ORDER BY ABS(vt0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((0.9551021556900109)GLOB(vt1.c0))))==((((vt2.c0) BETWEEN (vt1.lid) AND (vt2.c1)))))) IS TRUE)  as count FROM rt0, vt2, vt0, vt1 ORDER BY ABS(vt0.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE ((((((0.9551021556900109)GLOB(vt1.c0))))==((((vt2.c0) BETWEEN (vt1.lid) AND (vt2.c1)))))) ORDER BY ABS(vt0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((0.9551021556900109)GLOB(vt1.c0))))==((((vt2.c0) BETWEEN (vt1.lid) AND (vt2.c1)))))) IS TRUE)  as count FROM rt0, vt2, vt0, vt1 ORDER BY ABS(vt0.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, vt1 WHERE ((((((0.9551021556900109)GLOB(vt1.c0))))==((((vt2.c0) BETWEEN (vt1.lid) AND (vt2.c1)))))) ORDER BY ABS(vt0.c0) COLLATE BINARY;
SELECT * FROM rt0, vt2 WHERE (((((rt0.c3 COLLATE BINARY)OR(((vt2.c0) NOTNULL))))OR((((rt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 COLLATE BINARY)OR(((vt2.c0) NOTNULL))))OR((((rt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0, vt2);
SELECT * FROM rt0, vt2 WHERE (((((rt0.c3 COLLATE BINARY)OR(((vt2.c0) NOTNULL))))OR((((rt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 COLLATE BINARY)OR(((vt2.c0) NOTNULL))))OR((((rt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0, vt2);
SELECT * FROM rt0, vt2 WHERE (((((rt0.c3 COLLATE BINARY)OR(((vt2.c0) NOTNULL))))OR((((rt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c4))))));
SELECT ALL COUNT(*) FROM vt2, rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt2, rt0, vt1);
SELECT ALL COUNT(*) FROM vt2, rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt2, rt0, vt1);
SELECT ALL COUNT(*) FROM vt2, rt0, vt1 WHERE (rt0.c0);
SELECT ALL * FROM vt0, rt0, vt2, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, vt2, vt1);
SELECT ALL * FROM vt0, rt0, vt2, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, vt2, vt1);
SELECT ALL * FROM vt0, rt0, vt2, vt1 WHERE (NULL);
SELECT * FROM rt0 WHERE ((((rt0.c3))==((rt0.c3))) COLLATE NOCASE) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN 'Oￔcg' WHEN (rt0.c4 IN ()) THEN (- (rt0.c2)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3))=((rt0.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN 'Oￔcg' WHEN (rt0.c4 IN ()) THEN (- (rt0.c2)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c3))==((rt0.c3))) COLLATE NOCASE) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN 'Oￔcg' WHEN (rt0.c4 IN ()) THEN (- (rt0.c2)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3))=((rt0.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN 'Oￔcg' WHEN (rt0.c4 IN ()) THEN (- (rt0.c2)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c3))==((rt0.c3))) COLLATE NOCASE) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN 'Oￔcg' WHEN (rt0.c4 IN ()) THEN (- (rt0.c2)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) END ASC  NULLS LAST;
SELECT * FROM vt1, vt2 WHERE (((((vt1.lid)>(vt2.c2)))AND(vt1.lid COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN (((vt2.c2, vt2.c0, vt1.c0))<=((vt2.c1, vt2.c2, vt1.c0))) ELSE vt1.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)>(vt2.c2)))AND(vt1.lid COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt2 ORDER BY CASE WHEN NULL THEN (((vt2.c2, vt2.c0, vt1.c0))<=((vt2.c1, vt2.c2, vt1.c0))) ELSE vt1.c0 END  NULLS LAST);
SELECT * FROM vt1, vt2 WHERE (((((vt1.lid)>(vt2.c2)))AND(vt1.lid COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN (((vt2.c2, vt2.c0, vt1.c0))<=((vt2.c1, vt2.c2, vt1.c0))) ELSE vt1.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)>(vt2.c2)))AND(vt1.lid COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt2 ORDER BY CASE WHEN NULL THEN (((vt2.c2, vt2.c0, vt1.c0))<=((vt2.c1, vt2.c2, vt1.c0))) ELSE vt1.c0 END  NULLS LAST);
SELECT * FROM vt1, vt2 WHERE (((((vt1.lid)>(vt2.c2)))AND(vt1.lid COLLATE BINARY))) ORDER BY CASE WHEN NULL THEN (((vt2.c2, vt2.c0, vt1.c0))<=((vt2.c1, vt2.c2, vt1.c0))) ELSE vt1.c0 END  NULLS LAST;
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) CROSS JOIN vt0 ON ((((rt0.c1)IS(vt2.c2)))!=((rt0.c1 IN (rt0.c3, vt2.c1)))) WHERE (((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) CROSS JOIN vt0 ON ((((rt0.c1)IS(vt2.c2)))!=((rt0.c1 IN (rt0.c3, vt2.c1)))));
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) CROSS JOIN vt0 ON ((((rt0.c1)IS(vt2.c2)))!=((rt0.c1 IN (rt0.c3, vt2.c1)))) WHERE (((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) CROSS JOIN vt0 ON ((((rt0.c1)IS(vt2.c2)))!=((rt0.c1 IN (rt0.c3, vt2.c1)))));
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE ((((vt1.lid, 0.8614958035480901, rt0.c1)) BETWEEN ((vt2.c2, LOWER(vt2.c2), ((((rt0.c4)AND(vt1.lid)))OR(vt1.lid)))) AND (('967732471', CASE vt2.c0  WHEN vt2.c0 THEN rt0.c4 END, ((rt0.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid, 0.8614958035480901, rt0.c1)) BETWEEN ((vt2.c2, LOWER(vt2.c2), ((((rt0.c4)AND(vt1.lid)))OR(vt1.lid)))) AND (('967732471', CASE vt2.c0  WHEN vt2.c0 THEN rt0.c4 END, ((rt0.c3) ISNULL))))) IS TRUE)  as count FROM rt0, vt1, vt2);
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE ((((vt1.lid, 0.8614958035480901, rt0.c1)) BETWEEN ((vt2.c2, LOWER(vt2.c2), ((((rt0.c4)AND(vt1.lid)))OR(vt1.lid)))) AND (('967732471', CASE vt2.c0  WHEN vt2.c0 THEN rt0.c4 END, ((rt0.c3) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((vt1.lid, 0.8614958035480901, rt0.c1)) BETWEEN ((vt2.c2, LOWER(vt2.c2), ((((rt0.c4)AND(vt1.lid)))OR(vt1.lid)))) AND (('967732471', CASE vt2.c0  WHEN vt2.c0 THEN rt0.c4 END, ((rt0.c3) ISNULL))))) IS TRUE)  as count FROM rt0, vt1, vt2);
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE ((((vt1.lid, 0.8614958035480901, rt0.c1)) BETWEEN ((vt2.c2, LOWER(vt2.c2), ((((rt0.c4)AND(vt1.lid)))OR(vt1.lid)))) AND (('967732471', CASE vt2.c0  WHEN vt2.c0 THEN rt0.c4 END, ((rt0.c3) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt2 WHERE (((((((vt1.c0)AND(vt2.c0)))AND(0X44d26f02)))>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4))))) ORDER BY ((((((vt1.c0))==((vt1.lid)))))>=((CASE rt0.c3  WHEN vt1.c0 THEN vt1.lid END)))  NULLS FIRST, CASE WHEN CHAR(rt0.c4, vt2.c0, vt1.lid) THEN ((rt0.c0)-(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt2.c0)))AND(0x44d26f02)))>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt1, vt2 ORDER BY ((((((vt1.c0))=((vt1.lid)))))>=((CASE rt0.c3  WHEN vt1.c0 THEN vt1.lid END)))  NULLS FIRST, CASE WHEN CHAR(rt0.c4, vt2.c0, vt1.lid) THEN ((rt0.c0)-(rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt2 WHERE (((((((vt1.c0)AND(vt2.c0)))AND(0X44d26f02)))>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4))))) ORDER BY ((((((vt1.c0))==((vt1.lid)))))>=((CASE rt0.c3  WHEN vt1.c0 THEN vt1.lid END)))  NULLS FIRST, CASE WHEN CHAR(rt0.c4, vt2.c0, vt1.lid) THEN ((rt0.c0)-(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt2.c0)))AND(0x44d26f02)))>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0, vt1, vt2 ORDER BY ((((((vt1.c0))=((vt1.lid)))))>=((CASE rt0.c3  WHEN vt1.c0 THEN vt1.lid END)))  NULLS FIRST, CASE WHEN CHAR(rt0.c4, vt2.c0, vt1.lid) THEN ((rt0.c0)-(rt0.c2)) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt2 WHERE (((((((vt1.c0)AND(vt2.c0)))AND(0X44d26f02)))>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4))))) ORDER BY ((((((vt1.c0))==((vt1.lid)))))>=((CASE rt0.c3  WHEN vt1.c0 THEN vt1.lid END)))  NULLS FIRST, CASE WHEN CHAR(rt0.c4, vt2.c0, vt1.lid) THEN ((rt0.c0)-(rt0.c2)) END ASC;
SELECT COUNT(*) FROM rt0, vt1, vt0, vt2 WHERE (CASE CAST(vt2.c0 AS TEXT)  WHEN ((((((((vt0.c0)AND(NULL)))AND(NULL)))OR(rt0.c1)))OR(rt0.c1)) THEN ((((vt2.c1)OR(vt2.c2)))OR(vt2.c2)) END) ORDER BY (rt0.c4 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt2.c0 AS TEXT)  WHEN ((((((((vt0.c0)AND(NULL)))AND(NULL)))OR(rt0.c1)))OR(rt0.c1)) THEN ((((vt2.c1)OR(vt2.c2)))OR(vt2.c2)) END) IS TRUE)  as count FROM rt0, vt1, vt0, vt2 ORDER BY (rt0.c4 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0, vt2 WHERE (CASE CAST(vt2.c0 AS TEXT)  WHEN ((((((((vt0.c0)AND(NULL)))AND(NULL)))OR(rt0.c1)))OR(rt0.c1)) THEN ((((vt2.c1)OR(vt2.c2)))OR(vt2.c2)) END) ORDER BY (rt0.c4 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt2.c0 AS TEXT)  WHEN ((((((((vt0.c0)AND(NULL)))AND(NULL)))OR(rt0.c1)))OR(rt0.c1)) THEN ((((vt2.c1)OR(vt2.c2)))OR(vt2.c2)) END) IS TRUE)  as count FROM rt0, vt1, vt0, vt2 ORDER BY (rt0.c4 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0, vt2 WHERE (CASE CAST(vt2.c0 AS TEXT)  WHEN ((((((((vt0.c0)AND(NULL)))AND(NULL)))OR(rt0.c1)))OR(rt0.c1)) THEN ((((vt2.c1)OR(vt2.c2)))OR(vt2.c2)) END) ORDER BY (rt0.c4 IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt0, vt2 WHERE (((((rt0.c1) NOT NULL))GLOB(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))GLOB(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0, rt0, vt2);
SELECT COUNT(*) FROM vt1, vt0, rt0, vt2 WHERE (((((rt0.c1) NOT NULL))GLOB(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))GLOB(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0, rt0, vt2);
SELECT COUNT(*) FROM vt1, vt0, rt0, vt2 WHERE (((((rt0.c1) NOT NULL))GLOB(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt2, vt0 WHERE (((((((((vt2.c1 COLLATE RTRIM)OR((((vt0.c0))==((vt0.c0))))))OR(((vt0.c0)<=(vt2.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt2.c1 COLLATE RTRIM)OR((((vt0.c0))==((vt0.c0))))))OR(((vt0.c0)<=(vt2.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c1))))) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE (((((((((vt2.c1 COLLATE RTRIM)OR((((vt0.c0))==((vt0.c0))))))OR(((vt0.c0)<=(vt2.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt2.c1 COLLATE RTRIM)OR((((vt0.c0))==((vt0.c0))))))OR(((vt0.c0)<=(vt2.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c1))))) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE (((((((((vt2.c1 COLLATE RTRIM)OR((((vt0.c0))==((vt0.c0))))))OR(((vt0.c0)<=(vt2.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((vt2.c0)LIKE(rt0.c3)) IN ()) RIGHT OUTER JOIN vt2 ON (- (((((((((rt0.c3)AND(rt0.c3)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)))) WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY (TRIM(DISTINCT vt2.c2) IN (rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt2.c0)LIKE(rt0.c3)) IN ()) RIGHT OUTER JOIN vt2 ON (- (((((((((rt0.c3)AND(rt0.c3)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)))) ORDER BY (TRIM(DISTINCT vt2.c2) IN (rt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((vt2.c0)LIKE(rt0.c3)) IN ()) RIGHT OUTER JOIN vt2 ON (- (((((((((rt0.c3)AND(rt0.c3)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)))) WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY (TRIM(DISTINCT vt2.c2) IN (rt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt2.c0)LIKE(rt0.c3)) IN ()) RIGHT OUTER JOIN vt2 ON (- (((((((((rt0.c3)AND(rt0.c3)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)))) ORDER BY (TRIM(DISTINCT vt2.c2) IN (rt0.c1)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((vt2.c0)LIKE(rt0.c3)) IN ()) RIGHT OUTER JOIN vt2 ON (- (((((((((rt0.c3)AND(rt0.c3)))AND(vt1.c0)))AND(rt0.c0)))OR(vt1.c0)))) WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY (TRIM(DISTINCT vt2.c2) IN (rt0.c1)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, vt2, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CHAR(rt0.c2, rt0.c3, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CHAR(rt0.c2, rt0.c3, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, vt2, rt0);
SELECT COUNT(*) FROM vt0, vt1, vt2, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CHAR(rt0.c2, rt0.c3, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CHAR(rt0.c2, rt0.c3, vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, vt2, rt0);
SELECT COUNT(*) FROM vt0, vt1, vt2, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CHAR(rt0.c2, rt0.c3, vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN ((~ (vt0.c1))) AND ((+ (0.5632291641534135)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) BETWEEN ((~ (vt0.c1))) AND ((+ (0.5632291641534135))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN ((~ (vt0.c1))) AND ((+ (0.5632291641534135)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) BETWEEN ((~ (vt0.c1))) AND ((+ (0.5632291641534135))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN ((~ (vt0.c1))) AND ((+ (0.5632291641534135)))));
SELECT ALL * FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (((((rt0.c0 COLLATE RTRIM)AND(vt2.c2)))AND(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)AND(vt2.c2)))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON vt0.c1);
SELECT ALL * FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (((((rt0.c0 COLLATE RTRIM)AND(vt2.c2)))AND(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)AND(vt2.c2)))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON vt0.c1);
SELECT ALL * FROM vt2, rt0, vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (((((rt0.c0 COLLATE RTRIM)AND(vt2.c2)))AND(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, vt2 WHERE (CASE WHEN vt2.c0 THEN vt2.c2 END COLLATE NOCASE) ORDER BY ((vt2.c0 COLLATE RTRIM) BETWEEN ((NOT (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(vt2.c1)))OR(vt1.lid))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt2.c0 THEN vt2.c2 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt2 ORDER BY ((vt2.c0 COLLATE RTRIM) BETWEEN ((NOT (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(vt2.c1)))OR(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt1, vt2 WHERE (CASE WHEN vt2.c0 THEN vt2.c2 END COLLATE NOCASE) ORDER BY ((vt2.c0 COLLATE RTRIM) BETWEEN ((NOT (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(vt2.c1)))OR(vt1.lid))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt2.c0 THEN vt2.c2 END COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt2 ORDER BY ((vt2.c0 COLLATE RTRIM) BETWEEN ((NOT (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(vt2.c1)))OR(vt1.lid)))));
SELECT ALL COUNT(*) FROM vt1, vt2 WHERE (CASE WHEN vt2.c0 THEN vt2.c2 END COLLATE NOCASE) ORDER BY ((vt2.c0 COLLATE RTRIM) BETWEEN ((NOT (vt1.c0))) AND (((((((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))OR(vt2.c1)))OR(vt1.lid))));
SELECT * FROM rt0, vt1, vt2, vt0 WHERE (((((((vt2.c2) BETWEEN (rt0.c1) AND (NULL)))AND((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c2) BETWEEN (rt0.c1) AND (NULL)))AND((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0, vt1, vt2, vt0);
SELECT * FROM rt0, vt1, vt2, vt0 WHERE (((((((vt2.c2) BETWEEN (rt0.c1) AND (NULL)))AND((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c2) BETWEEN (rt0.c1) AND (NULL)))AND((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0, vt1, vt2, vt0);
SELECT * FROM rt0, vt1, vt2, vt0 WHERE (((((((vt2.c2) BETWEEN (rt0.c1) AND (NULL)))AND((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END)));
SELECT * FROM vt2 WHERE (((CAST(vt2.c1 AS REAL)) BETWEEN (((vt2.c2) ISNULL)) AND (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c1 AS REAL)) BETWEEN (((vt2.c2) ISNULL)) AND (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c2 END))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (((CAST(vt2.c1 AS REAL)) BETWEEN (((vt2.c2) ISNULL)) AND (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c1 AS REAL)) BETWEEN (((vt2.c2) ISNULL)) AND (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c2 END))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (((CAST(vt2.c1 AS REAL)) BETWEEN (((vt2.c2) ISNULL)) AND (CASE vt2.c1  WHEN vt2.c2 THEN vt2.c2 END)));
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) NOT BETWEEN (rt0.c3) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (((rt0.c0 IN (vt1.lid))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (rt0.c3) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0 IN (vt1.lid))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) NOT BETWEEN (rt0.c3) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (((rt0.c0 IN (vt1.lid))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (rt0.c3) AND (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0 IN (vt1.lid))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) NOT BETWEEN (rt0.c3) AND (vt1.c0)) COLLATE RTRIM) ORDER BY (((rt0.c0 IN (vt1.lid))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN json_patch(vt0.c1, vt0.c0) THEN ((vt0.c1)<(vt0.c0)) END) ORDER BY (((((vt0.c0) NOTNULL), (vt0.c1 IN ()), (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))>=((vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()), UPPER(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_patch(vt0.c1, vt0.c0) THEN ((vt0.c1)<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOTNULL), (vt0.c1 IN ()), (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))>=((vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()), UPPER(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN json_patch(vt0.c1, vt0.c0) THEN ((vt0.c1)<(vt0.c0)) END) ORDER BY (((((vt0.c0) NOTNULL), (vt0.c1 IN ()), (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))>=((vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()), UPPER(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN json_patch(vt0.c1, vt0.c0) THEN ((vt0.c1)<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOTNULL), (vt0.c1 IN ()), (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1)))))>=((vt0.c0 COLLATE RTRIM, (vt0.c0 IN ()), UPPER(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE RTRIM WHERE (((((((rt0.c3) BETWEEN (vt0.c1) AND (vt2.c0)))AND((- (vt2.c2)))))AND(((vt2.c0)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) BETWEEN (vt0.c1) AND (vt2.c0)))AND((- (vt2.c2)))))AND(((vt2.c0)<<(rt0.c0))))) IS TRUE)  as count FROM vt1, vt2, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE RTRIM WHERE (((((((rt0.c3) BETWEEN (vt0.c1) AND (vt2.c0)))AND((- (vt2.c2)))))AND(((vt2.c0)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) BETWEEN (vt0.c1) AND (vt2.c0)))AND((- (vt2.c2)))))AND(((vt2.c0)<<(rt0.c0))))) IS TRUE)  as count FROM vt1, vt2, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1) NOTNULL) COLLATE RTRIM WHERE (((((((rt0.c3) BETWEEN (vt0.c1) AND (vt2.c0)))AND((- (vt2.c2)))))AND(((vt2.c0)<<(rt0.c0)))));
SELECT ALL * FROM vt2, vt1 WHERE (((((vt1.lid) ISNULL))-(LOWER(vt2.c1)))) ORDER BY ((((CAST(vt1.lid AS TEXT))OR(LAST_INSERT_ROWID())))AND(vt1.c0)) ASC, ((((((((((((0.9238446505049195)OR(vt1.lid)))AND(vt1.lid)))AND(vt1.lid)))OR(vt2.c0)))AND(((vt1.c0)OR(vt1.lid)))))AND(vt1.c0)) DESC, vt2.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) ISNULL))-(LOWER(vt2.c1)))) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((((CAST(vt1.lid AS TEXT))OR(LAST_INSERT_ROWID())))AND(vt1.c0)) ASC, ((((((((((((0.9238446505049195)OR(vt1.lid)))AND(vt1.lid)))AND(vt1.lid)))OR(vt2.c0)))AND(((vt1.c0)OR(vt1.lid)))))AND(vt1.c0)) DESC, vt2.c2 DESC);
SELECT ALL * FROM vt2, vt1 WHERE (((((vt1.lid) ISNULL))-(LOWER(vt2.c1)))) ORDER BY ((((CAST(vt1.lid AS TEXT))OR(LAST_INSERT_ROWID())))AND(vt1.c0)) ASC, ((((((((((((0.9238446505049195)OR(vt1.lid)))AND(vt1.lid)))AND(vt1.lid)))OR(vt2.c0)))AND(((vt1.c0)OR(vt1.lid)))))AND(vt1.c0)) DESC, vt2.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) ISNULL))-(LOWER(vt2.c1)))) IS TRUE)  as count FROM vt2, vt1 ORDER BY ((((CAST(vt1.lid AS TEXT))OR(LAST_INSERT_ROWID())))AND(vt1.c0)) ASC, ((((((((((((0.9238446505049195)OR(vt1.lid)))AND(vt1.lid)))AND(vt1.lid)))OR(vt2.c0)))AND(((vt1.c0)OR(vt1.lid)))))AND(vt1.c0)) DESC, vt2.c2 DESC);
SELECT ALL * FROM vt2, vt1 WHERE (((((vt1.lid) ISNULL))-(LOWER(vt2.c1)))) ORDER BY ((((CAST(vt1.lid AS TEXT))OR(LAST_INSERT_ROWID())))AND(vt1.c0)) ASC, ((((((((((((0.9238446505049195)OR(vt1.lid)))AND(vt1.lid)))AND(vt1.lid)))OR(vt2.c0)))AND(((vt1.c0)OR(vt1.lid)))))AND(vt1.c0)) DESC, vt2.c2 DESC;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.lid)))OR(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END WHEN ((vt1.lid) ISNULL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.lid WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.lid) ISNULL) END) ORDER BY ((((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)AND((NOT (vt0.c1)))))OR(((vt1.lid) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.lid)))OR(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END WHEN ((vt1.lid) ISNULL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.lid WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.lid) ISNULL) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)AND((NOT (vt0.c1)))))OR(((vt1.lid) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.lid)))OR(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END WHEN ((vt1.lid) ISNULL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.lid WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.lid) ISNULL) END) ORDER BY ((((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)AND((NOT (vt0.c1)))))OR(((vt1.lid) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.lid)))OR(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END WHEN ((vt1.lid) ISNULL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.lid WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.lid) ISNULL) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)AND((NOT (vt0.c1)))))OR(((vt1.lid) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.lid)))OR(vt0.c0)) THEN CASE vt1.lid  WHEN vt0.c1 THEN vt0.c0 ELSE x'' END WHEN ((vt1.lid) ISNULL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.lid WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.lid) ISNULL) END) ORDER BY ((((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)AND((NOT (vt0.c1)))))OR(((vt1.lid) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM vt1, vt2, vt0, rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))AND(vt2.c2)))AND((vt0.c1 IN (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS INTEGER))AND(vt2.c2)))AND((vt0.c1 IN (vt2.c0))))) IS TRUE)  as count FROM vt1, vt2, vt0, rt0);
SELECT ALL * FROM vt1, vt2, vt0, rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))AND(vt2.c2)))AND((vt0.c1 IN (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS INTEGER))AND(vt2.c2)))AND((vt0.c1 IN (vt2.c0))))) IS TRUE)  as count FROM vt1, vt2, vt0, rt0);
SELECT ALL * FROM vt1, vt2, vt0, rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))AND(vt2.c2)))AND((vt0.c1 IN (vt2.c0)))));
SELECT COUNT(*) FROM vt1, vt2, vt0 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT COUNT(*) FROM vt1, vt2, vt0 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT COUNT(*) FROM vt1, vt2, vt0 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM vt2, vt0, vt1 WHERE (((((vt0.c0)IS NOT(vt0.c1))) ISNULL)) ORDER BY ((CASE vt2.c1  WHEN vt2.c1 THEN vt0.c0 WHEN vt2.c2 THEN vt1.lid WHEN vt2.c0 THEN vt2.c0 ELSE vt1.lid END)<=(vt2.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c0 END)*(vt2.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt2, vt0, vt1 ORDER BY ((CASE vt2.c1  WHEN vt2.c1 THEN vt0.c0 WHEN vt2.c2 THEN vt1.lid WHEN vt2.c0 THEN vt2.c0 ELSE vt1.lid END)<=(vt2.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c0 END)*(vt2.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt0, vt1 WHERE (((((vt0.c0)IS NOT(vt0.c1))) ISNULL)) ORDER BY ((CASE vt2.c1  WHEN vt2.c1 THEN vt0.c0 WHEN vt2.c2 THEN vt1.lid WHEN vt2.c0 THEN vt2.c0 ELSE vt1.lid END)<=(vt2.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c0 END)*(vt2.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt2, vt0, vt1 ORDER BY ((CASE vt2.c1  WHEN vt2.c1 THEN vt0.c0 WHEN vt2.c2 THEN vt1.lid WHEN vt2.c0 THEN vt2.c0 ELSE vt1.lid END)<=(vt2.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c0 END)*(vt2.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt0, vt1 WHERE (((((vt0.c0)IS NOT(vt0.c1))) ISNULL)) ORDER BY ((CASE vt2.c1  WHEN vt2.c1 THEN vt0.c0 WHEN vt2.c2 THEN vt1.lid WHEN vt2.c0 THEN vt2.c0 ELSE vt1.lid END)<=(vt2.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((CASE vt2.c2  WHEN vt2.c0 THEN vt2.c0 END)*(vt2.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM vt2, vt0, vt1 WHERE (CAST((((vt2.c0, vt1.c0, vt2.c1))>=((vt0.c0, vt1.c0, vt1.lid))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt2.c0, vt1.c0, vt2.c1))>=((vt0.c0, vt1.c0, vt1.lid))) AS REAL)) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT * FROM vt2, vt0, vt1 WHERE (CAST((((vt2.c0, vt1.c0, vt2.c1))>=((vt0.c0, vt1.c0, vt1.lid))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((vt2.c0, vt1.c0, vt2.c1))>=((vt0.c0, vt1.c0, vt1.lid))) AS REAL)) IS TRUE)  as count FROM vt2, vt0, vt1);
SELECT * FROM vt2, vt0, vt1 WHERE (CAST((((vt2.c0, vt1.c0, vt2.c1))>=((vt0.c0, vt1.c0, vt1.lid))) AS REAL));
SELECT * FROM vt2, vt1 WHERE (((((vt2.c1) ISNULL)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt2.c2) BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((((((vt2.c1)OR(vt1.c0)))AND(vt1.c0)), (~ (vt2.c2)), vt2.c0 COLLATE RTRIM))<((((vt2.c0) IS FALSE), vt1.lid, (vt1.lid IN ())))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt2.c2 THEN 1.868091306E9 END THEN ((vt1.lid) NOTNULL) END  NULLS LAST, json_remove(LOWER(vt2.c1), CAST(0x7a52f9 AS INTEGER))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c1) ISNULL)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt2.c2) BETWEEN (vt1.c0) AND (x''))))) IS TRUE)  as count FROM vt2, vt1 ORDER BY (((((((vt2.c1)OR(vt1.c0)))AND(vt1.c0)), (~ (vt2.c2)), vt2.c0 COLLATE RTRIM))<((((vt2.c0) IS FALSE), vt1.lid, (vt1.lid IN ())))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt2.c2 THEN 1.868091306E9 END THEN ((vt1.lid) NOTNULL) END  NULLS LAST, json_remove(LOWER(vt2.c1), CAST(0X7a52f9 AS INTEGER))  NULLS LAST);
SELECT * FROM vt2, vt1 WHERE (((((vt2.c1) ISNULL)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt2.c2) BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((((((vt2.c1)OR(vt1.c0)))AND(vt1.c0)), (~ (vt2.c2)), vt2.c0 COLLATE RTRIM))<((((vt2.c0) IS FALSE), vt1.lid, (vt1.lid IN ())))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt2.c2 THEN 1.868091306E9 END THEN ((vt1.lid) NOTNULL) END  NULLS LAST, json_remove(LOWER(vt2.c1), CAST(0x7a52f9 AS INTEGER))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c1) ISNULL)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt2.c2) BETWEEN (vt1.c0) AND (x''))))) IS TRUE)  as count FROM vt2, vt1 ORDER BY (((((((vt2.c1)OR(vt1.c0)))AND(vt1.c0)), (~ (vt2.c2)), vt2.c0 COLLATE RTRIM))<((((vt2.c0) IS FALSE), vt1.lid, (vt1.lid IN ())))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt2.c2 THEN 1.868091306E9 END THEN ((vt1.lid) NOTNULL) END  NULLS LAST, json_remove(LOWER(vt2.c1), CAST(0X7a52f9 AS INTEGER))  NULLS LAST);
SELECT * FROM vt2, vt1 WHERE (((((vt2.c1) ISNULL)) BETWEEN (((vt1.c0) ISNULL)) AND (((vt2.c2) BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((((((vt2.c1)OR(vt1.c0)))AND(vt1.c0)), (~ (vt2.c2)), vt2.c0 COLLATE RTRIM))<((((vt2.c0) IS FALSE), vt1.lid, (vt1.lid IN ())))) DESC  NULLS LAST, CASE WHEN CASE WHEN vt2.c2 THEN 1.868091306E9 END THEN ((vt1.lid) NOTNULL) END  NULLS LAST, json_remove(LOWER(vt2.c1), CAST(0x7a52f9 AS INTEGER))  NULLS LAST;
SELECT ALL * FROM vt2, vt0 WHERE ((((vt2.c0)) BETWEEN (('is')) AND ((TYPEOF(DISTINCT vt2.c2))))) ORDER BY -736125345  NULLS LAST, SUBSTR(CAST(vt2.c1 AS REAL), vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN (('is')) AND ((TYPEOF(DISTINCT vt2.c2))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY -736125345  NULLS LAST, SUBSTR(CAST(vt2.c1 AS REAL), vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt2, vt0 WHERE ((((vt2.c0)) BETWEEN (('is')) AND ((TYPEOF(DISTINCT vt2.c2))))) ORDER BY -736125345  NULLS LAST, SUBSTR(CAST(vt2.c1 AS REAL), vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN (('is')) AND ((TYPEOF(DISTINCT vt2.c2))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY -736125345  NULLS LAST, SUBSTR(CAST(vt2.c1 AS REAL), vt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0))<((vt0.c1))))>=((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt0.c1))))>=((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0))<((vt0.c1))))>=((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt0.c1))))>=((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0))<((vt0.c1))))>=((~ (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.lid AS TEXT) IN ((vt1.lid IN ())))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((- ('KF]e룯o'))) AND (vt1.c0))  NULLS LAST, (- (CASE WHEN vt1.lid THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.lid AS TEXT) IN ((vt1.lid IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((- ('KF]e룯o'))) AND (vt1.c0))  NULLS LAST, (- (CASE WHEN vt1.lid THEN vt1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.lid AS TEXT) IN ((vt1.lid IN ())))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((- ('KF]e룯o'))) AND (vt1.c0))  NULLS LAST, (- (CASE WHEN vt1.lid THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.lid AS TEXT) IN ((vt1.lid IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((- ('KF]e룯o'))) AND (vt1.c0))  NULLS LAST, (- (CASE WHEN vt1.lid THEN vt1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.lid AS TEXT) IN ((vt1.lid IN ())))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN ((- ('KF]e룯o'))) AND (vt1.c0))  NULLS LAST, (- (CASE WHEN vt1.lid THEN vt1.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (ABS(DISTINCT ((vt1.c0)/(vt1.c0)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt1.c0)/(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (ABS(DISTINCT ((vt1.c0)/(vt1.c0)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt1.c0)/(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (ABS(DISTINCT ((vt1.c0)/(vt1.c0)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 WHERE (((-7.43025238E8 COLLATE RTRIM)AND(-2131053959)));
SELECT SUM(count) FROM (SELECT ALL ((((-7.43025238E8 COLLATE RTRIM)AND(-2131053959))) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 WHERE (((-7.43025238E8 COLLATE RTRIM)AND(-2131053959)));
SELECT SUM(count) FROM (SELECT ALL ((((-7.43025238E8 COLLATE RTRIM)AND(-2131053959))) IS TRUE)  as count FROM vt1, vt2, vt0);
SELECT ALL COUNT(*) FROM vt1, vt2, vt0 WHERE (((-7.43025238E8 COLLATE RTRIM)AND(-2131053959)));
SELECT * FROM vt2 WHERE (CAST(vt2.c2 COLLATE BINARY AS TEXT)) ORDER BY vt2.c1;
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt2 ORDER BY vt2.c1);
SELECT * FROM vt2 WHERE (CAST(vt2.c2 COLLATE BINARY AS TEXT)) ORDER BY vt2.c1;
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c2 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt2 ORDER BY vt2.c1);
SELECT * FROM vt2 WHERE (CAST(vt2.c2 COLLATE BINARY AS TEXT)) ORDER BY vt2.c1;
SELECT ALL COUNT(*) FROM rt0, vt2, vt1 WHERE (vt2.c1) ORDER BY STRFTIME(LIKELY(vt2.c1), rt0.c2 COLLATE BINARY, (((rt0.c2)) BETWEEN ((vt2.c2)) AND ((rt0.c0))), ((rt0.c0) IS FALSE), NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c1) IS TRUE)  as count FROM rt0, vt2, vt1 ORDER BY STRFTIME(LIKELY(vt2.c1), rt0.c2 COLLATE BINARY, (((rt0.c2)) BETWEEN ((vt2.c2)) AND ((rt0.c0))), ((rt0.c0) IS FALSE), NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt2, vt1 WHERE (vt2.c1) ORDER BY STRFTIME(LIKELY(vt2.c1), rt0.c2 COLLATE BINARY, (((rt0.c2)) BETWEEN ((vt2.c2)) AND ((rt0.c0))), ((rt0.c0) IS FALSE), NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c1) IS TRUE)  as count FROM rt0, vt2, vt1 ORDER BY STRFTIME(LIKELY(vt2.c1), rt0.c2 COLLATE BINARY, (((rt0.c2)) BETWEEN ((vt2.c2)) AND ((rt0.c0))), ((rt0.c0) IS FALSE), NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt2, vt1 WHERE (vt2.c1) ORDER BY STRFTIME(LIKELY(vt2.c1), rt0.c2 COLLATE BINARY, (((rt0.c2)) BETWEEN ((vt2.c2)) AND ((rt0.c0))), ((rt0.c0) IS FALSE), NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN vt1 ON (~ ((('+8') NOT BETWEEN (vt2.c2) AND (vt2.c2)))) WHERE (CASE WHEN CAST(0.7783603509422742 AS NUMERIC) THEN ((((((((vt2.c2)AND(vt1.lid)))OR(vt2.c2)))OR(vt1.lid)))AND(x'')) ELSE ((vt2.c2)<=(vt2.c1)) END) ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS LAST, (((((vt2.c1))>=((vt2.c0)))) NOT BETWEEN (vt2.c2 COLLATE NOCASE) AND (vt2.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(0.7783603509422742 AS NUMERIC) THEN ((((((((vt2.c2)AND(vt1.lid)))OR(vt2.c2)))OR(vt1.lid)))AND(x'')) ELSE ((vt2.c2)<=(vt2.c1)) END) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt1 ON (~ ((('+8') NOT BETWEEN (vt2.c2) AND (vt2.c2)))) ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS LAST, (((((vt2.c1))>=((vt2.c0)))) NOT BETWEEN (vt2.c2 COLLATE NOCASE) AND (vt2.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN vt1 ON (~ ((('+8') NOT BETWEEN (vt2.c2) AND (vt2.c2)))) WHERE (CASE WHEN CAST(0.7783603509422742 AS NUMERIC) THEN ((((((((vt2.c2)AND(vt1.lid)))OR(vt2.c2)))OR(vt1.lid)))AND(x'')) ELSE ((vt2.c2)<=(vt2.c1)) END) ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS LAST, (((((vt2.c1))>=((vt2.c0)))) NOT BETWEEN (vt2.c2 COLLATE NOCASE) AND (vt2.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(0.7783603509422742 AS NUMERIC) THEN ((((((((vt2.c2)AND(vt1.lid)))OR(vt2.c2)))OR(vt1.lid)))AND(x'')) ELSE ((vt2.c2)<=(vt2.c1)) END) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt1 ON (~ ((('+8') NOT BETWEEN (vt2.c2) AND (vt2.c2)))) ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS LAST, (((((vt2.c1))>=((vt2.c0)))) NOT BETWEEN (vt2.c2 COLLATE NOCASE) AND (vt2.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN vt1 ON (~ ((('+8') NOT BETWEEN (vt2.c2) AND (vt2.c2)))) WHERE (CASE WHEN CAST(0.7783603509422742 AS NUMERIC) THEN ((((((((vt2.c2)AND(vt1.lid)))OR(vt2.c2)))OR(vt1.lid)))AND(x'')) ELSE ((vt2.c2)<=(vt2.c1)) END) ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL)  NULLS LAST, (((((vt2.c1))>=((vt2.c0)))) NOT BETWEEN (vt2.c2 COLLATE NOCASE) AND (vt2.c2 COLLATE NOCASE));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) AS BLOB)) ORDER BY CAST(vt1.c0 AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) AS BLOB)) ORDER BY CAST(vt1.c0 AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((((vt1.lid)AND(vt1.lid)))OR(vt1.lid)) AS BLOB)) ORDER BY CAST(vt1.c0 AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 INNER JOIN vt0 ON x'' WHERE (((+ (vt0.c1)) IN ())) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt2, vt1, rt0 INNER JOIN vt0 ON x'' ORDER BY vt1.lid);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 INNER JOIN vt0 ON x'' WHERE (((+ (vt0.c1)) IN ())) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt2, vt1, rt0 INNER JOIN vt0 ON x'' ORDER BY vt1.lid);
SELECT ALL COUNT(*) FROM vt2, vt1, rt0 INNER JOIN vt0 ON x'' WHERE (((+ (vt0.c1)) IN ())) ORDER BY vt1.lid;
SELECT COUNT(*) FROM vt0, vt2, vt1 WHERE ((((((((((((0Xffffffffee565905))<=((vt0.c1))))AND(CAST(vt2.c2 AS REAL))))AND(vt2.c1 COLLATE BINARY)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))OR((+ (vt2.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((((0xffffffffee565905))<=((vt0.c1))))AND(CAST(vt2.c2 AS REAL))))AND(vt2.c1 COLLATE BINARY)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))OR((+ (vt2.c0))))) IS TRUE)  as count FROM vt0, vt2 NOT INDEXED, vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL));
SELECT COUNT(*) FROM vt0, vt2, vt1 WHERE ((((((((((((0Xffffffffee565905))<=((vt0.c1))))AND(CAST(vt2.c2 AS REAL))))AND(vt2.c1 COLLATE BINARY)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))OR((+ (vt2.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((((((((((0xffffffffee565905))<=((vt0.c1))))AND(CAST(vt2.c2 AS REAL))))AND(vt2.c1 COLLATE BINARY)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))OR((+ (vt2.c0))))) IS TRUE)  as count FROM vt0, vt2 NOT INDEXED, vt1 ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL));
SELECT COUNT(*) FROM vt0, vt2, vt1 WHERE ((((((((((((0Xffffffffee565905))<=((vt0.c1))))AND(CAST(vt2.c2 AS REAL))))AND(vt2.c1 COLLATE BINARY)))OR(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))OR((+ (vt2.c0))))) ORDER BY CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL);
SELECT * FROM vt0, vt2, rt0, vt1 WHERE ((((((rt0.c0))=((vt2.c2))))>(PRINTF(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))=((vt2.c2))))>(PRINTF(rt0.c4)))) IS TRUE)  as count FROM vt0, vt2, rt0, vt1);
SELECT * FROM vt0, vt2, rt0, vt1 WHERE ((((((rt0.c0))=((vt2.c2))))>(PRINTF(rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))=((vt2.c2))))>(PRINTF(rt0.c4)))) IS TRUE)  as count FROM vt0, vt2, rt0, vt1);
SELECT * FROM vt0, vt2, rt0, vt1 WHERE ((((((rt0.c0))=((vt2.c2))))>(PRINTF(rt0.c4))));
SELECT * FROM vt0, vt1, rt0, vt2 WHERE (CASE ((vt1.lid) NOT NULL)  WHEN ((((((((rt0.c3)AND(rt0.c2)))AND(vt2.c1)))OR(rt0.c3)))OR(rt0.c2)) THEN CAST(vt2.c1 AS NUMERIC) WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (vt2.c0)) THEN vt0.c1 COLLATE RTRIM WHEN ((vt2.c0)<=(rt0.c3)) THEN ((((rt0.c3)OR(vt2.c0)))AND(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END) ORDER BY '-273495896' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.lid) NOT NULL)  WHEN ((((((((rt0.c3)AND(rt0.c2)))AND(vt2.c1)))OR(rt0.c3)))OR(rt0.c2)) THEN CAST(vt2.c1 AS NUMERIC) WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (vt2.c0)) THEN vt0.c1 COLLATE RTRIM WHEN ((vt2.c0)<=(rt0.c3)) THEN ((((rt0.c3)OR(vt2.c0)))AND(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, vt1, rt0, vt2 ORDER BY '-273495896' COLLATE BINARY DESC);
SELECT * FROM vt0, vt1, rt0, vt2 WHERE (CASE ((vt1.lid) NOT NULL)  WHEN ((((((((rt0.c3)AND(rt0.c2)))AND(vt2.c1)))OR(rt0.c3)))OR(rt0.c2)) THEN CAST(vt2.c1 AS NUMERIC) WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (vt2.c0)) THEN vt0.c1 COLLATE RTRIM WHEN ((vt2.c0)<=(rt0.c3)) THEN ((((rt0.c3)OR(vt2.c0)))AND(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END) ORDER BY '-273495896' COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.lid) NOT NULL)  WHEN ((((((((rt0.c3)AND(rt0.c2)))AND(vt2.c1)))OR(rt0.c3)))OR(rt0.c2)) THEN CAST(vt2.c1 AS NUMERIC) WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (vt2.c0)) THEN vt0.c1 COLLATE RTRIM WHEN ((vt2.c0)<=(rt0.c3)) THEN ((((rt0.c3)OR(vt2.c0)))AND(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, vt1, rt0, vt2 ORDER BY '-273495896' COLLATE BINARY DESC);
SELECT * FROM vt0, vt1, rt0, vt2 WHERE (CASE ((vt1.lid) NOT NULL)  WHEN ((((((((rt0.c3)AND(rt0.c2)))AND(vt2.c1)))OR(rt0.c3)))OR(rt0.c2)) THEN CAST(vt2.c1 AS NUMERIC) WHEN ((vt0.c1) BETWEEN (rt0.c0) AND (vt2.c0)) THEN vt0.c1 COLLATE RTRIM WHEN ((vt2.c0)<=(rt0.c3)) THEN ((((rt0.c3)OR(vt2.c0)))AND(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END) ORDER BY '-273495896' COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, vt2, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0, vt2, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (CAST((NOT (vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.lid) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'')))>(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'')))>(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.lid) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'')))>(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'')))>(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.lid) ORDER BY ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (x'')))>(((vt1.c0)LIKE(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((NULL)OR(vt1.c0)))AND(vt1.lid)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(vt1.c0)))AND(vt1.lid)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((NULL)OR(vt1.c0)))AND(vt1.lid)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(vt1.c0)))AND(vt1.lid)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((NULL)OR(vt1.c0)))AND(vt1.lid)) COLLATE NOCASE);
SELECT * FROM vt2 CROSS JOIN vt0 ON ((vt2.c1)AND(((vt0.c1)*(vt0.c0)))) FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) IS FALSE) WHERE ((NOT ((((vt0.c0)) BETWEEN ((0.16744911908179771)) AND ((vt2.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0)) BETWEEN ((0.16744911908179771)) AND ((vt2.c2)))))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON ((vt2.c1)AND(((vt0.c1)*(vt0.c0)))) FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) IS FALSE));
SELECT * FROM vt2 CROSS JOIN vt0 ON ((vt2.c1)AND(((vt0.c1)*(vt0.c0)))) FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) IS FALSE) WHERE ((NOT ((((vt0.c0)) BETWEEN ((0.16744911908179771)) AND ((vt2.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0)) BETWEEN ((0.16744911908179771)) AND ((vt2.c2)))))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON ((vt2.c1)AND(((vt0.c1)*(vt0.c0)))) FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) IS FALSE));
SELECT * FROM vt2 CROSS JOIN vt0 ON ((vt2.c1)AND(((vt0.c1)*(vt0.c0)))) FULL OUTER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) IS FALSE) WHERE ((NOT ((((vt0.c0)) BETWEEN ((0.16744911908179771)) AND ((vt2.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, vt2 WHERE ((((((vt2.c1 IN ()))AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN rt0.c4 THEN vt2.c0 ELSE vt2.c0 END)))AND(vt1.c0))) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT (((((((vt2.c1 IN ()))AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN rt0.c4 THEN vt2.c0 ELSE vt2.c0 END)))AND(vt1.c0))) IS TRUE)  as count FROM rt0, vt0, vt1, vt2 ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, vt2 WHERE ((((((vt2.c1 IN ()))AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN rt0.c4 THEN vt2.c0 ELSE vt2.c0 END)))AND(vt1.c0))) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT (((((((vt2.c1 IN ()))AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN rt0.c4 THEN vt2.c0 ELSE vt2.c0 END)))AND(vt1.c0))) IS TRUE)  as count FROM rt0, vt0, vt1, vt2 ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, vt2 WHERE ((((((vt2.c1 IN ()))AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN rt0.c4 THEN vt2.c0 ELSE vt2.c0 END)))AND(vt1.c0))) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ());
SELECT * FROM vt2 WHERE (x'2a8e') ORDER BY ((((((((CAST(vt2.c1 AS NUMERIC))AND(COALESCE(DISTINCT vt2.c1, NULL))))OR('/')))AND((- (vt2.c1)))))OR(((((vt2.c2)AND(vt2.c2)))AND(vt2.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'2a8e') IS TRUE)  as count FROM vt2 ORDER BY ((((((((CAST(vt2.c1 AS NUMERIC))AND(COALESCE(DISTINCT vt2.c1, NULL))))OR('/')))AND((- (vt2.c1)))))OR(((((vt2.c2)AND(vt2.c2)))AND(vt2.c2)))) DESC);
SELECT * FROM vt2 WHERE (x'2a8e') ORDER BY ((((((((CAST(vt2.c1 AS NUMERIC))AND(COALESCE(DISTINCT vt2.c1, NULL))))OR('/')))AND((- (vt2.c1)))))OR(((((vt2.c2)AND(vt2.c2)))AND(vt2.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'2a8e') IS TRUE)  as count FROM vt2 ORDER BY ((((((((CAST(vt2.c1 AS NUMERIC))AND(COALESCE(DISTINCT vt2.c1, NULL))))OR('/')))AND((- (vt2.c1)))))OR(((((vt2.c2)AND(vt2.c2)))AND(vt2.c2)))) DESC);
SELECT * FROM vt2 WHERE (x'2a8e') ORDER BY ((((((((CAST(vt2.c1 AS NUMERIC))AND(COALESCE(DISTINCT vt2.c1, NULL))))OR('/')))AND((- (vt2.c1)))))OR(((((vt2.c2)AND(vt2.c2)))AND(vt2.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3))>((rt0.c2)))) IS TRUE)) ORDER BY (- ((((rt0.c3))>((0.8379048692414952))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>((rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c3))>((0.8379048692414952))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3))>((rt0.c2)))) IS TRUE)) ORDER BY (- ((((rt0.c3))>((0.8379048692414952))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>((rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (- ((((rt0.c3))>((0.8379048692414952))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3))>((rt0.c2)))) IS TRUE)) ORDER BY (- ((((rt0.c3))>((0.8379048692414952))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)/('244652500'))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)/('244652500'))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)/('244652500'))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)/('244652500'))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)/('244652500'))) ISNULL));
SELECT ALL * FROM rt0, vt2, vt0, vt1 WHERE (UNLIKELY(DISTINCT rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt2, vt0, vt1);
SELECT ALL * FROM rt0, vt2, vt0, vt1 WHERE (UNLIKELY(DISTINCT rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt2, vt0, vt1);
SELECT ALL * FROM rt0, vt2, vt0, vt1 WHERE (UNLIKELY(DISTINCT rt0.c3) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE ((((vt1.c0))==((((vt1.c0) NOT NULL))))) ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN (vt2.c0 IN (vt2.c1, rt0.c4)) THEN rt0.c3 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))==((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM rt0, vt1, vt2 ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN (vt2.c0 IN (vt2.c1, rt0.c4)) THEN rt0.c3 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE ((((vt1.c0))==((((vt1.c0) NOT NULL))))) ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN (vt2.c0 IN (vt2.c1, rt0.c4)) THEN rt0.c3 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))==((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM rt0, vt1, vt2 ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN (vt2.c0 IN (vt2.c1, rt0.c4)) THEN rt0.c3 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt2 WHERE ((((vt1.c0))==((((vt1.c0) NOT NULL))))) ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN (vt2.c0 IN (vt2.c1, rt0.c4)) THEN rt0.c3 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT ALL * FROM vt2, rt0 WHERE (CAST((vt2.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt2.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL * FROM vt2, rt0 WHERE (CAST((vt2.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt2.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL * FROM vt2, rt0 WHERE (CAST((vt2.c0 IN ()) AS INTEGER));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) WHERE (((((((((((vt1.c0) IS TRUE))OR(HEX(DISTINCT vt0.c0))))OR((((vt0.c1))=((vt1.lid))))))AND(((vt1.c0) ISNULL))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) IS TRUE))OR(HEX(DISTINCT vt0.c0))))OR((((vt0.c1))=((vt1.lid))))))AND(((vt1.c0) ISNULL))))OR(vt0.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) WHERE (((((((((((vt1.c0) IS TRUE))OR(HEX(DISTINCT vt0.c0))))OR((((vt0.c1))=((vt1.lid))))))AND(((vt1.c0) ISNULL))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) IS TRUE))OR(HEX(DISTINCT vt0.c0))))OR((((vt0.c1))=((vt1.lid))))))AND(((vt1.c0) ISNULL))))OR(vt0.c0))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt1.c0 AS INTEGER) IN ()) WHERE (((((((((((vt1.c0) IS TRUE))OR(HEX(DISTINCT vt0.c0))))OR((((vt0.c1))=((vt1.lid))))))AND(((vt1.c0) ISNULL))))OR(vt0.c0)));
SELECT ALL * FROM rt0, vt2, vt1 WHERE (((vt1.lid) NOT BETWEEN (x'bcec') AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid) NOT BETWEEN (x'bcec') AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt2, vt1);
SELECT ALL * FROM rt0, vt2, vt1 WHERE (((vt1.lid) NOT BETWEEN (x'bcec') AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid) NOT BETWEEN (x'bcec') AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt2, vt1);
SELECT ALL * FROM rt0, vt2, vt1 WHERE (((vt1.lid) NOT BETWEEN (x'bcec') AND (rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON 'Xe^,s\r/S' COLLATE NOCASE FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN (((vt1.c0) NOT NULL))) WHERE ((HEX(vt1.lid) IN (((rt0.c0) NOT NULL), ((rt0.c3) BETWEEN (vt0.c1) AND (vt1.c0)), vt1.c0))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt1.lid)OR(0.3768037788442764)))OR(vt0.c1)))OR(vt0.c1)))OR(0xffffffffce57fbb1)))) AND (((~ (vt1.lid)))))  NULLS LAST, (((CAST(vt0.c0 AS BLOB)))<((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))))) ASC  NULLS FIRST, CASE WHEN vt1.lid THEN rt0.c3 WHEN vt0.c1 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1)IS NOT(0.33853759568086184)))>=(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((HEX(vt1.lid) IN (((rt0.c0) NOT NULL), ((rt0.c3) BETWEEN (vt0.c1) AND (vt1.c0)), vt1.c0))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON 'Xe^,s\r/S' COLLATE NOCASE FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN (((vt1.c0) NOT NULL))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt1.lid)OR(0.3768037788442764)))OR(vt0.c1)))OR(vt0.c1)))OR(0xffffffffce57fbb1)))) AND (((~ (vt1.lid)))))  NULLS LAST, (((CAST(vt0.c0 AS BLOB)))<((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))))) ASC  NULLS FIRST, CASE WHEN vt1.lid THEN rt0.c3 WHEN vt0.c1 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1)IS NOT(0.33853759568086184)))>=(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON 'Xe^,s\r/S' COLLATE NOCASE FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN (((vt1.c0) NOT NULL))) WHERE ((HEX(vt1.lid) IN (((rt0.c0) NOT NULL), ((rt0.c3) BETWEEN (vt0.c1) AND (vt1.c0)), vt1.c0))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt1.lid)OR(0.3768037788442764)))OR(vt0.c1)))OR(vt0.c1)))OR(0xffffffffce57fbb1)))) AND (((~ (vt1.lid)))))  NULLS LAST, (((CAST(vt0.c0 AS BLOB)))<((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))))) ASC  NULLS FIRST, CASE WHEN vt1.lid THEN rt0.c3 WHEN vt0.c1 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1)IS NOT(0.33853759568086184)))>=(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((HEX(vt1.lid) IN (((rt0.c0) NOT NULL), ((rt0.c3) BETWEEN (vt0.c1) AND (vt1.c0)), vt1.c0))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON 'Xe^,s\r/S' COLLATE NOCASE FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN (((vt1.c0) NOT NULL))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt1.lid)OR(0.3768037788442764)))OR(vt0.c1)))OR(vt0.c1)))OR(0xffffffffce57fbb1)))) AND (((~ (vt1.lid)))))  NULLS LAST, (((CAST(vt0.c0 AS BLOB)))<((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))))) ASC  NULLS FIRST, CASE WHEN vt1.lid THEN rt0.c3 WHEN vt0.c1 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1)IS NOT(0.33853759568086184)))>=(rt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON 'Xe^,s\r/S' COLLATE NOCASE FULL OUTER JOIN rt0 ON ((vt1.c0 IN ()) IN (((vt1.c0) NOT NULL))) WHERE ((HEX(vt1.lid) IN (((rt0.c0) NOT NULL), ((rt0.c3) BETWEEN (vt0.c1) AND (vt1.c0)), vt1.c0))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt1.lid)OR(0.3768037788442764)))OR(vt0.c1)))OR(vt0.c1)))OR(0xffffffffce57fbb1)))) AND (((~ (vt1.lid)))))  NULLS LAST, (((CAST(vt0.c0 AS BLOB)))<((((vt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))))) ASC  NULLS FIRST, CASE WHEN vt1.lid THEN rt0.c3 WHEN vt0.c1 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, ((((rt0.c1)IS NOT(0.33853759568086184)))>=(rt0.c2 COLLATE BINARY));
SELECT ALL * FROM vt0, rt0, vt1 INNER JOIN vt2 ON CASE WHEN (((rt0.c0, vt0.c0, vt2.c0)) BETWEEN ((rt0.c4, vt0.c1, vt0.c1)) AND ((rt0.c3, rt0.c3, x''))) THEN (((vt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))) WHEN x'' THEN CAST(rt0.c1 AS TEXT) WHEN RTRIM(rt0.c2) THEN ((vt1.c0)>(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END WHERE (CASE ((vt2.c1) IS FALSE)  WHEN vt0.c1 THEN (((vt2.c2))!=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN (('YG+*>c')) AND ((rt0.c4))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c1) IS FALSE)  WHEN vt0.c1 THEN (((vt2.c2))!=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN (('YG+*>c')) AND ((rt0.c4))) END) IS TRUE)  as count FROM vt0, rt0, vt1 INNER JOIN vt2 ON CASE WHEN (((rt0.c0, vt0.c0, vt2.c0)) BETWEEN ((rt0.c4, vt0.c1, vt0.c1)) AND ((rt0.c3, rt0.c3, x''))) THEN (((vt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))) WHEN x'' THEN CAST(rt0.c1 AS TEXT) WHEN RTRIM(rt0.c2) THEN ((vt1.c0)>(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL * FROM vt0, rt0, vt1 INNER JOIN vt2 ON CASE WHEN (((rt0.c0, vt0.c0, vt2.c0)) BETWEEN ((rt0.c4, vt0.c1, vt0.c1)) AND ((rt0.c3, rt0.c3, x''))) THEN (((vt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))) WHEN x'' THEN CAST(rt0.c1 AS TEXT) WHEN RTRIM(rt0.c2) THEN ((vt1.c0)>(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END WHERE (CASE ((vt2.c1) IS FALSE)  WHEN vt0.c1 THEN (((vt2.c2))!=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN (('YG+*>c')) AND ((rt0.c4))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c1) IS FALSE)  WHEN vt0.c1 THEN (((vt2.c2))!=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN (('YG+*>c')) AND ((rt0.c4))) END) IS TRUE)  as count FROM vt0, rt0, vt1 INNER JOIN vt2 ON CASE WHEN (((rt0.c0, vt0.c0, vt2.c0)) BETWEEN ((rt0.c4, vt0.c1, vt0.c1)) AND ((rt0.c3, rt0.c3, x''))) THEN (((vt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))) WHEN x'' THEN CAST(rt0.c1 AS TEXT) WHEN RTRIM(rt0.c2) THEN ((vt1.c0)>(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL * FROM vt0, rt0, vt1 INNER JOIN vt2 ON CASE WHEN (((rt0.c0, vt0.c0, vt2.c0)) BETWEEN ((rt0.c4, vt0.c1, vt0.c1)) AND ((rt0.c3, rt0.c3, x''))) THEN (((vt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))) WHEN x'' THEN CAST(rt0.c1 AS TEXT) WHEN RTRIM(rt0.c2) THEN ((vt1.c0)>(rt0.c3)) ELSE CAST(vt1.c0 AS NUMERIC) END WHERE (CASE ((vt2.c1) IS FALSE)  WHEN vt0.c1 THEN (((vt2.c2))!=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN (('YG+*>c')) AND ((rt0.c4))) END);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN ((vt0.c1)AND(vt1.lid)) THEN -1393386579 WHEN ((((rt0.c2)AND(vt0.c1)))OR(vt0.c1)) THEN LAST_INSERT_ROWID() WHEN (vt0.c0 IN ()) THEN (((vt1.lid, 0xffffffff952ba964, vt0.c0)) NOT BETWEEN ((vt1.c0, x'1bfa', vt0.c0)) AND ((vt0.c1, rt0.c3, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)AND(vt1.lid)) THEN -1393386579 WHEN ((((rt0.c2)AND(vt0.c1)))OR(vt0.c1)) THEN LAST_INSERT_ROWID() WHEN (vt0.c0 IN ()) THEN (((vt1.lid, 0xffffffff952ba964, vt0.c0)) NOT BETWEEN ((vt1.c0, x'1bfa', vt0.c0)) AND ((vt0.c1, rt0.c3, rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN ((vt0.c1)AND(vt1.lid)) THEN -1393386579 WHEN ((((rt0.c2)AND(vt0.c1)))OR(vt0.c1)) THEN LAST_INSERT_ROWID() WHEN (vt0.c0 IN ()) THEN (((vt1.lid, 0xffffffff952ba964, vt0.c0)) NOT BETWEEN ((vt1.c0, x'1bfa', vt0.c0)) AND ((vt0.c1, rt0.c3, rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)AND(vt1.lid)) THEN -1393386579 WHEN ((((rt0.c2)AND(vt0.c1)))OR(vt0.c1)) THEN LAST_INSERT_ROWID() WHEN (vt0.c0 IN ()) THEN (((vt1.lid, 0xffffffff952ba964, vt0.c0)) NOT BETWEEN ((vt1.c0, x'1bfa', vt0.c0)) AND ((vt0.c1, rt0.c3, rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN ((vt0.c1)AND(vt1.lid)) THEN -1393386579 WHEN ((((rt0.c2)AND(vt0.c1)))OR(vt0.c1)) THEN LAST_INSERT_ROWID() WHEN (vt0.c0 IN ()) THEN (((vt1.lid, 0xffffffff952ba964, vt0.c0)) NOT BETWEEN ((vt1.c0, x'1bfa', vt0.c0)) AND ((vt0.c1, rt0.c3, rt0.c0))) END);
SELECT * FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END  WHEN ((((0x3b1d8c49)OR(vt0.c0)))AND(vt0.c0)) THEN (('1938518729')IS(vt0.c0)) ELSE ((vt0.c0) NOTNULL) END) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END  WHEN ((((0X3b1d8c49)OR(vt0.c0)))AND(vt0.c0)) THEN (('1938518729')IS(vt0.c0)) ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END  WHEN ((((0x3b1d8c49)OR(vt0.c0)))AND(vt0.c0)) THEN (('1938518729')IS(vt0.c0)) ELSE ((vt0.c0) NOTNULL) END) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END  WHEN ((((0X3b1d8c49)OR(vt0.c0)))AND(vt0.c0)) THEN (('1938518729')IS(vt0.c0)) ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END  WHEN ((((0x3b1d8c49)OR(vt0.c0)))AND(vt0.c0)) THEN (('1938518729')IS(vt0.c0)) ELSE ((vt0.c0) NOTNULL) END) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE (CAST(((vt0.c1)>=(rt0.c3)) AS BLOB)) ORDER BY ((((~ (vt2.c0))))==((((vt2.c2)&(vt2.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)>=(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM vt2, vt0, vt1, rt0 ORDER BY ((((~ (vt2.c0))))=((((vt2.c2)&(vt2.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE (CAST(((vt0.c1)>=(rt0.c3)) AS BLOB)) ORDER BY ((((~ (vt2.c0))))==((((vt2.c2)&(vt2.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)>=(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM vt2, vt0, vt1, rt0 ORDER BY ((((~ (vt2.c0))))=((((vt2.c2)&(vt2.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt0, vt1, rt0 WHERE (CAST(((vt0.c1)>=(rt0.c3)) AS BLOB)) ORDER BY ((((~ (vt2.c0))))==((((vt2.c2)&(vt2.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM vt2, vt0 WHERE (CASE WHEN (0X41459086 IN ()) THEN ((vt2.c1)>=(vt2.c2)) ELSE ((((((((vt2.c2)OR(vt2.c1)))AND(vt2.c1)))OR(vt2.c2)))OR(vt0.c0)) END) ORDER BY (((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c0)) IN ()), ((vt2.c2)&(json_array(vt0.c0, vt2.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (0X41459086 IN ()) THEN ((vt2.c1)>=(vt2.c2)) ELSE ((((((((vt2.c2)OR(vt2.c1)))AND(vt2.c1)))OR(vt2.c2)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c0)) IN ()), ((vt2.c2)&(json_array(vt0.c0, vt2.c0))));
SELECT COUNT(*) FROM vt2, vt0 WHERE (CASE WHEN (0X41459086 IN ()) THEN ((vt2.c1)>=(vt2.c2)) ELSE ((((((((vt2.c2)OR(vt2.c1)))AND(vt2.c1)))OR(vt2.c2)))OR(vt0.c0)) END) ORDER BY (((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c0)) IN ()), ((vt2.c2)&(json_array(vt0.c0, vt2.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (0X41459086 IN ()) THEN ((vt2.c1)>=(vt2.c2)) ELSE ((((((((vt2.c2)OR(vt2.c1)))AND(vt2.c1)))OR(vt2.c2)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((vt2.c2) BETWEEN (vt2.c0) AND (vt2.c0)) IN ()), ((vt2.c2)&(json_array(vt0.c0, vt2.c0))));
SELECT ALL * FROM vt0 WHERE (x'5deb' COLLATE BINARY) ORDER BY (- (vt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'5deb' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c1 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'5deb' COLLATE BINARY) ORDER BY (- (vt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'5deb' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c1 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'5deb' COLLATE BINARY) ORDER BY (- (vt0.c1 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE (((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(vt2.c0)))AND(vt0.c0))) BETWEEN (((rt0.c3)>=(rt0.c3))) AND (((vt2.c2) NOT BETWEEN (vt2.c2) AND (rt0.c1))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c4)) NOT BETWEEN ((rt0.c0 IN ())) AND (CASE 'EN'  WHEN rt0.c1 THEN vt2.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(vt2.c0)))AND(vt0.c0))) BETWEEN (((rt0.c3)>=(rt0.c3))) AND (((vt2.c2) NOT BETWEEN (vt2.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c4)) NOT BETWEEN ((rt0.c0 IN ())) AND (CASE 'EN'  WHEN rt0.c1 THEN vt2.c2 END)));
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE (((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(vt2.c0)))AND(vt0.c0))) BETWEEN (((rt0.c3)>=(rt0.c3))) AND (((vt2.c2) NOT BETWEEN (vt2.c2) AND (rt0.c1))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c4)) NOT BETWEEN ((rt0.c0 IN ())) AND (CASE 'EN'  WHEN rt0.c1 THEN vt2.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(vt2.c0)))AND(vt0.c0))) BETWEEN (((rt0.c3)>=(rt0.c3))) AND (((vt2.c2) NOT BETWEEN (vt2.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c4)) NOT BETWEEN ((rt0.c0 IN ())) AND (CASE 'EN'  WHEN rt0.c1 THEN vt2.c2 END)));
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE (((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(vt2.c0)))AND(vt0.c0))) BETWEEN (((rt0.c3)>=(rt0.c3))) AND (((vt2.c2) NOT BETWEEN (vt2.c2) AND (rt0.c1))))) ORDER BY ((SQLITE_COMPILEOPTION_USED(rt0.c4)) NOT BETWEEN ((rt0.c0 IN ())) AND (CASE 'EN'  WHEN rt0.c1 THEN vt2.c2 END));
SELECT COUNT(*) FROM rt0 WHERE (0X58d694b);
SELECT SUM(count) FROM (SELECT ((0x58d694b) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0X58d694b);
SELECT SUM(count) FROM (SELECT ((0x58d694b) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0X58d694b);
SELECT ALL * FROM vt2, rt0 FULL OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE NOCASE)) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt2, rt0 FULL OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt2, rt0 FULL OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE NOCASE)) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt2, rt0 FULL OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt2, rt0 FULL OUTER JOIN vt0 ON (~ (vt0.c1 COLLATE NOCASE)) WHERE (rt0.c3);
SELECT COUNT(*) FROM rt0, vt2, vt1, vt0 WHERE (vt2.c1);
SELECT SUM(count) FROM (SELECT ((vt2.c1) IS TRUE)  as count FROM rt0, vt2, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt2, vt1, vt0 WHERE (vt2.c1);
SELECT SUM(count) FROM (SELECT ((vt2.c1) IS TRUE)  as count FROM rt0, vt2, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt2, vt1, vt0 WHERE (vt2.c1);
SELECT COUNT(*) FROM vt1, rt0, vt0, vt2 WHERE (((((vt1.lid) BETWEEN (rt0.c3) AND (vt1.c0)))+(CAST(rt0.c0 AS TEXT)))) ORDER BY CAST('-1865739365' AS INTEGER) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) BETWEEN (rt0.c3) AND (vt1.c0)))+(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, vt0, vt2 ORDER BY CAST('-1865739365' AS INTEGER) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM vt1, rt0, vt0, vt2 WHERE (((((vt1.lid) BETWEEN (rt0.c3) AND (vt1.c0)))+(CAST(rt0.c0 AS TEXT)))) ORDER BY CAST('-1865739365' AS INTEGER) COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid) BETWEEN (rt0.c3) AND (vt1.c0)))+(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, vt0, vt2 ORDER BY CAST('-1865739365' AS INTEGER) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM vt1, rt0, vt0, vt2 WHERE (((((vt1.lid) BETWEEN (rt0.c3) AND (vt1.c0)))+(CAST(rt0.c0 AS TEXT)))) ORDER BY CAST('-1865739365' AS INTEGER) COLLATE NOCASE COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0, vt2 CROSS JOIN vt0 ON ((((((((((vt2.c1)OR(vt2.c0)))OR('#t1')))OR(vt1.c0)))OR(x'')))>=(((vt2.c1)|(rt0.c1)))) INNER JOIN vt1 ON ((((vt2.c0)%(vt0.c1)))|(((vt1.lid) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (CAST((~ (rt0.c3)) AS TEXT)) ORDER BY rt0.c2  NULLS FIRST, TYPEOF(DISTINCT ((rt0.c1) NOT BETWEEN (vt2.c0) AND (vt2.c2))), UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, vt2 CROSS JOIN vt0 ON ((((((((((vt2.c1)OR(vt2.c0)))OR('#t1')))OR(vt1.c0)))OR(x'')))>=(((vt2.c1)|(rt0.c1)))) INNER JOIN vt1 ON ((((vt2.c0)%(vt0.c1)))|(((vt1.lid) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) ORDER BY rt0.c2  NULLS FIRST, TYPEOF(DISTINCT ((rt0.c1) NOT BETWEEN (vt2.c0) AND (vt2.c2))), UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt2 CROSS JOIN vt0 ON ((((((((((vt2.c1)OR(vt2.c0)))OR('#t1')))OR(vt1.c0)))OR(x'')))>=(((vt2.c1)|(rt0.c1)))) INNER JOIN vt1 ON ((((vt2.c0)%(vt0.c1)))|(((vt1.lid) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (CAST((~ (rt0.c3)) AS TEXT)) ORDER BY rt0.c2  NULLS FIRST, TYPEOF(DISTINCT ((rt0.c1) NOT BETWEEN (vt2.c0) AND (vt2.c2))), UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, vt2 CROSS JOIN vt0 ON ((((((((((vt2.c1)OR(vt2.c0)))OR('#t1')))OR(vt1.c0)))OR(x'')))>=(((vt2.c1)|(rt0.c1)))) INNER JOIN vt1 ON ((((vt2.c0)%(vt0.c1)))|(((vt1.lid) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) ORDER BY rt0.c2  NULLS FIRST, TYPEOF(DISTINCT ((rt0.c1) NOT BETWEEN (vt2.c0) AND (vt2.c2))), UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt2 CROSS JOIN vt0 ON ((((((((((vt2.c1)OR(vt2.c0)))OR('#t1')))OR(vt1.c0)))OR(x'')))>=(((vt2.c1)|(rt0.c1)))) INNER JOIN vt1 ON ((((vt2.c0)%(vt0.c1)))|(((vt1.lid) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (CAST((~ (rt0.c3)) AS TEXT)) ORDER BY rt0.c2  NULLS FIRST, TYPEOF(DISTINCT ((rt0.c1) NOT BETWEEN (vt2.c0) AND (vt2.c2))), UPPER(DISTINCT CAST(vt1.c0 AS NUMERIC)) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt2 WHERE (((((vt2.c0) ISNULL))>(((vt2.c2) BETWEEN (vt2.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) ISNULL))>(((vt2.c2) BETWEEN (vt2.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL * FROM rt0, vt2 WHERE (((((vt2.c0) ISNULL))>(((vt2.c2) BETWEEN (vt2.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) ISNULL))>(((vt2.c2) BETWEEN (vt2.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL * FROM rt0, vt2 WHERE (((((vt2.c0) ISNULL))>(((vt2.c2) BETWEEN (vt2.c1) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<=(rt0.c4)))&(rt0.c4))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)>=(NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt0.c4)))&(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)>=(NULL)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<=(rt0.c4)))&(rt0.c4))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)>=(NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt0.c4)))&(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)>=(NULL)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<=(rt0.c4)))&(rt0.c4))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)>=(NULL));
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN vt0 ON vt2.c2 COLLATE RTRIM CROSS JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) ISNULL) WHERE ((((((vt2.c0))>((rt0.c2)))) BETWEEN (LENGTH(rt0.c3)) AND (json_patch(rt0.c3, rt0.c3)))) ORDER BY ((('1154641666', rt0.c4, vt0.c0, vt2.c1, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, CAST(vt2.c0 AS BLOB), (((0.8137877439879359)) BETWEEN ((rt0.c4)) AND ((vt2.c0))), (((vt2.c2, rt0.c2, vt2.c0)) NOT BETWEEN ((rt0.c3, vt2.c1, '-55511365')) AND ((vt0.c1, vt2.c1, rt0.c0))), (rt0.c2 IN ()))) AND (((((vt0.c0, vt2.c2, vt2.c0))>=((rt0.c2, vt2.c1, vt2.c0))), CAST(vt2.c2 AS TEXT), CASE WHEN rt0.c1 THEN vt2.c2 END, 'h', (~ (rt0.c1)))))  NULLS LAST, (((- (rt0.c0)))|(((vt0.c1) BETWEEN (vt2.c2) AND (x'')))) DESC  NULLS FIRST, '-597449406' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0))>((rt0.c2)))) BETWEEN (LENGTH(rt0.c3)) AND (json_patch(rt0.c3, rt0.c3)))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON vt2.c2 COLLATE RTRIM CROSS JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) ISNULL) ORDER BY ((('1154641666', rt0.c4, vt0.c0, vt2.c1, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, CAST(vt2.c0 AS BLOB), (((0.8137877439879359)) BETWEEN ((rt0.c4)) AND ((vt2.c0))), (((vt2.c2, rt0.c2, vt2.c0)) NOT BETWEEN ((rt0.c3, vt2.c1, '-55511365')) AND ((vt0.c1, vt2.c1, rt0.c0))), (rt0.c2 IN ()))) AND (((((vt0.c0, vt2.c2, vt2.c0))>=((rt0.c2, vt2.c1, vt2.c0))), CAST(vt2.c2 AS TEXT), CASE WHEN rt0.c1 THEN vt2.c2 END, 'h', (~ (rt0.c1)))))  NULLS LAST, (((- (rt0.c0)))|(((vt0.c1) BETWEEN (vt2.c2) AND (x'')))) DESC  NULLS FIRST, '-597449406' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN vt0 ON vt2.c2 COLLATE RTRIM CROSS JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) ISNULL) WHERE ((((((vt2.c0))>((rt0.c2)))) BETWEEN (LENGTH(rt0.c3)) AND (json_patch(rt0.c3, rt0.c3)))) ORDER BY ((('1154641666', rt0.c4, vt0.c0, vt2.c1, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, CAST(vt2.c0 AS BLOB), (((0.8137877439879359)) BETWEEN ((rt0.c4)) AND ((vt2.c0))), (((vt2.c2, rt0.c2, vt2.c0)) NOT BETWEEN ((rt0.c3, vt2.c1, '-55511365')) AND ((vt0.c1, vt2.c1, rt0.c0))), (rt0.c2 IN ()))) AND (((((vt0.c0, vt2.c2, vt2.c0))>=((rt0.c2, vt2.c1, vt2.c0))), CAST(vt2.c2 AS TEXT), CASE WHEN rt0.c1 THEN vt2.c2 END, 'h', (~ (rt0.c1)))))  NULLS LAST, (((- (rt0.c0)))|(((vt0.c1) BETWEEN (vt2.c2) AND (x'')))) DESC  NULLS FIRST, '-597449406' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0))>((rt0.c2)))) BETWEEN (LENGTH(rt0.c3)) AND (json_patch(rt0.c3, rt0.c3)))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON vt2.c2 COLLATE RTRIM CROSS JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) ISNULL) ORDER BY ((('1154641666', rt0.c4, vt0.c0, vt2.c1, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, CAST(vt2.c0 AS BLOB), (((0.8137877439879359)) BETWEEN ((rt0.c4)) AND ((vt2.c0))), (((vt2.c2, rt0.c2, vt2.c0)) NOT BETWEEN ((rt0.c3, vt2.c1, '-55511365')) AND ((vt0.c1, vt2.c1, rt0.c0))), (rt0.c2 IN ()))) AND (((((vt0.c0, vt2.c2, vt2.c0))>=((rt0.c2, vt2.c1, vt2.c0))), CAST(vt2.c2 AS TEXT), CASE WHEN rt0.c1 THEN vt2.c2 END, 'h', (~ (rt0.c1)))))  NULLS LAST, (((- (rt0.c0)))|(((vt0.c1) BETWEEN (vt2.c2) AND (x'')))) DESC  NULLS FIRST, '-597449406' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN vt0 ON vt2.c2 COLLATE RTRIM CROSS JOIN rt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1))) ISNULL) WHERE ((((((vt2.c0))>((rt0.c2)))) BETWEEN (LENGTH(rt0.c3)) AND (json_patch(rt0.c3, rt0.c3)))) ORDER BY ((('1154641666', rt0.c4, vt0.c0, vt2.c1, rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, CAST(vt2.c0 AS BLOB), (((0.8137877439879359)) BETWEEN ((rt0.c4)) AND ((vt2.c0))), (((vt2.c2, rt0.c2, vt2.c0)) NOT BETWEEN ((rt0.c3, vt2.c1, '-55511365')) AND ((vt0.c1, vt2.c1, rt0.c0))), (rt0.c2 IN ()))) AND (((((vt0.c0, vt2.c2, vt2.c0))>=((rt0.c2, vt2.c1, vt2.c0))), CAST(vt2.c2 AS TEXT), CASE WHEN rt0.c1 THEN vt2.c2 END, 'h', (~ (rt0.c1)))))  NULLS LAST, (((- (rt0.c0)))|(((vt0.c1) BETWEEN (vt2.c2) AND (x'')))) DESC  NULLS FIRST, '-597449406' DESC  NULLS LAST;
SELECT * FROM rt0, vt1, vt2 WHERE (((rt0.c3 COLLATE BINARY)*((rt0.c1 IN ())))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.lid THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)/(((vt1.lid)<=(rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)*((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1, vt2 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.lid THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)/(((vt1.lid)<=(rt0.c4)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt1, vt2 WHERE (((rt0.c3 COLLATE BINARY)*((rt0.c1 IN ())))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.lid THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)/(((vt1.lid)<=(rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)*((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1, vt2 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.lid THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)/(((vt1.lid)<=(rt0.c4)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt1, vt2 WHERE (((rt0.c3 COLLATE BINARY)*((rt0.c1 IN ())))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.lid THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)/(((vt1.lid)<=(rt0.c4)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c0, '-1405101737', vt0.c1, vt0.c1))))) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))!=((vt0.c1, vt0.c0, '-1405101737', vt0.c1, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c0, '-1405101737', vt0.c1, vt0.c1))))) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))!=((vt0.c1, vt0.c0, '-1405101737', vt0.c1, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c0, '-1405101737', vt0.c1, vt0.c1))))) ORDER BY vt0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((HEX(vt1.lid)) BETWEEN ((+ (x''))) AND ((('')<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt1.lid)) BETWEEN ((+ (x''))) AND ((('')<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((HEX(vt1.lid)) BETWEEN ((+ (x''))) AND ((('')<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt1.lid)) BETWEEN ((+ (x''))) AND ((('')<<(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((HEX(vt1.lid)) BETWEEN ((+ (x''))) AND ((('')<<(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((- (0.4361917413779196)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0.4361917413779196)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (0.4361917413779196)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (0.4361917413779196)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (0.4361917413779196)) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt2 ON ((NULL)*(((vt2.c2) IS TRUE))) WHERE (CASE ((-7.1045005E8) NOT BETWEEN (vt2.c0) AND (vt1.lid))  WHEN (rt0.c4 IN ()) THEN vt0.c0 WHEN ((0.3570299436509039) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((((rt0.c1)AND(vt2.c0)))OR(vt0.c0)) WHEN (NOT (vt0.c0)) THEN json_extract(rt0.c1, vt0.c0, rt0.c4, rt0.c2) END) ORDER BY (~ (((0.8922402539803926)=(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((-7.1045005E8) NOT BETWEEN (vt2.c0) AND (vt1.lid))  WHEN (rt0.c4 IN ()) THEN vt0.c0 WHEN ((0.3570299436509039) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((((rt0.c1)AND(vt2.c0)))OR(vt0.c0)) WHEN (NOT (vt0.c0)) THEN json_extract(rt0.c1, vt0.c0, rt0.c4, rt0.c2) END) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt2 ON ((NULL)*(((vt2.c2) IS TRUE))) ORDER BY (~ (((0.8922402539803926)==(rt0.c3)))) DESC);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt2 ON ((NULL)*(((vt2.c2) IS TRUE))) WHERE (CASE ((-7.1045005E8) NOT BETWEEN (vt2.c0) AND (vt1.lid))  WHEN (rt0.c4 IN ()) THEN vt0.c0 WHEN ((0.3570299436509039) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((((rt0.c1)AND(vt2.c0)))OR(vt0.c0)) WHEN (NOT (vt0.c0)) THEN json_extract(rt0.c1, vt0.c0, rt0.c4, rt0.c2) END) ORDER BY (~ (((0.8922402539803926)=(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((-7.1045005E8) NOT BETWEEN (vt2.c0) AND (vt1.lid))  WHEN (rt0.c4 IN ()) THEN vt0.c0 WHEN ((0.3570299436509039) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((((rt0.c1)AND(vt2.c0)))OR(vt0.c0)) WHEN (NOT (vt0.c0)) THEN json_extract(rt0.c1, vt0.c0, rt0.c4, rt0.c2) END) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt2 ON ((NULL)*(((vt2.c2) IS TRUE))) ORDER BY (~ (((0.8922402539803926)==(rt0.c3)))) DESC);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt2 ON ((NULL)*(((vt2.c2) IS TRUE))) WHERE (CASE ((-7.1045005E8) NOT BETWEEN (vt2.c0) AND (vt1.lid))  WHEN (rt0.c4 IN ()) THEN vt0.c0 WHEN ((0.3570299436509039) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((((rt0.c1)AND(vt2.c0)))OR(vt0.c0)) WHEN (NOT (vt0.c0)) THEN json_extract(rt0.c1, vt0.c0, rt0.c4, rt0.c2) END) ORDER BY (~ (((0.8922402539803926)=(rt0.c3)))) DESC;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN (- (vt1.lid)) THEN (NULL IN (rt0.c3)) ELSE rt0.c1 END) ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c3))))IS(CASE WHEN vt1.lid THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END)) ASC, rt0.c0  NULLS FIRST, TYPEOF(DISTINCT ((vt1.lid) IS TRUE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.lid)) THEN (NULL IN (rt0.c3)) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c3))))IS(CASE WHEN vt1.lid THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END)) ASC, rt0.c0  NULLS FIRST, TYPEOF(DISTINCT ((vt1.lid) IS TRUE)) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN (- (vt1.lid)) THEN (NULL IN (rt0.c3)) ELSE rt0.c1 END) ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c3))))IS(CASE WHEN vt1.lid THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END)) ASC, rt0.c0  NULLS FIRST, TYPEOF(DISTINCT ((vt1.lid) IS TRUE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt1.lid)) THEN (NULL IN (rt0.c3)) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c3))))IS(CASE WHEN vt1.lid THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END)) ASC, rt0.c0  NULLS FIRST, TYPEOF(DISTINCT ((vt1.lid) IS TRUE)) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN (- (vt1.lid)) THEN (NULL IN (rt0.c3)) ELSE rt0.c1 END) ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c3))))IS(CASE WHEN vt1.lid THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 END)) ASC, rt0.c0  NULLS FIRST, TYPEOF(DISTINCT ((vt1.lid) IS TRUE)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (INSTR(CASE WHEN vt0.c1 THEN rt0.c2 END, x'')) ORDER BY (((rt0.c4)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((((vt1.c0)>=(vt1.lid))))) DESC, 'PXcQx' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(CASE WHEN vt0.c1 THEN rt0.c2 END, x'')) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c4)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((((vt1.c0)>=(vt1.lid))))) DESC, 'PXcQx' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (INSTR(CASE WHEN vt0.c1 THEN rt0.c2 END, x'')) ORDER BY (((rt0.c4)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((((vt1.c0)>=(vt1.lid))))) DESC, 'PXcQx' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR(CASE WHEN vt0.c1 THEN rt0.c2 END, x'')) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c4)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((((vt1.c0)>=(vt1.lid))))) DESC, 'PXcQx' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (INSTR(CASE WHEN vt0.c1 THEN rt0.c2 END, x'')) ORDER BY (((rt0.c4)) NOT BETWEEN ((((rt0.c4) NOT NULL))) AND ((((vt1.c0)>=(vt1.lid))))) DESC, 'PXcQx' ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, vt2, vt0 WHERE (CAST(((NULL) ISNULL) AS BLOB)) ORDER BY (~ (((((rt0.c1)AND(rt0.c2)))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt2, vt0 ORDER BY (~ (((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))));
SELECT COUNT(*) FROM rt0, vt1, vt2, vt0 WHERE (CAST(((NULL) ISNULL) AS BLOB)) ORDER BY (~ (((((rt0.c1)AND(rt0.c2)))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt2, vt0 ORDER BY (~ (((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))));
SELECT COUNT(*) FROM rt0, vt1, vt2, vt0 WHERE (CAST(((NULL) ISNULL) AS BLOB)) ORDER BY (~ (((((rt0.c1)AND(rt0.c2)))OR(rt0.c3))));
SELECT * FROM vt2, rt0 WHERE ((((((0.7629112137738637)>(rt0.c2))))<=((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1)))))) ORDER BY ((((((((((((((((vt2.c0)AND(rt0.c2)))AND(vt2.c0)))OR(vt2.c1)))OR(vt2.c1)))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c4)))AND(6.06049157E8)))AND(rt0.c3)))))OR(CAST(rt0.c1 AS TEXT))))AND(((rt0.c0)>=(rt0.c3)))))OR(((((rt0.c4)AND(rt0.c1)))OR(vt2.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0.7629112137738637)>(rt0.c2))))<=((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM vt2, rt0 ORDER BY ((((((((((((((((vt2.c0)AND(rt0.c2)))AND(vt2.c0)))OR(vt2.c1)))OR(vt2.c1)))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c4)))AND(6.06049157E8)))AND(rt0.c3)))))OR(CAST(rt0.c1 AS TEXT))))AND(((rt0.c0)>=(rt0.c3)))))OR(((((rt0.c4)AND(rt0.c1)))OR(vt2.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt2, rt0 WHERE ((((((0.7629112137738637)>(rt0.c2))))<=((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1)))))) ORDER BY ((((((((((((((((vt2.c0)AND(rt0.c2)))AND(vt2.c0)))OR(vt2.c1)))OR(vt2.c1)))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c4)))AND(6.06049157E8)))AND(rt0.c3)))))OR(CAST(rt0.c1 AS TEXT))))AND(((rt0.c0)>=(rt0.c3)))))OR(((((rt0.c4)AND(rt0.c1)))OR(vt2.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0.7629112137738637)>(rt0.c2))))<=((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM vt2, rt0 ORDER BY ((((((((((((((((vt2.c0)AND(rt0.c2)))AND(vt2.c0)))OR(vt2.c1)))OR(vt2.c1)))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c4)))AND(6.06049157E8)))AND(rt0.c3)))))OR(CAST(rt0.c1 AS TEXT))))AND(((rt0.c0)>=(rt0.c3)))))OR(((((rt0.c4)AND(rt0.c1)))OR(vt2.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt2, rt0 WHERE ((((((0.7629112137738637)>(rt0.c2))))<=((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1)))))) ORDER BY ((((((((((((((((vt2.c0)AND(rt0.c2)))AND(vt2.c0)))OR(vt2.c1)))OR(vt2.c1)))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c4)))AND(6.06049157E8)))AND(rt0.c3)))))OR(CAST(rt0.c1 AS TEXT))))AND(((rt0.c0)>=(rt0.c3)))))OR(((((rt0.c4)AND(rt0.c1)))OR(vt2.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt2, vt1, rt0, vt0 WHERE ('0Qw' COLLATE BINARY) ORDER BY ((((vt0.c1) IS TRUE))LIKE((vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ALL (('0Qw' COLLATE BINARY) IS TRUE)  as count FROM vt2, vt1, rt0, vt0 ORDER BY ((((vt0.c1) IS TRUE))LIKE((vt1.lid IN ()))));
SELECT COUNT(*) FROM vt2, vt1, rt0, vt0 WHERE ('0Qw' COLLATE BINARY) ORDER BY ((((vt0.c1) IS TRUE))LIKE((vt1.lid IN ())));
SELECT SUM(count) FROM (SELECT ALL (('0Qw' COLLATE BINARY) IS TRUE)  as count FROM vt2, vt1, rt0, vt0 ORDER BY ((((vt0.c1) IS TRUE))LIKE((vt1.lid IN ()))));
SELECT COUNT(*) FROM vt2, vt1, rt0, vt0 WHERE ('0Qw' COLLATE BINARY) ORDER BY ((((vt0.c1) IS TRUE))LIKE((vt1.lid IN ())));
SELECT ALL * FROM vt0, vt1, vt2 WHERE ((CAST(vt1.lid AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.lid AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1, vt2);
SELECT ALL * FROM vt0, vt1, vt2 WHERE ((CAST(vt1.lid AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.lid AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1, vt2);
SELECT ALL * FROM vt0, vt1, vt2 WHERE ((CAST(vt1.lid AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (((((((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt2.c2 END)OR(((rt0.c2)<(rt0.c4)))))OR(vt0.c1 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c2 THEN vt2.c1 END)))OR(((vt0.c0) NOT NULL)))) ORDER BY ((TRIM(rt0.c3, vt1.lid))%(((vt0.c0) IS FALSE)))  NULLS LAST, ((x'') ISNULL) ASC, ((((rt0.c3)LIKE(rt0.c3)))>(((rt0.c3) BETWEEN (rt0.c2) AND (vt2.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt2.c2 END)OR(((rt0.c2)<(rt0.c4)))))OR(vt0.c1 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c2 THEN vt2.c1 END)))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt2, vt1 ORDER BY ((TRIM(rt0.c3, vt1.lid))%(((vt0.c0) IS FALSE)))  NULLS LAST, ((x'') ISNULL) ASC, ((((rt0.c3)LIKE(rt0.c3)))>(((rt0.c3) BETWEEN (rt0.c2) AND (vt2.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (((((((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt2.c2 END)OR(((rt0.c2)<(rt0.c4)))))OR(vt0.c1 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c2 THEN vt2.c1 END)))OR(((vt0.c0) NOT NULL)))) ORDER BY ((TRIM(rt0.c3, vt1.lid))%(((vt0.c0) IS FALSE)))  NULLS LAST, ((x'') ISNULL) ASC, ((((rt0.c3)LIKE(rt0.c3)))>(((rt0.c3) BETWEEN (rt0.c2) AND (vt2.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt2.c2 END)OR(((rt0.c2)<(rt0.c4)))))OR(vt0.c1 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c2 THEN vt2.c1 END)))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt2, vt1 ORDER BY ((TRIM(rt0.c3, vt1.lid))%(((vt0.c0) IS FALSE)))  NULLS LAST, ((x'') ISNULL) ASC, ((((rt0.c3)LIKE(rt0.c3)))>(((rt0.c3) BETWEEN (rt0.c2) AND (vt2.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt2, vt1 WHERE (((((((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt2.c2 END)OR(((rt0.c2)<(rt0.c4)))))OR(vt0.c1 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c2 THEN vt2.c1 END)))OR(((vt0.c0) NOT NULL)))) ORDER BY ((TRIM(rt0.c3, vt1.lid))%(((vt0.c0) IS FALSE)))  NULLS LAST, ((x'') ISNULL) ASC, ((((rt0.c3)LIKE(rt0.c3)))>(((rt0.c3) BETWEEN (rt0.c2) AND (vt2.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-2110895404');
SELECT SUM(count) FROM (SELECT ALL (('-2110895404') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-2110895404');
SELECT SUM(count) FROM (SELECT ALL (('-2110895404') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('-2110895404');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON (+ (vt2.c2)) FULL OUTER JOIN rt0 ON HEX(((rt0.c0)-(vt0.c0))) CROSS JOIN vt1 ON ((((rt0.c4)>=(rt0.c2))) BETWEEN ((+ (rt0.c4))) AND ((('EV6HZ') NOT BETWEEN (vt0.c1) AND (rt0.c1)))) WHERE ((((((vt2.c0)OR(rt0.c1)))OR(vt2.c1)) IN (vt2.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)OR(rt0.c1)))OR(vt2.c1)) IN (vt2.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON (+ (vt2.c2)) FULL OUTER JOIN rt0 ON HEX(((rt0.c0)-(vt0.c0))) CROSS JOIN vt1 ON ((((rt0.c4)>=(rt0.c2))) BETWEEN ((+ (rt0.c4))) AND ((('EV6HZ') NOT BETWEEN (vt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON (+ (vt2.c2)) FULL OUTER JOIN rt0 ON HEX(((rt0.c0)-(vt0.c0))) CROSS JOIN vt1 ON ((((rt0.c4)>=(rt0.c2))) BETWEEN ((+ (rt0.c4))) AND ((('EV6HZ') NOT BETWEEN (vt0.c1) AND (rt0.c1)))) WHERE ((((((vt2.c0)OR(rt0.c1)))OR(vt2.c1)) IN (vt2.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)OR(rt0.c1)))OR(vt2.c1)) IN (vt2.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON (+ (vt2.c2)) FULL OUTER JOIN rt0 ON HEX(((rt0.c0)-(vt0.c0))) CROSS JOIN vt1 ON ((((rt0.c4)>=(rt0.c2))) BETWEEN ((+ (rt0.c4))) AND ((('EV6HZ') NOT BETWEEN (vt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON (+ (vt2.c2)) FULL OUTER JOIN rt0 ON HEX(((rt0.c0)-(vt0.c0))) CROSS JOIN vt1 ON ((((rt0.c4)>=(rt0.c2))) BETWEEN ((+ (rt0.c4))) AND ((('EV6HZ') NOT BETWEEN (vt0.c1) AND (rt0.c1)))) WHERE ((((((vt2.c0)OR(rt0.c1)))OR(vt2.c1)) IN (vt2.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)|(vt1.c0))))>=((UNLIKELY(DISTINCT vt1.lid))))) ORDER BY 0.19945218238286633;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)|(vt1.c0))))>=((UNLIKELY(DISTINCT vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY 0.19945218238286633);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)|(vt1.c0))))>=((UNLIKELY(DISTINCT vt1.lid))))) ORDER BY 0.19945218238286633;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)|(vt1.c0))))>=((UNLIKELY(DISTINCT vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY 0.19945218238286633);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)|(vt1.c0))))>=((UNLIKELY(DISTINCT vt1.lid))))) ORDER BY 0.19945218238286633;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((UNLIKELY(DISTINCT vt1.lid))%((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt1.lid))%((~ (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((UNLIKELY(DISTINCT vt1.lid))%((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt1.lid))%((~ (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((UNLIKELY(DISTINCT vt1.lid))%((~ (rt0.c1)))));
SELECT COUNT(*) FROM vt0, vt2, rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, vt2, rt0, vt1);
SELECT COUNT(*) FROM vt0, vt2, rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, vt2, rt0, vt1);
SELECT COUNT(*) FROM vt0, vt2, rt0, vt1 WHERE (rt0.c1);
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT ALL * FROM vt2, vt0 WHERE ((((((NULL))=((vt0.c1))))GLOB(vt2.c1 COLLATE NOCASE))) ORDER BY ((((((((vt2.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c2)))AND(((vt0.c0) NOT NULL)))  NULLS FIRST, ((vt2.c2 COLLATE BINARY)>=(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((((((NULL))=((vt0.c1))))GLOB(vt2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt2, vt0 ORDER BY ((((((((vt2.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c2)))AND(((vt0.c0) NOT NULL)))  NULLS FIRST, ((vt2.c2 COLLATE BINARY)>=(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt2, vt0 WHERE ((((((NULL))=((vt0.c1))))GLOB(vt2.c1 COLLATE NOCASE))) ORDER BY ((((((((vt2.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c2)))AND(((vt0.c0) NOT NULL)))  NULLS FIRST, ((vt2.c2 COLLATE BINARY)>=(CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((((((NULL))=((vt0.c1))))GLOB(vt2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt2, vt0 ORDER BY ((((((((vt2.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c2)))AND(((vt0.c0) NOT NULL)))  NULLS FIRST, ((vt2.c2 COLLATE BINARY)>=(CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt2, vt0 WHERE ((((((NULL))=((vt0.c1))))GLOB(vt2.c1 COLLATE NOCASE))) ORDER BY ((((((((vt2.c2)OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c2)))AND(((vt0.c0) NOT NULL)))  NULLS FIRST, ((vt2.c2 COLLATE BINARY)>=(CAST(vt0.c0 AS TEXT)));
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c4))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c4))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c4))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c4))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c4))) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE), rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt2, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE), rt0.c1);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE), rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt2, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE), rt0.c1);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS FALSE), rt0.c1;
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ((NOT (CAST(vt2.c1 AS BLOB)))) ORDER BY CAST(((vt0.c0)=(vt2.c0)) AS TEXT) DESC, (((- (x'cfde')))>(((vt2.c0)IS NOT(vt2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt2.c1 AS BLOB)))) IS TRUE)  as count FROM vt2, vt0 ORDER BY CAST(((vt0.c0)=(vt2.c0)) AS TEXT) DESC, (((- (x'cfde')))>(((vt2.c0)IS NOT(vt2.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ((NOT (CAST(vt2.c1 AS BLOB)))) ORDER BY CAST(((vt0.c0)=(vt2.c0)) AS TEXT) DESC, (((- (x'cfde')))>(((vt2.c0)IS NOT(vt2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt2.c1 AS BLOB)))) IS TRUE)  as count FROM vt2, vt0 ORDER BY CAST(((vt0.c0)=(vt2.c0)) AS TEXT) DESC, (((- (x'cfde')))>(((vt2.c0)IS NOT(vt2.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ((NOT (CAST(vt2.c1 AS BLOB)))) ORDER BY CAST(((vt0.c0)=(vt2.c0)) AS TEXT) DESC, (((- (x'cfde')))>(((vt2.c0)IS NOT(vt2.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE);
SELECT * FROM vt2, vt0 LEFT OUTER JOIN vt1 ON (((((((((vt2.c1)OR(vt1.c0)))OR(0.47262049336514755)))AND(vt0.c0)))AND(vt2.c0)) IN (CAST(vt2.c0 AS NUMERIC))) WHERE (((vt2.c1) BETWEEN (((((vt2.c2)AND(vt2.c0)))AND(0.5951690326507486))) AND (vt0.c0))) ORDER BY (- (((((vt1.lid)OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c1) BETWEEN (((((vt2.c2)AND(vt2.c0)))AND(0.5951690326507486))) AND (vt0.c0))) IS TRUE)  as count FROM vt2, vt0 LEFT OUTER JOIN vt1 ON (((((((((vt2.c1)OR(vt1.c0)))OR(0.47262049336514755)))AND(vt0.c0)))AND(vt2.c0)) IN (CAST(vt2.c0 AS NUMERIC))) ORDER BY (- (((((vt1.lid)OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt2, vt0 LEFT OUTER JOIN vt1 ON (((((((((vt2.c1)OR(vt1.c0)))OR(0.47262049336514755)))AND(vt0.c0)))AND(vt2.c0)) IN (CAST(vt2.c0 AS NUMERIC))) WHERE (((vt2.c1) BETWEEN (((((vt2.c2)AND(vt2.c0)))AND(0.5951690326507486))) AND (vt0.c0))) ORDER BY (- (((((vt1.lid)OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c1) BETWEEN (((((vt2.c2)AND(vt2.c0)))AND(0.5951690326507486))) AND (vt0.c0))) IS TRUE)  as count FROM vt2, vt0 LEFT OUTER JOIN vt1 ON (((((((((vt2.c1)OR(vt1.c0)))OR(0.47262049336514755)))AND(vt0.c0)))AND(vt2.c0)) IN (CAST(vt2.c0 AS NUMERIC))) ORDER BY (- (((((vt1.lid)OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt2, vt0 LEFT OUTER JOIN vt1 ON (((((((((vt2.c1)OR(vt1.c0)))OR(0.47262049336514755)))AND(vt0.c0)))AND(vt2.c0)) IN (CAST(vt2.c0 AS NUMERIC))) WHERE (((vt2.c1) BETWEEN (((((vt2.c2)AND(vt2.c0)))AND(0.5951690326507486))) AND (vt0.c0))) ORDER BY (- (((((vt1.lid)OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0, vt2, vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC, (((((rt0.c0))<((vt2.c0)))) NOT BETWEEN (((vt2.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))) AND (((0.4850393388702593)!=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC, (((((rt0.c0))<((vt2.c0)))) NOT BETWEEN (((vt2.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))) AND (((0.4850393388702593)<>(vt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt2, vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC, (((((rt0.c0))<((vt2.c0)))) NOT BETWEEN (((vt2.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))) AND (((0.4850393388702593)!=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC, (((((rt0.c0))<((vt2.c0)))) NOT BETWEEN (((vt2.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))) AND (((0.4850393388702593)<>(vt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt2, vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL) ASC, (((((rt0.c0))<((vt2.c0)))) NOT BETWEEN (((vt2.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))) AND (((0.4850393388702593)!=(vt0.c0))))  NULLS LAST;
