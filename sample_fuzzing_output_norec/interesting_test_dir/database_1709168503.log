-- Time: 2024/06/09 15:27:01
-- Database: database3
-- Database version: 3.40.0
-- seed value: 1709168503
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, prefix=222); -- 1ms;
ROLLBACK TRANSACTION; -- 2ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.mmap_size = 5150996716192181391; -- 0ms;
PRAGMA temp.threads = -8761349305453138144; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='632113280', c0=0.6053234329378093; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=632113280,11');\n; -- 0ms;
ANALYZE vt0; -- 0ms;
PRAGMA mmap_size; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 2ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
REINDEX; -- 1ms;
END; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0X1cf4cf28); -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.40678109442977084), ('650972118'), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6525'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '54083'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 265195617); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7400'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 120839736); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1894770439); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1115617724); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3899'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -886388785);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 524624940); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 5ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1909450575); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1239049693,5');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '9424'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET c0=x'f071', c0=NULL; -- 1ms;
PRAGMA mmap_size = -5012761110519562626; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (0.7652536691252942), (78832907); -- 2ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA temp.optimize; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32230'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34483'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1209696381); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 2ms;
REINDEX; -- 1ms;
PRAGMA main.cache_spill = -8967747461520089305; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (0.6053234329378093, x'2eb2', x''), (' k', 746155844, NULL), ('HXxhS', '746155844', x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 2ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (0.7765228011433977, 0.6728216669598508, 7.8832907E7), ('0.6053234329378093', (((NULL)) BETWEEN (('658543248' COLLATE BINARY)) AND ((((((x'')AND('503691459')))AND(x'2f3d'))))), '.\'), ('1685231943', x'', 0.0708821032382938); -- 1ms;
PRAGMA short_column_names = false; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=632113280,10');\n; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=4.85805864E8 WHERE LIKELY(json_insert(vt0.c0, vt0.c0, vt0.c0)); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'4cbe3bc0'); -- 1ms;
PRAGMA recursive_triggers = false; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='658543248'; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 37979592); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA stats; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (NULL), (''), (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.08640160968925692, 0.6136772929880809, NULL), ('FI4', x'1037', 'I9FxÍÅ¨38jV'), (x'', NULL, 0.6849172535112033); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '16939'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2075393789); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (6.58543248E8), (NULL), (''); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
END TRANSACTION; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 3ms;
PRAGMA legacy_file_format; -- 0ms;
ANALYZE main; -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(-375789987); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1601480428); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3419'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20902'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 4ms;
COMMIT; -- 0ms;
ANALYZE temp; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0 WHERE (NULL COLLATE NOCASE) ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL COLLATE NOCASE) ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL COLLATE NOCASE) ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (NULL))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) DESC, (-1239049693 IN (CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) DESC, (-1239049693 IN (CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (NULL))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) DESC, (-1239049693 IN (CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) DESC, (-1239049693 IN (CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (NULL))) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END AS NUMERIC) DESC, (-1239049693 IN (CAST(rt0.c2 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, 0.13265454386449527, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) BETWEEN (x'359a') AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, 0.13265454386449527, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) BETWEEN (x'359a') AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, 0.13265454386449527, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) BETWEEN (x'359a') AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, 0.13265454386449527, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) BETWEEN (x'359a') AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, 0.13265454386449527, vt0.c0)) NOT BETWEEN (((- (vt0.c0)), vt0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0) BETWEEN (x'359a') AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY))));
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)>=(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((LENGTH(vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>=(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((LENGTH(vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)>=(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((LENGTH(vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>=(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((LENGTH(vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)>=(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((LENGTH(vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT * FROM vt0, t0, rt0 WHERE ((((((rt0.c0 IN (vt0.c0)))AND(json_insert(rt0.c1, t0.c0, x''))))OR(((((rt0.c2)AND(t0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN (vt0.c0)))AND(json_insert(rt0.c1, t0.c0, x''))))OR(((((rt0.c2)AND(t0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((((rt0.c0 IN (vt0.c0)))AND(json_insert(rt0.c1, t0.c0, x''))))OR(((((rt0.c2)AND(t0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN (vt0.c0)))AND(json_insert(rt0.c1, t0.c0, x''))))OR(((((rt0.c2)AND(t0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((((rt0.c0 IN (vt0.c0)))AND(json_insert(rt0.c1, t0.c0, x''))))OR(((((rt0.c2)AND(t0.c0)))AND(rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((~ (rt0.c1)) IN (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((~ (rt0.c1)) IN (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((~ (rt0.c1)) IN (((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)), rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM t0, vt0 WHERE (((((x'c86a')!=(t0.c0))) IS TRUE)) ORDER BY '[‰¢Ä*#/' DESC  NULLS LAST, (~ (((vt0.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'c86a')!=(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY '[‰¢Ä*#/' DESC  NULLS LAST, (~ (((vt0.c0)IS NOT(vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (((((x'c86a')!=(t0.c0))) IS TRUE)) ORDER BY '[‰¢Ä*#/' DESC  NULLS LAST, (~ (((vt0.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'c86a')!=(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY '[‰¢Ä*#/' DESC  NULLS LAST, (~ (((vt0.c0)IS NOT(vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (((((x'c86a')!=(t0.c0))) IS TRUE)) ORDER BY '[‰¢Ä*#/' DESC  NULLS LAST, (~ (((vt0.c0)IS NOT(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0;
SELECT ALL * FROM t0, vt0, rt0 WHERE (json_object(((rt0.c0)<(rt0.c2)), CAST(NULL AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((json_object(((rt0.c0)<(rt0.c2)), CAST(NULL AS TEXT))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (json_object(((rt0.c0)<(rt0.c2)), CAST(NULL AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((json_object(((rt0.c0)<(rt0.c2)), CAST(NULL AS TEXT))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ('+D') ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC  NULLS LAST, CASE ((rt0.c2)-(t0.c0))  WHEN (x'' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.34874110959373017) END DESC, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (('+D') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC  NULLS LAST, CASE ((rt0.c2)-(t0.c0))  WHEN (x'' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.34874110959373017) END DESC, rt0.c2 ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE ('+D') ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC  NULLS LAST, CASE ((rt0.c2)-(t0.c0))  WHEN (x'' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.34874110959373017) END DESC, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (('+D') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC  NULLS LAST, CASE ((rt0.c2)-(t0.c0))  WHEN (x'' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.34874110959373017) END DESC, rt0.c2 ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE ('+D') ORDER BY CAST(CAST(vt0.c0 AS REAL) AS BLOB) DESC  NULLS LAST, CASE ((rt0.c2)-(t0.c0))  WHEN (x'' IN ()) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.34874110959373017) END DESC, rt0.c2 ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((vt0.c0 IN (rt0.c0, rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c2) NOT NULL)) AND (vt0.c0)), (((((((((((rt0.c2))!=((rt0.c0))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))))AND(TRIM(rt0.c1))))OR(UPPER(DISTINCT 5.03691459E8))))OR(CAST(rt0.c0 AS NUMERIC))) ASC, (NOT (rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((vt0.c0 IN (rt0.c0, rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c2) NOT NULL)) AND (vt0.c0)), (((((((((((rt0.c2))<>((rt0.c0))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))))AND(TRIM(rt0.c1))))OR(UPPER(DISTINCT 5.03691459E8))))OR(CAST(rt0.c0 AS NUMERIC))) ASC, (NOT (rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((vt0.c0 IN (rt0.c0, rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c2) NOT NULL)) AND (vt0.c0)), (((((((((((rt0.c2))!=((rt0.c0))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))))AND(TRIM(rt0.c1))))OR(UPPER(DISTINCT 5.03691459E8))))OR(CAST(rt0.c0 AS NUMERIC))) ASC, (NOT (rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((vt0.c0 IN (rt0.c0, rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c2) NOT NULL)) AND (vt0.c0)), (((((((((((rt0.c2))<>((rt0.c0))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))))AND(TRIM(rt0.c1))))OR(UPPER(DISTINCT 5.03691459E8))))OR(CAST(rt0.c0 AS NUMERIC))) ASC, (NOT (rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN ((vt0.c0 IN (rt0.c0, rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((rt0.c2) NOT NULL)) AND (vt0.c0)), (((((((((((rt0.c2))!=((rt0.c0))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))))AND(TRIM(rt0.c1))))OR(UPPER(DISTINCT 5.03691459E8))))OR(CAST(rt0.c0 AS NUMERIC))) ASC, (NOT (rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE BINARY))<=((json_insert(0.6580856450722705, t0.c0, t0.c0, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 COLLATE BINARY))<=((json_insert(0.6580856450722705, t0.c0, t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE BINARY))<=((json_insert(0.6580856450722705, t0.c0, t0.c0, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 COLLATE BINARY))<=((json_insert(0.6580856450722705, t0.c0, t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE BINARY))<=((json_insert(0.6580856450722705, t0.c0, t0.c0, t0.c0, t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))IS NOT((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))IS NOT((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))IS NOT((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))IS NOT((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))IS NOT((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) ORDER BY IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (((vt0.c0)<<(vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c1) IS FALSE) COLLATE NOCASE RIGHT OUTER JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)) THEN rt0.c0 ELSE ',^' END WHERE ('0.7652536691252942');
SELECT SUM(count) FROM (SELECT ALL (('0.7652536691252942') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1) IS FALSE) COLLATE NOCASE RIGHT OUTER JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)) THEN rt0.c0 ELSE ',^' END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c1) IS FALSE) COLLATE NOCASE RIGHT OUTER JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)) THEN rt0.c0 ELSE ',^' END WHERE ('0.7652536691252942');
SELECT SUM(count) FROM (SELECT ALL (('0.7652536691252942') IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1) IS FALSE) COLLATE NOCASE RIGHT OUTER JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)) THEN rt0.c0 ELSE ',^' END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((rt0.c1) IS FALSE) COLLATE NOCASE RIGHT OUTER JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)) THEN rt0.c0 ELSE ',^' END WHERE ('0.7652536691252942');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('273705932') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('273705932') IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('273705932') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('273705932') IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('273705932') IS TRUE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS FALSE))LIKE(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)GLOB(rt0.c2)) AS BLOB)) ORDER BY CAST(rt0.c1 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)GLOB(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)GLOB(rt0.c2)) AS BLOB)) ORDER BY CAST(rt0.c1 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)GLOB(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS TEXT) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1)GLOB(rt0.c2)) AS BLOB)) ORDER BY CAST(rt0.c1 AS TEXT) ASC;
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM((+ (t0.c0))) WHERE (CASE WHEN x'' THEN NULL WHEN ((vt0.c0)*(rt0.c2)) THEN (('0.0708821032382938') ISNULL) WHEN ((rt0.c1) IS TRUE) THEN vt0.c0 ELSE ((((NULL)AND(rt0.c2)))AND(t0.c0)) END) ORDER BY (NOT (json_array_length(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN NULL WHEN ((vt0.c0)*(rt0.c2)) THEN (('0.0708821032382938') ISNULL) WHEN ((rt0.c1) IS TRUE) THEN vt0.c0 ELSE ((((NULL)AND(rt0.c2)))AND(t0.c0)) END) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM((+ (t0.c0))) ORDER BY (NOT (json_array_length(rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM((+ (t0.c0))) WHERE (CASE WHEN x'' THEN NULL WHEN ((vt0.c0)*(rt0.c2)) THEN (('0.0708821032382938') ISNULL) WHEN ((rt0.c1) IS TRUE) THEN vt0.c0 ELSE ((((NULL)AND(rt0.c2)))AND(t0.c0)) END) ORDER BY (NOT (json_array_length(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN NULL WHEN ((vt0.c0)*(rt0.c2)) THEN (('0.0708821032382938') ISNULL) WHEN ((rt0.c1) IS TRUE) THEN vt0.c0 ELSE ((((NULL)AND(rt0.c2)))AND(t0.c0)) END) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM((+ (t0.c0))) ORDER BY (NOT (json_array_length(rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON TRIM((+ (t0.c0))) WHERE (CASE WHEN x'' THEN NULL WHEN ((vt0.c0)*(rt0.c2)) THEN (('0.0708821032382938') ISNULL) WHEN ((rt0.c1) IS TRUE) THEN vt0.c0 ELSE ((((NULL)AND(rt0.c2)))AND(t0.c0)) END) ORDER BY (NOT (json_array_length(rt0.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c0)GLOB(vt0.c0)) AS INTEGER));
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))<>(((~ (rt0.c0)))))) ORDER BY '.\'  NULLS FIRST, ((((rt0.c2)AND(rt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))<>(((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY '.\'  NULLS FIRST, ((((rt0.c2)AND(rt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))<>(((~ (rt0.c0)))))) ORDER BY '.\'  NULLS FIRST, ((((rt0.c2)AND(rt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))<>(((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY '.\'  NULLS FIRST, ((((rt0.c2)AND(rt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))<>(((~ (rt0.c0)))))) ORDER BY '.\'  NULLS FIRST, ((((rt0.c2)AND(rt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((((TYPEOF(0.8186479720796449))OR((((('485805864')OR(vt0.c0)))OR(rt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'5f32'))))) ORDER BY CASE WHEN 0.3347772298485059 THEN (rt0.c2 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c0)|(0.4332706411006074)) THEN (((rt0.c1))<((rt0.c2))) ELSE ((0.20852157236853974)-(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(0.8186479720796449))OR((((('485805864')OR(vt0.c0)))OR(rt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'5f32'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN 0.3347772298485059 THEN (rt0.c2 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c0)|(0.4332706411006074)) THEN (((rt0.c1))<((rt0.c2))) ELSE ((0.20852157236853974)-(rt0.c0)) END);
SELECT ALL * FROM vt0, rt0 WHERE (((((TYPEOF(0.8186479720796449))OR((((('485805864')OR(vt0.c0)))OR(rt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'5f32'))))) ORDER BY CASE WHEN 0.3347772298485059 THEN (rt0.c2 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c0)|(0.4332706411006074)) THEN (((rt0.c1))<((rt0.c2))) ELSE ((0.20852157236853974)-(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(0.8186479720796449))OR((((('485805864')OR(vt0.c0)))OR(rt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'5f32'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN 0.3347772298485059 THEN (rt0.c2 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c0)|(0.4332706411006074)) THEN (((rt0.c1))<((rt0.c2))) ELSE ((0.20852157236853974)-(rt0.c0)) END);
SELECT ALL * FROM vt0, rt0 WHERE (((((TYPEOF(0.8186479720796449))OR((((('485805864')OR(vt0.c0)))OR(rt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))OR(x'5f32'))))) ORDER BY CASE WHEN 0.3347772298485059 THEN (rt0.c2 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)) WHEN ((rt0.c0)|(0.4332706411006074)) THEN (((rt0.c1))<((rt0.c2))) ELSE ((0.20852157236853974)-(rt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (TYPEOF(0xffffffffade53ca8))));
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(0Xffffffffade53ca8)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (TYPEOF(0xffffffffade53ca8))));
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(0Xffffffffade53ca8)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (TYPEOF(0xffffffffade53ca8))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1))<>((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c1))!=((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1))<>((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c1))!=((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1))<>((rt0.c0))) COLLATE RTRIM);
SELECT * FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN rt0 ON (((rt0.c2, ROUND(t0.c0, '0.8186479720796449'), CASE WHEN t0.c0 THEN rt0.c1 END))==(('', vt0.c0, vt0.c0))) WHERE (UPPER('oiF!') COLLATE BINARY) ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((UPPER(DISTINCT rt0.c1))-(((t0.c0) BETWEEN (0.3347772298485059) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER('oiF!') COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN rt0 ON (((rt0.c2, ROUND(t0.c0, '0.8186479720796449'), CASE WHEN t0.c0 THEN rt0.c1 END))=(('', vt0.c0, vt0.c0))) ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((UPPER(DISTINCT rt0.c1))-(((t0.c0) BETWEEN (0.3347772298485059) AND (rt0.c2)))));
SELECT * FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN rt0 ON (((rt0.c2, ROUND(t0.c0, '0.8186479720796449'), CASE WHEN t0.c0 THEN rt0.c1 END))==(('', vt0.c0, vt0.c0))) WHERE (UPPER('oiF!') COLLATE BINARY) ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((UPPER(DISTINCT rt0.c1))-(((t0.c0) BETWEEN (0.3347772298485059) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER('oiF!') COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN rt0 ON (((rt0.c2, ROUND(t0.c0, '0.8186479720796449'), CASE WHEN t0.c0 THEN rt0.c1 END))=(('', vt0.c0, vt0.c0))) ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((UPPER(DISTINCT rt0.c1))-(((t0.c0) BETWEEN (0.3347772298485059) AND (rt0.c2)))));
SELECT * FROM t0 INNER JOIN vt0 ON ((vt0.c0) IS FALSE) RIGHT OUTER JOIN rt0 ON (((rt0.c2, ROUND(t0.c0, '0.8186479720796449'), CASE WHEN t0.c0 THEN rt0.c1 END))==(('', vt0.c0, vt0.c0))) WHERE (UPPER('oiF!') COLLATE BINARY) ORDER BY (~ (CAST(vt0.c0 AS TEXT)))  NULLS LAST, ((UPPER(DISTINCT rt0.c1))-(((t0.c0) BETWEEN (0.3347772298485059) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (t0.c0) ORDER BY ((((vt0.c0)!=(rt0.c1))) NOTNULL) DESC  NULLS FIRST, (+ (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((vt0.c0)<>(rt0.c1))) NOTNULL) DESC  NULLS FIRST, (+ (rt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (t0.c0) ORDER BY ((((vt0.c0)!=(rt0.c1))) NOTNULL) DESC  NULLS FIRST, (+ (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((vt0.c0)<>(rt0.c1))) NOTNULL) DESC  NULLS FIRST, (+ (rt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (t0.c0) ORDER BY ((((vt0.c0)!=(rt0.c1))) NOTNULL) DESC  NULLS FIRST, (+ (rt0.c1))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((t0.c0)AND(t0.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL)) IS FALSE) WHERE ((CASE vt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((t0.c0)AND(t0.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((t0.c0)AND(t0.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL)) IS FALSE) WHERE ((CASE vt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((t0.c0)AND(t0.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL)) IS FALSE));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST(((t0.c0)AND(t0.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL)) IS FALSE) WHERE ((CASE vt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c1 END IN ()));
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((rt0.c1)||(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((rt0.c1)||(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((rt0.c1)||(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0, rt0 WHERE (0.0708821032382938 COLLATE RTRIM) ORDER BY ((vt0.c0)OR(((t0.c0) IS TRUE))) ASC, CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((rt0.c0)>>(rt0.c2)) ELSE t0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.0708821032382938 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((vt0.c0)OR(((t0.c0) IS TRUE))) ASC, CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((rt0.c0)>>(rt0.c2)) ELSE t0.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (0.0708821032382938 COLLATE RTRIM) ORDER BY ((vt0.c0)OR(((t0.c0) IS TRUE))) ASC, CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((rt0.c0)>>(rt0.c2)) ELSE t0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.0708821032382938 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((vt0.c0)OR(((t0.c0) IS TRUE))) ASC, CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((rt0.c0)>>(rt0.c2)) ELSE t0.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (0.0708821032382938 COLLATE RTRIM) ORDER BY ((vt0.c0)OR(((t0.c0) IS TRUE))) ASC, CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((rt0.c0)>>(rt0.c2)) ELSE t0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOT NULL) AS NUMERIC)) ORDER BY CASE x'c203'  WHEN (((658543248)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)>>(t0.c0)) WHEN CASE -1884813675  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE t0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE x'c203'  WHEN (((658543248)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)>>(t0.c0)) WHEN CASE -1884813675  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE t0.c0 END);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOT NULL) AS NUMERIC)) ORDER BY CASE x'c203'  WHEN (((658543248)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)>>(t0.c0)) WHEN CASE -1884813675  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE t0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE x'c203'  WHEN (((658543248)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)>>(t0.c0)) WHEN CASE -1884813675  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE t0.c0 END);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c0) NOT NULL) AS NUMERIC)) ORDER BY CASE x'c203'  WHEN (((658543248)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN ((vt0.c0)>>(t0.c0)) WHEN CASE -1884813675  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE t0.c0 END;
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY CASE (((rt0.c1, 0.1790448026094843, rt0.c2))>=((NULL, rt0.c2, rt0.c2)))  WHEN rt0.c2 COLLATE BINARY THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c2 THEN vt0.c0 COLLATE NOCASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE (((rt0.c1, 0.1790448026094843, rt0.c2))>=((NULL, rt0.c2, rt0.c2)))  WHEN rt0.c2 COLLATE BINARY THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c2 THEN vt0.c0 COLLATE NOCASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY CASE (((rt0.c1, 0.1790448026094843, rt0.c2))>=((NULL, rt0.c2, rt0.c2)))  WHEN rt0.c2 COLLATE BINARY THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c2 THEN vt0.c0 COLLATE NOCASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE (((rt0.c1, 0.1790448026094843, rt0.c2))>=((NULL, rt0.c2, rt0.c2)))  WHEN rt0.c2 COLLATE BINARY THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c2 THEN vt0.c0 COLLATE NOCASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY CASE (((rt0.c1, 0.1790448026094843, rt0.c2))>=((NULL, rt0.c2, rt0.c2)))  WHEN rt0.c2 COLLATE BINARY THEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c2 THEN vt0.c0 COLLATE NOCASE WHEN (NOT (rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))<(((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY)) WHERE (((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))<(((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY)) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))<(((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY)) WHERE (((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))<(((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY)) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c0))))<(((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))) LEFT OUTER JOIN vt0 ON ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY)) WHERE (((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)|(rt0.c2)) IN ())) ORDER BY (((rt0.c2)<=(rt0.c1)) IN ()) ASC, LIKELY(CASE rt0.c0  WHEN 6.50972118E8 THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)|(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)<=(rt0.c1)) IN ()) ASC, LIKELY(CASE rt0.c0  WHEN 6.50972118E8 THEN rt0.c1 END));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)|(rt0.c2)) IN ())) ORDER BY (((rt0.c2)<=(rt0.c1)) IN ()) ASC, LIKELY(CASE rt0.c0  WHEN 6.50972118E8 THEN rt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)|(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)<=(rt0.c1)) IN ()) ASC, LIKELY(CASE rt0.c0  WHEN 6.50972118E8 THEN rt0.c1 END));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)|(rt0.c2)) IN ())) ORDER BY (((rt0.c2)<=(rt0.c1)) IN ()) ASC, LIKELY(CASE rt0.c0  WHEN 6.50972118E8 THEN rt0.c1 END);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((''))<=(((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0)) AND ((vt0.c0, 0.011702744569320966, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((''))<=(((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0)) AND ((vt0.c0, 0.011702744569320966, rt0.c1))))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((''))<=(((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0)) AND ((vt0.c0, 0.011702744569320966, rt0.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((''))<=(((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0)) AND ((vt0.c0, 0.011702744569320966, rt0.c1))))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((''))<=(((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, t0.c0)) AND ((vt0.c0, 0.011702744569320966, rt0.c1)))))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((vt0.c0)<=(vt0.c0)) IN (CAST(rt0.c1 AS NUMERIC)))) ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', (+ ('-678911892')), ((rt0.c0)<(rt0.c0)))) AND ((rt0.c2, vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', (+ ('-678911892')), ((rt0.c0)<(rt0.c0)))) AND ((rt0.c2, vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL)))) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((vt0.c0)<=(vt0.c0)) IN (CAST(rt0.c1 AS NUMERIC)))) ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', (+ ('-678911892')), ((rt0.c0)<(rt0.c0)))) AND ((rt0.c2, vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', (+ ('-678911892')), ((rt0.c0)<(rt0.c0)))) AND ((rt0.c2, vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL)))) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((vt0.c0)<=(vt0.c0)) IN (CAST(rt0.c1 AS NUMERIC)))) ORDER BY (((rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', (+ ('-678911892')), ((rt0.c0)<(rt0.c0)))) AND ((rt0.c2, vt0.c0 COLLATE RTRIM, ((vt0.c0) NOTNULL)))) ASC;
SELECT * FROM rt0, t0 WHERE ((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), CAST(x'' AS BLOB), rt0.c2 COLLATE RTRIM, (((rt0.c0))>=((rt0.c0))), ((rt0.c2)>(rt0.c0)))) AND (('_dpY', ((((t0.c0)OR(rt0.c2)))OR(t0.c0)), CAST(t0.c0 AS REAL), HEX(rt0.c2), ((((rt0.c0)OR(t0.c0)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), CAST(x'' AS BLOB), rt0.c2 COLLATE RTRIM, (((rt0.c0))>=((rt0.c0))), ((rt0.c2)>(rt0.c0)))) AND (('_dpY', ((((t0.c0)OR(rt0.c2)))OR(t0.c0)), CAST(t0.c0 AS REAL), HEX(rt0.c2), ((((rt0.c0)OR(t0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), CAST(x'' AS BLOB), rt0.c2 COLLATE RTRIM, (((rt0.c0))>=((rt0.c0))), ((rt0.c2)>(rt0.c0)))) AND (('_dpY', ((((t0.c0)OR(rt0.c2)))OR(t0.c0)), CAST(t0.c0 AS REAL), HEX(rt0.c2), ((((rt0.c0)OR(t0.c0)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), CAST(x'' AS BLOB), rt0.c2 COLLATE RTRIM, (((rt0.c0))>=((rt0.c0))), ((rt0.c2)>(rt0.c0)))) AND (('_dpY', ((((t0.c0)OR(rt0.c2)))OR(t0.c0)), CAST(t0.c0 AS REAL), HEX(rt0.c2), ((((rt0.c0)OR(t0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)), CAST(x'' AS BLOB), rt0.c2 COLLATE RTRIM, (((rt0.c0))>=((rt0.c0))), ((rt0.c2)>(rt0.c0)))) AND (('_dpY', ((((t0.c0)OR(rt0.c2)))OR(t0.c0)), CAST(t0.c0 AS REAL), HEX(rt0.c2), ((((rt0.c0)OR(t0.c0)))OR(t0.c0))))));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((rt0.c0)%(rt0.c1))))<(((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('159482621'))), CAST(rt0.c1 AS BLOB), (((rt0.c2))!=((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((rt0.c0)%(rt0.c1))))<(((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('159482621'))), CAST(rt0.c1 AS BLOB), (((rt0.c2))<>((rt0.c0))))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((rt0.c0)%(rt0.c1))))<(((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('159482621'))), CAST(rt0.c1 AS BLOB), (((rt0.c2))!=((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((rt0.c0)%(rt0.c1))))<(((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('159482621'))), CAST(rt0.c1 AS BLOB), (((rt0.c2))<>((rt0.c0))))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c2 COLLATE BINARY, CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((rt0.c0)%(rt0.c1))))<(((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('159482621'))), CAST(rt0.c1 AS BLOB), (((rt0.c2))!=((rt0.c0)))))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c1))>=((rt0.c2))) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((t0.c0)>(rt0.c2))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((t0.c0)>(rt0.c2))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((t0.c0)>(rt0.c2))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT BETWEEN (((t0.c0)>(rt0.c2))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((t0.c0)>(rt0.c2))) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT * FROM vt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c1 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))IS(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))IS(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))IS(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))IS(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))IS(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(COALESCE(t0.c0, vt0.c0) AS NUMERIC)) ORDER BY ((t0.c0)<(((t0.c0)IS(x'')))) ASC, (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (((t0.c0)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(t0.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0)<(((t0.c0)IS(x'')))) ASC, (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (((t0.c0)==(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(COALESCE(t0.c0, vt0.c0) AS NUMERIC)) ORDER BY ((t0.c0)<(((t0.c0)IS(x'')))) ASC, (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (((t0.c0)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(t0.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c0)<(((t0.c0)IS(x'')))) ASC, (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (((t0.c0)==(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST(COALESCE(t0.c0, vt0.c0) AS NUMERIC)) ORDER BY ((t0.c0)<(((t0.c0)IS(x'')))) ASC, (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (((t0.c0)=(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((t0.c0)<=(vt0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((rt0.c1)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)<=(vt0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((rt0.c1)>>(rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((t0.c0)<=(vt0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((rt0.c1)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)<=(vt0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((rt0.c1)>>(rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((t0.c0)<=(vt0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((rt0.c1)>>(rt0.c0)))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) WHERE ('') ORDER BY ((((rt0.c0)>(rt0.c1))) BETWEEN (CAST(x'1d97' AS REAL)) AND (t0.c0)) ASC, (((NOT (rt0.c2))) IS FALSE) ASC, (+ ((((rt0.c0, rt0.c0, t0.c0))>=((t0.c0, rt0.c0, rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) ORDER BY ((((rt0.c0)>(rt0.c1))) BETWEEN (CAST(x'1d97' AS REAL)) AND (t0.c0)) ASC, (((NOT (rt0.c2))) IS FALSE) ASC, (+ ((((rt0.c0, rt0.c0, t0.c0))>=((t0.c0, rt0.c0, rt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) WHERE ('') ORDER BY ((((rt0.c0)>(rt0.c1))) BETWEEN (CAST(x'1d97' AS REAL)) AND (t0.c0)) ASC, (((NOT (rt0.c2))) IS FALSE) ASC, (+ ((((rt0.c0, rt0.c0, t0.c0))>=((t0.c0, rt0.c0, rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) ORDER BY ((((rt0.c0)>(rt0.c1))) BETWEEN (CAST(x'1d97' AS REAL)) AND (t0.c0)) ASC, (((NOT (rt0.c2))) IS FALSE) ASC, (+ ((((rt0.c0, rt0.c0, t0.c0))>=((t0.c0, rt0.c0, rt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) IS TRUE) WHERE ('') ORDER BY ((((rt0.c0)>(rt0.c1))) BETWEEN (CAST(x'1d97' AS REAL)) AND (t0.c0)) ASC, (((NOT (rt0.c2))) IS FALSE) ASC, (+ ((((rt0.c0, rt0.c0, t0.c0))>=((t0.c0, rt0.c0, rt0.c1))))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 592631938 END)GLOB(x'b40c'))) ORDER BY (t0.c0 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 592631938 END)GLOB(x'b40c'))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE RTRIM IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 592631938 END)GLOB(x'b40c'))) ORDER BY (t0.c0 COLLATE RTRIM IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 592631938 END)GLOB(x'b40c'))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE RTRIM IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 592631938 END)GLOB(x'b40c'))) ORDER BY (t0.c0 COLLATE RTRIM IN ())  NULLS LAST;
SELECT * FROM vt0, t0, rt0 WHERE ((((NOT (t0.c0)))LIKE(LIKELY(DISTINCT rt0.c1)))) ORDER BY ((0Xffffffffade53ca8) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))LIKE(LIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((0xffffffffade53ca8) NOTNULL) ASC);
SELECT * FROM vt0, t0, rt0 WHERE ((((NOT (t0.c0)))LIKE(LIKELY(DISTINCT rt0.c1)))) ORDER BY ((0Xffffffffade53ca8) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))LIKE(LIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((0xffffffffade53ca8) NOTNULL) ASC);
SELECT * FROM vt0, t0, rt0 WHERE ((((NOT (t0.c0)))LIKE(LIKELY(DISTINCT rt0.c1)))) ORDER BY ((0Xffffffffade53ca8) NOTNULL) ASC;
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT * FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1);
SELECT * FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1);
SELECT * FROM t0, rt0 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE ((~ ((('0.40678109442977084')+(rt0.c0))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<=(((x'67d483aa')>>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((('0.40678109442977084')+(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON rt0.c1 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<=(((x'67d483aa')>>(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE ((~ ((('0.40678109442977084')+(rt0.c0))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<=(((x'67d483aa')>>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((('0.40678109442977084')+(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON rt0.c1 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<=(((x'67d483aa')>>(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE ((~ ((('0.40678109442977084')+(rt0.c0))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<=(((x'67d483aa')>>(rt0.c0))))  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN (t0.c0 IN ()) THEN ((rt0.c2)||(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c2, 0.8136103925411424, NULL)) BETWEEN ((t0.c0, rt0.c1, '')) AND ((0X75247a08, rt0.c2, vt0.c0))) WHEN TYPEOF(DISTINCT t0.c0) THEN ((((((((rt0.c2)AND(t0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)) END) ORDER BY NULL ASC, ((((0.347732811377105) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS NUMERIC)  WHEN (t0.c0 IN ()) THEN ((rt0.c2)||(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c2, 0.8136103925411424, NULL)) BETWEEN ((t0.c0, rt0.c1, '')) AND ((0X75247a08, rt0.c2, vt0.c0))) WHEN TYPEOF(DISTINCT t0.c0) THEN ((((((((rt0.c2)AND(t0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY NULL ASC, ((((0.347732811377105) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN (t0.c0 IN ()) THEN ((rt0.c2)||(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c2, 0.8136103925411424, NULL)) BETWEEN ((t0.c0, rt0.c1, '')) AND ((0X75247a08, rt0.c2, vt0.c0))) WHEN TYPEOF(DISTINCT t0.c0) THEN ((((((((rt0.c2)AND(t0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)) END) ORDER BY NULL ASC, ((((0.347732811377105) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS NUMERIC)  WHEN (t0.c0 IN ()) THEN ((rt0.c2)||(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c2, 0.8136103925411424, NULL)) BETWEEN ((t0.c0, rt0.c1, '')) AND ((0X75247a08, rt0.c2, vt0.c0))) WHEN TYPEOF(DISTINCT t0.c0) THEN ((((((((rt0.c2)AND(t0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY NULL ASC, ((((0.347732811377105) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE) ASC);
SELECT * FROM t0, rt0, vt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN (t0.c0 IN ()) THEN ((rt0.c2)||(rt0.c2)) WHEN rt0.c2 THEN (((rt0.c2, 0.8136103925411424, NULL)) BETWEEN ((t0.c0, rt0.c1, '')) AND ((0X75247a08, rt0.c2, vt0.c0))) WHEN TYPEOF(DISTINCT t0.c0) THEN ((((((((rt0.c2)AND(t0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)) END) ORDER BY NULL ASC, ((((0.347732811377105) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c2)>=(rt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(rt0.c2 AS REAL)) IS TRUE) DESC, ((((rt0.c1)OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>=(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) IS TRUE) DESC, ((((rt0.c1)OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c2)>=(rt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(rt0.c2 AS REAL)) IS TRUE) DESC, ((((rt0.c1)OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>=(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((CAST(rt0.c2 AS REAL)) IS TRUE) DESC, ((((rt0.c1)OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c2)>=(rt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(rt0.c2 AS REAL)) IS TRUE) DESC, ((((rt0.c1)OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB)));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((((rt0.c0) IS FALSE)))>=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END))) INNER JOIN vt0 ON (((~ (t0.c0))) BETWEEN ((- (rt0.c2))) AND (vt0.c0 COLLATE RTRIM)) WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN t0 ON (((((rt0.c0) IS FALSE)))>=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END))) INNER JOIN vt0 ON (((~ (t0.c0))) BETWEEN ((- (rt0.c2))) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((((rt0.c0) IS FALSE)))>=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END))) INNER JOIN vt0 ON (((~ (t0.c0))) BETWEEN ((- (rt0.c2))) AND (vt0.c0 COLLATE RTRIM)) WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN t0 ON (((((rt0.c0) IS FALSE)))>=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END))) INNER JOIN vt0 ON (((~ (t0.c0))) BETWEEN ((- (rt0.c2))) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((((rt0.c0) IS FALSE)))>=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE t0.c0 END))) INNER JOIN vt0 ON (((~ (t0.c0))) BETWEEN ((- (rt0.c2))) AND (vt0.c0 COLLATE RTRIM)) WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN UNICODE(rt0.c0) THEN NULL COLLATE NOCASE ELSE (rt0.c0 IN (-8.86388785E8)) END) ORDER BY (((+ (rt0.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNICODE(rt0.c0) THEN NULL COLLATE NOCASE ELSE (rt0.c0 IN (-8.86388785E8)) END) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN UNICODE(rt0.c0) THEN NULL COLLATE NOCASE ELSE (rt0.c0 IN (-8.86388785E8)) END) ORDER BY (((+ (rt0.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNICODE(rt0.c0) THEN NULL COLLATE NOCASE ELSE (rt0.c0 IN (-8.86388785E8)) END) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN UNICODE(rt0.c0) THEN NULL COLLATE NOCASE ELSE (rt0.c0 IN (-8.86388785E8)) END) ORDER BY (((+ (rt0.c2))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((ABS(DISTINCT rt0.c2)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))) AND (((t0.c0)!=(t0.c0)))) WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))))OR(CAST('' AS BLOB))))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))))OR(CAST('' AS BLOB))))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((ABS(DISTINCT rt0.c2)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))) AND (((t0.c0)<>(t0.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((ABS(DISTINCT rt0.c2)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))) AND (((t0.c0)!=(t0.c0)))) WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))))OR(CAST('' AS BLOB))))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))))OR(CAST('' AS BLOB))))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((ABS(DISTINCT rt0.c2)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))) AND (((t0.c0)<>(t0.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((ABS(DISTINCT rt0.c2)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))) AND (((t0.c0)!=(t0.c0)))) WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))))OR(CAST('' AS BLOB))))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST('' AS NUMERIC) WHERE ((((((vt0.c0)AND(t0.c0)))AND(rt0.c0)) IN (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(t0.c0)))AND(rt0.c0)) IN (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST('' AS NUMERIC) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) DESC);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST('' AS NUMERIC) WHERE ((((((vt0.c0)AND(t0.c0)))AND(rt0.c0)) IN (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(t0.c0)))AND(rt0.c0)) IN (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST('' AS NUMERIC) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) DESC);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON CAST('' AS NUMERIC) WHERE ((((((vt0.c0)AND(t0.c0)))AND(rt0.c0)) IN (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY (((rt0.c2)|(rt0.c0)) IN (((rt0.c1)/(503691459)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)|(rt0.c0)) IN (((rt0.c1)/(503691459)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY (((rt0.c2)|(rt0.c0)) IN (((rt0.c1)/(503691459)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)|(rt0.c0)) IN (((rt0.c1)/(503691459)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END))) ORDER BY (((rt0.c2)|(rt0.c0)) IN (((rt0.c1)/(503691459)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (CAST(rt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((LTRIM(vt0.c0))) AND ((CAST(vt0.c0 AS REAL))))) ORDER BY (((x'')) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN x'd336' WHEN vt0.c0 THEN vt0.c0 WHEN 0.4385232385983149 THEN vt0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((LTRIM(vt0.c0))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY (((x'')) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN x'd336' WHEN vt0.c0 THEN vt0.c0 WHEN 0.4385232385983149 THEN vt0.c0 END))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((LTRIM(vt0.c0))) AND ((CAST(vt0.c0 AS REAL))))) ORDER BY (((x'')) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN x'd336' WHEN vt0.c0 THEN vt0.c0 WHEN 0.4385232385983149 THEN vt0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((LTRIM(vt0.c0))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY (((x'')) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN x'd336' WHEN vt0.c0 THEN vt0.c0 WHEN 0.4385232385983149 THEN vt0.c0 END))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((LTRIM(vt0.c0))) AND ((CAST(vt0.c0 AS REAL))))) ORDER BY (((x'')) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c0 THEN x'd336' WHEN vt0.c0 THEN vt0.c0 WHEN 0.4385232385983149 THEN vt0.c0 END))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN NULL THEN rt0.c1 END)AND(rt0.c0)))AND((NOT (rt0.c1))))) ORDER BY ((rt0.c1)*(rt0.c0)) COLLATE NOCASE, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN NULL THEN rt0.c1 END)AND(rt0.c0)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)*(rt0.c0)) COLLATE NOCASE, x''  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN NULL THEN rt0.c1 END)AND(rt0.c0)))AND((NOT (rt0.c1))))) ORDER BY ((rt0.c1)*(rt0.c0)) COLLATE NOCASE, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN NULL THEN rt0.c1 END)AND(rt0.c0)))AND((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)*(rt0.c0)) COLLATE NOCASE, x''  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN NULL THEN rt0.c1 END)AND(rt0.c0)))AND((NOT (rt0.c1))))) ORDER BY ((rt0.c1)*(rt0.c0)) COLLATE NOCASE, x''  NULLS LAST;
SELECT * FROM t0, rt0, vt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (rt0.c1 IN ()) WHEN (((rt0.c2, t0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c2))) THEN CASE WHEN rt0.c0 THEN t0.c0 END ELSE ((((rt0.c1)AND(x'')))AND('rM')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) IS FALSE) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (rt0.c1 IN ()) WHEN (((rt0.c2, t0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c2))) THEN CASE WHEN rt0.c0 THEN t0.c0 END ELSE ((((rt0.c1)AND(x'')))AND('rM')) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (rt0.c1 IN ()) WHEN (((rt0.c2, t0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c2))) THEN CASE WHEN rt0.c0 THEN t0.c0 END ELSE ((((rt0.c1)AND(x'')))AND('rM')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) IS FALSE) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (rt0.c1 IN ()) WHEN (((rt0.c2, t0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c2))) THEN CASE WHEN rt0.c0 THEN t0.c0 END ELSE ((((rt0.c1)AND(x'')))AND('rM')) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (rt0.c1 IN ()) WHEN (((rt0.c2, t0.c0, vt0.c0))<((t0.c0, rt0.c2, rt0.c2))) THEN CASE WHEN rt0.c0 THEN t0.c0 END ELSE ((((rt0.c1)AND(x'')))AND('rM')) END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))<>(((vt0.c0)<<(vt0.c0)))) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN (NOT (t0.c0)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(rt0.c1)), (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0)LIKE(rt0.c1)), (+ (rt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))!=(((vt0.c0)<<(vt0.c0)))) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN (NOT (t0.c0)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))<>(((vt0.c0)<<(vt0.c0)))) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN (NOT (t0.c0)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(rt0.c1)), (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0)LIKE(rt0.c1)), (+ (rt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))!=(((vt0.c0)<<(vt0.c0)))) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN (NOT (t0.c0)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))<>(((vt0.c0)<<(vt0.c0)))) LEFT OUTER JOIN t0 ON CASE rt0.c1  WHEN (NOT (t0.c0)) THEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(rt0.c1)), (+ (rt0.c1))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY ((('', CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.06042268432978992, CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<((vt0.c0 COLLATE BINARY, CASE WHEN 498381229 THEN vt0.c0 END, (((vt0.c0))==((vt0.c0))), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((('', CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.06042268432978992, CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<((vt0.c0 COLLATE BINARY, CASE WHEN 498381229 THEN vt0.c0 END, (((vt0.c0))=((vt0.c0))), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY ((('', CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.06042268432978992, CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<((vt0.c0 COLLATE BINARY, CASE WHEN 498381229 THEN vt0.c0 END, (((vt0.c0))==((vt0.c0))), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((('', CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.06042268432978992, CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<((vt0.c0 COLLATE BINARY, CASE WHEN 498381229 THEN vt0.c0 END, (((vt0.c0))=((vt0.c0))), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY ((('', CAST(vt0.c0 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.06042268432978992, CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<((vt0.c0 COLLATE BINARY, CASE WHEN 498381229 THEN vt0.c0 END, (((vt0.c0))==((vt0.c0))), ((((NULL)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json((vt0.c0 IN ())));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) IS TRUE)) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (rt0.c0)) WHERE ((((rt0.c1 IN (vt0.c0)))AND(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((0.8556914502103138))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (vt0.c0)))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) IS TRUE)) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (rt0.c0)) ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((0.8556914502103138))) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) IS TRUE)) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (rt0.c0)) WHERE ((((rt0.c1 IN (vt0.c0)))AND(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((0.8556914502103138))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (vt0.c0)))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) IS TRUE)) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (rt0.c0)) ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((0.8556914502103138))) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((vt0.c0) IS TRUE)) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (rt0.c0)) WHERE ((((rt0.c1 IN (vt0.c0)))AND(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((0.8556914502103138))) COLLATE NOCASE DESC;
SELECT * FROM rt0 WHERE (json_object(((0.5026616657299073) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ORDER BY ((rt0.c0 COLLATE RTRIM)<<((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((0.5026616657299073) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)<<((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM rt0 WHERE (json_object(((0.5026616657299073) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ORDER BY ((rt0.c0 COLLATE RTRIM)<<((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((0.5026616657299073) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)<<((rt0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))=((((rt0.c2) BETWEEN ('0.4385232385983149') AND (0Xffffffffc76a129b))))) WHERE (CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))=((((rt0.c2) BETWEEN ('0.4385232385983149') AND (0Xffffffffc76a129b))))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))=((((rt0.c2) BETWEEN ('0.4385232385983149') AND (0Xffffffffc76a129b))))) WHERE (CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))=((((rt0.c2) BETWEEN ('0.4385232385983149') AND (0Xffffffffc76a129b))))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END))=((((rt0.c2) BETWEEN ('0.4385232385983149') AND (0Xffffffffc76a129b))))) WHERE (CASE WHEN NULL COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN ('Q6/ql') AND (vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY (json_remove(vt0.c0, vt0.c0) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN ('Q6/ql') AND (vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (json_remove(vt0.c0, vt0.c0) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN ('Q6/ql') AND (vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY (json_remove(vt0.c0, vt0.c0) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN ('Q6/ql') AND (vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (json_remove(vt0.c0, vt0.c0) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN ('Q6/ql') AND (vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY (json_remove(vt0.c0, vt0.c0) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (t0.c0))) ORDER BY (((((((t0.c0))>((t0.c0))))AND((- (t0.c0)))))AND(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((t0.c0))>((t0.c0))))AND((- (t0.c0)))))AND(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (t0.c0))) ORDER BY (((((((t0.c0))>((t0.c0))))AND((- (t0.c0)))))AND(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c0))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((t0.c0))>((t0.c0))))AND((- (t0.c0)))))AND(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- (t0.c0))) ORDER BY (((((((t0.c0))>((t0.c0))))AND((- (t0.c0)))))AND(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '' END)AND((((rt0.c2))<((rt0.c1))))))OR(((rt0.c0)GLOB(rt0.c0)))) WHERE (((((rt0.c1)LIKE(rt0.c2))) NOT NULL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '' END)AND((((rt0.c2))<((rt0.c1))))))OR(((rt0.c0)GLOB(rt0.c0)))) ORDER BY rt0.c1);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '' END)AND((((rt0.c2))<((rt0.c1))))))OR(((rt0.c0)GLOB(rt0.c0)))) WHERE (((((rt0.c1)LIKE(rt0.c2))) NOT NULL)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '' END)AND((((rt0.c2))<((rt0.c1))))))OR(((rt0.c0)GLOB(rt0.c0)))) ORDER BY rt0.c1);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE '' END)AND((((rt0.c2))<((rt0.c1))))))OR(((rt0.c0)GLOB(rt0.c0)))) WHERE (((((rt0.c1)LIKE(rt0.c2))) NOT NULL)) ORDER BY rt0.c1;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (UPPER(DISTINCT ((rt0.c0)IS NOT(vt0.c0)))) ORDER BY ((('9223372036854775807' IN (vt0.c0, t0.c0))) NOTNULL) DESC, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/(rt0.c1))  NULLS FIRST, COALESCE(DISTINCT CAST(rt0.c1 AS TEXT), ('-886388785' IN ()), ((((t0.c0)OR(NULL)))AND(rt0.c2)), CASE t0.c0  WHEN NULL THEN rt0.c2 END, LOWER(t0.c0), (NOT (rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((rt0.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((('9223372036854775807' IN (vt0.c0, t0.c0))) NOTNULL) DESC, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/(rt0.c1))  NULLS FIRST, COALESCE(DISTINCT CAST(rt0.c1 AS TEXT), ('-886388785' IN ()), ((((t0.c0)OR(NULL)))AND(rt0.c2)), CASE t0.c0  WHEN NULL THEN rt0.c2 END, LOWER(t0.c0), (NOT (rt0.c2))) DESC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (UPPER(DISTINCT ((rt0.c0)IS NOT(vt0.c0)))) ORDER BY ((('9223372036854775807' IN (vt0.c0, t0.c0))) NOTNULL) DESC, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/(rt0.c1))  NULLS FIRST, COALESCE(DISTINCT CAST(rt0.c1 AS TEXT), ('-886388785' IN ()), ((((t0.c0)OR(NULL)))AND(rt0.c2)), CASE t0.c0  WHEN NULL THEN rt0.c2 END, LOWER(t0.c0), (NOT (rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((rt0.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((('9223372036854775807' IN (vt0.c0, t0.c0))) NOTNULL) DESC, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/(rt0.c1))  NULLS FIRST, COALESCE(DISTINCT CAST(rt0.c1 AS TEXT), ('-886388785' IN ()), ((((t0.c0)OR(NULL)))AND(rt0.c2)), CASE t0.c0  WHEN NULL THEN rt0.c2 END, LOWER(t0.c0), (NOT (rt0.c2))) DESC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (UPPER(DISTINCT ((rt0.c0)IS NOT(vt0.c0)))) ORDER BY ((('9223372036854775807' IN (vt0.c0, t0.c0))) NOTNULL) DESC, ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)/(rt0.c1))  NULLS FIRST, COALESCE(DISTINCT CAST(rt0.c1 AS TEXT), ('-886388785' IN ()), ((((t0.c0)OR(NULL)))AND(rt0.c2)), CASE t0.c0  WHEN NULL THEN rt0.c2 END, LOWER(t0.c0), (NOT (rt0.c2))) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((('*w''ct~A') NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((('*w''ct~A') NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((('*w''ct~A') NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((('*w''ct~A') NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((('*w''ct~A') NOT NULL))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ())) ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ())) ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ())) ORDER BY (((vt0.c0 IN (vt0.c0))) NOTNULL);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END COLLATE BINARY FULL OUTER JOIN vt0 ON ((TRIM(t0.c0, rt0.c1))LIKE(ABS(DISTINCT vt0.c0))) WHERE (((((vt0.c0)+(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(t0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END COLLATE BINARY FULL OUTER JOIN vt0 ON ((TRIM(t0.c0, rt0.c1))LIKE(ABS(DISTINCT vt0.c0))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END COLLATE BINARY FULL OUTER JOIN vt0 ON ((TRIM(t0.c0, rt0.c1))LIKE(ABS(DISTINCT vt0.c0))) WHERE (((((vt0.c0)+(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(t0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END COLLATE BINARY FULL OUTER JOIN vt0 ON ((TRIM(t0.c0, rt0.c1))LIKE(ABS(DISTINCT vt0.c0))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)>=(rt0.c0)))!=(((t0.c0)*(rt0.c2)))) WHERE ((((- (0.6849172535112033))) NOT BETWEEN ((+ (rt0.c2))) AND ((rt0.c1 IN ())))) ORDER BY (((rt0.c1 IN (NULL)))+((rt0.c0 IN (rt0.c2, t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (0.6849172535112033))) NOT BETWEEN ((+ (rt0.c2))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)>=(rt0.c0)))!=(((t0.c0)*(rt0.c2)))) ORDER BY (((rt0.c1 IN (NULL)))+((rt0.c0 IN (rt0.c2, t0.c0)))) ASC);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)>=(rt0.c0)))!=(((t0.c0)*(rt0.c2)))) WHERE ((((- (0.6849172535112033))) NOT BETWEEN ((+ (rt0.c2))) AND ((rt0.c1 IN ())))) ORDER BY (((rt0.c1 IN (NULL)))+((rt0.c0 IN (rt0.c2, t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (0.6849172535112033))) NOT BETWEEN ((+ (rt0.c2))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)>=(rt0.c0)))!=(((t0.c0)*(rt0.c2)))) ORDER BY (((rt0.c1 IN (NULL)))+((rt0.c0 IN (rt0.c2, t0.c0)))) ASC);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)>=(rt0.c0)))!=(((t0.c0)*(rt0.c2)))) WHERE ((((- (0.6849172535112033))) NOT BETWEEN ((+ (rt0.c2))) AND ((rt0.c1 IN ())))) ORDER BY (((rt0.c1 IN (NULL)))+((rt0.c0 IN (rt0.c2, t0.c0)))) ASC;
SELECT COUNT(*) FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 COLLATE BINARY)<<((rt0.c1 IN (t0.c0, rt0.c2))))) ORDER BY CAST(NULL AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)<<((rt0.c1 IN (t0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 COLLATE BINARY)<<((rt0.c1 IN (t0.c0, rt0.c2))))) ORDER BY CAST(NULL AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)<<((rt0.c1 IN (t0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 COLLATE BINARY)<<((rt0.c1 IN (t0.c0, rt0.c2))))) ORDER BY CAST(NULL AS INTEGER);
SELECT ALL * FROM rt0 WHERE (((CAST(NULL AS INTEGER)) ISNULL)) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(NULL AS INTEGER)) ISNULL)) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CAST(NULL AS INTEGER)) ISNULL)) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS LAST;
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(t0.c0)))IS NOT(((rt0.c1)*(t0.c0))))) ORDER BY ((t0.c0)*(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c1)))OR(t0.c0)))IS NOT(((rt0.c1)*(t0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((t0.c0)*(rt0.c0)) COLLATE BINARY);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(t0.c0)))IS NOT(((rt0.c1)*(t0.c0))))) ORDER BY ((t0.c0)*(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c1)))OR(t0.c0)))IS NOT(((rt0.c1)*(t0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((t0.c0)*(rt0.c0)) COLLATE BINARY);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(t0.c0)))IS NOT(((rt0.c1)*(t0.c0))))) ORDER BY ((t0.c0)*(rt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(NULL AS INTEGER) WHERE ((((((rt0.c0))==((rt0.c1))))=(CASE WHEN vt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))==((rt0.c1))))=(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(NULL AS INTEGER) WHERE ((((((rt0.c0))==((rt0.c1))))=(CASE WHEN vt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))==((rt0.c1))))=(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CAST(NULL AS INTEGER) WHERE ((((((rt0.c0))==((rt0.c1))))=(CASE WHEN vt0.c0 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN NULL END)AND(LIKE(rt0.c0, rt0.c0, '_'))))AND(rt0.c0 COLLATE RTRIM)))AND(((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c2)))))AND(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN NULL END)AND(LIKE(rt0.c0, rt0.c0, '_'))))AND(rt0.c0 COLLATE RTRIM)))AND(((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c2)))))AND(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN NULL END)AND(LIKE(rt0.c0, rt0.c0, '_'))))AND(rt0.c0 COLLATE RTRIM)))AND(((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c2)))))AND(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN NULL END)AND(LIKE(rt0.c0, rt0.c0, '_'))))AND(rt0.c0 COLLATE RTRIM)))AND(((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c2)))))AND(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN NULL END)AND(LIKE(rt0.c0, rt0.c0, '_'))))AND(rt0.c0 COLLATE RTRIM)))AND(((((((((NULL)AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)))OR(rt0.c2)))))AND(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT * FROM rt0, vt0, t0 WHERE ((('-292322084')||(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((('-292322084')||(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((('-292322084')||(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((('-292322084')||(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((('-292322084')||(((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c0) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c0) NOT NULL)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c2, 'g s\oc]T')) BETWEEN (((((rt0.c0))>((rt0.c0))), rt0.c2 COLLATE RTRIM, ((x'ca9f')+(rt0.c1)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END, (((rt0.c2, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c2))), 0.4535704204057186))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, 'g s\oc]T')) BETWEEN (((((rt0.c0))>((rt0.c0))), rt0.c2 COLLATE RTRIM, ((x'ca9f')+(rt0.c1)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END, (((rt0.c2, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c2))), 0.4535704204057186)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c2, 'g s\oc]T')) BETWEEN (((((rt0.c0))>((rt0.c0))), rt0.c2 COLLATE RTRIM, ((x'ca9f')+(rt0.c1)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END, (((rt0.c2, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c2))), 0.4535704204057186))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, 'g s\oc]T')) BETWEEN (((((rt0.c0))>((rt0.c0))), rt0.c2 COLLATE RTRIM, ((x'ca9f')+(rt0.c1)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END, (((rt0.c2, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c2))), 0.4535704204057186)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c2, 'g s\oc]T')) BETWEEN (((((rt0.c0))>((rt0.c0))), rt0.c2 COLLATE RTRIM, ((x'ca9f')+(rt0.c1)))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 END, (((rt0.c2, rt0.c2, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c2))), 0.4535704204057186))));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)), CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))<((rt0.c1 COLLATE RTRIM, (- (rt0.c2)), CASE WHEN t0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)), CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))<((rt0.c1 COLLATE RTRIM, (- (rt0.c2)), CASE WHEN t0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)), CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))<((rt0.c1 COLLATE RTRIM, (- (rt0.c2)), CASE WHEN t0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)), CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))<((rt0.c1 COLLATE RTRIM, (- (rt0.c2)), CASE WHEN t0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (NULL)), CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END))<((rt0.c1 COLLATE RTRIM, (- (rt0.c2)), CASE WHEN t0.c0 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN ((t0.c0)IS(rt0.c0)) THEN ((rt0.c1)GLOB(t0.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY x'f19e'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)IS(rt0.c0)) THEN ((rt0.c1)GLOB(t0.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY x'f19e'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN ((t0.c0)IS(rt0.c0)) THEN ((rt0.c1)GLOB(t0.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY x'f19e'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)IS(rt0.c0)) THEN ((rt0.c1)GLOB(t0.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY x'f19e'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN ((t0.c0)IS(rt0.c0)) THEN ((rt0.c1)GLOB(t0.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY x'f19e'  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((t0.c0) NOTNULL) IN ())) ORDER BY (((rt0.c0)LIKE(rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c0)LIKE(rt0.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((t0.c0) NOTNULL) IN ())) ORDER BY (((rt0.c0)LIKE(rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c0)LIKE(rt0.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((t0.c0) NOTNULL) IN ())) ORDER BY (((rt0.c0)LIKE(rt0.c2)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN vt0.c0 THEN (('P‡¶´mÍÅ¨')/(vt0.c0)) END WHERE (((('-886388785', '1359910940', t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN rt0.c0 END, (((0.347732811377105)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), CAST(rt0.c1 AS NUMERIC), vt0.c0, COALESCE(DISTINCT t0.c0, vt0.c0, t0.c0, rt0.c1))) AND ((((((((((t0.c0)OR(rt0.c1)))OR(2.73705932E8)))OR(t0.c0)))OR(t0.c0)), TRIM(rt0.c0), (rt0.c0 IN ()), ((vt0.c0) IS FALSE), 0.0416017773666868))));
SELECT SUM(count) FROM (SELECT ALL ((((('-886388785', '1359910940', t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN rt0.c0 END, (((0.347732811377105)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), CAST(rt0.c1 AS NUMERIC), vt0.c0, COALESCE(DISTINCT t0.c0, vt0.c0, t0.c0, rt0.c1))) AND ((((((((((t0.c0)OR(rt0.c1)))OR(2.73705932E8)))OR(t0.c0)))OR(t0.c0)), TRIM(rt0.c0), (rt0.c0 IN ()), ((vt0.c0) IS FALSE), 0.0416017773666868)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN vt0.c0 THEN (('P‡¶´mÍÅ¨')/(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN vt0.c0 THEN (('P‡¶´mÍÅ¨')/(vt0.c0)) END WHERE (((('-886388785', '1359910940', t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN rt0.c0 END, (((0.347732811377105)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), CAST(rt0.c1 AS NUMERIC), vt0.c0, COALESCE(DISTINCT t0.c0, vt0.c0, t0.c0, rt0.c1))) AND ((((((((((t0.c0)OR(rt0.c1)))OR(2.73705932E8)))OR(t0.c0)))OR(t0.c0)), TRIM(rt0.c0), (rt0.c0 IN ()), ((vt0.c0) IS FALSE), 0.0416017773666868))));
SELECT SUM(count) FROM (SELECT ALL ((((('-886388785', '1359910940', t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN rt0.c0 END, (((0.347732811377105)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), CAST(rt0.c1 AS NUMERIC), vt0.c0, COALESCE(DISTINCT t0.c0, vt0.c0, t0.c0, rt0.c1))) AND ((((((((((t0.c0)OR(rt0.c1)))OR(2.73705932E8)))OR(t0.c0)))OR(t0.c0)), TRIM(rt0.c0), (rt0.c0 IN ()), ((vt0.c0) IS FALSE), 0.0416017773666868)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN vt0.c0 THEN (('P‡¶´mÍÅ¨')/(vt0.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CASE t0.c0  WHEN vt0.c0 THEN (('P‡¶´mÍÅ¨')/(vt0.c0)) END WHERE (((('-886388785', '1359910940', t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN rt0.c0 END, (((0.347732811377105)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))), CAST(rt0.c1 AS NUMERIC), vt0.c0, COALESCE(DISTINCT t0.c0, vt0.c0, t0.c0, rt0.c1))) AND ((((((((((t0.c0)OR(rt0.c1)))OR(2.73705932E8)))OR(t0.c0)))OR(t0.c0)), TRIM(rt0.c0), (rt0.c0 IN ()), ((vt0.c0) IS FALSE), 0.0416017773666868))));
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY rt0.c1;
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST((+ (NULL)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST((+ (NULL)) AS TEXT) DESC);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST((+ (NULL)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST((+ (NULL)) AS TEXT) DESC);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST((+ (NULL)) AS TEXT) DESC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS INTEGER));
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY ((((rt0.c0 IN (t0.c0))))>=((((((((((rt0.c1)AND(rt0.c2)))AND(NULL)))OR(t0.c0)))OR(rt0.c1))))) ASC, (0.0416017773666868 IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0 IN (t0.c0))))>=((((((((((rt0.c1)AND(rt0.c2)))AND(NULL)))OR(t0.c0)))OR(rt0.c1))))) ASC, (0.0416017773666868 IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY ((((rt0.c0 IN (t0.c0))))>=((((((((((rt0.c1)AND(rt0.c2)))AND(NULL)))OR(t0.c0)))OR(rt0.c1))))) ASC, (0.0416017773666868 IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0 IN (t0.c0))))>=((((((((((rt0.c1)AND(rt0.c2)))AND(NULL)))OR(t0.c0)))OR(rt0.c1))))) ASC, (0.0416017773666868 IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY ((((rt0.c0 IN (t0.c0))))>=((((((((((rt0.c1)AND(rt0.c2)))AND(NULL)))OR(t0.c0)))OR(rt0.c1))))) ASC, (0.0416017773666868 IN ());
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((NULL)*(t0.c0))) NOT NULL) CROSS JOIN t0 ON COALESCE(((((vt0.c0)OR(t0.c0)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0))) WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((NULL)*(t0.c0))) NOT NULL) CROSS JOIN t0 ON COALESCE(((((vt0.c0)OR(t0.c0)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((NULL)*(t0.c0))) NOT NULL) CROSS JOIN t0 ON COALESCE(((((vt0.c0)OR(t0.c0)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0))) WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((NULL)*(t0.c0))) NOT NULL) CROSS JOIN t0 ON COALESCE(((((vt0.c0)OR(t0.c0)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((NULL)*(t0.c0))) NOT NULL) CROSS JOIN t0 ON COALESCE(((((vt0.c0)OR(t0.c0)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0))) WHERE ((- (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (('-1872723353') BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('-1872723353') BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (('-1872723353') BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('-1872723353') BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (('-1872723353') BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (vt0.c0))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), ((t0.c0)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), ((t0.c0)LIKE(rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), ((t0.c0)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), ((t0.c0)LIKE(rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (NULLIF(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), ((t0.c0)LIKE(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((((((1.35991094E9)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((1.35991094E9)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((1.35991094E9)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((1.35991094E9)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((1.35991094E9)OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c2)GLOB(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ()))||(rt0.c1 COLLATE RTRIM))) ORDER BY ABS(UNICODE(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))||(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ABS(UNICODE(rt0.c2)));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ()))||(rt0.c1 COLLATE RTRIM))) ORDER BY ABS(UNICODE(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))||(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ABS(UNICODE(rt0.c2)));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ()))||(rt0.c1 COLLATE RTRIM))) ORDER BY ABS(UNICODE(rt0.c2));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((CAST(t0.c0 AS NUMERIC))IS(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC))IS(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((CAST(t0.c0 AS NUMERIC))IS(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC))IS(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((CAST(t0.c0 AS NUMERIC))IS(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN (rt0.c1) AND (((((x'69c9')AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (+ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN (rt0.c1) AND (((((x'69c9')AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN (rt0.c1) AND (((((x'69c9')AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (+ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN (rt0.c1) AND (((((x'69c9')AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN (rt0.c1) AND (((((x'69c9')AND(rt0.c0)))AND(rt0.c2))))) ORDER BY (+ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1))=((rt0.c1, rt0.c0, rt0.c0))))IS NOT(0.5148034942109294))) ORDER BY (((+ (rt0.c0))) IS FALSE)  NULLS LAST, ((NULL)/(x'')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c1))=((rt0.c1, rt0.c0, rt0.c0))))IS NOT(0.5148034942109294))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c0))) IS FALSE)  NULLS LAST, ((NULL)/(x'')) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1))=((rt0.c1, rt0.c0, rt0.c0))))IS NOT(0.5148034942109294))) ORDER BY (((+ (rt0.c0))) IS FALSE)  NULLS LAST, ((NULL)/(x'')) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c1))=((rt0.c1, rt0.c0, rt0.c0))))IS NOT(0.5148034942109294))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c0))) IS FALSE)  NULLS LAST, ((NULL)/(x'')) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1))=((rt0.c1, rt0.c0, rt0.c0))))IS NOT(0.5148034942109294))) ORDER BY (((+ (rt0.c0))) IS FALSE)  NULLS LAST, ((NULL)/(x'')) COLLATE BINARY ASC;
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)-(rt0.c2))) ISNULL) WHERE (((TYPEOF(DISTINCT t0.c0)) BETWEEN (NULL) AND (((t0.c0)!=(rt0.c1))))) ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB) DESC  NULLS FIRST, (((~ (t0.c0)))%((((t0.c0)) NOT BETWEEN (('159482621')) AND ((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT t0.c0)) BETWEEN (NULL) AND (((t0.c0)<>(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)-(rt0.c2))) ISNULL) ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB) DESC  NULLS FIRST, (((~ (t0.c0)))%((((t0.c0)) NOT BETWEEN (('159482621')) AND ((t0.c0)))))  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)-(rt0.c2))) ISNULL) WHERE (((TYPEOF(DISTINCT t0.c0)) BETWEEN (NULL) AND (((t0.c0)!=(rt0.c1))))) ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB) DESC  NULLS FIRST, (((~ (t0.c0)))%((((t0.c0)) NOT BETWEEN (('159482621')) AND ((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT t0.c0)) BETWEEN (NULL) AND (((t0.c0)<>(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)-(rt0.c2))) ISNULL) ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB) DESC  NULLS FIRST, (((~ (t0.c0)))%((((t0.c0)) NOT BETWEEN (('159482621')) AND ((t0.c0)))))  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)-(rt0.c2))) ISNULL) WHERE (((TYPEOF(DISTINCT t0.c0)) BETWEEN (NULL) AND (((t0.c0)!=(rt0.c1))))) ORDER BY rt0.c2 DESC  NULLS LAST, CAST(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB) DESC  NULLS FIRST, (((~ (t0.c0)))%((((t0.c0)) NOT BETWEEN (('159482621')) AND ((t0.c0)))))  NULLS LAST;
SELECT * FROM vt0, rt0, t0 WHERE (COALESCE(DISTINCT t0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (COALESCE(DISTINCT t0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (COALESCE(DISTINCT t0.c0 COLLATE RTRIM, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (CAST(((x'4041')=(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((x'4041')==(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((x'4041')=(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((x'4041')==(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((x'4041')=(rt0.c1)) AS NUMERIC));
SELECT * FROM rt0, vt0 WHERE (0.9615605497237499) ORDER BY (((vt0.c0 IN ()))AND(((rt0.c2)*(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.9615605497237499) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 IN ()))AND(((rt0.c2)*(rt0.c1)))) DESC);
SELECT * FROM rt0, vt0 WHERE (0.9615605497237499) ORDER BY (((vt0.c0 IN ()))AND(((rt0.c2)*(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.9615605497237499) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0 IN ()))AND(((rt0.c2)*(rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('');
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((0x484e02ac) NOTNULL))|(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((0x484e02ac) NOTNULL))|(t0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((0x484e02ac) NOTNULL))|(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((0x484e02ac) NOTNULL))|(t0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((0x484e02ac) NOTNULL))|(t0.c0)));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON LOWER((- (rt0.c1))) WHERE (CASE ((rt0.c2)IS(rt0.c0))  WHEN ((rt0.c0)!=(vt0.c0)) THEN ((0) IS TRUE) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)IS(rt0.c0))  WHEN ((rt0.c0)<>(vt0.c0)) THEN ((0) IS TRUE) ELSE t0.c0 END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON LOWER((- (rt0.c1))));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON LOWER((- (rt0.c1))) WHERE (CASE ((rt0.c2)IS(rt0.c0))  WHEN ((rt0.c0)!=(vt0.c0)) THEN ((0) IS TRUE) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)IS(rt0.c0))  WHEN ((rt0.c0)<>(vt0.c0)) THEN ((0) IS TRUE) ELSE t0.c0 END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON LOWER((- (rt0.c1))));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN t0 ON LOWER((- (rt0.c1))) WHERE (CASE ((rt0.c2)IS(rt0.c0))  WHEN ((rt0.c0)!=(vt0.c0)) THEN ((0) IS TRUE) ELSE t0.c0 END);
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((vt0.c0 COLLATE NOCASE)<=((rt0.c0 IN (vt0.c0, rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<=((rt0.c0 IN (vt0.c0, rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((vt0.c0 COLLATE NOCASE)<=((rt0.c0 IN (vt0.c0, rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)<=((rt0.c0 IN (vt0.c0, rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((vt0.c0 COLLATE NOCASE)<=((rt0.c0 IN (vt0.c0, rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)||(t0.c0))))) ORDER BY ((LIKELY(DISTINCT t0.c0))LIKE(LOWER(DISTINCT t0.c0))) DESC  NULLS LAST, TYPEOF(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)||(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((LIKELY(DISTINCT t0.c0))LIKE(LOWER(DISTINCT t0.c0))) DESC  NULLS LAST, TYPEOF(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (NULL))));
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)||(t0.c0))))) ORDER BY ((LIKELY(DISTINCT t0.c0))LIKE(LOWER(DISTINCT t0.c0))) DESC  NULLS LAST, TYPEOF(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)||(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((LIKELY(DISTINCT t0.c0))LIKE(LOWER(DISTINCT t0.c0))) DESC  NULLS LAST, TYPEOF(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (NULL))));
SELECT ALL * FROM t0 WHERE ((- (((t0.c0)||(t0.c0))))) ORDER BY ((LIKELY(DISTINCT t0.c0))LIKE(LOWER(DISTINCT t0.c0))) DESC  NULLS LAST, TYPEOF(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (NULL)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN 0.4385232385983149 THEN vt0.c0 ELSE rt0.c1 END)) AND (((- (rt0.c0))))) WHERE ((((rt0.c1 IN ())) NOT BETWEEN ('-678911892') AND (((rt0.c2)IS(rt0.c0))))) ORDER BY ((((rt0.c1 IN ())))<>((((rt0.c2)-(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOT BETWEEN ('-678911892') AND (((rt0.c2)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN 0.4385232385983149 THEN vt0.c0 ELSE rt0.c1 END)) AND (((- (rt0.c0))))) ORDER BY ((((rt0.c1 IN ())))<>((((rt0.c2)-(rt0.c0))))) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN 0.4385232385983149 THEN vt0.c0 ELSE rt0.c1 END)) AND (((- (rt0.c0))))) WHERE ((((rt0.c1 IN ())) NOT BETWEEN ('-678911892') AND (((rt0.c2)IS(rt0.c0))))) ORDER BY ((((rt0.c1 IN ())))<>((((rt0.c2)-(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOT BETWEEN ('-678911892') AND (((rt0.c2)IS(rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN 0.4385232385983149 THEN vt0.c0 ELSE rt0.c1 END)) AND (((- (rt0.c0))))) ORDER BY ((((rt0.c1 IN ())))<>((((rt0.c2)-(rt0.c0))))) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((CASE WHEN 0.4385232385983149 THEN vt0.c0 ELSE rt0.c1 END)) AND (((- (rt0.c0))))) WHERE ((((rt0.c1 IN ())) NOT BETWEEN ('-678911892') AND (((rt0.c2)IS(rt0.c0))))) ORDER BY ((((rt0.c1 IN ())))<>((((rt0.c2)-(rt0.c0))))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(LIKELY(DISTINCT rt0.c1))))OR(((rt0.c1)IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON (~ (((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE ((((- (t0.c0))) NOTNULL)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON (~ (((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON (~ (((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE ((((- (t0.c0))) NOTNULL)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON (~ (((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON (~ (((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE ((((- (t0.c0))) NOTNULL)) ORDER BY NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((632113280, rt0.c1, t0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1)))) NOT BETWEEN (2.73705932E8 COLLATE NOCASE) AND (CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((t0.c0)*(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((632113280, rt0.c1, t0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1)))) NOT BETWEEN (2.73705932E8 COLLATE NOCASE) AND (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c0)*(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((632113280, rt0.c1, t0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1)))) NOT BETWEEN (2.73705932E8 COLLATE NOCASE) AND (CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((t0.c0)*(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((632113280, rt0.c1, t0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1)))) NOT BETWEEN (2.73705932E8 COLLATE NOCASE) AND (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c0)*(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((632113280, rt0.c1, t0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c1)))) NOT BETWEEN (2.73705932E8 COLLATE NOCASE) AND (CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((t0.c0)*(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE ((((NOT (t0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END) BETWEEN (json_quote(NULL)) AND (((rt0.c0)<<(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END) BETWEEN (json_quote(NULL)) AND (((rt0.c0)<<(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((NOT (t0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END) BETWEEN (json_quote(NULL)) AND (((rt0.c0)<<(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END) BETWEEN (json_quote(NULL)) AND (((rt0.c0)<<(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((NOT (t0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END) BETWEEN (json_quote(NULL)) AND (((rt0.c0)<<(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(json_remove(rt0.c1, 4.98381229E8) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_remove(rt0.c1, 4.98381229E8) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(json_remove(rt0.c1, 4.98381229E8) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_remove(rt0.c1, 4.98381229E8) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.5733974388488438) ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)<=(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5733974388488438) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)<=(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.5733974388488438) ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)<=(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.5733974388488438) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)<=(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (0.5733974388488438) ORDER BY (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)<=(rt0.c2)))))  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0)GLOB('È§∞KP'))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN LIKELY(vt0.c0) THEN NULL WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) WHEN ((0.29469982676779716) NOT NULL) THEN load_extension(vt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB('È§∞KP'))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN LIKELY(vt0.c0) THEN NULL WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) WHEN ((0.29469982676779716) NOT NULL) THEN load_extension(vt0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0)GLOB('È§∞KP'))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN LIKELY(vt0.c0) THEN NULL WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) WHEN ((0.29469982676779716) NOT NULL) THEN load_extension(vt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB('È§∞KP'))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN LIKELY(vt0.c0) THEN NULL WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) WHEN ((0.29469982676779716) NOT NULL) THEN load_extension(vt0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0)GLOB('È§∞KP'))) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN LIKELY(vt0.c0) THEN NULL WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) WHEN ((0.29469982676779716) NOT NULL) THEN load_extension(vt0.c0) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))>((vt0.c0))))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))) ORDER BY vt0.c0;
SELECT ALL * FROM t0, vt0, rt0 WHERE (((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN ('-48230983') AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN ('-48230983') AND (t0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN ('-48230983') AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN ('-48230983') AND (t0.c0))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((IFNULL(DISTINCT rt0.c1, vt0.c0)) BETWEEN ('-48230983') AND (t0.c0)));
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN ('.\') AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('.\') AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN ('.\') AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('.\') AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN ('.\') AND (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM)))) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)) DESC, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN ()) IN (((rt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c1) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)) DESC, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN ()) IN (((rt0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM)))) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)) DESC, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN ()) IN (((rt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c1) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)) DESC, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN ()) IN (((rt0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM)))) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)) DESC, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST, ((rt0.c1 IN ()) IN (((rt0.c0) NOT NULL))) DESC;
SELECT ALL * FROM rt0 WHERE (((~ (rt0.c2)) IN ())) ORDER BY ((CAST(rt0.c1 AS TEXT))AND((rt0.c2 IN (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS TEXT))AND((rt0.c2 IN (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((~ (rt0.c2)) IN ())) ORDER BY ((CAST(rt0.c1 AS TEXT))AND((rt0.c2 IN (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS TEXT))AND((rt0.c2 IN (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((~ (rt0.c2)) IN ())) ORDER BY ((CAST(rt0.c1 AS TEXT))AND((rt0.c2 IN (rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c0) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((t0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c0) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((t0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c0) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((t0.c0 IN ()))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN rt0.c0 THEN (vt0.c0 IN ()) WHEN (rt0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) ELSE rt0.c1 END) ORDER BY (((((((('592631938')OR(rt0.c1)))AND(rt0.c0)))OR((- (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)) ASC, ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN rt0.c0 THEN (vt0.c0 IN ()) WHEN (rt0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) ELSE rt0.c1 END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((((('592631938')OR(rt0.c1)))AND(rt0.c0)))OR((- (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)) ASC, ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN rt0.c0 THEN (vt0.c0 IN ()) WHEN (rt0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) ELSE rt0.c1 END) ORDER BY (((((((('592631938')OR(rt0.c1)))AND(rt0.c0)))OR((- (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)) ASC, ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN rt0.c0 THEN (vt0.c0 IN ()) WHEN (rt0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) ELSE rt0.c1 END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((((('592631938')OR(rt0.c1)))AND(rt0.c0)))OR((- (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)) ASC, ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c0 COLLATE NOCASE THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN rt0.c0 THEN (vt0.c0 IN ()) WHEN (rt0.c0 IN ()) THEN CAST(t0.c0 AS INTEGER) ELSE rt0.c1 END) ORDER BY (((((((('592631938')OR(rt0.c1)))AND(rt0.c0)))OR((- (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)) ASC, ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ()) DESC;
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))%(((((rt0.c0)OR(vt0.c0)))OR(t0.c0)))) WHERE ((vt0.c0 IN ())) ORDER BY STRFTIME(((vt0.c0)<=(rt0.c2)), t0.c0 COLLATE BINARY, HEX(DISTINCT rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))%(((((rt0.c0)OR(vt0.c0)))OR(t0.c0)))) ORDER BY STRFTIME(((vt0.c0)<=(rt0.c2)), t0.c0 COLLATE BINARY, HEX(DISTINCT rt0.c0)) DESC);
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))%(((((rt0.c0)OR(vt0.c0)))OR(t0.c0)))) WHERE ((vt0.c0 IN ())) ORDER BY STRFTIME(((vt0.c0)<=(rt0.c2)), t0.c0 COLLATE BINARY, HEX(DISTINCT rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))%(((((rt0.c0)OR(vt0.c0)))OR(t0.c0)))) ORDER BY STRFTIME(((vt0.c0)<=(rt0.c2)), t0.c0 COLLATE BINARY, HEX(DISTINCT rt0.c0)) DESC);
SELECT ALL * FROM t0, rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))%(((((rt0.c0)OR(vt0.c0)))OR(t0.c0)))) WHERE ((vt0.c0 IN ())) ORDER BY STRFTIME(((vt0.c0)<=(rt0.c2)), t0.c0 COLLATE BINARY, HEX(DISTINCT rt0.c0)) DESC;
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (x'' IN ()) THEN ((x'8044') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY (((((vt0.c0)>(vt0.c0)), vt0.c0, -612522312 COLLATE RTRIM))>=((((vt0.c0)<>(vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c0))), ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (x'' IN ()) THEN ((x'8044') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)>(vt0.c0)), vt0.c0, -612522312 COLLATE RTRIM))>=((((vt0.c0)!=(vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c0))), ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (x'' IN ()) THEN ((x'8044') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY (((((vt0.c0)>(vt0.c0)), vt0.c0, -612522312 COLLATE RTRIM))>=((((vt0.c0)<>(vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c0))), ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (x'' IN ()) THEN ((x'8044') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)>(vt0.c0)), vt0.c0, -612522312 COLLATE RTRIM))>=((((vt0.c0)!=(vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c0))), ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (x'' IN ()) THEN ((x'8044') NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY (((((vt0.c0)>(vt0.c0)), vt0.c0, -612522312 COLLATE RTRIM))>=((((vt0.c0)<>(vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c0))), ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))==((((rt0.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))==((((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))==((((rt0.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))==((((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))==((((rt0.c2) NOT NULL)))));
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY 1991635118 ASC, CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY 1991635118 ASC, CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY 1991635118 ASC, CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY 1991635118 ASC, CAST(vt0.c0 COLLATE BINARY AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((t0.c0)&(t0.c0))))<(((vt0.c0 IN (rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)&(t0.c0))))<(((vt0.c0 IN (rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((t0.c0)&(t0.c0))))<(((vt0.c0 IN (rt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)&(t0.c0))))<(((vt0.c0 IN (rt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((((t0.c0)&(t0.c0))))<(((vt0.c0 IN (rt0.c0, rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((LIKELY(rt0.c0))=(2.73705932E8)) INNER JOIN t0 ON vt0.c0 WHERE (TYPEOF(DISTINCT ((NULL)-(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((NULL)-(rt0.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((LIKELY(rt0.c0))==(2.73705932E8)) INNER JOIN t0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((LIKELY(rt0.c0))=(2.73705932E8)) INNER JOIN t0 ON vt0.c0 WHERE (TYPEOF(DISTINCT ((NULL)-(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((NULL)-(rt0.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((LIKELY(rt0.c0))==(2.73705932E8)) INNER JOIN t0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((LIKELY(rt0.c0))=(2.73705932E8)) INNER JOIN t0 ON vt0.c0 WHERE (TYPEOF(DISTINCT ((NULL)-(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((1.991635118E9) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, NULL))<>(('503691459', vt0.c0, vt0.c0)))))) ORDER BY (~ ((((vt0.c0))>=((vt0.c0))))), (~ ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST, PRINTF(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), vt0.c0, (+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((1.991635118E9) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, NULL))<>(('503691459', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0))>=((vt0.c0))))), (~ ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST, PRINTF(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), vt0.c0, (+ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((1.991635118E9) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, NULL))<>(('503691459', vt0.c0, vt0.c0)))))) ORDER BY (~ ((((vt0.c0))>=((vt0.c0))))), (~ ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST, PRINTF(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), vt0.c0, (+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((1.991635118E9) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, NULL))<>(('503691459', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((((vt0.c0))>=((vt0.c0))))), (~ ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST, PRINTF(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), vt0.c0, (+ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((1.991635118E9) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ((((vt0.c0, vt0.c0, NULL))<>(('503691459', vt0.c0, vt0.c0)))))) ORDER BY (~ ((((vt0.c0))>=((vt0.c0))))), (~ ((((vt0.c0))>=((vt0.c0)))))  NULLS LAST, PRINTF(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), vt0.c0, (+ (vt0.c0)));
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0)>>(vt0.c0)) ELSE ((t0.c0) IS TRUE) END) ORDER BY (CASE WHEN t0.c0 THEN x'871e' WHEN t0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END IN ()) ASC, (t0.c0 IN ()) COLLATE RTRIM, (('273705932' IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0)>>(vt0.c0)) ELSE ((t0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN t0.c0 THEN x'871e' WHEN t0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END IN ()) ASC, (t0.c0 IN ()) COLLATE RTRIM, (('273705932' IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0)>>(vt0.c0)) ELSE ((t0.c0) IS TRUE) END) ORDER BY (CASE WHEN t0.c0 THEN x'871e' WHEN t0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END IN ()) ASC, (t0.c0 IN ()) COLLATE RTRIM, (('273705932' IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0)>>(vt0.c0)) ELSE ((t0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN t0.c0 THEN x'871e' WHEN t0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END IN ()) ASC, (t0.c0 IN ()) COLLATE RTRIM, (('273705932' IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (CASE ((((vt0.c0)OR(t0.c0)))OR(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0)>>(vt0.c0)) ELSE ((t0.c0) IS TRUE) END) ORDER BY (CASE WHEN t0.c0 THEN x'871e' WHEN t0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c0 END IN ()) ASC, (t0.c0 IN ()) COLLATE RTRIM, (('273705932' IN ()) IN ()) DESC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<(CASE rt0.c0  WHEN 0.0416017773666868 THEN rt0.c0 END)) WHERE (((((rt0.c0) IS FALSE))<=(CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE 0.2867532610647422 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))<=(CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE 0.2867532610647422 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<(CASE rt0.c0  WHEN 0.0416017773666868 THEN rt0.c0 END)));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<(CASE rt0.c0  WHEN 0.0416017773666868 THEN rt0.c0 END)) WHERE (((((rt0.c0) IS FALSE))<=(CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE 0.2867532610647422 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))<=(CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE 0.2867532610647422 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<(CASE rt0.c0  WHEN 0.0416017773666868 THEN rt0.c0 END)));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((x'')<(CASE rt0.c0  WHEN 0.0416017773666868 THEN rt0.c0 END)) WHERE (((((rt0.c0) IS FALSE))<=(CASE NULL  WHEN rt0.c0 THEN rt0.c1 ELSE 0.2867532610647422 END)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((rt0.c2, rt0.c1, t0.c0, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0.6306127956844558, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((rt0.c2, rt0.c1, t0.c0, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0.6306127956844558, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((rt0.c2, rt0.c1, t0.c0, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0.6306127956844558, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((rt0.c2, rt0.c1, t0.c0, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0.6306127956844558, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((rt0.c2, rt0.c1, t0.c0, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, 0.6306127956844558, rt0.c1, t0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2, t0.c0, vt0.c0)))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((CASE WHEN vt0.c0 THEN x'' END)|(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN x'' END)|(rt0.c2))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((CASE WHEN vt0.c0 THEN x'' END)|(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN x'' END)|(rt0.c2))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((CASE WHEN vt0.c0 THEN x'' END)|(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((0Xffffffffc76a129b)AND(rt0.c2)))OR(x'')))AND(vt0.c0)))AND(rt0.c1))) NOT NULL)) ORDER BY NULL COLLATE RTRIM, (('-678911892')*(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0Xffffffffc76a129b)AND(rt0.c2)))OR(x'')))AND(vt0.c0)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY NULL COLLATE RTRIM, (('-678911892')*(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((0Xffffffffc76a129b)AND(rt0.c2)))OR(x'')))AND(vt0.c0)))AND(rt0.c1))) NOT NULL)) ORDER BY NULL COLLATE RTRIM, (('-678911892')*(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0Xffffffffc76a129b)AND(rt0.c2)))OR(x'')))AND(vt0.c0)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY NULL COLLATE RTRIM, (('-678911892')*(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((0Xffffffffc76a129b)AND(rt0.c2)))OR(x'')))AND(vt0.c0)))AND(rt0.c1))) NOT NULL)) ORDER BY NULL COLLATE RTRIM, (('-678911892')*(rt0.c1)) COLLATE BINARY;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC, CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN 0.01141782428431648 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0)|(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN json_extract(vt0.c0, vt0.c0) THEN vt0.c0 WHEN (- (vt0.c0)) THEN (+ (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC, CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN 0.01141782428431648 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0)|(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN json_extract(vt0.c0, vt0.c0) THEN vt0.c0 WHEN (- (vt0.c0)) THEN (+ (vt0.c0)) END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC, CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN 0.01141782428431648 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0)|(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN json_extract(vt0.c0, vt0.c0) THEN vt0.c0 WHEN (- (vt0.c0)) THEN (+ (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC, CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN 0.01141782428431648 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0)|(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN json_extract(vt0.c0, vt0.c0) THEN vt0.c0 WHEN (- (vt0.c0)) THEN (+ (vt0.c0)) END ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC, CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN 0.01141782428431648 THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN ((vt0.c0)|(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN json_extract(vt0.c0, vt0.c0) THEN vt0.c0 WHEN (- (vt0.c0)) THEN (+ (vt0.c0)) END ASC;
SELECT ALL * FROM rt0, t0 WHERE (IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL))) ORDER BY (- (CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT ALL * FROM rt0, t0 WHERE (IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL))) ORDER BY (- (CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL))) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT ALL * FROM rt0, t0 WHERE (IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c2) NOT NULL))) ORDER BY (- (CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (('', rt0.c2, rt0.c2)) AND ((t0.c0, rt0.c1, 'uhYK')))) NOT NULL)) ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE ASC, (((NOT (rt0.c1)))=(CAST(rt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (('', rt0.c2, rt0.c2)) AND ((t0.c0, rt0.c1, 'uhYK')))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE ASC, (((NOT (rt0.c1)))==(CAST(rt0.c2 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (('', rt0.c2, rt0.c2)) AND ((t0.c0, rt0.c1, 'uhYK')))) NOT NULL)) ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE ASC, (((NOT (rt0.c1)))=(CAST(rt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (('', rt0.c2, rt0.c2)) AND ((t0.c0, rt0.c1, 'uhYK')))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE ASC, (((NOT (rt0.c1)))==(CAST(rt0.c2 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (('', rt0.c2, rt0.c2)) AND ((t0.c0, rt0.c1, 'uhYK')))) NOT NULL)) ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE ASC, (((NOT (rt0.c1)))=(CAST(rt0.c2 AS BLOB))) ASC;
SELECT ALL * FROM rt0 WHERE ((NOT (((NULL)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL)&(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((NULL)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL)&(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((NULL)&(rt0.c1)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY (NOT (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY (NOT (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS REAL)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY (NOT (CAST(vt0.c0 AS REAL)))  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (UPPER(rt0.c0)))) ORDER BY highlight(((rt0.c1)<<(t0.c0)), ((rt0.c2)IS NOT(t0.c0)), ((((((((t0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0) NOT BETWEEN (NULL) AND (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (UPPER(rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY highlight(((rt0.c1)<<(t0.c0)), ((rt0.c2)IS NOT(t0.c0)), ((((((((t0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0) NOT BETWEEN (NULL) AND (t0.c0))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (UPPER(rt0.c0)))) ORDER BY highlight(((rt0.c1)<<(t0.c0)), ((rt0.c2)IS NOT(t0.c0)), ((((((((t0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0) NOT BETWEEN (NULL) AND (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (UPPER(rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY highlight(((rt0.c1)<<(t0.c0)), ((rt0.c2)IS NOT(t0.c0)), ((((((((t0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0) NOT BETWEEN (NULL) AND (t0.c0))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (UPPER(rt0.c0)))) ORDER BY highlight(((rt0.c1)<<(t0.c0)), ((rt0.c2)IS NOT(t0.c0)), ((((((((t0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)), ((rt0.c0) NOT BETWEEN (NULL) AND (t0.c0))) DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<=(rt0.c1))) ISNULL) WHERE (CASE ('()' IN ())  WHEN NULL THEN ((t0.c0)AND(rt0.c1)) ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ('()' IN ())  WHEN NULL THEN ((t0.c0)AND(rt0.c1)) ELSE rt0.c2 END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<=(rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<=(rt0.c1))) ISNULL) WHERE (CASE ('()' IN ())  WHEN NULL THEN ((t0.c0)AND(rt0.c1)) ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ('()' IN ())  WHEN NULL THEN ((t0.c0)AND(rt0.c1)) ELSE rt0.c2 END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<=(rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c0)<=(rt0.c1))) ISNULL) WHERE (CASE ('()' IN ())  WHEN NULL THEN ((t0.c0)AND(rt0.c1)) ELSE rt0.c2 END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((NULL)OR(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((((NULL)OR(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((NULL)OR(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((((NULL)OR(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((((NULL)OR(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY)))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))>>((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))>>((- (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY)))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))>>((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))>>((- (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE BINARY)))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))>>((- (rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((NULL)OR('3&C'))) ORDER BY (((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)OR('3&C'))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((t0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((NULL)OR('3&C'))) ORDER BY (((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)OR('3&C'))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((t0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((NULL)OR('3&C'))) ORDER BY (((x'')) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((t0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0, '1685231943', ''))<((rt0.c0, rt0.c0, rt0.c2))))AND(rt0.c2)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0x24f21e84)))))) ORDER BY (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, '1685231943', ''))<((rt0.c0, rt0.c0, rt0.c2))))AND(rt0.c2)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0x24f21e84)))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0, '1685231943', ''))<((rt0.c0, rt0.c0, rt0.c2))))AND(rt0.c2)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0x24f21e84)))))) ORDER BY (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, '1685231943', ''))<((rt0.c0, rt0.c0, rt0.c2))))AND(rt0.c2)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0x24f21e84)))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0, '1685231943', ''))<((rt0.c0, rt0.c0, rt0.c2))))AND(rt0.c2)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0x24f21e84)))))) ORDER BY (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END IN ());
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 INNER JOIN t0 ON vt0.c0 WHERE (((t0.c0 COLLATE NOCASE)=(CAST(vt0.c0 AS TEXT)))) ORDER BY 0.28227531830509434 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)=(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON vt0.c0 ORDER BY 0.28227531830509434 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON vt0.c0 WHERE (((t0.c0 COLLATE NOCASE)=(CAST(vt0.c0 AS TEXT)))) ORDER BY 0.28227531830509434 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)=(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON vt0.c0 ORDER BY 0.28227531830509434 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN t0 ON vt0.c0 WHERE (((t0.c0 COLLATE NOCASE)=(CAST(vt0.c0 AS TEXT)))) ORDER BY 0.28227531830509434 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (0.8186479720796449))) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.8052744531400517))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (0.8186479720796449))) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.8052744531400517)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (0.8186479720796449))) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.8052744531400517))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (0.8186479720796449))) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.8052744531400517)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (0.8186479720796449))) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (LIKELIHOOD(vt0.c0, 0.8052744531400517))));
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))&((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))&((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))&((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))&((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))&((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ('') ORDER BY load_extension(NULL) COLLATE NOCASE, CASE CAST(rt0.c0 AS INTEGER)  WHEN '1213072044' THEN ((rt0.c2)LIKE(t0.c0)) ELSE (((rt0.c1))>((rt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, t0 ORDER BY load_extension(NULL) COLLATE NOCASE, CASE CAST(rt0.c0 AS INTEGER)  WHEN '1213072044' THEN ((rt0.c2)LIKE(t0.c0)) ELSE (((rt0.c1))>((rt0.c0))) END DESC);
SELECT ALL * FROM rt0, t0 WHERE ('') ORDER BY load_extension(NULL) COLLATE NOCASE, CASE CAST(rt0.c0 AS INTEGER)  WHEN '1213072044' THEN ((rt0.c2)LIKE(t0.c0)) ELSE (((rt0.c1))>((rt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, t0 ORDER BY load_extension(NULL) COLLATE NOCASE, CASE CAST(rt0.c0 AS INTEGER)  WHEN '1213072044' THEN ((rt0.c2)LIKE(t0.c0)) ELSE (((rt0.c1))>((rt0.c0))) END DESC);
SELECT ALL * FROM rt0, t0 WHERE ('') ORDER BY load_extension(NULL) COLLATE NOCASE, CASE CAST(rt0.c0 AS INTEGER)  WHEN '1213072044' THEN ((rt0.c2)LIKE(t0.c0)) ELSE (((rt0.c1))>((rt0.c0))) END DESC;
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c0 AS TEXT))IS NOT(((vt0.c0)/(t0.c0))))) ORDER BY CASE COALESCE(DISTINCT t0.c0, '-1971906720')  WHEN (~ (vt0.c0)) THEN x'' ELSE (t0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))IS NOT(((vt0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE COALESCE(DISTINCT t0.c0, '-1971906720')  WHEN (~ (vt0.c0)) THEN x'' ELSE (t0.c0 IN ()) END ASC);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c0 AS TEXT))IS NOT(((vt0.c0)/(t0.c0))))) ORDER BY CASE COALESCE(DISTINCT t0.c0, '-1971906720')  WHEN (~ (vt0.c0)) THEN x'' ELSE (t0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))IS NOT(((vt0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE COALESCE(DISTINCT t0.c0, '-1971906720')  WHEN (~ (vt0.c0)) THEN x'' ELSE (t0.c0 IN ()) END ASC);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c0 AS TEXT))IS NOT(((vt0.c0)/(t0.c0))))) ORDER BY CASE COALESCE(DISTINCT t0.c0, '-1971906720')  WHEN (~ (vt0.c0)) THEN x'' ELSE (t0.c0 IN ()) END ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(t0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(t0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(t0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(t0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(t0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((t0.c0) BETWEEN ('y\ns''~''') AND ('-357263056')) THEN ((rt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE NOCASE  WHEN ((t0.c0) BETWEEN ('y\ns''~''') AND ('-357263056')) THEN ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((t0.c0) BETWEEN ('y\ns''~''') AND ('-357263056')) THEN ((rt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE NOCASE  WHEN ((t0.c0) BETWEEN ('y\ns''~''') AND ('-357263056')) THEN ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((t0.c0) BETWEEN ('y\ns''~''') AND ('-357263056')) THEN ((rt0.c0) NOT NULL) END);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.5823901192419287, (((rt0.c1))<=((rt0.c0))), ((rt0.c2)-(rt0.c1)))) AND ((((t0.c0)-(t0.c0)), '635023374', '8zEeD'))) WHERE (CASE ((rt0.c2) NOT NULL)  WHEN (+ (t0.c0)) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(0.22580884063782414)) END) ORDER BY ((CASE WHEN '' THEN rt0.c0 ELSE rt0.c0 END)*(UPPER(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT NULL)  WHEN (+ (t0.c0)) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(0.22580884063782414)) END) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.5823901192419287, (((rt0.c1))<=((rt0.c0))), ((rt0.c2)-(rt0.c1)))) AND ((((t0.c0)-(t0.c0)), '635023374', '8zEeD'))) ORDER BY ((CASE WHEN '' THEN rt0.c0 ELSE rt0.c0 END)*(UPPER(rt0.c1))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.5823901192419287, (((rt0.c1))<=((rt0.c0))), ((rt0.c2)-(rt0.c1)))) AND ((((t0.c0)-(t0.c0)), '635023374', '8zEeD'))) WHERE (CASE ((rt0.c2) NOT NULL)  WHEN (+ (t0.c0)) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(0.22580884063782414)) END) ORDER BY ((CASE WHEN '' THEN rt0.c0 ELSE rt0.c0 END)*(UPPER(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT NULL)  WHEN (+ (t0.c0)) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(0.22580884063782414)) END) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.5823901192419287, (((rt0.c1))<=((rt0.c0))), ((rt0.c2)-(rt0.c1)))) AND ((((t0.c0)-(t0.c0)), '635023374', '8zEeD'))) ORDER BY ((CASE WHEN '' THEN rt0.c0 ELSE rt0.c0 END)*(UPPER(rt0.c1))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((0.5823901192419287, (((rt0.c1))<=((rt0.c0))), ((rt0.c2)-(rt0.c1)))) AND ((((t0.c0)-(t0.c0)), '635023374', '8zEeD'))) WHERE (CASE ((rt0.c2) NOT NULL)  WHEN (+ (t0.c0)) THEN rt0.c2 WHEN rt0.c0 THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(0.22580884063782414)) END) ORDER BY ((CASE WHEN '' THEN rt0.c0 ELSE rt0.c0 END)*(UPPER(rt0.c1)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c0)LIKE(t0.c0)))OR(CHANGES())))AND(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN (((+ (t0.c0)))) AND ((LIKELIHOOD(vt0.c0, 0.8789203785374237)))), NULLIF((((vt0.c0, t0.c0, '1107544298'))>=((t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c0)LIKE(t0.c0)))OR(CHANGES())))AND(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN (((+ (t0.c0)))) AND ((LIKELIHOOD(vt0.c0, 0.8789203785374237)))), NULLIF((((vt0.c0, t0.c0, '1107544298'))>=((t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS NUMERIC)) DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c0)LIKE(t0.c0)))OR(CHANGES())))AND(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN (((+ (t0.c0)))) AND ((LIKELIHOOD(vt0.c0, 0.8789203785374237)))), NULLIF((((vt0.c0, t0.c0, '1107544298'))>=((t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c0)LIKE(t0.c0)))OR(CHANGES())))AND(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN (((+ (t0.c0)))) AND ((LIKELIHOOD(vt0.c0, 0.8789203785374237)))), NULLIF((((vt0.c0, t0.c0, '1107544298'))>=((t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS NUMERIC)) DESC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((((t0.c0)LIKE(t0.c0)))OR(CHANGES())))AND(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN (((+ (t0.c0)))) AND ((LIKELIHOOD(vt0.c0, 0.8789203785374237)))), NULLIF((((vt0.c0, t0.c0, '1107544298'))>=((t0.c0, t0.c0, t0.c0))), CAST(t0.c0 AS NUMERIC)) DESC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON 'mOuj' WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON 'mOuj');
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON 'mOuj' WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON 'mOuj');
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON 'mOuj' WHERE (((rt0.c1) NOTNULL));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND (((NOT (t0.c0)))))) ORDER BY CAST(((vt0.c0)-(rt0.c1)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(((vt0.c0)-(rt0.c1)) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND (((NOT (t0.c0)))))) ORDER BY CAST(((vt0.c0)-(rt0.c1)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(((vt0.c0)-(rt0.c1)) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND (((NOT (t0.c0)))))) ORDER BY CAST(((vt0.c0)-(rt0.c1)) AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0)>(vt0.c0))))>=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>(vt0.c0))))>=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0)>(vt0.c0))))>=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>(vt0.c0))))>=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c0)>(vt0.c0))))>=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))));
SELECT * FROM t0, rt0, vt0 WHERE ((LIKE(rt0.c2, rt0.c1) IN (DATETIME(rt0.c2, vt0.c0, t0.c0), ((rt0.c0)OR(vt0.c0))))) ORDER BY ((((((((rt0.c2 COLLATE BINARY)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR(CAST(rt0.c1 AS INTEGER))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((LIKE(rt0.c2, rt0.c1) IN (DATETIME(rt0.c2, vt0.c0, t0.c0), ((rt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((((rt0.c2 COLLATE BINARY)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR(CAST(rt0.c1 AS INTEGER))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE ((LIKE(rt0.c2, rt0.c1) IN (DATETIME(rt0.c2, vt0.c0, t0.c0), ((rt0.c0)OR(vt0.c0))))) ORDER BY ((((((((rt0.c2 COLLATE BINARY)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR(CAST(rt0.c1 AS INTEGER))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((LIKE(rt0.c2, rt0.c1) IN (DATETIME(rt0.c2, vt0.c0, t0.c0), ((rt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((((((rt0.c2 COLLATE BINARY)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR(CAST(rt0.c1 AS INTEGER))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC);
SELECT * FROM t0, rt0, vt0 WHERE ((LIKE(rt0.c2, rt0.c1) IN (DATETIME(rt0.c2, vt0.c0, t0.c0), ((rt0.c0)OR(vt0.c0))))) ORDER BY ((((((((rt0.c2 COLLATE BINARY)OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS NUMERIC))))OR(CAST(rt0.c1 AS INTEGER))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER)) ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) NOT BETWEEN (0.37132579304780655) AND ((t0.c0 IN ()))) ASC  NULLS LAST, (((+ (t0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) NOT BETWEEN (0.37132579304780655) AND ((t0.c0 IN ()))) ASC  NULLS LAST, (((+ (t0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER)) ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) NOT BETWEEN (0.37132579304780655) AND ((t0.c0 IN ()))) ASC  NULLS LAST, (((+ (t0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) NOT BETWEEN (0.37132579304780655) AND ((t0.c0 IN ()))) ASC  NULLS LAST, (((+ (t0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER)) ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) NOT BETWEEN (0.37132579304780655) AND ((t0.c0 IN ()))) ASC  NULLS LAST, (((+ (t0.c0))) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c0)<<(vt0.c0))))>((load_extension(vt0.c0, vt0.c0))))) ORDER BY json_object((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST, (~ (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)<<(vt0.c0))))>((load_extension(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY json_object((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST, (~ (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c0)<<(vt0.c0))))>((load_extension(vt0.c0, vt0.c0))))) ORDER BY json_object((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST, (~ (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)<<(vt0.c0))))>((load_extension(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY json_object((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST, (~ (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c0)<<(vt0.c0))))>((load_extension(vt0.c0, vt0.c0))))) ORDER BY json_object((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST, (~ (vt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL));
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c0)LIKE(t0.c0)) IN (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)LIKE(t0.c0)) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c0)LIKE(t0.c0)) IN (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)LIKE(t0.c0)) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c0)LIKE(t0.c0)) IN (((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS REAL)) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ()) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS REAL)) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ()) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS REAL)) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ()) DESC;
SELECT ALL * FROM t0, vt0, rt0 NOT INDEXED WHERE ((NOT ('619847300'))) ORDER BY ((0.6763329684535402 COLLATE NOCASE) ISNULL) DESC  NULLS LAST, (~ (((rt0.c2)OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ('619847300'))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((0.6763329684535402 COLLATE NOCASE) ISNULL) DESC  NULLS LAST, (~ (((rt0.c2)OR(rt0.c2)))) ASC);
SELECT ALL * FROM t0, vt0, rt0 NOT INDEXED WHERE ((NOT ('619847300'))) ORDER BY ((0.6763329684535402 COLLATE NOCASE) ISNULL) DESC  NULLS LAST, (~ (((rt0.c2)OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ('619847300'))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((0.6763329684535402 COLLATE NOCASE) ISNULL) DESC  NULLS LAST, (~ (((rt0.c2)OR(rt0.c2)))) ASC);
SELECT ALL * FROM t0, vt0, rt0 NOT INDEXED WHERE ((NOT ('619847300'))) ORDER BY ((0.6763329684535402 COLLATE NOCASE) ISNULL) DESC  NULLS LAST, (~ (((rt0.c2)OR(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0)));
SELECT * FROM rt0, t0, vt0 WHERE ((((((rt0.c0 IN (vt0.c0)))AND(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN (vt0.c0)))AND(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((rt0.c0 IN (vt0.c0)))AND(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN (vt0.c0)))AND(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((rt0.c0 IN (vt0.c0)))AND(rt0.c2)))OR(CASE rt0.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST((rt0.c2 IN (rt0.c2)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN (rt0.c2)) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST((rt0.c2 IN (rt0.c2)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN (rt0.c2)) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST((rt0.c2 IN (rt0.c2)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c2) ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c2) ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c2) ORDER BY HEX(DISTINCT ((rt0.c2) BETWEEN (NULL) AND (rt0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((x'e5e1', rt0.c0, rt0.c0))>((rt0.c2, rt0.c1, t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((x'e5e1', rt0.c0, rt0.c0))>((rt0.c2, rt0.c1, t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((x'e5e1', rt0.c0, rt0.c0))>((rt0.c2, rt0.c1, t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((x'e5e1', rt0.c0, rt0.c0))>((rt0.c2, rt0.c1, t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((x'e5e1', rt0.c0, rt0.c0))>((rt0.c2, rt0.c1, t0.c0)))) IS FALSE));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (ABS(((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c0) IS TRUE))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (ABS(((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c0) IS TRUE))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (ABS(((t0.c0) IS TRUE)));
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)IS(rt0.c2)) IN ())) ORDER BY (~ ((NOT (rt0.c0)))), (((rt0.c2 IN (rt0.c2)))>>(t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)IS(rt0.c2)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ ((NOT (rt0.c0)))), (((rt0.c2 IN (rt0.c2)))>>(t0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)IS(rt0.c2)) IN ())) ORDER BY (~ ((NOT (rt0.c0)))), (((rt0.c2 IN (rt0.c2)))>>(t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)IS(rt0.c2)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ ((NOT (rt0.c0)))), (((rt0.c2 IN (rt0.c2)))>>(t0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)IS(rt0.c2)) IN ())) ORDER BY (~ ((NOT (rt0.c0)))), (((rt0.c2 IN (rt0.c2)))>>(t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CHAR(t0.c0, vt0.c0, vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CHAR(t0.c0, vt0.c0, vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CHAR(t0.c0, vt0.c0, vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CHAR(t0.c0, vt0.c0, vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(CHAR(t0.c0, vt0.c0, vt0.c0) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CAST(x'' AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(x'' AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CAST(x'' AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(x'' AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((+ (CAST(x'' AS REAL))));
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS NUMERIC))<(((t0.c0)+(t0.c0)))), ((((t0.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND ((t0.c0 IN (t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS NUMERIC))<(((t0.c0)+(t0.c0)))), ((((t0.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND ((t0.c0 IN (t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS NUMERIC))<(((t0.c0)+(t0.c0)))), ((((t0.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND ((t0.c0 IN (t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS NUMERIC))<(((t0.c0)+(t0.c0)))), ((((t0.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND ((t0.c0 IN (t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS NUMERIC))<(((t0.c0)+(t0.c0)))), ((((t0.c0)<=(t0.c0))) NOT BETWEEN (((t0.c0)IS(t0.c0))) AND ((t0.c0 IN (t0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c2)<(rt0.c0)) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN 0.01141782428431648 THEN rt0.c0 END))) ORDER BY CAST(QUOTE(rt0.c0) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<(rt0.c0)) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN 0.01141782428431648 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(QUOTE(rt0.c0) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2)<(rt0.c0)) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN 0.01141782428431648 THEN rt0.c0 END))) ORDER BY CAST(QUOTE(rt0.c0) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<(rt0.c0)) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN 0.01141782428431648 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(QUOTE(rt0.c0) AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2)<(rt0.c0)) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN 0.01141782428431648 THEN rt0.c0 END))) ORDER BY CAST(QUOTE(rt0.c0) AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT * FROM rt0, t0, vt0 WHERE (((x'84bb')|((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))>(((rt0.c1)LIKE(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'84bb')|((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))>(((rt0.c1)LIKE(rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (((x'84bb')|((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))>(((rt0.c1)LIKE(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'84bb')|((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))>(((rt0.c1)LIKE(rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE (((x'84bb')|((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))>(((rt0.c1)LIKE(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (+ (t0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (NOT (0.7015913702574247)) END) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (t0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (NOT (0.7015913702574247)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (+ (t0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (NOT (0.7015913702574247)) END) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (t0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (NOT (0.7015913702574247)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE (+ (t0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (NOT (0.7015913702574247)) END) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (HEX(DISTINCT CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(rt0.c1 AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (HEX(DISTINCT CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(rt0.c1 AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (HEX(DISTINCT CAST(rt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (0X484e02ac) AND (((t0.c0) ISNULL)))) ORDER BY ((((LIKELY(DISTINCT rt0.c1))AND(rt0.c1)))AND(((t0.c0)GLOB(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (0X484e02ac) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((LIKELY(DISTINCT rt0.c1))AND(rt0.c1)))AND(((t0.c0)GLOB(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (0X484e02ac) AND (((t0.c0) ISNULL)))) ORDER BY ((((LIKELY(DISTINCT rt0.c1))AND(rt0.c1)))AND(((t0.c0)GLOB(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (0X484e02ac) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((LIKELY(DISTINCT rt0.c1))AND(rt0.c1)))AND(((t0.c0)GLOB(rt0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN (0X484e02ac) AND (((t0.c0) ISNULL)))) ORDER BY ((((LIKELY(DISTINCT rt0.c1))AND(rt0.c1)))AND(((t0.c0)GLOB(rt0.c0)))) DESC;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c2) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY ASC, ((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (PRINTF(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY ASC, ((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (PRINTF(t0.c0))) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c2) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY ASC, ((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (PRINTF(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY ASC, ((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (PRINTF(t0.c0))) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c2) ORDER BY ((vt0.c0) IS FALSE) COLLATE BINARY ASC, ((((t0.c0) IS FALSE)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (PRINTF(t0.c0))) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM vt0, t0, rt0 WHERE (rt0.c1) ORDER BY ((HEX(rt0.c2)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((HEX(rt0.c2)) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (rt0.c1) ORDER BY ((HEX(rt0.c2)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((HEX(rt0.c2)) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (rt0.c1) ORDER BY ((HEX(rt0.c2)) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)<(rt0.c2))) BETWEEN (((vt0.c0)/(rt0.c2))) AND (((rt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c2))) BETWEEN (((vt0.c0)/(rt0.c2))) AND (((rt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)<(rt0.c2))) BETWEEN (((vt0.c0)/(rt0.c2))) AND (((rt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c2))) BETWEEN (((vt0.c0)/(rt0.c2))) AND (((rt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)<(rt0.c2))) BETWEEN (((vt0.c0)/(rt0.c2))) AND (((rt0.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS TRUE)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS TRUE)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS TRUE)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS TRUE)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) IS TRUE)) AND (((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((+ (vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c2) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END IN (((t0.c0)OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0 ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END IN (((t0.c0)OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c2) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END IN (((t0.c0)OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0 ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END IN (((t0.c0)OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c2) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END IN (((t0.c0)OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR(CAST(NULL AS NUMERIC))))OR(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))OR(CAST(NULL AS NUMERIC))))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR(CAST(NULL AS NUMERIC))))OR(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))OR(CAST(NULL AS NUMERIC))))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2) ISNULL))OR(CAST(NULL AS NUMERIC))))OR(CAST(rt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((NOT (t0.c0)) IN ())) ORDER BY ((+ (vt0.c0)) IN (x''));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((+ (vt0.c0)) IN (x'')));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((NOT (t0.c0)) IN ())) ORDER BY ((+ (vt0.c0)) IN (x''));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((+ (vt0.c0)) IN (x'')));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((NOT (t0.c0)) IN ())) ORDER BY ((+ (vt0.c0)) IN (x''));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE));
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (CAST(((rt0.c2) IS TRUE) AS TEXT));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS REAL)) ORDER BY IFNULL(rt0.c0, ((rt0.c1)*(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0, ((rt0.c1)*(rt0.c0))) ASC);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS REAL)) ORDER BY IFNULL(rt0.c0, ((rt0.c1)*(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS TEXT) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0, ((rt0.c1)*(rt0.c0))) ASC);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS TEXT) AS REAL)) ORDER BY IFNULL(rt0.c0, ((rt0.c1)*(rt0.c0))) ASC;
SELECT * FROM rt0, vt0 WHERE (((NOT (vt0.c0)) IN (UPPER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((NOT (vt0.c0)) IN (UPPER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((NOT (vt0.c0)) IN (UPPER(DISTINCT rt0.c0))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON INSTR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), rt0.c0) WHERE (CASE WHEN (((t0.c0, rt0.c0, rt0.c2))<>((rt0.c2, '', rt0.c2))) THEN CAST(NULL AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c0, rt0.c0, rt0.c2))<>((rt0.c2, '', rt0.c2))) THEN CAST(NULL AS INTEGER) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON INSTR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), rt0.c0));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON INSTR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), rt0.c0) WHERE (CASE WHEN (((t0.c0, rt0.c0, rt0.c2))<>((rt0.c2, '', rt0.c2))) THEN CAST(NULL AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c0, rt0.c0, rt0.c2))<>((rt0.c2, '', rt0.c2))) THEN CAST(NULL AS INTEGER) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON INSTR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), rt0.c0));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON INSTR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), rt0.c0) WHERE (CASE WHEN (((t0.c0, rt0.c0, rt0.c2))<>((rt0.c2, '', rt0.c2))) THEN CAST(NULL AS INTEGER) END);
SELECT ALL * FROM t0 NOT INDEXED WHERE (CAST(((t0.c0)OR(t0.c0)) AS REAL)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)==(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)OR(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)==(t0.c0)))));
SELECT ALL * FROM t0 NOT INDEXED WHERE (CAST(((t0.c0)OR(t0.c0)) AS REAL)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)==(t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)OR(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)==(t0.c0)))));
SELECT ALL * FROM t0 NOT INDEXED WHERE (CAST(((t0.c0)OR(t0.c0)) AS REAL)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0)==(t0.c0))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c2, rt0.c2, vt0.c0))=((rt0.c1, rt0.c1, rt0.c1))) IN ())) ORDER BY CASE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))  WHEN (((rt0.c2, t0.c0, t0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN (((((((('S2z')AND(t0.c0)))AND(rt0.c1)))AND(t0.c0)))OR(vt0.c0)) WHEN (rt0.c2 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOTNULL) THEN (NOT (rt0.c1)) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, rt0.c2, vt0.c0))=((rt0.c1, rt0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))  WHEN (((rt0.c2, t0.c0, t0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN (((((((('S2z')AND(t0.c0)))AND(rt0.c1)))AND(t0.c0)))OR(vt0.c0)) WHEN (rt0.c2 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOTNULL) THEN (NOT (rt0.c1)) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c2, rt0.c2, vt0.c0))=((rt0.c1, rt0.c1, rt0.c1))) IN ())) ORDER BY CASE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))  WHEN (((rt0.c2, t0.c0, t0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN (((((((('S2z')AND(t0.c0)))AND(rt0.c1)))AND(t0.c0)))OR(vt0.c0)) WHEN (rt0.c2 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOTNULL) THEN (NOT (rt0.c1)) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, rt0.c2, vt0.c0))=((rt0.c1, rt0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CASE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))  WHEN (((rt0.c2, t0.c0, t0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN (((((((('S2z')AND(t0.c0)))AND(rt0.c1)))AND(t0.c0)))OR(vt0.c0)) WHEN (rt0.c2 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOTNULL) THEN (NOT (rt0.c1)) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c2, rt0.c2, vt0.c0))=((rt0.c1, rt0.c1, rt0.c1))) IN ())) ORDER BY CASE (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))  WHEN (((rt0.c2, t0.c0, t0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN (((((((('S2z')AND(t0.c0)))AND(rt0.c1)))AND(t0.c0)))OR(vt0.c0)) WHEN (rt0.c2 IN ()) THEN CAST(t0.c0 AS TEXT) WHEN ((vt0.c0) NOTNULL) THEN (NOT (rt0.c1)) ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) END;
SELECT COUNT(*) FROM t0 WHERE ('R9') ORDER BY ((((((1.7976931348623157E308)AND(t0.c0)))OR(t0.c0)))>=(CAST(t0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (('R9') IS TRUE)  as count FROM t0 ORDER BY ((((((1.7976931348623157E308)AND(t0.c0)))OR(t0.c0)))>=(CAST(t0.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM t0 WHERE ('R9') ORDER BY ((((((1.7976931348623157E308)AND(t0.c0)))OR(t0.c0)))>=(CAST(t0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (('R9') IS TRUE)  as count FROM t0 ORDER BY ((((((1.7976931348623157E308)AND(t0.c0)))OR(t0.c0)))>=(CAST(t0.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM t0 WHERE ('R9') ORDER BY ((((((1.7976931348623157E308)AND(t0.c0)))OR(t0.c0)))>=(CAST(t0.c0 AS NUMERIC))) ASC;
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY CAST((t0.c0 IN ()) AS NUMERIC) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY CAST((t0.c0 IN ()) AS NUMERIC) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST((t0.c0 IN ()) AS NUMERIC) DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((((rt0.c1)IS NOT(t0.c0))) BETWEEN (7.8832907E7) AND (((t0.c0)/(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c1)IS NOT(t0.c0))) BETWEEN (7.8832907E7) AND (((t0.c0)/(rt0.c2)))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((((rt0.c1)IS NOT(t0.c0))) BETWEEN (7.8832907E7) AND (((t0.c0)/(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c1)IS NOT(t0.c0))) BETWEEN (7.8832907E7) AND (((t0.c0)/(rt0.c2)))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((((rt0.c1)IS NOT(t0.c0))) BETWEEN (7.8832907E7) AND (((t0.c0)/(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) BETWEEN (rt0.c1) AND (CASE WHEN '-949349733' THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)LIKE(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) BETWEEN (rt0.c1) AND (CASE WHEN '-949349733' THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) BETWEEN (rt0.c1) AND (CASE WHEN '-949349733' THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)LIKE(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) BETWEEN (rt0.c1) AND (CASE WHEN '-949349733' THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(rt0.c0)))OR(t0.c0))) BETWEEN (rt0.c1) AND (CASE WHEN '-949349733' THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS TEXT));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((((vt0.c0)OR(x'')))AND(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(x'')))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((((vt0.c0)OR(x'')))AND(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(x'')))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(((((vt0.c0)OR(x'')))AND(rt0.c1)) AS NUMERIC));
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY UNLIKELY(DISTINCT '')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY UNLIKELY(DISTINCT '')  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY UNLIKELY(DISTINCT '')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY UNLIKELY(DISTINCT '')  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY UNLIKELY(DISTINCT '')  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM))) ORDER BY (((((t0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) AND (CASE WHEN x'' THEN vt0.c0 WHEN 0.7474222163118627 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))  NULLS LAST, vt0.c0  NULLS FIRST, (((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'', NULL, ((t0.c0)<(vt0.c0)), 0Xf97c897)) AND ((t0.c0, COALESCE(t0.c0, t0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.9771494622290946, ((vt0.c0)<=(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) AND (CASE WHEN x'' THEN vt0.c0 WHEN 0.7474222163118627 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))  NULLS LAST, vt0.c0  NULLS FIRST, (((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'', NULL, ((t0.c0)<(vt0.c0)), 0xf97c897)) AND ((t0.c0, COALESCE(t0.c0, t0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.9771494622290946, ((vt0.c0)<=(t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM))) ORDER BY (((((t0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) AND (CASE WHEN x'' THEN vt0.c0 WHEN 0.7474222163118627 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))  NULLS LAST, vt0.c0  NULLS FIRST, (((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'', NULL, ((t0.c0)<(vt0.c0)), 0Xf97c897)) AND ((t0.c0, COALESCE(t0.c0, t0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.9771494622290946, ((vt0.c0)<=(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) AND (CASE WHEN x'' THEN vt0.c0 WHEN 0.7474222163118627 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))  NULLS LAST, vt0.c0  NULLS FIRST, (((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'', NULL, ((t0.c0)<(vt0.c0)), 0xf97c897)) AND ((t0.c0, COALESCE(t0.c0, t0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.9771494622290946, ((vt0.c0)<=(t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0 COLLATE RTRIM))) ORDER BY (((((t0.c0, t0.c0, t0.c0))<((vt0.c0, t0.c0, t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) AND (CASE WHEN x'' THEN vt0.c0 WHEN 0.7474222163118627 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 END))  NULLS LAST, vt0.c0  NULLS FIRST, (((vt0.c0, t0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'', NULL, ((t0.c0)<(vt0.c0)), 0Xf97c897)) AND ((t0.c0, COALESCE(t0.c0, t0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.9771494622290946, ((vt0.c0)<=(t0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON ((((LIKELY('635023374'))AND(((NULL) NOTNULL))))AND(CAST(rt0.c2 AS REAL))) WHERE ((((x'0583')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END)) AND (((rt0.c1 IN (rt0.c2)))))) ORDER BY (((0.003314940340121031)<>(vt0.c0)) IN ((('1359910940')!=(t0.c0)))), ((rt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(t0.c0)))AND(rt0.c0))) AND ((((rt0.c0))<((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'0583')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END)) AND (((rt0.c1 IN (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((((LIKELY('635023374'))AND(((NULL) NOTNULL))))AND(CAST(rt0.c2 AS REAL))) ORDER BY (((0.003314940340121031)!=(vt0.c0)) IN ((('1359910940')!=(t0.c0)))), ((rt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(t0.c0)))AND(rt0.c0))) AND ((((rt0.c0))<((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON ((((LIKELY('635023374'))AND(((NULL) NOTNULL))))AND(CAST(rt0.c2 AS REAL))) WHERE ((((x'0583')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END)) AND (((rt0.c1 IN (rt0.c2)))))) ORDER BY (((0.003314940340121031)<>(vt0.c0)) IN ((('1359910940')!=(t0.c0)))), ((rt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(t0.c0)))AND(rt0.c0))) AND ((((rt0.c0))<((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'0583')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END)) AND (((rt0.c1 IN (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((((LIKELY('635023374'))AND(((NULL) NOTNULL))))AND(CAST(rt0.c2 AS REAL))) ORDER BY (((0.003314940340121031)!=(vt0.c0)) IN ((('1359910940')!=(t0.c0)))), ((rt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(t0.c0)))AND(rt0.c0))) AND ((((rt0.c0))<((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON ((((LIKELY('635023374'))AND(((NULL) NOTNULL))))AND(CAST(rt0.c2 AS REAL))) WHERE ((((x'0583')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END)) AND (((rt0.c1 IN (rt0.c2)))))) ORDER BY (((0.003314940340121031)<>(vt0.c0)) IN ((('1359910940')!=(t0.c0)))), ((rt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(t0.c0)))AND(rt0.c0))) AND ((((rt0.c0))<((vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)!=(rt0.c2))))) ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (rt0.c1)))))OR(((rt0.c1)<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)!=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (rt0.c1)))))OR(((rt0.c1)<=(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)!=(rt0.c2))))) ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (rt0.c1)))))OR(((rt0.c1)<=(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)!=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (rt0.c1)))))OR(((rt0.c1)<=(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)!=(rt0.c2))))) ORDER BY ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND((~ (rt0.c1)))))OR(((rt0.c1)<=(rt0.c0))));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON (NULL IN ((~ (rt0.c0)))) WHERE (((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))+((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))+((+ (t0.c0))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (NULL IN ((~ (rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON (NULL IN ((~ (rt0.c0)))) WHERE (((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))+((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))+((+ (t0.c0))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (NULL IN ((~ (rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON (NULL IN ((~ (rt0.c0)))) WHERE (((((((((((t0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))+((+ (t0.c0)))));
SELECT * FROM t0, rt0 WHERE ((rt0.c1 IN (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((rt0.c1 IN (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((rt0.c1 IN (((rt0.c2) NOTNULL))));
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)AND((+ (rt0.c2)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)AND((+ (rt0.c2)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)AND((+ (rt0.c2)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)AND((+ (rt0.c2)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)AND((+ (rt0.c2)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (- (((((rt0.c1)AND(t0.c0)))AND(rt0.c2)))) WHERE ((rt0.c0 IN ())) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS LAST, (((((rt0.c2))>((rt0.c1)))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (- (((((rt0.c1)AND(t0.c0)))AND(rt0.c2)))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS LAST, (((((rt0.c2))>((rt0.c1)))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (- (((((rt0.c1)AND(t0.c0)))AND(rt0.c2)))) WHERE ((rt0.c0 IN ())) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS LAST, (((((rt0.c2))>((rt0.c1)))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (- (((((rt0.c1)AND(t0.c0)))AND(rt0.c2)))) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS LAST, (((((rt0.c2))>((rt0.c1)))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (- (((((rt0.c1)AND(t0.c0)))AND(rt0.c2)))) WHERE ((rt0.c0 IN ())) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS TEXT) ASC  NULLS LAST, (((((rt0.c2))>((rt0.c1)))) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0)) AND (((+ (rt0.c0)))))) ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<(t0.c0))) AND (((0X75247a08)>=(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c0)) AND (((+ (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<(t0.c0))) AND (((0X75247a08)>=(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0)) AND (((+ (rt0.c0)))))) ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<(t0.c0))) AND (((0X75247a08)>=(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c0)) AND (((+ (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<(t0.c0))) AND (((0X75247a08)>=(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0)) AND (((+ (rt0.c0)))))) ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<(t0.c0))) AND (((0X75247a08)>=(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END) ISNULL)) ORDER BY (- (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END) ISNULL)) ORDER BY (- (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE WHEN t0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END) ISNULL)) ORDER BY (- (rt0.c2))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((t0.c0)-(rt0.c2)))OR(NULL)))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)-(rt0.c2)))OR(NULL)))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((t0.c0)-(rt0.c2)))OR(NULL)))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)-(rt0.c2)))OR(NULL)))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, vt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((((t0.c0)-(rt0.c2)))OR(NULL)))OR(t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE (CASE WHEN CAST(rt0.c1 AS REAL) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) ELSE vt0.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (rt0.c2);
SELECT COUNT(*) FROM t0 WHERE (CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS TEXT)) ORDER BY ((((('-290331923') NOTNULL)))=((((t0.c0)IS(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((((('-290331923') NOTNULL)))=((((t0.c0)IS(t0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS TEXT)) ORDER BY ((((('-290331923') NOTNULL)))=((((t0.c0)IS(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((((('-290331923') NOTNULL)))=((((t0.c0)IS(t0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS TEXT)) ORDER BY ((((('-290331923') NOTNULL)))=((((t0.c0)IS(t0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))|((- (rt0.c2))))) ORDER BY (('1183595202')>>(CAST(rt0.c0 AS TEXT)))  NULLS LAST, IFNULL(DISTINCT rt0.c1, rt0.c2) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))|((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (('1183595202')>>(CAST(rt0.c0 AS TEXT)))  NULLS LAST, IFNULL(DISTINCT rt0.c1, rt0.c2) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))|((- (rt0.c2))))) ORDER BY (('1183595202')>>(CAST(rt0.c0 AS TEXT)))  NULLS LAST, IFNULL(DISTINCT rt0.c1, rt0.c2) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))|((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (('1183595202')>>(CAST(rt0.c0 AS TEXT)))  NULLS LAST, IFNULL(DISTINCT rt0.c1, rt0.c2) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))|((- (rt0.c2))))) ORDER BY (('1183595202')>>(CAST(rt0.c0 AS TEXT)))  NULLS LAST, IFNULL(DISTINCT rt0.c1, rt0.c2) COLLATE BINARY ASC;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)|(vt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE RTRIM WHERE (CASE ((rt0.c2)||(rt0.c2))  WHEN ((t0.c0)<<(rt0.c2)) THEN (+ (rt0.c0)) ELSE (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((t0.c0, t0.c0, x'7cce'))) END) ORDER BY ((rt0.c1) BETWEEN ((rt0.c1 IN ())) AND (((((((((-290331923)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)||(rt0.c2))  WHEN ((t0.c0)<<(rt0.c2)) THEN (+ (rt0.c0)) ELSE (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((t0.c0, t0.c0, x'7cce'))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE RTRIM ORDER BY ((rt0.c1) BETWEEN ((rt0.c1 IN ())) AND (((((((((-290331923)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE RTRIM WHERE (CASE ((rt0.c2)||(rt0.c2))  WHEN ((t0.c0)<<(rt0.c2)) THEN (+ (rt0.c0)) ELSE (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((t0.c0, t0.c0, x'7cce'))) END) ORDER BY ((rt0.c1) BETWEEN ((rt0.c1 IN ())) AND (((((((((-290331923)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)||(rt0.c2))  WHEN ((t0.c0)<<(rt0.c2)) THEN (+ (rt0.c0)) ELSE (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((t0.c0, t0.c0, x'7cce'))) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE RTRIM ORDER BY ((rt0.c1) BETWEEN ((rt0.c1 IN ())) AND (((((((((-290331923)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON CAST(rt0.c0 AS TEXT) COLLATE RTRIM WHERE (CASE ((rt0.c2)||(rt0.c2))  WHEN ((t0.c0)<<(rt0.c2)) THEN (+ (rt0.c0)) ELSE (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((t0.c0, t0.c0, x'7cce'))) END) ORDER BY ((rt0.c1) BETWEEN ((rt0.c1 IN ())) AND (((((((((-290331923)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY) ORDER BY UPPER((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN (('746155844', rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY UPPER((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN (('746155844', rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY) ORDER BY UPPER((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN (('746155844', rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY UPPER((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN (('746155844', rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY) ORDER BY UPPER((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN (('746155844', rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c2, rt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY RTRIM(((t0.c0) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY RTRIM(((t0.c0) NOTNULL)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY RTRIM(((t0.c0) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY RTRIM(((t0.c0) NOTNULL)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY RTRIM(((t0.c0) NOTNULL)) ASC;
SELECT * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) NOTNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((- (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((- (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((- (rt0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE CHANGES() END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE CHANGES() END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE CHANGES() END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE CHANGES() END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)!=(vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) ELSE CHANGES() END);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((('1575235734') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('1575235734') ISNULL)) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((('1575235734') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('1575235734') ISNULL)) IS TRUE)  as count FROM rt0, vt0, t0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((('1575235734') ISNULL));
SELECT * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER)) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (CAST(((t0.c0) IS FALSE) AS REAL)) ORDER BY UNLIKELY((((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY UNLIKELY((((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) ASC);
SELECT * FROM vt0, t0 WHERE (CAST(((t0.c0) IS FALSE) AS REAL)) ORDER BY UNLIKELY((((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY UNLIKELY((((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) ASC);
SELECT * FROM vt0, t0 WHERE (CAST(((t0.c0) IS FALSE) AS REAL)) ORDER BY UNLIKELY((((NULL)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)) ORDER BY rt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)) ORDER BY rt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE)) ORDER BY rt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, ')<rwK18', rt0.c2)) BETWEEN (((rt0.c1 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, (((rt0.c0))<>((rt0.c0))))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '' THEN rt0.c2 END, CAST(rt0.c0 AS TEXT), (('-292322084')<>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, ')<rwK18', rt0.c2)) BETWEEN (((rt0.c1 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, (((rt0.c0))<>((rt0.c0))))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '' THEN rt0.c2 END, CAST(rt0.c0 AS TEXT), (('-292322084')<>(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, ')<rwK18', rt0.c2)) BETWEEN (((rt0.c1 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, (((rt0.c0))<>((rt0.c0))))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '' THEN rt0.c2 END, CAST(rt0.c0 AS TEXT), (('-292322084')<>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, ')<rwK18', rt0.c2)) BETWEEN (((rt0.c1 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, (((rt0.c0))<>((rt0.c0))))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '' THEN rt0.c2 END, CAST(rt0.c0 AS TEXT), (('-292322084')<>(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, ')<rwK18', rt0.c2)) BETWEEN (((rt0.c1 IN (rt0.c1)), rt0.c1 COLLATE RTRIM, (((rt0.c0))<>((rt0.c0))))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '' THEN rt0.c2 END, CAST(rt0.c0 AS TEXT), (('-292322084')<>(rt0.c1))))));
SELECT * FROM t0 WHERE (((t0.c0)IS NOT(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)IS NOT(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)IS NOT(CAST(t0.c0 AS BLOB))));
SELECT * FROM vt0, t0 WHERE (((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE x'' END)OR(vt0.c0)))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)%(t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE x'' END)OR(vt0.c0)))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)%(t0.c0)) END ASC);
SELECT * FROM vt0, t0 WHERE (((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE x'' END)OR(vt0.c0)))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)%(t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE x'' END)OR(vt0.c0)))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)%(t0.c0)) END ASC);
SELECT * FROM vt0, t0 WHERE (((((((((CASE WHEN t0.c0 THEN vt0.c0 ELSE x'' END)OR(vt0.c0)))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))AND(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((t0.c0)%(t0.c0)) END ASC;
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c0))<((t0.c0))))%((- (vt0.c0)))) WHERE (((((t0.c0) IS FALSE))-(0.5148034942109294))) ORDER BY ((((((((TRIM(DISTINCT t0.c0))AND((((t0.c0))>(('60565438'))))))OR(x'')))AND(((t0.c0)%(vt0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC  NULLS FIRST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((0.3304971300444428)AND(vt0.c0)))AND(0.9771494622290946)))) DESC, CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))-(0.5148034942109294))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((vt0.c0))<((t0.c0))))%((- (vt0.c0)))) ORDER BY ((((((((TRIM(DISTINCT t0.c0))AND((((t0.c0))>(('60565438'))))))OR(x'')))AND(((t0.c0)%(vt0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC  NULLS FIRST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((0.3304971300444428)AND(vt0.c0)))AND(0.9771494622290946)))) DESC, CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c0))<((t0.c0))))%((- (vt0.c0)))) WHERE (((((t0.c0) IS FALSE))-(0.5148034942109294))) ORDER BY ((((((((TRIM(DISTINCT t0.c0))AND((((t0.c0))>(('60565438'))))))OR(x'')))AND(((t0.c0)%(vt0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC  NULLS FIRST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((0.3304971300444428)AND(vt0.c0)))AND(0.9771494622290946)))) DESC, CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))-(0.5148034942109294))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((vt0.c0))<((t0.c0))))%((- (vt0.c0)))) ORDER BY ((((((((TRIM(DISTINCT t0.c0))AND((((t0.c0))>(('60565438'))))))OR(x'')))AND(((t0.c0)%(vt0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC  NULLS FIRST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((0.3304971300444428)AND(vt0.c0)))AND(0.9771494622290946)))) DESC, CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN t0 ON (((((vt0.c0))<((t0.c0))))%((- (vt0.c0)))) WHERE (((((t0.c0) IS FALSE))-(0.5148034942109294))) ORDER BY ((((((((TRIM(DISTINCT t0.c0))AND((((t0.c0))>(('60565438'))))))OR(x'')))AND(((t0.c0)%(vt0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) DESC  NULLS FIRST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (((((0.3304971300444428)AND(vt0.c0)))AND(0.9771494622290946)))) DESC, CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (0.5365644991645546) ORDER BY ((rt0.c2 COLLATE BINARY)LIKE(CAST(rt0.c2 AS NUMERIC))), (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.5365644991645546) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY)LIKE(CAST(rt0.c2 AS NUMERIC))), (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS TEXT))) DESC);
SELECT ALL * FROM rt0 WHERE (0.5365644991645546) ORDER BY ((rt0.c2 COLLATE BINARY)LIKE(CAST(rt0.c2 AS NUMERIC))), (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.5365644991645546) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY)LIKE(CAST(rt0.c2 AS NUMERIC))), (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS TEXT))) DESC);
SELECT ALL * FROM rt0 WHERE (0.5365644991645546) ORDER BY ((rt0.c2 COLLATE BINARY)LIKE(CAST(rt0.c2 AS NUMERIC))), (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS TEXT))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM t0, vt0 WHERE ((+ ('%Jex')));
SELECT SUM(count) FROM (SELECT (((+ ('%Jex'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ ('%Jex')));
SELECT SUM(count) FROM (SELECT (((+ ('%Jex'))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ ('%Jex')));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0)|('-357263056'))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0)|('-357263056'))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0)|('-357263056'))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0)|('-357263056'))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0)|('-357263056'))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)IS(rt0.c1)))) AND (((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c1)IS(rt0.c1)))) AND (((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, vt0.c0))))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)IS(rt0.c1)))) AND (((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c1)IS(rt0.c1)))) AND (((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, vt0.c0))))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)IS(rt0.c1)))) AND (((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, vt0.c0)))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c0)))<=(CAST(0X1cf4cf28 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))<=(CAST(0x1cf4cf28 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c0)))<=(CAST(0X1cf4cf28 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))<=(CAST(0x1cf4cf28 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((+ (t0.c0)))<=(CAST(0X1cf4cf28 AS TEXT))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (NOT (TOTAL_CHANGES())) WHERE ('-375789987') ORDER BY (+ (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-375789987') IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (NOT (TOTAL_CHANGES())) ORDER BY (+ (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (NOT (TOTAL_CHANGES())) WHERE ('-375789987') ORDER BY (+ (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-375789987') IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (NOT (TOTAL_CHANGES())) ORDER BY (+ (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (NOT (TOTAL_CHANGES())) WHERE ('-375789987') ORDER BY (+ (rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((rt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((rt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((rt0.c0) NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))LIKE(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))LIKE(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))LIKE(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))LIKE(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))LIKE(CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (NULL) AND (t0.c0)))<<(NULL))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (NULL) AND (t0.c0)))<<(NULL))) IS TRUE)  as count FROM t0 ORDER BY x'');
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (NULL) AND (t0.c0)))<<(NULL))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (NULL) AND (t0.c0)))<<(NULL))) IS TRUE)  as count FROM t0 ORDER BY x'');
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (NULL) AND (t0.c0)))<<(NULL))) ORDER BY x'';
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c2))) ISNULL)) ORDER BY '-1608971861', ((CAST(rt0.c0 AS BLOB))<>(rt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-1608971861', ((CAST(rt0.c0 AS BLOB))<>(rt0.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c2))) ISNULL)) ORDER BY '-1608971861', ((CAST(rt0.c0 AS BLOB))<>(rt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-1608971861', ((CAST(rt0.c0 AS BLOB))<>(rt0.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c2))) ISNULL)) ORDER BY '-1608971861', ((CAST(rt0.c0 AS BLOB))<>(rt0.c0 COLLATE NOCASE)) DESC;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) NOTNULL)) ORDER BY 0.8575858768186011  NULLS FIRST, (~ (((((((((rt0.c1)OR(0.003314940340121031)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c2) IS TRUE)) BETWEEN (((t0.c0) ISNULL)) AND (((rt0.c2)&(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY 0.8575858768186011  NULLS FIRST, (~ (((((((((rt0.c1)OR(0.003314940340121031)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c2) IS TRUE)) BETWEEN (((t0.c0) ISNULL)) AND (((rt0.c2)&(rt0.c2)))) DESC);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) NOTNULL)) ORDER BY 0.8575858768186011  NULLS FIRST, (~ (((((((((rt0.c1)OR(0.003314940340121031)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c2) IS TRUE)) BETWEEN (((t0.c0) ISNULL)) AND (((rt0.c2)&(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY 0.8575858768186011  NULLS FIRST, (~ (((((((((rt0.c1)OR(0.003314940340121031)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c2) IS TRUE)) BETWEEN (((t0.c0) ISNULL)) AND (((rt0.c2)&(rt0.c2)))) DESC);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c0)LIKE(rt0.c0))) NOTNULL)) ORDER BY 0.8575858768186011  NULLS FIRST, (~ (((((((((rt0.c1)OR(0.003314940340121031)))OR(rt0.c0)))OR(t0.c0)))OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c2) IS TRUE)) BETWEEN (((t0.c0) ISNULL)) AND (((rt0.c2)&(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(t0.c0))))) ORDER BY (((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)>>(vt0.c0)))), (((+ (t0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)>>(vt0.c0)))), (((+ (t0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(t0.c0))))) ORDER BY (((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)>>(vt0.c0)))), (((+ (t0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)>>(vt0.c0)))), (((+ (t0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(t0.c0))))) ORDER BY (((((NOT (vt0.c0)))OR((vt0.c0 IN ()))))AND(((vt0.c0)>>(vt0.c0)))), (((+ (t0.c0))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))<=((((vt0.c0)-(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB)))<=((((vt0.c0)-(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))<=((((vt0.c0)-(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB)))<=((((vt0.c0)-(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB)))<=((((vt0.c0)-(vt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (CAST((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) AS BLOB)) ORDER BY (((((- (rt0.c2)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY (((((- (rt0.c2)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (CAST((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) AS BLOB)) ORDER BY (((((- (rt0.c2)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY (((((- (rt0.c2)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON (- (((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (CAST((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) AS BLOB)) ORDER BY (((((- (rt0.c2)))OR(((vt0.c0) NOTNULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c0 COLLATE BINARY)OR(UNLIKELY(DISTINCT t0.c0))))OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(COALESCE(t0.c0, t0.c0))))AND(((t0.c0) IS FALSE))))AND(json_remove(t0.c0, t0.c0)))) ORDER BY json_valid(((t0.c0) BETWEEN (t0.c0) AND ('-1872723353')));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0 COLLATE BINARY)OR(UNLIKELY(DISTINCT t0.c0))))OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(COALESCE(t0.c0, t0.c0))))AND(((t0.c0) IS FALSE))))AND(json_remove(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY json_valid(((t0.c0) BETWEEN (t0.c0) AND ('-1872723353'))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c0 COLLATE BINARY)OR(UNLIKELY(DISTINCT t0.c0))))OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(COALESCE(t0.c0, t0.c0))))AND(((t0.c0) IS FALSE))))AND(json_remove(t0.c0, t0.c0)))) ORDER BY json_valid(((t0.c0) BETWEEN (t0.c0) AND ('-1872723353')));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0 COLLATE BINARY)OR(UNLIKELY(DISTINCT t0.c0))))OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(COALESCE(t0.c0, t0.c0))))AND(((t0.c0) IS FALSE))))AND(json_remove(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY json_valid(((t0.c0) BETWEEN (t0.c0) AND ('-1872723353'))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((t0.c0 COLLATE BINARY)OR(UNLIKELY(DISTINCT t0.c0))))OR(t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR(COALESCE(t0.c0, t0.c0))))AND(((t0.c0) IS FALSE))))AND(json_remove(t0.c0, t0.c0)))) ORDER BY json_valid(((t0.c0) BETWEEN (t0.c0) AND ('-1872723353')));
SELECT COUNT(*) FROM t0, vt0 WHERE (0X34570bad);
SELECT SUM(count) FROM (SELECT ((0x34570bad) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (0X34570bad);
SELECT SUM(count) FROM (SELECT ((0x34570bad) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (0X34570bad);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (ABS(DISTINCT LIKELY(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT LIKELY(rt0.c0))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (ABS(DISTINCT LIKELY(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT LIKELY(rt0.c0))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (ABS(DISTINCT LIKELY(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))) ORDER BY x''  NULLS LAST, ((('2071154709', (~ (',N%k‰âõx·Æ≠')), NULL))=(((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((((((((vt0.c0)OR(0.8908974761197217)))AND(0.13196893603737636)))AND(rt0.c1)))AND(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)))  NULLS FIRST, CAST((~ (rt0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY x''  NULLS LAST, ((('2071154709', (~ (',N%k‰âõx·Æ≠')), NULL))==(((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((((((((vt0.c0)OR(0.8908974761197217)))AND(0.13196893603737636)))AND(rt0.c1)))AND(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)))  NULLS FIRST, CAST((~ (rt0.c1)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))) ORDER BY x''  NULLS LAST, ((('2071154709', (~ (',N%k‰âõx·Æ≠')), NULL))=(((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((((((((vt0.c0)OR(0.8908974761197217)))AND(0.13196893603737636)))AND(rt0.c1)))AND(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)))  NULLS FIRST, CAST((~ (rt0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY x''  NULLS LAST, ((('2071154709', (~ (',N%k‰âõx·Æ≠')), NULL))==(((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((((((((vt0.c0)OR(0.8908974761197217)))AND(0.13196893603737636)))AND(rt0.c1)))AND(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)))  NULLS FIRST, CAST((~ (rt0.c1)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))) ORDER BY x''  NULLS LAST, ((('2071154709', (~ (',N%k‰âõx·Æ≠')), NULL))=(((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((((((((vt0.c0)OR(0.8908974761197217)))AND(0.13196893603737636)))AND(rt0.c1)))AND(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE x'' END)))  NULLS FIRST, CAST((~ (rt0.c1)) AS REAL)  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY HEX((rt0.c2 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY HEX((rt0.c2 IN ())) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY HEX((rt0.c2 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY HEX((rt0.c2 IN ())) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY HEX((rt0.c2 IN ())) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('FALSE')))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('FALSE'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('FALSE')))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('FALSE'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('FALSE')))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY (NOT ((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE NOCASE)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NOT ((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY (NOT ((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE NOCASE)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NOT ((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(rt0.c2 COLLATE NOCASE)))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY (NOT ((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) DESC;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0)/(t0.c0)) IN ()) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) WHERE ((((rt0.c1) ISNULL) IN ())) ORDER BY ((((((t0.c0)OR(rt0.c1)))OR(rt0.c0)))>(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '5ÔÇπ' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)), 'Crf', ((((rt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0)/(t0.c0)) IN ()) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) ORDER BY ((((((t0.c0)OR(rt0.c1)))OR(rt0.c0)))>(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '5ÔÇπ' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)), 'Crf', ((((rt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0)/(t0.c0)) IN ()) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) WHERE ((((rt0.c1) ISNULL) IN ())) ORDER BY ((((((t0.c0)OR(rt0.c1)))OR(rt0.c0)))>(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '5ÔÇπ' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)), 'Crf', ((((rt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0)/(t0.c0)) IN ()) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) ORDER BY ((((((t0.c0)OR(rt0.c1)))OR(rt0.c0)))>(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '5ÔÇπ' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)), 'Crf', ((((rt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON (((t0.c0)/(t0.c0)) IN ()) LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) WHERE ((((rt0.c1) ISNULL) IN ())) ORDER BY ((((((t0.c0)OR(rt0.c1)))OR(rt0.c0)))>(CASE WHEN vt0.c0 THEN rt0.c1 WHEN '5ÔÇπ' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)), 'Crf', ((((rt0.c0))<=((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1)<(rt0.c1)) THEN UNLIKELY(rt0.c0) WHEN DATE(rt0.c2, rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1)<(rt0.c1)) THEN UNLIKELY(rt0.c0) WHEN DATE(rt0.c2, rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1)<(rt0.c1)) THEN UNLIKELY(rt0.c0) WHEN DATE(rt0.c2, rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1)<(rt0.c1)) THEN UNLIKELY(rt0.c0) WHEN DATE(rt0.c2, rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN ((rt0.c1)<(rt0.c1)) THEN UNLIKELY(rt0.c0) WHEN DATE(rt0.c2, rt0.c2, rt0.c0) THEN rt0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM rt0 WHERE (CASE (('ÍÅ¨V')AND(rt0.c1))  WHEN JULIANDAY(rt0.c1, rt0.c2, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))OR(x'eeb1')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('ÍÅ¨V')AND(rt0.c1))  WHEN JULIANDAY(rt0.c1, rt0.c2, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))OR(x'eeb1')) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (('ÍÅ¨V')AND(rt0.c1))  WHEN JULIANDAY(rt0.c1, rt0.c2, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))OR(x'eeb1')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('ÍÅ¨V')AND(rt0.c1))  WHEN JULIANDAY(rt0.c1, rt0.c2, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))OR(x'eeb1')) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (('ÍÅ¨V')AND(rt0.c1))  WHEN JULIANDAY(rt0.c1, rt0.c2, rt0.c1) THEN ((((rt0.c1)AND(rt0.c1)))OR(x'eeb1')) END);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(((((x'c896bbe8')OR(rt0.c2)))OR(x'')))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))OR(((((x'c896bbe8')OR(rt0.c2)))OR(x'')))))AND(rt0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(((((x'c896bbe8')OR(rt0.c2)))OR(x'')))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))OR(((((x'c896bbe8')OR(rt0.c2)))OR(x'')))))AND(rt0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(((((x'c896bbe8')OR(rt0.c2)))OR(x'')))))AND(rt0.c0)));
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN '60565438' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c0 IN (t0.c0)) THEN '60565438' END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN '60565438' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c0 IN (t0.c0)) THEN '60565438' END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN (t0.c0 IN (t0.c0)) THEN '60565438' END);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt0 ON 'dyBaS}·∞û' WHERE (ABS(DISTINCT ((NULL)||(t0.c0)))) ORDER BY (~ ('-886388785' COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((NULL)||(t0.c0)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON 'dyBaS}·∞û' ORDER BY (~ ('-886388785' COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt0 ON 'dyBaS}·∞û' WHERE (ABS(DISTINCT ((NULL)||(t0.c0)))) ORDER BY (~ ('-886388785' COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((NULL)||(t0.c0)))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON 'dyBaS}·∞û' ORDER BY (~ ('-886388785' COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt0 ON 'dyBaS}·∞û' WHERE (ABS(DISTINCT ((NULL)||(t0.c0)))) ORDER BY (~ ('-886388785' COLLATE NOCASE)) DESC;
SELECT * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (CAST(rt0.c2 AS TEXT)))) ORDER BY CAST(0x30336ccf AS NUMERIC), rt0.c1 ASC, 0.22780329716730519  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY CAST(0x30336ccf AS NUMERIC), rt0.c1 ASC, 0.22780329716730519  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (CAST(rt0.c2 AS TEXT)))) ORDER BY CAST(0x30336ccf AS NUMERIC), rt0.c1 ASC, 0.22780329716730519  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY CAST(0x30336ccf AS NUMERIC), rt0.c1 ASC, 0.22780329716730519  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (CAST(rt0.c2 AS TEXT)))) ORDER BY CAST(0x30336ccf AS NUMERIC), rt0.c1 ASC, 0.22780329716730519  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ('G\' COLLATE RTRIM) ORDER BY CASE WHEN x'dc05' COLLATE NOCASE THEN (+ (rt0.c2)) ELSE (- (rt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('G\' COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 ORDER BY CASE WHEN x'dc05' COLLATE NOCASE THEN (+ (rt0.c2)) ELSE (- (rt0.c0)) END DESC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ('G\' COLLATE RTRIM) ORDER BY CASE WHEN x'dc05' COLLATE NOCASE THEN (+ (rt0.c2)) ELSE (- (rt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('G\' COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 ORDER BY CASE WHEN x'dc05' COLLATE NOCASE THEN (+ (rt0.c2)) ELSE (- (rt0.c0)) END DESC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ('G\' COLLATE RTRIM) ORDER BY CASE WHEN x'dc05' COLLATE NOCASE THEN (+ (rt0.c2)) ELSE (- (rt0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)>(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)|(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)>(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)|(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)>(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)|(t0.c0)))));
SELECT * FROM vt0, rt0, t0 WHERE (CAST(((rt0.c0)<<(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)<<(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (CAST(((rt0.c0)<<(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)<<(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (CAST(((rt0.c0)<<(rt0.c2)) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE ((HEX(rt0.c0) IN ())) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN 0.09586855531084426 END  NULLS FIRST, (- ((((rt0.c2))>=((-1241822063)))));
SELECT SUM(count) FROM (SELECT (((HEX(rt0.c0) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN 0.09586855531084426 END  NULLS FIRST, (- ((((rt0.c2))>=((-1241822063))))));
SELECT COUNT(*) FROM rt0 WHERE ((HEX(rt0.c0) IN ())) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN 0.09586855531084426 END  NULLS FIRST, (- ((((rt0.c2))>=((-1241822063)))));
SELECT SUM(count) FROM (SELECT (((HEX(rt0.c0) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN 0.09586855531084426 END  NULLS FIRST, (- ((((rt0.c2))>=((-1241822063))))));
SELECT COUNT(*) FROM rt0 WHERE ((HEX(rt0.c0) IN ())) ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN 0.09586855531084426 END  NULLS FIRST, (- ((((rt0.c2))>=((-1241822063)))));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c1)IS NOT(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c1)IS NOT(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c1)IS NOT(vt0.c0)) IN ()));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 END))==((((t0.c0)<(t0.c0))))) WHERE (((rt0.c0)+((rt0.c2 IN ())))) ORDER BY ((((((-1152361403, rt0.c0, t0.c0))>((t0.c0, vt0.c0, t0.c0)))))<>((rt0.c2))), json_valid(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)  NULLS LAST, (CAST(rt0.c0 AS NUMERIC) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)+((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 END))==((((t0.c0)<(t0.c0))))) ORDER BY ((((((-1152361403, rt0.c0, t0.c0))>((t0.c0, vt0.c0, t0.c0)))))<>((rt0.c2))), json_valid(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)  NULLS LAST, (CAST(rt0.c0 AS NUMERIC) IN ()) ASC);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 END))==((((t0.c0)<(t0.c0))))) WHERE (((rt0.c0)+((rt0.c2 IN ())))) ORDER BY ((((((-1152361403, rt0.c0, t0.c0))>((t0.c0, vt0.c0, t0.c0)))))<>((rt0.c2))), json_valid(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)  NULLS LAST, (CAST(rt0.c0 AS NUMERIC) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)+((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 END))==((((t0.c0)<(t0.c0))))) ORDER BY ((((((-1152361403, rt0.c0, t0.c0))>((t0.c0, vt0.c0, t0.c0)))))<>((rt0.c2))), json_valid(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)  NULLS LAST, (CAST(rt0.c0 AS NUMERIC) IN ()) ASC);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN t0.c0 END))==((((t0.c0)<(t0.c0))))) WHERE (((rt0.c0)+((rt0.c2 IN ())))) ORDER BY ((((((-1152361403, rt0.c0, t0.c0))>((t0.c0, vt0.c0, t0.c0)))))<>((rt0.c2))), json_valid(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)  NULLS LAST, (CAST(rt0.c0 AS NUMERIC) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)/(vt0.c0)) COLLATE RTRIM) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)/(vt0.c0)) COLLATE RTRIM) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)/(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)/(vt0.c0)) COLLATE RTRIM) ORDER BY (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT * FROM rt0, t0, vt0 WHERE (json(CAST(rt0.c1 AS BLOB))) ORDER BY (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC, rt0.c2  NULLS LAST, (((rt0.c0 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((json(CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC, rt0.c2  NULLS LAST, (((rt0.c0 IN ())) NOT NULL));
SELECT * FROM rt0, t0, vt0 WHERE (json(CAST(rt0.c1 AS BLOB))) ORDER BY (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC, rt0.c2  NULLS LAST, (((rt0.c0 IN ())) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((json(CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC, rt0.c2  NULLS LAST, (((rt0.c0 IN ())) NOT NULL));
SELECT * FROM rt0, t0, vt0 WHERE (json(CAST(rt0.c1 AS BLOB))) ORDER BY (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) COLLATE NOCASE DESC, rt0.c2  NULLS LAST, (((rt0.c0 IN ())) NOT NULL);
SELECT * FROM rt0 WHERE ((~ ((rt0.c1 IN (0.7652536691252942))))) ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN 0.4385232385983149 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN (0.7652536691252942))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN 0.4385232385983149 END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ ((rt0.c1 IN (0.7652536691252942))))) ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN 0.4385232385983149 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN (0.7652536691252942))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN 0.4385232385983149 END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((~ ((rt0.c1 IN (0.7652536691252942))))) ORDER BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN 0.4385232385983149 END DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0) ISNULL) THEN ((t0.c0)>(t0.c0)) ELSE t0.c0 COLLATE NOCASE END) ORDER BY (((t0.c0)AND(t0.c0)) IN (((t0.c0) NOT NULL), (((t0.c0))<=((0.9212370051066989)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0) ISNULL) THEN ((t0.c0)>(t0.c0)) ELSE t0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)AND(t0.c0)) IN (((t0.c0) NOT NULL), (((t0.c0))<=((0.9212370051066989))))));
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0) ISNULL) THEN ((t0.c0)>(t0.c0)) ELSE t0.c0 COLLATE NOCASE END) ORDER BY (((t0.c0)AND(t0.c0)) IN (((t0.c0) NOT NULL), (((t0.c0))<=((0.9212370051066989)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0) ISNULL) THEN ((t0.c0)>(t0.c0)) ELSE t0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)AND(t0.c0)) IN (((t0.c0) NOT NULL), (((t0.c0))<=((0.9212370051066989))))));
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0) ISNULL) THEN ((t0.c0)>(t0.c0)) ELSE t0.c0 COLLATE NOCASE END) ORDER BY (((t0.c0)AND(t0.c0)) IN (((t0.c0) NOT NULL), (((t0.c0))<=((0.9212370051066989)))));
SELECT COUNT(*) FROM t0 WHERE (ABS(t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((ABS(t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (ABS(t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((ABS(t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (ABS(t0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 END)+(((vt0.c0)OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 END)+(((vt0.c0)OR(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 END)+(((vt0.c0)OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 END)+(((vt0.c0)OR(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(t0.c0 AS REAL)) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 END)+(((vt0.c0)OR(t0.c0)))) DESC;
SELECT * FROM vt0, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ((NOT (rt0.c1))))) ORDER BY ((((((((((('', rt0.c2, rt0.c0, rt0.c2, rt0.c0))<=((rt0.c2, 1.183595202E9, rt0.c1, 0.8708820800489849, rt0.c1))))OR(rt0.c0)))OR(((rt0.c2)=(rt0.c1)))))OR('1^')))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))), (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND (((rt0.c2 IN (0x1cf4cf28)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((('', rt0.c2, rt0.c0, rt0.c2, rt0.c0))<=((rt0.c2, 1.183595202E9, rt0.c1, 0.8708820800489849, rt0.c1))))OR(rt0.c0)))OR(((rt0.c2)==(rt0.c1)))))OR('1^')))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))), (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND (((rt0.c2 IN (0x1cf4cf28)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ((NOT (rt0.c1))))) ORDER BY ((((((((((('', rt0.c2, rt0.c0, rt0.c2, rt0.c0))<=((rt0.c2, 1.183595202E9, rt0.c1, 0.8708820800489849, rt0.c1))))OR(rt0.c0)))OR(((rt0.c2)=(rt0.c1)))))OR('1^')))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))), (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND (((rt0.c2 IN (0x1cf4cf28)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((('', rt0.c2, rt0.c0, rt0.c2, rt0.c0))<=((rt0.c2, 1.183595202E9, rt0.c1, 0.8708820800489849, rt0.c1))))OR(rt0.c0)))OR(((rt0.c2)==(rt0.c1)))))OR('1^')))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))), (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND (((rt0.c2 IN (0x1cf4cf28)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ((NOT (rt0.c1))))) ORDER BY ((((((((((('', rt0.c2, rt0.c0, rt0.c2, rt0.c0))<=((rt0.c2, 1.183595202E9, rt0.c1, 0.8708820800489849, rt0.c1))))OR(rt0.c0)))OR(((rt0.c2)=(rt0.c1)))))OR('1^')))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))), (((rt0.c1)) NOT BETWEEN (((rt0.c0 IN (rt0.c0)))) AND (((rt0.c2 IN (0x1cf4cf28)))))  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ('zz'))) ORDER BY ((CAST(0.9617919374368882 AS INTEGER))+(((rt0.c1)&(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ('zz'))) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED ORDER BY ((CAST(0.9617919374368882 AS INTEGER))+(((rt0.c1)&(rt0.c0)))) ASC);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ('zz'))) ORDER BY ((CAST(0.9617919374368882 AS INTEGER))+(((rt0.c1)&(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ('zz'))) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED ORDER BY ((CAST(0.9617919374368882 AS INTEGER))+(((rt0.c1)&(rt0.c0)))) ASC);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ('zz'))) ORDER BY ((CAST(0.9617919374368882 AS INTEGER))+(((rt0.c1)&(rt0.c0)))) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NULL IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c1))>((((rt0.c0)=(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>((((rt0.c0)==(t0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c1))>((((rt0.c0)=(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>((((rt0.c0)==(t0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c1))>((((rt0.c0)=(t0.c0))))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (('')) AND ((NULL)))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('')) AND ((NULL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (('')) AND ((NULL)))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('')) AND ((NULL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (('')) AND ((NULL)))) ORDER BY rt0.c0  NULLS LAST;
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c2, 0.04517992700197382)) NOT BETWEEN ((t0.c0 IN ())) AND (((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))) WHERE ((((((((((- (vt0.c0)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2)GLOB(rt0.c2)))))AND(CAST(rt0.c2 AS TEXT))))OR((((rt0.c1))==((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2)GLOB(rt0.c2)))))AND(CAST(rt0.c2 AS TEXT))))OR((((rt0.c1))==((rt0.c1)))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c2, 0.04517992700197382)) NOT BETWEEN ((t0.c0 IN ())) AND (((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c2, 0.04517992700197382)) NOT BETWEEN ((t0.c0 IN ())) AND (((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))) WHERE ((((((((((- (vt0.c0)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2)GLOB(rt0.c2)))))AND(CAST(rt0.c2 AS TEXT))))OR((((rt0.c1))==((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (vt0.c0)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2)GLOB(rt0.c2)))))AND(CAST(rt0.c2 AS TEXT))))OR((((rt0.c1))==((rt0.c1)))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c2, 0.04517992700197382)) NOT BETWEEN ((t0.c0 IN ())) AND (((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))));
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c2, 0.04517992700197382)) NOT BETWEEN ((t0.c0 IN ())) AND (((((rt0.c1)OR(t0.c0)))OR(rt0.c1)))) WHERE ((((((((((- (vt0.c0)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2)GLOB(rt0.c2)))))AND(CAST(rt0.c2 AS TEXT))))OR((((rt0.c1))==((rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))&(CAST(vt0.c0 AS REAL)))) ORDER BY CAST((((vt0.c0))<>((vt0.c0))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))&(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))!=((vt0.c0))) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))&(CAST(vt0.c0 AS REAL)))) ORDER BY CAST((((vt0.c0))<>((vt0.c0))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))&(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))!=((vt0.c0))) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE))&(CAST(vt0.c0 AS REAL)))) ORDER BY CAST((((vt0.c0))<>((vt0.c0))) AS BLOB) ASC;
SELECT COUNT(*) FROM rt0 WHERE (json_array((((rt0.c1))>((rt0.c0))), ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_array((((rt0.c1))>((rt0.c0))), ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_array((((rt0.c1))>((rt0.c0))), ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_array((((rt0.c1))>((rt0.c0))), ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_array((((rt0.c1))>((rt0.c0))), ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (0.1790448026094843))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (0.1790448026094843))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (0.1790448026094843))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (0.1790448026094843))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (0.1790448026094843))) NOT NULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((('7j' IN (rt0.c1, rt0.c2)))=(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((('7j' IN (rt0.c1, rt0.c2)))==(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('7j' IN (rt0.c1, rt0.c2)))=(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((('7j' IN (rt0.c1, rt0.c2)))==(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('7j' IN (rt0.c1, rt0.c2)))=(rt0.c1)));
SELECT ALL * FROM t0, vt0, rt0 WHERE (load_extension(CASE WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((load_extension(CASE WHEN rt0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (load_extension(CASE WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((load_extension(CASE WHEN rt0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON '-1210656329' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT t0.c0, 'F&*') COLLATE RTRIM WHERE (highlight((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), (- (rt0.c2)), ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)), (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((highlight((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), (- (rt0.c2)), ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)), (- (vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON '-1210656329' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT t0.c0, 'F&*') COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON '-1210656329' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT t0.c0, 'F&*') COLLATE RTRIM WHERE (highlight((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), (- (rt0.c2)), ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)), (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((highlight((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), (- (rt0.c2)), ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)), (- (vt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON '-1210656329' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT t0.c0, 'F&*') COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON '-1210656329' RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT t0.c0, 'F&*') COLLATE RTRIM WHERE (highlight((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))), (- (rt0.c2)), ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)), (- (vt0.c0))));
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)>=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)>=(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE NOCASE WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE NOCASE WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c0 AS REAL) COLLATE NOCASE WHERE (rt0.c2);
SELECT ALL * FROM vt0 WHERE (((0.03597397136604796) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (IFNULL(vt0.c0, vt0.c0)))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((((((((vt0.c0)OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND((('?Ê∑ÄGF	') ISNULL))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)==(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.03597397136604796) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((((((((vt0.c0)OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND((('?Ê∑ÄGF	') ISNULL))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)=(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((0.03597397136604796) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (IFNULL(vt0.c0, vt0.c0)))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((((((((vt0.c0)OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND((('?Ê∑ÄGF	') ISNULL))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)==(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.03597397136604796) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((((((((vt0.c0)OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND((('?Ê∑ÄGF	') ISNULL))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)=(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((0.03597397136604796) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (IFNULL(vt0.c0, vt0.c0)))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST, ((((((((vt0.c0)OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND((('?Ê∑ÄGF	') ISNULL))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)==(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (((vt0.c0)<(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)<(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (((vt0.c0)<(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)<(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (((vt0.c0)<(vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0)<=(rt0.c1)) IN ()));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0)LIKE(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)LIKE(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0)LIKE(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)LIKE(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0)LIKE(t0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN '' THEN (t0.c0 IN ()) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) ORDER BY CAST(((NULL)>(0.8401176744416695)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN (t0.c0 IN ()) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((NULL)>(0.8401176744416695)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN '' THEN (t0.c0 IN ()) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) ORDER BY CAST(((NULL)>(0.8401176744416695)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN (t0.c0 IN ()) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY CAST(((NULL)>(0.8401176744416695)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN '' THEN (t0.c0 IN ()) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) ORDER BY CAST(((NULL)>(0.8401176744416695)) AS INTEGER);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON 'g s\oc]t' RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (((((vt0.c0)OR(rt0.c0)))OR(t0.c0)))) WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND('878119853'))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND('878119853'))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON 'g s\oc]t' RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (((((vt0.c0)OR(rt0.c0)))OR(t0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON 'g s\oc]t' RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (((((vt0.c0)OR(rt0.c0)))OR(t0.c0)))) WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND('878119853'))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND('878119853'))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON 'g s\oc]t' RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (((((vt0.c0)OR(rt0.c0)))OR(t0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON 'g s\oc]t' RIGHT OUTER JOIN rt0 ON (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (((((vt0.c0)OR(rt0.c0)))OR(t0.c0)))) WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND('878119853'))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END) AND (((rt0.c0)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END) AND (((rt0.c0)|(t0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END) AND (((rt0.c0)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END) AND (((rt0.c0)|(t0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END) AND (((rt0.c0)|(t0.c0)))));
SELECT * FROM rt0, t0, vt0 WHERE (ABS(rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (ABS(rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (ABS(rt0.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) ORDER BY TRIM(DISTINCT LIKE(rt0.c1, rt0.c0, 'v'), NULLIF(t0.c0, t0.c0)) ASC, (- (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))), ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY TRIM(DISTINCT LIKE(rt0.c1, rt0.c0, 'v'), NULLIF(t0.c0, t0.c0)) ASC, (- (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))), ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) ORDER BY TRIM(DISTINCT LIKE(rt0.c1, rt0.c0, 'v'), NULLIF(t0.c0, t0.c0)) ASC, (- (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))), ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY TRIM(DISTINCT LIKE(rt0.c1, rt0.c0, 'v'), NULLIF(t0.c0, t0.c0)) ASC, (- (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))), ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) ORDER BY TRIM(DISTINCT LIKE(rt0.c1, rt0.c0, 'v'), NULLIF(t0.c0, t0.c0)) ASC, (- (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))), ((vt0.c0) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS BLOB))) DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)<<(TOTAL_CHANGES()))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)<<(TOTAL_CHANGES()))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(TOTAL_CHANGES())));
SELECT ALL * FROM t0 WHERE (ABS(CASE t0.c0  WHEN t0.c0 THEN '' ELSE '1799123613' END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CASE t0.c0  WHEN t0.c0 THEN '' ELSE '1799123613' END)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(CASE t0.c0  WHEN t0.c0 THEN '' ELSE '1799123613' END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CASE t0.c0  WHEN t0.c0 THEN '' ELSE '1799123613' END)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (ABS(CASE t0.c0  WHEN t0.c0 THEN '' ELSE '1799123613' END));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END IN ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END IN ((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END IN ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END IN ((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END IN ((t0.c0 IN ()))));
SELECT * FROM vt0, rt0, t0 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((((((((((rt0.c1)AND('ÍÅ¨Dtk4?')))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2))))>=(((((rt0.c2, t0.c0, rt0.c2))<=((rt0.c2, '', t0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((((((((rt0.c1)AND('ÍÅ¨Dtk4?')))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2))))>=(((((rt0.c2, t0.c0, rt0.c2))<=((rt0.c2, '', t0.c0))))))  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((((((((((rt0.c1)AND('ÍÅ¨Dtk4?')))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2))))>=(((((rt0.c2, t0.c0, rt0.c2))<=((rt0.c2, '', t0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((((((((((rt0.c1)AND('ÍÅ¨Dtk4?')))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2))))>=(((((rt0.c2, t0.c0, rt0.c2))<=((rt0.c2, '', t0.c0))))))  NULLS FIRST);
SELECT * FROM vt0, rt0, t0 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((((((((((rt0.c1)AND('ÍÅ¨Dtk4?')))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2))))>=(((((rt0.c2, t0.c0, rt0.c2))<=((rt0.c2, '', t0.c0))))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.04365999126750897)))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'eb09' END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.04365999126750897)))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'eb09' END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.04365999126750897)))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'eb09' END)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.04365999126750897)))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'eb09' END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.04365999126750897)))) BETWEEN (vt0.c0) AND (CASE vt0.c0  WHEN vt0.c0 THEN x'eb09' END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CASE vt0.c0  WHEN rt0.c2 THEN t0.c0 END COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((159482621)))))>=((NULLIF(t0.c0, rt0.c1)))) WHERE ((((~ (rt0.c1)))&(((vt0.c0) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END)<(CAST(rt0.c0 AS REAL))), vt0.c0;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))&(((vt0.c0) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CASE vt0.c0  WHEN rt0.c2 THEN t0.c0 END COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((159482621)))))>=((NULLIF(t0.c0, rt0.c1)))) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END)<(CAST(rt0.c0 AS REAL))), vt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CASE vt0.c0  WHEN rt0.c2 THEN t0.c0 END COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((159482621)))))>=((NULLIF(t0.c0, rt0.c1)))) WHERE ((((~ (rt0.c1)))&(((vt0.c0) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END)<(CAST(rt0.c0 AS REAL))), vt0.c0;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))&(((vt0.c0) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CASE vt0.c0  WHEN rt0.c2 THEN t0.c0 END COLLATE BINARY RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((159482621)))))>=((NULLIF(t0.c0, rt0.c1)))) ORDER BY ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 END)<(CAST(rt0.c0 AS REAL))), vt0.c0);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON TRIM('0.003314940340121031') WHERE (-46109439) ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-46109439) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON TRIM('0.003314940340121031') ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON TRIM('0.003314940340121031') WHERE (-46109439) ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-46109439) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON TRIM('0.003314940340121031') ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON TRIM('0.003314940340121031') WHERE (-46109439) ORDER BY CAST(rt0.c0 AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((0X37eb24c5)&(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((CASE WHEN 0Xffffffffccf44fea THEN vt0.c0 END)<<(((vt0.c0)!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((0X37eb24c5)&(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN 0Xffffffffccf44fea THEN vt0.c0 END)<<(((vt0.c0)<>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0X37eb24c5)&(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((CASE WHEN 0Xffffffffccf44fea THEN vt0.c0 END)<<(((vt0.c0)!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((0X37eb24c5)&(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN 0Xffffffffccf44fea THEN vt0.c0 END)<<(((vt0.c0)<>(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((0X37eb24c5)&(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((CASE WHEN 0Xffffffffccf44fea THEN vt0.c0 END)<<(((vt0.c0)!=(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rtreenode(x'', rt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (rtreenode(x'', rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rtreenode(x'', rt0.c0))));
SELECT SUM(count) FROM (SELECT (((- (rtreenode(x'', rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rtreenode(x'', rt0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 IN (t0.c0)), ((t0.c0)AND('Oe')), (NOT (t0.c0)), CAST(t0.c0 AS BLOB), -408515597))<((((((t0.c0)OR(x'')))AND(t0.c0)), (t0.c0 IN ()), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)OR(t0.c0)), (- (t0.c0)))))) ORDER BY ((t0.c0 IN (t0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN (t0.c0)), ((t0.c0)AND('Oe')), (NOT (t0.c0)), CAST(t0.c0 AS BLOB), -408515597))<((((((t0.c0)OR(x'')))AND(t0.c0)), (t0.c0 IN ()), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)OR(t0.c0)), (- (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 IN (t0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 IN (t0.c0)), ((t0.c0)AND('Oe')), (NOT (t0.c0)), CAST(t0.c0 AS BLOB), -408515597))<((((((t0.c0)OR(x'')))AND(t0.c0)), (t0.c0 IN ()), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)OR(t0.c0)), (- (t0.c0)))))) ORDER BY ((t0.c0 IN (t0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN (t0.c0)), ((t0.c0)AND('Oe')), (NOT (t0.c0)), CAST(t0.c0 AS BLOB), -408515597))<((((((t0.c0)OR(x'')))AND(t0.c0)), (t0.c0 IN ()), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)OR(t0.c0)), (- (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 IN (t0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 IN (t0.c0)), ((t0.c0)AND('Oe')), (NOT (t0.c0)), CAST(t0.c0 AS BLOB), -408515597))<((((((t0.c0)OR(x'')))AND(t0.c0)), (t0.c0 IN ()), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)OR(t0.c0)), (- (t0.c0)))))) ORDER BY ((t0.c0 IN (t0.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (7.46155844E8);
SELECT SUM(count) FROM (SELECT ((7.46155844E8) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (7.46155844E8);
SELECT SUM(count) FROM (SELECT ((7.46155844E8) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (7.46155844E8);
SELECT * FROM vt0, rt0 WHERE (-8.86388785E8) ORDER BY CASE WHEN ((rt0.c2)AND(vt0.c0)) THEN NULLIF(vt0.c0, rt0.c0) WHEN (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=(('''6dA''„´ÇDF\', rt0.c0, 1965324808, rt0.c2, rt0.c2))) THEN x'0414' WHEN vt0.c0 THEN (~ (vt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((-8.86388785E8) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c2)AND(vt0.c0)) THEN NULLIF(vt0.c0, rt0.c0) WHEN (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=(('''6dA''„´ÇDF\', rt0.c0, 1965324808, rt0.c2, rt0.c2))) THEN x'0414' WHEN vt0.c0 THEN (~ (vt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END END DESC);
SELECT * FROM vt0, rt0 WHERE (-8.86388785E8) ORDER BY CASE WHEN ((rt0.c2)AND(vt0.c0)) THEN NULLIF(vt0.c0, rt0.c0) WHEN (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=(('''6dA''„´ÇDF\', rt0.c0, 1965324808, rt0.c2, rt0.c2))) THEN x'0414' WHEN vt0.c0 THEN (~ (vt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((-8.86388785E8) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c2)AND(vt0.c0)) THEN NULLIF(vt0.c0, rt0.c0) WHEN (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=(('''6dA''„´ÇDF\', rt0.c0, 1965324808, rt0.c2, rt0.c2))) THEN x'0414' WHEN vt0.c0 THEN (~ (vt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END END DESC);
SELECT * FROM vt0, rt0 WHERE (-8.86388785E8) ORDER BY CASE WHEN ((rt0.c2)AND(vt0.c0)) THEN NULLIF(vt0.c0, rt0.c0) WHEN (((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>=(('''6dA''„´ÇDF\', rt0.c0, 1965324808, rt0.c2, rt0.c2))) THEN x'0414' WHEN vt0.c0 THEN (~ (vt0.c0)) ELSE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END END DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('w%rv.'))) THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((load_extension(vt0.c0)) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((((NULL)OR(x'9ae1')))OR(vt0.c0)))), (LENGTH(x'') IN (((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('w%rv.'))) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY ((load_extension(vt0.c0)) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((((NULL)OR(x'9ae1')))OR(vt0.c0)))), (LENGTH(x'') IN (((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('w%rv.'))) THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((load_extension(vt0.c0)) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((((NULL)OR(x'9ae1')))OR(vt0.c0)))), (LENGTH(x'') IN (((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('w%rv.'))) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY ((load_extension(vt0.c0)) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((((NULL)OR(x'9ae1')))OR(vt0.c0)))), (LENGTH(x'') IN (((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM rt0, t0 WHERE (json_array_length(t0.c0, ((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN ((x'') ISNULL) WHEN (t0.c0 IN (rt0.c1, rt0.c2, t0.c0)) THEN ((t0.c0)GLOB(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN t0.c0 ELSE (- (t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(t0.c0, ((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN ((x'') ISNULL) WHEN (t0.c0 IN (rt0.c1, rt0.c2, t0.c0)) THEN ((t0.c0)GLOB(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN t0.c0 ELSE (- (t0.c0)) END ASC);
SELECT ALL * FROM rt0, t0 WHERE (json_array_length(t0.c0, ((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN ((x'') ISNULL) WHEN (t0.c0 IN (rt0.c1, rt0.c2, t0.c0)) THEN ((t0.c0)GLOB(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN t0.c0 ELSE (- (t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(t0.c0, ((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN ((x'') ISNULL) WHEN (t0.c0 IN (rt0.c1, rt0.c2, t0.c0)) THEN ((t0.c0)GLOB(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN t0.c0 ELSE (- (t0.c0)) END ASC);
SELECT ALL * FROM rt0, t0 WHERE (json_array_length(t0.c0, ((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))) THEN ((x'') ISNULL) WHEN (t0.c0 IN (rt0.c1, rt0.c2, t0.c0)) THEN ((t0.c0)GLOB(rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN t0.c0 ELSE (- (t0.c0)) END ASC;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE vt0.c0  WHEN NULL THEN (~ (t0.c0)) ELSE t0.c0 END) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN NULL THEN (~ (t0.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE vt0.c0  WHEN NULL THEN (~ (t0.c0)) ELSE t0.c0 END) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN NULL THEN (~ (t0.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE vt0.c0  WHEN NULL THEN (~ (t0.c0)) ELSE t0.c0 END) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE((~ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE((~ (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE((~ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE((~ (rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ORDER BY ((rt0.c0 COLLATE RTRIM)LIKE((~ (rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((x'e9b83fa1')AND(((t0.c0)&(rt0.c0)))))AND(((rt0.c0)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((x'e9b83fa1')AND(((t0.c0)&(rt0.c0)))))AND(((rt0.c0)%(rt0.c1))))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((x'e9b83fa1')AND(((t0.c0)&(rt0.c0)))))AND(((rt0.c0)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((x'e9b83fa1')AND(((t0.c0)&(rt0.c0)))))AND(((rt0.c0)%(rt0.c1))))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((x'e9b83fa1')AND(((t0.c0)&(rt0.c0)))))AND(((rt0.c0)%(rt0.c1)))));
SELECT * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((2.61605527E8) NOT BETWEEN (t0.c0) AND (NULL)))))) ORDER BY (('-357263056')<=(t0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((2.61605527E8) NOT BETWEEN (t0.c0) AND (NULL)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('-357263056')<=(t0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((2.61605527E8) NOT BETWEEN (t0.c0) AND (NULL)))))) ORDER BY (('-357263056')<=(t0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((2.61605527E8) NOT BETWEEN (t0.c0) AND (NULL)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('-357263056')<=(t0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((2.61605527E8) NOT BETWEEN (t0.c0) AND (NULL)))))) ORDER BY (('-357263056')<=(t0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((CAST(rt0.c1 AS REAL)))==((((rt0.c2)>=(rt0.c0))))) WHERE (((((rt0.c1 COLLATE BINARY)AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))))AND('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))))AND(''))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((CAST(rt0.c1 AS REAL)))=((((rt0.c2)>=(rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((CAST(rt0.c1 AS REAL)))==((((rt0.c2)>=(rt0.c0))))) WHERE (((((rt0.c1 COLLATE BINARY)AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))))AND('')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE BINARY)AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))))AND(''))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((CAST(rt0.c1 AS REAL)))=((((rt0.c2)>=(rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((CAST(rt0.c1 AS REAL)))==((((rt0.c2)>=(rt0.c0))))) WHERE (((((rt0.c1 COLLATE BINARY)AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))))AND('')));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY WHERE ((((rt0.c1 IN (rt0.c1))) ISNULL)) ORDER BY (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))), ((NULL)*((- (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY ORDER BY (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))), ((NULL)*((- (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY WHERE ((((rt0.c1 IN (rt0.c1))) ISNULL)) ORDER BY (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))), ((NULL)*((- (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY ORDER BY (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))), ((NULL)*((- (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY WHERE ((((rt0.c1 IN (rt0.c1))) ISNULL)) ORDER BY (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))), ((NULL)*((- (rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON json_array_length(CASE rt0.c1  WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END, (- (rt0.c2))) FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) WHERE (((rt0.c0)>(rt0.c2)) COLLATE RTRIM) ORDER BY ((((x'')AND((((t0.c0))>((rt0.c2))))))OR(UNLIKELY(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON json_array_length(CASE rt0.c1  WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END, (- (rt0.c2))) FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) ORDER BY ((((x'')AND((((t0.c0))>((rt0.c2))))))OR(UNLIKELY(t0.c0))) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON json_array_length(CASE rt0.c1  WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END, (- (rt0.c2))) FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) WHERE (((rt0.c0)>(rt0.c2)) COLLATE RTRIM) ORDER BY ((((x'')AND((((t0.c0))>((rt0.c2))))))OR(UNLIKELY(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON json_array_length(CASE rt0.c1  WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END, (- (rt0.c2))) FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0))) AND (CAST(rt0.c0 AS TEXT))) ORDER BY ((((x'')AND((((t0.c0))>((rt0.c2))))))OR(UNLIKELY(t0.c0))) ASC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), 0.4450810464662377)) ORDER BY ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) COLLATE RTRIM ASC, (((NOT (t0.c0)))!=(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), 0.4450810464662377)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) COLLATE RTRIM ASC, (((NOT (t0.c0)))!=(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), 0.4450810464662377)) ORDER BY ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) COLLATE RTRIM ASC, (((NOT (t0.c0)))!=(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), 0.4450810464662377)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) COLLATE RTRIM ASC, (((NOT (t0.c0)))!=(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), 0.4450810464662377)) ORDER BY ((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)) COLLATE RTRIM ASC, (((NOT (t0.c0)))!=(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (COALESCE((t0.c0 IN (rt0.c1, t0.c0)), NULL COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((COALESCE((t0.c0 IN (rt0.c1, t0.c0)), NULL COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (COALESCE((t0.c0 IN (rt0.c1, t0.c0)), NULL COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((COALESCE((t0.c0 IN (rt0.c1, t0.c0)), NULL COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (COALESCE((t0.c0 IN (rt0.c1, t0.c0)), NULL COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (x'');
SELECT * FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (CASE CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NULL IN ()) END) ORDER BY ((((t0.c0) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NULL IN ()) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CASE CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NULL IN ()) END) ORDER BY ((((t0.c0) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NULL IN ()) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CASE CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (NULL IN ()) END) ORDER BY ((((t0.c0) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (+ (((rt0.c2) NOTNULL))) WHERE ((-4.6109439E7 IN ())) ORDER BY NULLIF(DISTINCT t0.c0, rt0.c2) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((-4.6109439E7 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (+ (((rt0.c2) NOTNULL))) ORDER BY NULLIF(DISTINCT t0.c0, rt0.c2) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (+ (((rt0.c2) NOTNULL))) WHERE ((-4.6109439E7 IN ())) ORDER BY NULLIF(DISTINCT t0.c0, rt0.c2) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((-4.6109439E7 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (+ (((rt0.c2) NOTNULL))) ORDER BY NULLIF(DISTINCT t0.c0, rt0.c2) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (+ (((rt0.c2) NOTNULL))) WHERE ((-4.6109439E7 IN ())) ORDER BY NULLIF(DISTINCT t0.c0, rt0.c2) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))!=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0)))<>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))!=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0)))<>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))!=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM t0, vt0 WHERE ((((CAST(t0.c0 AS INTEGER), DATE(vt0.c0, t0.c0, vt0.c0), (((vt0.c0))<=((t0.c0)))))<=((vt0.c0 COLLATE NOCASE, (t0.c0 IN ()), 0.6013919714454742))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS INTEGER), DATE(vt0.c0, t0.c0, vt0.c0), (((vt0.c0))<=((t0.c0)))))<=((vt0.c0 COLLATE NOCASE, (t0.c0 IN ()), 0.6013919714454742)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((CAST(t0.c0 AS INTEGER), DATE(vt0.c0, t0.c0, vt0.c0), (((vt0.c0))<=((t0.c0)))))<=((vt0.c0 COLLATE NOCASE, (t0.c0 IN ()), 0.6013919714454742))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS INTEGER), DATE(vt0.c0, t0.c0, vt0.c0), (((vt0.c0))<=((t0.c0)))))<=((vt0.c0 COLLATE NOCASE, (t0.c0 IN ()), 0.6013919714454742)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((CAST(t0.c0 AS INTEGER), DATE(vt0.c0, t0.c0, vt0.c0), (((vt0.c0))<=((t0.c0)))))<=((vt0.c0 COLLATE NOCASE, (t0.c0 IN ()), 0.6013919714454742))));
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0) IS TRUE) THEN NULL ELSE ((t0.c0)<(t0.c0)) END) ORDER BY (NOT ((((t0.c0))=((t0.c0))))) ASC, ((t0.c0 COLLATE RTRIM)*(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0) IS TRUE) THEN NULL ELSE ((t0.c0)<(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (NOT ((((t0.c0))==((t0.c0))))) ASC, ((t0.c0 COLLATE RTRIM)*(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0) IS TRUE) THEN NULL ELSE ((t0.c0)<(t0.c0)) END) ORDER BY (NOT ((((t0.c0))=((t0.c0))))) ASC, ((t0.c0 COLLATE RTRIM)*(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0) IS TRUE) THEN NULL ELSE ((t0.c0)<(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (NOT ((((t0.c0))==((t0.c0))))) ASC, ((t0.c0 COLLATE RTRIM)*(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0) IS TRUE) THEN NULL ELSE ((t0.c0)<(t0.c0)) END) ORDER BY (NOT ((((t0.c0))=((t0.c0))))) ASC, ((t0.c0 COLLATE RTRIM)*(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '' WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN 0.1021367287490007 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) ORDER BY CASE (NOT (rt0.c1))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN (rt0.c0 IN (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c2)/(rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN 0.1021367287490007 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 ORDER BY CASE (NOT (rt0.c1))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN (rt0.c0 IN (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c2)/(rt0.c1)) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN 0.1021367287490007 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) ORDER BY CASE (NOT (rt0.c1))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN (rt0.c0 IN (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c2)/(rt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN 0.1021367287490007 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 ORDER BY CASE (NOT (rt0.c1))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN (rt0.c0 IN (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c2)/(rt0.c1)) END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN CASE WHEN rt0.c2 THEN 0.1021367287490007 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END END) ORDER BY CASE (NOT (rt0.c1))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN (rt0.c0 IN (rt0.c2)) WHEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c2)/(rt0.c1)) END  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)LIKE(vt0.c0)));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (NOT (TRIM(DISTINCT x'', vt0.c0))) RIGHT OUTER JOIN vt0 ON '-1601299426' WHERE (((vt0.c0) NOT BETWEEN (6.35023374E8) AND ((((rt0.c2, t0.c0, t0.c0))>=((rt0.c2, rt0.c1, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (6.35023374E8) AND ((((rt0.c2, t0.c0, t0.c0))>=((rt0.c2, rt0.c1, t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (NOT (TRIM(DISTINCT x'', vt0.c0))) RIGHT OUTER JOIN vt0 ON '-1601299426');
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (NOT (TRIM(DISTINCT x'', vt0.c0))) RIGHT OUTER JOIN vt0 ON '-1601299426' WHERE (((vt0.c0) NOT BETWEEN (6.35023374E8) AND ((((rt0.c2, t0.c0, t0.c0))>=((rt0.c2, rt0.c1, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (6.35023374E8) AND ((((rt0.c2, t0.c0, t0.c0))>=((rt0.c2, rt0.c1, t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (NOT (TRIM(DISTINCT x'', vt0.c0))) RIGHT OUTER JOIN vt0 ON '-1601299426');
SELECT * FROM vt0, rt0, t0 WHERE ('') ORDER BY ((((0.8556914502103138, vt0.c0, rt0.c2))==((t0.c0, t0.c0, rt0.c2))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((0.8556914502103138, vt0.c0, rt0.c2))==((t0.c0, t0.c0, rt0.c2))) IN ())  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE ('') ORDER BY ((((0.8556914502103138, vt0.c0, rt0.c2))==((t0.c0, t0.c0, rt0.c2))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((0.8556914502103138, vt0.c0, rt0.c2))==((t0.c0, t0.c0, rt0.c2))) IN ())  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE ('') ORDER BY ((((0.8556914502103138, vt0.c0, rt0.c2))==((t0.c0, t0.c0, rt0.c2))) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((NOT (vt0.c0)))AND(((rt0.c2)<=('1793870964')))))OR(rt0.c2))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN rt0.c1 THEN t0.c0 END WHEN 0x4203c8ea THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((((-1925674991)OR(t0.c0)))AND(t0.c0)) THEN ((rt0.c1)<>('0.06042268432978992')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))AND(((rt0.c2)<=('1793870964')))))OR(rt0.c2))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN rt0.c1 THEN t0.c0 END WHEN 0X4203c8ea THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((((-1925674991)OR(t0.c0)))AND(t0.c0)) THEN ((rt0.c1)!=('0.06042268432978992')) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((NOT (vt0.c0)))AND(((rt0.c2)<=('1793870964')))))OR(rt0.c2))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN rt0.c1 THEN t0.c0 END WHEN 0x4203c8ea THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((((-1925674991)OR(t0.c0)))AND(t0.c0)) THEN ((rt0.c1)<>('0.06042268432978992')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))AND(((rt0.c2)<=('1793870964')))))OR(rt0.c2))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN rt0.c1 THEN t0.c0 END WHEN 0X4203c8ea THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((((-1925674991)OR(t0.c0)))AND(t0.c0)) THEN ((rt0.c1)!=('0.06042268432978992')) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((NOT (vt0.c0)))AND(((rt0.c2)<=('1793870964')))))OR(rt0.c2))) ORDER BY CASE WHEN CAST(t0.c0 AS REAL) THEN CASE WHEN rt0.c1 THEN t0.c0 END WHEN 0x4203c8ea THEN ((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((((-1925674991)OR(t0.c0)))AND(t0.c0)) THEN ((rt0.c1)<>('0.06042268432978992')) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((json_object(1.575235734E9, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_object(1.575235734E9, rt0.c1) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((json_object(1.575235734E9, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_object(1.575235734E9, rt0.c1) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((json_object(1.575235734E9, rt0.c1) IN ()));
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN '422689020' WHEN COALESCE(rt0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) THEN (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN '422689020' WHEN COALESCE(rt0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) THEN (~ (NULL)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN '422689020' WHEN COALESCE(rt0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) THEN (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN '422689020' WHEN COALESCE(rt0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) THEN (~ (NULL)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN '422689020' WHEN COALESCE(rt0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) THEN (~ (NULL)) END);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (UNLIKELY(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (UNLIKELY(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (UNLIKELY(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ())  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(rt0.c2 COLLATE RTRIM)) ORDER BY ((((((NULL)AND(rt0.c1)))OR(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((NULL)AND(rt0.c1)))OR(vt0.c0))) IS TRUE) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(rt0.c2 COLLATE RTRIM)) ORDER BY ((((((NULL)AND(rt0.c1)))OR(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((NULL)AND(rt0.c1)))OR(vt0.c0))) IS TRUE) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(rt0.c2 COLLATE RTRIM)) ORDER BY ((((((NULL)AND(rt0.c1)))OR(vt0.c0))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.15959377434005595);
SELECT SUM(count) FROM (SELECT ((0.15959377434005595) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.15959377434005595);
SELECT SUM(count) FROM (SELECT ((0.15959377434005595) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.15959377434005595);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST, (((NOT (rt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST, (((NOT (rt0.c1))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST, (((NOT (rt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST, (((NOT (rt0.c1))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c0) ISNULL)  NULLS FIRST, (((NOT (rt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(rt0.c1))) NOTNULL)) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) ISNULL) END DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(rt0.c1))) NOTNULL)) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) ISNULL) END DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(rt0.c1))) NOTNULL)) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) ISNULL) END DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)*((t0.c0 IN (t0.c0))))) ORDER BY t0.c0 DESC  NULLS FIRST, CAST(CAST(t0.c0 AS REAL) AS REAL)  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)*((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS FIRST, CAST(CAST(t0.c0 AS REAL) AS REAL)  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)*((t0.c0 IN (t0.c0))))) ORDER BY t0.c0 DESC  NULLS FIRST, CAST(CAST(t0.c0 AS REAL) AS REAL)  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)*((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS FIRST, CAST(CAST(t0.c0 AS REAL) AS REAL)  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)*((t0.c0 IN (t0.c0))))) ORDER BY t0.c0 DESC  NULLS FIRST, CAST(CAST(t0.c0 AS REAL) AS REAL)  NULLS FIRST, ((((t0.c0) ISNULL)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<(x''))) ORDER BY (((rt0.c1))==((rt0.c0))) COLLATE RTRIM ASC, -1166903786 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))<(x''))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))==((rt0.c0))) COLLATE RTRIM ASC, -1166903786 COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<(x''))) ORDER BY (((rt0.c1))==((rt0.c0))) COLLATE RTRIM ASC, -1166903786 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))<(x''))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1))==((rt0.c0))) COLLATE RTRIM ASC, -1166903786 COLLATE NOCASE ASC);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)!=(0.6013919714454742))))) ORDER BY (((vt0.c0 IN (vt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)!=(0.6013919714454742))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)!=(0.6013919714454742))))) ORDER BY (((vt0.c0 IN (vt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)!=(0.6013919714454742))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)!=(0.6013919714454742))))) ORDER BY (((vt0.c0 IN (vt0.c0))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ABS(DISTINCT x'') THEN t0.c0 ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST, (((((1.59482621E8, t0.c0, '619847300'))>=((t0.c0, t0.c0, t0.c0))))|((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(DISTINCT x'') THEN t0.c0 ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST, (((((1.59482621E8, t0.c0, '619847300'))>=((t0.c0, t0.c0, t0.c0))))|((t0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ABS(DISTINCT x'') THEN t0.c0 ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST, (((((1.59482621E8, t0.c0, '619847300'))>=((t0.c0, t0.c0, t0.c0))))|((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(DISTINCT x'') THEN t0.c0 ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST, (((((1.59482621E8, t0.c0, '619847300'))>=((t0.c0, t0.c0, t0.c0))))|((t0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ABS(DISTINCT x'') THEN t0.c0 ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST, (((((1.59482621E8, t0.c0, '619847300'))>=((t0.c0, t0.c0, t0.c0))))|((t0.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (0.04271851712486818) AND (vt0.c0)) WHEN RTRIM('-46109439') THEN ((vt0.c0)>(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (0.04271851712486818) AND (vt0.c0)) WHEN RTRIM('-46109439') THEN ((vt0.c0)>(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (0.04271851712486818) AND (vt0.c0)) WHEN RTRIM('-46109439') THEN ((vt0.c0)>(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (0.04271851712486818) AND (vt0.c0)) WHEN RTRIM('-46109439') THEN ((vt0.c0)>(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (0.04271851712486818) AND (vt0.c0)) WHEN RTRIM('-46109439') THEN ((vt0.c0)>(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON ((((t0.c0)!=(vt0.c0))) ISNULL) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5945604516898652 END)=(COALESCE(t0.c0, rt0.c0)))) ORDER BY (((rt0.c1)) BETWEEN ((0X106c927c)) AND ((CAST(0.9737876155812866 AS BLOB)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5945604516898652 END)=(COALESCE(t0.c0, rt0.c0)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((((t0.c0)<>(vt0.c0))) ISNULL) ORDER BY (((rt0.c1)) BETWEEN ((0x106c927c)) AND ((CAST(0.9737876155812866 AS BLOB)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON ((((t0.c0)!=(vt0.c0))) ISNULL) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5945604516898652 END)=(COALESCE(t0.c0, rt0.c0)))) ORDER BY (((rt0.c1)) BETWEEN ((0X106c927c)) AND ((CAST(0.9737876155812866 AS BLOB)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5945604516898652 END)=(COALESCE(t0.c0, rt0.c0)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((((t0.c0)<>(vt0.c0))) ISNULL) ORDER BY (((rt0.c1)) BETWEEN ((0x106c927c)) AND ((CAST(0.9737876155812866 AS BLOB)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON ((((t0.c0)!=(vt0.c0))) ISNULL) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5945604516898652 END)=(COALESCE(t0.c0, rt0.c0)))) ORDER BY (((rt0.c1)) BETWEEN ((0X106c927c)) AND ((CAST(0.9737876155812866 AS BLOB)))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (LOWER(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LOWER(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LOWER(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))));
SELECT ALL * FROM vt0, t0, rt0 WHERE ('Mm') ORDER BY (((- (t0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (('Mm') IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((- (t0.c0))) NOT NULL) DESC);
SELECT ALL * FROM vt0, t0, rt0 WHERE ('Mm') ORDER BY (((- (t0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (('Mm') IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((- (t0.c0))) NOT NULL) DESC);
SELECT ALL * FROM vt0, t0, rt0 WHERE ('Mm') ORDER BY (((- (t0.c0))) NOT NULL) DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST('-1354529201' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('-1354529201' AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST('-1354529201' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('-1354529201' AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST('-1354529201' AS REAL));
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, t0 WHERE (CASE WHEN (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, '1569740787', rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c0))) THEN GLOB(NULL, 'oU') ELSE (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0)) AND ((t0.c0, rt0.c2, t0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, '1569740787', rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c0))) THEN GLOB(NULL, 'oU') ELSE (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0)) AND ((t0.c0, rt0.c2, t0.c0))) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, t0 WHERE (CASE WHEN (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, '1569740787', rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c0))) THEN GLOB(NULL, 'oU') ELSE (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0)) AND ((t0.c0, rt0.c2, t0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, '1569740787', rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c0))) THEN GLOB(NULL, 'oU') ELSE (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0)) AND ((t0.c0, rt0.c2, t0.c0))) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED, t0 WHERE (CASE WHEN (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, '1569740787', rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c0))) THEN GLOB(NULL, 'oU') ELSE (((vt0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c0, t0.c0)) AND ((t0.c0, rt0.c2, t0.c0))) END);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (vt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'' COLLATE BINARY)&((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)&((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'' COLLATE BINARY)&((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)&((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'' COLLATE BINARY)&((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((t0.c0)<(t0.c0))) BETWEEN ('') AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c0))) BETWEEN ('') AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((t0.c0)<(t0.c0))) BETWEEN ('') AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c0))) BETWEEN ('') AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((t0.c0)<(t0.c0))) BETWEEN ('') AND (CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(LTRIM(vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LTRIM(vt0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(LTRIM(vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LTRIM(vt0.c0) AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(LTRIM(vt0.c0) AS TEXT));
SELECT ALL * FROM t0, rt0, vt0 WHERE (json_array_length((rt0.c1 IN ()), ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((rt0.c1 IN ()), ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (json_array_length((rt0.c1 IN ()), ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length((rt0.c1 IN ()), ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (json_array_length((rt0.c1 IN ()), ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY (NOT (CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(((rt0.c2)||(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ca2a' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) ORDER BY rt0.c2  NULLS FIRST, (((CAST(rt0.c0 AS INTEGER)))>=((((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c2)||(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ca2a' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY rt0.c2  NULLS FIRST, (((CAST(rt0.c0 AS INTEGER)))>=((((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(((rt0.c2)||(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ca2a' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) ORDER BY rt0.c2  NULLS FIRST, (((CAST(rt0.c0 AS INTEGER)))>=((((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c2)||(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ca2a' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY rt0.c2  NULLS FIRST, (((CAST(rt0.c0 AS INTEGER)))>=((((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(((rt0.c2)||(rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ca2a' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) ORDER BY rt0.c2  NULLS FIRST, (((CAST(rt0.c0 AS INTEGER)))>=((((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))  NULLS LAST;
SELECT * FROM t0, vt0 WHERE ((((t0.c0 IN ()))>((- (t0.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS LAST, (((((vt0.c0)AND(t0.c0)))OR(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))>((- (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS LAST, (((((vt0.c0)AND(t0.c0)))OR(t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((t0.c0 IN ()))>((- (t0.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS LAST, (((((vt0.c0)AND(t0.c0)))OR(t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))>((- (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS LAST, (((((vt0.c0)AND(t0.c0)))OR(t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((((t0.c0 IN ()))>((- (t0.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST, ((((vt0.c0) IS FALSE)) NOTNULL)  NULLS LAST, (((((vt0.c0)AND(t0.c0)))OR(t0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c0)GLOB(vt0.c0)), (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c2)) AND (('}\)Âü≥.-', '1[ij67~-G', rt0.c2))), (((vt0.c0))>((t0.c0)))))<((CAST(t0.c0 AS BLOB), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)GLOB(vt0.c0)), (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c2)) AND (('}\)Âü≥.-', '1[ij67~-G', rt0.c2))), (((vt0.c0))>((t0.c0)))))<((CAST(t0.c0 AS BLOB), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ()))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c0)GLOB(vt0.c0)), (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c2)) AND (('}\)Âü≥.-', '1[ij67~-G', rt0.c2))), (((vt0.c0))>((t0.c0)))))<((CAST(t0.c0 AS BLOB), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)GLOB(vt0.c0)), (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c2)) AND (('}\)Âü≥.-', '1[ij67~-G', rt0.c2))), (((vt0.c0))>((t0.c0)))))<((CAST(t0.c0 AS BLOB), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ()))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c0)GLOB(vt0.c0)), (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c2)) AND (('}\)Âü≥.-', '1[ij67~-G', rt0.c2))), (((vt0.c0))>((t0.c0)))))<((CAST(t0.c0 AS BLOB), CAST(t0.c0 AS NUMERIC), (t0.c0 IN ())))));
SELECT * FROM vt0, rt0 WHERE (((MAX(NULL, rt0.c1, vt0.c0, rt0.c1))-(rt0.c2))) ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(NULL, rt0.c1, vt0.c0, rt0.c1))-(rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE, vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((MAX(NULL, rt0.c1, vt0.c0, rt0.c1))-(rt0.c2))) ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(NULL, rt0.c1, vt0.c0, rt0.c1))-(rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE, vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((MAX(NULL, rt0.c1, vt0.c0, rt0.c1))-(rt0.c2))) ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE, vt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((((vt0.c0)OR('1183595202')))AND(vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((((vt0.c0)OR('1183595202')))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((((vt0.c0)OR('1183595202')))AND(vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((((vt0.c0)OR('1183595202')))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((((vt0.c0)OR('1183595202')))AND(vt0.c0)))) ORDER BY vt0.c0;
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c0)<=(vt0.c0)), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)), LTRIM(NULL))) AND ((((rt0.c0)AND(rt0.c1)), ((t0.c0)>>(x'')), '-1926207135'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c0)<=(vt0.c0)), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)), LTRIM(NULL))) AND ((((rt0.c0)AND(rt0.c1)), ((t0.c0)>>(x'')), '-1926207135'))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c0)<=(vt0.c0)), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)), LTRIM(NULL))) AND ((((rt0.c0)AND(rt0.c1)), ((t0.c0)>>(x'')), '-1926207135'))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c0)<=(vt0.c0)), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)), LTRIM(NULL))) AND ((((rt0.c0)AND(rt0.c1)), ((t0.c0)>>(x'')), '-1926207135'))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((((rt0.c0)<=(vt0.c0)), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)), LTRIM(NULL))) AND ((((rt0.c0)AND(rt0.c1)), ((t0.c0)>>(x'')), '-1926207135'))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((~ (((rt0.c2)-(vt0.c0))))) ORDER BY ((~ (rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)-(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((~ (rt0.c2)) IN ()) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((~ (((rt0.c2)-(vt0.c0))))) ORDER BY ((~ (rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)-(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((~ (rt0.c2)) IN ()) ASC);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((~ (((rt0.c2)-(vt0.c0))))) ORDER BY ((~ (rt0.c2)) IN ()) ASC;
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.05909682051432008 WHERE (LIKELY(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.05909682051432008);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.05909682051432008 WHERE (LIKELY(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.05909682051432008);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.05909682051432008 WHERE (LIKELY(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(vt0.c0)))OR(t0.c0))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CASE WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CASE WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CASE WHEN rt0.c2 THEN vt0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0, rt0 WHERE (1.7976931348623157E308);
SELECT SUM(count) FROM (SELECT ALL ((1.7976931348623157E308) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (1.7976931348623157E308);
SELECT SUM(count) FROM (SELECT ALL ((1.7976931348623157E308) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (1.7976931348623157E308);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(t0.c0 AS BLOB))IS(((rt0.c1)-(t0.c0)))) WHERE (rt0.c2) ORDER BY CAST(rt0.c0 COLLATE BINARY AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(t0.c0 AS BLOB))IS(((rt0.c1)-(t0.c0)))) ORDER BY CAST(rt0.c0 COLLATE BINARY AS INTEGER) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(t0.c0 AS BLOB))IS(((rt0.c1)-(t0.c0)))) WHERE (rt0.c2) ORDER BY CAST(rt0.c0 COLLATE BINARY AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(t0.c0 AS BLOB))IS(((rt0.c1)-(t0.c0)))) ORDER BY CAST(rt0.c0 COLLATE BINARY AS INTEGER) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(t0.c0 AS BLOB))IS(((rt0.c1)-(t0.c0)))) WHERE (rt0.c2) ORDER BY CAST(rt0.c0 COLLATE BINARY AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT * FROM rt0 CROSS JOIN vt0 ON IFNULL(DISTINCT (((rt0.c0, '-221096189', vt0.c0))!=((t0.c0, rt0.c2, vt0.c0))), ((((rt0.c2)AND(t0.c0)))AND(rt0.c2))) FULL OUTER JOIN t0 ON x'7427' WHERE (((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((t0.c0, t0.c0, rt0.c1)) AND ((rt0.c1, t0.c0, t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((t0.c0, t0.c0, rt0.c1)) AND ((rt0.c1, t0.c0, t0.c0))) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON IFNULL(DISTINCT (((rt0.c0, '-221096189', vt0.c0))<>((t0.c0, rt0.c2, vt0.c0))), ((((rt0.c2)AND(t0.c0)))AND(rt0.c2))) FULL OUTER JOIN t0 ON x'7427');
SELECT * FROM rt0 CROSS JOIN vt0 ON IFNULL(DISTINCT (((rt0.c0, '-221096189', vt0.c0))!=((t0.c0, rt0.c2, vt0.c0))), ((((rt0.c2)AND(t0.c0)))AND(rt0.c2))) FULL OUTER JOIN t0 ON x'7427' WHERE (((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((t0.c0, t0.c0, rt0.c1)) AND ((rt0.c1, t0.c0, t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((t0.c0, t0.c0, rt0.c1)) AND ((rt0.c1, t0.c0, t0.c0))) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON IFNULL(DISTINCT (((rt0.c0, '-221096189', vt0.c0))<>((t0.c0, rt0.c2, vt0.c0))), ((((rt0.c2)AND(t0.c0)))AND(rt0.c2))) FULL OUTER JOIN t0 ON x'7427');
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) ISNULL) IN ()) WHERE (((((vt0.c0) IS FALSE))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) ISNULL) IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) ISNULL) IN ()) WHERE (((((vt0.c0) IS FALSE))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) ISNULL) IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c0) ISNULL) IN ()) WHERE (((((vt0.c0) IS FALSE))AND((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ (((rt0.c2)>(rt0.c0)))) CROSS JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) WHERE (CASE (NOT (0.12291586239191699))  WHEN CAST(0.816689995042765 AS NUMERIC) THEN INSTR(rt0.c0, rt0.c2) ELSE (rt0.c0 IN ()) END) ORDER BY (((t0.c0) ISNULL) IN ()), ((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0)&(rt0.c1))) AND ((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (0.12291586239191699))  WHEN CAST(0.816689995042765 AS NUMERIC) THEN INSTR(rt0.c0, rt0.c2) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (~ (((rt0.c2)>(rt0.c0)))) CROSS JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) ORDER BY (((t0.c0) ISNULL) IN ()), ((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0)&(rt0.c1))) AND ((t0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ (((rt0.c2)>(rt0.c0)))) CROSS JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) WHERE (CASE (NOT (0.12291586239191699))  WHEN CAST(0.816689995042765 AS NUMERIC) THEN INSTR(rt0.c0, rt0.c2) ELSE (rt0.c0 IN ()) END) ORDER BY (((t0.c0) ISNULL) IN ()), ((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0)&(rt0.c1))) AND ((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (0.12291586239191699))  WHEN CAST(0.816689995042765 AS NUMERIC) THEN INSTR(rt0.c0, rt0.c2) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (~ (((rt0.c2)>(rt0.c0)))) CROSS JOIN rt0 ON (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) ORDER BY (((t0.c0) ISNULL) IN ()), ((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0)&(rt0.c1))) AND ((t0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c2)>('')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>('')) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c2)>('')) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>('')) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c2)>('')) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((vt0.c0)=(NULL)))<=(((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), (((vt0.c0))>((vt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(NULL)))<=(((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), (((vt0.c0))>((vt0.c0 COLLATE RTRIM))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((vt0.c0)=(NULL)))<=(((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), (((vt0.c0))>((vt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(NULL)))<=(((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), (((vt0.c0))>((vt0.c0 COLLATE RTRIM))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((((vt0.c0)=(NULL)))<=(((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), (((vt0.c0))>((vt0.c0 COLLATE RTRIM))) ASC;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(t0.c0)) NOT BETWEEN (0.946289248478283) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) FULL OUTER JOIN rt0 ON (((((NOT (rt0.c1)))AND(t0.c0)))OR(((rt0.c2)-(rt0.c0)))) WHERE ((((t0.c0)IS NOT(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0)IS NOT(rt0.c1)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(t0.c0)) NOT BETWEEN (0.946289248478283) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) FULL OUTER JOIN rt0 ON (((((NOT (rt0.c1)))AND(t0.c0)))OR(((rt0.c2)-(rt0.c0)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(t0.c0)) NOT BETWEEN (0.946289248478283) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) FULL OUTER JOIN rt0 ON (((((NOT (rt0.c1)))AND(t0.c0)))OR(((rt0.c2)-(rt0.c0)))) WHERE ((((t0.c0)IS NOT(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0)IS NOT(rt0.c1)) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(t0.c0)) NOT BETWEEN (0.946289248478283) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) FULL OUTER JOIN rt0 ON (((((NOT (rt0.c1)))AND(t0.c0)))OR(((rt0.c2)-(rt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (LIKELY((('677561981')<(t0.c0)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)  NULLS LAST, CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((('677561981')<(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)  NULLS LAST, CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (LIKELY((('677561981')<(t0.c0)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)  NULLS LAST, CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY((('677561981')<(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)  NULLS LAST, CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (LIKELY((('677561981')<(t0.c0)))) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)  NULLS LAST, CAST(t0.c0 COLLATE BINARY AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c2)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0.9771494622290946)))AND(((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))AND(0.21975357085512182)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c2)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0.9771494622290946)))AND(((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))AND(0.21975357085512182))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c2)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0.9771494622290946)))AND(((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))AND(0.21975357085512182)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c2)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0.9771494622290946)))AND(((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))AND(0.21975357085512182))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c2)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0.9771494622290946)))AND(((rt0.c1) BETWEEN (NULL) AND (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))AND(0.21975357085512182)));
SELECT COUNT(*) FROM rt0 WHERE (CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((rt0.c1)>(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (rt0.c0 IN ()) ELSE (('1197988548')/(rt0.c2)) END) ORDER BY (((((NOT (rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((rt0.c1)>(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (rt0.c0 IN ()) ELSE (('1197988548')/(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((NOT (rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((rt0.c1)>(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (rt0.c0 IN ()) ELSE (('1197988548')/(rt0.c2)) END) ORDER BY (((((NOT (rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((rt0.c1)>(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (rt0.c0 IN ()) ELSE (('1197988548')/(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((((NOT (rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((rt0.c1)>(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))OR(NULL)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2) IS TRUE) WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (rt0.c0 IN ()) ELSE (('1197988548')/(rt0.c2)) END) ORDER BY (((((NOT (rt0.c2)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((+ (t0.c0)))|(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))|(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((+ (t0.c0)))|(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))|(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((+ (t0.c0)))|(t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0)))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((vt0.c0)>>(t0.c0)))OR(((rt0.c2)>(rt0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY TYPEOF(vt0.c0) ASC  NULLS LAST, CAST(((rt0.c0)IS NOT(rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>>(t0.c0)))OR(((rt0.c2)>(rt0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY TYPEOF(vt0.c0) ASC  NULLS LAST, CAST(((rt0.c0)IS NOT(rt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((vt0.c0)>>(t0.c0)))OR(((rt0.c2)>(rt0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY TYPEOF(vt0.c0) ASC  NULLS LAST, CAST(((rt0.c0)IS NOT(rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>>(t0.c0)))OR(((rt0.c2)>(rt0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY TYPEOF(vt0.c0) ASC  NULLS LAST, CAST(((rt0.c0)IS NOT(rt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((((vt0.c0)>>(t0.c0)))OR(((rt0.c2)>(rt0.c0)))))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY TYPEOF(vt0.c0) ASC  NULLS LAST, CAST(((rt0.c0)IS NOT(rt0.c0)) AS NUMERIC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c2, rt0.c0, t0.c0, rt0.c0, t0.c0)) BETWEEN ((rt0.c0, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((t0.c0) ISNULL), rt0.c1, (((rt0.c2, vt0.c0, 'm*'))<((vt0.c0, rt0.c2, rt0.c2))))) AND ((((vt0.c0) ISNULL), ((rt0.c2) ISNULL), x'', CAST(vt0.c0 AS NUMERIC), ((rt0.c2)*(t0.c0)))))) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN ((('„ø§Áòñj.|')>(rt0.c1))) AND ('-57141081'))  NULLS LAST, (~ (CASE WHEN 0.5020939808015829 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, t0.c0, rt0.c0, t0.c0)) BETWEEN ((rt0.c0, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((t0.c0) ISNULL), rt0.c1, (((rt0.c2, vt0.c0, 'm*'))<((vt0.c0, rt0.c2, rt0.c2))))) AND ((((vt0.c0) ISNULL), ((rt0.c2) ISNULL), x'', CAST(vt0.c0 AS NUMERIC), ((rt0.c2)*(t0.c0)))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED, vt0 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN ((('„ø§Áòñj.|')>(rt0.c1))) AND ('-57141081'))  NULLS LAST, (~ (CASE WHEN 0.5020939808015829 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c2, rt0.c0, t0.c0, rt0.c0, t0.c0)) BETWEEN ((rt0.c0, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((t0.c0) ISNULL), rt0.c1, (((rt0.c2, vt0.c0, 'm*'))<((vt0.c0, rt0.c2, rt0.c2))))) AND ((((vt0.c0) ISNULL), ((rt0.c2) ISNULL), x'', CAST(vt0.c0 AS NUMERIC), ((rt0.c2)*(t0.c0)))))) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN ((('„ø§Áòñj.|')>(rt0.c1))) AND ('-57141081'))  NULLS LAST, (~ (CASE WHEN 0.5020939808015829 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, t0.c0, rt0.c0, t0.c0)) BETWEEN ((rt0.c0, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((t0.c0) ISNULL), rt0.c1, (((rt0.c2, vt0.c0, 'm*'))<((vt0.c0, rt0.c2, rt0.c2))))) AND ((((vt0.c0) ISNULL), ((rt0.c2) ISNULL), x'', CAST(vt0.c0 AS NUMERIC), ((rt0.c2)*(t0.c0)))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED, vt0 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN ((('„ø§Áòñj.|')>(rt0.c1))) AND ('-57141081'))  NULLS LAST, (~ (CASE WHEN 0.5020939808015829 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((rt0.c2, rt0.c0, t0.c0, rt0.c0, t0.c0)) BETWEEN ((rt0.c0, (((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), ((t0.c0) ISNULL), rt0.c1, (((rt0.c2, vt0.c0, 'm*'))<((vt0.c0, rt0.c2, rt0.c2))))) AND ((((vt0.c0) ISNULL), ((rt0.c2) ISNULL), x'', CAST(vt0.c0 AS NUMERIC), ((rt0.c2)*(t0.c0)))))) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN ((('„ø§Áòñj.|')>(rt0.c1))) AND ('-57141081'))  NULLS LAST, (~ (CASE WHEN 0.5020939808015829 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((((((((((((rt0.c2) ISNULL))AND(((rt0.c2)||(t0.c0)))))OR(rt0.c0)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))AND(rt0.c2)))AND(((rt0.c0)>(rt0.c0))))) ORDER BY ((0x39c27be) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2) ISNULL))AND(((rt0.c2)||(t0.c0)))))OR(rt0.c0)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))AND(rt0.c2)))AND(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((0X39c27be) IS TRUE));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((((((((((((rt0.c2) ISNULL))AND(((rt0.c2)||(t0.c0)))))OR(rt0.c0)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))AND(rt0.c2)))AND(((rt0.c0)>(rt0.c0))))) ORDER BY ((0x39c27be) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2) ISNULL))AND(((rt0.c2)||(t0.c0)))))OR(rt0.c0)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))AND(rt0.c2)))AND(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((0X39c27be) IS TRUE));
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((((((((((((rt0.c2) ISNULL))AND(((rt0.c2)||(t0.c0)))))OR(rt0.c0)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))AND(rt0.c2)))AND(((rt0.c0)>(rt0.c0))))) ORDER BY ((0x39c27be) IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)<=(t0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR((((0.41275339562394286)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(QUOTE(t0.c0))))OR((+ (t0.c0)))) WHERE ('934395632') ORDER BY (((((t0.c0))>=((t0.c0)))) BETWEEN ((0.6467932525193479 IN (t0.c0, t0.c0))) AND (LTRIM(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (('934395632') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)<=(t0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR((((0.41275339562394286)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(QUOTE(t0.c0))))OR((+ (t0.c0)))) ORDER BY (((((t0.c0))>=((t0.c0)))) BETWEEN ((0.6467932525193479 IN (t0.c0, t0.c0))) AND (LTRIM(t0.c0))) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)<=(t0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR((((0.41275339562394286)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(QUOTE(t0.c0))))OR((+ (t0.c0)))) WHERE ('934395632') ORDER BY (((((t0.c0))>=((t0.c0)))) BETWEEN ((0.6467932525193479 IN (t0.c0, t0.c0))) AND (LTRIM(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (('934395632') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)<=(t0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR((((0.41275339562394286)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(QUOTE(t0.c0))))OR((+ (t0.c0)))) ORDER BY (((((t0.c0))>=((t0.c0)))) BETWEEN ((0.6467932525193479 IN (t0.c0, t0.c0))) AND (LTRIM(t0.c0))) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)<=(t0.c0)))AND(LOWER(DISTINCT vt0.c0))))OR((((0.41275339562394286)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(QUOTE(t0.c0))))OR((+ (t0.c0)))) WHERE ('934395632') ORDER BY (((((t0.c0))>=((t0.c0)))) BETWEEN ((0.6467932525193479 IN (t0.c0, t0.c0))) AND (LTRIM(t0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)-('-1241822063' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)-('-1241822063' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)-('-1241822063' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)-('-1241822063' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)-('-1241822063' COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) RIGHT OUTER JOIN t0 ON (((t0.c0)>=(rt0.c1)) IN ()) WHERE ((~ (''))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((~ (''))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) RIGHT OUTER JOIN t0 ON (((t0.c0)>=(rt0.c1)) IN ()) ORDER BY '' ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) RIGHT OUTER JOIN t0 ON (((t0.c0)>=(rt0.c1)) IN ()) WHERE ((~ (''))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((~ (''))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) RIGHT OUTER JOIN t0 ON (((t0.c0)>=(rt0.c1)) IN ()) ORDER BY '' ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) RIGHT OUTER JOIN t0 ON (((t0.c0)>=(rt0.c1)) IN ()) WHERE ((~ (''))) ORDER BY '' ASC;
SELECT * FROM vt0 WHERE (IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()))) ORDER BY ((((x'')OR(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))), ((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')OR(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))), ((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()))) ORDER BY ((((x'')OR(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))), ((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 END, (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')OR(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))), ((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN rt0 WHERE (((('-1884813675'))>((((rt0.c0)OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1884813675'))>((((rt0.c0)OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN rt0 WHERE (((('-1884813675'))>((((rt0.c0)OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1884813675'))>((((rt0.c0)OR(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN rt0 WHERE (((('-1884813675'))>((((rt0.c0)OR(vt0.c0))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN vt0.c0 WHEN '-infinity' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END COLLATE RTRIM FULL OUTER JOIN rt0 ON (((rt0.c0 IN ()))>=((rt0.c1 IN ()))) WHERE (CASE (rt0.c0 IN ())  WHEN CASE t0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END THEN vt0.c0 ELSE ((t0.c0)AND(vt0.c0)) END) ORDER BY LIKELIHOOD(t0.c0 COLLATE RTRIM, 0.28708271752019954) ASC, ((rt0.c2) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN CASE t0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END THEN vt0.c0 ELSE ((t0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN vt0.c0 WHEN '-infinity' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END COLLATE RTRIM FULL OUTER JOIN rt0 ON (((rt0.c0 IN ()))>=((rt0.c1 IN ()))) ORDER BY LIKELIHOOD(t0.c0 COLLATE RTRIM, 0.28708271752019954) ASC, ((rt0.c2) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN vt0.c0 WHEN '-infinity' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END COLLATE RTRIM FULL OUTER JOIN rt0 ON (((rt0.c0 IN ()))>=((rt0.c1 IN ()))) WHERE (CASE (rt0.c0 IN ())  WHEN CASE t0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END THEN vt0.c0 ELSE ((t0.c0)AND(vt0.c0)) END) ORDER BY LIKELIHOOD(t0.c0 COLLATE RTRIM, 0.28708271752019954) ASC, ((rt0.c2) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN CASE t0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END THEN vt0.c0 ELSE ((t0.c0)AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CASE WHEN rt0.c0 THEN vt0.c0 WHEN '-infinity' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END COLLATE RTRIM FULL OUTER JOIN rt0 ON (((rt0.c0 IN ()))>=((rt0.c1 IN ()))) ORDER BY LIKELIHOOD(t0.c0 COLLATE RTRIM, 0.28708271752019954) ASC, ((rt0.c2) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2)>>(rt0.c1)), ((rt0.c1)IS(rt0.c1)), ((vt0.c0)>>(rt0.c1))))>((((rt0.c0) BETWEEN (-645867271) AND (rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c1 END, ((NULL) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)>>(rt0.c1)), ((rt0.c1)IS(rt0.c1)), ((vt0.c0)>>(rt0.c1))))>((((rt0.c0) BETWEEN (-645867271) AND (rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c1 END, ((NULL) IS FALSE))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2)>>(rt0.c1)), ((rt0.c1)IS(rt0.c1)), ((vt0.c0)>>(rt0.c1))))>((((rt0.c0) BETWEEN (-645867271) AND (rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c1 END, ((NULL) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)>>(rt0.c1)), ((rt0.c1)IS(rt0.c1)), ((vt0.c0)>>(rt0.c1))))>((((rt0.c0) BETWEEN (-645867271) AND (rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c1 END, ((NULL) IS FALSE))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2)>>(rt0.c1)), ((rt0.c1)IS(rt0.c1)), ((vt0.c0)>>(rt0.c1))))>((((rt0.c0) BETWEEN (-645867271) AND (rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c1 END, ((NULL) IS FALSE)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN t0 ON (- (((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'')))AND(vt0.c0)))) WHERE (((((rt0.c2)>>(rt0.c1))) ISNULL)) ORDER BY (- (vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN t0 ON (- (((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'')))AND(vt0.c0)))) ORDER BY (- (vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN t0 ON (- (((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'')))AND(vt0.c0)))) WHERE (((((rt0.c2)>>(rt0.c1))) ISNULL)) ORDER BY (- (vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN t0 ON (- (((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'')))AND(vt0.c0)))) ORDER BY (- (vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN t0 ON (- (((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(x'')))AND(vt0.c0)))) WHERE (((((rt0.c2)>>(rt0.c1))) ISNULL)) ORDER BY (- (vt0.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (vt0.c0) ORDER BY ((CAST(rt0.c1 AS NUMERIC))||((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1))))) ASC, rt0.c0 ASC  NULLS FIRST, ((t0.c0)+(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((CAST(rt0.c1 AS NUMERIC))||((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1))))) ASC, rt0.c0 ASC  NULLS FIRST, ((t0.c0)+(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (vt0.c0) ORDER BY ((CAST(rt0.c1 AS NUMERIC))||((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1))))) ASC, rt0.c0 ASC  NULLS FIRST, ((t0.c0)+(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((CAST(rt0.c1 AS NUMERIC))||((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1))))) ASC, rt0.c0 ASC  NULLS FIRST, ((t0.c0)+(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (vt0.c0) ORDER BY ((CAST(rt0.c1 AS NUMERIC))||((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1))))) ASC, rt0.c0 ASC  NULLS FIRST, ((t0.c0)+(vt0.c0)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM t0 WHERE ((CAST(t0.c0 AS INTEGER) IN ())) ORDER BY ((((((t0.c0) IS FALSE))OR(MIN(t0.c0, t0.c0, t0.c0, t0.c0))))OR((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) IS FALSE))OR(MIN(t0.c0, t0.c0, t0.c0, t0.c0))))OR((t0.c0 IN ()))));
SELECT COUNT(*) FROM t0 WHERE ((CAST(t0.c0 AS INTEGER) IN ())) ORDER BY ((((((t0.c0) IS FALSE))OR(MIN(t0.c0, t0.c0, t0.c0, t0.c0))))OR((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0) IS FALSE))OR(MIN(t0.c0, t0.c0, t0.c0, t0.c0))))OR((t0.c0 IN ()))));
SELECT COUNT(*) FROM t0 WHERE ((CAST(t0.c0 AS INTEGER) IN ())) ORDER BY ((((((t0.c0) IS FALSE))OR(MIN(t0.c0, t0.c0, t0.c0, t0.c0))))OR((t0.c0 IN ())));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (-8.5640399E8);
SELECT SUM(count) FROM (SELECT ((-8.5640399E8) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (-8.5640399E8);
SELECT SUM(count) FROM (SELECT ((-8.5640399E8) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (-8.5640399E8);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((vt0.c0)>(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((- (0.5668657858296331))) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ((~ (rt0.c2))))) ORDER BY ((NULL)<>(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (0.5668657858296331))) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)<>(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE ((((- (0.5668657858296331))) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ((~ (rt0.c2))))) ORDER BY ((NULL)<>(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (0.5668657858296331))) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)<>(rt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE ((((- (0.5668657858296331))) BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND ((~ (rt0.c2))))) ORDER BY ((NULL)<>(rt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('0.8401176744416695') BETWEEN (x'f202') AND ((((x''))>=((vt0.c0)))))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('0.8401176744416695') BETWEEN (x'f202') AND ((((x''))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('0.8401176744416695') BETWEEN (x'f202') AND ((((x''))>=((vt0.c0)))))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('0.8401176744416695') BETWEEN (x'f202') AND ((((x''))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('0.8401176744416695') BETWEEN (x'f202') AND ((((x''))>=((vt0.c0)))))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((((0.26417939289437675)OR(vt0.c0)))OR(rt0.c2))))==((rt0.c0))) INNER JOIN vt0 ON ((((TYPEOF(DISTINCT '_DPY'))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))))AND(t0.c0 COLLATE BINARY)) WHERE ((((~ (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))))) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN t0.c0 END DESC, ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN (LTRIM(rt0.c1, t0.c0), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((((0.26417939289437675)OR(vt0.c0)))OR(rt0.c2))))=((rt0.c0))) INNER JOIN vt0 ON ((((TYPEOF(DISTINCT '_DPY'))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))))AND(t0.c0 COLLATE BINARY)) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN t0.c0 END DESC, ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN (LTRIM(rt0.c1, t0.c0), vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((((((0.26417939289437675)OR(vt0.c0)))OR(rt0.c2))))==((rt0.c0))) INNER JOIN vt0 ON ((((TYPEOF(DISTINCT '_DPY'))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))))AND(t0.c0 COLLATE BINARY)) WHERE ((((~ (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))))) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN t0.c0 END DESC, ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN (LTRIM(rt0.c1, t0.c0), vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((((((0.26417939289437675)OR(vt0.c0)))OR(rt0.c2))))=((rt0.c0))) INNER JOIN vt0 ON ((((TYPEOF(DISTINCT '_DPY'))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))))AND(t0.c0 COLLATE BINARY)) ORDER BY CASE WHEN ((rt0.c0) IS TRUE) THEN t0.c0 END DESC, ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN (LTRIM(rt0.c1, t0.c0), vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c0 THEN 0Xffffffffee9384dc END IN ()) WHERE ((((((rt0.c0))>((rt0.c0))))-((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) ORDER BY (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((rt0.c1))), rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, (rt0.c2 IN (rt0.c2))))<((((rt0.c2)>(rt0.c2)), ((t0.c0)LIKE(vt0.c0)), vt0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((rt0.c0))))-((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c0 THEN 0xffffffffee9384dc END IN ()) ORDER BY (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((rt0.c1))), rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, (rt0.c2 IN (rt0.c2))))<((((rt0.c2)>(rt0.c2)), ((t0.c0)LIKE(vt0.c0)), vt0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), x''))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c0 THEN 0Xffffffffee9384dc END IN ()) WHERE ((((((rt0.c0))>((rt0.c0))))-((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) ORDER BY (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((rt0.c1))), rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, (rt0.c2 IN (rt0.c2))))<((((rt0.c2)>(rt0.c2)), ((t0.c0)LIKE(vt0.c0)), vt0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))>((rt0.c0))))-((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c0 THEN 0xffffffffee9384dc END IN ()) ORDER BY (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((rt0.c1))), rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, (rt0.c2 IN (rt0.c2))))<((((rt0.c2)>(rt0.c2)), ((t0.c0)LIKE(vt0.c0)), vt0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), x''))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON (CASE WHEN t0.c0 THEN 0Xffffffffee9384dc END IN ()) WHERE ((((((rt0.c0))>((rt0.c0))))-((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))) ORDER BY (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END, (((vt0.c0))>=((rt0.c1))), rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END, (rt0.c2 IN (rt0.c2))))<((((rt0.c2)>(rt0.c2)), ((t0.c0)LIKE(vt0.c0)), vt0.c0 COLLATE BINARY, ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), x''))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (CAST(((t0.c0) NOTNULL) AS NUMERIC)) ORDER BY ((((((rt0.c0)!=(t0.c0)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c2)IS NOT(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c0)!=(t0.c0)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c2)IS NOT(rt0.c0)))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (CAST(((t0.c0) NOTNULL) AS NUMERIC)) ORDER BY ((((((rt0.c0)!=(t0.c0)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c2)IS NOT(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c0)!=(t0.c0)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c2)IS NOT(rt0.c0)))) DESC);
SELECT ALL * FROM rt0, t0 WHERE (CAST(((t0.c0) NOTNULL) AS NUMERIC)) ORDER BY ((((((rt0.c0)!=(t0.c0)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(((rt0.c2)IS NOT(rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL))IS NOT(vt0.c0))) ORDER BY CASE WHEN NULL COLLATE RTRIM THEN rt0.c1 COLLATE BINARY WHEN LIKELY(rt0.c1) THEN vt0.c0 WHEN ((x'')||(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2) NOT NULL) END, TOTAL_CHANGES()  NULLS LAST, ((((rt0.c2)AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(IFNULL(x'0745', rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))IS NOT(vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN NULL COLLATE RTRIM THEN rt0.c1 COLLATE BINARY WHEN LIKELY(rt0.c1) THEN vt0.c0 WHEN ((x'')||(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2) NOT NULL) END, TOTAL_CHANGES()  NULLS LAST, ((((rt0.c2)AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(IFNULL(x'0745', rt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL))IS NOT(vt0.c0))) ORDER BY CASE WHEN NULL COLLATE RTRIM THEN rt0.c1 COLLATE BINARY WHEN LIKELY(rt0.c1) THEN vt0.c0 WHEN ((x'')||(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2) NOT NULL) END, TOTAL_CHANGES()  NULLS LAST, ((((rt0.c2)AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(IFNULL(x'0745', rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))IS NOT(vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN NULL COLLATE RTRIM THEN rt0.c1 COLLATE BINARY WHEN LIKELY(rt0.c1) THEN vt0.c0 WHEN ((x'')||(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2) NOT NULL) END, TOTAL_CHANGES()  NULLS LAST, ((((rt0.c2)AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(IFNULL(x'0745', rt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL))IS NOT(vt0.c0))) ORDER BY CASE WHEN NULL COLLATE RTRIM THEN rt0.c1 COLLATE BINARY WHEN LIKELY(rt0.c1) THEN vt0.c0 WHEN ((x'')||(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE ((rt0.c2) NOT NULL) END, TOTAL_CHANGES()  NULLS LAST, ((((rt0.c2)AND(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(IFNULL(x'0745', rt0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED, t0 WHERE (((((rt0.c2)<(NULL))) BETWEEN (((rt0.c2)>>(rt0.c2))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(NULL))) BETWEEN (((rt0.c2)>>(rt0.c2))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED, t0 WHERE (((((rt0.c2)<(NULL))) BETWEEN (((rt0.c2)>>(rt0.c2))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(NULL))) BETWEEN (((rt0.c2)>>(rt0.c2))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED, t0 WHERE (((((rt0.c2)<(NULL))) BETWEEN (((rt0.c2)>>(rt0.c2))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((rt0.c2)OR(0.7178024485275785)))OR(t0.c0)))))) ORDER BY ((CASE t0.c0  WHEN 0.7574426728054434 THEN rt0.c1 END)<(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((rt0.c2)OR(0.7178024485275785)))OR(t0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE t0.c0  WHEN 0.7574426728054434 THEN rt0.c1 END)<(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((rt0.c2)OR(0.7178024485275785)))OR(t0.c0)))))) ORDER BY ((CASE t0.c0  WHEN 0.7574426728054434 THEN rt0.c1 END)<(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((rt0.c2)OR(0.7178024485275785)))OR(t0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE t0.c0  WHEN 0.7574426728054434 THEN rt0.c1 END)<(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((((rt0.c2)OR(0.7178024485275785)))OR(t0.c0)))))) ORDER BY ((CASE t0.c0  WHEN 0.7574426728054434 THEN rt0.c1 END)<(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER));
SELECT ALL * FROM rt0, t0 WHERE ((NULL IN (((rt0.c2)&(rt0.c1)), NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((rt0.c2)&(rt0.c1)), NULL))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((NULL IN (((rt0.c2)&(rt0.c1)), NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((rt0.c2)&(rt0.c1)), NULL))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((NULL IN (((rt0.c2)&(rt0.c1)), NULL)));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((0.8575858768186011, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((0.8575858768186011, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((0.8575858768186011, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((0.8575858768186011, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((0.8575858768186011, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0 COLLATE BINARY)+((vt0.c0 IN (vt0.c0)))) DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULL)<=(ABS(rt0.c0)))) ORDER BY CAST((- (rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((NULL)<=(ABS(rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((- (rt0.c0)) AS REAL));
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULL)<=(ABS(rt0.c0)))) ORDER BY CAST((- (rt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((NULL)<=(ABS(rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((- (rt0.c0)) AS REAL));
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULL)<=(ABS(rt0.c0)))) ORDER BY CAST((- (rt0.c0)) AS REAL);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)OR(0.9464427554949632))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(0.9464427554949632))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)OR(0.9464427554949632))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(0.9464427554949632))) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)OR(0.9464427554949632))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0)!=(t0.c0)))>=(UPPER(vt0.c0)))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((((vt0.c0)OR(NULL)))AND(t0.c0)))))OR(json_extract(vt0.c0, vt0.c0, t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(t0.c0)))>=(UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((((vt0.c0)OR(NULL)))AND(t0.c0)))))OR(json_extract(vt0.c0, vt0.c0, t0.c0, t0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0)!=(t0.c0)))>=(UPPER(vt0.c0)))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((((vt0.c0)OR(NULL)))AND(t0.c0)))))OR(json_extract(vt0.c0, vt0.c0, t0.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(t0.c0)))>=(UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((((vt0.c0)OR(NULL)))AND(t0.c0)))))OR(json_extract(vt0.c0, vt0.c0, t0.c0, t0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0)!=(t0.c0)))>=(UPPER(vt0.c0)))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((((vt0.c0)OR(NULL)))AND(t0.c0)))))OR(json_extract(vt0.c0, vt0.c0, t0.c0, t0.c0)));
SELECT * FROM vt0, t0, rt0 WHERE ((((LIKELIHOOD(DISTINCT vt0.c0, 0.011312922937534275), ((vt0.c0) ISNULL), '1685231943' COLLATE BINARY))=(('-804950592', 'Jh^', ((t0.c0) ISNULL))))) ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))/((+ (x'')))) ASC  NULLS LAST, CAST(rt0.c1 AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(DISTINCT vt0.c0, 0.011312922937534275), ((vt0.c0) ISNULL), '1685231943' COLLATE BINARY))=(('-804950592', 'Jh^', ((t0.c0) ISNULL))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))/((+ (x'')))) ASC  NULLS LAST, CAST(rt0.c1 AS TEXT) ASC  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE ((((LIKELIHOOD(DISTINCT vt0.c0, 0.011312922937534275), ((vt0.c0) ISNULL), '1685231943' COLLATE BINARY))=(('-804950592', 'Jh^', ((t0.c0) ISNULL))))) ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))/((+ (x'')))) ASC  NULLS LAST, CAST(rt0.c1 AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((LIKELIHOOD(DISTINCT vt0.c0, 0.011312922937534275), ((vt0.c0) ISNULL), '1685231943' COLLATE BINARY))=(('-804950592', 'Jh^', ((t0.c0) ISNULL))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))/((+ (x'')))) ASC  NULLS LAST, CAST(rt0.c1 AS TEXT) ASC  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE ((((LIKELIHOOD(DISTINCT vt0.c0, 0.011312922937534275), ((vt0.c0) ISNULL), '1685231943' COLLATE BINARY))=(('-804950592', 'Jh^', ((t0.c0) ISNULL))))) ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)))/((+ (x'')))) ASC  NULLS LAST, CAST(rt0.c1 AS TEXT) ASC  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE (CAST(CAST('Oe' AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('Oe' AS TEXT) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(CAST('Oe' AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('Oe' AS TEXT) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(CAST('Oe' AS TEXT) AS BLOB));
SELECT ALL * FROM vt0, t0 WHERE ((((NULL COLLATE BINARY))<=(((x'c566' IN ()))))) ORDER BY ((((vt0.c0) BETWEEN ('0.6053234329378093') AND (vt0.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC, (NOT ((t0.c0 IN (vt0.c0))))  NULLS FIRST, vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((NULL COLLATE BINARY))<=(((x'c566' IN ()))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) BETWEEN ('0.6053234329378093') AND (vt0.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC, (NOT ((t0.c0 IN (vt0.c0))))  NULLS FIRST, vt0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE ((((NULL COLLATE BINARY))<=(((x'c566' IN ()))))) ORDER BY ((((vt0.c0) BETWEEN ('0.6053234329378093') AND (vt0.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC, (NOT ((t0.c0 IN (vt0.c0))))  NULLS FIRST, vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((NULL COLLATE BINARY))<=(((x'c566' IN ()))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) BETWEEN ('0.6053234329378093') AND (vt0.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC, (NOT ((t0.c0 IN (vt0.c0))))  NULLS FIRST, vt0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE ((((NULL COLLATE BINARY))<=(((x'c566' IN ()))))) ORDER BY ((((vt0.c0) BETWEEN ('0.6053234329378093') AND (vt0.c0))) BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC, (NOT ((t0.c0 IN (vt0.c0))))  NULLS FIRST, vt0.c0 COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (vt0.c0 COLLATE NOCASE IN (((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) WHERE (((((t0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))) ORDER BY ((((((((vt0.c0)OR((((t0.c0))<>((vt0.c0))))))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (vt0.c0 COLLATE NOCASE IN (((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) ORDER BY ((((((((vt0.c0)OR((((t0.c0))!=((vt0.c0))))))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (vt0.c0 COLLATE NOCASE IN (((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) WHERE (((((t0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))) ORDER BY ((((((((vt0.c0)OR((((t0.c0))<>((vt0.c0))))))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (vt0.c0 COLLATE NOCASE IN (((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) ORDER BY ((((((((vt0.c0)OR((((t0.c0))!=((vt0.c0))))))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (vt0.c0 COLLATE NOCASE IN (((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))) WHERE (((((t0.c0)>(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))) ORDER BY ((((((((vt0.c0)OR((((t0.c0))<>((vt0.c0))))))AND(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (0.9146016889150579)))<(((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))) LEFT OUTER JOIN t0 ON LTRIM(((t0.c0)IS(rt0.c1))) WHERE (((CAST(rt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (0.9146016889150579)))<(((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))) LEFT OUTER JOIN t0 ON LTRIM(((t0.c0)IS(rt0.c1))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (0.9146016889150579)))<(((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))) LEFT OUTER JOIN t0 ON LTRIM(((t0.c0)IS(rt0.c1))) WHERE (((CAST(rt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (0.9146016889150579)))<(((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))) LEFT OUTER JOIN t0 ON LTRIM(((t0.c0)IS(rt0.c1))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (0.9146016889150579)))<(((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))) LEFT OUTER JOIN t0 ON LTRIM(((t0.c0)IS(rt0.c1))) WHERE (((CAST(rt0.c0 AS REAL)) NOT NULL));
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB))%(t0.c0))) ORDER BY (- (TRIM(NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))%(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (- (TRIM(NULL))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB))%(t0.c0))) ORDER BY (- (TRIM(NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))%(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (- (TRIM(NULL))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB))%(t0.c0))) ORDER BY (- (TRIM(NULL))) ASC;
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c1 IN ()), ((vt0.c0)AND(t0.c0)), ((rt0.c2)||(t0.c0))))!=(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(rt0.c0 AS NUMERIC), (t0.c0 IN (t0.c0)))))) ORDER BY x'a13b'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ()), ((vt0.c0)AND(t0.c0)), ((rt0.c2)||(t0.c0))))<>(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(rt0.c0 AS NUMERIC), (t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY x'a13b'  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c1 IN ()), ((vt0.c0)AND(t0.c0)), ((rt0.c2)||(t0.c0))))!=(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(rt0.c0 AS NUMERIC), (t0.c0 IN (t0.c0)))))) ORDER BY x'a13b'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ()), ((vt0.c0)AND(t0.c0)), ((rt0.c2)||(t0.c0))))<>(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(rt0.c0 AS NUMERIC), (t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY x'a13b'  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c1 IN ()), ((vt0.c0)AND(t0.c0)), ((rt0.c2)||(t0.c0))))!=(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(rt0.c0 AS NUMERIC), (t0.c0 IN (t0.c0)))))) ORDER BY x'a13b'  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((rt0.c1) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c1) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c1) ISNULL) COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE ((~ ((NOT (vt0.c0))))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC);
SELECT * FROM vt0, t0 WHERE ((~ ((NOT (vt0.c0))))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC);
SELECT * FROM vt0, t0 WHERE ((~ ((NOT (vt0.c0))))) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC;
SELECT ALL * FROM vt0, t0, rt0 WHERE (CAST(((vt0.c0)=(vt0.c0)) AS BLOB)) ORDER BY CASE CASE x''  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)AND(rt0.c1)) THEN ((rt0.c1)-(vt0.c0)) ELSE (NOT ('78832907')) END DESC, ((UNLIKELY(DISTINCT rt0.c2))%(NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE CASE x''  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)AND(rt0.c1)) THEN ((rt0.c1)-(vt0.c0)) ELSE (NOT ('78832907')) END DESC, ((UNLIKELY(DISTINCT rt0.c2))%(NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CAST(((vt0.c0)=(vt0.c0)) AS BLOB)) ORDER BY CASE CASE x''  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)AND(rt0.c1)) THEN ((rt0.c1)-(vt0.c0)) ELSE (NOT ('78832907')) END DESC, ((UNLIKELY(DISTINCT rt0.c2))%(NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE CASE x''  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)AND(rt0.c1)) THEN ((rt0.c1)-(vt0.c0)) ELSE (NOT ('78832907')) END DESC, ((UNLIKELY(DISTINCT rt0.c2))%(NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (CAST(((vt0.c0)=(vt0.c0)) AS BLOB)) ORDER BY CASE CASE x''  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((rt0.c1)AND(rt0.c1)) THEN ((rt0.c1)-(vt0.c0)) ELSE (NOT ('78832907')) END DESC, ((UNLIKELY(DISTINCT rt0.c2))%(NULLIF(DISTINCT vt0.c0, rt0.c1)))  NULLS FIRST;
SELECT ALL * FROM t0, rt0, vt0 WHERE (((x'') BETWEEN ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (UPPER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (UPPER(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((x'') BETWEEN ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (UPPER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (UPPER(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((x'') BETWEEN ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (UPPER(rt0.c1))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((COALESCE(rt0.c2, rt0.c1)) NOTNULL) FULL OUTER JOIN rt0 ON LIKELY('1183595202') WHERE (((((rt0.c0) NOT NULL))>=(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))>=(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((COALESCE(rt0.c2, rt0.c1)) NOTNULL) FULL OUTER JOIN rt0 ON LIKELY('1183595202'));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((COALESCE(rt0.c2, rt0.c1)) NOTNULL) FULL OUTER JOIN rt0 ON LIKELY('1183595202') WHERE (((((rt0.c0) NOT NULL))>=(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))>=(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((COALESCE(rt0.c2, rt0.c1)) NOTNULL) FULL OUTER JOIN rt0 ON LIKELY('1183595202'));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN ((t0.c0)IS(rt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN '83233848' END WHEN (~ (t0.c0)) THEN CASE 0.4683495729568222  WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN 0.6899471719866908 WHEN '1597814240' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END WHEN ((vt0.c0)==(rt0.c0)) THEN ((vt0.c0)|('')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)IS(rt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN '83233848' END WHEN (~ (t0.c0)) THEN CASE 0.4683495729568222  WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN 0.6899471719866908 WHEN '1597814240' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END WHEN ((vt0.c0)==(rt0.c0)) THEN ((vt0.c0)|('')) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN ((t0.c0)IS(rt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN '83233848' END WHEN (~ (t0.c0)) THEN CASE 0.4683495729568222  WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN 0.6899471719866908 WHEN '1597814240' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END WHEN ((vt0.c0)==(rt0.c0)) THEN ((vt0.c0)|('')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)IS(rt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN '83233848' END WHEN (~ (t0.c0)) THEN CASE 0.4683495729568222  WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN 0.6899471719866908 WHEN '1597814240' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END WHEN ((vt0.c0)==(rt0.c0)) THEN ((vt0.c0)|('')) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (CASE WHEN ((t0.c0)IS(rt0.c2)) THEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN '83233848' END WHEN (~ (t0.c0)) THEN CASE 0.4683495729568222  WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN 0.6899471719866908 WHEN '1597814240' THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END WHEN ((vt0.c0)==(rt0.c0)) THEN ((vt0.c0)|('')) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt0.c2))=((rt0.c2))))) WHERE (((((0.3536782565173251)OR(((rt0.c2)-(rt0.c2)))))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.3536782565173251)OR(((rt0.c2)-(rt0.c2)))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt0.c2))=((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt0.c2))=((rt0.c2))))) WHERE (((((0.3536782565173251)OR(((rt0.c2)-(rt0.c2)))))OR(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.3536782565173251)OR(((rt0.c2)-(rt0.c2)))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt0.c2))=((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((t0.c0) BETWEEN (((rt0.c0) IS TRUE)) AND ((((rt0.c2))=((rt0.c2))))) WHERE (((((0.3536782565173251)OR(((rt0.c2)-(rt0.c2)))))OR(t0.c0 COLLATE BINARY)));
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(x'13c6f5d4' AS NUMERIC) END) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ('-1624496711', ((vt0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(x'13c6f5d4' AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ('-1624496711', ((vt0.c0)OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(x'13c6f5d4' AS NUMERIC) END) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ('-1624496711', ((vt0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(x'13c6f5d4' AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ('-1624496711', ((vt0.c0)OR(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(x'13c6f5d4' AS NUMERIC) END) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ('-1624496711', ((vt0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY HEX(DISTINCT ((((((((rt0.c1)OR(0.17339887555927558)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((((((((rt0.c1)OR(0.17339887555927558)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY HEX(DISTINCT ((((((((rt0.c1)OR(0.17339887555927558)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((((((((rt0.c1)OR(0.17339887555927558)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY HEX(DISTINCT ((((((((rt0.c1)OR(0.17339887555927558)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((rt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((rt0.c0 IN ()) IN ()));
SELECT * FROM rt0, vt0, t0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((rt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((rt0.c0 IN ()) IN ()));
SELECT * FROM rt0, vt0, t0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) ORDER BY ((rt0.c0 IN ()) IN ());
SELECT * FROM rt0, t0 INNER JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY ((CAST(t0.c0 AS NUMERIC))IS((((0.028893461197664227))<=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM ORDER BY ((CAST(t0.c0 AS NUMERIC))IS((((0.028893461197664227))<=((vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 INNER JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY ((CAST(t0.c0 AS NUMERIC))IS((((0.028893461197664227))<=((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM ORDER BY ((CAST(t0.c0 AS NUMERIC))IS((((0.028893461197664227))<=((vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 INNER JOIN vt0 ON (~ (rt0.c2)) COLLATE RTRIM WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY ((CAST(t0.c0 AS NUMERIC))IS((((0.028893461197664227))<=((vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT NULL)) ORDER BY ((~ (rt0.c2)) IN ()), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c2)) IN ()), rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT NULL)) ORDER BY ((~ (rt0.c2)) IN ()), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c2)) IN ()), rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT NULL)) ORDER BY ((~ (rt0.c2)) IN ()), rt0.c1;
SELECT * FROM vt0, rt0 WHERE (SQLITE_VERSION()) ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC, rt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (SQLITE_VERSION()) ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC, rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC, rt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (SQLITE_VERSION()) ORDER BY (+ (rt0.c2 COLLATE BINARY)) DESC, rt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM rt0, t0 WHERE (NULL) ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS INTEGER)  NULLS LAST, ((rt0.c0)<(((rt0.c1)&(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS INTEGER)  NULLS LAST, ((rt0.c0)<(((rt0.c1)&(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (NULL) ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS INTEGER)  NULLS LAST, ((rt0.c0)<(((rt0.c1)&(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS INTEGER)  NULLS LAST, ((rt0.c0)<(((rt0.c1)&(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (NULL) ORDER BY CAST((rt0.c0 IN (rt0.c0)) AS INTEGER)  NULLS LAST, ((rt0.c0)<(((rt0.c1)&(rt0.c2))))  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((((CASE WHEN t0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))OR((~ (t0.c0)))))OR(((t0.c0)IS NOT(vt0.c0)))))AND(RTRIM(t0.c0)))) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))AND(((vt0.c0)<>(t0.c0)))) ASC  NULLS LAST, ((t0.c0 COLLATE BINARY)>(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))OR((~ (t0.c0)))))OR(((t0.c0)IS NOT(vt0.c0)))))AND(RTRIM(t0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))AND(((vt0.c0)!=(t0.c0)))) ASC  NULLS LAST, ((t0.c0 COLLATE BINARY)>(NULL)) ASC);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((((CASE WHEN t0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))OR((~ (t0.c0)))))OR(((t0.c0)IS NOT(vt0.c0)))))AND(RTRIM(t0.c0)))) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))AND(((vt0.c0)<>(t0.c0)))) ASC  NULLS LAST, ((t0.c0 COLLATE BINARY)>(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN t0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))OR((~ (t0.c0)))))OR(((t0.c0)IS NOT(vt0.c0)))))AND(RTRIM(t0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))AND(((vt0.c0)!=(t0.c0)))) ASC  NULLS LAST, ((t0.c0 COLLATE BINARY)>(NULL)) ASC);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((((CASE WHEN t0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))OR((~ (t0.c0)))))OR(((t0.c0)IS NOT(vt0.c0)))))AND(RTRIM(t0.c0)))) ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))))AND(((vt0.c0)<>(t0.c0)))) ASC  NULLS LAST, ((t0.c0 COLLATE BINARY)>(NULL)) ASC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c2 END IN ()) WHERE (vt0.c0) ORDER BY ((vt0.c0)-(rt0.c1)) COLLATE NOCASE  NULLS LAST, CAST(rt0.c2 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c2 END IN ()) ORDER BY ((vt0.c0)-(rt0.c1)) COLLATE NOCASE  NULLS LAST, CAST(rt0.c2 AS TEXT));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c2 END IN ()) WHERE (vt0.c0) ORDER BY ((vt0.c0)-(rt0.c1)) COLLATE NOCASE  NULLS LAST, CAST(rt0.c2 AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c2 END IN ()) ORDER BY ((vt0.c0)-(rt0.c1)) COLLATE NOCASE  NULLS LAST, CAST(rt0.c2 AS TEXT));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c2 END IN ()) WHERE (vt0.c0) ORDER BY ((vt0.c0)-(rt0.c1)) COLLATE NOCASE  NULLS LAST, CAST(rt0.c2 AS TEXT);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(vt0.c0 AS BLOB) FULL OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN -856403990 WHEN rt0.c2 THEN rt0.c2 END)OR(((1.183595202E9) BETWEEN (vt0.c0) AND (rt0.c1)))))OR((~ (t0.c0)))) WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(vt0.c0 AS BLOB) FULL OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN -856403990 WHEN rt0.c2 THEN rt0.c2 END)OR(((1.183595202E9) BETWEEN (vt0.c0) AND (rt0.c1)))))OR((~ (t0.c0)))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(vt0.c0 AS BLOB) FULL OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN -856403990 WHEN rt0.c2 THEN rt0.c2 END)OR(((1.183595202E9) BETWEEN (vt0.c0) AND (rt0.c1)))))OR((~ (t0.c0)))) WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON CAST(vt0.c0 AS BLOB) FULL OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN -856403990 WHEN rt0.c2 THEN rt0.c2 END)OR(((1.183595202E9) BETWEEN (vt0.c0) AND (rt0.c1)))))OR((~ (t0.c0)))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON CAST(vt0.c0 AS BLOB) FULL OUTER JOIN rt0 ON ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN t0.c0 THEN -856403990 WHEN rt0.c2 THEN rt0.c2 END)OR(((1.183595202E9) BETWEEN (vt0.c0) AND (rt0.c1)))))OR((~ (t0.c0)))) WHERE (CAST(rt0.c1 AS BLOB)) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) ASC;
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(x'')))OR(t0.c0)))*((((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST, CAST((((rt0.c2, vt0.c0, rt0.c1))>((vt0.c0, vt0.c0, t0.c0))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(x'')))OR(t0.c0)))*((((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST, CAST((((rt0.c2, vt0.c0, rt0.c1))>((vt0.c0, vt0.c0, t0.c0))) AS BLOB) DESC);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(x'')))OR(t0.c0)))*((((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST, CAST((((rt0.c2, vt0.c0, rt0.c1))>((vt0.c0, vt0.c0, t0.c0))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(x'')))OR(t0.c0)))*((((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST, CAST((((rt0.c2, vt0.c0, rt0.c1))>((vt0.c0, vt0.c0, t0.c0))) AS BLOB) DESC);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(x'')))OR(t0.c0)))*((((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE  NULLS FIRST, CAST((((rt0.c2, vt0.c0, rt0.c1))>((vt0.c0, vt0.c0, t0.c0))) AS BLOB) DESC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 ELSE rt0.c0 END)))) ORDER BY ((vt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((vt0.c0) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 ELSE rt0.c0 END)))) ORDER BY ((vt0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((vt0.c0) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 ELSE rt0.c0 END)))) ORDER BY ((vt0.c0) IS FALSE);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE NOCASE WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN ((t0.c0)%(t0.c0)) WHEN (((x''))>=((vt0.c0))) THEN CAST(t0.c0 AS INTEGER) WHEN (('I3') IS FALSE) THEN (vt0.c0 IN ()) ELSE ('uhyk' IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE NOCASE ORDER BY CASE WHEN vt0.c0 THEN ((t0.c0)%(t0.c0)) WHEN (((x''))>=((vt0.c0))) THEN CAST(t0.c0 AS INTEGER) WHEN (('I3') IS FALSE) THEN (vt0.c0 IN ()) ELSE ('uhyk' IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE NOCASE WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN ((t0.c0)%(t0.c0)) WHEN (((x''))>=((vt0.c0))) THEN CAST(t0.c0 AS INTEGER) WHEN (('I3') IS FALSE) THEN (vt0.c0 IN ()) ELSE ('uhyk' IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE NOCASE ORDER BY CASE WHEN vt0.c0 THEN ((t0.c0)%(t0.c0)) WHEN (((x''))>=((vt0.c0))) THEN CAST(t0.c0 AS INTEGER) WHEN (('I3') IS FALSE) THEN (vt0.c0 IN ()) ELSE ('uhyk' IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((t0.c0) NOTNULL) COLLATE NOCASE WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN ((t0.c0)%(t0.c0)) WHEN (((x''))>=((vt0.c0))) THEN CAST(t0.c0 AS INTEGER) WHEN (('I3') IS FALSE) THEN (vt0.c0 IN ()) ELSE ('uhyk' IN ()) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c0) AND (-1.872723353E9))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) NOT BETWEEN (t0.c0) AND (-1.872723353E9))))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c0) AND (-1.872723353E9))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) NOT BETWEEN (t0.c0) AND (-1.872723353E9))))) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0) NOT BETWEEN (t0.c0) AND (-1.872723353E9))))) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (t0.c0);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((vt0.c0)*(rt0.c1)))>=(vt0.c0)) CROSS JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) ISNULL) WHERE ((NOT ((('1286988200') NOT BETWEEN (NULL) AND (vt0.c0))))) ORDER BY CASE WHEN (((t0.c0, rt0.c0, vt0.c0))>((rt0.c0, t0.c0, t0.c0))) THEN (NOT (rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((('1286988200') NOT BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((vt0.c0)*(rt0.c1)))>=(vt0.c0)) CROSS JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) ISNULL) ORDER BY CASE WHEN (((t0.c0, rt0.c0, vt0.c0))>((rt0.c0, t0.c0, t0.c0))) THEN (NOT (rt0.c2)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((vt0.c0)*(rt0.c1)))>=(vt0.c0)) CROSS JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) ISNULL) WHERE ((NOT ((('1286988200') NOT BETWEEN (NULL) AND (vt0.c0))))) ORDER BY CASE WHEN (((t0.c0, rt0.c0, vt0.c0))>((rt0.c0, t0.c0, t0.c0))) THEN (NOT (rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((('1286988200') NOT BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((vt0.c0)*(rt0.c1)))>=(vt0.c0)) CROSS JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) ISNULL) ORDER BY CASE WHEN (((t0.c0, rt0.c0, vt0.c0))>((rt0.c0, t0.c0, t0.c0))) THEN (NOT (rt0.c2)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((vt0.c0)*(rt0.c1)))>=(vt0.c0)) CROSS JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) ISNULL) WHERE ((NOT ((('1286988200') NOT BETWEEN (NULL) AND (vt0.c0))))) ORDER BY CASE WHEN (((t0.c0, rt0.c0, vt0.c0))>((rt0.c0, t0.c0, t0.c0))) THEN (NOT (rt0.c2)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((t0.c0)) BETWEEN (((vt0.c0 IN (rt0.c0, rt0.c0)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (((vt0.c0 IN (rt0.c0, rt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((t0.c0)) BETWEEN (((vt0.c0 IN (rt0.c0, rt0.c0)))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (((vt0.c0 IN (rt0.c0, rt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((t0.c0)) BETWEEN (((vt0.c0 IN (rt0.c0, rt0.c0)))) AND (((vt0.c0 IN ())))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((0.7647630544696342)AND(rt0.c2)))OR(((rt0.c0)AND(rt0.c2)))))OR((((rt0.c1, rt0.c0, rt0.c0))==((rt0.c0, rt0.c0, rt0.c2))))))OR(rt0.c0 COLLATE BINARY))) ORDER BY 1141287389  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((0.7647630544696342)AND(rt0.c2)))OR(((rt0.c0)AND(rt0.c2)))))OR((((rt0.c1, rt0.c0, rt0.c0))=((rt0.c0, rt0.c0, rt0.c2))))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 1141287389  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((0.7647630544696342)AND(rt0.c2)))OR(((rt0.c0)AND(rt0.c2)))))OR((((rt0.c1, rt0.c0, rt0.c0))==((rt0.c0, rt0.c0, rt0.c2))))))OR(rt0.c0 COLLATE BINARY))) ORDER BY 1141287389  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((0.7647630544696342)AND(rt0.c2)))OR(((rt0.c0)AND(rt0.c2)))))OR((((rt0.c1, rt0.c0, rt0.c0))=((rt0.c0, rt0.c0, rt0.c2))))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY 1141287389  NULLS LAST);
SELECT * FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE (CASE WHEN ((vt0.c0)LIKE(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)LIKE(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0);
SELECT * FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE (CASE WHEN ((vt0.c0)LIKE(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)LIKE(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0);
SELECT * FROM vt0, rt0 FULL OUTER JOIN t0 ON rt0.c0 WHERE (CASE WHEN ((vt0.c0)LIKE(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))AND((((vt0.c0))<=((vt0.c0))))))OR((vt0.c0 IN ())))) ORDER BY CASE ((x'') NOTNULL)  WHEN CAST(-1608971861 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN 'R/‡∞∏)' END ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))<>(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND((((vt0.c0))<=((vt0.c0))))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((x'') NOTNULL)  WHEN CAST(-1608971861 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN 'R/‡∞∏)' END ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))!=(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))AND((((vt0.c0))<=((vt0.c0))))))OR((vt0.c0 IN ())))) ORDER BY CASE ((x'') NOTNULL)  WHEN CAST(-1608971861 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN 'R/‡∞∏)' END ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))<>(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND((((vt0.c0))<=((vt0.c0))))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((x'') NOTNULL)  WHEN CAST(-1608971861 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN 'R/‡∞∏)' END ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))!=(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))AND((((vt0.c0))<=((vt0.c0))))))OR((vt0.c0 IN ())))) ORDER BY CASE ((x'') NOTNULL)  WHEN CAST(-1608971861 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN 'R/‡∞∏)' END ASC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))<>(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))*(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))*(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))*(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))*(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))*(t0.c0)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON 0.3538376707062604 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) WHERE (rt0.c1) ORDER BY (((((vt0.c0))>((rt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON 0.3538376707062604 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) ORDER BY (((((vt0.c0))>((rt0.c0)))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON 0.3538376707062604 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) WHERE (rt0.c1) ORDER BY (((((vt0.c0))>((rt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON 0.3538376707062604 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) ORDER BY (((((vt0.c0))>((rt0.c0)))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON 0.3538376707062604 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (rt0.c0 COLLATE RTRIM IN ()) WHERE (rt0.c1) ORDER BY (((((vt0.c0))>((rt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((~ (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ (((t0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (QUOTE(rt0.c1) COLLATE BINARY) ORDER BY (((t0.c0 IN (rt0.c0, vt0.c0))) BETWEEN ((+ (rt0.c2))) AND (((((x'')AND(vt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((t0.c0 IN (rt0.c0, vt0.c0))) BETWEEN ((+ (rt0.c2))) AND (((((x'')AND(vt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (QUOTE(rt0.c1) COLLATE BINARY) ORDER BY (((t0.c0 IN (rt0.c0, vt0.c0))) BETWEEN ((+ (rt0.c2))) AND (((((x'')AND(vt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((t0.c0 IN (rt0.c0, vt0.c0))) BETWEEN ((+ (rt0.c2))) AND (((((x'')AND(vt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (QUOTE(rt0.c1) COLLATE BINARY) ORDER BY (((t0.c0 IN (rt0.c0, vt0.c0))) BETWEEN ((+ (rt0.c2))) AND (((((x'')AND(vt0.c0)))AND(rt0.c1))));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)&((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)&((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0)&((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (('J]MOntP_U')&(t0.c0)) THEN NULL WHEN LIKE(rt0.c0, t0.c0) THEN ((rt0.c1) IS FALSE) ELSE (rt0.c0 IN (vt0.c0)) END) ORDER BY (((vt0.c0 IN ()))>(UNICODE(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (('J]MOntP_U')&(t0.c0)) THEN NULL WHEN LIKE(rt0.c0, t0.c0) THEN ((rt0.c1) IS FALSE) ELSE (rt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((vt0.c0 IN ()))>(UNICODE(rt0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (('J]MOntP_U')&(t0.c0)) THEN NULL WHEN LIKE(rt0.c0, t0.c0) THEN ((rt0.c1) IS FALSE) ELSE (rt0.c0 IN (vt0.c0)) END) ORDER BY (((vt0.c0 IN ()))>(UNICODE(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (('J]MOntP_U')&(t0.c0)) THEN NULL WHEN LIKE(rt0.c0, t0.c0) THEN ((rt0.c1) IS FALSE) ELSE (rt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((vt0.c0 IN ()))>(UNICODE(rt0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN (('J]MOntP_U')&(t0.c0)) THEN NULL WHEN LIKE(rt0.c0, t0.c0) THEN ((rt0.c1) IS FALSE) ELSE (rt0.c0 IN (vt0.c0)) END) ORDER BY (((vt0.c0 IN ()))>(UNICODE(rt0.c0)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(x'', rt0.c2))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) DESC, PRINTF(vt0.c0 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(x'', rt0.c2))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) DESC, PRINTF(vt0.c0 COLLATE NOCASE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(x'', rt0.c2))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) DESC, PRINTF(vt0.c0 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(x'', rt0.c2))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) DESC, PRINTF(vt0.c0 COLLATE NOCASE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((IFNULL(x'', rt0.c2))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) DESC, PRINTF(vt0.c0 COLLATE NOCASE)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((NOT (CAST(t0.c0 AS BLOB))));
SELECT COUNT(*) FROM t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN t0.c0 ELSE x'4ddc' END))) ORDER BY ((0.9615605497237499) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((~ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN t0.c0 ELSE x'4ddc' END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((0.9615605497237499) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((~ (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN t0.c0 ELSE x'4ddc' END))) ORDER BY ((0.9615605497237499) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((~ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN t0.c0 ELSE x'4ddc' END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((0.9615605497237499) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((~ (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN t0.c0 ELSE x'4ddc' END))) ORDER BY ((0.9615605497237499) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((~ (rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((MAX(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0)=(t0.c0))) AND ('6nGB,‚±ï<''\n'))) ORDER BY (((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((ABS(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0)=(t0.c0))) AND ('6nGB,‚±ï<''\n'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((ABS(t0.c0)))) DESC);
SELECT ALL * FROM t0 WHERE (((MAX(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0)=(t0.c0))) AND ('6nGB,‚±ï<''\n'))) ORDER BY (((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((ABS(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0)=(t0.c0))) AND ('6nGB,‚±ï<''\n'))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((ABS(t0.c0)))) DESC);
SELECT ALL * FROM t0 WHERE (((MAX(t0.c0, t0.c0)) NOT BETWEEN (((t0.c0)=(t0.c0))) AND ('6nGB,‚±ï<''\n'))) ORDER BY (((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((ABS(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((0.25914336309594455) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.25914336309594455) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((0.25914336309594455) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.25914336309594455) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((0.25914336309594455) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((vt0.c0)||(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((vt0.c0)||(t0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((vt0.c0)||(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((vt0.c0)||(t0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((vt0.c0)||(t0.c0))))));
SELECT * FROM rt0, t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0)<>(rt0.c1)) THEN ((rt0.c2)OR(rt0.c1)) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(x'')))OR(rt0.c0)) WHEN (((rt0.c0))<=((rt0.c0))) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.19602657027552717 THEN rt0.c1 END ELSE COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c0))  WHEN ((t0.c0)!=(rt0.c1)) THEN ((rt0.c2)OR(rt0.c1)) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(x'')))OR(rt0.c0)) WHEN (((rt0.c0))<=((rt0.c0))) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.19602657027552717 THEN rt0.c1 END ELSE COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0, t0.c0) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0)<>(rt0.c1)) THEN ((rt0.c2)OR(rt0.c1)) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(x'')))OR(rt0.c0)) WHEN (((rt0.c0))<=((rt0.c0))) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.19602657027552717 THEN rt0.c1 END ELSE COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c0))  WHEN ((t0.c0)!=(rt0.c1)) THEN ((rt0.c2)OR(rt0.c1)) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(x'')))OR(rt0.c0)) WHEN (((rt0.c0))<=((rt0.c0))) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.19602657027552717 THEN rt0.c1 END ELSE COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0, t0.c0) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0)<>(rt0.c1)) THEN ((rt0.c2)OR(rt0.c1)) WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(x'')))OR(rt0.c0)) WHEN (((rt0.c0))<=((rt0.c0))) THEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN 0.19602657027552717 THEN rt0.c1 END ELSE COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0, t0.c0) END);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON LENGTH((((vt0.c0))>=((t0.c0)))) WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CASE WHEN ((t0.c0)&(vt0.c0)) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON LENGTH((((vt0.c0))>=((t0.c0)))) ORDER BY CASE WHEN ((t0.c0)&(vt0.c0)) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON LENGTH((((vt0.c0))>=((t0.c0)))) WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CASE WHEN ((t0.c0)&(vt0.c0)) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON LENGTH((((vt0.c0))>=((t0.c0)))) ORDER BY CASE WHEN ((t0.c0)&(vt0.c0)) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON LENGTH((((vt0.c0))>=((t0.c0)))) WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CASE WHEN ((t0.c0)&(vt0.c0)) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c1)>=(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(t0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c1)>=(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(t0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (((((rt0.c1)>=(t0.c0))) IS TRUE));
SELECT ALL * FROM vt0, rt0 WHERE ((- ((rt0.c1 IN ())))) ORDER BY ((NULL)-(rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NULL)-(rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE ((- ((rt0.c1 IN ())))) ORDER BY ((NULL)-(rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NULL)-(rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE ((- ((rt0.c1 IN ())))) ORDER BY ((NULL)-(rt0.c2)) COLLATE RTRIM;
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((rt0.c1)IS NOT(x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS NOT(x'')) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((rt0.c1)IS NOT(x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS NOT(x'')) IN ())) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((rt0.c1)IS NOT(x'')) IN ()));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))=((((NULL)*(t0.c0)))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))=((((NULL)*(t0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY x'');
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))=((((NULL)*(t0.c0)))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))=((((NULL)*(t0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY x'');
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))=((((NULL)*(t0.c0)))))) ORDER BY x'';
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND((((t0.c0))>((t0.c0))))))AND(LOWER(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND((((t0.c0))>((t0.c0))))))AND(LOWER(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND((((t0.c0))>((t0.c0))))))AND(LOWER(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND((((t0.c0))>((t0.c0))))))AND(LOWER(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND((((t0.c0))>((t0.c0))))))AND(LOWER(t0.c0))));
SELECT * FROM vt0, t0 CROSS JOIN rt0 ON NULL WHERE ((((rt0.c2 COLLATE BINARY, 4.2268902E8, ((t0.c0)<>(rt0.c1))))<((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'1dfa')), (t0.c0 IN (rt0.c2)), ((rt0.c1)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, 4.2268902E8, ((t0.c0)!=(rt0.c1))))<((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'1dfa')), (t0.c0 IN (rt0.c2)), ((rt0.c1)|(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON NULL);
SELECT * FROM vt0, t0 CROSS JOIN rt0 ON NULL WHERE ((((rt0.c2 COLLATE BINARY, 4.2268902E8, ((t0.c0)<>(rt0.c1))))<((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'1dfa')), (t0.c0 IN (rt0.c2)), ((rt0.c1)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY, 4.2268902E8, ((t0.c0)!=(rt0.c1))))<((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'1dfa')), (t0.c0 IN (rt0.c2)), ((rt0.c1)|(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON NULL);
SELECT * FROM vt0, t0 CROSS JOIN rt0 ON NULL WHERE ((((rt0.c2 COLLATE BINARY, 4.2268902E8, ((t0.c0)<>(rt0.c1))))<((((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'1dfa')), (t0.c0 IN (rt0.c2)), ((rt0.c1)|(vt0.c0))))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((- (rt0.c2 COLLATE RTRIM))) ORDER BY json_patch((rt0.c1 IN ()), (((vt0.c0)) BETWEEN ((0xffffffff99186a5c)) AND ((rt0.c1)))), ((x'3879')*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))), ((((rt0.c0) IS TRUE))OR(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY json_patch((rt0.c1 IN ()), (((vt0.c0)) BETWEEN ((0xffffffff99186a5c)) AND ((rt0.c1)))), ((x'3879')*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))), ((((rt0.c0) IS TRUE))OR(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((- (rt0.c2 COLLATE RTRIM))) ORDER BY json_patch((rt0.c1 IN ()), (((vt0.c0)) BETWEEN ((0xffffffff99186a5c)) AND ((rt0.c1)))), ((x'3879')*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))), ((((rt0.c0) IS TRUE))OR(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY json_patch((rt0.c1 IN ()), (((vt0.c0)) BETWEEN ((0xffffffff99186a5c)) AND ((rt0.c1)))), ((x'3879')*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))), ((((rt0.c0) IS TRUE))OR(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((- (rt0.c2 COLLATE RTRIM))) ORDER BY json_patch((rt0.c1 IN ()), (((vt0.c0)) BETWEEN ((0xffffffff99186a5c)) AND ((rt0.c1)))), ((x'3879')*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))), ((((rt0.c0) IS TRUE))OR(((vt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULLIF(DISTINCT (rt0.c2 IN ()), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (rt0.c2 IN ()), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (rt0.c0 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULLIF(DISTINCT (rt0.c2 IN ()), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (rt0.c2 IN ()), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (rt0.c0 IN ()) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (NULLIF(DISTINCT (rt0.c2 IN ()), ((((rt0.c2)OR(x'')))AND(rt0.c0)))) ORDER BY (rt0.c0 IN ()) COLLATE RTRIM COLLATE BINARY;
SELECT * FROM vt0, rt0, t0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 ELSE 0.6049298595290811 END WHERE ((((vt0.c0)) NOT BETWEEN (('pWbO')) AND (((~ (rt0.c1)))))) ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))) AND ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (('pWbO')) AND (((~ (rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 ELSE 0.6049298595290811 END ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))) AND ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 ELSE 0.6049298595290811 END WHERE ((((vt0.c0)) NOT BETWEEN (('pWbO')) AND (((~ (rt0.c1)))))) ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))) AND ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (('pWbO')) AND (((~ (rt0.c1)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 ELSE 0.6049298595290811 END ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))) AND ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CAST(rt0.c2 AS BLOB) THEN vt0.c0 ELSE 0.6049298595290811 END WHERE ((((vt0.c0)) NOT BETWEEN (('pWbO')) AND (((~ (rt0.c1)))))) ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))) AND ((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2))))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))<>(((((0X40b4b6fe)AND(vt0.c0)))AND(NULL))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c0))))<>(((((0x40b4b6fe)AND(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))<>(((((0X40b4b6fe)AND(vt0.c0)))AND(NULL))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c0))))<>(((((0x40b4b6fe)AND(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))<>(((((0X40b4b6fe)AND(vt0.c0)))AND(NULL))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT * FROM rt0 WHERE (((0.05900456138158017)-(0.772951839350111)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((0.05900456138158017)-(0.772951839350111)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0.05900456138158017)-(0.772951839350111)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((0.05900456138158017)-(0.772951839350111)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0.05900456138158017)-(0.772951839350111)) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0, rt0 WHERE (0.9304675341116248) ORDER BY UPPER(DISTINCT rt0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9304675341116248) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY UPPER(DISTINCT rt0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (0.9304675341116248) ORDER BY UPPER(DISTINCT rt0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9304675341116248) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY UPPER(DISTINCT rt0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (0.9304675341116248) ORDER BY UPPER(DISTINCT rt0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0))))) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS INTEGER));
