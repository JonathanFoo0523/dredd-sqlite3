-- Time: 2024/06/11 05:59:58
-- Database: database32
-- Database version: 3.40.0
-- seed value: 3651710532
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE t0 (c0 INTEGER NOT NULL ON CONFLICT IGNORE UNIQUE , c1 BLOB , c2 INT  CHECK ( 1000852555 COLLATE BINARY)); -- 0ms;
REINDEX; -- 0ms;
VACUUM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('-723823040') WHERE ((1774381166)&(2083354355)); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (json_quote((((0.785690121215321, '1774381166', NULL))>=((2.083354355E9, '-723823040', x'0526')))), x'e797', x'7f20'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE ((((((((((((((t0.c2) IS TRUE))AND(SUBSTR(t0.c1, t0.c2))))AND(CAST(x'0b8c' AS NUMERIC))))AND(((t0.c2) IS TRUE))))OR(((t0.c0)>=(t0.c2)))))AND(((t0.c1)>=(t0.c0)))))OR(LIKELY(t0.c2))); -- 1ms;
UPDATE t0 SET (c0)=(NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES ('1000852555', x'38b1'); -- 0ms;
UPDATE t0 SET (c2)=(x''); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i22 ON t0(((c0) NOT BETWEEN (c1) AND (c2)) COLLATE NOCASE COLLATE BINARY ASC,CASE ((((c2)AND(c2)))AND(c2))  WHEN (- (c0)) THEN ((c0) NOTNULL) END COLLATE NOCASE,((((c2)GLOB(c1))) NOT BETWEEN ((((c2, c0, c2)) NOT BETWEEN ((c1, c0, c1)) AND ((c0, c1, c0)))) AND (json_extract('1774381166', c0, c1, c0))) COLLATE NOCASE ASC) WHERE (((c0, c1, c1)) NOT BETWEEN ((((c1) NOT BETWEEN (c2) AND (c0)), ((c1)>>(c0)), c1 COLLATE NOCASE)) AND ((NULL, ((c2) NOT BETWEEN (c0) AND (c0)), LOWER(c2)))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i84 ON t0(TYPEOF(DISTINCT c0 COLLATE RTRIM),(('Rw|') BETWEEN (x'48b0') AND ((+ (c2)))) COLLATE RTRIM ASC,CASE DATE(c1, c0, x'')  WHEN ((c0) IS TRUE) THEN ((c0)/(c0)) ELSE '-723823040' END COLLATE RTRIM) WHERE ((((c2)AND(x'')))OR(c1)) COLLATE NOCASE; -- 5ms;
DROP INDEX "i84"; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 INT ); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES (x'0c4a', 0.2762755292361184); -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
INSERT OR REPLACE INTO rt0(c5, c4) VALUES (1.774381166E9, '0.2762755292361184'); -- 1ms;
CREATE INDEX i23 ON t0((((c0)) NOT BETWEEN ((CASE WHEN c2 THEN c2 WHEN c0 THEN c2 WHEN c1 THEN c0 ELSE c1 END)) AND ((((c2)&(c0))))) ASC,x'ae39' COLLATE RTRIM,((((c2) NOT NULL))IS NOT(((x'') NOTNULL))) COLLATE NOCASE ASC) WHERE CASE CASE WHEN c2 THEN c2 WHEN c2 THEN c1 WHEN c2 THEN c2 ELSE c2 END  WHEN ((((c0)AND(c1)))OR(c1)) THEN ((((c1)OR(c2)))AND(c1)) END; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4) VALUES (0.29718363913636225, x''); -- 0ms;
INSERT OR ABORT INTO t0(c1) VALUES (''), (NULL), (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c4, c3, c5) VALUES (x'', x'', 0.29718363913636225, 2083354355), ('2083354355', '-723823040', x'', x''), (x'38d0', '!&', '-1166528552', '0.785690121215321'); -- 0ms;
CREATE UNIQUE INDEX i41 ON t0((((((c1 IN ()))OR(((((((((((((c0)AND('-1982870558')))AND(c2)))AND(c2)))OR(c2)))AND(c1)))AND(c0)))))OR(c1)) DESC,c0 COLLATE RTRIM COLLATE NOCASE,CASE WHEN (c2 IN ()) THEN HEX(NULL) END COLLATE NOCASE) WHERE ((c0 COLLATE RTRIM)%(((((c2)OR(c2)))AND(c2)))); -- 0ms;
PRAGMA mmap_size = -4162977682106934851; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-570083937 sz=-1968416985 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5725800483043966)OR((((('-670611705')AND(x'')))OR(0.32625137653934544)))))OR('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '417641248'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-919407349'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.4752969815818636 IN (0.8324272168829794)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '' COLLATE BINARY  WHEN CAST(NULL AS REAL) THEN ((0xffffffffde05359f)%(0.3865292647592721)) WHEN (NULL IN ()) THEN ((((NULL)OR(x'0d64')))AND('-570083937')) WHEN (((('807168655')AND(x'fcd7')))OR(807168655)) THEN CAST(x'' AS INTEGER) ELSE (0.846037717377433 IN ('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-670611705 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x17288b7)<('3!')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1982870558'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN (('')) AND ((x'')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1842506141' IN (x'')))IS NOT(((-1982870558)LIKE(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '1380043453'  WHEN 0Xffffffff8aac5727 THEN '-1982870558' ELSE '' END) NOT BETWEEN ((((x'')) NOT BETWEEN ((0.34849403582793037)) AND ((x'7b16')))) AND ((((-2095061985, 0.3502199922860776, NULL)) NOT BETWEEN (('Rw|', '', 'q]VIJeUë¡¾')) AND (('', x'', NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=-670611705 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=899235964 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1597910935 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '2 547286235 sz=-92211636'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-506052431 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '547286235 sz=287684667'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=583280975 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '1380043453 sz=-919407349 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('') NOTNULL)  WHEN CAST(-1166528552 AS NUMERIC) THEN ((x'')>(x'9861')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=317560798 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff805fadd1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '542386092 0 sz=698787754 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.18735340000560896 COLLATE RTRIM) BETWEEN (((NULL) BETWEEN ('n}') AND (NULL))) AND (UNLIKELY(DISTINCT 0.08595997483712048))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.08595997483712048) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'2af7b76a') NOTNULL))AND(CAST(NULL AS NUMERIC))))OR(((-1898399618)IS NOT(0.9746114018689284)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '2 sz=1079478324'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))AND(CASE 'nE'  WHEN 0.7277126515098544 THEN x'' END)))OR(((NULL)AND('-570083937')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '-723823040'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=567277586 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '899235964 sz=-1790967296'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((x'') NOT BETWEEN (NULL) AND (x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)%(0.4752969815818636)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1858956161 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '516417057'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-994778106 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=1079478324'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1170066475 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'be39')OR(0.7685278505675467)) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1674543998 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7277126515098544)>(((('921105137')) BETWEEN ((0Xfffffffffa80f64c)) AND ((x'1ecc'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1631658246 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=-542032356 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=-1244389918'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=638172771 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1244389918')AND(0.3786259295343426))) NOT BETWEEN (-1.968416985E9) AND (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=1454607394 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') ISNULL)  WHEN (0.004501352474859832 IN ()) THEN CASE ''  WHEN '417641248' THEN 0.3531050176550298 ELSE '0.4752969815818636' END ELSE (((x'6ec0be00')) BETWEEN (('1488041274')) AND ((NULL))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '4 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0x51911b16)OR(0Xffffffff831fe41f)))OR(0.004501352474859832)))AND('3!')))AND(0.8405190745950273)))<<(((0.06753345459100013) NOT BETWEEN ('{M*}w*') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(0.6215502226459748))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=317560798 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '2 sz=640971418 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-670611705'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=1811660407 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.33753886624839213 THEN 1.000852555E9 ELSE x'' END)IS(((x'9cc735ea') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS TEXT) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1602268014'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('1674543998')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '-1092322671 sz=-198357054'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-918991883 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1562607586 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1065241836 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-118876842 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-92211636') ISNULL))-(UNLIKELY(0.29398077977313963))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(0.7452695538898156))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=1602268014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '144955979 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR(-727013743)))OR(-1179823873)))!=(CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1316331692 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '0 sz=-1905916379 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=1380043453'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=804175922 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 -1562607586 sz=1582349660 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN (((('?éªz&%?J,')<<('0.08595997483712048')))) AND (((NULL IN (NULL, 0X58b1b53a))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '2 -1333711700 sz=1233634179 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffd54b51c2)) BETWEEN (('-1972919873')) AND ((NULL))))%((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN (CAST('-1888816350' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '1774381166 sz=786535363 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1700328262 230683593 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '516417057 -2075818324 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(NULL COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-1737922820 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '90106761 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-137109362') BETWEEN (x'') AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=390811306'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('24283319')OR(x'')))OR('0.5725800483043966')))|(((0.0)<=('1263246942')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)LIKE(CAST(0.24114548445499795 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.7725518448253038)OR(x'')))OR(1597910935)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=76736142'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))+(((((((((0.7685278505675467)OR(NULL)))AND(0.38758508926563573)))AND('-1916492809')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1092191962'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 sz=640971418 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.01634367597070696  WHEN 0.38211824499029057 THEN 'ì¿/' WHEN x'' THEN x'70c97b6c' WHEN x'' THEN 0.4876865811506863 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((317560798) IS TRUE))OR(((x'') BETWEEN (NULL) AND (-152794708)))))OR(((NULL)-(NULL)))))OR(0.6215502226459748 COLLATE NOCASE)))AND((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '2 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '973960066'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=798564165 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.42932795836473203 AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=521104080 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.003561814141623265 AS BLOB) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')<=('rB')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'9133')>>(-1213220244)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')OR(1380565055))))==((CAST(0.4520867339147271 AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=372686760 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=991566007 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-1162323536 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '0.06753345459100013' THEN x'c7b7' COLLATE RTRIM ELSE (('27x(é²') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1263246942' IN (0.10404773735136208))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=-1898399618 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-919407349 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '4 0 sz=1744106915 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1597910935 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'04c9')<=('')) IN ((('0.32625137653934544')OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('rB')<('')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=593351304 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=807614575'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((984448165) ISNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('P7Wv')AND(NULL)))AND(',NL/q?')))AND(((NULL) NOTNULL))))AND((((('')OR(0X36d76e0f)))AND('hE')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '0 sz=-681803320 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '324743966 -1127830206 sz=177846565 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((LIKELY('?éªz&%?J,'))AND(0.660614618818457)))AND((('583280975') ISNULL))))OR(CASE WHEN 0.4599157833149763 THEN 'k U5 fD' END)))OR('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS REAL))AND(((0.8090148985842343)AND(NULL)))))AND(CASE WHEN '-1590994639' THEN '1508805754' ELSE '1380043453' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (-5.06052431E8 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1798824789 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1048356029'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('	u' AS BLOB)) BETWEEN (((x'')<=('\r'))) AND (((0.6211779822738632) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=790703487 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '0 807168655'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1578875759 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-1519917789')))%((- (0xffffffffc9394bf5)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(NULL, 0.6241001202815266))>=(((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'40a5' COLLATE RTRIM) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('\r(') NOT BETWEEN ('j)') AND (0.9386048554898786)))AND(NULLIF('', x'85b6'))))AND(LIKELIHOOD(x'', 0.6061914071743839))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.25266985969351474)AND(0.3531050176550298)))AND(0.8227457592629169)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((load_extension('')) BETWEEN (0.4404577176411091 COLLATE RTRIM) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.4404577176411091, '', '1000852555')) NOT BETWEEN (('2u#', 'VZY1i}4q', NULL)) AND ((NULL, 0.9746114018689284, 0x5249c03f)))  WHEN (((0Xffffffffcf419daf))<((x''))) THEN (0x1f0f6ad0 IN ()) WHEN -1732319536 THEN ((NULL) ISNULL) WHEN TRIM(x'', NULL) THEN (('juFDa<r') IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=718890377 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=1103042296 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.4876865811506863'; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((287684667)|(0X5b295100)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('è ´X') NOT BETWEEN (']é£KC{u') AND (0X5ca9092e)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-1492283600') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1515991993 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '542386092 sz=-1213220244 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-1283638425'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1380043453' IN (NULL, NULL)))%((((0x2107b66a))>=((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=293801399 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1221784726 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '665879446 sz=230683593 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=56262109 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x1ec7e621; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=1650930180'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1806340889 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1263246942 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '}X' THEN '-1537855906' WHEN 'bT' THEN x'e64c' WHEN x'' THEN NULL WHEN 0.8946529404807158 THEN 0x7369cafb WHEN 0.4906374547727842 THEN x'' END)<(((x'cf72') NOT BETWEEN ('jè¬å§î') AND (-1.98357054E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '0 sz=598971262 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1513414599 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1898399618 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '230683593 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=347579542 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '-679342129 1274914222 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=-672544055 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '2 sz=-1868025330 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.316331692E9) NOT BETWEEN (0x326de01) AND (((1969976538) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_valid(x''))<<(SQLITE_COMPILEOPTION_USED(0.8727826620995444))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')>=('542366594'))))>=((((2.4283319E7)-(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=280419124 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1593205631')OR(6.98787754E8)))OR(CASE '-860825483'  WHEN 949472055 THEN 0.9229508726032901 WHEN 0x6bfbbe77 THEN -1.790967296E9 WHEN x'' THEN 0.40802124689080477 END)))OR((9.21105137E8 IN (0Xffffffff986966fc)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-141273708 0 sz=-1849201379 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0Xffffffffc4d1eddd COLLATE RTRIM THEN ((NULL)LIKE(0.5543508043919143)) ELSE ((('P7Wv'))<>((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-92211636 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-891909223'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('920088079' IN (NULL)))|(LOWER(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '-480085674 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=640971418 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=-1790967296 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=1109720526 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2083354355 -1237924520 1695075520 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '-2105543084 sz=-990909038 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=899235964 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE '/e'  WHEN 0xffffffffd54b51c2 THEN NULL ELSE x'013ff31c' END)AND(((NULL) NOT BETWEEN (x'def6') AND (x'e78a')))))OR(((x'') NOT BETWEEN (x'') AND (x'ae26')))))AND(x'')))AND(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '638172771'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x70990115; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1916492809 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=1763765621'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '1959822098 sz=1906769091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-1944726928'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1101307109 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 -1092322671'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1179823873 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=1549905594'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=995510043 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN (CAST(0.2126248269979234 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('-570083937' AS NUMERIC))OR((x'be7b4827' IN ()))))OR(((x'') NOT BETWEEN (NULL) AND ('àª¶a[X')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')OR(x'')) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=786535363 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=590486341'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-331477776')) NOT BETWEEN ((((((0.42932795836473203)AND('?ï£j[Uy')))OR(NULL)))) AND ((CASE WHEN x'e580' THEN 0.39552953647202715 WHEN '973960066' THEN '6?' WHEN NULL THEN '495160687' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '1767890237 sz=134726517'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '4 1263246942 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('287830345') NOT BETWEEN (x'94b0') AND (0.1528793791688271)))>=(((x'5146')==('-118876842')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=334378066'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-399104108'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'')LIKE(0.9751981958624094)))OR(LIKELY(DISTINCT x''))))AND(NULL)))AND((+ (0x1f5ef35a)))))AND((('1000852555')<('1052924665')))))OR(NULL)))AND(((((NULL)OR('0.3531050176550298')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=-9223372036854775808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=-1694675427 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1984797101'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '2 486464788 sz=-1080547831 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1672122418 sz=1294845103 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '958891578 sz=-909511701 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'ad58' THEN 0Xffffffffb9a04501 ELSE 'BS&8á i' END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '2 sz=1689898831'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.10404773735136208'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('	)q')<<(-447657133)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=1065241836 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN ((NULL) IS FALSE) THEN ((0xffffffffeeb75593) NOT BETWEEN (x'') AND (0.8999645958457413)) ELSE ((-9.94778106E8)>>(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1768074920 sz=1995394874 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1009517931 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '132729126 sz=-1800678066 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffd7fc2da7) NOT BETWEEN (x'') AND ('')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '2 6 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((HEX(DISTINCT 1005507895))) AND (((((('')OR(0.8198755358163939)))AND(0X36e6f2f1))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (IFNULL(x'', 0.8324272168829794) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-315844808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1898399618 COLLATE RTRIM) BETWEEN (((NULL)<<(x''))) AND (((((0.5512233994317246)AND(NULL)))AND('521104080')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE NULL  WHEN 0.5079749030807096 THEN 0.7549506395589481 WHEN x'' THEN NULL WHEN 0.7290619018439678 THEN NULL END THEN (NULL IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '337785584 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('-2138528577')OR('-1162323536')))AND(0xffffffffbc0bc67a))  WHEN ((x'')>(x'')) THEN (((NULL))=(('%Q0q4*%]'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(LIKE('516417057', 'SX'), ((0.7015073232865424) NOT BETWEEN (',NL/q?') AND (0xffffffffa2340209))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-(NULL)))*(((0.854201498311275)*('c7yì¿ë¤¥nn')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))-(('' IN (0x6bfbbe77, -1177010592)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=-9223372036854775808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=475216624'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=743730763 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1674543998'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0.7290619018439678 THEN x'' WHEN '698787754' THEN x'' WHEN '' THEN '-1115033861' END IN ((('') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|('798564165'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.19931163392392215 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-493071119 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('0.25266985969351474') NOT BETWEEN (NULL) AND ('-550903109')) THEN ((x'')IS NOT(0.9636950934281959)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=946779859'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.09678628380775778)))|(LIKELY('pp'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '1319757506 -2075818324 noskipscan'); -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3865292647592721 IN (x''))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1148893780 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=-1982870558 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1697474215 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '1582349660 0 sz=-152794708 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '1079478324 -1982870558 sz=-870715462 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=698787754 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '177846565 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '4 -452713637 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '1488041274 sz=921105137 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=516417057 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1796782247'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1672122418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=544404363 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))+((((NULL, 0.8579106732334908, x''))>=((-9.18991883E8, x'bb28', '623288748'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=1674543998 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.1494956346425591 AS REAL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((2083354355)|(x'')))AND(819860333 COLLATE BINARY)))OR((((0.9636950934281959))=((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE -1.162323536E9  WHEN ((('uæ«!OhSc')) NOT BETWEEN ((0.36086669299260676)) AND ((x''))) THEN (+ (0.3614458672155093)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1909666588 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHAR(-401515802, 0.8376150750133925, 'w')) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=-1590994639 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=-1564672984'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1864907444 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((NULL)IS(0x61074c48)))) AND ((((0.8999645958457413)|(x'c1cb'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))OR(x''))) BETWEEN (CASE WHEN x'4a31' THEN x'ebb4' END) AND (((('144955979', NULL, '24283319')) BETWEEN ((x'', x'', '593351304')) AND ((NULL, NULL, ''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=372686760 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1959092525'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'c485')))AND(0.7277126515098544))) NOT BETWEEN ((0.8224699790625322 IN ())) AND ((('âéXM2G|') NOT BETWEEN (0.25390050535453834) AND ('*wYq0N')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)=(1.380043453E9)))GLOB((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ ('1368464150')) THEN ((x'')<<('>|Z\r9ë »')) WHEN ((89584159)>>('-1483199652')) THEN CAST(x'' AS BLOB) WHEN ((((((((0.9597004325993348)AND(0.11944238807353724)))OR(0.03197642834167136)))AND(x'53b0')))OR(NULL)) THEN (('Ke')>('-1213220244')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.007234937090541682)<=(x'3d01')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-723823040 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'0af9' AS TEXT) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1829192400 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=1069715061 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-506052431 sz=-1841530666 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=1815003849 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-658201528 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2028825440 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-368605589'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((x'810a' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1916492809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1270378349 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=775586122 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1236267953 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))<('Gz')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '58288779 sz=613472519 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0.4510890207908267)))OR('\r(' COLLATE NOCASE)))AND(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('0.6211779822738632')OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=-1606078749 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1522901409 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((9.20088079E8)+((('')AND(0.33353538504965563)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '-1318656983 0 sz=-2103319574 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '-542032356 sz=1468002154'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '966289110 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'3007') BETWEEN (((NULL) NOT BETWEEN ('+S0vQ-*<r') AND (NULL))) AND (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-860592817 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') ISNULL) THEN (((NULL, NULL, 0.5975759074755094, 0.6669581853804545, 0Xffffffffb8f7ff37)) NOT BETWEEN (('T6#Qk', 0.5089983226179025, x'', NULL, 0.09027975232736718)) AND (('', x'ebde', '-862781111', 0.9593404276922518, NULL))) WHEN LOWER(NULL) THEN ((0X3a0d7382)<>('1071890636')) WHEN 'w' THEN CASE 0x2aca986b  WHEN ']s?\~0C' THEN 0X5975c630 END WHEN MAX(0.3546801760608025, NULL) THEN 0.20399776647585743 WHEN CAST(x'' AS REAL) THEN TYPEOF('') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '-691523343 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=1488041274 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'1651') BETWEEN (7.86535363E8) AND ('0.854201498311275'))) BETWEEN (((((NULL)OR(0.9415115869723778)))OR(NULL))) AND (((0.557448273827283) BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-2095061985'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '-1275791804 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '-1699423015 sz=1874031482 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-89926494 sz=-67865970 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '1862502951 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('-1858956161'))) BETWEEN (CAST(0.4422168121153719 AS NUMERIC)) AND ((((0.5659046502046563)) NOT BETWEEN ((x'ef8e')) AND ((-2.095061985E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=855653206'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.8778645868324106)/('1674543998')) THEN 0.3958253360409668 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=-716484158 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1151702971 sz=329325371 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=2034747758 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=-1162323536 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '920088079 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL)AND(NULL)))AND(0.17752867930702598)))OR(0.45042185715687333)))AND(NULL)))AND('-1179823873')))OR(NULL))) NOT BETWEEN (TYPEOF('jè¬å§î')) AND (CAST('3B' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '0.6215502226459748' THEN '1597910935' ELSE x'' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('999727250' IN ())) BETWEEN (((NULL)<<('K'))) AND ((('-1733005096')<(0.13183099686448752)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)AND(0X363c409)))AND('')) THEN (('')OR(0.2236720045663435)) ELSE (('1287362540')>(0.7914373324989413)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=804175922 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(TRIM(DISTINCT x'', 0.4226630440788044), ((-1.179823873E9)/(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-542032356 0 sz=-845959386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))AND((('b?')<(0xffffffffc932f50b)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (0.7596553152423411))  WHEN CAST('-137109362' AS TEXT) THEN (('30') NOT BETWEEN (x'c7c4') AND (x'')) WHEN ((NULL) IS FALSE) THEN ((x'') ISNULL) WHEN LAST_INSERT_ROWID() THEN '5' ELSE CAST(x'' AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=-152794708 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND ((0.09772694483409483 COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=877403440 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '921105137'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '2049779628 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.48828943628177546  WHEN '-723823040' THEN x'' ELSE -927512521 END)OR(x'')))OR(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'02a5' IN ()))OR((('') ISNULL))))AND(((640971418)&('')))))OR((('G\tdoHJ') IS TRUE))))OR(((((NULL)AND('mR')))AND('-1467811451')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 sz=984448165 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=930781981'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1092191962')) BETWEEN ((CASE WHEN x'' THEN 0.24147001005558066 WHEN '2u#' THEN '1672122418' WHEN 0.8510571274267572 THEN 'mE' ELSE '48506770' END)) AND (((x'' IN (NULL, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((885187740)&(0X11b807fa)))OR(CASE WHEN '-1222094109' THEN 0.6660171390009513 WHEN 0xfffffffffd53712d THEN x'27ac' WHEN x'' THEN 0.013519078345218594 ELSE 'æ_' END)))OR(0.5917874407037285 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '1308835442 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT ('j)'))  WHEN (('0.5975759074755094')IS('898864670')) THEN 'Z' WHEN (1821769581 IN ()) THEN ((1.316331692E9)AND(NULL)) WHEN NULL COLLATE RTRIM THEN (('bR1B')|(x'')) ELSE (~ ('>|z\r9ë »')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '1986749921 sz=-399226073 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=1182529573 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1888816350') NOTNULL)) BETWEEN (((0.9991356474981341) BETWEEN (x'') AND ('287684667'))) AND (SQLITE_COMPILEOPTION_GET(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1012181774 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '566635377 sz=1709751933 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1700164593 AS TEXT))OR(((2.87684667E8)>>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (NULL)), ((((x'cc35')OR('921105137')))AND(x'')), (((((((('')OR('zï£r')))AND(0xffffffffb7afba6c)))OR(0.7015919598889662)))AND(0.19958666312408935))))==(('886772400', (('E[') ISNULL), CAST(NULL AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1158868347 sz=-674656467 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '-1972919873 sz=920088079'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1040187951 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=1674543998 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=-994778106 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.7596553152423411)))/(((0.5036299650125416)<=(0x301c6a8f)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1620869302 sz=-963221698 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'1a77') NOTNULL))AND(0xffffffffea99906a COLLATE RTRIM)))AND(json_array_length(NULL))))AND(HEX('-1314621485'))))AND((('-137109362') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1854201929 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1674543998'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(DISTINCT NULL, 0.3267560599796998))-(((0X4ef2ea51)>=(0.4145715972039691)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=175933785 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '417641248 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=417641248 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-1972919873 -1707922495 sz=-809240296 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '0 0 sz=2063675000 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '925611880 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- (-1334493538)) THEN GLOB(x'', 0.8036012297653469) WHEN ((NULL) BETWEEN (NULL) AND ('-681803320')) THEN NULL WHEN ((0.7725518448253038)+(x'')) THEN (- (0.0)) WHEN CASE WHEN x'7827' THEN 0.7452695538898156 WHEN x'1c5c' THEN NULL WHEN '-723823040' THEN x'775251cc' ELSE NULL END THEN UNLIKELY(0.36086669299260676) WHEN ((NULL) NOTNULL) THEN ((x'') NOT BETWEEN (NULL) AND (0x508eb452)) ELSE ((x'')*('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=1528063688 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', '-1091739972 2 sz=604348232 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=415958881 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1238600831 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=-727013743 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '0 sz=2074012933 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1790967296 804175922 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1000852555 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=807168655'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKE('gz', NULL, '0')  WHEN '-2132655625' COLLATE RTRIM THEN x'' END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=386572471 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=1412440877 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=1631658246 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-243469278 sz=-92211636 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=-359034774 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-527652831 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-37590413 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' sz=891872134 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '851871086 sz=-2073051120 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '-2146199775 527706170'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' sz=1510768752 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1124400886 AS INTEGER)) NOT BETWEEN ((((NULL))>=(('ki')))) AND ((~ (0x2feec032)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=-1888816350 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0X55eeb89 COLLATE NOCASE AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (highlight('0.1494956346425591', 'u2', NULL, NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '-701122892 sz=984448165 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-1143781140 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.03197642834167136; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-1981168981 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-727013743', '', '-416071152')) BETWEEN (('-670611705' COLLATE RTRIM, (-570083937 IN ()), CASE WHEN '1488041274' THEN 0.4062097921905574 WHEN x'c971' THEN 0.6609876683134586 WHEN NULL THEN 'é¹v' END)) AND ((((NULL) IS FALSE), ((372686760) BETWEEN (NULL) AND (NULL)), (~ (x'adf7'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=491789544 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-723823040 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=752887561 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=656330285 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '-1127830206 sz=1181539460'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_GET(''))-(((((x'dfaa')AND('')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-918991883 sz=-25128371 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('sF', '-1e500', '%U'))<(('Ke', x'', 0.29648991333909247)))) NOT BETWEEN ((((NULL)) BETWEEN ((0xffffffff8aac5727)) AND ((NULL)))) AND (((1505344769)&(',nrD&pr')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '521137444 0 sz=-1179823873 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'9d68')))LIKE(1756546605)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-982901661 1000852555 sz=-1858956161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'886f')<<(0.2825626182147568)))IS((((x'1c9c', '', 'P'))>(('zok', x'', 0Xffffffffe1d640b1))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((0.8923157484915475) BETWEEN (x'') AND ('-1213220244'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('z') BETWEEN (x'') AND (1658528703)))*(((((NULL)OR(0.9229508726032901)))AND(0.8437019027388524)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=372686760 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '0 sz=32877869'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-1590994639'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT x'')) NOT BETWEEN (((0xffffffff922d9663) NOT NULL)) AND ((('593351304') BETWEEN (x'1894') AND ('730620125')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', '-2135659678'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-1786887175'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' WHEN '446128784' THEN 0.8279446420951001 WHEN 8.07614575E8 THEN '1895799378' WHEN 0x42275ce1 THEN NULL WHEN NULL THEN 0.7317293366796985 ELSE 0.5142367920450787 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '-518133454 -1794618975 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '-1905916379 2053107321'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('3\n%n' COLLATE RTRIM)>(((x'')<>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '1109119106 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((((((1210269308)AND(0.5486446108591599)))AND('')))OR(x'')))AND(0.06357504776083556)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-790469140 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1286087496 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1972919873 sz=-452492348 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((((NULL))<=((x'7126'))))) AND (((('-1179823873')AND(0.5156869949607592))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '0 sz=-1394460816 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' sz=899235964 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('638172771'))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((NULL)) AND (('881475702')))) AND (((x'a813') NOT BETWEEN ('HS') AND (0.7267921048731596)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1494404211 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-625368155'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '[Ø¥[now]'  WHEN '-1727845545' THEN NULL WHEN ']fB\n' THEN -234402180 WHEN 0.23558154525012975 THEN '' WHEN 0xffffffffa75e7dba THEN NULL WHEN x'7857' THEN 'å' END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))==((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '-876183468 -1269932104 sz=-1979668696 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=-1417785116 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.3915805198452358)LIKE(NULL)))OR(('I_' IN ()))))AND(0.87144789342152)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-654969354 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'8be4' IN ()))AND(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '0 sz=807168655 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=-2141213231'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-681803320 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('[Ø¥[now]')AND(x'')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1774381166'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=-2120089135 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '1900763227'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1316331692'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=1209225163 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ()), NULL, (((NULL, '	b|P', x'')) BETWEEN ((NULL, -1.562607586E9, x'')) AND ((0.21115308874638417, x'', 0.29398077977313963)))))<=(('1672122418', ((NULL) NOT BETWEEN (0x4b74c39b) AND (0.9229508726032901)), TYPEOF(0.08920171345102179)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', '0 sz=1344328272 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=-1972919873 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-180054285')))|(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' sz=417641248 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1535687546'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('>|Z\r9ë »') NOT NULL) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((' H') BETWEEN (0.33353538504965563) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1092191962')OR(''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=-1179823873 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '4 4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-994778106 sz=-1968416985'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' sz=-919407349 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X55a13752, x'', '807168655')) BETWEEN ((0.8439368279908257, 776900630, NULL)) AND ((NULL, 'xká´æ·¬5', x'c13d'))), ((x'')LIKE('Vz')), QUOTE('0.33353538504965563')))=(((((0xffffffffc022fbf1)) BETWEEN ((NULL)) AND ((NULL))), ((3.7268676E8)-(x'')), (0.7596553152423411 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5638400512083578)+('r\')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))==((5.93351304E8))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i23', ' sz=357009898 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '-1345476952 -1595599577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=798564165 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1263246942 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-732369504')+(0.18401422367829678)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (COALESCE(DISTINCT NULL, 0.17174249564567012))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'62508803'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE BINARY)OR(json_array_length(x''))))AND((((NULL, NULL, 0.6513575674128285))<>(('hQ>', 0.9943159397586875, -727013743))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '408964740 sz=-1484316158 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5415880716516008 AS REAL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '24283319' THEN ((1794153647) BETWEEN (0xfffffffffa5cdcee) AND (x'')) WHEN x'' THEN (((x'')) BETWEEN ((x'5f1c1f8a')) AND (('#AE	fyjWè§¿'))) WHEN ((0x45bdcc2b) IS TRUE) THEN ((x'')>('1920938434')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.8354405857649797 AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ' sz=1761300871'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_t0_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', '1490378082'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '-817880995'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (LIKELIHOOD(DISTINCT '-918991883', 0.3363983442402366))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i41', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR((+ ('N'))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-836323365 2 sz=-1637021144'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.022387772595749644) IS FALSE)) IS TRUE); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X2021cfde)<=(0.11521550370755096))) NOT BETWEEN ((('8g\>yé') NOT BETWEEN (x'6877') AND (x''))) AND ((((1114336122)) BETWEEN ((0.38394887875785)) AND ((-719871629))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, 0.5167110691704285, x'')) NOT BETWEEN (('0.32625137653934544', '-1838347797', 0.8471249256072855)) AND ((NULL, NULL, NULL))) IN (((((((((((((((((x'')AND(0.8669480507736964)))OR(NULL)))OR(NULL)))OR('521104080')))OR('')))OR(x'e889')))AND(NULL)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(((695588794) ISNULL))))OR(-2.095061985E9)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.39455054335830464; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', '6 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i41', '-1998070489 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' sz=923660628 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', '0 sz=1398458073 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_t0_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '-92211636'  WHEN 0.18148024375373129 THEN 0.6776235449267318 ELSE NULL END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i23', '502530968'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'n9X'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CAST(NULL AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'bea8' END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1368464150 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-198224395 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((((((((0.774819313367219)OR(2.30683593E8)))OR(735014931)))AND(x'')))OR(NULL)), (-1.127830206E9 IN ())); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('e/', 0X2e23d9d, 0x7e5e2bf7), (2.30683593E8, NULL, x'ac43'), (NULL, NULL, 0xffffffffa9ab6c5e); -- 0ms;
INSERT OR FAIL INTO rt0(c3) VALUES ('A9_0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
UPDATE t0 SET (c1)=(''); -- 1ms;
UPDATE OR IGNORE rt0 SET c1=1672122418, c1='-487753618'; -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (''), ('56Ygv'), (-1.73792282E9); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (0.3398770779597522); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c5, c4, c2) VALUES ('XCTJ', '-994778106', '19355844', x''); -- 0ms;
DELETE FROM rt0 WHERE (NOT (rt0.c2)); -- 1ms;
INSERT OR FAIL INTO rt0(c4) VALUES ('d*'); -- 1ms;
ANALYZE i23; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1, c2, c3, c4, c5) VALUES ('', NULL, x'', '1631658246', 0.8128093725506179, NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (x'', '0.19931163392392215'); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES (NULL, NULL, 'pp', NULL, '1086477780', 0xffffffffbbeaa317), (x'', '1233634179', 0.32625137653934544, 0.6468452301956543, 0.13183099686448752, 0.6899280870906923), (NULL, '506375359', x'244b3094', NULL, '-198357054', 'TRUE'); -- 0ms;
INSERT OR REPLACE INTO t0(c2) VALUES (0Xfffffffffa6aad5c); -- 0ms;
INSERT OR IGNORE INTO rt0(c5, c4) VALUES ('iBDjHZ8\rH', '76736142'); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(x'') WHERE (((((t0.c1))>((t0.c1)))) BETWEEN (CAST(t0.c0 AS REAL)) AND (((t0.c1)=(t0.c0)))); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('521104080', x'', NULL); -- 1ms;
ANALYZE i41; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(0.9746114018689284); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('24283319'), (NULL), ('ä¼eYL9vä±,a'), (''), ('-1842506141'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES ('1354074769', 0.2843259775819935), (x'', x''), (x'ed22f022', x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'', x'74b77757', x'efd1', 0.6658694429688724, 1.170066475E9); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((((('-956389064')AND(rt0.c4)))AND(t0.c2)))*(((rt0.c1) NOT NULL))) WHERE ((t0.c1 IN ((((rt0.c5))=((t0.c1))), (((rt0.c2, rt0.c5, rt0.c3)) BETWEEN ((t0.c0, rt0.c1, rt0.c2)) AND ((-1.092322671E9, t0.c2, t0.c1)))))) ORDER BY (((rt0.c2) IS FALSE) IN (CAST(t0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ((((rt0.c5))==((t0.c1))), (((rt0.c2, rt0.c5, rt0.c3)) BETWEEN ((t0.c0, rt0.c1, rt0.c2)) AND ((-1.092322671E9, t0.c2, t0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((('-956389064')AND(rt0.c4)))AND(t0.c2)))*(((rt0.c1) NOT NULL))) ORDER BY (((rt0.c2) IS FALSE) IN (CAST(t0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((((('-956389064')AND(rt0.c4)))AND(t0.c2)))*(((rt0.c1) NOT NULL))) WHERE ((t0.c1 IN ((((rt0.c5))=((t0.c1))), (((rt0.c2, rt0.c5, rt0.c3)) BETWEEN ((t0.c0, rt0.c1, rt0.c2)) AND ((-1.092322671E9, t0.c2, t0.c1)))))) ORDER BY (((rt0.c2) IS FALSE) IN (CAST(t0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ((((rt0.c5))==((t0.c1))), (((rt0.c2, rt0.c5, rt0.c3)) BETWEEN ((t0.c0, rt0.c1, rt0.c2)) AND ((-1.092322671E9, t0.c2, t0.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((('-956389064')AND(rt0.c4)))AND(t0.c2)))*(((rt0.c1) NOT NULL))) ORDER BY (((rt0.c2) IS FALSE) IN (CAST(t0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((((('-956389064')AND(rt0.c4)))AND(t0.c2)))*(((rt0.c1) NOT NULL))) WHERE ((t0.c1 IN ((((rt0.c5))=((t0.c1))), (((rt0.c2, rt0.c5, rt0.c3)) BETWEEN ((t0.c0, rt0.c1, rt0.c2)) AND ((-1.092322671E9, t0.c2, t0.c1)))))) ORDER BY (((rt0.c2) IS FALSE) IN (CAST(t0.c1 AS REAL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((('', t0.c1, rt0.c2)) BETWEEN ((rt0.c4, t0.c1, rt0.c4)) AND ((t0.c1, rt0.c3, x''))) IN (((rt0.c2) ISNULL), ((rt0.c5) NOTNULL))) WHERE (CAST(((9.84448165E8) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((9.84448165E8) IS FALSE) AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((('', t0.c1, rt0.c2)) BETWEEN ((rt0.c4, t0.c1, rt0.c4)) AND ((t0.c1, rt0.c3, x''))) IN (((rt0.c2) ISNULL), ((rt0.c5) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((('', t0.c1, rt0.c2)) BETWEEN ((rt0.c4, t0.c1, rt0.c4)) AND ((t0.c1, rt0.c3, x''))) IN (((rt0.c2) ISNULL), ((rt0.c5) NOTNULL))) WHERE (CAST(((9.84448165E8) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((9.84448165E8) IS FALSE) AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((('', t0.c1, rt0.c2)) BETWEEN ((rt0.c4, t0.c1, rt0.c4)) AND ((t0.c1, rt0.c3, x''))) IN (((rt0.c2) ISNULL), ((rt0.c5) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((('', t0.c1, rt0.c2)) BETWEEN ((rt0.c4, t0.c1, rt0.c4)) AND ((t0.c1, rt0.c3, x''))) IN (((rt0.c2) ISNULL), ((rt0.c5) NOTNULL))) WHERE (CAST(((9.84448165E8) IS FALSE) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))>=(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c4, t0.c1, rt0.c3))>((rt0.c3, t0.c1, rt0.c5)))))>((((t0.c0) BETWEEN (rt0.c5) AND (rt0.c0)))))) ORDER BY ((((0.12857788618657173) NOT BETWEEN (t0.c0) AND (t0.c0)))<<(rt0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4, t0.c1, rt0.c3))>((rt0.c3, t0.c1, rt0.c5)))))>((((t0.c0) BETWEEN (rt0.c5) AND (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((0.12857788618657173) NOT BETWEEN (t0.c0) AND (t0.c0)))<<(rt0.c4))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c4, t0.c1, rt0.c3))>((rt0.c3, t0.c1, rt0.c5)))))>((((t0.c0) BETWEEN (rt0.c5) AND (rt0.c0)))))) ORDER BY ((((0.12857788618657173) NOT BETWEEN (t0.c0) AND (t0.c0)))<<(rt0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4, t0.c1, rt0.c3))>((rt0.c3, t0.c1, rt0.c5)))))>((((t0.c0) BETWEEN (rt0.c5) AND (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((0.12857788618657173) NOT BETWEEN (t0.c0) AND (t0.c0)))<<(rt0.c4))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c4, t0.c1, rt0.c3))>((rt0.c3, t0.c1, rt0.c5)))))>((((t0.c0) BETWEEN (rt0.c5) AND (rt0.c0)))))) ORDER BY ((((0.12857788618657173) NOT BETWEEN (t0.c0) AND (t0.c0)))<<(rt0.c4))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (-1676708500 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((-1676708500 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (-1676708500 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((-1676708500 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (-1676708500 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c5)<>(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)!=(rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c5)<>(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)!=(rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c5)<>(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c1) ORDER BY (((((rt0.c0)) BETWEEN ((t0.c2)) AND ((rt0.c1))))<>(CAST(t0.c0 AS REAL))), CAST(t0.c2 COLLATE BINARY AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0)) BETWEEN ((t0.c2)) AND ((rt0.c1))))!=(CAST(t0.c0 AS REAL))), CAST(t0.c2 COLLATE BINARY AS REAL) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c1) ORDER BY (((((rt0.c0)) BETWEEN ((t0.c2)) AND ((rt0.c1))))<>(CAST(t0.c0 AS REAL))), CAST(t0.c2 COLLATE BINARY AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0)) BETWEEN ((t0.c2)) AND ((rt0.c1))))!=(CAST(t0.c0 AS REAL))), CAST(t0.c2 COLLATE BINARY AS REAL) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c1) ORDER BY (((((rt0.c0)) BETWEEN ((t0.c2)) AND ((rt0.c1))))<>(CAST(t0.c0 AS REAL))), CAST(t0.c2 COLLATE BINARY AS REAL) DESC;
SELECT ALL * FROM rt0, t0 WHERE (NULL) ORDER BY (- (((rt0.c5) NOT BETWEEN (t0.c1) AND (t0.c1)))) ASC, CASE WHEN TRIM(DISTINCT rt0.c4) THEN x'' END DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (((rt0.c5) NOT BETWEEN (t0.c1) AND (t0.c1)))) ASC, CASE WHEN TRIM(DISTINCT rt0.c4) THEN x'' END DESC);
SELECT ALL * FROM rt0, t0 WHERE (NULL) ORDER BY (- (((rt0.c5) NOT BETWEEN (t0.c1) AND (t0.c1)))) ASC, CASE WHEN TRIM(DISTINCT rt0.c4) THEN x'' END DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (((rt0.c5) NOT BETWEEN (t0.c1) AND (t0.c1)))) ASC, CASE WHEN TRIM(DISTINCT rt0.c4) THEN x'' END DESC);
SELECT ALL * FROM rt0, t0 WHERE (NULL) ORDER BY (- (((rt0.c5) NOT BETWEEN (t0.c1) AND (t0.c1)))) ASC, CASE WHEN TRIM(DISTINCT rt0.c4) THEN x'' END DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT t0.c2)) ORDER BY ((TYPEOF(DISTINCT t0.c0)) NOT BETWEEN ((+ (NULL))) AND (((t0.c1) NOT BETWEEN ('-1916492809') AND (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT t0.c2)) IS TRUE)  as count FROM t0 ORDER BY ((TYPEOF(DISTINCT t0.c0)) NOT BETWEEN ((+ (NULL))) AND (((t0.c1) NOT BETWEEN ('-1916492809') AND (t0.c1)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT t0.c2)) ORDER BY ((TYPEOF(DISTINCT t0.c0)) NOT BETWEEN ((+ (NULL))) AND (((t0.c1) NOT BETWEEN ('-1916492809') AND (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT t0.c2)) IS TRUE)  as count FROM t0 ORDER BY ((TYPEOF(DISTINCT t0.c0)) NOT BETWEEN ((+ (NULL))) AND (((t0.c1) NOT BETWEEN ('-1916492809') AND (t0.c1)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT t0.c2)) ORDER BY ((TYPEOF(DISTINCT t0.c0)) NOT BETWEEN ((+ (NULL))) AND (((t0.c1) NOT BETWEEN ('-1916492809') AND (t0.c1)))) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((- (0xffffffff9d94b176)))>(((((t0.c0)OR(rt0.c1)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((- (0xffffffff9d94b176)))>(((((t0.c0)OR(rt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((- (0xffffffff9d94b176)))>(((((t0.c0)OR(rt0.c1)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((- (0xffffffff9d94b176)))>(((((t0.c0)OR(rt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((- (0xffffffff9d94b176)))>(((((t0.c0)OR(rt0.c1)))OR(rt0.c4)))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (t0.c2)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END AS REAL));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1))>=((((rt0.c2)%(t0.c0))))) WHERE (((DATE(rt0.c3, rt0.c1, rt0.c4))<=(((rt0.c2)>(rt0.c5))))) ORDER BY (t0.c1 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((DATE(rt0.c3, rt0.c1, rt0.c4))<=(((rt0.c2)>(rt0.c5))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1))>=((((rt0.c2)%(t0.c0))))) ORDER BY (t0.c1 IN ()) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1))>=((((rt0.c2)%(t0.c0))))) WHERE (((DATE(rt0.c3, rt0.c1, rt0.c4))<=(((rt0.c2)>(rt0.c5))))) ORDER BY (t0.c1 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((DATE(rt0.c3, rt0.c1, rt0.c4))<=(((rt0.c2)>(rt0.c5))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1))>=((((rt0.c2)%(t0.c0))))) ORDER BY (t0.c1 IN ()) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1))>=((((rt0.c2)%(t0.c0))))) WHERE (((DATE(rt0.c3, rt0.c1, rt0.c4))<=(((rt0.c2)>(rt0.c5))))) ORDER BY (t0.c1 IN ()) COLLATE RTRIM DESC;
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (t0.c0))) AND (((t0.c2)=(rt0.c2))))) ORDER BY ((x'' COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (t0.c0))) AND (((t0.c2)==(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((x'' COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (t0.c0))) AND (((t0.c2)=(rt0.c2))))) ORDER BY ((x'' COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (t0.c0))) AND (((t0.c2)==(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((x'' COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c2 AS TEXT)) BETWEEN ((+ (t0.c0))) AND (((t0.c2)=(rt0.c2))))) ORDER BY ((x'' COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4)AND(rt0.c2)), ((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))>=((((rt0.c5) IS FALSE), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), CAST(NULL AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)AND(rt0.c2)), ((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))>=((((rt0.c5) IS FALSE), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), CAST(NULL AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4)AND(rt0.c2)), ((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))>=((((rt0.c5) IS FALSE), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), CAST(NULL AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)AND(rt0.c2)), ((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))>=((((rt0.c5) IS FALSE), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), CAST(NULL AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4)AND(rt0.c2)), ((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))>=((((rt0.c5) IS FALSE), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), CAST(NULL AS INTEGER)))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c5) IS FALSE) IN (CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c3))<((t0.c2)))))) ORDER BY '-919407349';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5) IS FALSE) IN (CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c3))<((t0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY '-919407349');
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c5) IS FALSE) IN (CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c3))<((t0.c2)))))) ORDER BY '-919407349';
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5) IS FALSE) IN (CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c3))<((t0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY '-919407349');
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c5) IS FALSE) IN (CASE WHEN rt0.c2 THEN rt0.c0 END, (((rt0.c3))<((t0.c2)))))) ORDER BY '-919407349';
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1))<((t0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1))<((t0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1))<((t0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1))<((t0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1))<((t0.c1))) COLLATE RTRIM);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((+ (rt0.c2 COLLATE BINARY))) ORDER BY IFNULL(DISTINCT CASE rt0.c5  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END, ((rt0.c0)GLOB(rt0.c4)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT CASE rt0.c5  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END, ((rt0.c0)GLOB(rt0.c4))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((+ (rt0.c2 COLLATE BINARY))) ORDER BY IFNULL(DISTINCT CASE rt0.c5  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END, ((rt0.c0)GLOB(rt0.c4)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT CASE rt0.c5  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END, ((rt0.c0)GLOB(rt0.c4))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((+ (rt0.c2 COLLATE BINARY))) ORDER BY IFNULL(DISTINCT CASE rt0.c5  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END, ((rt0.c0)GLOB(rt0.c4)));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (json_remove(((rt0.c0) NOTNULL), ((rt0.c3)AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((rt0.c0) NOTNULL), ((rt0.c3)AND(rt0.c4)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (json_remove(((rt0.c0) NOTNULL), ((rt0.c3)AND(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((rt0.c0) NOTNULL), ((rt0.c3)AND(rt0.c4)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND (((- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND (((- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND (((- (rt0.c1))))));
SELECT ALL * FROM t0 WHERE ((+ (CAST(t0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (CAST(t0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (CAST(t0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE t0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END)&(CASE WHEN rt0.c2 THEN rt0.c5 ELSE t0.c0 END))) ORDER BY CAST(((((((((0X0)OR(rt0.c0)))AND(NULL)))AND(rt0.c4)))OR(t0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END)&(CASE WHEN rt0.c2 THEN rt0.c5 ELSE t0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((((((((0x0)OR(rt0.c0)))AND(NULL)))AND(rt0.c4)))OR(t0.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE t0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END)&(CASE WHEN rt0.c2 THEN rt0.c5 ELSE t0.c0 END))) ORDER BY CAST(((((((((0X0)OR(rt0.c0)))AND(NULL)))AND(rt0.c4)))OR(t0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END)&(CASE WHEN rt0.c2 THEN rt0.c5 ELSE t0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((((((((0x0)OR(rt0.c0)))AND(NULL)))AND(rt0.c4)))OR(t0.c1)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE t0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END)&(CASE WHEN rt0.c2 THEN rt0.c5 ELSE t0.c0 END))) ORDER BY CAST(((((((((0X0)OR(rt0.c0)))AND(NULL)))AND(rt0.c4)))OR(t0.c1)) AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c4 ELSE t0.c1 END)OR(((((t0.c0)AND(rt0.c2)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c4 ELSE t0.c1 END)OR(((((t0.c0)AND(rt0.c2)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c4 ELSE t0.c1 END)OR(((((t0.c0)AND(rt0.c2)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c4 ELSE t0.c1 END)OR(((((t0.c0)AND(rt0.c2)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c4 ELSE t0.c1 END)OR(((((t0.c0)AND(rt0.c2)))AND(t0.c2)))));
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c5)OR(rt0.c2)) WHEN '' THEN rt0.c4 COLLATE NOCASE WHEN ABS(rt0.c0) THEN ((rt0.c4) IS TRUE) END) ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (t0.c2)))) AND ((((t0.c2)<>(rt0.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c5)OR(rt0.c2)) WHEN '' THEN rt0.c4 COLLATE NOCASE WHEN ABS(rt0.c0) THEN ((rt0.c4) IS TRUE) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (t0.c2)))) AND ((((t0.c2)<>(rt0.c4)))))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c5)OR(rt0.c2)) WHEN '' THEN rt0.c4 COLLATE NOCASE WHEN ABS(rt0.c0) THEN ((rt0.c4) IS TRUE) END) ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (t0.c2)))) AND ((((t0.c2)<>(rt0.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c5)OR(rt0.c2)) WHEN '' THEN rt0.c4 COLLATE NOCASE WHEN ABS(rt0.c0) THEN ((rt0.c4) IS TRUE) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (t0.c2)))) AND ((((t0.c2)<>(rt0.c4)))))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c5)OR(rt0.c2)) WHEN '' THEN rt0.c4 COLLATE NOCASE WHEN ABS(rt0.c0) THEN ((rt0.c4) IS TRUE) END) ORDER BY (((t0.c2)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (t0.c2)))) AND ((((t0.c2)<>(rt0.c4)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)|(((rt0.c2) IS FALSE)))) ORDER BY ((((rt0.c1)<<(rt0.c4)))<=(((rt0.c3)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)|(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<<(rt0.c4)))<=(((rt0.c3)>(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)|(((rt0.c2) IS FALSE)))) ORDER BY ((((rt0.c1)<<(rt0.c4)))<=(((rt0.c3)>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)|(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<<(rt0.c4)))<=(((rt0.c3)>(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)|(((rt0.c2) IS FALSE)))) ORDER BY ((((rt0.c1)<<(rt0.c4)))<=(((rt0.c3)>(rt0.c1))));
SELECT ALL * FROM rt0 INNER JOIN t0 ON NULL WHERE (((rt0.c4)%(((rt0.c2)AND('287684667')))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)%(((rt0.c2)AND('287684667'))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON NULL);
SELECT ALL * FROM rt0 INNER JOIN t0 ON NULL WHERE (((rt0.c4)%(((rt0.c2)AND('287684667')))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)%(((rt0.c2)AND('287684667'))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON NULL);
SELECT ALL * FROM rt0 INNER JOIN t0 ON NULL WHERE (((rt0.c4)%(((rt0.c2)AND('287684667')))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c3 IN ())))) ORDER BY 'hq>' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY 'hq>' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c3 IN ())))) ORDER BY 'hq>' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY 'hq>' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c3 IN ())))) ORDER BY 'hq>' DESC  NULLS LAST;
SELECT * FROM t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS BLOB) WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c5))) NOT BETWEEN (CASE t0.c0  WHEN t0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN t0.c2 ELSE rt0.c4 END) AND (((rt0.c4) IS FALSE)))) ORDER BY IFNULL(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)), (((rt0.c4)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c5))) NOT BETWEEN (CASE t0.c0  WHEN t0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN t0.c2 ELSE rt0.c4 END) AND (((rt0.c4) IS FALSE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS BLOB) ORDER BY IFNULL(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)), (((rt0.c4)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC);
SELECT * FROM t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS BLOB) WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c5))) NOT BETWEEN (CASE t0.c0  WHEN t0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN t0.c2 ELSE rt0.c4 END) AND (((rt0.c4) IS FALSE)))) ORDER BY IFNULL(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)), (((rt0.c4)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c5))) NOT BETWEEN (CASE t0.c0  WHEN t0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN t0.c2 ELSE rt0.c4 END) AND (((rt0.c4) IS FALSE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS BLOB) ORDER BY IFNULL(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)), (((rt0.c4)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC);
SELECT * FROM t0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS TEXT) AS BLOB) WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c5))) NOT BETWEEN (CASE t0.c0  WHEN t0.c1 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN t0.c2 ELSE rt0.c4 END) AND (((rt0.c4) IS FALSE)))) ORDER BY IFNULL(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)), (((rt0.c4)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c1)||(rt0.c4))))<((((rt0.c3)>=(rt0.c0)))))) ORDER BY (SQLITE_COMPILEOPTION_USED(rt0.c5) IN ()) ASC  NULLS LAST, (- (rt0.c3)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)||(rt0.c4))))<((((rt0.c3)>=(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (SQLITE_COMPILEOPTION_USED(rt0.c5) IN ()) ASC  NULLS LAST, (- (rt0.c3)) COLLATE NOCASE DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c1)||(rt0.c4))))<((((rt0.c3)>=(rt0.c0)))))) ORDER BY (SQLITE_COMPILEOPTION_USED(rt0.c5) IN ()) ASC  NULLS LAST, (- (rt0.c3)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)||(rt0.c4))))<((((rt0.c3)>=(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (SQLITE_COMPILEOPTION_USED(rt0.c5) IN ()) ASC  NULLS LAST, (- (rt0.c3)) COLLATE NOCASE DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c1)||(rt0.c4))))<((((rt0.c3)>=(rt0.c0)))))) ORDER BY (SQLITE_COMPILEOPTION_USED(rt0.c5) IN ()) ASC  NULLS LAST, (- (rt0.c3)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END AS REAL));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN DATE(rt0.c2, t0.c0, '1625346728', t0.c0, t0.c1) THEN ((t0.c0)<(rt0.c3)) WHEN ((t0.c1) NOT NULL) THEN (t0.c1 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND ('1602268014')) THEN ((rt0.c5)OR(rt0.c5)) ELSE t0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN DATE(rt0.c2, t0.c0, '1625346728', t0.c0, t0.c1) THEN ((t0.c0)<(rt0.c3)) WHEN ((t0.c1) NOT NULL) THEN (t0.c1 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND ('1602268014')) THEN ((rt0.c5)OR(rt0.c5)) ELSE t0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN DATE(rt0.c2, t0.c0, '1625346728', t0.c0, t0.c1) THEN ((t0.c0)<(rt0.c3)) WHEN ((t0.c1) NOT NULL) THEN (t0.c1 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND ('1602268014')) THEN ((rt0.c5)OR(rt0.c5)) ELSE t0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN DATE(rt0.c2, t0.c0, '1625346728', t0.c0, t0.c1) THEN ((t0.c0)<(rt0.c3)) WHEN ((t0.c1) NOT NULL) THEN (t0.c1 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND ('1602268014')) THEN ((rt0.c5)OR(rt0.c5)) ELSE t0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN DATE(rt0.c2, t0.c0, '1625346728', t0.c0, t0.c1) THEN ((t0.c0)<(rt0.c3)) WHEN ((t0.c1) NOT NULL) THEN (t0.c1 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND ('1602268014')) THEN ((rt0.c5)OR(rt0.c5)) ELSE t0.c2 COLLATE RTRIM END);
SELECT * FROM t0 WHERE (((LIKELY(t0.c1))>(((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c1))>(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((LIKELY(t0.c1))>(((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c1))>(((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((LIKELY(t0.c1))>(((t0.c2) NOT NULL))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c5)))AND((((rt0.c2))>=((rt0.c2))))))AND(0.9548965597948538)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c5)))AND((((rt0.c2))>=((rt0.c2))))))AND(0.9548965597948538))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c5)))AND((((rt0.c2))>=((rt0.c2))))))AND(0.9548965597948538)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c5)))AND((((rt0.c2))>=((rt0.c2))))))AND(0.9548965597948538))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c5)))AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c5)))AND((((rt0.c2))>=((rt0.c2))))))AND(0.9548965597948538)));
SELECT ALL * FROM rt0, t0 WHERE (((CASE WHEN t0.c1 THEN rt0.c5 ELSE rt0.c3 END) NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) AND ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN rt0.c5 ELSE rt0.c3 END) NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) AND ((~ (t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CASE WHEN t0.c1 THEN rt0.c5 ELSE rt0.c3 END) NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) AND ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN rt0.c5 ELSE rt0.c3 END) NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) AND ((~ (t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((CASE WHEN t0.c1 THEN rt0.c5 ELSE rt0.c3 END) NOT BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) AND ((~ (t0.c0)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0);
SELECT * FROM t0 CROSS JOIN rt0 ON (((x'b80a') BETWEEN (t0.c1) AND (rt0.c5)) IN (NULL)) WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((x'b80a') BETWEEN (t0.c1) AND (rt0.c5)) IN (NULL)));
SELECT * FROM t0 CROSS JOIN rt0 ON (((x'b80a') BETWEEN (t0.c1) AND (rt0.c5)) IN (NULL)) WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((x'b80a') BETWEEN (t0.c1) AND (rt0.c5)) IN (NULL)));
SELECT * FROM t0 CROSS JOIN rt0 ON (((x'b80a') BETWEEN (t0.c1) AND (rt0.c5)) IN (NULL)) WHERE (rt0.c5);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UPPER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UPPER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UPPER(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (rt0.c3))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED WHERE (((((']fb\n') BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (((((0.05140332487267907)OR(rt0.c5)))OR(x''))) AND ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((']fb\n') BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (((((0.05140332487267907)OR(rt0.c5)))OR(x''))) AND ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED WHERE (((((']fb\n') BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (((((0.05140332487267907)OR(rt0.c5)))OR(x''))) AND ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((']fb\n') BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (((((0.05140332487267907)OR(rt0.c5)))OR(x''))) AND ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED WHERE (((((']fb\n') BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (((((0.05140332487267907)OR(rt0.c5)))OR(x''))) AND ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))));
SELECT COUNT(*) FROM t0, rt0 WHERE (TIME(((x'')GLOB(rt0.c0)), ((((t0.c0)OR(rt0.c3)))OR(rt0.c4)), 0Xffffffffc932f50b));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((x'')GLOB(rt0.c0)), ((((t0.c0)OR(rt0.c3)))OR(rt0.c4)), 0Xffffffffc932f50b)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (TIME(((x'')GLOB(rt0.c0)), ((((t0.c0)OR(rt0.c3)))OR(rt0.c4)), 0Xffffffffc932f50b));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((x'')GLOB(rt0.c0)), ((((t0.c0)OR(rt0.c3)))OR(rt0.c4)), 0Xffffffffc932f50b)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (TIME(((x'')GLOB(rt0.c0)), ((((t0.c0)OR(rt0.c3)))OR(rt0.c4)), 0Xffffffffc932f50b));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)<(((0.17595400222153734)>(rt0.c0))))) ORDER BY (LOWER(DISTINCT rt0.c5) IN (((rt0.c0)&(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)<(((0.17595400222153734)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (LOWER(DISTINCT rt0.c5) IN (((rt0.c0)&(rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)<(((0.17595400222153734)>(rt0.c0))))) ORDER BY (LOWER(DISTINCT rt0.c5) IN (((rt0.c0)&(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)<(((0.17595400222153734)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (LOWER(DISTINCT rt0.c5) IN (((rt0.c0)&(rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)<(((0.17595400222153734)>(rt0.c0))))) ORDER BY (LOWER(DISTINCT rt0.c5) IN (((rt0.c0)&(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((((((-419133543, t0.c2, rt0.c0))>=((t0.c0, rt0.c4, rt0.c0)))) NOTNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((-419133543, t0.c2, rt0.c0))>=((t0.c0, rt0.c4, rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC);
SELECT ALL * FROM rt0, t0 WHERE ((((((-419133543, t0.c2, rt0.c0))>=((t0.c0, rt0.c4, rt0.c0)))) NOTNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((-419133543, t0.c2, rt0.c0))>=((t0.c0, rt0.c4, rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC);
SELECT ALL * FROM rt0, t0 WHERE ((((((-419133543, t0.c2, rt0.c0))>=((t0.c0, rt0.c4, rt0.c0)))) NOTNULL)) ORDER BY NULL DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c4)OR(rt0.c0)))OR('á½F&'))) BETWEEN ((('F(KY ~j')||(t0.c2))) AND (((rt0.c2) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c0)))OR('á½F&'))) BETWEEN ((('F(KY ~j')||(t0.c2))) AND (((rt0.c2) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c4)OR(rt0.c0)))OR('á½F&'))) BETWEEN ((('F(KY ~j')||(t0.c2))) AND (((rt0.c2) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)OR(rt0.c0)))OR('á½F&'))) BETWEEN ((('F(KY ~j')||(t0.c2))) AND (((rt0.c2) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c4)OR(rt0.c0)))OR('á½F&'))) BETWEEN ((('F(KY ~j')||(t0.c2))) AND (((rt0.c2) BETWEEN (t0.c2) AND (t0.c1)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (IFNULL(DISTINCT rt0.c0, rt0.c1)) AND (9.84448165E8)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (IFNULL(DISTINCT rt0.c0, rt0.c1)) AND (9.84448165E8))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (IFNULL(DISTINCT rt0.c0, rt0.c1)) AND (9.84448165E8)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (IFNULL(DISTINCT rt0.c0, rt0.c1)) AND (9.84448165E8))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (IFNULL(DISTINCT rt0.c0, rt0.c1)) AND (9.84448165E8)));
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)AND(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)AND(t0.c1))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)AND(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)AND(t0.c1))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)AND(t0.c1)));
SELECT ALL * FROM t0 WHERE (((t0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) AND (LIKELY(rt0.c1)))) ORDER BY NULLIF(DISTINCT ((rt0.c0)==(rt0.c5)), rt0.c4 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) AND (LIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT ((rt0.c0)=(rt0.c5)), rt0.c4 COLLATE RTRIM));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) AND (LIKELY(rt0.c1)))) ORDER BY NULLIF(DISTINCT ((rt0.c0)==(rt0.c5)), rt0.c4 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) AND (LIKELY(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT ((rt0.c0)=(rt0.c5)), rt0.c4 COLLATE RTRIM));
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE NULL  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END) AND (LIKELY(rt0.c1)))) ORDER BY NULLIF(DISTINCT ((rt0.c0)==(rt0.c5)), rt0.c4 COLLATE RTRIM);
SELECT * FROM t0, rt0 WHERE (((t0.c1) NOT BETWEEN (((rt0.c1) BETWEEN ('') AND (t0.c2))) AND ((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOT BETWEEN (((rt0.c1) BETWEEN ('') AND (t0.c2))) AND ((+ (t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c1) NOT BETWEEN (((rt0.c1) BETWEEN ('') AND (t0.c2))) AND ((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOT BETWEEN (((rt0.c1) BETWEEN ('') AND (t0.c2))) AND ((+ (t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c1) NOT BETWEEN (((rt0.c1) BETWEEN ('') AND (t0.c2))) AND ((+ (t0.c2)))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS TEXT)) NOT BETWEEN (((t0.c1)|(NULL))) AND ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT)) NOT BETWEEN (((t0.c1)|(NULL))) AND ((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS TEXT)) NOT BETWEEN (((t0.c1)|(NULL))) AND ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT)) NOT BETWEEN (((t0.c1)|(NULL))) AND ((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS TEXT)) NOT BETWEEN (((t0.c1)|(NULL))) AND ((+ (t0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE (((0.39849916666272944 COLLATE BINARY)IS NOT((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.39849916666272944 COLLATE BINARY)IS NOT((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((0.39849916666272944 COLLATE BINARY)IS NOT((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((0.39849916666272944 COLLATE BINARY)IS NOT((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((0.39849916666272944 COLLATE BINARY)IS NOT((rt0.c2 IN ()))));
SELECT ALL * FROM t0 WHERE (CAST(0.275833944371357 AS REAL)) ORDER BY ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN x'' END)>(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.275833944371357 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN x'' END)>(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(0.275833944371357 AS REAL)) ORDER BY ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN x'' END)>(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.275833944371357 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN x'' END)>(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(0.275833944371357 AS REAL)) ORDER BY ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN x'' END)>(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(highlight(t0.c0, t0.c1, t0.c2, t0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(highlight(t0.c0, t0.c1, t0.c2, t0.c0) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(highlight(t0.c0, t0.c1, t0.c2, t0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(highlight(t0.c0, t0.c1, t0.c2, t0.c0) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c4, rt0.c5)) AND ((rt0.c1, rt0.c5, rt0.c3))))OR((~ (rt0.c1)))))AND(rt0.c1))) ORDER BY UNLIKELY(rt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c4, rt0.c5)) AND ((rt0.c1, rt0.c5, rt0.c3))))OR((~ (rt0.c1)))))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(rt0.c0) ASC);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c4, rt0.c5)) AND ((rt0.c1, rt0.c5, rt0.c3))))OR((~ (rt0.c1)))))AND(rt0.c1))) ORDER BY UNLIKELY(rt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c4, rt0.c5)) AND ((rt0.c1, rt0.c5, rt0.c3))))OR((~ (rt0.c1)))))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(rt0.c0) ASC);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c5, rt0.c4, rt0.c5)) AND ((rt0.c1, rt0.c5, rt0.c3))))OR((~ (rt0.c1)))))AND(rt0.c1))) ORDER BY UNLIKELY(rt0.c0) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c1 END)<(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c1 END)<(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c1 END)<(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c1 END)<(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c1 END)<(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END)));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE)) IS TRUE) WHERE ((NOT (((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE)) IS TRUE));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE)) IS TRUE) WHERE ((NOT (((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3) ISNULL)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE)) IS TRUE));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) IS FALSE)) IS TRUE) WHERE ((NOT (((rt0.c3) ISNULL))));
SELECT * FROM t0, rt0 WHERE ((CASE WHEN t0.c2 THEN rt0.c1 WHEN rt0.c5 THEN 1526015055 WHEN t0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN t0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN rt0.c1 WHEN rt0.c5 THEN 1526015055 WHEN t0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN t0.c2 END IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((CASE WHEN t0.c2 THEN rt0.c1 WHEN rt0.c5 THEN 1526015055 WHEN t0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN t0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN rt0.c1 WHEN rt0.c5 THEN 1526015055 WHEN t0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN t0.c2 END IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((CASE WHEN t0.c2 THEN rt0.c1 WHEN rt0.c5 THEN 1526015055 WHEN t0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN t0.c2 END IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((~ (-1358295447)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (-1358295447))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((~ (-1358295447)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (-1358295447))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((~ (-1358295447)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND((((rt0.c0))<((t0.c0))))))AND(rt0.c3)))OR(((rt0.c2) NOTNULL))))OR(CAST(rt0.c5 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND((((rt0.c0))<((t0.c0))))))AND(rt0.c3)))OR(((rt0.c2) NOTNULL))))OR(CAST(rt0.c5 AS TEXT)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND((((rt0.c0))<((t0.c0))))))AND(rt0.c3)))OR(((rt0.c2) NOTNULL))))OR(CAST(rt0.c5 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND((((rt0.c0))<((t0.c0))))))AND(rt0.c3)))OR(((rt0.c2) NOTNULL))))OR(CAST(rt0.c5 AS TEXT)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))AND((((rt0.c0))<((t0.c0))))))AND(rt0.c3)))OR(((rt0.c2) NOTNULL))))OR(CAST(rt0.c5 AS TEXT))));
SELECT COUNT(*) FROM t0 WHERE ((NOT (x'baa6'))) ORDER BY CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN (+ (t0.c2)) END DESC, t0.c0 DESC  NULLS FIRST, 0.47513602765789653  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x'baa6'))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN (+ (t0.c2)) END DESC, t0.c0 DESC  NULLS FIRST, 0.47513602765789653  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (x'baa6'))) ORDER BY CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN (+ (t0.c2)) END DESC, t0.c0 DESC  NULLS FIRST, 0.47513602765789653  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x'baa6'))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN (+ (t0.c2)) END DESC, t0.c0 DESC  NULLS FIRST, 0.47513602765789653  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (x'baa6'))) ORDER BY CASE WHEN ((t0.c2)IS NOT(t0.c2)) THEN (+ (t0.c2)) END DESC, t0.c0 DESC  NULLS FIRST, 0.47513602765789653  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)||(rt0.c2))) NOT BETWEEN (NULL) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)||(rt0.c2))) NOT BETWEEN (NULL) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)||(rt0.c2))) NOT BETWEEN (NULL) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)||(rt0.c2))) NOT BETWEEN (NULL) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c4)||(rt0.c2))) NOT BETWEEN (NULL) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE x'5faf42cd'  WHEN (- (rt0.c5)) THEN ((rt0.c4)<(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'5faf42cd'  WHEN (- (rt0.c5)) THEN ((rt0.c4)<(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE x'5faf42cd'  WHEN (- (rt0.c5)) THEN ((rt0.c4)<(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'5faf42cd'  WHEN (- (rt0.c5)) THEN ((rt0.c4)<(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE x'5faf42cd'  WHEN (- (rt0.c5)) THEN ((rt0.c4)<(rt0.c2)) END);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON rt0.c5 WHERE ((+ (CAST(t0.c1 AS INTEGER)))) ORDER BY (- (((((t0.c2)OR(rt0.c5)))AND(rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt0.c5 ORDER BY (- (((((t0.c2)OR(rt0.c5)))AND(rt0.c5)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON rt0.c5 WHERE ((+ (CAST(t0.c1 AS INTEGER)))) ORDER BY (- (((((t0.c2)OR(rt0.c5)))AND(rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt0.c5 ORDER BY (- (((((t0.c2)OR(rt0.c5)))AND(rt0.c5)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON rt0.c5 WHERE ((+ (CAST(t0.c1 AS INTEGER)))) ORDER BY (- (((((t0.c2)OR(rt0.c5)))AND(rt0.c5))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0X492e68e) AND (t0.c2))) ISNULL)) ORDER BY (((((((0.5659046502046563)OR(t0.c0)))OR('[Ø¥[now]'))))=((t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (0X492e68e) AND (t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((((((0.5659046502046563)OR(t0.c0)))OR('[Ø¥[now]'))))=((t0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0X492e68e) AND (t0.c2))) ISNULL)) ORDER BY (((((((0.5659046502046563)OR(t0.c0)))OR('[Ø¥[now]'))))=((t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (0X492e68e) AND (t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((((((0.5659046502046563)OR(t0.c0)))OR('[Ø¥[now]'))))=((t0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0X492e68e) AND (t0.c2))) ISNULL)) ORDER BY (((((((0.5659046502046563)OR(t0.c0)))OR('[Ø¥[now]'))))=((t0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE (ABS(t0.c2)) ORDER BY CASE t0.c2 COLLATE NOCASE  WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) END, ((CASE t0.c0  WHEN t0.c2 THEN 0x1f0f6ad0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)||(CAST(t0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(t0.c2)) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c2 COLLATE NOCASE  WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) END, ((CASE t0.c0  WHEN t0.c2 THEN 0X1f0f6ad0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)||(CAST(t0.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (ABS(t0.c2)) ORDER BY CASE t0.c2 COLLATE NOCASE  WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) END, ((CASE t0.c0  WHEN t0.c2 THEN 0x1f0f6ad0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)||(CAST(t0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(t0.c2)) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c2 COLLATE NOCASE  WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) END, ((CASE t0.c0  WHEN t0.c2 THEN 0X1f0f6ad0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)||(CAST(t0.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (ABS(t0.c2)) ORDER BY CASE t0.c2 COLLATE NOCASE  WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) END, ((CASE t0.c0  WHEN t0.c2 THEN 0x1f0f6ad0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 END)||(CAST(t0.c1 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN '1391828569' THEN (('')IS(t0.c0)) ELSE ABS(t0.c2) END) ORDER BY ((((rt0.c0 COLLATE BINARY)OR(rt0.c3)))AND(1.811660407E9));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1391828569' THEN (('')IS(t0.c0)) ELSE ABS(t0.c2) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0 COLLATE BINARY)OR(rt0.c3)))AND(1.811660407E9)));
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN '1391828569' THEN (('')IS(t0.c0)) ELSE ABS(t0.c2) END) ORDER BY ((((rt0.c0 COLLATE BINARY)OR(rt0.c3)))AND(1.811660407E9));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1391828569' THEN (('')IS(t0.c0)) ELSE ABS(t0.c2) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0 COLLATE BINARY)OR(rt0.c3)))AND(1.811660407E9)));
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN '1391828569' THEN (('')IS(t0.c0)) ELSE ABS(t0.c2) END) ORDER BY ((((rt0.c0 COLLATE BINARY)OR(rt0.c3)))AND(1.811660407E9));
SELECT COUNT(*) FROM rt0 WHERE ((+ (((((((((rt0.c3)OR(0.11590358978952775)))AND(NULL)))OR(rt0.c4)))OR(rt0.c3))))) ORDER BY ((((rt0.c5)AND(0.9925415925030453)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, '-1396142538' ASC  NULLS LAST, CAST(((rt0.c1)*(rt0.c5)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c3)OR(0.11590358978952775)))AND(NULL)))OR(rt0.c4)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5)AND(0.9925415925030453)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, '-1396142538' ASC  NULLS LAST, CAST(((rt0.c1)*(rt0.c5)) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((((((((rt0.c3)OR(0.11590358978952775)))AND(NULL)))OR(rt0.c4)))OR(rt0.c3))))) ORDER BY ((((rt0.c5)AND(0.9925415925030453)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, '-1396142538' ASC  NULLS LAST, CAST(((rt0.c1)*(rt0.c5)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c3)OR(0.11590358978952775)))AND(NULL)))OR(rt0.c4)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5)AND(0.9925415925030453)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, '-1396142538' ASC  NULLS LAST, CAST(((rt0.c1)*(rt0.c5)) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((((((((rt0.c3)OR(0.11590358978952775)))AND(NULL)))OR(rt0.c4)))OR(rt0.c3))))) ORDER BY ((((rt0.c5)AND(0.9925415925030453)))AND(rt0.c2)) COLLATE RTRIM  NULLS FIRST, '-1396142538' ASC  NULLS LAST, CAST(((rt0.c1)*(rt0.c5)) AS TEXT) ASC;
SELECT COUNT(*) FROM rt0 WHERE (LOWER(DISTINCT (- ('îN'))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (- ('îN')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(DISTINCT (- ('îN'))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (- ('îN')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(DISTINCT (- ('îN'))));
SELECT * FROM t0 CROSS JOIN rt0 ON CASE '-815109159'  WHEN rt0.c5 THEN t0.c0 END COLLATE BINARY WHERE (((UPPER(t0.c1))+(x''))) ORDER BY HEX(rt0.c4)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t0.c1))+(x''))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE '-815109159'  WHEN rt0.c5 THEN t0.c0 END COLLATE BINARY ORDER BY HEX(rt0.c4)  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt0 ON CASE '-815109159'  WHEN rt0.c5 THEN t0.c0 END COLLATE BINARY WHERE (((UPPER(t0.c1))+(x''))) ORDER BY HEX(rt0.c4)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t0.c1))+(x''))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CASE '-815109159'  WHEN rt0.c5 THEN t0.c0 END COLLATE BINARY ORDER BY HEX(rt0.c4)  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt0 ON CASE '-815109159'  WHEN rt0.c5 THEN t0.c0 END COLLATE BINARY WHERE (((UPPER(t0.c1))+(x''))) ORDER BY HEX(rt0.c4)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT * FROM t0 WHERE (NULLIF(((t0.c1)>=(t0.c2)), t0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF(((t0.c1)>=(t0.c2)), t0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(((t0.c1)>=(t0.c2)), t0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF(((t0.c1)>=(t0.c2)), t0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(((t0.c1)>=(t0.c2)), t0.c2 COLLATE NOCASE));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (t0.c1);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (('á±§H', rt0.c1, t0.c1)) AND ((rt0.c4, rt0.c0, 0Xffffffffd17e94c7))) COLLATE RTRIM WHERE ((((rt0.c1 IN ())) NOT NULL)) ORDER BY CASE (+ (rt0.c1))  WHEN rt0.c4 THEN LOWER(DISTINCT rt0.c0) WHEN ((((x'')AND(rt0.c4)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) WHEN ((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)) THEN ((rt0.c4)<>(rt0.c3)) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (('á±§H', rt0.c1, t0.c1)) AND ((rt0.c4, rt0.c0, 0xffffffffd17e94c7))) COLLATE RTRIM ORDER BY CASE (+ (rt0.c1))  WHEN rt0.c4 THEN LOWER(DISTINCT rt0.c0) WHEN ((((x'')AND(rt0.c4)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) WHEN ((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)) THEN ((rt0.c4)<>(rt0.c3)) END);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (('á±§H', rt0.c1, t0.c1)) AND ((rt0.c4, rt0.c0, 0Xffffffffd17e94c7))) COLLATE RTRIM WHERE ((((rt0.c1 IN ())) NOT NULL)) ORDER BY CASE (+ (rt0.c1))  WHEN rt0.c4 THEN LOWER(DISTINCT rt0.c0) WHEN ((((x'')AND(rt0.c4)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) WHEN ((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)) THEN ((rt0.c4)<>(rt0.c3)) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (('á±§H', rt0.c1, t0.c1)) AND ((rt0.c4, rt0.c0, 0xffffffffd17e94c7))) COLLATE RTRIM ORDER BY CASE (+ (rt0.c1))  WHEN rt0.c4 THEN LOWER(DISTINCT rt0.c0) WHEN ((((x'')AND(rt0.c4)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) WHEN ((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)) THEN ((rt0.c4)<>(rt0.c3)) END);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (((t0.c1, rt0.c2, t0.c2)) NOT BETWEEN (('á±§H', rt0.c1, t0.c1)) AND ((rt0.c4, rt0.c0, 0Xffffffffd17e94c7))) COLLATE RTRIM WHERE ((((rt0.c1 IN ())) NOT NULL)) ORDER BY CASE (+ (rt0.c1))  WHEN rt0.c4 THEN LOWER(DISTINCT rt0.c0) WHEN ((((x'')AND(rt0.c4)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) WHEN ((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)) THEN ((rt0.c4)<>(rt0.c3)) END;
SELECT ALL * FROM t0, rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c5);
SELECT * FROM rt0, t0 WHERE (((SQLITE_COMPILEOPTION_USED('j)'))||(((rt0.c0) NOTNULL)))) ORDER BY (('-1127830206') IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED('j)'))||(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (('-1127830206') IS TRUE) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((SQLITE_COMPILEOPTION_USED('j)'))||(((rt0.c0) NOTNULL)))) ORDER BY (('-1127830206') IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED('j)'))||(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (('-1127830206') IS TRUE) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((SQLITE_COMPILEOPTION_USED('j)'))||(((rt0.c0) NOTNULL)))) ORDER BY (('-1127830206') IS TRUE) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CASE t0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 END THEN ('-649994702' IN ()) END) ORDER BY rt0.c3 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 END THEN ('-649994702' IN ()) END) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3 COLLATE RTRIM ASC);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CASE t0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 END THEN ('-649994702' IN ()) END) ORDER BY rt0.c3 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 END THEN ('-649994702' IN ()) END) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3 COLLATE RTRIM ASC);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CASE t0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c2 END THEN ('-649994702' IN ()) END) ORDER BY rt0.c3 COLLATE RTRIM ASC;
SELECT * FROM t0 WHERE (('0.2236720045663435' IN ()));
SELECT SUM(count) FROM (SELECT ((('0.2236720045663435' IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (('0.2236720045663435' IN ()));
SELECT SUM(count) FROM (SELECT ((('0.2236720045663435' IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (('0.2236720045663435' IN ()));
SELECT * FROM rt0 WHERE (HEX(DISTINCT rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (HEX(DISTINCT rt0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (HEX(DISTINCT rt0.c1) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 INDEXED BY i23 WHERE (CASE WHEN ((rt0.c3)%(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c5)))AND(rt0.c4)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN ((((rt0.c4)AND(rt0.c5)))AND(rt0.c2)) ELSE LIKELY(rt0.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)%(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c5)))AND(rt0.c4)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN ((((rt0.c4)AND(rt0.c5)))AND(rt0.c2)) ELSE LIKELY(rt0.c5) END) IS TRUE)  as count FROM rt0 INDEXED BY i23);
SELECT COUNT(*) FROM rt0 INDEXED BY i23 WHERE (CASE WHEN ((rt0.c3)%(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c5)))AND(rt0.c4)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN ((((rt0.c4)AND(rt0.c5)))AND(rt0.c2)) ELSE LIKELY(rt0.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)%(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c5)))AND(rt0.c4)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN CASE WHEN rt0.c4 THEN rt0.c3 END THEN ((((rt0.c4)AND(rt0.c5)))AND(rt0.c2)) ELSE LIKELY(rt0.c5) END) IS TRUE)  as count FROM rt0 INDEXED BY i23);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((t0.c1) BETWEEN (t0.c1) AND (rt0.c4))))==((COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c1)))) WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((t0.c1) BETWEEN (t0.c1) AND (rt0.c4))))==((COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((t0.c1) BETWEEN (t0.c1) AND (rt0.c4))))==((COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c1)))) WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((t0.c1) BETWEEN (t0.c1) AND (rt0.c4))))==((COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((t0.c1) BETWEEN (t0.c1) AND (rt0.c4))))==((COALESCE(rt0.c1, rt0.c0, rt0.c4, rt0.c1)))) WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE);
SELECT * FROM t0, rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (rt0.c5);
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c2 AS NUMERIC) THEN -858516727 ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c2 AS NUMERIC) THEN -858516727 ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c2 AS NUMERIC) THEN -858516727 ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c2 AS NUMERIC) THEN -858516727 ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c2 AS NUMERIC) THEN -858516727 ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)+(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)+(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)+(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)+(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)+(rt0.c1)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)LIKE(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)==(0.34849403582793037))))) ORDER BY (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))))AND(((((rt0.c1)OR(NULL)))OR(rt0.c0)))))OR(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)LIKE(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)=(0.34849403582793037))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))))AND(((((rt0.c1)OR(NULL)))OR(rt0.c0)))))OR(rt0.c1))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)LIKE(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)==(0.34849403582793037))))) ORDER BY (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))))AND(((((rt0.c1)OR(NULL)))OR(rt0.c0)))))OR(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)LIKE(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)=(0.34849403582793037))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))))AND(((((rt0.c1)OR(NULL)))OR(rt0.c0)))))OR(rt0.c1))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)LIKE(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c2)==(0.34849403582793037))))) ORDER BY (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))))AND(((((rt0.c1)OR(NULL)))OR(rt0.c0)))))OR(rt0.c1))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c3))|(NULL)));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c3))|(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c3))|(NULL)));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c3))|(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(rt0.c3))|(NULL)));
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((((((t0.c2)AND(t0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c0)))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c1 END)))AND(t0.c1 COLLATE NOCASE)))OR(0.09903807132734843)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c2)AND(t0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c0)))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c1 END)))AND(t0.c1 COLLATE NOCASE)))OR(0.09903807132734843))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((((((t0.c2)AND(t0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c0)))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c1 END)))AND(t0.c1 COLLATE NOCASE)))OR(0.09903807132734843)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c2)AND(t0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c0)))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c1 END)))AND(t0.c1 COLLATE NOCASE)))OR(0.09903807132734843))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((((((t0.c2)AND(t0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c1)))OR(CASE WHEN t0.c0 THEN t0.c2 END)))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))))OR(((((t0.c2)AND(t0.c1)))OR(t0.c0)))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c1 END)))AND(t0.c1 COLLATE NOCASE)))OR(0.09903807132734843)));
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c1)))=(((rt0.c1)GLOB(rt0.c1))))) ORDER BY ((((rt0.c3)+(rt0.c3))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))=(((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)+(rt0.c3))) IS FALSE) DESC);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c1)))=(((rt0.c1)GLOB(rt0.c1))))) ORDER BY ((((rt0.c3)+(rt0.c3))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))=(((rt0.c1)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)+(rt0.c3))) IS FALSE) DESC);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c1)))=(((rt0.c1)GLOB(rt0.c1))))) ORDER BY ((((rt0.c3)+(rt0.c3))) IS FALSE) DESC;
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((rt0.c4 IN ()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((rt0.c4 IN ()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET((rt0.c4 IN ())));
SELECT * FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c2)||(t0.c2)))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c2)||(t0.c2)))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c2)||(t0.c2)))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c2)||(t0.c2)))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c2)||(t0.c2)))) AND ((t0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)+('è©	')))OR(((rt0.c2) IS FALSE))))OR((- (0.7527872874071591)))))AND(rt0.c3)))OR(rt0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)+('è©	')))OR(((rt0.c2) IS FALSE))))OR((- (0.7527872874071591)))))AND(rt0.c3)))OR(rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)+('è©	')))OR(((rt0.c2) IS FALSE))))OR((- (0.7527872874071591)))))AND(rt0.c3)))OR(rt0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)+('è©	')))OR(((rt0.c2) IS FALSE))))OR((- (0.7527872874071591)))))AND(rt0.c3)))OR(rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)+('è©	')))OR(((rt0.c2) IS FALSE))))OR((- (0.7527872874071591)))))AND(rt0.c3)))OR(rt0.c4 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN GLOB(t0.c1, t0.c1) THEN CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN t0.c2 END WHEN (((t0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN ((rt0.c1)IS NOT(rt0.c5)) WHEN CAST('j&' AS TEXT) THEN ((rt0.c4) ISNULL) ELSE rt0.c5 COLLATE NOCASE END WHERE ((((t0.c2)) BETWEEN (('8')) AND ((((rt0.c1)+(rt0.c2)))))) ORDER BY ((rt0.c1)/(((rt0.c3)IS NOT(rt0.c1)))) DESC  NULLS FIRST, (((rt0.c4)) NOT BETWEEN (((('-681803320') NOT BETWEEN (t0.c0) AND (rt0.c5)))) AND ((rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN (('8')) AND ((((rt0.c1)+(rt0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN GLOB(t0.c1, t0.c1) THEN CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN t0.c2 END WHEN (((t0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN ((rt0.c1)IS NOT(rt0.c5)) WHEN CAST('j&' AS TEXT) THEN ((rt0.c4) ISNULL) ELSE rt0.c5 COLLATE NOCASE END ORDER BY ((rt0.c1)/(((rt0.c3)IS NOT(rt0.c1)))) DESC  NULLS FIRST, (((rt0.c4)) NOT BETWEEN (((('-681803320') NOT BETWEEN (t0.c0) AND (rt0.c5)))) AND ((rt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN GLOB(t0.c1, t0.c1) THEN CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN t0.c2 END WHEN (((t0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN ((rt0.c1)IS NOT(rt0.c5)) WHEN CAST('j&' AS TEXT) THEN ((rt0.c4) ISNULL) ELSE rt0.c5 COLLATE NOCASE END WHERE ((((t0.c2)) BETWEEN (('8')) AND ((((rt0.c1)+(rt0.c2)))))) ORDER BY ((rt0.c1)/(((rt0.c3)IS NOT(rt0.c1)))) DESC  NULLS FIRST, (((rt0.c4)) NOT BETWEEN (((('-681803320') NOT BETWEEN (t0.c0) AND (rt0.c5)))) AND ((rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN (('8')) AND ((((rt0.c1)+(rt0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN GLOB(t0.c1, t0.c1) THEN CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN t0.c2 END WHEN (((t0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN ((rt0.c1)IS NOT(rt0.c5)) WHEN CAST('j&' AS TEXT) THEN ((rt0.c4) ISNULL) ELSE rt0.c5 COLLATE NOCASE END ORDER BY ((rt0.c1)/(((rt0.c3)IS NOT(rt0.c1)))) DESC  NULLS FIRST, (((rt0.c4)) NOT BETWEEN (((('-681803320') NOT BETWEEN (t0.c0) AND (rt0.c5)))) AND ((rt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED INNER JOIN rt0 ON CASE rt0.c3 COLLATE RTRIM  WHEN GLOB(t0.c1, t0.c1) THEN CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN t0.c2 END WHEN (((t0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN ((rt0.c1)IS NOT(rt0.c5)) WHEN CAST('j&' AS TEXT) THEN ((rt0.c4) ISNULL) ELSE rt0.c5 COLLATE NOCASE END WHERE ((((t0.c2)) BETWEEN (('8')) AND ((((rt0.c1)+(rt0.c2)))))) ORDER BY ((rt0.c1)/(((rt0.c3)IS NOT(rt0.c1)))) DESC  NULLS FIRST, (((rt0.c4)) NOT BETWEEN (((('-681803320') NOT BETWEEN (t0.c0) AND (rt0.c5)))) AND ((rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'')OR(NULL)))OR(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(NULL)))OR(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'')OR(NULL)))OR(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(NULL)))OR(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'')OR(NULL)))OR(t0.c2 COLLATE RTRIM)));
SELECT ALL * FROM rt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (t0.c1);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (NOT ((- (rt0.c3)))) WHERE (((load_extension(rt0.c1, t0.c2)) NOT BETWEEN ('JE') AND (IFNULL(DISTINCT t0.c1, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((load_extension(rt0.c1, t0.c2)) NOT BETWEEN ('JE') AND (IFNULL(DISTINCT t0.c1, rt0.c3)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (NOT ((- (rt0.c3)))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (NOT ((- (rt0.c3)))) WHERE (((load_extension(rt0.c1, t0.c2)) NOT BETWEEN ('JE') AND (IFNULL(DISTINCT t0.c1, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((load_extension(rt0.c1, t0.c2)) NOT BETWEEN ('JE') AND (IFNULL(DISTINCT t0.c1, rt0.c3)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (NOT ((- (rt0.c3)))));
SELECT * FROM t0, rt0 WHERE (((((((((((((((((t0.c0)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(t0.c0)))OR(t0.c2)))AND(((((((((t0.c1)OR(t0.c0)))OR(t0.c0)))OR(x'4de057d8')))AND(t0.c2)))))OR(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c0)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(t0.c0)))OR(t0.c2)))AND(((((((((t0.c1)OR(t0.c0)))OR(t0.c0)))OR(x'4de057d8')))AND(t0.c2)))))OR(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((((((((((((t0.c0)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(t0.c0)))OR(t0.c2)))AND(((((((((t0.c1)OR(t0.c0)))OR(t0.c0)))OR(x'4de057d8')))AND(t0.c2)))))OR(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c0)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(t0.c0)))OR(t0.c2)))AND(((((((((t0.c1)OR(t0.c0)))OR(t0.c0)))OR(x'4de057d8')))AND(t0.c2)))))OR(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((((((((((((t0.c0)AND(t0.c0)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(t0.c0)))OR(t0.c2)))AND(((((((((t0.c1)OR(t0.c0)))OR(t0.c0)))OR(x'4de057d8')))AND(t0.c2)))))OR(((t0.c0) IS TRUE))));
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c4) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c4) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c4) NOTNULL) COLLATE RTRIM);
SELECT ALL * FROM t0, rt0 INDEXED BY i23 WHERE ((NOT (((t0.c1)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1)/(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i23);
SELECT ALL * FROM t0, rt0 INDEXED BY i23 WHERE ((NOT (((t0.c1)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1)/(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i23);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((((x'')OR(rt0.c5)))AND(rt0.c5)))OR(((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1)))))AND(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)))AND(json_type(rt0.c2))))AND(CASE WHEN t0.c0 THEN 0.8839223515068699 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((x'')OR(rt0.c5)))AND(rt0.c5)))OR(((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1)))))AND(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)))AND(json_type(rt0.c2))))AND(CASE WHEN t0.c0 THEN 0.8839223515068699 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((((x'')OR(rt0.c5)))AND(rt0.c5)))OR(((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1)))))AND(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)))AND(json_type(rt0.c2))))AND(CASE WHEN t0.c0 THEN 0.8839223515068699 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((x'')OR(rt0.c5)))AND(rt0.c5)))OR(((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1)))))AND(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)))AND(json_type(rt0.c2))))AND(CASE WHEN t0.c0 THEN 0.8839223515068699 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((((x'')OR(rt0.c5)))AND(rt0.c5)))OR(((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1)))))AND(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)))AND(json_type(rt0.c2))))AND(CASE WHEN t0.c0 THEN 0.8839223515068699 ELSE rt0.c3 END)));
SELECT * FROM t0 CROSS JOIN rt0 ON (((((t0.c0, t0.c1, 0.8376150750133925))>((t0.c0, t0.c1, t0.c1))))GLOB(((((rt0.c2)AND(t0.c2)))AND(rt0.c2)))) WHERE (CAST((- (rt0.c5)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c5)) AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((t0.c0, t0.c1, 0.8376150750133925))>((t0.c0, t0.c1, t0.c1))))GLOB(((((rt0.c2)AND(t0.c2)))AND(rt0.c2)))));
SELECT * FROM t0 CROSS JOIN rt0 ON (((((t0.c0, t0.c1, 0.8376150750133925))>((t0.c0, t0.c1, t0.c1))))GLOB(((((rt0.c2)AND(t0.c2)))AND(rt0.c2)))) WHERE (CAST((- (rt0.c5)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c5)) AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((t0.c0, t0.c1, 0.8376150750133925))>((t0.c0, t0.c1, t0.c1))))GLOB(((((rt0.c2)AND(t0.c2)))AND(rt0.c2)))));
SELECT * FROM t0 CROSS JOIN rt0 ON (((((t0.c0, t0.c1, 0.8376150750133925))>((t0.c0, t0.c1, t0.c1))))GLOB(((((rt0.c2)AND(t0.c2)))AND(rt0.c2)))) WHERE (CAST((- (rt0.c5)) AS BLOB));
SELECT * FROM t0, rt0 WHERE (((CASE t0.c0  WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c1 END) ISNULL)) ORDER BY CAST((~ (t0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c1 END) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((~ (t0.c1)) AS INTEGER)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((CASE t0.c0  WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c1 END) ISNULL)) ORDER BY CAST((~ (t0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c1 END) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((~ (t0.c1)) AS INTEGER)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((CASE t0.c0  WHEN rt0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c1 END) ISNULL)) ORDER BY CAST((~ (t0.c1)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (NOT ((((t0.c2, t0.c1, t0.c0))>((t0.c2, t0.c1, t0.c2)))))  NULLS FIRST, (((t0.c1)) BETWEEN (((- (t0.c1)))) AND ((LTRIM(t0.c2, NULL))))  NULLS LAST, (((t0.c2)<<(t0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (NOT ((((t0.c2, t0.c1, t0.c0))>((t0.c2, t0.c1, t0.c2)))))  NULLS FIRST, (((t0.c1)) BETWEEN (((- (t0.c1)))) AND ((LTRIM(t0.c2, NULL))))  NULLS LAST, (((t0.c2)<<(t0.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (NOT ((((t0.c2, t0.c1, t0.c0))>((t0.c2, t0.c1, t0.c2)))))  NULLS FIRST, (((t0.c1)) BETWEEN (((- (t0.c1)))) AND ((LTRIM(t0.c2, NULL))))  NULLS LAST, (((t0.c2)<<(t0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (NOT ((((t0.c2, t0.c1, t0.c0))>((t0.c2, t0.c1, t0.c2)))))  NULLS FIRST, (((t0.c1)) BETWEEN (((- (t0.c1)))) AND ((LTRIM(t0.c2, NULL))))  NULLS LAST, (((t0.c2)<<(t0.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (NOT ((((t0.c2, t0.c1, t0.c0))>((t0.c2, t0.c1, t0.c2)))))  NULLS FIRST, (((t0.c1)) BETWEEN (((- (t0.c1)))) AND ((LTRIM(t0.c2, NULL))))  NULLS LAST, (((t0.c2)<<(t0.c2)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON ((NOT (t0.c1)) IN ()) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((NOT (t0.c1)) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON ((NOT (t0.c1)) IN ()) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((NOT (t0.c1)) IN ()));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON ((NOT (t0.c1)) IN ()) WHERE (rt0.c2);
SELECT COUNT(*) FROM t0 WHERE (((((0xfffffffff2ee75e4) ISNULL))GLOB(((t0.c2) IS TRUE)))) ORDER BY ((((0.05571422799378445)<<(t0.c1)))>(((((t0.c2)OR(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xfffffffff2ee75e4) ISNULL))GLOB(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((((0.05571422799378445)<<(t0.c1)))>(((((t0.c2)OR(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((0xfffffffff2ee75e4) ISNULL))GLOB(((t0.c2) IS TRUE)))) ORDER BY ((((0.05571422799378445)<<(t0.c1)))>(((((t0.c2)OR(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xfffffffff2ee75e4) ISNULL))GLOB(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((((0.05571422799378445)<<(t0.c1)))>(((((t0.c2)OR(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((0xfffffffff2ee75e4) ISNULL))GLOB(((t0.c2) IS TRUE)))) ORDER BY ((((0.05571422799378445)<<(t0.c1)))>(((((t0.c2)OR(t0.c1)))OR(t0.c0)))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0)<<(-1186728105)) IN ())) ORDER BY CASE WHEN (+ (t0.c0)) THEN ((t0.c1) ISNULL) WHEN t0.c0 THEN (t0.c0 IN ()) WHEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) THEN UPPER(t0.c0) ELSE ((((t0.c1)AND(t0.c1)))OR(t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)<<(-1186728105)) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (+ (t0.c0)) THEN ((t0.c1) ISNULL) WHEN t0.c0 THEN (t0.c0 IN ()) WHEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) THEN UPPER(t0.c0) ELSE ((((t0.c1)AND(t0.c1)))OR(t0.c1)) END  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c0)<<(-1186728105)) IN ())) ORDER BY CASE WHEN (+ (t0.c0)) THEN ((t0.c1) ISNULL) WHEN t0.c0 THEN (t0.c0 IN ()) WHEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) THEN UPPER(t0.c0) ELSE ((((t0.c1)AND(t0.c1)))OR(t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)<<(-1186728105)) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (+ (t0.c0)) THEN ((t0.c1) ISNULL) WHEN t0.c0 THEN (t0.c0 IN ()) WHEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) THEN UPPER(t0.c0) ELSE ((((t0.c1)AND(t0.c1)))OR(t0.c1)) END  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c0)<<(-1186728105)) IN ())) ORDER BY CASE WHEN (+ (t0.c0)) THEN ((t0.c1) ISNULL) WHEN t0.c0 THEN (t0.c0 IN ()) WHEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) THEN UPPER(t0.c0) ELSE ((((t0.c1)AND(t0.c1)))OR(t0.c1)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i41 WHERE ((((~ (rt0.c1)))*(0.9137618661359483))) ORDER BY ((((rt0.c5))>((rt0.c5))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))*(0.9137618661359483))) IS TRUE)  as count FROM rt0 INDEXED BY i41 ORDER BY ((((rt0.c5))>((rt0.c5))) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i41 WHERE ((((~ (rt0.c1)))*(0.9137618661359483))) ORDER BY ((((rt0.c5))>((rt0.c5))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))*(0.9137618661359483))) IS TRUE)  as count FROM rt0 INDEXED BY i41 ORDER BY ((((rt0.c5))>((rt0.c5))) IN ()) ASC);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((((x'ec7b')==(t0.c0))) NOT BETWEEN (HEX(DISTINCT t0.c1)) AND (t0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((x'ec7b')=(t0.c0))) NOT BETWEEN (HEX(DISTINCT t0.c1)) AND (t0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((((x'ec7b')==(t0.c0))) NOT BETWEEN (HEX(DISTINCT t0.c1)) AND (t0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((x'ec7b')=(t0.c0))) NOT BETWEEN (HEX(DISTINCT t0.c1)) AND (t0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((((x'ec7b')==(t0.c0))) NOT BETWEEN (HEX(DISTINCT t0.c1)) AND (t0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))<=((+ (rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))<=((+ (rt0.c5))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))<=((+ (rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))<=((+ (rt0.c5))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))))<=((+ (rt0.c5)))));
SELECT COUNT(*) FROM t0 WHERE (LIKELY(((((0.9636950934281959)OR(t0.c2)))OR(t0.c0)))) ORDER BY CAST(t0.c1 AS TEXT) DESC, (('-118876842')+(CASE t0.c1  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) ASC, LTRIM(t0.c0, t0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((0.9636950934281959)OR(t0.c2)))OR(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c1 AS TEXT) DESC, (('-118876842')+(CASE t0.c1  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) ASC, LTRIM(t0.c0, t0.c0) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(((((0.9636950934281959)OR(t0.c2)))OR(t0.c0)))) ORDER BY CAST(t0.c1 AS TEXT) DESC, (('-118876842')+(CASE t0.c1  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) ASC, LTRIM(t0.c0, t0.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((0.9636950934281959)OR(t0.c2)))OR(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c1 AS TEXT) DESC, (('-118876842')+(CASE t0.c1  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) ASC, LTRIM(t0.c0, t0.c0) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(((((0.9636950934281959)OR(t0.c2)))OR(t0.c0)))) ORDER BY CAST(t0.c1 AS TEXT) DESC, (('-118876842')+(CASE t0.c1  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)) ASC, LTRIM(t0.c0, t0.c0) COLLATE BINARY;
SELECT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(TYPEOF(t0.c0)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(TYPEOF(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(TYPEOF(t0.c0)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(TYPEOF(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(TYPEOF(t0.c0)));
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'');
SELECT * FROM t0 CROSS JOIN rt0 ON ((COALESCE(rt0.c4, rt0.c4)) ISNULL) WHERE ((((NOT (rt0.c1))) IS TRUE)) ORDER BY (((rt0.c3) NOT NULL) IN (rt0.c4 COLLATE NOCASE, CHAR(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((COALESCE(rt0.c4, rt0.c4)) ISNULL) ORDER BY (((rt0.c3) NOT NULL) IN (rt0.c4 COLLATE NOCASE, CHAR(rt0.c1))));
SELECT * FROM t0 CROSS JOIN rt0 ON ((COALESCE(rt0.c4, rt0.c4)) ISNULL) WHERE ((((NOT (rt0.c1))) IS TRUE)) ORDER BY (((rt0.c3) NOT NULL) IN (rt0.c4 COLLATE NOCASE, CHAR(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((COALESCE(rt0.c4, rt0.c4)) ISNULL) ORDER BY (((rt0.c3) NOT NULL) IN (rt0.c4 COLLATE NOCASE, CHAR(rt0.c1))));
SELECT * FROM t0 CROSS JOIN rt0 ON ((COALESCE(rt0.c4, rt0.c4)) ISNULL) WHERE ((((NOT (rt0.c1))) IS TRUE)) ORDER BY (((rt0.c3) NOT NULL) IN (rt0.c4 COLLATE NOCASE, CHAR(rt0.c1)));
SELECT * FROM t0 NOT INDEXED WHERE ((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c1))) COLLATE NOCASE) ORDER BY (((t0.c2)>>(0Xffffffffe2319b3f)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2)>>(0Xffffffffe2319b3f)) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0 NOT INDEXED WHERE ((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c1))) COLLATE NOCASE) ORDER BY (((t0.c2)>>(0Xffffffffe2319b3f)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2)>>(0Xffffffffe2319b3f)) IN ()) DESC  NULLS FIRST);
SELECT * FROM t0 NOT INDEXED WHERE ((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c0, t0.c1))) COLLATE NOCASE) ORDER BY (((t0.c2)>>(0Xffffffffe2319b3f)) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)|((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY (((rt0.c1 IN ()))%(((rt0.c5) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)|((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))%(((rt0.c5) NOT NULL)))  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)|((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY (((rt0.c1 IN ()))%(((rt0.c5) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)|((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))%(((rt0.c5) NOT NULL)))  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)|((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ORDER BY (((rt0.c1 IN ()))%(((rt0.c5) NOT NULL)))  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c1) NOT BETWEEN (t0.c0) AND (0.4015678755493518)) IN ())) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1) NOT BETWEEN (t0.c0) AND (0.4015678755493518)) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c1) NOT BETWEEN (t0.c0) AND (0.4015678755493518)) IN ())) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1) NOT BETWEEN (t0.c0) AND (0.4015678755493518)) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c1) NOT BETWEEN (t0.c0) AND (0.4015678755493518)) IN ())) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (json_valid((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_valid((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_valid((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_valid((rt0.c0 IN ())));
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE rt0.c1  WHEN t0.c2 THEN rt0.c4 ELSE rt0.c2 END END) ORDER BY CASE WHEN (~ (t0.c2)) THEN CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c2 END ELSE CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE rt0.c1  WHEN t0.c2 THEN rt0.c4 ELSE rt0.c2 END END) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN (~ (t0.c2)) THEN CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c2 END ELSE CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE rt0.c1  WHEN t0.c2 THEN rt0.c4 ELSE rt0.c2 END END) ORDER BY CASE WHEN (~ (t0.c2)) THEN CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c2 END ELSE CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE rt0.c1  WHEN t0.c2 THEN rt0.c4 ELSE rt0.c2 END END) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN (~ (t0.c2)) THEN CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c2 END ELSE CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE rt0.c1  WHEN t0.c2 THEN rt0.c4 ELSE rt0.c2 END END) ORDER BY CASE WHEN (~ (t0.c2)) THEN CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c2 END ELSE CAST(rt0.c3 AS NUMERIC) END  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((((((t0.c0)AND(t0.c2)))AND(rt0.c5)))<(rtreenode(rt0.c4, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c2)))AND(rt0.c5)))<(rtreenode(rt0.c4, rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((t0.c0)AND(t0.c2)))AND(rt0.c5)))<(rtreenode(rt0.c4, rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c2)))AND(rt0.c5)))<(rtreenode(rt0.c4, rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((t0.c0)AND(t0.c2)))AND(rt0.c5)))<(rtreenode(rt0.c4, rt0.c3))));
SELECT COUNT(*) FROM t0 WHERE ((((0.1356358545874946))>((t0.c1))));
SELECT SUM(count) FROM (SELECT (((((0.1356358545874946))>((t0.c1)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((0.1356358545874946))>((t0.c1))));
SELECT SUM(count) FROM (SELECT (((((0.1356358545874946))>((t0.c1)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((0.1356358545874946))>((t0.c1))));
SELECT * FROM t0 WHERE ((((t0.c1, t0.c0, t0.c2)) NOT BETWEEN (((t0.c1 IN (t0.c2)), ((t0.c0) BETWEEN (t0.c1) AND (NULL)), t0.c1)) AND ((t0.c2 COLLATE RTRIM, CAST(0.5040278562128703 AS REAL), t0.c1)))) ORDER BY t0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c0, t0.c2)) NOT BETWEEN (((t0.c1 IN (t0.c2)), ((t0.c0) BETWEEN (t0.c1) AND (NULL)), t0.c1)) AND ((t0.c2 COLLATE RTRIM, CAST(0.5040278562128703 AS REAL), t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c1, t0.c0, t0.c2)) NOT BETWEEN (((t0.c1 IN (t0.c2)), ((t0.c0) BETWEEN (t0.c1) AND (NULL)), t0.c1)) AND ((t0.c2 COLLATE RTRIM, CAST(0.5040278562128703 AS REAL), t0.c1)))) ORDER BY t0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c0, t0.c2)) NOT BETWEEN (((t0.c1 IN (t0.c2)), ((t0.c0) BETWEEN (t0.c1) AND (NULL)), t0.c1)) AND ((t0.c2 COLLATE RTRIM, CAST(0.5040278562128703 AS REAL), t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c1, t0.c0, t0.c2)) NOT BETWEEN (((t0.c1 IN (t0.c2)), ((t0.c0) BETWEEN (t0.c1) AND (NULL)), t0.c1)) AND ((t0.c2 COLLATE RTRIM, CAST(0.5040278562128703 AS REAL), t0.c1)))) ORDER BY t0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END COLLATE NOCASE);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (NULL) AND (CASE WHEN rt0.c0 THEN rt0.c3 END)) WHERE (CASE WHEN (- (rt0.c4)) THEN ((rt0.c0)OR(t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN ((((t0.c2)AND(x'')))AND(rt0.c1)) WHEN ((rt0.c0)OR(rt0.c5)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c5) NOTNULL) END) ORDER BY (((((rt0.c4))==((rt0.c4))))>>(rt0.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c4)) THEN ((rt0.c0)OR(t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN ((((t0.c2)AND(x'')))AND(rt0.c1)) WHEN ((rt0.c0)OR(rt0.c5)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c5) NOTNULL) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (NULL) AND (CASE WHEN rt0.c0 THEN rt0.c3 END)) ORDER BY (((((rt0.c4))==((rt0.c4))))>>(rt0.c4))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (NULL) AND (CASE WHEN rt0.c0 THEN rt0.c3 END)) WHERE (CASE WHEN (- (rt0.c4)) THEN ((rt0.c0)OR(t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN ((((t0.c2)AND(x'')))AND(rt0.c1)) WHEN ((rt0.c0)OR(rt0.c5)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c5) NOTNULL) END) ORDER BY (((((rt0.c4))==((rt0.c4))))>>(rt0.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c4)) THEN ((rt0.c0)OR(t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN ((((t0.c2)AND(x'')))AND(rt0.c1)) WHEN ((rt0.c0)OR(rt0.c5)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c5) NOTNULL) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (NULL) AND (CASE WHEN rt0.c0 THEN rt0.c3 END)) ORDER BY (((((rt0.c4))==((rt0.c4))))>>(rt0.c4))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL)) NOT BETWEEN (NULL) AND (CASE WHEN rt0.c0 THEN rt0.c3 END)) WHERE (CASE WHEN (- (rt0.c4)) THEN ((rt0.c0)OR(t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN ((((t0.c2)AND(x'')))AND(rt0.c1)) WHEN ((rt0.c0)OR(rt0.c5)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c5) NOTNULL) END) ORDER BY (((((rt0.c4))==((rt0.c4))))>>(rt0.c4))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END) IS FALSE));
SELECT ALL * FROM t0, rt0 WHERE (JULIANDAY(((t0.c0) NOT NULL), ((rt0.c4) IS TRUE), (rt0.c3 IN (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((t0.c0) NOT NULL), ((rt0.c4) IS TRUE), (rt0.c3 IN (rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (JULIANDAY(((t0.c0) NOT NULL), ((rt0.c4) IS TRUE), (rt0.c3 IN (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((t0.c0) NOT NULL), ((rt0.c4) IS TRUE), (rt0.c3 IN (rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (JULIANDAY(((t0.c0) NOT NULL), ((rt0.c4) IS TRUE), (rt0.c3 IN (rt0.c3))));
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN json_array_length(rt0.c1, rt0.c3) ELSE (~ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN json_array_length(rt0.c1, rt0.c3) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN json_array_length(rt0.c1, rt0.c3) ELSE (~ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN json_array_length(rt0.c1, rt0.c3) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN json_array_length(rt0.c1, rt0.c3) ELSE (~ (rt0.c1)) END);
SELECT * FROM t0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ('');
SELECT * FROM rt0 CROSS JOIN t0 ON t0.c1 WHERE (((((((rt0.c4))<((x''))), ((rt0.c4) NOT NULL), CAST(rt0.c1 AS NUMERIC)))>((((((rt0.c1)OR(t0.c2)))OR(t0.c2)), TRIM(t0.c1), (rt0.c3 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4))<((x''))), ((rt0.c4) NOT NULL), CAST(rt0.c1 AS NUMERIC)))>((((((rt0.c1)OR(t0.c2)))OR(t0.c2)), TRIM(t0.c1), (rt0.c3 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON t0.c1);
SELECT * FROM rt0 CROSS JOIN t0 ON t0.c1 WHERE (((((((rt0.c4))<((x''))), ((rt0.c4) NOT NULL), CAST(rt0.c1 AS NUMERIC)))>((((((rt0.c1)OR(t0.c2)))OR(t0.c2)), TRIM(t0.c1), (rt0.c3 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4))<((x''))), ((rt0.c4) NOT NULL), CAST(rt0.c1 AS NUMERIC)))>((((((rt0.c1)OR(t0.c2)))OR(t0.c2)), TRIM(t0.c1), (rt0.c3 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON t0.c1);
SELECT * FROM rt0 CROSS JOIN t0 ON t0.c1 WHERE (((((((rt0.c4))<((x''))), ((rt0.c4) NOT NULL), CAST(rt0.c1 AS NUMERIC)))>((((((rt0.c1)OR(t0.c2)))OR(t0.c2)), TRIM(t0.c1), (rt0.c3 IN (rt0.c2))))));
SELECT * FROM t0, rt0 WHERE ((((+ (rt0.c3)))&(((t0.c0) IS TRUE)))) ORDER BY ((((x'')) BETWEEN ((t0.c2)) AND ((t0.c0))) IN ((~ (rt0.c3)), rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))&(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((x'')) BETWEEN ((t0.c2)) AND ((t0.c0))) IN ((~ (rt0.c3)), rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((+ (rt0.c3)))&(((t0.c0) IS TRUE)))) ORDER BY ((((x'')) BETWEEN ((t0.c2)) AND ((t0.c0))) IN ((~ (rt0.c3)), rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))&(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((x'')) BETWEEN ((t0.c2)) AND ((t0.c0))) IN ((~ (rt0.c3)), rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((+ (rt0.c3)))&(((t0.c0) IS TRUE)))) ORDER BY ((((x'')) BETWEEN ((t0.c2)) AND ((t0.c0))) IN ((~ (rt0.c3)), rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)OR((rt0.c3 IN (rt0.c4)))))AND(((rt0.c1)>>(rt0.c0)))))AND((((rt0.c1, rt0.c5, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c3, x''))))))AND((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE NOCASE)OR((rt0.c3 IN (rt0.c4)))))AND(((rt0.c1)>>(rt0.c0)))))AND((((rt0.c1, rt0.c5, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c3, x''))))))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)OR((rt0.c3 IN (rt0.c4)))))AND(((rt0.c1)>>(rt0.c0)))))AND((((rt0.c1, rt0.c5, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c3, x''))))))AND((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE NOCASE)OR((rt0.c3 IN (rt0.c4)))))AND(((rt0.c1)>>(rt0.c0)))))AND((((rt0.c1, rt0.c5, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c3, x''))))))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)OR((rt0.c3 IN (rt0.c4)))))AND(((rt0.c1)>>(rt0.c0)))))AND((((rt0.c1, rt0.c5, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, rt0.c1)) AND ((rt0.c0, rt0.c3, x''))))))AND((rt0.c4 IN ()))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(((((((((t0.c2)OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2)) AS BLOB) WHERE (CHAR(((((rt0.c1)OR(rt0.c4)))AND(rt0.c5)))) ORDER BY ((CAST(t0.c0 AS INTEGER))&(HEX(rt0.c1)))  NULLS LAST, CASE rt0.c1  WHEN t0.c2 THEN t0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((rt0.c1)OR(rt0.c4)))AND(rt0.c5)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(((((((((t0.c2)OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2)) AS BLOB) ORDER BY ((CAST(t0.c0 AS INTEGER))&(HEX(rt0.c1)))  NULLS LAST, CASE rt0.c1  WHEN t0.c2 THEN t0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(((((((((t0.c2)OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2)) AS BLOB) WHERE (CHAR(((((rt0.c1)OR(rt0.c4)))AND(rt0.c5)))) ORDER BY ((CAST(t0.c0 AS INTEGER))&(HEX(rt0.c1)))  NULLS LAST, CASE rt0.c1  WHEN t0.c2 THEN t0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((rt0.c1)OR(rt0.c4)))AND(rt0.c5)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(((((((((t0.c2)OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2)) AS BLOB) ORDER BY ((CAST(t0.c0 AS INTEGER))&(HEX(rt0.c1)))  NULLS LAST, CASE rt0.c1  WHEN t0.c2 THEN t0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON CAST(((((((((t0.c2)OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2)) AS BLOB) WHERE (CHAR(((((rt0.c1)OR(rt0.c4)))AND(rt0.c5)))) ORDER BY ((CAST(t0.c0 AS INTEGER))&(HEX(rt0.c1)))  NULLS LAST, CASE rt0.c1  WHEN t0.c2 THEN t0.c0 END COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY);
SELECT * FROM rt0, t0 WHERE (0.7082717911895798) ORDER BY rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((0.7082717911895798) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c5);
SELECT * FROM rt0, t0 WHERE (0.7082717911895798) ORDER BY rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((0.7082717911895798) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c5);
SELECT * FROM rt0, t0 WHERE (0.7082717911895798) ORDER BY rt0.c5;
SELECT * FROM t0 NOT INDEXED WHERE (CAST(UPPER(t0.c2) AS TEXT)) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(t0.c2) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM t0 NOT INDEXED WHERE (CAST(UPPER(t0.c2) AS TEXT)) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(t0.c2) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM t0 NOT INDEXED WHERE (CAST(UPPER(t0.c2) AS TEXT)) ORDER BY CAST(t0.c2 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (IFNULL(DISTINCT ((rt0.c1)+(t0.c2)), (((x''))==(('Pp')))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c1)+(t0.c2)), (((x''))==(('Pp'))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (IFNULL(DISTINCT ((rt0.c1)+(t0.c2)), (((x''))==(('Pp')))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c1)+(t0.c2)), (((x''))==(('Pp'))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (IFNULL(DISTINCT ((rt0.c1)+(t0.c2)), (((x''))==(('Pp')))));
SELECT * FROM rt0 WHERE (UPPER(DISTINCT ((rt0.c4) ISNULL))) ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c5 THEN '-147250197' ELSE rt0.c5 END) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt0.c4) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c5 THEN '-147250197' ELSE rt0.c5 END) NOTNULL) ASC);
SELECT * FROM rt0 WHERE (UPPER(DISTINCT ((rt0.c4) ISNULL))) ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c5 THEN '-147250197' ELSE rt0.c5 END) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt0.c4) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c5 THEN '-147250197' ELSE rt0.c5 END) NOTNULL) ASC);
SELECT * FROM rt0 WHERE (UPPER(DISTINCT ((rt0.c4) ISNULL))) ORDER BY ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c5 THEN '-147250197' ELSE rt0.c5 END) NOTNULL) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((NULL) BETWEEN (rt0.c4) AND (rt0.c3)))OR(t0.c2 COLLATE NOCASE)))OR((rt0.c5 IN ())))) ORDER BY ((((((t0.c0)-(t0.c0)))OR(((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))OR(((((rt0.c5)OR(rt0.c4)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((NULL) BETWEEN (rt0.c4) AND (rt0.c3)))OR(t0.c2 COLLATE NOCASE)))OR((rt0.c5 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((t0.c0)-(t0.c0)))OR(((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))OR(((((rt0.c5)OR(rt0.c4)))AND(t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((NULL) BETWEEN (rt0.c4) AND (rt0.c3)))OR(t0.c2 COLLATE NOCASE)))OR((rt0.c5 IN ())))) ORDER BY ((((((t0.c0)-(t0.c0)))OR(((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))OR(((((rt0.c5)OR(rt0.c4)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((NULL) BETWEEN (rt0.c4) AND (rt0.c3)))OR(t0.c2 COLLATE NOCASE)))OR((rt0.c5 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((t0.c0)-(t0.c0)))OR(((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))OR(((((rt0.c5)OR(rt0.c4)))AND(t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((NULL) BETWEEN (rt0.c4) AND (rt0.c3)))OR(t0.c2 COLLATE NOCASE)))OR((rt0.c5 IN ())))) ORDER BY ((((((t0.c0)-(t0.c0)))OR(((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))OR(((((rt0.c5)OR(rt0.c4)))AND(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON t0.c0 WHERE (((NULL) BETWEEN (rt0.c2) AND (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (rt0.c2) AND (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON t0.c0 WHERE (((NULL) BETWEEN (rt0.c2) AND (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (rt0.c2) AND (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON t0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON t0.c0 WHERE (((NULL) BETWEEN (rt0.c2) AND (CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END)));
SELECT * FROM rt0, t0 WHERE (((((t0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)>(rt0.c0))) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)>(rt0.c0))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((t0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)>(rt0.c0))) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)>(rt0.c0))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((t0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c0)>(rt0.c0))) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((((NOT (t0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c5 END)))OR((rt0.c0 IN ()))) WHERE ((+ (CASE WHEN rt0.c4 THEN rt0.c1 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c4 THEN rt0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((((NOT (t0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c5 END)))OR((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((((NOT (t0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c5 END)))OR((rt0.c0 IN ()))) WHERE ((+ (CASE WHEN rt0.c4 THEN rt0.c1 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c4 THEN rt0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((((NOT (t0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c5 END)))OR((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((((NOT (t0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c5 END)))OR((rt0.c0 IN ()))) WHERE ((+ (CASE WHEN rt0.c4 THEN rt0.c1 ELSE t0.c1 END)));
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c2 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c2 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c2 AS REAL) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c2 AS REAL) AS INTEGER));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((((rt0.c4)AND(rt0.c1)) IN (TOTAL_CHANGES(), rt0.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)AND(rt0.c1)) IN (TOTAL_CHANGES(), rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((((rt0.c4)AND(rt0.c1)) IN (TOTAL_CHANGES(), rt0.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)AND(rt0.c1)) IN (TOTAL_CHANGES(), rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((((rt0.c4)AND(rt0.c1)) IN (TOTAL_CHANGES(), rt0.c5 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c4, rt0.c4, '0.09027975232736718'))==((rt0.c2, rt0.c1, rt0.c4))))-(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4, rt0.c4, '0.09027975232736718'))==((rt0.c2, rt0.c1, rt0.c4))))-(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c4, rt0.c4, '0.09027975232736718'))==((rt0.c2, rt0.c1, rt0.c4))))-(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c4, rt0.c4, '0.09027975232736718'))==((rt0.c2, rt0.c1, rt0.c4))))-(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c4, rt0.c4, '0.09027975232736718'))==((rt0.c2, rt0.c1, rt0.c4))))-(((rt0.c1)>=(rt0.c3)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULLIF(0.05169500304583763, NULL)) ORDER BY ((((TYPEOF(rt0.c5))AND(((((t0.c0)AND(t0.c1)))AND(t0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c5) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(0.05169500304583763, NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((TYPEOF(rt0.c5))AND(((((t0.c0)AND(t0.c1)))AND(t0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c5) AND (t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULLIF(0.05169500304583763, NULL)) ORDER BY ((((TYPEOF(rt0.c5))AND(((((t0.c0)AND(t0.c1)))AND(t0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c5) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(0.05169500304583763, NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((TYPEOF(rt0.c5))AND(((((t0.c0)AND(t0.c1)))AND(t0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c5) AND (t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULLIF(0.05169500304583763, NULL)) ORDER BY ((((TYPEOF(rt0.c5))AND(((((t0.c0)AND(t0.c1)))AND(t0.c2)))))OR(((rt0.c4) BETWEEN (rt0.c5) AND (t0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c1)) AND ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c1)) AND ((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c1)) AND ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c1)) AND ((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c1)) AND ((~ (t0.c0)))));
SELECT * FROM rt0, t0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 END IN ((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c1 END IN ((~ (NULL))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 END IN ((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c2 THEN rt0.c1 END IN ((~ (NULL))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 END IN ((~ (NULL)))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c1 WHERE (((((((rt0.c5)=(1432652358)))OR(((((rt0.c2)OR(t0.c0)))AND(rt0.c4)))))OR((((rt0.c4, rt0.c0, t0.c1))<>((rt0.c0, t0.c1, rt0.c2)))))) ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)=(1432652358)))OR(((((rt0.c2)OR(t0.c0)))AND(rt0.c4)))))OR((((rt0.c4, rt0.c0, t0.c1))<>((rt0.c0, t0.c1, rt0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c1 ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c3))) IS FALSE) ASC);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c1 WHERE (((((((rt0.c5)=(1432652358)))OR(((((rt0.c2)OR(t0.c0)))AND(rt0.c4)))))OR((((rt0.c4, rt0.c0, t0.c1))<>((rt0.c0, t0.c1, rt0.c2)))))) ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)=(1432652358)))OR(((((rt0.c2)OR(t0.c0)))AND(rt0.c4)))))OR((((rt0.c4, rt0.c0, t0.c1))<>((rt0.c0, t0.c1, rt0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c1 ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c3))) IS FALSE) ASC);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON rt0.c1 WHERE (((((((rt0.c5)=(1432652358)))OR(((((rt0.c2)OR(t0.c0)))AND(rt0.c4)))))OR((((rt0.c4, rt0.c0, t0.c1))<>((rt0.c0, t0.c1, rt0.c2)))))) ORDER BY ((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c3))) IS FALSE) ASC;
SELECT * FROM t0, rt0 WHERE ((((NOT (t0.c2)))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY CASE WHEN ((((rt0.c3)OR(x'')))AND(rt0.c5)) THEN ((t0.c0) BETWEEN (NULL) AND (t0.c2)) ELSE x'' END, ((((((((((rt0.c0)LIKE(rt0.c3)))AND(((rt0.c1)LIKE(rt0.c0)))))OR(((rt0.c4)IS(rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))AND((t0.c1 IN (rt0.c4, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((((rt0.c3)OR(x'')))AND(rt0.c5)) THEN ((t0.c0) BETWEEN (NULL) AND (t0.c2)) ELSE x'' END, ((((((((((rt0.c0)LIKE(rt0.c3)))AND(((rt0.c1)LIKE(rt0.c0)))))OR(((rt0.c4)IS(rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))AND((t0.c1 IN (rt0.c4, rt0.c1)))));
SELECT * FROM t0, rt0 WHERE ((((NOT (t0.c2)))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY CASE WHEN ((((rt0.c3)OR(x'')))AND(rt0.c5)) THEN ((t0.c0) BETWEEN (NULL) AND (t0.c2)) ELSE x'' END, ((((((((((rt0.c0)LIKE(rt0.c3)))AND(((rt0.c1)LIKE(rt0.c0)))))OR(((rt0.c4)IS(rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))AND((t0.c1 IN (rt0.c4, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((((rt0.c3)OR(x'')))AND(rt0.c5)) THEN ((t0.c0) BETWEEN (NULL) AND (t0.c2)) ELSE x'' END, ((((((((((rt0.c0)LIKE(rt0.c3)))AND(((rt0.c1)LIKE(rt0.c0)))))OR(((rt0.c4)IS(rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))AND((t0.c1 IN (rt0.c4, rt0.c1)))));
SELECT * FROM t0, rt0 WHERE ((((NOT (t0.c2)))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY CASE WHEN ((((rt0.c3)OR(x'')))AND(rt0.c5)) THEN ((t0.c0) BETWEEN (NULL) AND (t0.c2)) ELSE x'' END, ((((((((((rt0.c0)LIKE(rt0.c3)))AND(((rt0.c1)LIKE(rt0.c0)))))OR(((rt0.c4)IS(rt0.c0)))))OR(CAST(rt0.c0 AS TEXT))))AND((t0.c1 IN (rt0.c4, rt0.c1))));
SELECT ALL * FROM t0, rt0 WHERE ((('|WF') BETWEEN (((((rt0.c5)OR(rt0.c0)))OR(8.99235964E8))) AND ((('{{Dê½')-(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((('|WF') BETWEEN (((((rt0.c5)OR(rt0.c0)))OR(8.99235964E8))) AND ((('{{Dê½')-(rt0.c4))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((('|WF') BETWEEN (((((rt0.c5)OR(rt0.c0)))OR(8.99235964E8))) AND ((('{{Dê½')-(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((('|WF') BETWEEN (((((rt0.c5)OR(rt0.c0)))OR(8.99235964E8))) AND ((('{{Dê½')-(rt0.c4))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((('|WF') BETWEEN (((((rt0.c5)OR(rt0.c0)))OR(8.99235964E8))) AND ((('{{Dê½')-(rt0.c4)))));
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY '-1344807111' ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c5)) BETWEEN ((UPPER(rt0.c2), (- (rt0.c0)), CASE '317560798'  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)) AND (((rt0.c4 IN ()), ((rt0.c4) NOTNULL), rt0.c3))), (((rt0.c3))<=((rt0.c2))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 ORDER BY '-1344807111' ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c5)) BETWEEN ((UPPER(rt0.c2), (- (rt0.c0)), CASE '317560798'  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)) AND (((rt0.c4 IN ()), ((rt0.c4) NOTNULL), rt0.c3))), (((rt0.c3))<=((rt0.c2))) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY '-1344807111' ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c5)) BETWEEN ((UPPER(rt0.c2), (- (rt0.c0)), CASE '317560798'  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)) AND (((rt0.c4 IN ()), ((rt0.c4) NOTNULL), rt0.c3))), (((rt0.c3))<=((rt0.c2))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 ORDER BY '-1344807111' ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c5)) BETWEEN ((UPPER(rt0.c2), (- (rt0.c0)), CASE '317560798'  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)) AND (((rt0.c4 IN ()), ((rt0.c4) NOTNULL), rt0.c3))), (((rt0.c3))<=((rt0.c2))) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN ())) ORDER BY '-1344807111' ASC  NULLS FIRST, (((rt0.c1, rt0.c0, rt0.c5)) BETWEEN ((UPPER(rt0.c2), (- (rt0.c0)), CASE '317560798'  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)) AND (((rt0.c4 IN ()), ((rt0.c4) NOTNULL), rt0.c3))), (((rt0.c3))<=((rt0.c2))) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN 0.4752969815818636 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 0.4752969815818636 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN 0.4752969815818636 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 0.4752969815818636 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN 0.4752969815818636 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((- ((~ (t0.c1))))) ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(0.7566009412439368)))OR(((rt0.c2)GLOB(rt0.c4)))))AND(rt0.c0 COLLATE NOCASE)))OR('1744106915' COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (t0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(0.7566009412439368)))OR(((rt0.c2)GLOB(rt0.c4)))))AND(rt0.c0 COLLATE NOCASE)))OR('1744106915' COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((- ((~ (t0.c1))))) ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(0.7566009412439368)))OR(((rt0.c2)GLOB(rt0.c4)))))AND(rt0.c0 COLLATE NOCASE)))OR('1744106915' COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (t0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(0.7566009412439368)))OR(((rt0.c2)GLOB(rt0.c4)))))AND(rt0.c0 COLLATE NOCASE)))OR('1744106915' COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((- ((~ (t0.c1))))) ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND(0.7566009412439368)))OR(((rt0.c2)GLOB(rt0.c4)))))AND(rt0.c0 COLLATE NOCASE)))OR('1744106915' COLLATE NOCASE)) DESC;
SELECT * FROM t0 WHERE (((t0.c2)>>(t0.c1)) COLLATE RTRIM) ORDER BY (+ (((((((((0.5001229860016063)OR(t0.c2)))OR(t0.c2)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)>>(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (+ (((((((((0.5001229860016063)OR(t0.c2)))OR(t0.c2)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c2)>>(t0.c1)) COLLATE RTRIM) ORDER BY (+ (((((((((0.5001229860016063)OR(t0.c2)))OR(t0.c2)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)>>(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (+ (((((((((0.5001229860016063)OR(t0.c2)))OR(t0.c2)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c2)>>(t0.c1)) COLLATE RTRIM) ORDER BY (+ (((((((((0.5001229860016063)OR(t0.c2)))OR(t0.c2)))OR(t0.c0)))AND(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c5)*(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c5)*(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c5)*(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c5)*(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c5)*(rt0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((NULL) IS TRUE)) NOT NULL) WHERE (((((rt0.c5)>=(t0.c0)))>=(((((((((t0.c1)OR(t0.c1)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)>=(t0.c0)))>=(((((((((t0.c1)OR(t0.c1)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((NULL) IS TRUE)) NOT NULL));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((NULL) IS TRUE)) NOT NULL) WHERE (((((rt0.c5)>=(t0.c0)))>=(((((((((t0.c1)OR(t0.c1)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)>=(t0.c0)))>=(((((((((t0.c1)OR(t0.c1)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((NULL) IS TRUE)) NOT NULL));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((NULL) IS TRUE)) NOT NULL) WHERE (((((rt0.c5)>=(t0.c0)))>=(((((((((t0.c1)OR(t0.c1)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c0)))));
SELECT * FROM rt0, t0 WHERE (CASE ('+S0vQ-*<r' IN ())  WHEN ((((t0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN ((NULL) NOT NULL) ELSE (('') NOT BETWEEN (rt0.c5) AND (rt0.c0)) END) ORDER BY 0.7520158804125898  NULLS FIRST, t0.c2 DESC  NULLS LAST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ('+S0vQ-*<r' IN ())  WHEN ((((t0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN ((NULL) NOT NULL) ELSE (('') NOT BETWEEN (rt0.c5) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.7520158804125898  NULLS FIRST, t0.c2 DESC  NULLS LAST, rt0.c2 DESC);
SELECT * FROM rt0, t0 WHERE (CASE ('+S0vQ-*<r' IN ())  WHEN ((((t0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN ((NULL) NOT NULL) ELSE (('') NOT BETWEEN (rt0.c5) AND (rt0.c0)) END) ORDER BY 0.7520158804125898  NULLS FIRST, t0.c2 DESC  NULLS LAST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ('+S0vQ-*<r' IN ())  WHEN ((((t0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN ((NULL) NOT NULL) ELSE (('') NOT BETWEEN (rt0.c5) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.7520158804125898  NULLS FIRST, t0.c2 DESC  NULLS LAST, rt0.c2 DESC);
SELECT * FROM rt0, t0 WHERE (CASE ('+S0vQ-*<r' IN ())  WHEN ((((t0.c1)AND(rt0.c3)))AND(rt0.c2)) THEN ((NULL) NOT NULL) ELSE (('') NOT BETWEEN (rt0.c5) AND (rt0.c0)) END) ORDER BY 0.7520158804125898  NULLS FIRST, t0.c2 DESC  NULLS LAST, rt0.c2 DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY (- (((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST, (((((rt0.c5)LIKE(t0.c0))))==((((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST, (((((rt0.c5)LIKE(t0.c0))))=((((rt0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY (- (((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST, (((((rt0.c5)LIKE(t0.c0))))==((((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST, (((((rt0.c5)LIKE(t0.c0))))=((((rt0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY (- (((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))) ASC  NULLS FIRST, (((((rt0.c5)LIKE(t0.c0))))==((((rt0.c0) IS FALSE))));
SELECT * FROM t0, rt0 WHERE (IFNULL((~ (rt0.c0)), rt0.c4));
SELECT SUM(count) FROM (SELECT ((IFNULL((~ (rt0.c0)), rt0.c4)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (IFNULL((~ (rt0.c0)), rt0.c4));
SELECT SUM(count) FROM (SELECT ((IFNULL((~ (rt0.c0)), rt0.c4)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (IFNULL((~ (rt0.c0)), rt0.c4));
SELECT COUNT(*) FROM rt0 WHERE (LOWER(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c2)))OR((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c5)) AND ((rt0.c1, rt0.c1, rt0.c4))))))OR(CASE WHEN rt0.c5 THEN rt0.c5 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c2)))OR((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c5)) AND ((rt0.c1, rt0.c1, rt0.c4))))))OR(CASE WHEN rt0.c5 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c2)))OR((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c5)) AND ((rt0.c1, rt0.c1, rt0.c4))))))OR(CASE WHEN rt0.c5 THEN rt0.c5 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c2)))OR((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c5)) AND ((rt0.c1, rt0.c1, rt0.c4))))))OR(CASE WHEN rt0.c5 THEN rt0.c5 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c2)))OR((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c5)) AND ((rt0.c1, rt0.c1, rt0.c4))))))OR(CASE WHEN rt0.c5 THEN rt0.c5 END)));
SELECT * FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY ((((((rt0.c0) IS FALSE))AND((~ (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x'')))), CASE WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN NULLIF(rt0.c3, rt0.c4) END;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS FALSE))AND((~ (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x'')))), CASE WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN NULLIF(rt0.c3, rt0.c4) END);
SELECT * FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY ((((((rt0.c0) IS FALSE))AND((~ (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x'')))), CASE WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN NULLIF(rt0.c3, rt0.c4) END;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) IS FALSE))AND((~ (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x'')))), CASE WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN NULLIF(rt0.c3, rt0.c4) END);
SELECT * FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) ORDER BY ((((((rt0.c0) IS FALSE))AND((~ (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (x'')))), CASE WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN NULLIF(rt0.c3, rt0.c4) END;
SELECT * FROM t0, rt0 WHERE (((CASE WHEN 0.9965999030942478 THEN t0.c1 END)>(((x'')IS(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.9965999030942478 THEN t0.c1 END)>(((x'')IS(t0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CASE WHEN 0.9965999030942478 THEN t0.c1 END)>(((x'')IS(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.9965999030942478 THEN t0.c1 END)>(((x'')IS(t0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CASE WHEN 0.9965999030942478 THEN t0.c1 END)>(((x'')IS(t0.c1)))));
SELECT ALL * FROM rt0 WHERE ((('4e')%(((rt0.c5)<(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((('4e')%(((rt0.c5)<(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((('4e')%(((rt0.c5)<(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((('4e')%(((rt0.c5)<(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((('4e')%(((rt0.c5)<(rt0.c4)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)) COLLATE RTRIM) ORDER BY CAST((+ (rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((+ (rt0.c1)) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)) COLLATE RTRIM) ORDER BY CAST((+ (rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((+ (rt0.c1)) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)) COLLATE RTRIM) ORDER BY CAST((+ (rt0.c1)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('993545866');
SELECT SUM(count) FROM (SELECT ALL (('993545866') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('993545866');
SELECT SUM(count) FROM (SELECT ALL (('993545866') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('993545866');
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c3) IS FALSE)) NOT BETWEEN (t0.c0) AND (0xffffffffd487a381))) ORDER BY (+ (('FD' IN ()))) ASC  NULLS LAST, rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS FALSE)) NOT BETWEEN (t0.c0) AND (0xffffffffd487a381))) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (('FD' IN ()))) ASC  NULLS LAST, rt0.c5);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c3) IS FALSE)) NOT BETWEEN (t0.c0) AND (0xffffffffd487a381))) ORDER BY (+ (('FD' IN ()))) ASC  NULLS LAST, rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS FALSE)) NOT BETWEEN (t0.c0) AND (0xffffffffd487a381))) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (('FD' IN ()))) ASC  NULLS LAST, rt0.c5);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c3) IS FALSE)) NOT BETWEEN (t0.c0) AND (0xffffffffd487a381))) ORDER BY (+ (('FD' IN ()))) ASC  NULLS LAST, rt0.c5;
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)IS NOT(rt0.c5))  WHEN ((rt0.c2)||(rt0.c2)) THEN (((rt0.c5)) NOT BETWEEN ((NULL)) AND ((rt0.c5))) WHEN CAST(rt0.c4 AS REAL) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END ELSE CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN x'ed2b' ELSE rt0.c4 END END) ORDER BY (((rt0.c3)%(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)IS NOT(rt0.c5))  WHEN ((rt0.c2)||(rt0.c2)) THEN (((rt0.c5)) NOT BETWEEN ((NULL)) AND ((rt0.c5))) WHEN CAST(rt0.c4 AS REAL) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END ELSE CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN x'ed2b' ELSE rt0.c4 END END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)%(rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)IS NOT(rt0.c5))  WHEN ((rt0.c2)||(rt0.c2)) THEN (((rt0.c5)) NOT BETWEEN ((NULL)) AND ((rt0.c5))) WHEN CAST(rt0.c4 AS REAL) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END ELSE CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN x'ed2b' ELSE rt0.c4 END END) ORDER BY (((rt0.c3)%(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)IS NOT(rt0.c5))  WHEN ((rt0.c2)||(rt0.c2)) THEN (((rt0.c5)) NOT BETWEEN ((NULL)) AND ((rt0.c5))) WHEN CAST(rt0.c4 AS REAL) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END ELSE CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN x'ed2b' ELSE rt0.c4 END END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)%(rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c1)IS NOT(rt0.c5))  WHEN ((rt0.c2)||(rt0.c2)) THEN (((rt0.c5)) NOT BETWEEN ((NULL)) AND ((rt0.c5))) WHEN CAST(rt0.c4 AS REAL) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c3 END ELSE CASE WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN x'ed2b' ELSE rt0.c4 END END) ORDER BY (((rt0.c3)%(rt0.c2)) IN ());
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN TYPEOF(t0.c1) THEN ((t0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE BINARY  WHEN TYPEOF(t0.c1) THEN ((t0.c2) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN TYPEOF(t0.c1) THEN ((t0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE BINARY  WHEN TYPEOF(t0.c1) THEN ((t0.c2) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN TYPEOF(t0.c1) THEN ((t0.c2) IS FALSE) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((' Q]T<wSH-')OR((- (rt0.c4)))))AND((t0.c1 IN (t0.c1))))) ORDER BY ((('j)')<=(0.8503805282433693)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((' Q]T<wSH-')OR((- (rt0.c4)))))AND((t0.c1 IN (t0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((('j)')<=(0.8503805282433693)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((' Q]T<wSH-')OR((- (rt0.c4)))))AND((t0.c1 IN (t0.c1))))) ORDER BY ((('j)')<=(0.8503805282433693)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((' Q]T<wSH-')OR((- (rt0.c4)))))AND((t0.c1 IN (t0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((('j)')<=(0.8503805282433693)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((' Q]T<wSH-')OR((- (rt0.c4)))))AND((t0.c1 IN (t0.c1))))) ORDER BY ((('j)')<=(0.8503805282433693)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c2)AND(((rt0.c3)IS NOT(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)AND(((rt0.c3)IS NOT(t0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c2)AND(((rt0.c3)IS NOT(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)AND(((rt0.c3)IS NOT(t0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c2)AND(((rt0.c3)IS NOT(t0.c2)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((NULLIF(t0.c2, rt0.c3)))) WHERE ((((((((rt0.c3))>=((rt0.c3))))AND(0.5951383630057583)))AND((((t0.c2))>((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3))>=((rt0.c3))))AND(0.5951383630057583)))AND((((t0.c2))>((t0.c1)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((NULLIF(t0.c2, rt0.c3)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((NULLIF(t0.c2, rt0.c3)))) WHERE ((((((((rt0.c3))>=((rt0.c3))))AND(0.5951383630057583)))AND((((t0.c2))>((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3))>=((rt0.c3))))AND(0.5951383630057583)))AND((((t0.c2))>((t0.c1)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((NULLIF(t0.c2, rt0.c3)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((NULLIF(t0.c2, rt0.c3)))) WHERE ((((((((rt0.c3))>=((rt0.c3))))AND(0.5951383630057583)))AND((((t0.c2))>((t0.c1))))));
SELECT ALL * FROM rt0 WHERE ('-1972919873') ORDER BY ((((rt0.c4)>=(rt0.c3))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1972919873') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)>=(rt0.c3))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ('-1972919873') ORDER BY ((((rt0.c4)>=(rt0.c3))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1972919873') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)>=(rt0.c3))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ('-1972919873') ORDER BY ((((rt0.c4)>=(rt0.c3))) IS FALSE)  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (-723823040) AND (rt0.c2)))+('1263246942' COLLATE RTRIM))) ORDER BY CAST((rt0.c3 IN (rt0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (-723823040) AND (rt0.c2)))+('1263246942' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c3 IN (rt0.c2)) AS TEXT) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (-723823040) AND (rt0.c2)))+('1263246942' COLLATE RTRIM))) ORDER BY CAST((rt0.c3 IN (rt0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (-723823040) AND (rt0.c2)))+('1263246942' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c3 IN (rt0.c2)) AS TEXT) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (-723823040) AND (rt0.c2)))+('1263246942' COLLATE RTRIM))) ORDER BY CAST((rt0.c3 IN (rt0.c2)) AS TEXT) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((rt0.c2 IN (t0.c0)) COLLATE RTRIM) ORDER BY t0.c1 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c1 COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((rt0.c2 IN (t0.c0)) COLLATE RTRIM) ORDER BY t0.c1 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c1 COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((rt0.c2 IN (t0.c0)) COLLATE RTRIM) ORDER BY t0.c1 COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((-1590994639 IN ()));
SELECT SUM(count) FROM (SELECT (((-1590994639 IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((-1590994639 IN ()));
SELECT SUM(count) FROM (SELECT (((-1590994639 IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((-1590994639 IN ()));
SELECT * FROM rt0, t0 WHERE (rt0.c1) ORDER BY ((NOT (rt0.c1)) IN ((+ (rt0.c1)), t0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NOT (rt0.c1)) IN ((+ (rt0.c1)), t0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (rt0.c1) ORDER BY ((NOT (rt0.c1)) IN ((+ (rt0.c1)), t0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NOT (rt0.c1)) IN ((+ (rt0.c1)), t0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (rt0.c1) ORDER BY ((NOT (rt0.c1)) IN ((+ (rt0.c1)), t0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON TRIM(DISTINCT COALESCE(t0.c0, rt0.c3), ((rt0.c4)GLOB(NULL))) WHERE ('-1477195257') ORDER BY CASE WHEN (('')<>(t0.c0)) THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (5.16417057E8)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1477195257') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON TRIM(DISTINCT COALESCE(t0.c0, rt0.c3), ((rt0.c4)GLOB(NULL))) ORDER BY CASE WHEN (('')!=(t0.c0)) THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (5.16417057E8)) END  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON TRIM(DISTINCT COALESCE(t0.c0, rt0.c3), ((rt0.c4)GLOB(NULL))) WHERE ('-1477195257') ORDER BY CASE WHEN (('')<>(t0.c0)) THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (5.16417057E8)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1477195257') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON TRIM(DISTINCT COALESCE(t0.c0, rt0.c3), ((rt0.c4)GLOB(NULL))) ORDER BY CASE WHEN (('')!=(t0.c0)) THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (5.16417057E8)) END  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON TRIM(DISTINCT COALESCE(t0.c0, rt0.c3), ((rt0.c4)GLOB(NULL))) WHERE ('-1477195257') ORDER BY CASE WHEN (('')<>(t0.c0)) THEN ((rt0.c3)>=(rt0.c1)) ELSE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (5.16417057E8)) END  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (LOWER(t0.c0) COLLATE RTRIM) ORDER BY ((((HEX(DISTINCT t0.c2))OR(((((((((t0.c1)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c5)))))OR(CAST(rt0.c2 AS BLOB)))  NULLS FIRST, NULL, ((((((((((((LENGTH(t0.c1))OR(ROUND(t0.c1, rt0.c5))))AND((rt0.c2 IN (rt0.c1)))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((rt0.c2 IN ()))))AND(((rt0.c5)&(rt0.c5)))))AND(((rt0.c4)<=(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((HEX(DISTINCT t0.c2))OR(((((((((t0.c1)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c5)))))OR(CAST(rt0.c2 AS BLOB)))  NULLS FIRST, NULL, ((((((((((((LENGTH(t0.c1))OR(ROUND(t0.c1, rt0.c5))))AND((rt0.c2 IN (rt0.c1)))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((rt0.c2 IN ()))))AND(((rt0.c5)&(rt0.c5)))))AND(((rt0.c4)<=(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (LOWER(t0.c0) COLLATE RTRIM) ORDER BY ((((HEX(DISTINCT t0.c2))OR(((((((((t0.c1)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c5)))))OR(CAST(rt0.c2 AS BLOB)))  NULLS FIRST, NULL, ((((((((((((LENGTH(t0.c1))OR(ROUND(t0.c1, rt0.c5))))AND((rt0.c2 IN (rt0.c1)))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((rt0.c2 IN ()))))AND(((rt0.c5)&(rt0.c5)))))AND(((rt0.c4)<=(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((HEX(DISTINCT t0.c2))OR(((((((((t0.c1)OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c5)))))OR(CAST(rt0.c2 AS BLOB)))  NULLS FIRST, NULL, ((((((((((((LENGTH(t0.c1))OR(ROUND(t0.c1, rt0.c5))))AND((rt0.c2 IN (rt0.c1)))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((rt0.c2 IN ()))))AND(((rt0.c5)&(rt0.c5)))))AND(((rt0.c4)<=(rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_GET((((t0.c2))>=((rt0.c3)))) WHERE ((~ (rt0.c5 COLLATE NOCASE))) ORDER BY CASE WHEN rt0.c2 THEN t0.c1 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST, json_object(rt0.c2 COLLATE BINARY, ((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_GET((((t0.c2))>=((rt0.c3)))) ORDER BY CASE WHEN rt0.c2 THEN t0.c1 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST, json_object(rt0.c2 COLLATE BINARY, ((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) DESC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_GET((((t0.c2))>=((rt0.c3)))) WHERE ((~ (rt0.c5 COLLATE NOCASE))) ORDER BY CASE WHEN rt0.c2 THEN t0.c1 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST, json_object(rt0.c2 COLLATE BINARY, ((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON SQLITE_COMPILEOPTION_GET((((t0.c2))>=((rt0.c3)))) ORDER BY CASE WHEN rt0.c2 THEN t0.c1 ELSE t0.c0 END COLLATE NOCASE  NULLS FIRST, json_object(rt0.c2 COLLATE BINARY, ((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (-723823040) ORDER BY LOWER(rt0.c3)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-723823040) IS TRUE)  as count FROM t0, rt0 ORDER BY LOWER(rt0.c3)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (-723823040) ORDER BY LOWER(rt0.c3)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-723823040) IS TRUE)  as count FROM t0, rt0 ORDER BY LOWER(rt0.c3)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (-723823040) ORDER BY LOWER(rt0.c3)  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0 IN (rt0.c5, t0.c1)))GLOB((((rt0.c5, rt0.c5, rt0.c3))>((rt0.c3, rt0.c3, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt0.c5, t0.c1)))GLOB((((rt0.c5, rt0.c5, rt0.c3))>((rt0.c3, rt0.c3, rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0 IN (rt0.c5, t0.c1)))GLOB((((rt0.c5, rt0.c5, rt0.c3))>((rt0.c3, rt0.c3, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt0.c5, t0.c1)))GLOB((((rt0.c5, rt0.c5, rt0.c3))>((rt0.c3, rt0.c3, rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0 IN (rt0.c5, t0.c1)))GLOB((((rt0.c5, rt0.c5, rt0.c3))>((rt0.c3, rt0.c3, rt0.c0))))));
SELECT * FROM t0 WHERE (CAST((t0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((t0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((t0.c0 IN ()) AS REAL));
SELECT * FROM t0, rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END COLLATE NOCASE) ORDER BY CAST((+ (rt0.c5)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c5)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END COLLATE NOCASE) ORDER BY CAST((+ (rt0.c5)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c5)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END COLLATE NOCASE) ORDER BY CAST((+ (rt0.c5)) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))OR(t0.c1)) AS NUMERIC)) ORDER BY (t0.c2 COLLATE BINARY IN (CASE t0.c2  WHEN t0.c0 THEN 'd*' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c0)))OR(t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (t0.c2 COLLATE BINARY IN (CASE t0.c2  WHEN t0.c0 THEN 'd*' END)) ASC);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))OR(t0.c1)) AS NUMERIC)) ORDER BY (t0.c2 COLLATE BINARY IN (CASE t0.c2  WHEN t0.c0 THEN 'd*' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c0)))OR(t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (t0.c2 COLLATE BINARY IN (CASE t0.c2  WHEN t0.c0 THEN 'd*' END)) ASC);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c0)))OR(t0.c1)) AS NUMERIC)) ORDER BY (t0.c2 COLLATE BINARY IN (CASE t0.c2  WHEN t0.c0 THEN 'd*' END)) ASC;
SELECT * FROM t0, rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5 COLLATE NOCASE))));
SELECT COUNT(*) FROM t0 WHERE ((('-1241497303') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-1241497303') ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((('-1241497303') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-1241497303') ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((('-1241497303') ISNULL));
SELECT * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c5)) BETWEEN ((rt0.c3, rt0.c5, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c0, rt0.c5)) BETWEEN ((rt0.c3, rt0.c5, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c5)) BETWEEN ((rt0.c3, rt0.c5, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0, rt0.c0, rt0.c5)) BETWEEN ((rt0.c3, rt0.c5, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c0, rt0.c5)) BETWEEN ((rt0.c3, rt0.c5, rt0.c1)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c5)<=(rt0.c2)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c5)<=(rt0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c5)<=(rt0.c2)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c5)<=(rt0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c5)<=(rt0.c2)) THEN rt0.c2 END);
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN ((((t0.c2))<=((t0.c0)))) AND (((t0.c1)|(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) NOT BETWEEN ((((t0.c2))<=((t0.c0)))) AND (((t0.c1)|(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN ((((t0.c2))<=((t0.c0)))) AND (((t0.c1)|(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL)) NOT BETWEEN ((((t0.c2))<=((t0.c0)))) AND (((t0.c1)|(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN ((((t0.c2))<=((t0.c0)))) AND (((t0.c1)|(t0.c2)))));
SELECT * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))IS NOT((((0.28927911875957857)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) ORDER BY (((((NULL) IS FALSE), ((t0.c1)<(t0.c0)), CAST(t0.c0 AS BLOB)))<((CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN 0.25266985969351474 THEN x'' WHEN 0Xffffffff969f13de THEN t0.c2 ELSE t0.c0 END, CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END, (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) DESC  NULLS LAST, (((t0.c2)>=(t0.c2)) IN ()) DESC  NULLS LAST, t0.c1;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))IS NOT((((0.28927911875957857)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY (((((NULL) IS FALSE), ((t0.c1)<(t0.c0)), CAST(t0.c0 AS BLOB)))<((CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN 0.25266985969351474 THEN x'' WHEN 0xffffffff969f13de THEN t0.c2 ELSE t0.c0 END, CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END, (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) DESC  NULLS LAST, (((t0.c2)>=(t0.c2)) IN ()) DESC  NULLS LAST, t0.c1);
SELECT * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))IS NOT((((0.28927911875957857)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) ORDER BY (((((NULL) IS FALSE), ((t0.c1)<(t0.c0)), CAST(t0.c0 AS BLOB)))<((CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN 0.25266985969351474 THEN x'' WHEN 0Xffffffff969f13de THEN t0.c2 ELSE t0.c0 END, CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END, (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) DESC  NULLS LAST, (((t0.c2)>=(t0.c2)) IN ()) DESC  NULLS LAST, t0.c1;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))IS NOT((((0.28927911875957857)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY (((((NULL) IS FALSE), ((t0.c1)<(t0.c0)), CAST(t0.c0 AS BLOB)))<((CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN 0.25266985969351474 THEN x'' WHEN 0xffffffff969f13de THEN t0.c2 ELSE t0.c0 END, CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END, (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) DESC  NULLS LAST, (((t0.c2)>=(t0.c2)) IN ()) DESC  NULLS LAST, t0.c1);
SELECT * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))IS NOT((((0.28927911875957857)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) ORDER BY (((((NULL) IS FALSE), ((t0.c1)<(t0.c0)), CAST(t0.c0 AS BLOB)))<((CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN 0.25266985969351474 THEN x'' WHEN 0Xffffffff969f13de THEN t0.c2 ELSE t0.c0 END, CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END, (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) DESC  NULLS LAST, (((t0.c2)>=(t0.c2)) IN ()) DESC  NULLS LAST, t0.c1;
SELECT * FROM rt0 WHERE ((((rt0.c0)*(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)*(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)*(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)*(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)*(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c5)) NOT BETWEEN (((((rt0.c4))<(('-919407349'))))) AND ((UNLIKELY(DISTINCT rt0.c5))))) ORDER BY ((rt0.c4) NOTNULL) COLLATE BINARY  NULLS LAST, ((((rt0.c2)<<(rt0.c3))) NOT BETWEEN ((((rt0.c2))>=((rt0.c5)))) AND ((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN (((((rt0.c4))<(('-919407349'))))) AND ((UNLIKELY(DISTINCT rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4) NOTNULL) COLLATE BINARY  NULLS LAST, ((((rt0.c2)<<(rt0.c3))) NOT BETWEEN ((((rt0.c2))>=((rt0.c5)))) AND ((rt0.c3 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c5)) NOT BETWEEN (((((rt0.c4))<(('-919407349'))))) AND ((UNLIKELY(DISTINCT rt0.c5))))) ORDER BY ((rt0.c4) NOTNULL) COLLATE BINARY  NULLS LAST, ((((rt0.c2)<<(rt0.c3))) NOT BETWEEN ((((rt0.c2))>=((rt0.c5)))) AND ((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN (((((rt0.c4))<(('-919407349'))))) AND ((UNLIKELY(DISTINCT rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4) NOTNULL) COLLATE BINARY  NULLS LAST, ((((rt0.c2)<<(rt0.c3))) NOT BETWEEN ((((rt0.c2))>=((rt0.c5)))) AND ((rt0.c3 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c5)) NOT BETWEEN (((((rt0.c4))<(('-919407349'))))) AND ((UNLIKELY(DISTINCT rt0.c5))))) ORDER BY ((rt0.c4) NOTNULL) COLLATE BINARY  NULLS LAST, ((((rt0.c2)<<(rt0.c3))) NOT BETWEEN ((((rt0.c2))>=((rt0.c5)))) AND ((rt0.c3 IN ())));
SELECT * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c1 THEN t0.c1 END) NOTNULL)) ORDER BY x''  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN t0.c1 THEN t0.c1 END) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY x''  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS REAL)  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c1 THEN t0.c1 END) NOTNULL)) ORDER BY x''  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN t0.c1 THEN t0.c1 END) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY x''  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS REAL)  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE t0.c2  WHEN t0.c1 THEN t0.c1 END) NOTNULL)) ORDER BY x''  NULLS FIRST, CAST(((t0.c2) IS TRUE) AS REAL)  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (CASE (((rt0.c4, rt0.c5, rt0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c3, rt0.c3)) AND ((t0.c0, t0.c1, rt0.c1, t0.c0, rt0.c0)))  WHEN COALESCE(rt0.c5, rt0.c3) THEN (NOT (rt0.c2)) END) ORDER BY (((rt0.c3, t0.c1, '0.7596553152423411'))<(('t[ïq**', (t0.c1 IN ()), ((rt0.c5) NOT BETWEEN (x'') AND (t0.c1))))), CAST(((rt0.c4)OR(rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c4, rt0.c5, rt0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c3, rt0.c3)) AND ((t0.c0, t0.c1, rt0.c1, t0.c0, rt0.c0)))  WHEN COALESCE(rt0.c5, rt0.c3) THEN (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c3, t0.c1, '0.7596553152423411'))<(('t[ïq**', (t0.c1 IN ()), ((rt0.c5) NOT BETWEEN (x'') AND (t0.c1))))), CAST(((rt0.c4)OR(rt0.c2)) AS BLOB));
SELECT * FROM rt0, t0 WHERE (CASE (((rt0.c4, rt0.c5, rt0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c3, rt0.c3)) AND ((t0.c0, t0.c1, rt0.c1, t0.c0, rt0.c0)))  WHEN COALESCE(rt0.c5, rt0.c3) THEN (NOT (rt0.c2)) END) ORDER BY (((rt0.c3, t0.c1, '0.7596553152423411'))<(('t[ïq**', (t0.c1 IN ()), ((rt0.c5) NOT BETWEEN (x'') AND (t0.c1))))), CAST(((rt0.c4)OR(rt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c4, rt0.c5, rt0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c3, rt0.c3)) AND ((t0.c0, t0.c1, rt0.c1, t0.c0, rt0.c0)))  WHEN COALESCE(rt0.c5, rt0.c3) THEN (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c3, t0.c1, '0.7596553152423411'))<(('t[ïq**', (t0.c1 IN ()), ((rt0.c5) NOT BETWEEN (x'') AND (t0.c1))))), CAST(((rt0.c4)OR(rt0.c2)) AS BLOB));
SELECT * FROM rt0, t0 WHERE (CASE (((rt0.c4, rt0.c5, rt0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, rt0.c3, rt0.c3)) AND ((t0.c0, t0.c1, rt0.c1, t0.c0, rt0.c0)))  WHEN COALESCE(rt0.c5, rt0.c3) THEN (NOT (rt0.c2)) END) ORDER BY (((rt0.c3, t0.c1, '0.7596553152423411'))<(('t[ïq**', (t0.c1 IN ()), ((rt0.c5) NOT BETWEEN (x'') AND (t0.c1))))), CAST(((rt0.c4)OR(rt0.c2)) AS BLOB);
SELECT * FROM t0, rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC));
SELECT * FROM rt0 INDEXED BY i23, t0 WHERE (((HEX(t0.c0)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((rt0.c0)GLOB(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((HEX(t0.c0)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((rt0.c0)GLOB(t0.c2))))) IS TRUE)  as count FROM rt0 INDEXED BY i23, t0);
SELECT * FROM rt0 INDEXED BY i23, t0 WHERE (((HEX(t0.c0)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((rt0.c0)GLOB(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((HEX(t0.c0)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((rt0.c0)GLOB(t0.c2))))) IS TRUE)  as count FROM rt0 INDEXED BY i23, t0);
SELECT * FROM t0, rt0 WHERE (((NOT (rt0.c1)) IN (((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c1)) IN (((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((NOT (rt0.c1)) IN (((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c1)) IN (((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((NOT (rt0.c1)) IN (((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)))));
SELECT * FROM rt0 WHERE (((((((((((rt0.c3)+(rt0.c3)))AND(((rt0.c2)>>(rt0.c2)))))OR(NULLIF(rt0.c2, rt0.c2))))AND((((rt0.c4))<((rt0.c5))))))OR((~ (rt0.c0))))) ORDER BY (((rt0.c1 IN (rt0.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)+(rt0.c3)))AND(((rt0.c2)>>(rt0.c2)))))OR(NULLIF(rt0.c2, rt0.c2))))AND((((rt0.c4))<((rt0.c5))))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c2))) NOT NULL) DESC);
SELECT * FROM rt0 WHERE (((((((((((rt0.c3)+(rt0.c3)))AND(((rt0.c2)>>(rt0.c2)))))OR(NULLIF(rt0.c2, rt0.c2))))AND((((rt0.c4))<((rt0.c5))))))OR((~ (rt0.c0))))) ORDER BY (((rt0.c1 IN (rt0.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c3)+(rt0.c3)))AND(((rt0.c2)>>(rt0.c2)))))OR(NULLIF(rt0.c2, rt0.c2))))AND((((rt0.c4))<((rt0.c5))))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c2))) NOT NULL) DESC);
SELECT * FROM rt0 WHERE (((((((((((rt0.c3)+(rt0.c3)))AND(((rt0.c2)>>(rt0.c2)))))OR(NULLIF(rt0.c2, rt0.c2))))AND((((rt0.c4))<((rt0.c5))))))OR((~ (rt0.c0))))) ORDER BY (((rt0.c1 IN (rt0.c2))) NOT NULL) DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))AND(((rt0.c2)/(rt0.c0)))))AND((((t0.c0, t0.c1, rt0.c3))>((t0.c2, rt0.c2, t0.c1)))))) ORDER BY ((CAST(rt0.c5 AS TEXT))<>(rt0.c4 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))AND(((rt0.c2)/(rt0.c0)))))AND((((t0.c0, t0.c1, rt0.c3))>((t0.c2, rt0.c2, t0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c5 AS TEXT))<>(rt0.c4 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))AND(((rt0.c2)/(rt0.c0)))))AND((((t0.c0, t0.c1, rt0.c3))>((t0.c2, rt0.c2, t0.c1)))))) ORDER BY ((CAST(rt0.c5 AS TEXT))<>(rt0.c4 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))AND(((rt0.c2)/(rt0.c0)))))AND((((t0.c0, t0.c1, rt0.c3))>((t0.c2, rt0.c2, t0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c5 AS TEXT))<>(rt0.c4 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))AND(((rt0.c2)/(rt0.c0)))))AND((((t0.c0, t0.c1, rt0.c3))>((t0.c2, rt0.c2, t0.c1)))))) ORDER BY ((CAST(rt0.c5 AS TEXT))<>(rt0.c4 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT ((t0.c0)|(t0.c1)), ((x'77bbb7cb')-(t0.c1)), t0.c0, t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((t0.c0)|(t0.c1)), ((x'77bbb7cb')-(t0.c1)), t0.c0, t0.c1 COLLATE BINARY)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT ((t0.c0)|(t0.c1)), ((x'77bbb7cb')-(t0.c1)), t0.c0, t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((t0.c0)|(t0.c1)), ((x'77bbb7cb')-(t0.c1)), t0.c0, t0.c1 COLLATE BINARY)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT ((t0.c0)|(t0.c1)), ((x'77bbb7cb')-(t0.c1)), t0.c0, t0.c1 COLLATE BINARY));
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c0)))OR(rt0.c4)))AND(rt0.c5)) ELSE LIKE(rt0.c0, t0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c0)))OR(rt0.c4)))AND(rt0.c5)) ELSE LIKE(rt0.c0, t0.c1) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c0)))OR(rt0.c4)))AND(rt0.c5)) ELSE LIKE(rt0.c0, t0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c0)))OR(rt0.c4)))AND(rt0.c5)) ELSE LIKE(rt0.c0, t0.c1) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)) THEN ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c0)))OR(rt0.c4)))AND(rt0.c5)) ELSE LIKE(rt0.c0, t0.c1) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((t0.c1)AND(rt0.c3)))AND(t0.c1)))AND(rt0.c0)))OR(t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c1)AND(rt0.c3)))AND(t0.c1)))AND(rt0.c0)))OR(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((t0.c1)AND(rt0.c3)))AND(t0.c1)))AND(rt0.c0)))OR(t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c1)AND(rt0.c3)))AND(t0.c1)))AND(rt0.c0)))OR(t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((t0.c1)AND(rt0.c3)))AND(t0.c1)))AND(rt0.c0)))OR(t0.c1)) COLLATE RTRIM);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON -1.092191962E9 COLLATE NOCASE WHERE (((((((t0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT NULL))))) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c0)>=(rt0.c3))) AND (rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON -1.092191962E9 COLLATE NOCASE ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c0)>=(rt0.c3))) AND (rt0.c3))  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON -1.092191962E9 COLLATE NOCASE WHERE (((((((t0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT NULL))))) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c0)>=(rt0.c3))) AND (rt0.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON -1.092191962E9 COLLATE NOCASE ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c0)>=(rt0.c3))) AND (rt0.c3))  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON -1.092191962E9 COLLATE NOCASE WHERE (((((((t0.c1))>=((rt0.c0)))))<=((((rt0.c2) NOT NULL))))) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c0)>=(rt0.c3))) AND (rt0.c3))  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((- (rt0.c3))) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c3))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE) ASC);
SELECT ALL * FROM t0, rt0 WHERE ((- (rt0.c3))) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c3))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE) ASC);
SELECT ALL * FROM t0, rt0 WHERE ((- (rt0.c3))) ORDER BY ((rt0.c2 COLLATE BINARY) IS FALSE) ASC;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT BETWEEN ((rt0.c4 IN (rt0.c0))) AND (t0.c2 COLLATE RTRIM)) WHERE ((((((t0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<(((+ (0.17752867930702598)))))) ORDER BY ((((((((((((((t0.c0)&(rt0.c0)))AND(rt0.c2)))OR(((t0.c0) BETWEEN (rt0.c5) AND (rt0.c4)))))OR((~ (rt0.c5)))))OR(CAST(rt0.c0 AS TEXT))))AND((- ('qæ£¢')))))AND(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<(((+ (0.17752867930702598)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT BETWEEN ((rt0.c4 IN (rt0.c0))) AND (t0.c2 COLLATE RTRIM)) ORDER BY ((((((((((((((t0.c0)&(rt0.c0)))AND(rt0.c2)))OR(((t0.c0) BETWEEN (rt0.c5) AND (rt0.c4)))))OR((~ (rt0.c5)))))OR(CAST(rt0.c0 AS TEXT))))AND((- ('qæ£¢')))))AND(((t0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT BETWEEN ((rt0.c4 IN (rt0.c0))) AND (t0.c2 COLLATE RTRIM)) WHERE ((((((t0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<(((+ (0.17752867930702598)))))) ORDER BY ((((((((((((((t0.c0)&(rt0.c0)))AND(rt0.c2)))OR(((t0.c0) BETWEEN (rt0.c5) AND (rt0.c4)))))OR((~ (rt0.c5)))))OR(CAST(rt0.c0 AS TEXT))))AND((- ('qæ£¢')))))AND(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<(((+ (0.17752867930702598)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT BETWEEN ((rt0.c4 IN (rt0.c0))) AND (t0.c2 COLLATE RTRIM)) ORDER BY ((((((((((((((t0.c0)&(rt0.c0)))AND(rt0.c2)))OR(((t0.c0) BETWEEN (rt0.c5) AND (rt0.c4)))))OR((~ (rt0.c5)))))OR(CAST(rt0.c0 AS TEXT))))AND((- ('qæ£¢')))))AND(((t0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT BETWEEN ((rt0.c4 IN (rt0.c0))) AND (t0.c2 COLLATE RTRIM)) WHERE ((((((t0.c1) BETWEEN (rt0.c0) AND (t0.c2))))<(((+ (0.17752867930702598)))))) ORDER BY ((((((((((((((t0.c0)&(rt0.c0)))AND(rt0.c2)))OR(((t0.c0) BETWEEN (rt0.c5) AND (rt0.c4)))))OR((~ (rt0.c5)))))OR(CAST(rt0.c0 AS TEXT))))AND((- ('qæ£¢')))))AND(((t0.c2) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE t0.c1 END)GLOB((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE t0.c1 END)GLOB((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE t0.c1 END)GLOB((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE t0.c1 END)GLOB((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 ELSE t0.c1 END)GLOB((NOT (rt0.c1)))));
SELECT ALL * FROM t0 WHERE (NULLIF(t0.c1 COLLATE NOCASE, ((t0.c1)/(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c1 COLLATE NOCASE, ((t0.c1)/(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(t0.c1 COLLATE NOCASE, ((t0.c1)/(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c1 COLLATE NOCASE, ((t0.c1)/(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(t0.c1 COLLATE NOCASE, ((t0.c1)/(t0.c1))));
SELECT * FROM t0 WHERE ((('593351304') IS TRUE)) ORDER BY (('-1905916379') IS FALSE);
SELECT SUM(count) FROM (SELECT (((('593351304') IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (('-1905916379') IS FALSE));
SELECT * FROM t0 WHERE ((('593351304') IS TRUE)) ORDER BY (('-1905916379') IS FALSE);
SELECT SUM(count) FROM (SELECT (((('593351304') IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY (('-1905916379') IS FALSE));
SELECT * FROM t0 WHERE ((('593351304') IS TRUE)) ORDER BY (('-1905916379') IS FALSE);
SELECT * FROM rt0 WHERE (CAST(rt0.c5 AS NUMERIC) COLLATE NOCASE) ORDER BY (NOT (CAST(rt0.c4 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c5 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c4 AS NUMERIC))));
SELECT * FROM rt0 WHERE (CAST(rt0.c5 AS NUMERIC) COLLATE NOCASE) ORDER BY (NOT (CAST(rt0.c4 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c5 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c4 AS NUMERIC))));
SELECT * FROM rt0 WHERE (CAST(rt0.c5 AS NUMERIC) COLLATE NOCASE) ORDER BY (NOT (CAST(rt0.c4 AS NUMERIC)));
SELECT * FROM rt0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(x'' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(x'' AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c1) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c1) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c1) NOTNULL) AS INTEGER));
SELECT * FROM rt0, t0 WHERE ((((- (rt0.c5))) NOTNULL)) ORDER BY ((((rt0.c4)<=(0.12466186396390844)))<(9.84448165E8)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c5))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c4)<=(0.12466186396390844)))<(9.84448165E8)) DESC);
SELECT * FROM rt0, t0 WHERE ((((- (rt0.c5))) NOTNULL)) ORDER BY ((((rt0.c4)<=(0.12466186396390844)))<(9.84448165E8)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c5))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c4)<=(0.12466186396390844)))<(9.84448165E8)) DESC);
SELECT * FROM rt0, t0 WHERE ((((- (rt0.c5))) NOTNULL)) ORDER BY ((((rt0.c4)<=(0.12466186396390844)))<(9.84448165E8)) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((0xffffffffeea80bd9))))<(-1.562607586E9))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (CAST(rt0.c3 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((0Xffffffffeea80bd9))))<(-1.562607586E9))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (CAST(rt0.c3 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((0xffffffffeea80bd9))))<(-1.562607586E9))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (CAST(rt0.c3 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((0Xffffffffeea80bd9))))<(-1.562607586E9))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (CAST(rt0.c3 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((0xffffffffeea80bd9))))<(-1.562607586E9))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (CAST(rt0.c5 AS INTEGER)) AND (CAST(rt0.c3 AS BLOB)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c1) ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0)))) AND (LOWER(t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0)))) AND (LOWER(t0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c1) ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0)))) AND (LOWER(t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0)))) AND (LOWER(t0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c1) ORDER BY ((rt0.c4 COLLATE RTRIM) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0)))) AND (LOWER(t0.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)OR(CAST(rt0.c5 AS TEXT))))AND(((rt0.c5)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)OR(CAST(rt0.c5 AS TEXT))))AND(((rt0.c5)<<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)OR(CAST(rt0.c5 AS TEXT))))AND(((rt0.c5)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)OR(CAST(rt0.c5 AS TEXT))))AND(((rt0.c5)<<(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)OR(CAST(rt0.c5 AS TEXT))))AND(((rt0.c5)<<(rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE 0.0  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN CAST(rt0.c5 AS REAL) WHEN rt0.c2 THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'')) ELSE ((NULL) ISNULL) END) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.0  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN CAST(rt0.c5 AS REAL) WHEN rt0.c2 THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'')) ELSE ((NULL) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE 0.0  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN CAST(rt0.c5 AS REAL) WHEN rt0.c2 THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'')) ELSE ((NULL) ISNULL) END) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.0  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN CAST(rt0.c5 AS REAL) WHEN rt0.c2 THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'')) ELSE ((NULL) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE 0.0  WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END THEN CAST(rt0.c5 AS REAL) WHEN rt0.c2 THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'')) ELSE ((NULL) ISNULL) END) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)>=(rt0.c2)) END;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c3 WHEN 0.6103219246502429 THEN rt0.c3 END COLLATE RTRIM WHERE (((rt0.c5 COLLATE BINARY)>(((NULL)/('662172209')))));
SELECT SUM(count) FROM (SELECT ((((rt0.c5 COLLATE BINARY)>(((NULL)/('662172209'))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c3 WHEN 0.6103219246502429 THEN rt0.c3 END COLLATE RTRIM);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c3 WHEN 0.6103219246502429 THEN rt0.c3 END COLLATE RTRIM WHERE (((rt0.c5 COLLATE BINARY)>(((NULL)/('662172209')))));
SELECT SUM(count) FROM (SELECT ((((rt0.c5 COLLATE BINARY)>(((NULL)/('662172209'))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c3 WHEN 0.6103219246502429 THEN rt0.c3 END COLLATE RTRIM);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c3 WHEN 0.6103219246502429 THEN rt0.c3 END COLLATE RTRIM WHERE (((rt0.c5 COLLATE BINARY)>(((NULL)/('662172209')))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE));
SELECT * FROM rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN rt0.c1 COLLATE RTRIM ELSE CAST(rt0.c5 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c3)) THEN rt0.c1 COLLATE RTRIM ELSE CAST(rt0.c5 AS INTEGER) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN rt0.c1 COLLATE RTRIM ELSE CAST(rt0.c5 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt0.c3)) THEN rt0.c1 COLLATE RTRIM ELSE CAST(rt0.c5 AS INTEGER) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (+ (rt0.c3)) THEN rt0.c1 COLLATE RTRIM ELSE CAST(rt0.c5 AS INTEGER) END);
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c1) BETWEEN (t0.c2) AND (rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (t0.c2) AND (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c1) BETWEEN (t0.c2) AND (rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (t0.c2) AND (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(((rt0.c1) BETWEEN (t0.c2) AND (rt0.c0)) AS INTEGER));
SELECT * FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN ((((t0.c2, t0.c2, t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2, t0.c0, ''))), t0.c2 COLLATE RTRIM))) ORDER BY ((t0.c2 COLLATE RTRIM)OR(((t0.c1)<<(t0.c1))))  NULLS FIRST, CAST(((((((((t0.c2)AND(t0.c1)))OR(0.6713378097123732)))OR(t0.c1)))OR(t0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN (t0.c0)) IN ((((t0.c2, t0.c2, t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2, t0.c0, ''))), t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE RTRIM)OR(((t0.c1)<<(t0.c1))))  NULLS FIRST, CAST(((((((((t0.c2)AND(t0.c1)))OR(0.6713378097123732)))OR(t0.c1)))OR(t0.c2)) AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN ((((t0.c2, t0.c2, t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2, t0.c0, ''))), t0.c2 COLLATE RTRIM))) ORDER BY ((t0.c2 COLLATE RTRIM)OR(((t0.c1)<<(t0.c1))))  NULLS FIRST, CAST(((((((((t0.c2)AND(t0.c1)))OR(0.6713378097123732)))OR(t0.c1)))OR(t0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN (t0.c0)) IN ((((t0.c2, t0.c2, t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2, t0.c0, ''))), t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE RTRIM)OR(((t0.c1)<<(t0.c1))))  NULLS FIRST, CAST(((((((((t0.c2)AND(t0.c1)))OR(0.6713378097123732)))OR(t0.c1)))OR(t0.c2)) AS BLOB)  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c0 IN (t0.c0)) IN ((((t0.c2, t0.c2, t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c2, t0.c0, ''))), t0.c2 COLLATE RTRIM))) ORDER BY ((t0.c2 COLLATE RTRIM)OR(((t0.c1)<<(t0.c1))))  NULLS FIRST, CAST(((((((((t0.c2)AND(t0.c1)))OR(0.6713378097123732)))OR(t0.c1)))OR(t0.c2)) AS BLOB)  NULLS LAST;
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN ())) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN ())) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN ())) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN ())) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c3 END) BETWEEN ((rt0.c3 IN ())) AND (NULL)));
SELECT COUNT(*) FROM t0 WHERE (0.9229508726032901) ORDER BY ((((t0.c2)AND(((t0.c1)%(t0.c2)))))OR((- (0.14601437051494404)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.9229508726032901) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)AND(((t0.c1)%(t0.c2)))))OR((- (0.14601437051494404)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (0.9229508726032901) ORDER BY ((((t0.c2)AND(((t0.c1)%(t0.c2)))))OR((- (0.14601437051494404)))) DESC;
SELECT SUM(count) FROM (SELECT ((0.9229508726032901) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2)AND(((t0.c1)%(t0.c2)))))OR((- (0.14601437051494404)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (0.9229508726032901) ORDER BY ((((t0.c2)AND(((t0.c1)%(t0.c2)))))OR((- (0.14601437051494404)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.47127412944278335  WHEN (~ (rt0.c2)) THEN ((rt0.c0)>>(rt0.c0)) ELSE (rt0.c3 IN (rt0.c2, rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.47127412944278335  WHEN (~ (rt0.c2)) THEN ((rt0.c0)>>(rt0.c0)) ELSE (rt0.c3 IN (rt0.c2, rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.47127412944278335  WHEN (~ (rt0.c2)) THEN ((rt0.c0)>>(rt0.c0)) ELSE (rt0.c3 IN (rt0.c2, rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.47127412944278335  WHEN (~ (rt0.c2)) THEN ((rt0.c0)>>(rt0.c0)) ELSE (rt0.c3 IN (rt0.c2, rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.47127412944278335  WHEN (~ (rt0.c2)) THEN ((rt0.c0)>>(rt0.c0)) ELSE (rt0.c3 IN (rt0.c2, rt0.c1)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(LOWER(DISTINCT t0.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT t0.c2) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(LOWER(DISTINCT t0.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT t0.c2) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(LOWER(DISTINCT t0.c2) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('h') ORDER BY ((NOT (t0.c1)) IN ())  NULLS LAST, (((((0xffffffffee883051, rt0.c5, t0.c1))>((rt0.c3, rt0.c4, t0.c2)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (('h') IS TRUE)  as count FROM rt0, t0 ORDER BY ((NOT (t0.c1)) IN ())  NULLS LAST, (((((0xffffffffee883051, rt0.c5, t0.c1))>((rt0.c3, rt0.c4, t0.c2)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('h') ORDER BY ((NOT (t0.c1)) IN ())  NULLS LAST, (((((0xffffffffee883051, rt0.c5, t0.c1))>((rt0.c3, rt0.c4, t0.c2)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (('h') IS TRUE)  as count FROM rt0, t0 ORDER BY ((NOT (t0.c1)) IN ())  NULLS LAST, (((((0xffffffffee883051, rt0.c5, t0.c1))>((rt0.c3, rt0.c4, t0.c2)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('h') ORDER BY ((NOT (t0.c1)) IN ())  NULLS LAST, (((((0xffffffffee883051, rt0.c5, t0.c1))>((rt0.c3, rt0.c4, t0.c2)))) NOTNULL);
SELECT * FROM t0, rt0 WHERE (((0X56b38c22) NOTNULL)) ORDER BY (t0.c2 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0X56b38c22) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (t0.c2 IN ()) COLLATE NOCASE ASC);
SELECT * FROM t0, rt0 WHERE (((0X56b38c22) NOTNULL)) ORDER BY (t0.c2 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0X56b38c22) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (t0.c2 IN ()) COLLATE NOCASE ASC);
SELECT * FROM t0, rt0 WHERE (((0X56b38c22) NOTNULL)) ORDER BY (t0.c2 IN ()) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(NULL AS REAL)) WHERE (((('-1858956161')) BETWEEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))) AND (((- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((('-1858956161')) BETWEEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(NULL AS REAL)));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(NULL AS REAL)) WHERE (((('-1858956161')) BETWEEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))) AND (((- (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((('-1858956161')) BETWEEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(NULL AS REAL)));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(NULL AS REAL)) WHERE (((('-1858956161')) BETWEEN ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))) AND (((- (rt0.c1))))));
SELECT * FROM rt0, t0 WHERE (0.2550534198124311);
SELECT SUM(count) FROM (SELECT ALL ((0.2550534198124311) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (0.2550534198124311);
SELECT SUM(count) FROM (SELECT ALL ((0.2550534198124311) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (0.2550534198124311);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN (('L\r\rî')>(rt0.c5)) THEN ((rt0.c2)LIKE(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) ISNULL)  WHEN (('L\r\rî')>(rt0.c5)) THEN ((rt0.c2)LIKE(rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN (('L\r\rî')>(rt0.c5)) THEN ((rt0.c2)LIKE(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) ISNULL)  WHEN (('L\r\rî')>(rt0.c5)) THEN ((rt0.c2)LIKE(rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN (('L\r\rî')>(rt0.c5)) THEN ((rt0.c2)LIKE(rt0.c3)) END);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c2)))OR(rt0.c5)))GLOB(rt0.c1 COLLATE RTRIM))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>((rt0.c1 IN (rt0.c2, rt0.c4)))) DESC, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (HEX(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c5)))GLOB(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>((rt0.c1 IN (rt0.c2, rt0.c4)))) DESC, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (HEX(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c2)))OR(rt0.c5)))GLOB(rt0.c1 COLLATE RTRIM))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>((rt0.c1 IN (rt0.c2, rt0.c4)))) DESC, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (HEX(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c5)))GLOB(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>((rt0.c1 IN (rt0.c2, rt0.c4)))) DESC, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (HEX(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)AND(rt0.c2)))OR(rt0.c5)))GLOB(rt0.c1 COLLATE RTRIM))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>((rt0.c1 IN (rt0.c2, rt0.c4)))) DESC, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1))) NOT BETWEEN (((rt0.c1)>>(rt0.c1))) AND (HEX(rt0.c0)));
SELECT COUNT(*) FROM t0, rt0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c3)))LIKE(rt0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c3)))LIKE(rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c3)))LIKE(rt0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c3)))LIKE(rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c3)))LIKE(rt0.c4 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN ((((rt0.c2)AND(t0.c2)))OR(rt0.c3)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) WHEN t0.c1 COLLATE NOCASE THEN ABS(rt0.c0) WHEN ((t0.c0) BETWEEN (rt0.c5) AND (x'')) THEN ((((rt0.c1)AND(t0.c1)))AND(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(t0.c2)))OR(rt0.c3)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) WHEN t0.c1 COLLATE NOCASE THEN ABS(rt0.c0) WHEN ((t0.c0) BETWEEN (rt0.c5) AND (x'')) THEN ((((rt0.c1)AND(t0.c1)))AND(t0.c2)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN ((((rt0.c2)AND(t0.c2)))OR(rt0.c3)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) WHEN t0.c1 COLLATE NOCASE THEN ABS(rt0.c0) WHEN ((t0.c0) BETWEEN (rt0.c5) AND (x'')) THEN ((((rt0.c1)AND(t0.c1)))AND(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c2)AND(t0.c2)))OR(rt0.c3)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) WHEN t0.c1 COLLATE NOCASE THEN ABS(rt0.c0) WHEN ((t0.c0) BETWEEN (rt0.c5) AND (x'')) THEN ((((rt0.c1)AND(t0.c1)))AND(t0.c2)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN ((((rt0.c2)AND(t0.c2)))OR(rt0.c3)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) WHEN t0.c1 COLLATE NOCASE THEN ABS(rt0.c0) WHEN ((t0.c0) BETWEEN (rt0.c5) AND (x'')) THEN ((((rt0.c1)AND(t0.c1)))AND(t0.c2)) END);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (('}S({') BETWEEN (rt0.c5 COLLATE BINARY) AND (TRIM(DISTINCT t0.c1))) WHERE (((t0.c2)OR(rt0.c2 COLLATE BINARY))) ORDER BY CAST((('0.7290619018439678') NOTNULL) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (('}S({') BETWEEN (rt0.c5 COLLATE BINARY) AND (TRIM(DISTINCT t0.c1))) ORDER BY CAST((('0.7290619018439678') NOTNULL) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (('}S({') BETWEEN (rt0.c5 COLLATE BINARY) AND (TRIM(DISTINCT t0.c1))) WHERE (((t0.c2)OR(rt0.c2 COLLATE BINARY))) ORDER BY CAST((('0.7290619018439678') NOTNULL) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)OR(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (('}S({') BETWEEN (rt0.c5 COLLATE BINARY) AND (TRIM(DISTINCT t0.c1))) ORDER BY CAST((('0.7290619018439678') NOTNULL) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (('}S({') BETWEEN (rt0.c5 COLLATE BINARY) AND (TRIM(DISTINCT t0.c1))) WHERE (((t0.c2)OR(rt0.c2 COLLATE BINARY))) ORDER BY CAST((('0.7290619018439678') NOTNULL) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2)/(t0.c0))) ORDER BY UPPER(DISTINCT ((t0.c0)GLOB('1170066475'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)/(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT ((t0.c0)GLOB('1170066475'))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2)/(t0.c0))) ORDER BY UPPER(DISTINCT ((t0.c0)GLOB('1170066475'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)/(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT ((t0.c0)GLOB('1170066475'))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2)/(t0.c0))) ORDER BY UPPER(DISTINCT ((t0.c0)GLOB('1170066475'))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) ORDER BY CAST(LENGTH(rt0.c4) AS BLOB) ASC  NULLS FIRST, (((rt0.c5)<(rt0.c2)) IN (CAST(rt0.c3 AS INTEGER), NULLIF(rt0.c5, rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(LENGTH(rt0.c4) AS BLOB) ASC  NULLS FIRST, (((rt0.c5)<(rt0.c2)) IN (CAST(rt0.c3 AS INTEGER), NULLIF(rt0.c5, rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) ORDER BY CAST(LENGTH(rt0.c4) AS BLOB) ASC  NULLS FIRST, (((rt0.c5)<(rt0.c2)) IN (CAST(rt0.c3 AS INTEGER), NULLIF(rt0.c5, rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(LENGTH(rt0.c4) AS BLOB) ASC  NULLS FIRST, (((rt0.c5)<(rt0.c2)) IN (CAST(rt0.c3 AS INTEGER), NULLIF(rt0.c5, rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) ISNULL)) ORDER BY CAST(LENGTH(rt0.c4) AS BLOB) ASC  NULLS FIRST, (((rt0.c5)<(rt0.c2)) IN (CAST(rt0.c3 AS INTEGER), NULLIF(rt0.c5, rt0.c1)));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON '' WHERE ((((t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c5)) NOT BETWEEN ((((rt0.c1)IS(0.7452695538898156)), ((-1.790967296E9) NOTNULL), (- ('()')), (t0.c2 IN (rt0.c3)), (((rt0.c5)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))) AND ((TRIM(DISTINCT rt0.c3, t0.c0), '166597481', CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 ELSE t0.c0 END, '417641248', rt0.c5 COLLATE BINARY)))) ORDER BY CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c5)) NOT BETWEEN ((((rt0.c1)IS(0.7452695538898156)), ((-1.790967296E9) NOTNULL), (- ('()')), (t0.c2 IN (rt0.c3)), (((rt0.c5)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))) AND ((TRIM(DISTINCT rt0.c3, t0.c0), '166597481', CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 ELSE t0.c0 END, '417641248', rt0.c5 COLLATE BINARY)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON '' ORDER BY CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON '' WHERE ((((t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c5)) NOT BETWEEN ((((rt0.c1)IS(0.7452695538898156)), ((-1.790967296E9) NOTNULL), (- ('()')), (t0.c2 IN (rt0.c3)), (((rt0.c5)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))) AND ((TRIM(DISTINCT rt0.c3, t0.c0), '166597481', CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 ELSE t0.c0 END, '417641248', rt0.c5 COLLATE BINARY)))) ORDER BY CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c5)) NOT BETWEEN ((((rt0.c1)IS(0.7452695538898156)), ((-1.790967296E9) NOTNULL), (- ('()')), (t0.c2 IN (rt0.c3)), (((rt0.c5)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))) AND ((TRIM(DISTINCT rt0.c3, t0.c0), '166597481', CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 ELSE t0.c0 END, '417641248', rt0.c5 COLLATE BINARY)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON '' ORDER BY CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON '' WHERE ((((t0.c1, t0.c0, rt0.c3, rt0.c2, rt0.c5)) NOT BETWEEN ((((rt0.c1)IS(0.7452695538898156)), ((-1.790967296E9) NOTNULL), (- ('()')), (t0.c2 IN (rt0.c3)), (((rt0.c5)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))) AND ((TRIM(DISTINCT rt0.c3, t0.c0), '166597481', CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 ELSE t0.c0 END, '417641248', rt0.c5 COLLATE BINARY)))) ORDER BY CAST(((rt0.c2) BETWEEN (t0.c1) AND (rt0.c0)) AS TEXT);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((CAST(rt0.c0 AS INTEGER)))));
SELECT * FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)IS((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)IS((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)IS((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)IS((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)IS((t0.c2 IN ()))));
SELECT ALL * FROM t0, rt0 WHERE (json_object(CASE t0.c1  WHEN rt0.c3 THEN t0.c0 END, rt0.c1 COLLATE NOCASE)) ORDER BY ((((rt0.c2)OR((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))))AND(((((((((((((rt0.c4)OR(t0.c1)))OR(rt0.c3)))OR(t0.c2)))AND(rt0.c3)))AND(rt0.c5)))OR(rt0.c0))))  NULLS FIRST, CASE WHEN NULL THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((json_object(CASE t0.c1  WHEN rt0.c3 THEN t0.c0 END, rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)OR((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))))AND(((((((((((((rt0.c4)OR(t0.c1)))OR(rt0.c3)))OR(t0.c2)))AND(rt0.c3)))AND(rt0.c5)))OR(rt0.c0))))  NULLS FIRST, CASE WHEN NULL THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c1 IN ()) END);
SELECT ALL * FROM t0, rt0 WHERE (json_object(CASE t0.c1  WHEN rt0.c3 THEN t0.c0 END, rt0.c1 COLLATE NOCASE)) ORDER BY ((((rt0.c2)OR((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))))AND(((((((((((((rt0.c4)OR(t0.c1)))OR(rt0.c3)))OR(t0.c2)))AND(rt0.c3)))AND(rt0.c5)))OR(rt0.c0))))  NULLS FIRST, CASE WHEN NULL THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((json_object(CASE t0.c1  WHEN rt0.c3 THEN t0.c0 END, rt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)OR((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))))AND(((((((((((((rt0.c4)OR(t0.c1)))OR(rt0.c3)))OR(t0.c2)))AND(rt0.c3)))AND(rt0.c5)))OR(rt0.c0))))  NULLS FIRST, CASE WHEN NULL THEN rt0.c3 COLLATE NOCASE ELSE (rt0.c1 IN ()) END);
SELECT * FROM rt0, t0 WHERE (((NULLIF(rt0.c3, rt0.c5))|(rt0.c4))) ORDER BY 0.7894256949057827  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c3, rt0.c5))|(rt0.c4))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.7894256949057827  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((NULLIF(rt0.c3, rt0.c5))|(rt0.c4))) ORDER BY 0.7894256949057827  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c3, rt0.c5))|(rt0.c4))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.7894256949057827  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((NULLIF(rt0.c3, rt0.c5))|(rt0.c4))) ORDER BY 0.7894256949057827  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))%(LIKELIHOOD(t0.c1, 0.8368713034420564))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))%(LIKELIHOOD(t0.c1, 0.8368713034420564)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))%(LIKELIHOOD(t0.c1, 0.8368713034420564))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))%(LIKELIHOOD(t0.c1, 0.8368713034420564)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))%(LIKELIHOOD(t0.c1, 0.8368713034420564))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (('')GLOB(((rt0.c3)<<(t0.c0)))) WHERE (rt0.c2) ORDER BY ((((((rt0.c1)AND(rt0.c1)))AND(t0.c1)))-((rt0.c1 IN ()))), (((((rt0.c5, rt0.c5, rt0.c3)) NOT BETWEEN ((0.3906706915110193, rt0.c2, 'æ_')) AND ((rt0.c2, t0.c1, t0.c1)))) NOT BETWEEN (NULL) AND ((rt0.c2 IN ()))) DESC  NULLS FIRST, (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))&(((((((((t0.c1)AND(rt0.c5)))AND(t0.c2)))AND(t0.c1)))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (('')GLOB(((rt0.c3)<<(t0.c0)))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))AND(t0.c1)))-((rt0.c1 IN ()))), (((((rt0.c5, rt0.c5, rt0.c3)) NOT BETWEEN ((0.3906706915110193, rt0.c2, 'æ_')) AND ((rt0.c2, t0.c1, t0.c1)))) NOT BETWEEN (NULL) AND ((rt0.c2 IN ()))) DESC  NULLS FIRST, (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))&(((((((((t0.c1)AND(rt0.c5)))AND(t0.c2)))AND(t0.c1)))OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (('')GLOB(((rt0.c3)<<(t0.c0)))) WHERE (rt0.c2) ORDER BY ((((((rt0.c1)AND(rt0.c1)))AND(t0.c1)))-((rt0.c1 IN ()))), (((((rt0.c5, rt0.c5, rt0.c3)) NOT BETWEEN ((0.3906706915110193, rt0.c2, 'æ_')) AND ((rt0.c2, t0.c1, t0.c1)))) NOT BETWEEN (NULL) AND ((rt0.c2 IN ()))) DESC  NULLS FIRST, (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))&(((((((((t0.c1)AND(rt0.c5)))AND(t0.c2)))AND(t0.c1)))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (('')GLOB(((rt0.c3)<<(t0.c0)))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))AND(t0.c1)))-((rt0.c1 IN ()))), (((((rt0.c5, rt0.c5, rt0.c3)) NOT BETWEEN ((0.3906706915110193, rt0.c2, 'æ_')) AND ((rt0.c2, t0.c1, t0.c1)))) NOT BETWEEN (NULL) AND ((rt0.c2 IN ()))) DESC  NULLS FIRST, (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))&(((((((((t0.c1)AND(rt0.c5)))AND(t0.c2)))AND(t0.c1)))OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (('')GLOB(((rt0.c3)<<(t0.c0)))) WHERE (rt0.c2) ORDER BY ((((((rt0.c1)AND(rt0.c1)))AND(t0.c1)))-((rt0.c1 IN ()))), (((((rt0.c5, rt0.c5, rt0.c3)) NOT BETWEEN ((0.3906706915110193, rt0.c2, 'æ_')) AND ((rt0.c2, t0.c1, t0.c1)))) NOT BETWEEN (NULL) AND ((rt0.c2 IN ()))) DESC  NULLS FIRST, (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))&(((((((((t0.c1)AND(rt0.c5)))AND(t0.c2)))AND(t0.c1)))OR(rt0.c3))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c3 THEN UPPER('-1858956161') WHEN (rt0.c1 IN ()) THEN ((rt0.c2) ISNULL) WHEN ((('V\ruit9F^6')) BETWEEN ((0.7563475738486718)) AND ((rt0.c2))) THEN (+ (rt0.c1)) ELSE 0.839410605283007 COLLATE BINARY END) ORDER BY (((ABS(0X4b7893bc)))!=((((rt0.c4)LIKE(rt0.c4))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c3 THEN UPPER('-1858956161') WHEN (rt0.c1 IN ()) THEN ((rt0.c2) ISNULL) WHEN ((('V\ruit9F^6')) BETWEEN ((0.7563475738486718)) AND ((rt0.c2))) THEN (+ (rt0.c1)) ELSE 0.839410605283007 COLLATE BINARY END) IS TRUE)  as count FROM rt0 ORDER BY (((ABS(0X4b7893bc)))<>((((rt0.c4)LIKE(rt0.c4))))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c3 THEN UPPER('-1858956161') WHEN (rt0.c1 IN ()) THEN ((rt0.c2) ISNULL) WHEN ((('V\ruit9F^6')) BETWEEN ((0.7563475738486718)) AND ((rt0.c2))) THEN (+ (rt0.c1)) ELSE 0.839410605283007 COLLATE BINARY END) ORDER BY (((ABS(0X4b7893bc)))!=((((rt0.c4)LIKE(rt0.c4))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c3 THEN UPPER('-1858956161') WHEN (rt0.c1 IN ()) THEN ((rt0.c2) ISNULL) WHEN ((('V\ruit9F^6')) BETWEEN ((0.7563475738486718)) AND ((rt0.c2))) THEN (+ (rt0.c1)) ELSE 0.839410605283007 COLLATE BINARY END) IS TRUE)  as count FROM rt0 ORDER BY (((ABS(0X4b7893bc)))<>((((rt0.c4)LIKE(rt0.c4))))) ASC);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN rt0.c3 THEN UPPER('-1858956161') WHEN (rt0.c1 IN ()) THEN ((rt0.c2) ISNULL) WHEN ((('V\ruit9F^6')) BETWEEN ((0.7563475738486718)) AND ((rt0.c2))) THEN (+ (rt0.c1)) ELSE 0.839410605283007 COLLATE BINARY END) ORDER BY (((ABS(0X4b7893bc)))!=((((rt0.c4)LIKE(rt0.c4))))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (rt0.c4))) ORDER BY (NOT (((rt0.c1) BETWEEN (0.4541271037149146) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c4))) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT (((rt0.c1) BETWEEN (0.4541271037149146) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (rt0.c4))) ORDER BY (NOT (((rt0.c1) BETWEEN (0.4541271037149146) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c4))) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT (((rt0.c1) BETWEEN (0.4541271037149146) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (rt0.c4))) ORDER BY (NOT (((rt0.c1) BETWEEN (0.4541271037149146) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE ((((('-2141213231') BETWEEN (rt0.c5) AND (rt0.c3)))+(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((('-2141213231') BETWEEN (rt0.c5) AND (rt0.c3)))+(rt0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((('-2141213231') BETWEEN (rt0.c5) AND (rt0.c3)))+(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((('-2141213231') BETWEEN (rt0.c5) AND (rt0.c3)))+(rt0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((('-2141213231') BETWEEN (rt0.c5) AND (rt0.c3)))+(rt0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((CAST(t0.c2 AS REAL))))) ORDER BY CAST((((t0.c2)) BETWEEN ((854606016)) AND ((t0.c2))) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((CAST(t0.c2 AS REAL))))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c2)) BETWEEN ((854606016)) AND ((t0.c2))) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((CAST(t0.c2 AS REAL))))) ORDER BY CAST((((t0.c2)) BETWEEN ((854606016)) AND ((t0.c2))) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((CAST(t0.c2 AS REAL))))) IS TRUE)  as count FROM t0 ORDER BY CAST((((t0.c2)) BETWEEN ((854606016)) AND ((t0.c2))) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((CAST(t0.c2 AS REAL))))) ORDER BY CAST((((t0.c2)) BETWEEN ((854606016)) AND ((t0.c2))) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) NOT BETWEEN (NULL) AND (t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY CAST(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) IS TRUE)) ISNULL) WHERE (NULLIF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))), (rt0.c5 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))), (rt0.c5 IN ()))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) IS TRUE)) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) IS TRUE)) ISNULL) WHERE (NULLIF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))), (rt0.c5 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))), (rt0.c5 IN ()))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) IS TRUE)) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c3) IS TRUE)) ISNULL) WHERE (NULLIF((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c5))), (rt0.c5 IN ())));
SELECT * FROM t0 WHERE (x'795f') ORDER BY (~ (t0.c1)) DESC  NULLS FIRST, ((CAST(t0.c1 AS TEXT))>(((t0.c2)>(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'795f') IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c1)) DESC  NULLS FIRST, ((CAST(t0.c1 AS TEXT))>(((t0.c2)>(t0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (x'795f') ORDER BY (~ (t0.c1)) DESC  NULLS FIRST, ((CAST(t0.c1 AS TEXT))>(((t0.c2)>(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'795f') IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c1)) DESC  NULLS FIRST, ((CAST(t0.c1 AS TEXT))>(((t0.c2)>(t0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (x'795f') ORDER BY (~ (t0.c1)) DESC  NULLS FIRST, ((CAST(t0.c1 AS TEXT))>(((t0.c2)>(t0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c0, t0.c0, x'59d6')) AND ((t0.c2, t0.c2, t0.c1))))/(((t0.c1)AND(t0.c2))))) ORDER BY (((NOT (t0.c2)))<=(CASE WHEN t0.c2 THEN t0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c0, t0.c0, x'59d6')) AND ((t0.c2, t0.c2, t0.c1))))/(((t0.c1)AND(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c2)))<=(CASE WHEN t0.c2 THEN t0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c0, t0.c0, x'59d6')) AND ((t0.c2, t0.c2, t0.c1))))/(((t0.c1)AND(t0.c2))))) ORDER BY (((NOT (t0.c2)))<=(CASE WHEN t0.c2 THEN t0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c0, t0.c0, x'59d6')) AND ((t0.c2, t0.c2, t0.c1))))/(((t0.c1)AND(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c2)))<=(CASE WHEN t0.c2 THEN t0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c0, t0.c0, x'59d6')) AND ((t0.c2, t0.c2, t0.c1))))/(((t0.c1)AND(t0.c2))))) ORDER BY (((NOT (t0.c2)))<=(CASE WHEN t0.c2 THEN t0.c1 END)) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((t0.c0) IS FALSE))OR(CAST(rt0.c1 AS REAL))))OR(t0.c1 COLLATE BINARY))) ORDER BY 0.841450080965167, ((((CHAR(rt0.c5))AND(CAST(rt0.c5 AS NUMERIC))))AND(((rt0.c5)==(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) IS FALSE))OR(CAST(rt0.c1 AS REAL))))OR(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.841450080965167, ((((CHAR(rt0.c5))AND(CAST(rt0.c5 AS NUMERIC))))AND(((rt0.c5)=(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((t0.c0) IS FALSE))OR(CAST(rt0.c1 AS REAL))))OR(t0.c1 COLLATE BINARY))) ORDER BY 0.841450080965167, ((((CHAR(rt0.c5))AND(CAST(rt0.c5 AS NUMERIC))))AND(((rt0.c5)==(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) IS FALSE))OR(CAST(rt0.c1 AS REAL))))OR(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.841450080965167, ((((CHAR(rt0.c5))AND(CAST(rt0.c5 AS NUMERIC))))AND(((rt0.c5)=(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((t0.c0) IS FALSE))OR(CAST(rt0.c1 AS REAL))))OR(t0.c1 COLLATE BINARY))) ORDER BY 0.841450080965167, ((((CHAR(rt0.c5))AND(CAST(rt0.c5 AS NUMERIC))))AND(((rt0.c5)==(rt0.c1))))  NULLS FIRST;
SELECT * FROM t0 INNER JOIN rt0 ON 0.37934670148044836 WHERE (((CAST(NULL AS NUMERIC))|(((t0.c2) BETWEEN (rt0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC))|(((t0.c2) BETWEEN (rt0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON 0.37934670148044836);
SELECT * FROM t0 INNER JOIN rt0 ON 0.37934670148044836 WHERE (((CAST(NULL AS NUMERIC))|(((t0.c2) BETWEEN (rt0.c2) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC))|(((t0.c2) BETWEEN (rt0.c2) AND (t0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON 0.37934670148044836);
SELECT * FROM t0 INNER JOIN rt0 ON 0.37934670148044836 WHERE (((CAST(NULL AS NUMERIC))|(((t0.c2) BETWEEN (rt0.c2) AND (t0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((UNLIKELY(rt0.c2)) IS TRUE) WHERE (((rt0.c0) NOT BETWEEN ('') AND (rt0.c2)) COLLATE BINARY) ORDER BY (+ ((~ (rt0.c5)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN ('') AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((UNLIKELY(rt0.c2)) IS TRUE) ORDER BY (+ ((~ (rt0.c5)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((UNLIKELY(rt0.c2)) IS TRUE) WHERE (((rt0.c0) NOT BETWEEN ('') AND (rt0.c2)) COLLATE BINARY) ORDER BY (+ ((~ (rt0.c5)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN ('') AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((UNLIKELY(rt0.c2)) IS TRUE) ORDER BY (+ ((~ (rt0.c5)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((UNLIKELY(rt0.c2)) IS TRUE) WHERE (((rt0.c0) NOT BETWEEN ('') AND (rt0.c2)) COLLATE BINARY) ORDER BY (+ ((~ (rt0.c5)))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)IS(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0)IS(t0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('76736142' COLLATE RTRIM) ORDER BY ((((((rt0.c3)OR(t0.c0)))OR(t0.c2))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('76736142' COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c3)OR(t0.c0)))OR(t0.c2))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('76736142' COLLATE RTRIM) ORDER BY ((((((rt0.c3)OR(t0.c0)))OR(t0.c2))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('76736142' COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c3)OR(t0.c0)))OR(t0.c2))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('76736142' COLLATE RTRIM) ORDER BY ((((((rt0.c3)OR(t0.c0)))OR(t0.c2))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 ELSE t0.c1 END)AND(((rt0.c4) NOTNULL))))AND(((t0.c1)=(rt0.c4))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 ELSE t0.c1 END)AND(((rt0.c4) NOTNULL))))AND(((t0.c1)=(rt0.c4))))) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 ELSE t0.c1 END)AND(((rt0.c4) NOTNULL))))AND(((t0.c1)=(rt0.c4))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 ELSE t0.c1 END)AND(((rt0.c4) NOTNULL))))AND(((t0.c1)=(rt0.c4))))) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 ELSE t0.c1 END)AND(((rt0.c4) NOTNULL))))AND(((t0.c1)=(rt0.c4))))) ORDER BY t0.c1;
SELECT * FROM t0 WHERE (((t0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c2) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c2) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c5)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (LENGTH(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (LENGTH(rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c5)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (LENGTH(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (LENGTH(rt0.c3)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c5)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (LENGTH(rt0.c3))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c1)AND(t0.c0)))AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(t0.c0)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c1)AND(t0.c0)))AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(t0.c0)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c1)AND(t0.c0)))AND(t0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((('')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))) ORDER BY '<	' DESC  NULLS LAST, ((rt0.c2)>=(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST, rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY '<	' DESC  NULLS LAST, ((rt0.c2)>=(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST, rt0.c5  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((('')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))) ORDER BY '<	' DESC  NULLS LAST, ((rt0.c2)>=(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST, rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY '<	' DESC  NULLS LAST, ((rt0.c2)>=(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST, rt0.c5  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((('')AND(NULL)))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))) ORDER BY '<	' DESC  NULLS LAST, ((rt0.c2)>=(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST, rt0.c5  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c5, rt0.c0, NULL)) BETWEEN ((((rt0.c0) IS FALSE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c5)), '')) AND (((rt0.c4 IN ('574160792')), ((rt0.c2)%(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c1)))))) ORDER BY ((((NULL)OR(((rt0.c1)AND(rt0.c3)))))AND(((rt0.c3)OR(rt0.c0)))) DESC, HEX(DISTINCT ((rt0.c4) IS FALSE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5, rt0.c0, NULL)) BETWEEN ((((rt0.c0) IS FALSE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c5)), '')) AND (((rt0.c4 IN ('574160792')), ((rt0.c2)%(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)OR(((rt0.c1)AND(rt0.c3)))))AND(((rt0.c3)OR(rt0.c0)))) DESC, HEX(DISTINCT ((rt0.c4) IS FALSE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c5, rt0.c0, NULL)) BETWEEN ((((rt0.c0) IS FALSE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c5)), '')) AND (((rt0.c4 IN ('574160792')), ((rt0.c2)%(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c1)))))) ORDER BY ((((NULL)OR(((rt0.c1)AND(rt0.c3)))))AND(((rt0.c3)OR(rt0.c0)))) DESC, HEX(DISTINCT ((rt0.c4) IS FALSE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5, rt0.c0, NULL)) BETWEEN ((((rt0.c0) IS FALSE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c5)), '')) AND (((rt0.c4 IN ('574160792')), ((rt0.c2)%(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)OR(((rt0.c1)AND(rt0.c3)))))AND(((rt0.c3)OR(rt0.c0)))) DESC, HEX(DISTINCT ((rt0.c4) IS FALSE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c5, rt0.c0, NULL)) BETWEEN ((((rt0.c0) IS FALSE), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c5)), '')) AND (((rt0.c4 IN ('574160792')), ((rt0.c2)%(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c1)))))) ORDER BY ((((NULL)OR(((rt0.c1)AND(rt0.c3)))))AND(((rt0.c3)OR(rt0.c0)))) DESC, HEX(DISTINCT ((rt0.c4) IS FALSE)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c5))) NOTNULL) WHERE (CAST(rt0.c2 COLLATE NOCASE AS BLOB)) ORDER BY ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c2, t0.c0, rt0.c1)) AND (('', t0.c1, 0.6319839861288962))) IN (t0.c0, ((t0.c0)%(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c5))) NOTNULL) ORDER BY ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c2, t0.c0, rt0.c1)) AND (('', t0.c1, 0.6319839861288962))) IN (t0.c0, ((t0.c0)%(rt0.c1)))) ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c5))) NOTNULL) WHERE (CAST(rt0.c2 COLLATE NOCASE AS BLOB)) ORDER BY ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c2, t0.c0, rt0.c1)) AND (('', t0.c1, 0.6319839861288962))) IN (t0.c0, ((t0.c0)%(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c5))) NOTNULL) ORDER BY ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c2, t0.c0, rt0.c1)) AND (('', t0.c1, 0.6319839861288962))) IN (t0.c0, ((t0.c0)%(rt0.c1)))) ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c5))) NOTNULL) WHERE (CAST(rt0.c2 COLLATE NOCASE AS BLOB)) ORDER BY ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((t0.c2, t0.c0, rt0.c1)) AND (('', t0.c1, 0.6319839861288962))) IN (t0.c0, ((t0.c0)%(rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE CASE WHEN t0.c0 THEN rt0.c3 ELSE t0.c2 END  WHEN ((rt0.c5)=(rt0.c5)) THEN (NOT (rt0.c5)) ELSE ((t0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c0 THEN rt0.c3 ELSE t0.c2 END  WHEN ((rt0.c5)=(rt0.c5)) THEN (NOT (rt0.c5)) ELSE ((t0.c2) NOTNULL) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE CASE WHEN t0.c0 THEN rt0.c3 ELSE t0.c2 END  WHEN ((rt0.c5)=(rt0.c5)) THEN (NOT (rt0.c5)) ELSE ((t0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN t0.c0 THEN rt0.c3 ELSE t0.c2 END  WHEN ((rt0.c5)=(rt0.c5)) THEN (NOT (rt0.c5)) ELSE ((t0.c2) NOTNULL) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE CASE WHEN t0.c0 THEN rt0.c3 ELSE t0.c2 END  WHEN ((rt0.c5)=(rt0.c5)) THEN (NOT (rt0.c5)) ELSE ((t0.c2) NOTNULL) END);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CASE WHEN rt0.c5 THEN rt0.c3 END END) ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0) ISNULL))))AND(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CASE WHEN rt0.c5 THEN rt0.c3 END END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0) ISNULL))))AND(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CASE WHEN rt0.c5 THEN rt0.c3 END END) ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0) ISNULL))))AND(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CASE WHEN rt0.c5 THEN rt0.c3 END END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0) ISNULL))))AND(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))) THEN CASE WHEN rt0.c5 THEN rt0.c3 END END) ORDER BY ((((t0.c0 COLLATE BINARY)AND(((t0.c0) ISNULL))))AND(((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2 COLLATE NOCASE)&(((((rt0.c1)AND(t0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)&(((((rt0.c1)AND(t0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2 COLLATE NOCASE)&(((((rt0.c1)AND(t0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)&(((((rt0.c1)AND(t0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2 COLLATE NOCASE)&(((((rt0.c1)AND(t0.c0)))AND(rt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c2, t0.c1)) NOT BETWEEN (((t0.c2 IN ()), CAST(t0.c2 AS BLOB), t0.c1)) AND ((CASE WHEN 'l' THEN 0.05825538888613446 ELSE t0.c1 END, CAST(t0.c1 AS INTEGER), ((x'')LIKE(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, t0.c1)) NOT BETWEEN (((t0.c2 IN ()), CAST(t0.c2 AS BLOB), t0.c1)) AND ((CASE WHEN 'l' THEN 0.05825538888613446 ELSE t0.c1 END, CAST(t0.c1 AS INTEGER), ((x'')LIKE(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c2, t0.c1)) NOT BETWEEN (((t0.c2 IN ()), CAST(t0.c2 AS BLOB), t0.c1)) AND ((CASE WHEN 'l' THEN 0.05825538888613446 ELSE t0.c1 END, CAST(t0.c1 AS INTEGER), ((x'')LIKE(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, t0.c1)) NOT BETWEEN (((t0.c2 IN ()), CAST(t0.c2 AS BLOB), t0.c1)) AND ((CASE WHEN 'l' THEN 0.05825538888613446 ELSE t0.c1 END, CAST(t0.c1 AS INTEGER), ((x'')LIKE(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c2, t0.c1)) NOT BETWEEN (((t0.c2 IN ()), CAST(t0.c2 AS BLOB), t0.c1)) AND ((CASE WHEN 'l' THEN 0.05825538888613446 ELSE t0.c1 END, CAST(t0.c1 AS INTEGER), ((x'')LIKE(t0.c0))))));
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c2, x'')))) NOTNULL)) ORDER BY ((t0.c1)GLOB((((('-1162323536')AND(t0.c0)))OR(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c2, x'')))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)GLOB((((('-1162323536')AND(t0.c0)))OR(t0.c2))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c2, x'')))) NOTNULL)) ORDER BY ((t0.c1)GLOB((((('-1162323536')AND(t0.c0)))OR(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c2, x'')))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)GLOB((((('-1162323536')AND(t0.c0)))OR(t0.c2))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c2))>=((t0.c2, t0.c2, x'')))) NOTNULL)) ORDER BY ((t0.c1)GLOB((((('-1162323536')AND(t0.c0)))OR(t0.c2))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE BINARY)%(0.785690121215321)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE BINARY)%(0.785690121215321))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE BINARY)%(0.785690121215321)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE BINARY)%(0.785690121215321))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE BINARY)%(0.785690121215321)));
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 COLLATE BINARY THEN (+ (t0.c1)) WHEN ((t0.c0)IS(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN (t0.c0 IN ()) THEN (((('SX')OR(t0.c0)))OR(t0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c2 COLLATE RTRIM WHEN COALESCE(t0.c1, t0.c0) THEN (t0.c1 IN ()) ELSE t0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 COLLATE BINARY THEN (+ (t0.c1)) WHEN ((t0.c0)IS(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN (t0.c0 IN ()) THEN (((('SX')OR(t0.c0)))OR(t0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c2 COLLATE RTRIM WHEN COALESCE(t0.c1, t0.c0) THEN (t0.c1 IN ()) ELSE t0.c1 END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 COLLATE BINARY THEN (+ (t0.c1)) WHEN ((t0.c0)IS(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN (t0.c0 IN ()) THEN (((('SX')OR(t0.c0)))OR(t0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c2 COLLATE RTRIM WHEN COALESCE(t0.c1, t0.c0) THEN (t0.c1 IN ()) ELSE t0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 COLLATE BINARY THEN (+ (t0.c1)) WHEN ((t0.c0)IS(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN (t0.c0 IN ()) THEN (((('SX')OR(t0.c0)))OR(t0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c2 COLLATE RTRIM WHEN COALESCE(t0.c1, t0.c0) THEN (t0.c1 IN ()) ELSE t0.c1 END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 COLLATE BINARY THEN (+ (t0.c1)) WHEN ((t0.c0)IS(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN (t0.c0 IN ()) THEN (((('SX')OR(t0.c0)))OR(t0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN t0.c2 COLLATE RTRIM WHEN COALESCE(t0.c1, t0.c0) THEN (t0.c1 IN ()) ELSE t0.c1 END);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((((- (t0.c0))))<(((((t0.c0, rt0.c3, rt0.c5))=((t0.c1, rt0.c1, t0.c2)))))) WHERE ('') ORDER BY CASE WHEN ((((((((rt0.c0)AND(t0.c2)))AND(t0.c0)))OR(rt0.c1)))OR(NULL)) THEN rt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((- (t0.c0))))<(((((t0.c0, rt0.c3, rt0.c5))=((t0.c1, rt0.c1, t0.c2)))))) ORDER BY CASE WHEN ((((((((rt0.c0)AND(t0.c2)))AND(t0.c0)))OR(rt0.c1)))OR(NULL)) THEN rt0.c0 END DESC);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((((- (t0.c0))))<(((((t0.c0, rt0.c3, rt0.c5))=((t0.c1, rt0.c1, t0.c2)))))) WHERE ('') ORDER BY CASE WHEN ((((((((rt0.c0)AND(t0.c2)))AND(t0.c0)))OR(rt0.c1)))OR(NULL)) THEN rt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((- (t0.c0))))<(((((t0.c0, rt0.c3, rt0.c5))=((t0.c1, rt0.c1, t0.c2)))))) ORDER BY CASE WHEN ((((((((rt0.c0)AND(t0.c2)))AND(t0.c0)))OR(rt0.c1)))OR(NULL)) THEN rt0.c0 END DESC);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((((- (t0.c0))))<(((((t0.c0, rt0.c3, rt0.c5))=((t0.c1, rt0.c1, t0.c2)))))) WHERE ('') ORDER BY CASE WHEN ((((((((rt0.c0)AND(t0.c2)))AND(t0.c0)))OR(rt0.c1)))OR(NULL)) THEN rt0.c0 END DESC;
SELECT * FROM t0 WHERE (CASE TYPEOF(t0.c1)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c1)))AND(x'482a')) THEN t0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(t0.c1)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c1)))AND(x'482a')) THEN t0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE TYPEOF(t0.c1)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c1)))AND(x'482a')) THEN t0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TYPEOF(t0.c1)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c1)))AND(x'482a')) THEN t0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE TYPEOF(t0.c1)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c1)))AND(x'482a')) THEN t0.c2 COLLATE NOCASE END);
SELECT ALL * FROM rt0, t0 WHERE (TRIM(0.11159055306056032, (+ (t0.c2)))) ORDER BY (TRIM(DISTINCT t0.c2, rt0.c0) IN (CASE rt0.c4  WHEN t0.c1 THEN rt0.c3 ELSE '' END, (t0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(0.11159055306056032, (+ (t0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (TRIM(DISTINCT t0.c2, rt0.c0) IN (CASE rt0.c4  WHEN t0.c1 THEN rt0.c3 ELSE '' END, (t0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (TRIM(0.11159055306056032, (+ (t0.c2)))) ORDER BY (TRIM(DISTINCT t0.c2, rt0.c0) IN (CASE rt0.c4  WHEN t0.c1 THEN rt0.c3 ELSE '' END, (t0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(0.11159055306056032, (+ (t0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (TRIM(DISTINCT t0.c2, rt0.c0) IN (CASE rt0.c4  WHEN t0.c1 THEN rt0.c3 ELSE '' END, (t0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (TRIM(0.11159055306056032, (+ (t0.c2)))) ORDER BY (TRIM(DISTINCT t0.c2, rt0.c0) IN (CASE rt0.c4  WHEN t0.c1 THEN rt0.c3 ELSE '' END, (t0.c0 IN ())))  NULLS LAST;
SELECT * FROM t0 WHERE (CASE (- (t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c2 AS INTEGER) ELSE (- (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c2 AS INTEGER) ELSE (- (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (- (t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c2 AS INTEGER) ELSE (- (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c2 AS INTEGER) ELSE (- (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (- (t0.c0))  WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c2 AS INTEGER) ELSE (- (t0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN '' THEN ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) ELSE ((rt0.c4)||(t0.c2)) END) ORDER BY (((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '' THEN ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) ELSE ((rt0.c4)||(t0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN '' THEN ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) ELSE ((rt0.c4)||(t0.c2)) END) ORDER BY (((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '' THEN ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) ELSE ((rt0.c4)||(t0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN '' THEN ((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) ELSE ((rt0.c4)||(t0.c2)) END) ORDER BY (((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN t0.c2 THEN rt0.c5 WHEN -1944135186 THEN rt0.c5 END THEN ((((((((rt0.c0)AND('{_b~Tê_JO')))OR(rt0.c4)))AND(rt0.c2)))OR(t0.c1)) WHEN t0.c0 THEN (rt0.c5 IN ()) WHEN (t0.c1 IN ()) THEN (((rt0.c3, x'', t0.c0))<=((t0.c0, rt0.c0, rt0.c3))) ELSE ((((t0.c0)OR(rt0.c2)))OR(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN t0.c2 THEN rt0.c5 WHEN -1944135186 THEN rt0.c5 END THEN ((((((((rt0.c0)AND('{_b~Tê_JO')))OR(rt0.c4)))AND(rt0.c2)))OR(t0.c1)) WHEN t0.c0 THEN (rt0.c5 IN ()) WHEN (t0.c1 IN ()) THEN (((rt0.c3, x'', t0.c0))<=((t0.c0, rt0.c0, rt0.c3))) ELSE ((((t0.c0)OR(rt0.c2)))OR(rt0.c4)) END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN t0.c2 THEN rt0.c5 WHEN -1944135186 THEN rt0.c5 END THEN ((((((((rt0.c0)AND('{_b~Tê_JO')))OR(rt0.c4)))AND(rt0.c2)))OR(t0.c1)) WHEN t0.c0 THEN (rt0.c5 IN ()) WHEN (t0.c1 IN ()) THEN (((rt0.c3, x'', t0.c0))<=((t0.c0, rt0.c0, rt0.c3))) ELSE ((((t0.c0)OR(rt0.c2)))OR(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN t0.c2 THEN rt0.c5 WHEN -1944135186 THEN rt0.c5 END THEN ((((((((rt0.c0)AND('{_b~Tê_JO')))OR(rt0.c4)))AND(rt0.c2)))OR(t0.c1)) WHEN t0.c0 THEN (rt0.c5 IN ()) WHEN (t0.c1 IN ()) THEN (((rt0.c3, x'', t0.c0))<=((t0.c0, rt0.c0, rt0.c3))) ELSE ((((t0.c0)OR(rt0.c2)))OR(rt0.c4)) END) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CASE WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN t0.c2 THEN rt0.c5 WHEN -1944135186 THEN rt0.c5 END THEN ((((((((rt0.c0)AND('{_b~Tê_JO')))OR(rt0.c4)))AND(rt0.c2)))OR(t0.c1)) WHEN t0.c0 THEN (rt0.c5 IN ()) WHEN (t0.c1 IN ()) THEN (((rt0.c3, x'', t0.c0))<=((t0.c0, rt0.c0, rt0.c3))) ELSE ((((t0.c0)OR(rt0.c2)))OR(rt0.c4)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c5 COLLATE RTRIM))) ORDER BY ((CAST(rt0.c0 AS BLOB))<=(((rt0.c2)|(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB))<=(((rt0.c2)|(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c5 COLLATE RTRIM))) ORDER BY ((CAST(rt0.c0 AS BLOB))<=(((rt0.c2)|(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB))<=(((rt0.c2)|(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (rt0.c5 COLLATE RTRIM))) ORDER BY ((CAST(rt0.c0 AS BLOB))<=(((rt0.c2)|(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE -920915265 END COLLATE RTRIM) ORDER BY (((rt0.c5)) NOT BETWEEN ((IFNULL(DISTINCT 0.6211779822738632, rt0.c3))) AND ((((((rt0.c3)OR(x'')))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE -920915265 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c5)) NOT BETWEEN ((IFNULL(DISTINCT 0.6211779822738632, rt0.c3))) AND ((((((rt0.c3)OR(x'')))AND(rt0.c4))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE -920915265 END COLLATE RTRIM) ORDER BY (((rt0.c5)) NOT BETWEEN ((IFNULL(DISTINCT 0.6211779822738632, rt0.c3))) AND ((((((rt0.c3)OR(x'')))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE -920915265 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c5)) NOT BETWEEN ((IFNULL(DISTINCT 0.6211779822738632, rt0.c3))) AND ((((((rt0.c3)OR(x'')))AND(rt0.c4))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE -920915265 END COLLATE RTRIM) ORDER BY (((rt0.c5)) NOT BETWEEN ((IFNULL(DISTINCT 0.6211779822738632, rt0.c3))) AND ((((((rt0.c3)OR(x'')))AND(rt0.c4)))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c2) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c2) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c2) IS TRUE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c2)LIKE(rt0.c2)) IN (CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)LIKE(rt0.c2)) IN (CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c2)LIKE(rt0.c2)) IN (CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)LIKE(rt0.c2)) IN (CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c2)LIKE(rt0.c2)) IN (CASE t0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN 0.09772694483409483 THEN rt0.c5 END)) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN 0.09772694483409483 THEN rt0.c5 END)) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN 0.09772694483409483 THEN rt0.c5 END)) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN 0.09772694483409483 THEN rt0.c5 END)) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN 0.09772694483409483 THEN rt0.c5 END)) AND (((~ (rt0.c0))))));
SELECT COUNT(*) FROM rt0, t0 WHERE (0.7956413113202664) ORDER BY (((rt0.c5)%(rt0.c3)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((0.7956413113202664) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c5)%(rt0.c3)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (0.7956413113202664) ORDER BY (((rt0.c5)%(rt0.c3)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((0.7956413113202664) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c5)%(rt0.c3)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (0.7956413113202664) ORDER BY (((rt0.c5)%(rt0.c3)) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (((t0.c2) NOT BETWEEN (t0.c0) AND ('1792886952')) IN ((~ (t0.c2))))  NULLS FIRST, ((((1.631658246E9)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2) NOT BETWEEN (t0.c0) AND ('1792886952')) IN ((~ (t0.c2))))  NULLS FIRST, ((((1.631658246E9)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (((t0.c2) NOT BETWEEN (t0.c0) AND ('1792886952')) IN ((~ (t0.c2))))  NULLS FIRST, ((((1.631658246E9)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2) NOT BETWEEN (t0.c0) AND ('1792886952')) IN ((~ (t0.c2))))  NULLS FIRST, ((((1.631658246E9)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1) ORDER BY (((t0.c2) NOT BETWEEN (t0.c0) AND ('1792886952')) IN ((~ (t0.c2))))  NULLS FIRST, ((((1.631658246E9)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((x'' IN (rt0.c5, '3\n%n'))) BETWEEN (((t0.c0)<>(t0.c1))) AND (HEX(DISTINCT rt0.c0))) WHERE (((((((rt0.c4) NOTNULL))OR(load_extension(rt0.c2, t0.c2))))AND(UPPER(DISTINCT '-1092322671'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4) NOTNULL))OR(load_extension(rt0.c2, t0.c2))))AND(UPPER(DISTINCT '-1092322671')))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((x'' IN (rt0.c5, '3\n%n'))) BETWEEN (((t0.c0)<>(t0.c1))) AND (HEX(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((x'' IN (rt0.c5, '3\n%n'))) BETWEEN (((t0.c0)<>(t0.c1))) AND (HEX(DISTINCT rt0.c0))) WHERE (((((((rt0.c4) NOTNULL))OR(load_extension(rt0.c2, t0.c2))))AND(UPPER(DISTINCT '-1092322671'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4) NOTNULL))OR(load_extension(rt0.c2, t0.c2))))AND(UPPER(DISTINCT '-1092322671')))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((x'' IN (rt0.c5, '3\n%n'))) BETWEEN (((t0.c0)<>(t0.c1))) AND (HEX(DISTINCT rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c3, rt0.c0, NULL)) BETWEEN (('\re', rt0.c1, rt0.c5)) AND ((rt0.c4, '-1161055565', rt0.c4)))))) ORDER BY CASE CASE WHEN NULL THEN rt0.c2 ELSE rt0.c3 END  WHEN ((rt0.c1)AND(rt0.c3)) THEN '' WHEN (NOT (rt0.c5)) THEN 0X560a871e WHEN ((rt0.c0) NOTNULL) THEN json_array_length(rt0.c1) ELSE (+ (0X5249c03f)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c3, rt0.c0, NULL)) BETWEEN (('\re', rt0.c1, rt0.c5)) AND ((rt0.c4, '-1161055565', rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE WHEN NULL THEN rt0.c2 ELSE rt0.c3 END  WHEN ((rt0.c1)AND(rt0.c3)) THEN '' WHEN (NOT (rt0.c5)) THEN 0X560a871e WHEN ((rt0.c0) NOTNULL) THEN json_array_length(rt0.c1) ELSE (+ (0x5249c03f)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c3, rt0.c0, NULL)) BETWEEN (('\re', rt0.c1, rt0.c5)) AND ((rt0.c4, '-1161055565', rt0.c4)))))) ORDER BY CASE CASE WHEN NULL THEN rt0.c2 ELSE rt0.c3 END  WHEN ((rt0.c1)AND(rt0.c3)) THEN '' WHEN (NOT (rt0.c5)) THEN 0X560a871e WHEN ((rt0.c0) NOTNULL) THEN json_array_length(rt0.c1) ELSE (+ (0X5249c03f)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c3, rt0.c0, NULL)) BETWEEN (('\re', rt0.c1, rt0.c5)) AND ((rt0.c4, '-1161055565', rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE WHEN NULL THEN rt0.c2 ELSE rt0.c3 END  WHEN ((rt0.c1)AND(rt0.c3)) THEN '' WHEN (NOT (rt0.c5)) THEN 0X560a871e WHEN ((rt0.c0) NOTNULL) THEN json_array_length(rt0.c1) ELSE (+ (0x5249c03f)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c3, rt0.c0, NULL)) BETWEEN (('\re', rt0.c1, rt0.c5)) AND ((rt0.c4, '-1161055565', rt0.c4)))))) ORDER BY CASE CASE WHEN NULL THEN rt0.c2 ELSE rt0.c3 END  WHEN ((rt0.c1)AND(rt0.c3)) THEN '' WHEN (NOT (rt0.c5)) THEN 0X560a871e WHEN ((rt0.c0) NOTNULL) THEN json_array_length(rt0.c1) ELSE (+ (0X5249c03f)) END  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (CAST((rt0.c4 IN (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c4 IN (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST((rt0.c4 IN (rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c4 IN (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST((rt0.c4 IN (rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 END)&((((t0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 END)&((((t0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 END)&((((t0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 END)&((((t0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 END)&((((t0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1)OR(t0.c1))))<=(((~ (t0.c0)))))) ORDER BY ((t0.c1)/(t0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)OR(t0.c1))))<=(((~ (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)/(t0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1)OR(t0.c1))))<=(((~ (t0.c0)))))) ORDER BY ((t0.c1)/(t0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)OR(t0.c1))))<=(((~ (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)/(t0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1)OR(t0.c1))))<=(((~ (t0.c0)))))) ORDER BY ((t0.c1)/(t0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((TYPEOF(DISTINCT rt0.c5))-((- (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c5))-((- (rt0.c5))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((TYPEOF(DISTINCT rt0.c5))-((- (rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c5))-((- (rt0.c5))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((TYPEOF(DISTINCT rt0.c5))-((- (rt0.c5)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY t0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN (- (t0.c2)) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN (- (t0.c2)) THEN t0.c0 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN (- (t0.c2)) THEN t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN (- (t0.c2)) THEN t0.c0 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) BETWEEN (t0.c2) AND (t0.c0))  WHEN (- (t0.c2)) THEN t0.c0 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)+((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) ORDER BY ((CAST('1121125670' AS REAL))||(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)+((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST('1121125670' AS REAL))||(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)+((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) ORDER BY ((CAST('1121125670' AS REAL))||(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)+((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST('1121125670' AS REAL))||(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)+((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) ORDER BY ((CAST('1121125670' AS REAL))||(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) ISNULL) AS BLOB));
SELECT COUNT(*) FROM t0 WHERE (((QUOTE(0Xffffffffdc988f59))-((+ (t0.c0))))) ORDER BY CAST(((t0.c2)>>(t0.c1)) AS TEXT)  NULLS LAST, ((t0.c2)<=(((t0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(0Xffffffffdc988f59))-((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2)>>(t0.c1)) AS TEXT)  NULLS LAST, ((t0.c2)<=(((t0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((QUOTE(0Xffffffffdc988f59))-((+ (t0.c0))))) ORDER BY CAST(((t0.c2)>>(t0.c1)) AS TEXT)  NULLS LAST, ((t0.c2)<=(((t0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(0Xffffffffdc988f59))-((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c2)>>(t0.c1)) AS TEXT)  NULLS LAST, ((t0.c2)<=(((t0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((QUOTE(0Xffffffffdc988f59))-((+ (t0.c0))))) ORDER BY CAST(((t0.c2)>>(t0.c1)) AS TEXT)  NULLS LAST, ((t0.c2)<=(((t0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c3)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2))  WHEN ((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)) THEN (rt0.c5 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2))  WHEN ((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)) THEN (rt0.c5 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2))  WHEN ((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)) THEN (rt0.c5 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2))  WHEN ((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)) THEN (rt0.c5 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c2))  WHEN ((((((((rt0.c0)OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)) THEN (rt0.c5 IN ()) END);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((t0.c1 IN (rt0.c4))) AND ((((rt0.c5)) NOT BETWEEN ((x'864dfa01')) AND ((t0.c1))))) WHERE (((((rt0.c0)AND(rt0.c4)))OR(((t0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c4)))OR(((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((t0.c1 IN (rt0.c4))) AND ((((rt0.c5)) NOT BETWEEN ((x'864dfa01')) AND ((t0.c1))))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((t0.c1 IN (rt0.c4))) AND ((((rt0.c5)) NOT BETWEEN ((x'864dfa01')) AND ((t0.c1))))) WHERE (((((rt0.c0)AND(rt0.c4)))OR(((t0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c4)))OR(((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((t0.c1 IN (rt0.c4))) AND ((((rt0.c5)) NOT BETWEEN ((x'864dfa01')) AND ((t0.c1))))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c1))) BETWEEN ((t0.c1 IN (rt0.c4))) AND ((((rt0.c5)) NOT BETWEEN ((x'864dfa01')) AND ((t0.c1))))) WHERE (((((rt0.c0)AND(rt0.c4)))OR(((t0.c0)&(t0.c0)))));
SELECT * FROM t0 WHERE ((((((t0.c0)AND(t0.c2)))OR(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c2)))OR(t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0)AND(t0.c2)))OR(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c2)))OR(t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0)AND(t0.c2)))OR(t0.c1)) IN ()));
SELECT * FROM rt0, t0 WHERE ((((rt0.c2 IN (rt0.c3, t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c3, t0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((rt0.c2 IN (rt0.c3, t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c3, t0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((rt0.c2 IN (rt0.c3, t0.c0))) IS FALSE));
SELECT ALL * FROM rt0 WHERE (ABS(DISTINCT ((rt0.c5)AND(rt0.c4)))) ORDER BY (LIKELY(DISTINCT rt0.c2) IN ()), ((rt0.c1 COLLATE RTRIM)|(((x'') BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c5)AND(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY (LIKELY(DISTINCT rt0.c2) IN ()), ((rt0.c1 COLLATE RTRIM)|(((x'') BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (ABS(DISTINCT ((rt0.c5)AND(rt0.c4)))) ORDER BY (LIKELY(DISTINCT rt0.c2) IN ()), ((rt0.c1 COLLATE RTRIM)|(((x'') BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c5)AND(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY (LIKELY(DISTINCT rt0.c2) IN ()), ((rt0.c1 COLLATE RTRIM)|(((x'') BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (ABS(DISTINCT ((rt0.c5)AND(rt0.c4)))) ORDER BY (LIKELY(DISTINCT rt0.c2) IN ()), ((rt0.c1 COLLATE RTRIM)|(((x'') BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((~ ('TIQfxM')) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ ('TIQfxM')) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((~ ('TIQfxM')) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ ('TIQfxM')) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((~ ('TIQfxM')) IN ()));
SELECT ALL * FROM t0 WHERE ((~ ('287684667')));
SELECT SUM(count) FROM (SELECT (((~ ('287684667'))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ ('287684667')));
SELECT SUM(count) FROM (SELECT (((~ ('287684667'))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ ('287684667')));
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE) WHERE (CAST(((((NULL)OR(rt0.c1)))OR(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)OR(rt0.c1)))OR(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE) WHERE (CAST(((((NULL)OR(rt0.c1)))OR(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)OR(rt0.c1)))OR(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) IS TRUE) WHERE (CAST(((((NULL)OR(rt0.c1)))OR(t0.c0)) AS INTEGER));
SELECT * FROM t0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN ())) ORDER BY ((((rt0.c5 COLLATE NOCASE)OR(((rt0.c0) IS TRUE))))AND((((rt0.c0))>((rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5 COLLATE NOCASE)OR(((rt0.c0) IS TRUE))))AND((((rt0.c0))>((rt0.c3))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN ())) ORDER BY ((((rt0.c5 COLLATE NOCASE)OR(((rt0.c0) IS TRUE))))AND((((rt0.c0))>((rt0.c3))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5 COLLATE NOCASE)OR(((rt0.c0) IS TRUE))))AND((((rt0.c0))>((rt0.c3))))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN ())) ORDER BY ((((rt0.c5 COLLATE NOCASE)OR(((rt0.c0) IS TRUE))))AND((((rt0.c0))>((rt0.c3))))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c2)), t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c2)), t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c2)), t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c2)), t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))OR(t0.c2)), t0.c2 COLLATE RTRIM));
SELECT ALL * FROM t0, rt0 WHERE (((((((0Xffffffff93da6c8f)AND(rt0.c3)))OR(t0.c1)))+(((t0.c2) BETWEEN (0.5518118994343235) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((0Xffffffff93da6c8f)AND(rt0.c3)))OR(t0.c1)))+(((t0.c2) BETWEEN (0.5518118994343235) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((0Xffffffff93da6c8f)AND(rt0.c3)))OR(t0.c1)))+(((t0.c2) BETWEEN (0.5518118994343235) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((0Xffffffff93da6c8f)AND(rt0.c3)))OR(t0.c1)))+(((t0.c2) BETWEEN (0.5518118994343235) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((0Xffffffff93da6c8f)AND(rt0.c3)))OR(t0.c1)))+(((t0.c2) BETWEEN (0.5518118994343235) AND (rt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((t0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c2 COLLATE BINARY IN ()));
SELECT ALL * FROM t0, rt0 WHERE (((((((t0.c1)>>(NULL)))OR(((rt0.c3)>(t0.c2)))))OR(0X8a3da4b)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)>>(NULL)))OR(((rt0.c3)>(t0.c2)))))OR(0X8a3da4b))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((t0.c1)>>(NULL)))OR(((rt0.c3)>(t0.c2)))))OR(0X8a3da4b)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)>>(NULL)))OR(((rt0.c3)>(t0.c2)))))OR(0X8a3da4b))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((t0.c1)>>(NULL)))OR(((rt0.c3)>(t0.c2)))))OR(0X8a3da4b)));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (0xffffffffee11e32a) AND (rt0.c5)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (0Xffffffffee11e32a) AND (rt0.c5)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (0xffffffffee11e32a) AND (rt0.c5)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (0Xffffffffee11e32a) AND (rt0.c5)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (0xffffffffee11e32a) AND (rt0.c5)) COLLATE NOCASE);
SELECT * FROM t0, rt0 WHERE (((rt0.c0)<=(t0.c2)) COLLATE NOCASE) ORDER BY ((rtreenode(rt0.c5, rt0.c0)) IS FALSE)  NULLS FIRST, ((((CAST(t0.c1 AS TEXT))AND((- (t0.c1)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN rt0.c4 WHEN t0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST, t0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rtreenode(rt0.c5, rt0.c0)) IS FALSE)  NULLS FIRST, ((((CAST(t0.c1 AS TEXT))AND((- (t0.c1)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN rt0.c4 WHEN t0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST, t0.c2);
SELECT * FROM t0, rt0 WHERE (((rt0.c0)<=(t0.c2)) COLLATE NOCASE) ORDER BY ((rtreenode(rt0.c5, rt0.c0)) IS FALSE)  NULLS FIRST, ((((CAST(t0.c1 AS TEXT))AND((- (t0.c1)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN rt0.c4 WHEN t0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST, t0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rtreenode(rt0.c5, rt0.c0)) IS FALSE)  NULLS FIRST, ((((CAST(t0.c1 AS TEXT))AND((- (t0.c1)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN rt0.c4 WHEN t0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST, t0.c2);
SELECT * FROM t0, rt0 WHERE (((rt0.c0)<=(t0.c2)) COLLATE NOCASE) ORDER BY ((rtreenode(rt0.c5, rt0.c0)) IS FALSE)  NULLS FIRST, ((((CAST(t0.c1 AS TEXT))AND((- (t0.c1)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN rt0.c4 WHEN t0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST, t0.c2;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM t0, rt0 WHERE (0.6588216694676794);
SELECT SUM(count) FROM (SELECT ALL ((0.6588216694676794) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (0.6588216694676794);
SELECT SUM(count) FROM (SELECT ALL ((0.6588216694676794) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (0.6588216694676794);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 0xfffffffff42d4fc2 THEN rt0.c2 END) NOTNULL) WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((t0.c2))))*((((rt0.c3))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((t0.c2))))*((((rt0.c3))<=((rt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 0xfffffffff42d4fc2 THEN rt0.c2 END) NOTNULL));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 0xfffffffff42d4fc2 THEN rt0.c2 END) NOTNULL) WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((t0.c2))))*((((rt0.c3))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((t0.c2))))*((((rt0.c3))<=((rt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 0xfffffffff42d4fc2 THEN rt0.c2 END) NOTNULL));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 0xfffffffff42d4fc2 THEN rt0.c2 END) NOTNULL) WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((t0.c2))))*((((rt0.c3))<=((rt0.c0))))));
SELECT * FROM t0 WHERE (0x1e3ff9f5);
SELECT SUM(count) FROM (SELECT ALL ((0X1e3ff9f5) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0x1e3ff9f5);
SELECT SUM(count) FROM (SELECT ALL ((0X1e3ff9f5) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0x1e3ff9f5);
SELECT ALL * FROM t0 WHERE (x'') ORDER BY ((x'')+(((t0.c2)+(t0.c1))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY ((x'')+(((t0.c2)+(t0.c1)))));
SELECT ALL * FROM t0 WHERE (x'') ORDER BY ((x'')+(((t0.c2)+(t0.c1))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY ((x'')+(((t0.c2)+(t0.c1)))));
SELECT ALL * FROM t0 WHERE (x'') ORDER BY ((x'')+(((t0.c2)+(t0.c1))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (x'') ORDER BY (((rt0.c0 IN ()))-(CASE WHEN '' THEN t0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0 IN ()))-(CASE WHEN '' THEN t0.c2 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (x'') ORDER BY (((rt0.c0 IN ()))-(CASE WHEN '' THEN t0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0 IN ()))-(CASE WHEN '' THEN t0.c2 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (x'') ORDER BY (((rt0.c0 IN ()))-(CASE WHEN '' THEN t0.c2 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)AND(rt0.c2)))&(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)AND(rt0.c2)))&(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)AND(rt0.c2)))&(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)AND(rt0.c2)))&(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4)AND(rt0.c2)))&(CAST(rt0.c1 AS BLOB))));
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c1) AND (NULL)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (NULL)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c1) AND (NULL)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (NULL)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE ((((((NULL IN ()))AND(((rt0.c5)<(rt0.c3)))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND(((rt0.c5)<(rt0.c3)))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NULL IN ()))AND(((rt0.c5)<(rt0.c3)))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND(((rt0.c5)<(rt0.c3)))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NULL IN ()))AND(((rt0.c5)<(rt0.c3)))))OR(((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))));
SELECT COUNT(*) FROM t0 WHERE ('q6') ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL (('q6') IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE ('q6') ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL (('q6') IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE ('q6') ORDER BY t0.c1;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c5);
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c2)AND(t0.c1)))AND(rt0.c0))) ISNULL)) ORDER BY ((((((rt0.c3)OR('-1446690063')))AND(0.33253316282374545)))|(CASE rt0.c3  WHEN t0.c0 THEN rt0.c5 WHEN rt0.c0 THEN t0.c0 WHEN t0.c2 THEN rt0.c4 END))  NULLS LAST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN ((((t0.c0)<(NULL)), (~ (rt0.c2)), TIME(rt0.c5, rt0.c1, t0.c1))) AND ((((((((((t0.c1)AND(rt0.c0)))AND('')))OR(t0.c0)))OR(rt0.c3)), ((rt0.c3)LIKE(t0.c1)), (((rt0.c0))>=((rt0.c5))))))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB))|(((((((((rt0.c1)OR(rt0.c1)))OR(0xffffffffb07bff78)))OR(t0.c1)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(t0.c1)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c3)OR('-1446690063')))AND(0.33253316282374545)))|(CASE rt0.c3  WHEN t0.c0 THEN rt0.c5 WHEN rt0.c0 THEN t0.c0 WHEN t0.c2 THEN rt0.c4 END))  NULLS LAST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN ((((t0.c0)<(NULL)), (~ (rt0.c2)), TIME(rt0.c5, rt0.c1, t0.c1))) AND ((((((((((t0.c1)AND(rt0.c0)))AND('')))OR(t0.c0)))OR(rt0.c3)), ((rt0.c3)LIKE(t0.c1)), (((rt0.c0))>=((rt0.c5))))))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB))|(((((((((rt0.c1)OR(rt0.c1)))OR(0Xffffffffb07bff78)))OR(t0.c1)))AND(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c2)AND(t0.c1)))AND(rt0.c0))) ISNULL)) ORDER BY ((((((rt0.c3)OR('-1446690063')))AND(0.33253316282374545)))|(CASE rt0.c3  WHEN t0.c0 THEN rt0.c5 WHEN rt0.c0 THEN t0.c0 WHEN t0.c2 THEN rt0.c4 END))  NULLS LAST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN ((((t0.c0)<(NULL)), (~ (rt0.c2)), TIME(rt0.c5, rt0.c1, t0.c1))) AND ((((((((((t0.c1)AND(rt0.c0)))AND('')))OR(t0.c0)))OR(rt0.c3)), ((rt0.c3)LIKE(t0.c1)), (((rt0.c0))>=((rt0.c5))))))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB))|(((((((((rt0.c1)OR(rt0.c1)))OR(0xffffffffb07bff78)))OR(t0.c1)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(t0.c1)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c3)OR('-1446690063')))AND(0.33253316282374545)))|(CASE rt0.c3  WHEN t0.c0 THEN rt0.c5 WHEN rt0.c0 THEN t0.c0 WHEN t0.c2 THEN rt0.c4 END))  NULLS LAST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN ((((t0.c0)<(NULL)), (~ (rt0.c2)), TIME(rt0.c5, rt0.c1, t0.c1))) AND ((((((((((t0.c1)AND(rt0.c0)))AND('')))OR(t0.c0)))OR(rt0.c3)), ((rt0.c3)LIKE(t0.c1)), (((rt0.c0))>=((rt0.c5))))))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB))|(((((((((rt0.c1)OR(rt0.c1)))OR(0Xffffffffb07bff78)))OR(t0.c1)))AND(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((((((rt0.c2)AND(t0.c1)))AND(rt0.c0))) ISNULL)) ORDER BY ((((((rt0.c3)OR('-1446690063')))AND(0.33253316282374545)))|(CASE rt0.c3  WHEN t0.c0 THEN rt0.c5 WHEN rt0.c0 THEN t0.c0 WHEN t0.c2 THEN rt0.c4 END))  NULLS LAST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN ((((t0.c0)<(NULL)), (~ (rt0.c2)), TIME(rt0.c5, rt0.c1, t0.c1))) AND ((((((((((t0.c1)AND(rt0.c0)))AND('')))OR(t0.c0)))OR(rt0.c3)), ((rt0.c3)LIKE(t0.c1)), (((rt0.c0))>=((rt0.c5))))))  NULLS FIRST, ((CAST(rt0.c1 AS BLOB))|(((((((((rt0.c1)OR(rt0.c1)))OR(0xffffffffb07bff78)))OR(t0.c1)))AND(rt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c3) BETWEEN (rt0.c5) AND (899235964)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c3) BETWEEN (rt0.c5) AND (899235964)) END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c3) BETWEEN (rt0.c5) AND (899235964)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c3) BETWEEN (rt0.c5) AND (899235964)) END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c4))  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c3) BETWEEN (rt0.c5) AND (899235964)) END);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c5)+(rt0.c4)) IN ())) ORDER BY CAST(rt0.c2 AS TEXT), CAST(rt0.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((rt0.c5)+(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(rt0.c2 AS TEXT), CAST(rt0.c0 AS INTEGER));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c5)+(rt0.c4)) IN ())) ORDER BY CAST(rt0.c2 AS TEXT), CAST(rt0.c0 AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((rt0.c5)+(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(rt0.c2 AS TEXT), CAST(rt0.c0 AS INTEGER));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c5)+(rt0.c4)) IN ())) ORDER BY CAST(rt0.c2 AS TEXT), CAST(rt0.c0 AS INTEGER);
SELECT * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('');
SELECT ALL COUNT(*) FROM rt0 WHERE (0.2798750567851547 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.2798750567851547 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.2798750567851547 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.2798750567851547 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.2798750567851547 COLLATE BINARY);
SELECT * FROM t0, rt0 WHERE ((- (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c5 END))) ORDER BY (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c5 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((- (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c5 END))) ORDER BY (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c5 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((- (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c5 END))) ORDER BY (rt0.c1 IN ()) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)>((NOT (t0.c0))))) ORDER BY (((t0.c0, t0.c1, t0.c2)) NOT BETWEEN ((TRIM(DISTINCT NULL, t0.c1), CAST(NULL AS NUMERIC), (~ (t0.c1)))) AND ((t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), '76736142'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)>((NOT (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c1, t0.c2)) NOT BETWEEN ((TRIM(DISTINCT NULL, t0.c1), CAST(NULL AS NUMERIC), (~ (t0.c1)))) AND ((t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), '76736142'))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)>((NOT (t0.c0))))) ORDER BY (((t0.c0, t0.c1, t0.c2)) NOT BETWEEN ((TRIM(DISTINCT NULL, t0.c1), CAST(NULL AS NUMERIC), (~ (t0.c1)))) AND ((t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), '76736142'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)>((NOT (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c1, t0.c2)) NOT BETWEEN ((TRIM(DISTINCT NULL, t0.c1), CAST(NULL AS NUMERIC), (~ (t0.c1)))) AND ((t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), '76736142'))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 END)>((NOT (t0.c0))))) ORDER BY (((t0.c0, t0.c1, t0.c2)) NOT BETWEEN ((TRIM(DISTINCT NULL, t0.c1), CAST(NULL AS NUMERIC), (~ (t0.c1)))) AND ((t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), '76736142'))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c1 AS BLOB))IS NOT((('-1842506141')<(t0.c1))))) ORDER BY ((ABS(t0.c2))>=((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS BLOB))IS NOT((('-1842506141')<(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((ABS(t0.c2))>=((t0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c1 AS BLOB))IS NOT((('-1842506141')<(t0.c1))))) ORDER BY ((ABS(t0.c2))>=((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS BLOB))IS NOT((('-1842506141')<(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((ABS(t0.c2))>=((t0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c1 AS BLOB))IS NOT((('-1842506141')<(t0.c1))))) ORDER BY ((ABS(t0.c2))>=((t0.c0 IN ()))) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (x'9c5b');
SELECT SUM(count) FROM (SELECT ALL ((x'9c5b') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (x'9c5b');
SELECT SUM(count) FROM (SELECT ALL ((x'9c5b') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (x'9c5b');
SELECT ALL * FROM t0 WHERE (((((x'')OR(INSTR('1831672894', t0.c2))))OR(TYPEOF(DISTINCT t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(INSTR('1831672894', t0.c2))))OR(TYPEOF(DISTINCT t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((x'')OR(INSTR('1831672894', t0.c2))))OR(TYPEOF(DISTINCT t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(INSTR('1831672894', t0.c2))))OR(TYPEOF(DISTINCT t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((x'')OR(INSTR('1831672894', t0.c2))))OR(TYPEOF(DISTINCT t0.c2))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, t0.c0)) BETWEEN (((t0.c0 IN ()), COALESCE(DISTINCT t0.c1, t0.c0, t0.c1, t0.c2), CAST(t0.c0 AS TEXT))) AND (((((t0.c1, 0.24199267241539502, t0.c1, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c0, t0.c1, t0.c1))), ((t0.c0)<(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((0.47979142018078547)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, t0.c0)) BETWEEN (((t0.c0 IN ()), COALESCE(DISTINCT t0.c1, t0.c0, t0.c1, t0.c2), CAST(t0.c0 AS TEXT))) AND (((((t0.c1, 0.24199267241539502, t0.c1, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c0, t0.c1, t0.c1))), ((t0.c0)<(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((0.47979142018078547))))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, t0.c0)) BETWEEN (((t0.c0 IN ()), COALESCE(DISTINCT t0.c1, t0.c0, t0.c1, t0.c2), CAST(t0.c0 AS TEXT))) AND (((((t0.c1, 0.24199267241539502, t0.c1, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c0, t0.c1, t0.c1))), ((t0.c0)<(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((0.47979142018078547)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, t0.c0)) BETWEEN (((t0.c0 IN ()), COALESCE(DISTINCT t0.c1, t0.c0, t0.c1, t0.c2), CAST(t0.c0 AS TEXT))) AND (((((t0.c1, 0.24199267241539502, t0.c1, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c0, t0.c1, t0.c1))), ((t0.c0)<(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((0.47979142018078547))))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, t0.c0)) BETWEEN (((t0.c0 IN ()), COALESCE(DISTINCT t0.c1, t0.c0, t0.c1, t0.c2), CAST(t0.c0 AS TEXT))) AND (((((t0.c1, 0.24199267241539502, t0.c1, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, t0.c2)) AND ((t0.c2, t0.c0, t0.c0, t0.c1, t0.c1))), ((t0.c0)<(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((0.47979142018078547)))))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c5 AS BLOB) AS INTEGER)) ORDER BY (('-1244389918')&('-2075818324'));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c5 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (('-1244389918')&('-2075818324')));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c5 AS BLOB) AS INTEGER)) ORDER BY (('-1244389918')&('-2075818324'));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c5 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (('-1244389918')&('-2075818324')));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c5 AS BLOB) AS INTEGER)) ORDER BY (('-1244389918')&('-2075818324'));
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (NULL)))+((~ (x'3d47')))));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL)))+((~ (x'3d47'))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (NULL)))+((~ (x'3d47')))));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL)))+((~ (x'3d47'))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (NULL)))+((~ (x'3d47')))));
SELECT ALL * FROM rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c5);
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE (TRIM(DISTINCT (t0.c1 IN ()), ((((((((rt0.c5)OR(t0.c1)))OR(0x553fecae)))OR(rt0.c3)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (t0.c1 IN ()), ((((((((rt0.c5)OR(t0.c1)))OR(0x553fecae)))OR(rt0.c3)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (TRIM(DISTINCT (t0.c1 IN ()), ((((((((rt0.c5)OR(t0.c1)))OR(0x553fecae)))OR(rt0.c3)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (t0.c1 IN ()), ((((((((rt0.c5)OR(t0.c1)))OR(0x553fecae)))OR(rt0.c3)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (TRIM(DISTINCT (t0.c1 IN ()), ((((((((rt0.c5)OR(t0.c1)))OR(0x553fecae)))OR(rt0.c3)))AND(rt0.c2))));
SELECT COUNT(*) FROM t0, rt0 WHERE (IFNULL(CAST(t0.c0 AS REAL), CASE rt0.c0  WHEN t0.c1 THEN x'55ca8b48' ELSE t0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(t0.c0 AS REAL), CASE rt0.c0  WHEN t0.c1 THEN x'55ca8b48' ELSE t0.c1 END)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (IFNULL(CAST(t0.c0 AS REAL), CASE rt0.c0  WHEN t0.c1 THEN x'55ca8b48' ELSE t0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(t0.c0 AS REAL), CASE rt0.c0  WHEN t0.c1 THEN x'55ca8b48' ELSE t0.c1 END)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (IFNULL(CAST(t0.c0 AS REAL), CASE rt0.c0  WHEN t0.c1 THEN x'55ca8b48' ELSE t0.c1 END));
SELECT ALL * FROM t0 WHERE (NULLIF(((x'')&(t0.c1)), (- (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((x'')&(t0.c1)), (- (t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(((x'')&(t0.c1)), (- (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((x'')&(t0.c1)), (- (t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(((x'')&(t0.c1)), (- (t0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((((0.9994568713819038))!=((rt0.c1)))) ORDER BY TRIM(DISTINCT ((rt0.c1)-(rt0.c3)), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((177846565)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0.9994568713819038))!=((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT ((rt0.c1)-(rt0.c3)), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((177846565)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((0.9994568713819038))!=((rt0.c1)))) ORDER BY TRIM(DISTINCT ((rt0.c1)-(rt0.c3)), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((177846565)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0.9994568713819038))!=((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT ((rt0.c1)-(rt0.c3)), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((177846565)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((0.9994568713819038))!=((rt0.c1)))) ORDER BY TRIM(DISTINCT ((rt0.c1)-(rt0.c3)), (((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((177846565)))) ASC;
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN 'XCTJ' END)OR(CAST(rt0.c5 AS INTEGER))))OR(((rt0.c4)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c4 THEN 'XCTJ' END)OR(CAST(rt0.c5 AS INTEGER))))OR(((rt0.c4)<<(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN 'XCTJ' END)OR(CAST(rt0.c5 AS INTEGER))))OR(((rt0.c4)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c4 THEN 'XCTJ' END)OR(CAST(rt0.c5 AS INTEGER))))OR(((rt0.c4)<<(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c4 THEN 'XCTJ' END)OR(CAST(rt0.c5 AS INTEGER))))OR(((rt0.c4)<<(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i23 WHERE (CASE WHEN rt0.c3 THEN ((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)) ELSE ((rt0.c1)>(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN ((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)) ELSE ((rt0.c1)>(rt0.c3)) END) IS TRUE)  as count FROM rt0 INDEXED BY i23);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i23 WHERE (CASE WHEN rt0.c3 THEN ((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)) ELSE ((rt0.c1)>(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN ((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)) ELSE ((rt0.c1)>(rt0.c3)) END) IS TRUE)  as count FROM rt0 INDEXED BY i23);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UNLIKELY(CAST(t0.c1 AS INTEGER))) ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(t0.c1 AS INTEGER))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UNLIKELY(CAST(t0.c1 AS INTEGER))) ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(t0.c1 AS INTEGER))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (UNLIKELY(CAST(t0.c1 AS INTEGER))) ORDER BY ((rt0.c2) NOT NULL) COLLATE NOCASE;
SELECT ALL * FROM rt0, t0 WHERE (t0.c0) ORDER BY ((((((((((t0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4))) NOT NULL), ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (x'') AND (rt0.c5))) AND (((rt0.c1)<<(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((t0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4))) NOT NULL), ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (x'') AND (rt0.c5))) AND (((rt0.c1)<<(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (t0.c0) ORDER BY ((((((((((t0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4))) NOT NULL), ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (x'') AND (rt0.c5))) AND (((rt0.c1)<<(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((((t0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4))) NOT NULL), ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (x'') AND (rt0.c5))) AND (((rt0.c1)<<(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (t0.c0) ORDER BY ((((((((((t0.c2)AND(rt0.c5)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4))) NOT NULL), ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (x'') AND (rt0.c5))) AND (((rt0.c1)<<(rt0.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))LIKE(((rt0.c1) BETWEEN (rt0.c5) AND ('ê°¿'))))) ORDER BY ((((rt0.c1)!=(rt0.c3))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))LIKE(((rt0.c1) BETWEEN (rt0.c5) AND ('ê°¿'))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<>(rt0.c3))) NOTNULL) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))LIKE(((rt0.c1) BETWEEN (rt0.c5) AND ('ê°¿'))))) ORDER BY ((((rt0.c1)!=(rt0.c3))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))LIKE(((rt0.c1) BETWEEN (rt0.c5) AND ('ê°¿'))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<>(rt0.c3))) NOTNULL) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL))LIKE(((rt0.c1) BETWEEN (rt0.c5) AND ('ê°¿'))))) ORDER BY ((((rt0.c1)!=(rt0.c3))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('');
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (0Xffffffffacdb12b5 IN ()) THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (0Xffffffffacdb12b5 IN ()) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (0Xffffffffacdb12b5 IN ()) THEN CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (0Xffffffffacdb12b5 IN ()) THEN CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (0Xffffffffacdb12b5 IN ()) THEN CAST(rt0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE)) AND ((CHAR(rt0.c5, rt0.c0, rt0.c3))))) ORDER BY ((((rt0.c5 COLLATE NOCASE)AND(((rt0.c3)GLOB(rt0.c5)))))OR(rt0.c1 COLLATE BINARY)), ((((rt0.c5)IS NOT(rt0.c1)))>(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END)) DESC, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE)) AND ((CHAR(rt0.c5, rt0.c0, rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5 COLLATE NOCASE)AND(((rt0.c3)GLOB(rt0.c5)))))OR(rt0.c1 COLLATE BINARY)), ((((rt0.c5)IS NOT(rt0.c1)))>(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END)) DESC, x'' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE)) AND ((CHAR(rt0.c5, rt0.c0, rt0.c3))))) ORDER BY ((((rt0.c5 COLLATE NOCASE)AND(((rt0.c3)GLOB(rt0.c5)))))OR(rt0.c1 COLLATE BINARY)), ((((rt0.c5)IS NOT(rt0.c1)))>(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END)) DESC, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE)) AND ((CHAR(rt0.c5, rt0.c0, rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5 COLLATE NOCASE)AND(((rt0.c3)GLOB(rt0.c5)))))OR(rt0.c1 COLLATE BINARY)), ((((rt0.c5)IS NOT(rt0.c1)))>(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END)) DESC, x'' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE)) AND ((CHAR(rt0.c5, rt0.c0, rt0.c3))))) ORDER BY ((((rt0.c5 COLLATE NOCASE)AND(((rt0.c3)GLOB(rt0.c5)))))OR(rt0.c1 COLLATE BINARY)), ((((rt0.c5)IS NOT(rt0.c1)))>(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END)) DESC, x'' ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((((((((rt0.c2) BETWEEN (0.08480908995949876) AND (t0.c0)))AND(((rt0.c5)*(rt0.c0)))))AND((((0.9295432178165558))<((rt0.c2))))))OR((x'c143' IN (rt0.c0)))))AND(0.17729291067040598)))OR(IFNULL(DISTINCT rt0.c5, 0x1835e8be))))OR((+ ('-1162323536'))))) ORDER BY CAST((((t0.c0))>=((rt0.c3))) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2) BETWEEN (0.08480908995949876) AND (t0.c0)))AND(((rt0.c5)*(rt0.c0)))))AND((((0.9295432178165558))<((rt0.c2))))))OR((x'c143' IN (rt0.c0)))))AND(0.17729291067040598)))OR(IFNULL(DISTINCT rt0.c5, 0X1835e8be))))OR((+ ('-1162323536'))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((((t0.c0))>=((rt0.c3))) AS BLOB));
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((((((((rt0.c2) BETWEEN (0.08480908995949876) AND (t0.c0)))AND(((rt0.c5)*(rt0.c0)))))AND((((0.9295432178165558))<((rt0.c2))))))OR((x'c143' IN (rt0.c0)))))AND(0.17729291067040598)))OR(IFNULL(DISTINCT rt0.c5, 0x1835e8be))))OR((+ ('-1162323536'))))) ORDER BY CAST((((t0.c0))>=((rt0.c3))) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c2) BETWEEN (0.08480908995949876) AND (t0.c0)))AND(((rt0.c5)*(rt0.c0)))))AND((((0.9295432178165558))<((rt0.c2))))))OR((x'c143' IN (rt0.c0)))))AND(0.17729291067040598)))OR(IFNULL(DISTINCT rt0.c5, 0X1835e8be))))OR((+ ('-1162323536'))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((((t0.c0))>=((rt0.c3))) AS BLOB));
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((((((((rt0.c2) BETWEEN (0.08480908995949876) AND (t0.c0)))AND(((rt0.c5)*(rt0.c0)))))AND((((0.9295432178165558))<((rt0.c2))))))OR((x'c143' IN (rt0.c0)))))AND(0.17729291067040598)))OR(IFNULL(DISTINCT rt0.c5, 0x1835e8be))))OR((+ ('-1162323536'))))) ORDER BY CAST((((t0.c0))>=((rt0.c3))) AS BLOB);
SELECT * FROM rt0, t0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END)GLOB(((rt0.c0)OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END)GLOB(((rt0.c0)OR(rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END)GLOB(((rt0.c0)OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END)GLOB(((rt0.c0)OR(rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END)GLOB(((rt0.c0)OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, t0.c2))<=((t0.c0, t0.c1, t0.c0))) COLLATE RTRIM) ORDER BY ((t0.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c1)-(t0.c2))) AND (x'dcf2'));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, t0.c2))<=((t0.c0, t0.c1, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c1)-(t0.c2))) AND (x'dcf2')));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, t0.c2))<=((t0.c0, t0.c1, t0.c0))) COLLATE RTRIM) ORDER BY ((t0.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c1)-(t0.c2))) AND (x'dcf2'));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, t0.c2))<=((t0.c0, t0.c1, t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c1)-(t0.c2))) AND (x'dcf2')));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, t0.c2))<=((t0.c0, t0.c1, t0.c0))) COLLATE RTRIM) ORDER BY ((t0.c1 COLLATE NOCASE) NOT BETWEEN (((t0.c1)-(t0.c2))) AND (x'dcf2'));
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)<=(rt0.c1)))&((((0.1445984881302963)) BETWEEN (('0.8227457592629169')) AND ((x'680f'))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)<=(rt0.c1)))&((((0.1445984881302963)) BETWEEN (('0.8227457592629169')) AND ((x'680f')))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)<=(rt0.c1)))&((((0.1445984881302963)) BETWEEN (('0.8227457592629169')) AND ((x'680f'))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)<=(rt0.c1)))&((((0.1445984881302963)) BETWEEN (('0.8227457592629169')) AND ((x'680f')))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)<=(rt0.c1)))&((((0.1445984881302963)) BETWEEN (('0.8227457592629169')) AND ((x'680f'))))));
SELECT * FROM t0, rt0 WHERE ((~ (CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((t0.c2)%(rt0.c5))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c2)%(rt0.c5))) IS FALSE) DESC);
SELECT * FROM t0, rt0 WHERE ((~ (CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((t0.c2)%(rt0.c5))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c2)%(rt0.c5))) IS FALSE) DESC);
SELECT * FROM t0, rt0 WHERE ((~ (CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((t0.c2)%(rt0.c5))) IS FALSE) DESC;
SELECT * FROM rt0 WHERE (NULLIF(((rt0.c3)>=('-62110295')), ((x'e408')-(rt0.c5)))) ORDER BY (~ ('ì¯º'));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c3)>=('-62110295')), ((x'e408')-(rt0.c5)))) IS TRUE)  as count FROM rt0 ORDER BY (~ ('ì¯º')));
SELECT * FROM rt0 WHERE (NULLIF(((rt0.c3)>=('-62110295')), ((x'e408')-(rt0.c5)))) ORDER BY (~ ('ì¯º'));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c3)>=('-62110295')), ((x'e408')-(rt0.c5)))) IS TRUE)  as count FROM rt0 ORDER BY (~ ('ì¯º')));
SELECT * FROM rt0 WHERE (NULLIF(((rt0.c3)>=('-62110295')), ((x'e408')-(rt0.c5)))) ORDER BY (~ ('ì¯º'));
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c3)))  WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 ELSE t0.c2 END THEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (x'f0bd')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c3)))  WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 ELSE t0.c2 END THEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (x'f0bd')) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c3)))  WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 ELSE t0.c2 END THEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (x'f0bd')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c3)))  WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 ELSE t0.c2 END THEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (x'f0bd')) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c3)))  WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 ELSE t0.c2 END THEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND (x'f0bd')) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0.5406516400621805 AS TEXT)) ORDER BY ((UPPER(t0.c1))IS NOT(t0.c0)), (t0.c2 IN (t0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((((t0.c1)=(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (((((t0.c0)OR(t0.c2)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.5406516400621805 AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((UPPER(t0.c1))IS NOT(t0.c0)), (t0.c2 IN (t0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((((t0.c1)=(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (((((t0.c0)OR(t0.c2)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0.5406516400621805 AS TEXT)) ORDER BY ((UPPER(t0.c1))IS NOT(t0.c0)), (t0.c2 IN (t0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((((t0.c1)=(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (((((t0.c0)OR(t0.c2)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.5406516400621805 AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((UPPER(t0.c1))IS NOT(t0.c0)), (t0.c2 IN (t0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((((t0.c1)=(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (((((t0.c0)OR(t0.c2)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(0.5406516400621805 AS TEXT)) ORDER BY ((UPPER(t0.c1))IS NOT(t0.c0)), (t0.c2 IN (t0.c0)) COLLATE NOCASE ASC  NULLS FIRST, ((((t0.c1)=(t0.c1))) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND (((((t0.c0)OR(t0.c2)))OR(t0.c0))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((+ (rt0.c4)))AND(x'')))AND(((rt0.c1)%(t0.c1)))) WHERE (CAST((rt0.c3 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c3 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((((+ (rt0.c4)))AND(x'')))AND(((rt0.c1)%(t0.c1)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((+ (rt0.c4)))AND(x'')))AND(((rt0.c1)%(t0.c1)))) WHERE (CAST((rt0.c3 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c3 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((((+ (rt0.c4)))AND(x'')))AND(((rt0.c1)%(t0.c1)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((+ (rt0.c4)))AND(x'')))AND(((rt0.c1)%(t0.c1)))) WHERE (CAST((rt0.c3 IN ()) AS NUMERIC));
SELECT * FROM rt0 CROSS JOIN t0 ON ((((((t0.c0) IS FALSE))OR((((rt0.c2, t0.c0, rt0.c5)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c1, t0.c1, rt0.c1))))))OR(((rt0.c5)<=(t0.c1)))) WHERE (rt0.c5) ORDER BY (((+ (t0.c2))) IS FALSE), (((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((((t0.c2) NOT BETWEEN (rt0.c2) AND (x'')))))  NULLS LAST, ((((rt0.c4)-(rt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((t0.c0) IS FALSE))OR((((rt0.c2, t0.c0, rt0.c5)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c1, t0.c1, rt0.c1))))))OR(((rt0.c5)<=(t0.c1)))) ORDER BY (((+ (t0.c2))) IS FALSE), (((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((((t0.c2) NOT BETWEEN (rt0.c2) AND (x'')))))  NULLS LAST, ((((rt0.c4)-(rt0.c1))) IS TRUE) DESC);
SELECT * FROM rt0 CROSS JOIN t0 ON ((((((t0.c0) IS FALSE))OR((((rt0.c2, t0.c0, rt0.c5)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c1, t0.c1, rt0.c1))))))OR(((rt0.c5)<=(t0.c1)))) WHERE (rt0.c5) ORDER BY (((+ (t0.c2))) IS FALSE), (((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((((t0.c2) NOT BETWEEN (rt0.c2) AND (x'')))))  NULLS LAST, ((((rt0.c4)-(rt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((t0.c0) IS FALSE))OR((((rt0.c2, t0.c0, rt0.c5)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c1, t0.c1, rt0.c1))))))OR(((rt0.c5)<=(t0.c1)))) ORDER BY (((+ (t0.c2))) IS FALSE), (((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((((t0.c2) NOT BETWEEN (rt0.c2) AND (x'')))))  NULLS LAST, ((((rt0.c4)-(rt0.c1))) IS TRUE) DESC);
SELECT * FROM rt0 CROSS JOIN t0 ON ((((((t0.c0) IS FALSE))OR((((rt0.c2, t0.c0, rt0.c5)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c3)) AND ((rt0.c1, t0.c1, rt0.c1))))))OR(((rt0.c5)<=(t0.c1)))) WHERE (rt0.c5) ORDER BY (((+ (t0.c2))) IS FALSE), (((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((((t0.c2) NOT BETWEEN (rt0.c2) AND (x'')))))  NULLS LAST, ((((rt0.c4)-(rt0.c1))) IS TRUE) DESC;
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON '-623020272' WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON '-623020272' ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON '-623020272' WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON '-623020272' ORDER BY NULL);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON '-623020272' WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY NULL;
SELECT * FROM t0 INNER JOIN rt0 ON CASE CAST(t0.c2 AS BLOB)  WHEN json_patch(0.11651394565134732, rt0.c1) THEN t0.c2 COLLATE BINARY END WHERE (rt0.c2) ORDER BY 'OD[B3ws-'  NULLS LAST, ((t0.c0 COLLATE NOCASE)-(((rt0.c5)LIKE(x'107b'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE CAST(t0.c2 AS BLOB)  WHEN json_patch(0.11651394565134732, rt0.c1) THEN t0.c2 COLLATE BINARY END ORDER BY 'OD[B3ws-'  NULLS LAST, ((t0.c0 COLLATE NOCASE)-(((rt0.c5)LIKE(x'107b'))))  NULLS LAST);
SELECT * FROM t0 INNER JOIN rt0 ON CASE CAST(t0.c2 AS BLOB)  WHEN json_patch(0.11651394565134732, rt0.c1) THEN t0.c2 COLLATE BINARY END WHERE (rt0.c2) ORDER BY 'OD[B3ws-'  NULLS LAST, ((t0.c0 COLLATE NOCASE)-(((rt0.c5)LIKE(x'107b'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE CAST(t0.c2 AS BLOB)  WHEN json_patch(0.11651394565134732, rt0.c1) THEN t0.c2 COLLATE BINARY END ORDER BY 'OD[B3ws-'  NULLS LAST, ((t0.c0 COLLATE NOCASE)-(((rt0.c5)LIKE(x'107b'))))  NULLS LAST);
SELECT * FROM t0 INNER JOIN rt0 ON CASE CAST(t0.c2 AS BLOB)  WHEN json_patch(0.11651394565134732, rt0.c1) THEN t0.c2 COLLATE BINARY END WHERE (rt0.c2) ORDER BY 'OD[B3ws-'  NULLS LAST, ((t0.c0 COLLATE NOCASE)-(((rt0.c5)LIKE(x'107b'))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(rt0.c0)) ISNULL)) ORDER BY (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c5)))) ASC, (((rt0.c3)) NOT BETWEEN (((- (rt0.c2)))) AND ((LAST_INSERT_ROWID())))  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c5)) AND ((x''))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c5)))) ASC, (((rt0.c3)) NOT BETWEEN (((- (rt0.c2)))) AND ((LAST_INSERT_ROWID())))  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c5)) AND ((x''))) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(rt0.c0)) ISNULL)) ORDER BY (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c5)))) ASC, (((rt0.c3)) NOT BETWEEN (((- (rt0.c2)))) AND ((LAST_INSERT_ROWID())))  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c5)) AND ((x''))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c5)))) ASC, (((rt0.c3)) NOT BETWEEN (((- (rt0.c2)))) AND ((LAST_INSERT_ROWID())))  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c5)) AND ((x''))) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(rt0.c0)) ISNULL)) ORDER BY (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c5)))) ASC, (((rt0.c3)) NOT BETWEEN (((- (rt0.c2)))) AND ((LAST_INSERT_ROWID())))  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c5)) AND ((x''))) IN ()) DESC;
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c4)));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i23, rt0 WHERE ((((('Kë³­')AND(((rt0.c5)<>(rt0.c3)))))AND(((rt0.c0) NOT BETWEEN (rt0.c5) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('Kë³­')AND(((rt0.c5)!=(rt0.c3)))))AND(((rt0.c0) NOT BETWEEN (rt0.c5) AND (t0.c0))))) IS TRUE)  as count FROM t0 INDEXED BY i23, rt0);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i23, rt0 WHERE ((((('Kë³­')AND(((rt0.c5)<>(rt0.c3)))))AND(((rt0.c0) NOT BETWEEN (rt0.c5) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('Kë³­')AND(((rt0.c5)!=(rt0.c3)))))AND(((rt0.c0) NOT BETWEEN (rt0.c5) AND (t0.c0))))) IS TRUE)  as count FROM t0 INDEXED BY i23, rt0);
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT CAST(rt0.c5 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(rt0.c5 AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT CAST(rt0.c5 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(rt0.c5 AS NUMERIC))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TYPEOF(DISTINCT CAST(rt0.c5 AS NUMERIC)));
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c2)))/(((rt0.c5)%(rt0.c5))))) ORDER BY CASE ((rt0.c1) BETWEEN ('p6') AND (rt0.c5))  WHEN '2419028' THEN (rt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(rt0.c2)))/(((rt0.c5)%(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1) BETWEEN ('p6') AND (rt0.c5))  WHEN '2419028' THEN (rt0.c0 IN ()) END);
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c2)))/(((rt0.c5)%(rt0.c5))))) ORDER BY CASE ((rt0.c1) BETWEEN ('p6') AND (rt0.c5))  WHEN '2419028' THEN (rt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(rt0.c2)))/(((rt0.c5)%(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1) BETWEEN ('p6') AND (rt0.c5))  WHEN '2419028' THEN (rt0.c0 IN ()) END);
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c2)))/(((rt0.c5)%(rt0.c5))))) ORDER BY CASE ((rt0.c1) BETWEEN ('p6') AND (rt0.c5))  WHEN '2419028' THEN (rt0.c0 IN ()) END;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON TRIM(DISTINCT ((rt0.c4)>(rt0.c0)), NULL) WHERE (((NULL) ISNULL)) ORDER BY 1354593500 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON TRIM(DISTINCT ((rt0.c4)>(rt0.c0)), NULL) ORDER BY 1354593500 ASC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON TRIM(DISTINCT ((rt0.c4)>(rt0.c0)), NULL) WHERE (((NULL) ISNULL)) ORDER BY 1354593500 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON TRIM(DISTINCT ((rt0.c4)>(rt0.c0)), NULL) ORDER BY 1354593500 ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 IN ()) IN (((rt0.c4) NOTNULL)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN (((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 IN ()) IN (((rt0.c4) NOTNULL)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN (((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 IN ()) IN (((rt0.c4) NOTNULL)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE (rt0.c4) ORDER BY 2079847196 ASC  NULLS LAST, ((((rt0.c5) NOTNULL)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, t0 ORDER BY 2079847196 ASC  NULLS LAST, ((((rt0.c5) NOTNULL)) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE (rt0.c4) ORDER BY 2079847196 ASC  NULLS LAST, ((((rt0.c5) NOTNULL)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, t0 ORDER BY 2079847196 ASC  NULLS LAST, ((((rt0.c5) NOTNULL)) IS FALSE)  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (x'');
SELECT ALL * FROM rt0 WHERE (CASE WHEN (~ (rt0.c4)) THEN ((rt0.c0)IS(rt0.c0)) WHEN ((rt0.c1) NOTNULL) THEN ((0.45791381335111914)<<(rt0.c1)) WHEN rt0.c2 THEN x'' ELSE (+ (rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c4)) THEN ((rt0.c0)IS(rt0.c0)) WHEN ((rt0.c1) NOTNULL) THEN ((0.45791381335111914)<<(rt0.c1)) WHEN rt0.c2 THEN x'' ELSE (+ (rt0.c5)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (~ (rt0.c4)) THEN ((rt0.c0)IS(rt0.c0)) WHEN ((rt0.c1) NOTNULL) THEN ((0.45791381335111914)<<(rt0.c1)) WHEN rt0.c2 THEN x'' ELSE (+ (rt0.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt0.c4)) THEN ((rt0.c0)IS(rt0.c0)) WHEN ((rt0.c1) NOTNULL) THEN ((0.45791381335111914)<<(rt0.c1)) WHEN rt0.c2 THEN x'' ELSE (+ (rt0.c5)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (~ (rt0.c4)) THEN ((rt0.c0)IS(rt0.c0)) WHEN ((rt0.c1) NOTNULL) THEN ((0.45791381335111914)<<(rt0.c1)) WHEN rt0.c2 THEN x'' ELSE (+ (rt0.c5)) END);
SELECT * FROM rt0, t0 WHERE (((- (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((- (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((- (rt0.c2)) IN ()));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON LIKELY(((((((((rt0.c1)AND(rt0.c1)))OR(x'33fa')))AND(rt0.c5)))OR(t0.c2))) WHERE (((CAST(rt0.c5 AS TEXT))GLOB((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c5 AS TEXT))GLOB((- (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON LIKELY(((((((((rt0.c1)AND(rt0.c1)))OR(x'33fa')))AND(rt0.c5)))OR(t0.c2))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON LIKELY(((((((((rt0.c1)AND(rt0.c1)))OR(x'33fa')))AND(rt0.c5)))OR(t0.c2))) WHERE (((CAST(rt0.c5 AS TEXT))GLOB((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c5 AS TEXT))GLOB((- (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON LIKELY(((((((((rt0.c1)AND(rt0.c1)))OR(x'33fa')))AND(rt0.c5)))OR(t0.c2))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON LIKELY(((((((((rt0.c1)AND(rt0.c1)))OR(x'33fa')))AND(rt0.c5)))OR(t0.c2))) WHERE (((CAST(rt0.c5 AS TEXT))GLOB((- (rt0.c0)))));
SELECT ALL * FROM rt0, t0 WHERE (((((((((NULL)AND(x'f5ff')))OR('0.1528793791688271')))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((+ (rt0.c1))))) ORDER BY (~ (t0.c1));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(x'f5ff')))OR('0.1528793791688271')))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (t0.c1)));
SELECT ALL * FROM rt0, t0 WHERE (((((((((NULL)AND(x'f5ff')))OR('0.1528793791688271')))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((+ (rt0.c1))))) ORDER BY (~ (t0.c1));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(x'f5ff')))OR('0.1528793791688271')))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (t0.c1)));
SELECT ALL * FROM rt0, t0 WHERE (((((((((NULL)AND(x'f5ff')))OR('0.1528793791688271')))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((+ (rt0.c1))))) ORDER BY (~ (t0.c1));
SELECT * FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2 COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (CAST(-610507147 AS INTEGER)) AND (CASE rt0.c4  WHEN rt0.c3 THEN t0.c0 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY (((CAST(rt0.c2 AS INTEGER), rt0.c4, CASE t0.c0  WHEN rt0.c4 THEN t0.c1 ELSE t0.c0 END, x'', CASE WHEN rt0.c5 THEN t0.c0 END))>=((IFNULL(DISTINCT t0.c1, rt0.c0), ((t0.c0)||(t0.c2)), CAST(rt0.c0 AS REAL), LAST_INSERT_ROWID(), ((rt0.c3)IS(rt0.c5))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (CAST(-610507147 AS INTEGER)) AND (CASE rt0.c4  WHEN rt0.c3 THEN t0.c0 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((CAST(rt0.c2 AS INTEGER), rt0.c4, CASE t0.c0  WHEN rt0.c4 THEN t0.c1 ELSE t0.c0 END, x'', CASE WHEN rt0.c5 THEN t0.c0 END))>=((IFNULL(DISTINCT t0.c1, rt0.c0), ((t0.c0)||(t0.c2)), CAST(rt0.c0 AS REAL), LAST_INSERT_ROWID(), ((rt0.c3)IS(rt0.c5))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (CAST(-610507147 AS INTEGER)) AND (CASE rt0.c4  WHEN rt0.c3 THEN t0.c0 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY (((CAST(rt0.c2 AS INTEGER), rt0.c4, CASE t0.c0  WHEN rt0.c4 THEN t0.c1 ELSE t0.c0 END, x'', CASE WHEN rt0.c5 THEN t0.c0 END))>=((IFNULL(DISTINCT t0.c1, rt0.c0), ((t0.c0)||(t0.c2)), CAST(rt0.c0 AS REAL), LAST_INSERT_ROWID(), ((rt0.c3)IS(rt0.c5))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (CAST(-610507147 AS INTEGER)) AND (CASE rt0.c4  WHEN rt0.c3 THEN t0.c0 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((CAST(rt0.c2 AS INTEGER), rt0.c4, CASE t0.c0  WHEN rt0.c4 THEN t0.c1 ELSE t0.c0 END, x'', CASE WHEN rt0.c5 THEN t0.c0 END))>=((IFNULL(DISTINCT t0.c1, rt0.c0), ((t0.c0)||(t0.c2)), CAST(rt0.c0 AS REAL), LAST_INSERT_ROWID(), ((rt0.c3)IS(rt0.c5))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (CAST(-610507147 AS INTEGER)) AND (CASE rt0.c4  WHEN rt0.c3 THEN t0.c0 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c0 END))) ORDER BY (((CAST(rt0.c2 AS INTEGER), rt0.c4, CASE t0.c0  WHEN rt0.c4 THEN t0.c1 ELSE t0.c0 END, x'', CASE WHEN rt0.c5 THEN t0.c0 END))>=((IFNULL(DISTINCT t0.c1, rt0.c0), ((t0.c0)||(t0.c2)), CAST(rt0.c0 AS REAL), LAST_INSERT_ROWID(), ((rt0.c3)IS(rt0.c5))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON rt0.c3 WHERE (LIKELIHOOD('937960797', 0.9842257154602007));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('937960797', 0.9842257154602007)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON rt0.c3);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON rt0.c3 WHERE (LIKELIHOOD('937960797', 0.9842257154602007));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD('937960797', 0.9842257154602007)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON rt0.c3);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON rt0.c3 WHERE (LIKELIHOOD('937960797', 0.9842257154602007));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)/(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)/(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)/(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)/(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)/(rt0.c3)) AS INTEGER));
SELECT ALL * FROM t0 WHERE ((((+ (t0.c0))) BETWEEN ((~ (t0.c1))) AND (IFNULL(DISTINCT t0.c1, NULL)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0))) BETWEEN ((~ (t0.c1))) AND (IFNULL(DISTINCT t0.c1, NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END) IS TRUE) DESC);
SELECT ALL * FROM t0 WHERE ((((+ (t0.c0))) BETWEEN ((~ (t0.c1))) AND (IFNULL(DISTINCT t0.c1, NULL)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0))) BETWEEN ((~ (t0.c1))) AND (IFNULL(DISTINCT t0.c1, NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END) IS TRUE) DESC);
SELECT ALL * FROM t0 WHERE ((((+ (t0.c0))) BETWEEN ((~ (t0.c1))) AND (IFNULL(DISTINCT t0.c1, NULL)))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END) IS TRUE) DESC;
SELECT * FROM rt0, t0 WHERE (CASE rt0.c1  WHEN ((((((((rt0.c5)OR(NULL)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c4)+(t0.c2)) ELSE ((t0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN ((((((((rt0.c5)OR(NULL)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c4)+(t0.c2)) ELSE ((t0.c2) IS TRUE) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE rt0.c1  WHEN ((((((((rt0.c5)OR(NULL)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c4)+(t0.c2)) ELSE ((t0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN ((((((((rt0.c5)OR(NULL)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c4)+(t0.c2)) ELSE ((t0.c2) IS TRUE) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE rt0.c1  WHEN ((((((((rt0.c5)OR(NULL)))AND(rt0.c4)))AND(NULL)))OR(rt0.c0)) THEN ((rt0.c4)+(t0.c2)) ELSE ((t0.c2) IS TRUE) END);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c3, rt0.c1, rt0.c1))<>((t0.c0, rt0.c4, rt0.c0))) IN ())) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3, rt0.c1, rt0.c1))<>((t0.c0, rt0.c4, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY CAST((rt0.c0 IN ()) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c3, rt0.c1, rt0.c1))<>((t0.c0, rt0.c4, rt0.c0))) IN ())) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3, rt0.c1, rt0.c1))<>((t0.c0, rt0.c4, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY CAST((rt0.c0 IN ()) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c3, rt0.c1, rt0.c1))<>((t0.c0, rt0.c4, rt0.c0))) IN ())) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c5)*(rt0.c4)) COLLATE RTRIM) ORDER BY CAST(((rt0.c5)<=(rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c5)*(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c5)<=(rt0.c2)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c5)*(rt0.c4)) COLLATE RTRIM) ORDER BY CAST(((rt0.c5)<=(rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c5)*(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c5)<=(rt0.c2)) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c5)*(rt0.c4)) COLLATE RTRIM) ORDER BY CAST(((rt0.c5)<=(rt0.c2)) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))<=(json_array_length(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))<=(json_array_length(rt0.c4)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))<=(json_array_length(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))<=(json_array_length(rt0.c4)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))<=(json_array_length(rt0.c4))));
SELECT COUNT(*) FROM t0 WHERE (CASE CASE x'6209'  WHEN t0.c1 THEN x'c68c' END  WHEN ((((((((t0.c2)OR('e/')))OR(t0.c1)))OR(t0.c1)))AND(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) ELSE ((t0.c1)=(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE x'6209'  WHEN t0.c1 THEN x'c68c' END  WHEN ((((((((t0.c2)OR('e/')))OR(t0.c1)))OR(t0.c1)))AND(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) ELSE ((t0.c1)==(NULL)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE CASE x'6209'  WHEN t0.c1 THEN x'c68c' END  WHEN ((((((((t0.c2)OR('e/')))OR(t0.c1)))OR(t0.c1)))AND(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) ELSE ((t0.c1)=(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE x'6209'  WHEN t0.c1 THEN x'c68c' END  WHEN ((((((((t0.c2)OR('e/')))OR(t0.c1)))OR(t0.c1)))AND(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) ELSE ((t0.c1)==(NULL)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE CASE x'6209'  WHEN t0.c1 THEN x'c68c' END  WHEN ((((((((t0.c2)OR('e/')))OR(t0.c1)))OR(t0.c1)))AND(t0.c1)) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) ELSE ((t0.c1)=(NULL)) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2) IS TRUE), ((t0.c0)>=(t0.c0)), ((t0.c0)GLOB(t0.c0))))>(((- (t0.c2)), IFNULL(t0.c1, t0.c2), CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2) IS TRUE), ((t0.c0)>=(t0.c0)), ((t0.c0)GLOB(t0.c0))))>(((- (t0.c2)), IFNULL(t0.c1, t0.c2), CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2) IS TRUE), ((t0.c0)>=(t0.c0)), ((t0.c0)GLOB(t0.c0))))>(((- (t0.c2)), IFNULL(t0.c1, t0.c2), CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2) IS TRUE), ((t0.c0)>=(t0.c0)), ((t0.c0)GLOB(t0.c0))))>(((- (t0.c2)), IFNULL(t0.c1, t0.c2), CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c2) IS TRUE), ((t0.c0)>=(t0.c0)), ((t0.c0)GLOB(t0.c0))))>(((- (t0.c2)), IFNULL(t0.c1, t0.c2), CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))));
SELECT ALL * FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) BETWEEN (((((t0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))) AND ((rt0.c3))) WHERE ((((x'')&(-263478359)) IN (((rt0.c2)>=(t0.c2)), CAST(0.6615110283916643 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((x'')&(-263478359)) IN (((rt0.c2)>=(t0.c2)), CAST(0.6615110283916643 AS INTEGER)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) BETWEEN (((((t0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))) AND ((rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) BETWEEN (((((t0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))) AND ((rt0.c3))) WHERE ((((x'')&(-263478359)) IN (((rt0.c2)>=(t0.c2)), CAST(0.6615110283916643 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((x'')&(-263478359)) IN (((rt0.c2)>=(t0.c2)), CAST(0.6615110283916643 AS INTEGER)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) BETWEEN (((((t0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))) AND ((rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c2)) BETWEEN (((((t0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))) AND ((rt0.c3))) WHERE ((((x'')&(-263478359)) IN (((rt0.c2)>=(t0.c2)), CAST(0.6615110283916643 AS INTEGER))));
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN COALESCE(t0.c2, x'') END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c2  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN COALESCE(t0.c2, x'') END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN COALESCE(t0.c2, x'') END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c2  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN COALESCE(t0.c2, x'') END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN COALESCE(t0.c2, x'') END);
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c0 AS BLOB)))<((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS BLOB)))<((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c0 AS BLOB)))<((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS BLOB)))<((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0 WHERE ((((CAST(rt0.c0 AS BLOB)))<((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))) ORDER BY rt0.c0;
SELECT * FROM rt0, t0 WHERE ('-919407349') ORDER BY CAST((- (rt0.c3)) AS TEXT) DESC  NULLS FIRST, TYPEOF(DISTINCT t0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('-919407349') IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((- (rt0.c3)) AS TEXT) DESC  NULLS FIRST, TYPEOF(DISTINCT t0.c0) COLLATE NOCASE DESC);
SELECT * FROM rt0, t0 WHERE ('-919407349') ORDER BY CAST((- (rt0.c3)) AS TEXT) DESC  NULLS FIRST, TYPEOF(DISTINCT t0.c0) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('-919407349') IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((- (rt0.c3)) AS TEXT) DESC  NULLS FIRST, TYPEOF(DISTINCT t0.c0) COLLATE NOCASE DESC);
SELECT * FROM rt0, t0 WHERE ('-919407349') ORDER BY CAST((- (rt0.c3)) AS TEXT) DESC  NULLS FIRST, TYPEOF(DISTINCT t0.c0) COLLATE NOCASE DESC;
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (((((((((0.039151507446192 IN ()))AND((- (t0.c2)))))OR(((rt0.c4)*(rt0.c0)))))OR((('B\natRW') IS TRUE))))OR((((rt0.c0, t0.c2, rt0.c5)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, t0.c1, t0.c1))))) WHERE ((+ (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((((((((0.039151507446192 IN ()))AND((- (t0.c2)))))OR(((rt0.c4)*(rt0.c0)))))OR((('B\natRW') IS TRUE))))OR((((rt0.c0, t0.c2, rt0.c5)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, t0.c1, t0.c1))))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (((((((((0.039151507446192 IN ()))AND((- (t0.c2)))))OR(((rt0.c4)*(rt0.c0)))))OR((('B\natRW') IS TRUE))))OR((((rt0.c0, t0.c2, rt0.c5)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, t0.c1, t0.c1))))) WHERE ((+ (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((((((((0.039151507446192 IN ()))AND((- (t0.c2)))))OR(((rt0.c4)*(rt0.c0)))))OR((('B\natRW') IS TRUE))))OR((((rt0.c0, t0.c2, rt0.c5)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, t0.c1, t0.c1))))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON (((((((((0.039151507446192 IN ()))AND((- (t0.c2)))))OR(((rt0.c4)*(rt0.c0)))))OR((('B\natRW') IS TRUE))))OR((((rt0.c0, t0.c2, rt0.c5)) NOT BETWEEN ((t0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, t0.c1, t0.c1))))) WHERE ((+ (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(t0.c2)))));
SELECT ALL * FROM t0 WHERE ((- (((0.21525691308728756) BETWEEN (NULL) AND (t0.c0))))) ORDER BY ((CAST(t0.c1 AS BLOB)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((0.21525691308728756) BETWEEN (NULL) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS BLOB)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((- (((0.21525691308728756) BETWEEN (NULL) AND (t0.c0))))) ORDER BY ((CAST(t0.c1 AS BLOB)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((0.21525691308728756) BETWEEN (NULL) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS BLOB)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((- (((0.21525691308728756) BETWEEN (NULL) AND (t0.c0))))) ORDER BY ((CAST(t0.c1 AS BLOB)) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c1)IS NOT(rt0.c2))) IS FALSE) WHERE (CAST(json_array(t0.c2, rt0.c3, rt0.c2, x'eab4') AS BLOB)) ORDER BY ((((t0.c2)IS(rt0.c2)))<=((x'a53c' IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(json_array(t0.c2, rt0.c3, rt0.c2, x'eab4') AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c1)IS NOT(rt0.c2))) IS FALSE) ORDER BY ((((t0.c2)IS(rt0.c2)))<=((x'a53c' IN ()))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c1)IS NOT(rt0.c2))) IS FALSE) WHERE (CAST(json_array(t0.c2, rt0.c3, rt0.c2, x'eab4') AS BLOB)) ORDER BY ((((t0.c2)IS(rt0.c2)))<=((x'a53c' IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(json_array(t0.c2, rt0.c3, rt0.c2, x'eab4') AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c1)IS NOT(rt0.c2))) IS FALSE) ORDER BY ((((t0.c2)IS(rt0.c2)))<=((x'a53c' IN ()))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((NOT (t0.c2)))!=((t0.c2 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2)))!=((t0.c2 IN (rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((NOT (t0.c2)))!=((t0.c2 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2)))!=((t0.c2 IN (rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((NOT (t0.c2)))!=((t0.c2 IN (rt0.c3)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1 IN (t0.c2)), ((t0.c0)<<(t0.c2)), ((t0.c0)/(t0.c0)), ((t0.c1)<=(x'defe')), json_extract(t0.c2, t0.c2)))==(((((t0.c1))<((t0.c2))), (((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, t0.c1, t0.c0))), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))), CAST(t0.c2 AS BLOB), ((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1 IN (t0.c2)), ((t0.c0)<<(t0.c2)), ((t0.c0)/(t0.c0)), ((t0.c1)<=(x'defe')), json_extract(t0.c2, t0.c2)))==(((((t0.c1))<((t0.c2))), (((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, t0.c1, t0.c0))), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))), CAST(t0.c2 AS BLOB), ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1 IN (t0.c2)), ((t0.c0)<<(t0.c2)), ((t0.c0)/(t0.c0)), ((t0.c1)<=(x'defe')), json_extract(t0.c2, t0.c2)))==(((((t0.c1))<((t0.c2))), (((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, t0.c1, t0.c0))), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))), CAST(t0.c2 AS BLOB), ((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1 IN (t0.c2)), ((t0.c0)<<(t0.c2)), ((t0.c0)/(t0.c0)), ((t0.c1)<=(x'defe')), json_extract(t0.c2, t0.c2)))==(((((t0.c1))<((t0.c2))), (((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, t0.c1, t0.c0))), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))), CAST(t0.c2 AS BLOB), ((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1 IN (t0.c2)), ((t0.c0)<<(t0.c2)), ((t0.c0)/(t0.c0)), ((t0.c1)<=(x'defe')), json_extract(t0.c2, t0.c2)))==(((((t0.c1))<((t0.c2))), (((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, t0.c1, t0.c0))), (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))), CAST(t0.c2 AS BLOB), ((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c2) ISNULL) THEN t0.c0 ELSE ((((t0.c1)OR(t0.c1)))AND(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) ISNULL) THEN t0.c0 ELSE ((((t0.c1)OR(t0.c1)))AND(t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c2) ISNULL) THEN t0.c0 ELSE ((((t0.c1)OR(t0.c1)))AND(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2) ISNULL) THEN t0.c0 ELSE ((((t0.c1)OR(t0.c1)))AND(t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c2) ISNULL) THEN t0.c0 ELSE ((((t0.c1)OR(t0.c1)))AND(t0.c1)) END);
SELECT ALL * FROM t0 WHERE ((COALESCE(DISTINCT t0.c2, t0.c1, t0.c1, t0.c1) IN ((((t0.c0))!=((t0.c0))), (t0.c2 IN ())))) ORDER BY 0.9817785358436497;
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT t0.c2, t0.c1, t0.c1, t0.c1) IN ((((t0.c0))!=((t0.c0))), (t0.c2 IN ())))) IS TRUE)  as count FROM t0 ORDER BY 0.9817785358436497);
SELECT ALL * FROM t0 WHERE ((COALESCE(DISTINCT t0.c2, t0.c1, t0.c1, t0.c1) IN ((((t0.c0))!=((t0.c0))), (t0.c2 IN ())))) ORDER BY 0.9817785358436497;
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT t0.c2, t0.c1, t0.c1, t0.c1) IN ((((t0.c0))!=((t0.c0))), (t0.c2 IN ())))) IS TRUE)  as count FROM t0 ORDER BY 0.9817785358436497);
SELECT ALL * FROM t0 WHERE ((COALESCE(DISTINCT t0.c2, t0.c1, t0.c1, t0.c1) IN ((((t0.c0))!=((t0.c0))), (t0.c2 IN ())))) ORDER BY 0.9817785358436497;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) IS TRUE) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) IS TRUE) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c2) IS TRUE) END);
SELECT ALL * FROM rt0 WHERE (CASE 0x7209fe9c  WHEN x'' THEN rt0.c5 ELSE rt0.c0 END) ORDER BY CAST(LIKELIHOOD(rt0.c1, 0.4623965379650321) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0X7209fe9c  WHEN x'' THEN rt0.c5 ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY CAST(LIKELIHOOD(rt0.c1, 0.4623965379650321) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE 0x7209fe9c  WHEN x'' THEN rt0.c5 ELSE rt0.c0 END) ORDER BY CAST(LIKELIHOOD(rt0.c1, 0.4623965379650321) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 0X7209fe9c  WHEN x'' THEN rt0.c5 ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY CAST(LIKELIHOOD(rt0.c1, 0.4623965379650321) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE 0x7209fe9c  WHEN x'' THEN rt0.c5 ELSE rt0.c0 END) ORDER BY CAST(LIKELIHOOD(rt0.c1, 0.4623965379650321) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN (rt0.c4) AND ((rt0.c3 IN ('A'))))) ORDER BY rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) BETWEEN (rt0.c4) AND ((rt0.c3 IN ('A'))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c5);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN (rt0.c4) AND ((rt0.c3 IN ('A'))))) ORDER BY rt0.c5;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) BETWEEN (rt0.c4) AND ((rt0.c3 IN ('A'))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c5);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) BETWEEN (rt0.c4) AND ((rt0.c3 IN ('A'))))) ORDER BY rt0.c5;
SELECT COUNT(*) FROM t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (x'');
SELECT * FROM t0 WHERE (((x'f991') NOTNULL)) ORDER BY CASE ((x'') ISNULL)  WHEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))) THEN ((((t0.c2)OR(t0.c1)))AND(t0.c2)) ELSE (- (t0.c1)) END  NULLS LAST, (((t0.c2 IN ()))<(GLOB(t0.c2, t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'f991') NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE ((x'') ISNULL)  WHEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))) THEN ((((t0.c2)OR(t0.c1)))AND(t0.c2)) ELSE (- (t0.c1)) END  NULLS LAST, (((t0.c2 IN ()))<(GLOB(t0.c2, t0.c1))) DESC);
SELECT * FROM t0 WHERE (((x'f991') NOTNULL)) ORDER BY CASE ((x'') ISNULL)  WHEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))) THEN ((((t0.c2)OR(t0.c1)))AND(t0.c2)) ELSE (- (t0.c1)) END  NULLS LAST, (((t0.c2 IN ()))<(GLOB(t0.c2, t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'f991') NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE ((x'') ISNULL)  WHEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))) THEN ((((t0.c2)OR(t0.c1)))AND(t0.c2)) ELSE (- (t0.c1)) END  NULLS LAST, (((t0.c2 IN ()))<(GLOB(t0.c2, t0.c1))) DESC);
SELECT * FROM t0 WHERE (((x'f991') NOTNULL)) ORDER BY CASE ((x'') ISNULL)  WHEN (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2))) THEN ((((t0.c2)OR(t0.c1)))AND(t0.c2)) ELSE (- (t0.c1)) END  NULLS LAST, (((t0.c2 IN ()))<(GLOB(t0.c2, t0.c1))) DESC;
SELECT ALL * FROM t0, rt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY ((((rt0.c0)AND(rt0.c0)))%(((t0.c2) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)AND(rt0.c0)))%(((t0.c2) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY ((((rt0.c0)AND(rt0.c0)))%(((t0.c2) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)AND(rt0.c0)))%(((t0.c2) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY ((((rt0.c0)AND(rt0.c0)))%(((t0.c2) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c4 COLLATE NOCASE)>>((((rt0.c3, rt0.c5, rt0.c3)) NOT BETWEEN ((t0.c1, rt0.c1, rt0.c3)) AND ((rt0.c2, t0.c0, '0.29718363913636225'))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c4 COLLATE NOCASE)>>((((rt0.c3, rt0.c5, rt0.c3)) NOT BETWEEN ((t0.c1, rt0.c1, rt0.c3)) AND ((rt0.c2, t0.c0, '0.29718363913636225'))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c4 COLLATE NOCASE)>>((((rt0.c3, rt0.c5, rt0.c3)) NOT BETWEEN ((t0.c1, rt0.c1, rt0.c3)) AND ((rt0.c2, t0.c0, '0.29718363913636225'))))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c4 COLLATE NOCASE)>>((((rt0.c3, rt0.c5, rt0.c3)) NOT BETWEEN ((t0.c1, rt0.c1, rt0.c3)) AND ((rt0.c2, t0.c0, '0.29718363913636225'))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c4 COLLATE NOCASE)>>((((rt0.c3, rt0.c5, rt0.c3)) NOT BETWEEN ((t0.c1, rt0.c1, rt0.c3)) AND ((rt0.c2, t0.c0, '0.29718363913636225'))))) WHERE (x'');
SELECT * FROM rt0 WHERE (((rt0.c3 IN ()) IN (CAST(rt0.c5 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN (CAST(rt0.c5 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3 IN ()) IN (CAST(rt0.c5 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN (CAST(rt0.c5 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3 IN ()) IN (CAST(rt0.c5 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i41, t0 WHERE ((((((((((((t0.c0)OR(rt0.c1)))OR(0.9614014268328349)))AND('390811306')))AND(0.9941168495977583))))>((x'94f8')))) ORDER BY TYPEOF((rt0.c4 IN ())) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0)OR(rt0.c1)))OR(0.9614014268328349)))AND('390811306')))AND(0.9941168495977583))))>((x'94f8')))) IS TRUE)  as count FROM rt0 INDEXED BY i41, t0 ORDER BY TYPEOF((rt0.c4 IN ())) ASC);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i41, t0 WHERE ((((((((((((t0.c0)OR(rt0.c1)))OR(0.9614014268328349)))AND('390811306')))AND(0.9941168495977583))))>((x'94f8')))) ORDER BY TYPEOF((rt0.c4 IN ())) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0)OR(rt0.c1)))OR(0.9614014268328349)))AND('390811306')))AND(0.9941168495977583))))>((x'94f8')))) IS TRUE)  as count FROM rt0 INDEXED BY i41, t0 ORDER BY TYPEOF((rt0.c4 IN ())) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(json_patch(t0.c1, t0.c2) AS INTEGER)) ORDER BY (NOT (((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))) DESC, CAST(SQLITE_COMPILEOPTION_GET(t0.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(t0.c1, t0.c2) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (NOT (((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))) DESC, CAST(SQLITE_COMPILEOPTION_GET(t0.c0) AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(json_patch(t0.c1, t0.c2) AS INTEGER)) ORDER BY (NOT (((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))) DESC, CAST(SQLITE_COMPILEOPTION_GET(t0.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(t0.c1, t0.c2) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (NOT (((((((((t0.c1)AND(t0.c0)))OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))) DESC, CAST(SQLITE_COMPILEOPTION_GET(t0.c0) AS BLOB));
SELECT * FROM t0 WHERE (NULL) ORDER BY GLOB((t0.c0 IN ()), t0.c0 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY GLOB((t0.c0 IN ()), t0.c0 COLLATE RTRIM)  NULLS LAST);
SELECT * FROM t0 WHERE (NULL) ORDER BY GLOB((t0.c0 IN ()), t0.c0 COLLATE RTRIM)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY GLOB((t0.c0 IN ()), t0.c0 COLLATE RTRIM)  NULLS LAST);
SELECT * FROM t0 WHERE (NULL) ORDER BY GLOB((t0.c0 IN ()), t0.c0 COLLATE RTRIM)  NULLS LAST;
SELECT * FROM t0 WHERE ((NOT (x'7966')));
SELECT SUM(count) FROM (SELECT (((NOT (x'7966'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (x'7966')));
SELECT SUM(count) FROM (SELECT (((NOT (x'7966'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (x'7966')));
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)<=(t0.c1)) COLLATE NOCASE) ORDER BY (- (((t0.c1)IS NOT(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2)<=(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c1)IS NOT(t0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)<=(t0.c1)) COLLATE NOCASE) ORDER BY (- (((t0.c1)IS NOT(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2)<=(t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (- (((t0.c1)IS NOT(t0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2)<=(t0.c1)) COLLATE NOCASE) ORDER BY (- (((t0.c1)IS NOT(t0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c5)))OR(rt0.c3))) IS TRUE) WHERE (((t0.c1 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c5)))OR(rt0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c5)))OR(rt0.c3))) IS TRUE) WHERE (((t0.c1 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c5)))OR(rt0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c3)OR(rt0.c5)))OR(rt0.c3))) IS TRUE) WHERE (((t0.c1 COLLATE RTRIM) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS((NOT (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS((NOT (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS((NOT (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (ABS((NOT (rt0.c1))));
SELECT COUNT(*) FROM t0 WHERE (CASE '-1092191962'  WHEN ((t0.c1)+(x'')) THEN LOWER(DISTINCT t0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE '-1092191962'  WHEN ((t0.c1)+(x'')) THEN LOWER(DISTINCT t0.c1) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE '-1092191962'  WHEN ((t0.c1)+(x'')) THEN LOWER(DISTINCT t0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE '-1092191962'  WHEN ((t0.c1)+(x'')) THEN LOWER(DISTINCT t0.c1) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE '-1092191962'  WHEN ((t0.c1)+(x'')) THEN LOWER(DISTINCT t0.c1) END);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY (((((t0.c0)OR(t0.c2)))AND(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)OR(t0.c2)))AND(t0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY (((((t0.c0)OR(t0.c2)))AND(t0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)OR(t0.c2)))AND(t0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) COLLATE NOCASE COLLATE BINARY) ORDER BY (((((t0.c0)OR(t0.c2)))AND(t0.c0)) IN ()) ASC;
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c4)+(rt0.c3))))) ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT), CASE WHEN ((rt0.c2)IS NOT(rt0.c3)) THEN ((((0.45115430175097904)AND(rt0.c3)))OR(rt0.c1)) ELSE CASE WHEN x'' THEN rt0.c5 ELSE NULL END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c4)+(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT), CASE WHEN ((rt0.c2)IS NOT(rt0.c3)) THEN ((((0.45115430175097904)AND(rt0.c3)))OR(rt0.c1)) ELSE CASE WHEN x'' THEN rt0.c5 ELSE NULL END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c4)+(rt0.c3))))) ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT), CASE WHEN ((rt0.c2)IS NOT(rt0.c3)) THEN ((((0.45115430175097904)AND(rt0.c3)))OR(rt0.c1)) ELSE CASE WHEN x'' THEN rt0.c5 ELSE NULL END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c4)+(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT), CASE WHEN ((rt0.c2)IS NOT(rt0.c3)) THEN ((((0.45115430175097904)AND(rt0.c3)))OR(rt0.c1)) ELSE CASE WHEN x'' THEN rt0.c5 ELSE NULL END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c4)+(rt0.c3))))) ORDER BY CAST(((rt0.c1) NOTNULL) AS TEXT), CASE WHEN ((rt0.c2)IS NOT(rt0.c3)) THEN ((((0.45115430175097904)AND(rt0.c3)))OR(rt0.c1)) ELSE CASE WHEN x'' THEN rt0.c5 ELSE NULL END END  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (CASE ((t0.c1) NOT BETWEEN (0.3197648175850806) AND (t0.c2))  WHEN (+ (NULL)) THEN COALESCE(rt0.c4, rt0.c4, rt0.c2, rt0.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOT BETWEEN (0.3197648175850806) AND (t0.c2))  WHEN (+ (NULL)) THEN COALESCE(rt0.c4, rt0.c4, rt0.c2, rt0.c5) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE ((t0.c1) NOT BETWEEN (0.3197648175850806) AND (t0.c2))  WHEN (+ (NULL)) THEN COALESCE(rt0.c4, rt0.c4, rt0.c2, rt0.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1) NOT BETWEEN (0.3197648175850806) AND (t0.c2))  WHEN (+ (NULL)) THEN COALESCE(rt0.c4, rt0.c4, rt0.c2, rt0.c5) END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE ((t0.c1) NOT BETWEEN (0.3197648175850806) AND (t0.c2))  WHEN (+ (NULL)) THEN COALESCE(rt0.c4, rt0.c4, rt0.c2, rt0.c5) END);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))AND(NULL)))IS(CASE x'ccb85ad5'  WHEN 0.5366580185922333 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c3 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND(rt0.c2)))AND(NULL)))IS(CASE x'ccb85ad5'  WHEN 0.5366580185922333 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c3 END AS BLOB));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))AND(NULL)))IS(CASE x'ccb85ad5'  WHEN 0.5366580185922333 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c3 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND(rt0.c2)))AND(NULL)))IS(CASE x'ccb85ad5'  WHEN 0.5366580185922333 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c3 END AS BLOB));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))AND(NULL)))IS(CASE x'ccb85ad5'  WHEN 0.5366580185922333 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY CAST(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c3 END AS BLOB);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE TRIM(DISTINCT t0.c2, 1700328262)  WHEN ((t0.c2)/(t0.c1)) THEN ('-299192928' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT t0.c2, 1700328262)  WHEN ((t0.c2)/(t0.c1)) THEN ('-299192928' IN ()) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE TRIM(DISTINCT t0.c2, 1700328262)  WHEN ((t0.c2)/(t0.c1)) THEN ('-299192928' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT t0.c2, 1700328262)  WHEN ((t0.c2)/(t0.c1)) THEN ('-299192928' IN ()) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE TRIM(DISTINCT t0.c2, 1700328262)  WHEN ((t0.c2)/(t0.c1)) THEN ('-299192928' IN ()) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((0.2126248269979234) IS FALSE)) NOT BETWEEN (((rt0.c1)<(rt0.c2))) AND (t0.c1))) ORDER BY -2053594632 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.2126248269979234) IS FALSE)) NOT BETWEEN (((rt0.c1)<(rt0.c2))) AND (t0.c1))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 ORDER BY -2053594632 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((0.2126248269979234) IS FALSE)) NOT BETWEEN (((rt0.c1)<(rt0.c2))) AND (t0.c1))) ORDER BY -2053594632 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.2126248269979234) IS FALSE)) NOT BETWEEN (((rt0.c1)<(rt0.c2))) AND (t0.c1))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 ORDER BY -2053594632 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c1)<(NULL)))OR(NULL)))OR(((t0.c1)!=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)<(NULL)))OR(NULL)))OR(((t0.c1)!=(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c1)<(NULL)))OR(NULL)))OR(((t0.c1)!=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)<(NULL)))OR(NULL)))OR(((t0.c1)!=(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c1)<(NULL)))OR(NULL)))OR(((t0.c1)!=(t0.c1)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((t0.c2)||(rt0.c5)) THEN rt0.c2 ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY ((rt0.c2)IS(((((t0.c2)OR(rt0.c3)))OR(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN ((t0.c2)||(rt0.c5)) THEN rt0.c2 ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2)IS(((((t0.c2)OR(rt0.c3)))OR(t0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((t0.c2)||(rt0.c5)) THEN rt0.c2 ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY ((rt0.c2)IS(((((t0.c2)OR(rt0.c3)))OR(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN ((t0.c2)||(rt0.c5)) THEN rt0.c2 ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2)IS(((((t0.c2)OR(rt0.c3)))OR(t0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN ((t0.c2)||(rt0.c5)) THEN rt0.c2 ELSE (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY ((rt0.c2)IS(((((t0.c2)OR(rt0.c3)))OR(t0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((((NOT (rt0.c5)))+('3\n%n'))) ORDER BY (LIKELIHOOD(t0.c1, 0.03343173889469231) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c5)))+('3\n%n'))) IS TRUE)  as count FROM t0, rt0 ORDER BY (LIKELIHOOD(t0.c1, 0.03343173889469231) IN ()) DESC);
SELECT ALL * FROM t0, rt0 WHERE ((((NOT (rt0.c5)))+('3\n%n'))) ORDER BY (LIKELIHOOD(t0.c1, 0.03343173889469231) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c5)))+('3\n%n'))) IS TRUE)  as count FROM t0, rt0 ORDER BY (LIKELIHOOD(t0.c1, 0.03343173889469231) IN ()) DESC);
SELECT ALL * FROM t0, rt0 WHERE ((((NOT (rt0.c5)))+('3\n%n'))) ORDER BY (LIKELIHOOD(t0.c1, 0.03343173889469231) IN ()) DESC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST((rt0.c5 IN ()) AS BLOB) WHERE (x'') ORDER BY CASE ((rt0.c0)||(rt0.c4))  WHEN ((rt0.c0)<(t0.c1)) THEN ((rt0.c0)-(t0.c2)) END ASC, (rt0.c3 IN (rt0.c5, rt0.c4)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST((rt0.c5 IN ()) AS BLOB) ORDER BY CASE ((rt0.c0)||(rt0.c4))  WHEN ((rt0.c0)<(t0.c1)) THEN ((rt0.c0)-(t0.c2)) END ASC, (rt0.c3 IN (rt0.c5, rt0.c4)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST((rt0.c5 IN ()) AS BLOB) WHERE (x'') ORDER BY CASE ((rt0.c0)||(rt0.c4))  WHEN ((rt0.c0)<(t0.c1)) THEN ((rt0.c0)-(t0.c2)) END ASC, (rt0.c3 IN (rt0.c5, rt0.c4)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST((rt0.c5 IN ()) AS BLOB) ORDER BY CASE ((rt0.c0)||(rt0.c4))  WHEN ((rt0.c0)<(t0.c1)) THEN ((rt0.c0)-(t0.c2)) END ASC, (rt0.c3 IN (rt0.c5, rt0.c4)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST((rt0.c5 IN ()) AS BLOB) WHERE (x'') ORDER BY CASE ((rt0.c0)||(rt0.c4))  WHEN ((rt0.c0)<(t0.c1)) THEN ((rt0.c0)-(t0.c2)) END ASC, (rt0.c3 IN (rt0.c5, rt0.c4)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM rt0 WHERE (ABS(DISTINCT rt0.c0) COLLATE RTRIM) ORDER BY ((((rt0.c5) IS FALSE)) NOTNULL), (- (rt0.c0)) DESC  NULLS FIRST, x'b2ec';
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5) IS FALSE)) NOTNULL), (- (rt0.c0)) DESC  NULLS FIRST, x'b2ec');
SELECT COUNT(*) FROM rt0 WHERE (ABS(DISTINCT rt0.c0) COLLATE RTRIM) ORDER BY ((((rt0.c5) IS FALSE)) NOTNULL), (- (rt0.c0)) DESC  NULLS FIRST, x'b2ec';
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c5) IS FALSE)) NOTNULL), (- (rt0.c0)) DESC  NULLS FIRST, x'b2ec');
SELECT COUNT(*) FROM rt0 WHERE (ABS(DISTINCT rt0.c0) COLLATE RTRIM) ORDER BY ((((rt0.c5) IS FALSE)) NOTNULL), (- (rt0.c0)) DESC  NULLS FIRST, x'b2ec';
SELECT * FROM t0, rt0 WHERE (((rt0.c1)LIKE(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN '-1600209433' THEN t0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE '' END))) ORDER BY 0.038148242122347464 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)LIKE(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN '-1600209433' THEN t0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE '' END))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.038148242122347464 DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((rt0.c1)LIKE(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN '-1600209433' THEN t0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE '' END))) ORDER BY 0.038148242122347464 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)LIKE(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN '-1600209433' THEN t0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE '' END))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.038148242122347464 DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((rt0.c1)LIKE(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 WHEN '-1600209433' THEN t0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE '' END))) ORDER BY 0.038148242122347464 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((~ (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((~ (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((~ (t0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((x'')/(t0.c2)) IN (((t0.c0)>=(rt0.c1))))) ORDER BY rt0.c1 ASC, CASE CAST(rt0.c0 AS BLOB)  WHEN 0.32625137653934544 THEN UPPER(rt0.c0) ELSE (rt0.c5 IN (t0.c2, t0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'')/(t0.c2)) IN (((t0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC, CASE CAST(rt0.c0 AS BLOB)  WHEN 0.32625137653934544 THEN UPPER(rt0.c0) ELSE (rt0.c5 IN (t0.c2, t0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((x'')/(t0.c2)) IN (((t0.c0)>=(rt0.c1))))) ORDER BY rt0.c1 ASC, CASE CAST(rt0.c0 AS BLOB)  WHEN 0.32625137653934544 THEN UPPER(rt0.c0) ELSE (rt0.c5 IN (t0.c2, t0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'')/(t0.c2)) IN (((t0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC, CASE CAST(rt0.c0 AS BLOB)  WHEN 0.32625137653934544 THEN UPPER(rt0.c0) ELSE (rt0.c5 IN (t0.c2, t0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((x'')/(t0.c2)) IN (((t0.c0)>=(rt0.c1))))) ORDER BY rt0.c1 ASC, CASE CAST(rt0.c0 AS BLOB)  WHEN 0.32625137653934544 THEN UPPER(rt0.c0) ELSE (rt0.c5 IN (t0.c2, t0.c2)) END  NULLS LAST;
SELECT * FROM t0 WHERE (t0.c1) ORDER BY ((((((((NULL)AND(((t0.c0)<>(t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((NOT (t0.c1)))))AND(((t0.c0)+(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((((((((NULL)AND(((t0.c0)<>(t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((NOT (t0.c1)))))AND(((t0.c0)+(t0.c2)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c1) ORDER BY ((((((((NULL)AND(((t0.c0)<>(t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((NOT (t0.c1)))))AND(((t0.c0)+(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY ((((((((NULL)AND(((t0.c0)<>(t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((NOT (t0.c1)))))AND(((t0.c0)+(t0.c2)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c1) ORDER BY ((((((((NULL)AND(((t0.c0)<>(t0.c1)))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR((NOT (t0.c1)))))AND(((t0.c0)+(t0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c2) IS FALSE)  WHEN (~ (t0.c1)) THEN ((t0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2) IS FALSE)  WHEN (~ (t0.c1)) THEN ((t0.c1) NOT NULL) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c2) IS FALSE)  WHEN (~ (t0.c1)) THEN ((t0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2) IS FALSE)  WHEN (~ (t0.c1)) THEN ((t0.c1) NOT NULL) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c2) IS FALSE)  WHEN (~ (t0.c1)) THEN ((t0.c1) NOT NULL) END);
SELECT ALL * FROM t0 WHERE ((((((0xffffffff8befd51f IN ()))AND((((0X235dd288)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))))OR((t0.c1 IN ())))) ORDER BY ((((t0.c0)IS NOT(t0.c0)))OR(t0.c0));
SELECT SUM(count) FROM (SELECT (((((((0Xffffffff8befd51f IN ()))AND((((0x235dd288)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))))OR((t0.c1 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)IS NOT(t0.c0)))OR(t0.c0)));
SELECT ALL * FROM t0 WHERE ((((((0xffffffff8befd51f IN ()))AND((((0X235dd288)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))))OR((t0.c1 IN ())))) ORDER BY ((((t0.c0)IS NOT(t0.c0)))OR(t0.c0));
SELECT SUM(count) FROM (SELECT (((((((0Xffffffff8befd51f IN ()))AND((((0x235dd288)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))))OR((t0.c1 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)IS NOT(t0.c0)))OR(t0.c0)));
SELECT ALL * FROM t0 WHERE ((((((0xffffffff8befd51f IN ()))AND((((0X235dd288)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))))OR((t0.c1 IN ())))) ORDER BY ((((t0.c0)IS NOT(t0.c0)))OR(t0.c0));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))-(((rt0.c0)>=(rt0.c3))))) ORDER BY ((~ (rt0.c0)) IN (rt0.c1 COLLATE BINARY, (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))-(((rt0.c0)>=(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c0)) IN (rt0.c1 COLLATE BINARY, (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))-(((rt0.c0)>=(rt0.c3))))) ORDER BY ((~ (rt0.c0)) IN (rt0.c1 COLLATE BINARY, (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))-(((rt0.c0)>=(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c0)) IN (rt0.c1 COLLATE BINARY, (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))-(((rt0.c0)>=(rt0.c3))))) ORDER BY ((~ (rt0.c0)) IN (rt0.c1 COLLATE BINARY, (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c2  WHEN x'' THEN t0.c1 END)<=(((t0.c1)&(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN x'' THEN t0.c1 END)<=(((t0.c1)&(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c2  WHEN x'' THEN t0.c1 END)<=(((t0.c1)&(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c2  WHEN x'' THEN t0.c1 END)<=(((t0.c1)&(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c2  WHEN x'' THEN t0.c1 END)<=(((t0.c1)&(t0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((+ (t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c2)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((+ (t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t0.c2)) IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((+ (t0.c2)) IN ()));
SELECT * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c4, rt0.c2, t0.c2))<=((t0.c2, 1255869569, t0.c0))) THEN (((rt0.c0))<((rt0.c5))) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((t0.c2)>(t0.c0)) WHEN ((('324743966', rt0.c1, x''))>=((t0.c0, rt0.c2, t0.c1))) THEN (((rt0.c0))==((t0.c2))) WHEN ((t0.c1)<(t0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN t0.c2 ELSE ((rt0.c4) NOT NULL) END) ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c4, rt0.c2, t0.c2))<=((t0.c2, 1255869569, t0.c0))) THEN (((rt0.c0))<((rt0.c5))) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((t0.c2)>(t0.c0)) WHEN ((('324743966', rt0.c1, x''))>=((t0.c0, rt0.c2, t0.c1))) THEN (((rt0.c0))=((t0.c2))) WHEN ((t0.c1)<(t0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN t0.c2 ELSE ((rt0.c4) NOT NULL) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c4, rt0.c2, t0.c2))<=((t0.c2, 1255869569, t0.c0))) THEN (((rt0.c0))<((rt0.c5))) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((t0.c2)>(t0.c0)) WHEN ((('324743966', rt0.c1, x''))>=((t0.c0, rt0.c2, t0.c1))) THEN (((rt0.c0))==((t0.c2))) WHEN ((t0.c1)<(t0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN t0.c2 ELSE ((rt0.c4) NOT NULL) END) ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c4, rt0.c2, t0.c2))<=((t0.c2, 1255869569, t0.c0))) THEN (((rt0.c0))<((rt0.c5))) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((t0.c2)>(t0.c0)) WHEN ((('324743966', rt0.c1, x''))>=((t0.c0, rt0.c2, t0.c1))) THEN (((rt0.c0))=((t0.c2))) WHEN ((t0.c1)<(t0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN t0.c2 ELSE ((rt0.c4) NOT NULL) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c4, rt0.c2, t0.c2))<=((t0.c2, 1255869569, t0.c0))) THEN (((rt0.c0))<((rt0.c5))) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((t0.c2)>(t0.c0)) WHEN ((('324743966', rt0.c1, x''))>=((t0.c0, rt0.c2, t0.c1))) THEN (((rt0.c0))==((t0.c2))) WHEN ((t0.c1)<(t0.c2)) THEN (rt0.c3 IN ()) WHEN NULL THEN t0.c2 ELSE ((rt0.c4) NOT NULL) END) ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (ABS(rt0.c5))) WHERE (rt0.c1) ORDER BY ((t0.c1 COLLATE NOCASE) NOT NULL);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (ABS(rt0.c5))) ORDER BY ((t0.c1 COLLATE NOCASE) NOT NULL));
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (ABS(rt0.c5))) WHERE (rt0.c1) ORDER BY ((t0.c1 COLLATE NOCASE) NOT NULL);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (ABS(rt0.c5))) ORDER BY ((t0.c1 COLLATE NOCASE) NOT NULL));
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (NOT (ABS(rt0.c5))) WHERE (rt0.c1) ORDER BY ((t0.c1 COLLATE NOCASE) NOT NULL);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c2);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c1)OR((NOT (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)OR((NOT (t0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c1)OR((NOT (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)OR((NOT (t0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((t0.c1)OR((NOT (t0.c2))))  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE ((json(rt0.c4) IN ((- (rt0.c3)), ((t0.c2) NOT BETWEEN (0.7346246548934284) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((json(rt0.c4) IN ((- (rt0.c3)), ((t0.c2) NOT BETWEEN (0.7346246548934284) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((json(rt0.c4) IN ((- (rt0.c3)), ((t0.c2) NOT BETWEEN (0.7346246548934284) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((json(rt0.c4) IN ((- (rt0.c3)), ((t0.c2) NOT BETWEEN (0.7346246548934284) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((json(rt0.c4) IN ((- (rt0.c3)), ((t0.c2) NOT BETWEEN (0.7346246548934284) AND (rt0.c4)))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.3317341477351349)))) ORDER BY ((ABS(t0.c2))>>(t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.3317341477351349)))) IS TRUE)  as count FROM t0 ORDER BY ((ABS(t0.c2))>>(t0.c1 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.3317341477351349)))) ORDER BY ((ABS(t0.c2))>>(t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.3317341477351349)))) IS TRUE)  as count FROM t0 ORDER BY ((ABS(t0.c2))>>(t0.c1 COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END) BETWEEN (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.3317341477351349)))) ORDER BY ((ABS(t0.c2))>>(t0.c1 COLLATE BINARY));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<(rt0.c1)))>=(HEX(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c1)))>=(HEX(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<(rt0.c1)))>=(HEX(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c1)))>=(HEX(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)<(rt0.c1)))>=(HEX(rt0.c1))));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c3) BETWEEN ('507763029') AND (t0.c0)))))OR(NULL)))AND(CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN rt0.c3 WHEN rt0.c1 THEN t0.c1 END)))OR(((rt0.c3)|(x'')))) WHERE (x'') ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c3) BETWEEN ('507763029') AND (t0.c0)))))OR(NULL)))AND(CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN rt0.c3 WHEN rt0.c1 THEN t0.c1 END)))OR(((rt0.c3)|(x'')))) ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c3) BETWEEN ('507763029') AND (t0.c0)))))OR(NULL)))AND(CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN rt0.c3 WHEN rt0.c1 THEN t0.c1 END)))OR(((rt0.c3)|(x'')))) WHERE (x'') ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c3) BETWEEN ('507763029') AND (t0.c0)))))OR(NULL)))AND(CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN rt0.c3 WHEN rt0.c1 THEN t0.c1 END)))OR(((rt0.c3)|(x'')))) ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((((((((rt0.c1 COLLATE BINARY)AND(((rt0.c3) BETWEEN ('507763029') AND (t0.c0)))))OR(NULL)))AND(CASE WHEN rt0.c3 THEN rt0.c0 WHEN x'' THEN rt0.c3 WHEN rt0.c1 THEN t0.c1 END)))OR(((rt0.c3)|(x'')))) WHERE (x'') ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.6223320186565205 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END)<(RTRIM(rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.6223320186565205 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END)<(RTRIM(rt0.c5))));
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.6223320186565205 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END)<(RTRIM(rt0.c5)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.6223320186565205 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END)<(RTRIM(rt0.c5))));
SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c4)))AND(rt0.c1))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.6223320186565205 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END)<(RTRIM(rt0.c5)));
SELECT ALL * FROM t0 WHERE ((((x'', t0.c0 COLLATE NOCASE, ((t0.c2)*(t0.c1))))>=((LTRIM(t0.c1, '0.007234937090541682'), (- (t0.c1)), (((t0.c0, t0.c2, t0.c2))=((t0.c1, t0.c1, t0.c0))))))) ORDER BY HEX((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'', t0.c0 COLLATE NOCASE, ((t0.c2)*(t0.c1))))>=((LTRIM(t0.c1, '0.007234937090541682'), (- (t0.c1)), (((t0.c0, t0.c2, t0.c2))=((t0.c1, t0.c1, t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY HEX((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((x'', t0.c0 COLLATE NOCASE, ((t0.c2)*(t0.c1))))>=((LTRIM(t0.c1, '0.007234937090541682'), (- (t0.c1)), (((t0.c0, t0.c2, t0.c2))=((t0.c1, t0.c1, t0.c0))))))) ORDER BY HEX((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'', t0.c0 COLLATE NOCASE, ((t0.c2)*(t0.c1))))>=((LTRIM(t0.c1, '0.007234937090541682'), (- (t0.c1)), (((t0.c0, t0.c2, t0.c2))=((t0.c1, t0.c1, t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY HEX((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((x'', t0.c0 COLLATE NOCASE, ((t0.c2)*(t0.c1))))>=((LTRIM(t0.c1, '0.007234937090541682'), (- (t0.c1)), (((t0.c0, t0.c2, t0.c2))=((t0.c1, t0.c1, t0.c0))))))) ORDER BY HEX((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((((t0.c2)==(rt0.c4)))AND((((t0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) ORDER BY ((rt0.c2)IS((rt0.c5 IN ()))) DESC, CAST((- (t0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((t0.c2)==(rt0.c4)))AND((((t0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2)IS((rt0.c5 IN ()))) DESC, CAST((- (t0.c2)) AS INTEGER));
SELECT * FROM rt0, t0 WHERE (((((t0.c2)==(rt0.c4)))AND((((t0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) ORDER BY ((rt0.c2)IS((rt0.c5 IN ()))) DESC, CAST((- (t0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((t0.c2)==(rt0.c4)))AND((((t0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2)IS((rt0.c5 IN ()))) DESC, CAST((- (t0.c2)) AS INTEGER));
SELECT * FROM rt0, t0 WHERE (((((t0.c2)==(rt0.c4)))AND((((t0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1)))))) ORDER BY ((rt0.c2)IS((rt0.c5 IN ()))) DESC, CAST((- (t0.c2)) AS INTEGER);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) ISNULL) THEN ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))OR(rt0.c5)))AND(rt0.c2)) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))) THEN ((rt0.c3)|(rt0.c5)) WHEN 'U' THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.04066803621034443)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) ISNULL) THEN ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))OR(rt0.c5)))AND(rt0.c2)) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))) THEN ((rt0.c3)|(rt0.c5)) WHEN 'U' THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.04066803621034443)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) ISNULL) THEN ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))OR(rt0.c5)))AND(rt0.c2)) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))) THEN ((rt0.c3)|(rt0.c5)) WHEN 'U' THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.04066803621034443)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) ISNULL) THEN ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))OR(rt0.c5)))AND(rt0.c2)) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))) THEN ((rt0.c3)|(rt0.c5)) WHEN 'U' THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.04066803621034443)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2) ISNULL) THEN ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))OR(rt0.c5)))AND(rt0.c2)) WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c5))) THEN ((rt0.c3)|(rt0.c5)) WHEN 'U' THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (0.04066803621034443)) END);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(((t0.c2)<<(t0.c0)))))OR(t0.c0))) ORDER BY (((((((((t0.c0)OR(0.8992179007873878)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(((t0.c2)<<(t0.c0)))))OR(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c0)OR(0.8992179007873878)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(((t0.c2)<<(t0.c0)))))OR(t0.c0))) ORDER BY (((((((((t0.c0)OR(0.8992179007873878)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(((t0.c2)<<(t0.c0)))))OR(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c0)OR(0.8992179007873878)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(((t0.c2)<<(t0.c0)))))OR(t0.c0))) ORDER BY (((((((((t0.c0)OR(0.8992179007873878)))OR(t0.c2)))OR(t0.c1)))AND(t0.c1)) IN ());
SELECT ALL * FROM t0, rt0 WHERE (LIKELY((rt0.c4 IN ()))) ORDER BY ((((((t0.c1)OR(rt0.c3)))AND(t0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY((rt0.c4 IN ()))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((t0.c1)OR(rt0.c3)))AND(t0.c0))) NOTNULL) DESC);
SELECT ALL * FROM t0, rt0 WHERE (LIKELY((rt0.c4 IN ()))) ORDER BY ((((((t0.c1)OR(rt0.c3)))AND(t0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY((rt0.c4 IN ()))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((t0.c1)OR(rt0.c3)))AND(t0.c0))) NOTNULL) DESC);
SELECT ALL * FROM t0, rt0 WHERE (LIKELY((rt0.c4 IN ()))) ORDER BY ((((((t0.c1)OR(rt0.c3)))AND(t0.c0))) NOTNULL) DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((+ (t0.c0)) AS INTEGER)) ORDER BY ((LOWER(t0.c1))OR((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((LOWER(t0.c1))OR((rt0.c3 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((+ (t0.c0)) AS INTEGER)) ORDER BY ((LOWER(t0.c1))OR((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((LOWER(t0.c1))OR((rt0.c3 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((+ (t0.c0)) AS INTEGER)) ORDER BY ((LOWER(t0.c1))OR((rt0.c3 IN ())))  NULLS LAST;
SELECT * FROM rt0, t0 WHERE ((((((((((rt0.c5)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c3)))AND(t0.c1)) IN (0.5366378391364454))) ORDER BY ABS(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c5)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c3)))AND(t0.c1)) IN (0.5366378391364454))) IS TRUE)  as count FROM rt0, t0 ORDER BY ABS(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT * FROM rt0, t0 WHERE ((((((((((rt0.c5)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c3)))AND(t0.c1)) IN (0.5366378391364454))) ORDER BY ABS(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c5)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c3)))AND(t0.c1)) IN (0.5366378391364454))) IS TRUE)  as count FROM rt0, t0 ORDER BY ABS(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT * FROM rt0, t0 WHERE ((((((((((rt0.c5)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c3)))AND(t0.c1)) IN (0.5366378391364454))) ORDER BY ABS(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY t0.c2 DESC;
SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c2)AND(t0.c0)))AND(t0.c0))))) ORDER BY CAST(((t0.c1)GLOB(-109948218)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c2)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1)GLOB(-109948218)) AS REAL));
SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c2)AND(t0.c0)))AND(t0.c0))))) ORDER BY CAST(((t0.c1)GLOB(-109948218)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c2)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1)GLOB(-109948218)) AS REAL));
SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c2)AND(t0.c0)))AND(t0.c0))))) ORDER BY CAST(((t0.c1)GLOB(-109948218)) AS REAL);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)IS(rt0.c3))) ISNULL)) ORDER BY 0Xffffffffec0a479b;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)IS(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffffec0a479b);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)IS(rt0.c3))) ISNULL)) ORDER BY 0Xffffffffec0a479b;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)IS(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffffec0a479b);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)IS(rt0.c3))) ISNULL)) ORDER BY 0Xffffffffec0a479b;
SELECT * FROM rt0 WHERE ((~ (TRIM(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (TRIM(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (TRIM(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (TRIM(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (TRIM(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (((rt0.c4)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c4)%(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (((rt0.c4)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c4)%(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (((rt0.c4)%(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)OR(t0.c1)))AND(rt0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(t0.c1)))AND(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)OR(t0.c1)))AND(rt0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(t0.c1)))AND(rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)OR(t0.c1)))AND(rt0.c4)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (rt0.c5) ORDER BY CASE WHEN UPPER(rt0.c0) THEN rt0.c4 WHEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)) WHEN CASE rt0.c5  WHEN rt0.c3 THEN x'9ed6' WHEN rt0.c5 THEN NULL WHEN rt0.c4 THEN rt0.c3 END THEN CAST(rt0.c4 AS TEXT) WHEN ((((rt0.c4)OR(rt0.c5)))OR(rt0.c5)) THEN (rt0.c4 IN ()) WHEN ((rt0.c0) IS FALSE) THEN NULL ELSE ((rt0.c4) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN UPPER(rt0.c0) THEN rt0.c4 WHEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)) WHEN CASE rt0.c5  WHEN rt0.c3 THEN x'9ed6' WHEN rt0.c5 THEN NULL WHEN rt0.c4 THEN rt0.c3 END THEN CAST(rt0.c4 AS TEXT) WHEN ((((rt0.c4)OR(rt0.c5)))OR(rt0.c5)) THEN (rt0.c4 IN ()) WHEN ((rt0.c0) IS FALSE) THEN NULL ELSE ((rt0.c4) NOT NULL) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c5) ORDER BY CASE WHEN UPPER(rt0.c0) THEN rt0.c4 WHEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)) WHEN CASE rt0.c5  WHEN rt0.c3 THEN x'9ed6' WHEN rt0.c5 THEN NULL WHEN rt0.c4 THEN rt0.c3 END THEN CAST(rt0.c4 AS TEXT) WHEN ((((rt0.c4)OR(rt0.c5)))OR(rt0.c5)) THEN (rt0.c4 IN ()) WHEN ((rt0.c0) IS FALSE) THEN NULL ELSE ((rt0.c4) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN UPPER(rt0.c0) THEN rt0.c4 WHEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)) WHEN CASE rt0.c5  WHEN rt0.c3 THEN x'9ed6' WHEN rt0.c5 THEN NULL WHEN rt0.c4 THEN rt0.c3 END THEN CAST(rt0.c4 AS TEXT) WHEN ((((rt0.c4)OR(rt0.c5)))OR(rt0.c5)) THEN (rt0.c4 IN ()) WHEN ((rt0.c0) IS FALSE) THEN NULL ELSE ((rt0.c4) NOT NULL) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c5) ORDER BY CASE WHEN UPPER(rt0.c0) THEN rt0.c4 WHEN ((NULL) BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5)) WHEN CASE rt0.c5  WHEN rt0.c3 THEN x'9ed6' WHEN rt0.c5 THEN NULL WHEN rt0.c4 THEN rt0.c3 END THEN CAST(rt0.c4 AS TEXT) WHEN ((((rt0.c4)OR(rt0.c5)))OR(rt0.c5)) THEN (rt0.c4 IN ()) WHEN ((rt0.c0) IS FALSE) THEN NULL ELSE ((rt0.c4) NOT NULL) END DESC;
SELECT ALL * FROM t0, rt0 WHERE (0x7cb191ac);
SELECT SUM(count) FROM (SELECT ((0x7cb191ac) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (0x7cb191ac);
SELECT SUM(count) FROM (SELECT ((0x7cb191ac) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (0x7cb191ac);
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c4 COLLATE BINARY) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((NOT ((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT ((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT ((t0.c2 IN ()))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((NULL))>(((((t0.c1)) BETWEEN ((rt0.c4)) AND ((t0.c2))))))) ORDER BY (rt0.c1 IN ('hE')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>(((((t0.c1)) BETWEEN ((rt0.c4)) AND ((t0.c2))))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (rt0.c1 IN ('hE')) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((NULL))>(((((t0.c1)) BETWEEN ((rt0.c4)) AND ((t0.c2))))))) ORDER BY (rt0.c1 IN ('hE')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>(((((t0.c1)) BETWEEN ((rt0.c4)) AND ((t0.c2))))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (rt0.c1 IN ('hE')) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((NULL))>(((((t0.c1)) BETWEEN ((rt0.c4)) AND ((t0.c2))))))) ORDER BY (rt0.c1 IN ('hE')) ASC;
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY ((((rt0.c2)>=(rt0.c4))) NOT BETWEEN ((rt0.c5 IN (rt0.c0, rt0.c1))) AND (x''))  NULLS FIRST, ((((rt0.c0)<>(rt0.c3)))GLOB(LTRIM(rt0.c5)))  NULLS FIRST, (((CAST(rt0.c4 AS INTEGER), CAST(rt0.c4 AS NUMERIC), LTRIM(rt0.c4, x'f90c'), ABS(DISTINCT rt0.c1), rt0.c0 COLLATE NOCASE))<=(((('-309786781')&(rt0.c3)), ((rt0.c3)&(rt0.c0)), ((rt0.c2)/(rt0.c0)), (x'' IN (rt0.c2)), ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>=(rt0.c4))) NOT BETWEEN ((rt0.c5 IN (rt0.c0, rt0.c1))) AND (x''))  NULLS FIRST, ((((rt0.c0)!=(rt0.c3)))GLOB(LTRIM(rt0.c5)))  NULLS FIRST, (((CAST(rt0.c4 AS INTEGER), CAST(rt0.c4 AS NUMERIC), LTRIM(rt0.c4, x'f90c'), ABS(DISTINCT rt0.c1), rt0.c0 COLLATE NOCASE))<=(((('-309786781')&(rt0.c3)), ((rt0.c3)&(rt0.c0)), ((rt0.c2)/(rt0.c0)), (x'' IN (rt0.c2)), ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))) ASC);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY ((((rt0.c2)>=(rt0.c4))) NOT BETWEEN ((rt0.c5 IN (rt0.c0, rt0.c1))) AND (x''))  NULLS FIRST, ((((rt0.c0)<>(rt0.c3)))GLOB(LTRIM(rt0.c5)))  NULLS FIRST, (((CAST(rt0.c4 AS INTEGER), CAST(rt0.c4 AS NUMERIC), LTRIM(rt0.c4, x'f90c'), ABS(DISTINCT rt0.c1), rt0.c0 COLLATE NOCASE))<=(((('-309786781')&(rt0.c3)), ((rt0.c3)&(rt0.c0)), ((rt0.c2)/(rt0.c0)), (x'' IN (rt0.c2)), ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>=(rt0.c4))) NOT BETWEEN ((rt0.c5 IN (rt0.c0, rt0.c1))) AND (x''))  NULLS FIRST, ((((rt0.c0)!=(rt0.c3)))GLOB(LTRIM(rt0.c5)))  NULLS FIRST, (((CAST(rt0.c4 AS INTEGER), CAST(rt0.c4 AS NUMERIC), LTRIM(rt0.c4, x'f90c'), ABS(DISTINCT rt0.c1), rt0.c0 COLLATE NOCASE))<=(((('-309786781')&(rt0.c3)), ((rt0.c3)&(rt0.c0)), ((rt0.c2)/(rt0.c0)), (x'' IN (rt0.c2)), ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))) ASC);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) ORDER BY ((((rt0.c2)>=(rt0.c4))) NOT BETWEEN ((rt0.c5 IN (rt0.c0, rt0.c1))) AND (x''))  NULLS FIRST, ((((rt0.c0)<>(rt0.c3)))GLOB(LTRIM(rt0.c5)))  NULLS FIRST, (((CAST(rt0.c4 AS INTEGER), CAST(rt0.c4 AS NUMERIC), LTRIM(rt0.c4, x'f90c'), ABS(DISTINCT rt0.c1), rt0.c0 COLLATE NOCASE))<=(((('-309786781')&(rt0.c3)), ((rt0.c3)&(rt0.c0)), ((rt0.c2)/(rt0.c0)), (x'' IN (rt0.c2)), ((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))) ASC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c0) IS FALSE) ELSE json_array(rt0.c4, rt0.c4) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c0) IS FALSE) ELSE json_array(rt0.c4, rt0.c4) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c0) IS FALSE) ELSE json_array(rt0.c4, rt0.c4) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c0) IS FALSE) ELSE json_array(rt0.c4, rt0.c4) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c0) IS FALSE) ELSE json_array(rt0.c4, rt0.c4) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') NOT BETWEEN (((rt0.c5)/(x''))) AND (CAST(rt0.c5 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((rt0.c5)/(x''))) AND (CAST(rt0.c5 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') NOT BETWEEN (((rt0.c5)/(x''))) AND (CAST(rt0.c5 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((rt0.c5)/(x''))) AND (CAST(rt0.c5 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') NOT BETWEEN (((rt0.c5)/(x''))) AND (CAST(rt0.c5 AS REAL))));
SELECT * FROM t0 WHERE ((NOT (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (((t0.c0) NOTNULL))));
SELECT * FROM t0, rt0 NOT INDEXED WHERE (((load_extension(rt0.c0)) NOT NULL)) ORDER BY (('') IS FALSE), (((NULL)) NOT BETWEEN (((~ (t0.c1)))) AND ((t0.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c0)) NOT NULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (('') IS FALSE), (((NULL)) NOT BETWEEN (((~ (t0.c1)))) AND ((t0.c0 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 NOT INDEXED WHERE (((load_extension(rt0.c0)) NOT NULL)) ORDER BY (('') IS FALSE), (((NULL)) NOT BETWEEN (((~ (t0.c1)))) AND ((t0.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c0)) NOT NULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (('') IS FALSE), (((NULL)) NOT BETWEEN (((~ (t0.c1)))) AND ((t0.c0 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (TRIM(DISTINCT NULL, NULL));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT NULL, NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (TRIM(DISTINCT NULL, NULL));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT NULL, NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (TRIM(DISTINCT NULL, NULL));
SELECT ALL * FROM t0 WHERE ((((+ (t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END) AND (t0.c0 COLLATE NOCASE))) ORDER BY UNLIKELY(DISTINCT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END) AND (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(DISTINCT NULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((+ (t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END) AND (t0.c0 COLLATE NOCASE))) ORDER BY UNLIKELY(DISTINCT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END) AND (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(DISTINCT NULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((+ (t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END) AND (t0.c0 COLLATE NOCASE))) ORDER BY UNLIKELY(DISTINCT NULL)  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c1 IN (rt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) NOT NULL) AS NUMERIC)) ORDER BY ((((((rt0.c2) NOT NULL))AND(((rt0.c0)OR(rt0.c0)))))AND((rt0.c2 IN (rt0.c4)))), '-1968416985' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) NOT NULL))AND(((rt0.c0)OR(rt0.c0)))))AND((rt0.c2 IN (rt0.c4)))), '-1968416985' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) NOT NULL) AS NUMERIC)) ORDER BY ((((((rt0.c2) NOT NULL))AND(((rt0.c0)OR(rt0.c0)))))AND((rt0.c2 IN (rt0.c4)))), '-1968416985' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) NOT NULL))AND(((rt0.c0)OR(rt0.c0)))))AND((rt0.c2 IN (rt0.c4)))), '-1968416985' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) NOT NULL) AS NUMERIC)) ORDER BY ((((((rt0.c2) NOT NULL))AND(((rt0.c0)OR(rt0.c0)))))AND((rt0.c2 IN (rt0.c4)))), '-1968416985' ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c2 COLLATE BINARY)AND(((rt0.c5) NOT NULL))))OR(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 COLLATE BINARY)AND(((rt0.c5) NOT NULL))))OR(x'' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c2 COLLATE BINARY)AND(((rt0.c5) NOT NULL))))OR(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2 COLLATE BINARY)AND(((rt0.c5) NOT NULL))))OR(x'' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c2 COLLATE BINARY)AND(((rt0.c5) NOT NULL))))OR(x'' COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON x'' WHERE (((((rt0.c2) IS TRUE))<<(((t0.c2) IS FALSE)))) ORDER BY (rt0.c3 COLLATE NOCASE IN (IFNULL(rt0.c2, -154765586))), (((rt0.c5))!=((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))<<(((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON x'' ORDER BY (rt0.c3 COLLATE NOCASE IN (IFNULL(rt0.c2, -154765586))), (((rt0.c5))<>((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON x'' WHERE (((((rt0.c2) IS TRUE))<<(((t0.c2) IS FALSE)))) ORDER BY (rt0.c3 COLLATE NOCASE IN (IFNULL(rt0.c2, -154765586))), (((rt0.c5))!=((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))<<(((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON x'' ORDER BY (rt0.c3 COLLATE NOCASE IN (IFNULL(rt0.c2, -154765586))), (((rt0.c5))<>((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON x'' WHERE (((((rt0.c2) IS TRUE))<<(((t0.c2) IS FALSE)))) ORDER BY (rt0.c3 COLLATE NOCASE IN (IFNULL(rt0.c2, -154765586))), (((rt0.c5))!=((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (0.457808466408247) ORDER BY (((((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))<>((x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.457808466408247) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))!=((x'')))  NULLS LAST);
SELECT * FROM t0 WHERE (0.457808466408247) ORDER BY (((((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))<>((x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.457808466408247) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))!=((x'')))  NULLS LAST);
SELECT * FROM t0 WHERE (0.457808466408247) ORDER BY (((((t0.c0) BETWEEN (t0.c1) AND (t0.c0))))<>((x'')))  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((IFNULL(rt0.c3, t0.c2))!=(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c3, t0.c2))<>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((IFNULL(rt0.c3, t0.c2))!=(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c3, t0.c2))<>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((IFNULL(rt0.c3, t0.c2))!=(rt0.c1 COLLATE NOCASE)));
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c3)AND(rt0.c1))) IS FALSE)) ORDER BY ((((rt0.c0) NOTNULL))|('{Il'))  NULLS FIRST, CAST(((rt0.c0) BETWEEN (t0.c1) AND ('281085850')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((rt0.c0) NOTNULL))|('{Il'))  NULLS FIRST, CAST(((rt0.c0) BETWEEN (t0.c1) AND ('281085850')) AS BLOB)  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c3)AND(rt0.c1))) IS FALSE)) ORDER BY ((((rt0.c0) NOTNULL))|('{Il'))  NULLS FIRST, CAST(((rt0.c0) BETWEEN (t0.c1) AND ('281085850')) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((rt0.c0) NOTNULL))|('{Il'))  NULLS FIRST, CAST(((rt0.c0) BETWEEN (t0.c1) AND ('281085850')) AS BLOB)  NULLS FIRST);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((rt0.c3)AND(rt0.c1))) IS FALSE)) ORDER BY ((((rt0.c0) NOTNULL))|('{Il'))  NULLS FIRST, CAST(((rt0.c0) BETWEEN (t0.c1) AND ('281085850')) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((('-302528337') NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE 0.20901148729991503 END) AND (((rt0.c5)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-302528337') NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE 0.20901148729991503 END) AND (((rt0.c5)OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('-302528337') NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE 0.20901148729991503 END) AND (((rt0.c5)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-302528337') NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE 0.20901148729991503 END) AND (((rt0.c5)OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('-302528337') NOT BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE 0.20901148729991503 END) AND (((rt0.c5)OR(rt0.c0)))));
SELECT * FROM t0 WHERE ((((t0.c1))>=(((t0.c2 IN (t0.c1)))))) ORDER BY (((t0.c2 IN ()))IS NOT(((((((((((((t0.c1)AND('-166434975')))OR(t0.c2)))AND(t0.c2)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))), ((((0.7961863147410625) ISNULL))/(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1))>=(((t0.c2 IN (t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ()))IS NOT(((((((((((((t0.c1)AND('-166434975')))OR(t0.c2)))AND(t0.c2)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))), ((((0.7961863147410625) ISNULL))/(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT * FROM t0 WHERE ((((t0.c1))>=(((t0.c2 IN (t0.c1)))))) ORDER BY (((t0.c2 IN ()))IS NOT(((((((((((((t0.c1)AND('-166434975')))OR(t0.c2)))AND(t0.c2)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))), ((((0.7961863147410625) ISNULL))/(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1))>=(((t0.c2 IN (t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ()))IS NOT(((((((((((((t0.c1)AND('-166434975')))OR(t0.c2)))AND(t0.c2)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))), ((((0.7961863147410625) ISNULL))/(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT * FROM t0 WHERE ((((t0.c1))>=(((t0.c2 IN (t0.c1)))))) ORDER BY (((t0.c2 IN ()))IS NOT(((((((((((((t0.c1)AND('-166434975')))OR(t0.c2)))AND(t0.c2)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))), ((((0.7961863147410625) ISNULL))/(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1) IS TRUE) IN ()));
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))))AND(NULLIF(0.46236609936849393, rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))OR((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))))AND(NULLIF(0.46236609936849393, rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))))AND(NULLIF(0.46236609936849393, rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))OR((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))))AND(NULLIF(0.46236609936849393, rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))))AND(NULLIF(0.46236609936849393, rt0.c5))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL)) BETWEEN ((((((rt0.c5)AND(rt0.c1)))OR(rt0.c2)))) AND ((CAST(rt0.c3 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((((rt0.c5)AND(rt0.c1)))OR(rt0.c2)))) AND ((CAST(rt0.c3 AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL)) BETWEEN ((((((rt0.c5)AND(rt0.c1)))OR(rt0.c2)))) AND ((CAST(rt0.c3 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((((((rt0.c5)AND(rt0.c1)))OR(rt0.c2)))) AND ((CAST(rt0.c3 AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL)) BETWEEN ((((((rt0.c5)AND(rt0.c1)))OR(rt0.c2)))) AND ((CAST(rt0.c3 AS INTEGER)))));
SELECT ALL * FROM rt0 WHERE ((('p') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('p') NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((('p') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('p') NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((('p') NOT NULL));
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT * FROM rt0 WHERE ((((NULL IN ())) ISNULL)) ORDER BY (((((rt0.c2))<=((rt0.c2))))+(((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))<=((rt0.c2))))+(((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NULL IN ())) ISNULL)) ORDER BY (((((rt0.c2))<=((rt0.c2))))+(((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))<=((rt0.c2))))+(((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((NULL IN ())) ISNULL)) ORDER BY (((((rt0.c2))<=((rt0.c2))))+(((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3)IS(rt0.c4)), ((rt0.c4)IS NOT(rt0.c3)), (rt0.c3 IN ())))<((LIKE(rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c3 IN (rt0.c4, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)IS(rt0.c4)), ((rt0.c4)IS NOT(rt0.c3)), (rt0.c3 IN ())))<((LIKE(rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c3 IN (rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3)IS(rt0.c4)), ((rt0.c4)IS NOT(rt0.c3)), (rt0.c3 IN ())))<((LIKE(rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c3 IN (rt0.c4, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)IS(rt0.c4)), ((rt0.c4)IS NOT(rt0.c3)), (rt0.c3 IN ())))<((LIKE(rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c3 IN (rt0.c4, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3)IS(rt0.c4)), ((rt0.c4)IS NOT(rt0.c3)), (rt0.c3 IN ())))<((LIKE(rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c3 IN (rt0.c4, rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c5)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c5))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c5)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c5))))));
SELECT * FROM rt0, t0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND ('456739416')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND ('456739416'))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND ('456739416')));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND ('456739416'))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((rt0.c4)+(rt0.c3))) AND ('456739416')));
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((0.06841076546317182) IS TRUE))/(((rt0.c5) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.06841076546317182) IS TRUE))/(((rt0.c5) NOTNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((0.06841076546317182) IS TRUE))/(((rt0.c5) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.06841076546317182) IS TRUE))/(((rt0.c5) NOTNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((0.06841076546317182) IS TRUE))/(((rt0.c5) NOTNULL))));
SELECT * FROM t0 WHERE ((- (((x'')-(t0.c2))))) ORDER BY (+ (((t0.c2) IS FALSE))) DESC, ((((((((0.5981535513719061)AND(((t0.c0)IS(t0.c2)))))OR(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(CASE t0.c2  WHEN NULL THEN t0.c2 ELSE t0.c0 END)))AND((t0.c1 IN (NULL, 0.11381985091325475))))  NULLS FIRST, (((+ (t0.c1)))*((+ (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((x'')-(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c2) IS FALSE))) DESC, ((((((((0.5981535513719061)AND(((t0.c0)IS(t0.c2)))))OR(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(CASE t0.c2  WHEN NULL THEN t0.c2 ELSE t0.c0 END)))AND((t0.c1 IN (NULL, 0.11381985091325475))))  NULLS FIRST, (((+ (t0.c1)))*((+ (t0.c0)))) ASC);
SELECT * FROM t0 WHERE ((- (((x'')-(t0.c2))))) ORDER BY (+ (((t0.c2) IS FALSE))) DESC, ((((((((0.5981535513719061)AND(((t0.c0)IS(t0.c2)))))OR(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(CASE t0.c2  WHEN NULL THEN t0.c2 ELSE t0.c0 END)))AND((t0.c1 IN (NULL, 0.11381985091325475))))  NULLS FIRST, (((+ (t0.c1)))*((+ (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((x'')-(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c2) IS FALSE))) DESC, ((((((((0.5981535513719061)AND(((t0.c0)IS(t0.c2)))))OR(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(CASE t0.c2  WHEN NULL THEN t0.c2 ELSE t0.c0 END)))AND((t0.c1 IN (NULL, 0.11381985091325475))))  NULLS FIRST, (((+ (t0.c1)))*((+ (t0.c0)))) ASC);
SELECT * FROM t0 WHERE ((- (((x'')-(t0.c2))))) ORDER BY (+ (((t0.c2) IS FALSE))) DESC, ((((((((0.5981535513719061)AND(((t0.c0)IS(t0.c2)))))OR(((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))))OR(CASE t0.c2  WHEN NULL THEN t0.c2 ELSE t0.c0 END)))AND((t0.c1 IN (NULL, 0.11381985091325475))))  NULLS FIRST, (((+ (t0.c1)))*((+ (t0.c0)))) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((NULL) IS FALSE) IN (x'', CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))) ORDER BY ((((((((HEX(DISTINCT rt0.c4))AND(t0.c0)))OR((((rt0.c5, t0.c0, rt0.c2, rt0.c0, '390811306'))<=((rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c5))))))AND(((t0.c2)LIKE(rt0.c1)))))OR(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL) IS FALSE) IN (x'', CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((HEX(DISTINCT rt0.c4))AND(t0.c0)))OR((((rt0.c5, t0.c0, rt0.c2, rt0.c0, '390811306'))<=((rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c5))))))AND(((t0.c2)LIKE(rt0.c1)))))OR(rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((NULL) IS FALSE) IN (x'', CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))) ORDER BY ((((((((HEX(DISTINCT rt0.c4))AND(t0.c0)))OR((((rt0.c5, t0.c0, rt0.c2, rt0.c0, '390811306'))<=((rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c5))))))AND(((t0.c2)LIKE(rt0.c1)))))OR(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL) IS FALSE) IN (x'', CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((HEX(DISTINCT rt0.c4))AND(t0.c0)))OR((((rt0.c5, t0.c0, rt0.c2, rt0.c0, '390811306'))<=((rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c5))))))AND(((t0.c2)LIKE(rt0.c1)))))OR(rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((NULL) IS FALSE) IN (x'', CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END))) ORDER BY ((((((((HEX(DISTINCT rt0.c4))AND(t0.c0)))OR((((rt0.c5, t0.c0, rt0.c2, rt0.c0, '390811306'))<=((rt0.c0, t0.c2, rt0.c2, t0.c0, rt0.c5))))))AND(((t0.c2)LIKE(rt0.c1)))))OR(rt0.c2))  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((x'')LIKE(rt0.c0 COLLATE BINARY))) ORDER BY LOWER('yM') COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')LIKE(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 ORDER BY LOWER('yM') COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((x'')LIKE(rt0.c0 COLLATE BINARY))) ORDER BY LOWER('yM') COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')LIKE(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 ORDER BY LOWER('yM') COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((x'')LIKE(rt0.c0 COLLATE BINARY))) ORDER BY LOWER('yM') COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c1 AS BLOB))<(((((rt0.c5)AND(rt0.c0)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))<(((((rt0.c5)AND(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c1 AS BLOB))<(((((rt0.c5)AND(rt0.c0)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))<(((((rt0.c5)AND(rt0.c0)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c1 AS BLOB))<(((((rt0.c5)AND(rt0.c0)))OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS INTEGER)) ORDER BY ((((rt0.c1)%(rt0.c4)))==((- (rt0.c3)))) ASC, (NOT (x''));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)%(rt0.c4)))==((- (rt0.c3)))) ASC, (NOT (x'')));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS INTEGER)) ORDER BY ((((rt0.c1)%(rt0.c4)))==((- (rt0.c3)))) ASC, (NOT (x''));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)%(rt0.c4)))==((- (rt0.c3)))) ASC, (NOT (x'')));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS INTEGER)) ORDER BY ((((rt0.c1)%(rt0.c4)))==((- (rt0.c3)))) ASC, (NOT (x''));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((x'')&(0.35639196470811796)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))<=(((x'')&(0.35639196470811796))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((x'')&(0.35639196470811796)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))<=(((x'')&(0.35639196470811796))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((x'')&(0.35639196470811796)))));
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c3))) NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND (NULL))) ORDER BY ((rt0.c4 COLLATE RTRIM)OR(CAST(rt0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3))) NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 COLLATE RTRIM)OR(CAST(rt0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c3))) NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND (NULL))) ORDER BY ((rt0.c4 COLLATE RTRIM)OR(CAST(rt0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3))) NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4 COLLATE RTRIM)OR(CAST(rt0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c3))) NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND (NULL))) ORDER BY ((rt0.c4 COLLATE RTRIM)OR(CAST(rt0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((x'1a74')-(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'1a74')-(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((x'1a74')-(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((x'1a74')-(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((x'1a74')-(rt0.c1))) IS FALSE));
SELECT * FROM rt0 WHERE (((rt0.c5 COLLATE RTRIM)/((~ (rt0.c0))))) ORDER BY ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)))>=(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c5 COLLATE RTRIM)/((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)))>=(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC);
SELECT * FROM rt0 WHERE (((rt0.c5 COLLATE RTRIM)/((~ (rt0.c0))))) ORDER BY ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)))>=(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c5 COLLATE RTRIM)/((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)))>=(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC);
SELECT * FROM rt0 WHERE (((rt0.c5 COLLATE RTRIM)/((~ (rt0.c0))))) ORDER BY ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)))>=(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC;
