-- Time: 2024/06/08 21:32:29
-- Database: database83
-- Database version: 3.40.0
-- seed value: 4102920683
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4, +c5 BLOB ); -- 17ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t0 FOR EACH ROW  WHEN (NOT (CAST(t0.c0 AS REAL))) BEGIN INSERT OR IGNORE INTO rt1(c0) VALUES (NULL);DELETE FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE ']\%' END)OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));END; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (']\%'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('.[7aR<䷤'), ('405687780'), ('405687780'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'1f4b'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 3ms;
INSERT OR IGNORE INTO rt1(c3, c1, c4) VALUES ('', 0X138cd484, '-1898959806'), ('-1285846091', 'l4%fⷔ[ⱂ0,', 0.7810319023938382), ('O!zE풄ଝ', 'b><AJ౺-', NULL); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA journal_size_limit = 0; -- 0ms;
PRAGMA stats; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('1589508153'), ('m9B6J!y!'), (NULL); -- 0ms;
PRAGMA locking_mode; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
ANALYZE; -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c4) VALUES ('cq̂By', 0.768600855193041); -- 7ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.768600855193041, c1=0.768600855193041, c0=NULL WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN ((~ (vt0.c2))) AND (((vt0.c1) IS FALSE))); -- 0ms;
ANALYZE; -- 11ms;
REINDEX; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i29 ON t0((((c0, c0, c0))<=((c0, c0, c0))) COLLATE BINARY) WHERE CASE WHEN ((0xffffffffa493a80b)IS NOT(NULL)) THEN c0 COLLATE NOCASE ELSE (~ (c0)) END; -- 2ms;
CREATE INDEX IF NOT EXISTS i64 ON t0((((((((((c0)AND(c0)))OR(c0)))AND(c0)))AND(c0)) IN ()) COLLATE NOCASE DESC) WHERE ((((- (c0))))<=((((c0) BETWEEN (c0) AND (c0))))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (NULL); -- 1ms;
INSERT OR FAIL INTO rt1(c5, c3, c2, c1, c0) VALUES (x'', x'cbbfbd51', -1470147518, 0xffffffffcb54a908, 0.31183279155493604); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, 0.7456401963417953); -- 0ms;
UPDATE OR ABORT rt1 SET (c1)=(-1113082870) WHERE (~ (rt1.c0 COLLATE BINARY)); -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c4, c3, c5, c0, c1) VALUES (0.8366940618424518, NULL, 0.281438265842602, 0.020427406351082644, 917177090, NULL), ('0.8366940618424518', x'37b1', 0.020427406351082644, '౺m', x'415e', '1672242735'), ('0.31183279155493604', NULL, 0x1, 0.04389113058024241, NULL, ''); -- 0ms;
INSERT OR ABORT INTO rt1(c2, c3, c1, c0) VALUES (NULL, NULL, '{', ''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 18ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.ignore_check_constraints = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (9.79963002E8); -- 0ms;
UPDATE t0 SET c0=0.7115406261430817 WHERE t0.c0 COLLATE RTRIM; -- 0ms;
UPDATE rt1 SET c5='327996548', c2=0x1b1da0a1; -- 13ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49021'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(x'') WHERE ((((((((((vt0.c1) NOTNULL))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR(((vt0.c2)*(vt0.c0)))))AND(IFNULL(vt0.c2, x''))))AND('UJbG')); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c56; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c33; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c23; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c59; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c34; -- 2ms;
ALTER TABLE t0 RENAME TO t1; -- 5ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c54; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c95; -- 0ms;
ALTER TABLE t0 ADD COLUMN c56 REAL; -- 2ms;
UPDATE vt0 SET (c0)=(x'') WHERE HEX(DISTINCT (- (vt0.c1))); -- 11ms;
COMMIT; -- 0ms;
UPDATE OR ABORT t0 SET (c56)=(NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA mmap_size = -3439994156581476459; -- 0ms;
END; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE rt1 SET c5=NULL WHERE (rt1.c5 COLLATE RTRIM IN ()); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES ('', NULL), (x'', 0.31183279155493604), (x'', NULL); -- 4ms;
DROP INDEX IF EXISTS "i64"; -- 0ms;
UPDATE OR ABORT rt1 SET c3=NULL, c5=x'' WHERE CAST((('405687780') ISNULL) AS INTEGER); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR REPLACE INTO t0(c0, c56) VALUES (0.140281750802689, 0.6770640401038267); -- 14ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB ); -- 1ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('876787266'); -- 13ms;
CREATE TEMPORARY TABLE t1 (c0 TEXT ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  t0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE rt1 SET c5=-949852503 WHERE ((rt1.c5)OR(rt1.c2)) COLLATE RTRIM; -- 14ms;
INSERT OR FAIL INTO rt1(c3) VALUES (x''); -- 12ms;
REINDEX  t0; -- 0ms;
UPDATE OR IGNORE vt0 SET c2=1803659008, c1=NULL WHERE (((NOT (vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND ((- (vt0.c2)))); -- 0ms;
UPDATE t1 SET c0=NULL WHERE (((~ (t1.c0))) BETWEEN ((t1.c0 IN ())) AND (COALESCE(DISTINCT NULL, t1.c0, t1.c0, '-62048173'))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('-294848998'); -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 526821469);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1554240353); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c2, c0, c1) VALUES ('{', '|a]Jz9￿', 'p<'), (x'', NULL, NULL), (-1285846091, '1098688478', ''); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE rt1 SET c3=x'2ed8'; -- 1ms;
INSERT OR IGNORE INTO t0(c56) VALUES (x'2c75'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19914'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ABORT vt0 SET c1=NULL, c0=0.22294296031356586 WHERE vt0.c1; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('-1113082870', 3.27996548E8); -- 0ms;
PRAGMA temp.application_id = 2005602267581580613; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('vr', '.h'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR REPLACE t0 SET (c56)=(NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c56) VALUES (0.06652179439353467, '{f88'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR REPLACE rt1 SET (c2)=('-1285846091') WHERE (+ (((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c0)))); -- 1ms;
UPDATE OR IGNORE rt1 SET (c0)=('{f88') WHERE (((rt1.c5, rt1.c3, '1589508153')) NOT BETWEEN ((NULL, rt1.c4, rt1.c5)) AND (((+ (rt1.c0)), (rt1.c5 IN ()), rt1.c4 COLLATE RTRIM))); -- 0ms;
UPDATE t1 SET (c0)=('斩\Ye'); -- 0ms;
UPDATE OR REPLACE vt0 SET c1=0X6ee2089b, c0=NULL; -- 0ms;
REINDEX  t0; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('꤈Z Eg/K'), (x''), (x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('B{~ྐྵSD(g') ISNULL)  WHEN (x'' IN ()) THEN (('887372183')<<('0.31183279155493604')) WHEN ((-1991698195) NOT BETWEEN (0.5807158905779822) AND (0.8913404024532464)) THEN (NOT (0.31183279155493604)) WHEN (('qaWa') BETWEEN (x'') AND (x'')) THEN (0.768600855193041 IN ()) END; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('2126791092', 0.36637917699726186); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET c0=0.6109092476860626 WHERE ('955742998' IN ()); -- 0ms;
ANALYZE temp; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT ((vt0.c1 IN (vt0.c2))))) ORDER BY LOWER(((((rt1.c5)AND(vt0.c2)))OR(rt1.c5))) DESC, (((rt1.c2, vt0.c1, 0.7810319023938382)) BETWEEN ((vt0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL), (((rt1.c0, rt1.c1, rt1.c2))<((rt1.c4, rt1.c5, vt0.c1))))) AND ((((((rt1.c4)AND(rt1.c1)))OR(rt1.c0)), (+ (rt1.c4)), (((rt1.c4)) BETWEEN ((vt0.c2)) AND ((rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c1 IN (vt0.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LOWER(((((rt1.c5)AND(vt0.c2)))OR(rt1.c5))) DESC, (((rt1.c2, vt0.c1, 0.7810319023938382)) BETWEEN ((vt0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL), (((rt1.c0, rt1.c1, rt1.c2))<((rt1.c4, rt1.c5, vt0.c1))))) AND ((((((rt1.c4)AND(rt1.c1)))OR(rt1.c0)), (+ (rt1.c4)), (((rt1.c4)) BETWEEN ((vt0.c2)) AND ((rt1.c5)))))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT ((vt0.c1 IN (vt0.c2))))) ORDER BY LOWER(((((rt1.c5)AND(vt0.c2)))OR(rt1.c5))) DESC, (((rt1.c2, vt0.c1, 0.7810319023938382)) BETWEEN ((vt0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL), (((rt1.c0, rt1.c1, rt1.c2))<((rt1.c4, rt1.c5, vt0.c1))))) AND ((((((rt1.c4)AND(rt1.c1)))OR(rt1.c0)), (+ (rt1.c4)), (((rt1.c4)) BETWEEN ((vt0.c2)) AND ((rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c1 IN (vt0.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY LOWER(((((rt1.c5)AND(vt0.c2)))OR(rt1.c5))) DESC, (((rt1.c2, vt0.c1, 0.7810319023938382)) BETWEEN ((vt0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL), (((rt1.c0, rt1.c1, rt1.c2))<((rt1.c4, rt1.c5, vt0.c1))))) AND ((((((rt1.c4)AND(rt1.c1)))OR(rt1.c0)), (+ (rt1.c4)), (((rt1.c4)) BETWEEN ((vt0.c2)) AND ((rt1.c5)))))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT ((vt0.c1 IN (vt0.c2))))) ORDER BY LOWER(((((rt1.c5)AND(vt0.c2)))OR(rt1.c5))) DESC, (((rt1.c2, vt0.c1, 0.7810319023938382)) BETWEEN ((vt0.c1 COLLATE BINARY, ((rt1.c1) NOTNULL), (((rt1.c0, rt1.c1, rt1.c2))<((rt1.c4, rt1.c5, vt0.c1))))) AND ((((((rt1.c4)AND(rt1.c1)))OR(rt1.c0)), (+ (rt1.c4)), (((rt1.c4)) BETWEEN ((vt0.c2)) AND ((rt1.c5))))));
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE ((((vt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE ((((vt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE ((((vt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (LIKELY(DISTINCT rt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LIKELY(DISTINCT rt1.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LIKELY(DISTINCT rt1.c1 COLLATE RTRIM));
SELECT ALL * FROM t0, t1 NATURAL JOIN rt1 WHERE (((rt1.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) ISNULL)) IS TRUE)  as count FROM t0, t1 NATURAL JOIN rt1);
SELECT ALL * FROM t0, t1 NATURAL JOIN rt1 WHERE (((rt1.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) ISNULL)) IS TRUE)  as count FROM t0, t1 NATURAL JOIN rt1);
SELECT ALL * FROM t0, t1 NATURAL JOIN rt1 WHERE (((rt1.c1) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN t1 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))OR(t1.c0)))OR(rt0.c0))) ISNULL) FULL OUTER JOIN vt0 ON ((((vt0.c0)%(t1.c0)))/(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END)) WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))OR(t1.c0)))OR(rt0.c0))) ISNULL) FULL OUTER JOIN vt0 ON ((((vt0.c0)%(t1.c0)))/(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL * FROM rt0 INNER JOIN t1 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))OR(t1.c0)))OR(rt0.c0))) ISNULL) FULL OUTER JOIN vt0 ON ((((vt0.c0)%(t1.c0)))/(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END)) WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) LEFT OUTER JOIN t0 ON ((((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))OR(t1.c0)))OR(rt0.c0))) ISNULL) FULL OUTER JOIN vt0 ON ((((vt0.c0)%(t1.c0)))/(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL * FROM rt0, rt1, t1 WHERE (CAST(((rt1.c1)<(rt1.c1)) AS TEXT)) ORDER BY CAST('' AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)<(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST('' AS REAL) ASC);
SELECT ALL * FROM rt0, rt1, t1 WHERE (CAST(((rt1.c1)<(rt1.c1)) AS TEXT)) ORDER BY CAST('' AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)<(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CAST('' AS REAL) ASC);
SELECT ALL * FROM rt0, rt1, t1 WHERE (CAST(((rt1.c1)<(rt1.c1)) AS TEXT)) ORDER BY CAST('' AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT * FROM t0, vt0, t1 WHERE ((highlight(t0.c56, vt0.c1, t1.c0, vt0.c2) IN ())) ORDER BY CASE CASE WHEN t0.c56 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((((t0.c56)AND(t1.c0)))AND(NULL)) THEN (vt0.c2 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((highlight(t0.c56, vt0.c1, t1.c0, vt0.c2) IN ())) IS TRUE)  as count FROM t0, vt0, t1 ORDER BY CASE CASE WHEN t0.c56 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((((t0.c56)AND(t1.c0)))AND(NULL)) THEN (vt0.c2 IN ()) END ASC  NULLS LAST);
SELECT * FROM t0, vt0, t1 WHERE ((highlight(t0.c56, vt0.c1, t1.c0, vt0.c2) IN ())) ORDER BY CASE CASE WHEN t0.c56 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((((t0.c56)AND(t1.c0)))AND(NULL)) THEN (vt0.c2 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((highlight(t0.c56, vt0.c1, t1.c0, vt0.c2) IN ())) IS TRUE)  as count FROM t0, vt0, t1 ORDER BY CASE CASE WHEN t0.c56 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((((t0.c56)AND(t1.c0)))AND(NULL)) THEN (vt0.c2 IN ()) END ASC  NULLS LAST);
SELECT * FROM t0, vt0, t1 WHERE ((highlight(t0.c56, vt0.c1, t1.c0, vt0.c2) IN ())) ORDER BY CASE CASE WHEN t0.c56 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((((t0.c56)AND(t1.c0)))AND(NULL)) THEN (vt0.c2 IN ()) END ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (TRIM(DISTINCT t0.c56, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT t0.c56, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (TRIM(DISTINCT t0.c56, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT t0.c56, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (TRIM(DISTINCT t0.c56, rt0.c2) COLLATE BINARY);
SELECT ALL * FROM rt1, t0, rt0, t1, vt0 WHERE (((rt1.c3)>('-2070112799')));
SELECT SUM(count) FROM (SELECT ((((rt1.c3)>('-2070112799'))) IS TRUE)  as count FROM rt1, t0, rt0, t1, vt0);
SELECT ALL * FROM rt1, t0, rt0, t1, vt0 WHERE (((rt1.c3)>('-2070112799')));
SELECT SUM(count) FROM (SELECT ((((rt1.c3)>('-2070112799'))) IS TRUE)  as count FROM rt1, t0, rt0, t1, vt0);
SELECT ALL * FROM rt1, t0, rt0, t1, vt0 WHERE (((rt1.c3)>('-2070112799')));
SELECT * FROM t1 WHERE (CAST(0.826966584140224 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.826966584140224 AS TEXT)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(0.826966584140224 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.826966584140224 AS TEXT)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(0.826966584140224 AS TEXT));
SELECT ALL * FROM rt1 INNER JOIN t0 ON t0.c56 WHERE ((CASE WHEN rt1.c5 THEN t0.c56 ELSE rt1.c5 END IN ())) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c5 THEN t0.c56 ELSE rt1.c5 END IN ())) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON t0.c56 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN t0 ON t0.c56 WHERE ((CASE WHEN rt1.c5 THEN t0.c56 ELSE rt1.c5 END IN ())) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c5 THEN t0.c56 ELSE rt1.c5 END IN ())) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON t0.c56 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN t0 ON t0.c56 WHERE ((CASE WHEN rt1.c5 THEN t0.c56 ELSE rt1.c5 END IN ())) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1, vt0, t1 WHERE (((((((t0.c56)OR(rt1.c4)))AND(vt0.c1)))IS NOT(CASE rt1.c1  WHEN 0x41bbe8e4 THEN vt0.c2 WHEN vt0.c2 THEN rt1.c4 WHEN rt1.c4 THEN t1.c0 ELSE rt1.c0 END))) ORDER BY CASE ((rt1.c0) ISNULL)  WHEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (vt0.c1)) THEN MAX(vt0.c2, rt1.c1) ELSE (- (vt0.c2)) END, ((((((((PRINTF(rt1.c3))OR(((vt0.c2) IS FALSE))))AND((vt0.c2 IN ()))))AND(CAST(vt0.c2 AS REAL))))AND(CAST(vt0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c56)OR(rt1.c4)))AND(vt0.c1)))IS NOT(CASE rt1.c1  WHEN 0X41bbe8e4 THEN vt0.c2 WHEN vt0.c2 THEN rt1.c4 WHEN rt1.c4 THEN t1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM t0, rt1, vt0, t1 ORDER BY CASE ((rt1.c0) ISNULL)  WHEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (vt0.c1)) THEN MAX(vt0.c2, rt1.c1) ELSE (- (vt0.c2)) END, ((((((((PRINTF(rt1.c3))OR(((vt0.c2) IS FALSE))))AND((vt0.c2 IN ()))))AND(CAST(vt0.c2 AS REAL))))AND(CAST(vt0.c1 AS REAL))) DESC);
SELECT COUNT(*) FROM t0, rt1, vt0, t1 WHERE (((((((t0.c56)OR(rt1.c4)))AND(vt0.c1)))IS NOT(CASE rt1.c1  WHEN 0x41bbe8e4 THEN vt0.c2 WHEN vt0.c2 THEN rt1.c4 WHEN rt1.c4 THEN t1.c0 ELSE rt1.c0 END))) ORDER BY CASE ((rt1.c0) ISNULL)  WHEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (vt0.c1)) THEN MAX(vt0.c2, rt1.c1) ELSE (- (vt0.c2)) END, ((((((((PRINTF(rt1.c3))OR(((vt0.c2) IS FALSE))))AND((vt0.c2 IN ()))))AND(CAST(vt0.c2 AS REAL))))AND(CAST(vt0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c56)OR(rt1.c4)))AND(vt0.c1)))IS NOT(CASE rt1.c1  WHEN 0X41bbe8e4 THEN vt0.c2 WHEN vt0.c2 THEN rt1.c4 WHEN rt1.c4 THEN t1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM t0, rt1, vt0, t1 ORDER BY CASE ((rt1.c0) ISNULL)  WHEN ((rt1.c4) NOT BETWEEN (rt1.c2) AND (vt0.c1)) THEN MAX(vt0.c2, rt1.c1) ELSE (- (vt0.c2)) END, ((((((((PRINTF(rt1.c3))OR(((vt0.c2) IS FALSE))))AND((vt0.c2 IN ()))))AND(CAST(vt0.c2 AS REAL))))AND(CAST(vt0.c1 AS REAL))) DESC);
SELECT * FROM rt1, t0, vt0, rt0, t1 WHERE ((NOT (((rt1.c2)OR(0X3d31f0b9)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c2)OR(0X3d31f0b9))))) IS TRUE)  as count FROM rt1, t0, vt0, rt0, t1);
SELECT * FROM rt1, t0, vt0, rt0, t1 WHERE ((NOT (((rt1.c2)OR(0X3d31f0b9)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c2)OR(0X3d31f0b9))))) IS TRUE)  as count FROM rt1, t0, vt0, rt0, t1);
SELECT * FROM rt1, t0, vt0, rt0, t1 WHERE ((NOT (((rt1.c2)OR(0X3d31f0b9)))));
SELECT * FROM rt0 WHERE (ROUND(rt0.c1, SUBSTR(NULL, rt0.c1))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(rt0.c1, SUBSTR(NULL, rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (ROUND(rt0.c1, SUBSTR(NULL, rt0.c1))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(rt0.c1, SUBSTR(NULL, rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (ROUND(rt0.c1, SUBSTR(NULL, rt0.c1))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((((((rt0.c1)<(t1.c0)))OR(CAST(rt0.c3 AS REAL))))AND(((t0.c0) BETWEEN (t0.c56) AND (rt0.c3)))))OR((- (t0.c56)))))OR(((vt0.c0)IS(vt0.c1)))))AND(((rt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c2)))))AND(((rt0.c0)||(vt0.c0)))) INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN vt0.c2 WHEN rt0.c1 THEN t1.c0 WHEN vt0.c1 THEN rt0.c2 WHEN '̑rc9W6Brd' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) IS TRUE) WHERE ((((~ (t0.c0))) BETWEEN (((vt0.c2)GLOB(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY (((((((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) BETWEEN (((vt0.c2)GLOB(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((((((rt0.c1)<(t1.c0)))OR(CAST(rt0.c3 AS REAL))))AND(((t0.c0) BETWEEN (t0.c56) AND (rt0.c3)))))OR((- (t0.c56)))))OR(((vt0.c0)IS(vt0.c1)))))AND(((rt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c2)))))AND(((rt0.c0)||(vt0.c0)))) INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN vt0.c2 WHEN rt0.c1 THEN t1.c0 WHEN vt0.c1 THEN rt0.c2 WHEN '̑rc9W6Brd' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) IS TRUE) ORDER BY (((((((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ()) DESC);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((((((rt0.c1)<(t1.c0)))OR(CAST(rt0.c3 AS REAL))))AND(((t0.c0) BETWEEN (t0.c56) AND (rt0.c3)))))OR((- (t0.c56)))))OR(((vt0.c0)IS(vt0.c1)))))AND(((rt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c2)))))AND(((rt0.c0)||(vt0.c0)))) INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN vt0.c2 WHEN rt0.c1 THEN t1.c0 WHEN vt0.c1 THEN rt0.c2 WHEN '̑rc9W6Brd' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) IS TRUE) WHERE ((((~ (t0.c0))) BETWEEN (((vt0.c2)GLOB(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY (((((((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) BETWEEN (((vt0.c2)GLOB(rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((((((((((((((rt0.c1)<(t1.c0)))OR(CAST(rt0.c3 AS REAL))))AND(((t0.c0) BETWEEN (t0.c56) AND (rt0.c3)))))OR((- (t0.c56)))))OR(((vt0.c0)IS(vt0.c1)))))AND(((rt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c2)))))AND(((rt0.c0)||(vt0.c0)))) INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN vt0.c2 WHEN rt0.c1 THEN t1.c0 WHEN vt0.c1 THEN rt0.c2 WHEN '̑rc9W6Brd' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END) IS TRUE) ORDER BY (((((((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ()) DESC);
SELECT ALL * FROM vt0, rt0 NOT INDEXED, rt1, t1, t0 WHERE (((((NULLIF(t0.c56, -57975582))AND(JULIANDAY(t0.c0, rt1.c1, 1.860307099E9, rt1.c4, rt1.c0))))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(t0.c56, -57975582))AND(JULIANDAY(t0.c0, rt1.c1, 1.860307099E9, rt1.c4, rt1.c0))))AND(rt1.c0))) IS TRUE)  as count FROM vt0, rt0, rt1, t1, t0);
SELECT ALL * FROM vt0, rt0 NOT INDEXED, rt1, t1, t0 WHERE (((((NULLIF(t0.c56, -57975582))AND(JULIANDAY(t0.c0, rt1.c1, 1.860307099E9, rt1.c4, rt1.c0))))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(t0.c56, -57975582))AND(JULIANDAY(t0.c0, rt1.c1, 1.860307099E9, rt1.c4, rt1.c0))))AND(rt1.c0))) IS TRUE)  as count FROM vt0, rt0, rt1, t1, t0);
SELECT ALL * FROM vt0, rt0 NOT INDEXED, rt1, t1, t0 WHERE (((((NULLIF(t0.c56, -57975582))AND(JULIANDAY(t0.c0, rt1.c1, 1.860307099E9, rt1.c4, rt1.c0))))AND(rt1.c0)));
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((((rt1.c4)AND(rt1.c1)))IS(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)AND(rt1.c1)))IS(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((((rt1.c4)AND(rt1.c1)))IS(rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)AND(rt1.c1)))IS(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((((rt1.c4)AND(rt1.c1)))IS(rt1.c4 COLLATE NOCASE)));
SELECT * FROM rt0, t1, vt0 INNER JOIN t0 ON 1629753273 WHERE ((((((rt0.c0, vt0.c2, t0.c56))<>((0.06652179439353467, vt0.c1, vt0.c2)))) BETWEEN (((rt0.c3)<>(vt0.c1))) AND (((rt0.c1) NOT NULL)))) ORDER BY ((((((vt0.c1))<=((rt0.c2)))))>=((0.293612455105137 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, vt0.c2, t0.c56))<>((0.06652179439353467, vt0.c1, vt0.c2)))) BETWEEN (((rt0.c3)<>(vt0.c1))) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, t1, vt0 INNER JOIN t0 ON 1629753273 ORDER BY ((((((vt0.c1))<=((rt0.c2)))))>=((0.293612455105137 COLLATE NOCASE)))  NULLS LAST);
SELECT * FROM rt0, t1, vt0 INNER JOIN t0 ON 1629753273 WHERE ((((((rt0.c0, vt0.c2, t0.c56))<>((0.06652179439353467, vt0.c1, vt0.c2)))) BETWEEN (((rt0.c3)<>(vt0.c1))) AND (((rt0.c1) NOT NULL)))) ORDER BY ((((((vt0.c1))<=((rt0.c2)))))>=((0.293612455105137 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, vt0.c2, t0.c56))<>((0.06652179439353467, vt0.c1, vt0.c2)))) BETWEEN (((rt0.c3)<>(vt0.c1))) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, t1, vt0 INNER JOIN t0 ON 1629753273 ORDER BY ((((((vt0.c1))<=((rt0.c2)))))>=((0.293612455105137 COLLATE NOCASE)))  NULLS LAST);
SELECT * FROM rt0, t1, vt0 INNER JOIN t0 ON 1629753273 WHERE ((((((rt0.c0, vt0.c2, t0.c56))<>((0.06652179439353467, vt0.c1, vt0.c2)))) BETWEEN (((rt0.c3)<>(vt0.c1))) AND (((rt0.c1) NOT NULL)))) ORDER BY ((((((vt0.c1))<=((rt0.c2)))))>=((0.293612455105137 COLLATE NOCASE)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt0 NATURAL JOIN t1 WHERE (CAST((~ (vt0.c1)) AS BLOB)) ORDER BY '-1007287821' ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt0 NATURAL JOIN t1 ORDER BY '-1007287821' ASC);
SELECT COUNT(*) FROM rt0, t0, vt0 NATURAL JOIN t1 WHERE (CAST((~ (vt0.c1)) AS BLOB)) ORDER BY '-1007287821' ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, t0, vt0 NATURAL JOIN t1 ORDER BY '-1007287821' ASC);
SELECT COUNT(*) FROM rt0, t0, vt0 NATURAL JOIN t1 WHERE (CAST((~ (vt0.c1)) AS BLOB)) ORDER BY '-1007287821' ASC;
SELECT * FROM vt0, rt0, t0, rt1 WHERE ((((- (vt0.c2)))>(CAST(rt1.c0 AS TEXT)))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c2)))) DESC  NULLS LAST, ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt1.c4 AS TEXT))))AND(((vt0.c2)+(1102833892))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c2)))>(CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t0, rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c2)))) DESC  NULLS LAST, ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt1.c4 AS TEXT))))AND(((vt0.c2)+(1102833892)))));
SELECT * FROM vt0, rt0, t0, rt1 WHERE ((((- (vt0.c2)))>(CAST(rt1.c0 AS TEXT)))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c2)))) DESC  NULLS LAST, ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt1.c4 AS TEXT))))AND(((vt0.c2)+(1102833892))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c2)))>(CAST(rt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t0, rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c2)))) DESC  NULLS LAST, ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt1.c4 AS TEXT))))AND(((vt0.c2)+(1102833892)))));
SELECT * FROM vt0, rt0, t0, rt1 WHERE ((((- (vt0.c2)))>(CAST(rt1.c0 AS TEXT)))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c2)))) DESC  NULLS LAST, ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt1.c4 AS TEXT))))AND(((vt0.c2)+(1102833892))));
SELECT * FROM rt0, rt1 WHERE ((((0.31183279155493604, NULL, rt1.c4)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (rt1.c0 IN (rt1.c3)), 0X6ee2089b)) AND (((rt0.c2 IN (rt1.c0, rt1.c4)), (- (rt0.c2)), (rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((0.31183279155493604, NULL, rt1.c4)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (rt1.c0 IN (rt1.c3)), 0x6ee2089b)) AND (((rt0.c2 IN (rt1.c0, rt1.c4)), (- (rt0.c2)), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((0.31183279155493604, NULL, rt1.c4)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (rt1.c0 IN (rt1.c3)), 0X6ee2089b)) AND (((rt0.c2 IN (rt1.c0, rt1.c4)), (- (rt0.c2)), (rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((0.31183279155493604, NULL, rt1.c4)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (rt1.c0 IN (rt1.c3)), 0x6ee2089b)) AND (((rt0.c2 IN (rt1.c0, rt1.c4)), (- (rt0.c2)), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((0.31183279155493604, NULL, rt1.c4)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC), (rt1.c0 IN (rt1.c3)), 0X6ee2089b)) AND (((rt0.c2 IN (rt1.c0, rt1.c4)), (- (rt0.c2)), (rt1.c1 IN ())))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c2)) AS TEXT));
SELECT * FROM t0, t1 WHERE ((((t0.c56 IN (t0.c0))) ISNULL)) ORDER BY CAST(((t1.c0) NOT BETWEEN (t0.c56) AND (t1.c0)) AS BLOB)  NULLS FIRST, ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))==((((t0.c0) BETWEEN (t0.c56) AND (t0.c56)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56 IN (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (t0.c56) AND (t1.c0)) AS BLOB)  NULLS FIRST, ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))==((((t0.c0) BETWEEN (t0.c56) AND (t0.c56)))))  NULLS LAST);
SELECT * FROM t0, t1 WHERE ((((t0.c56 IN (t0.c0))) ISNULL)) ORDER BY CAST(((t1.c0) NOT BETWEEN (t0.c56) AND (t1.c0)) AS BLOB)  NULLS FIRST, ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))==((((t0.c0) BETWEEN (t0.c56) AND (t0.c56)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56 IN (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (t0.c56) AND (t1.c0)) AS BLOB)  NULLS FIRST, ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))==((((t0.c0) BETWEEN (t0.c56) AND (t0.c56)))))  NULLS LAST);
SELECT * FROM t0, t1 WHERE ((((t0.c56 IN (t0.c0))) ISNULL)) ORDER BY CAST(((t1.c0) NOT BETWEEN (t0.c56) AND (t1.c0)) AS BLOB)  NULLS FIRST, ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))==((((t0.c0) BETWEEN (t0.c56) AND (t0.c56)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t1, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t1, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, t1, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, rt1 WHERE (NULL);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN NULL THEN CAST(rt1.c0 AS NUMERIC) END) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN NULL THEN CAST(rt1.c0 AS NUMERIC) END) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt1 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN NULL THEN CAST(rt1.c0 AS NUMERIC) END) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN vt0 ON ((rt0.c3) NOT BETWEEN (((rt0.c0)=(vt0.c1))) AND (t0.c0 COLLATE RTRIM)) FULL OUTER JOIN t0 ON (t0.c0 COLLATE NOCASE IN ((NOT ('')))) WHERE (CASE WHEN ((((rt0.c1)OR(t0.c56)))AND(rt0.c2)) THEN ((rt0.c1) BETWEEN (t0.c0) AND (t1.c0)) WHEN rt0.c2 THEN rt0.c3 COLLATE NOCASE WHEN (0.1340645317418222 IN ()) THEN ('sh' IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN TYPEOF(rt0.c0) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(rt0.c0)))AND(t0.c56)) ELSE ((rt0.c0)LIKE(rt0.c0)) END) ORDER BY COALESCE(CASE t0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END, (- (vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)OR(t0.c56)))AND(rt0.c2)) THEN ((rt0.c1) BETWEEN (t0.c0) AND (t1.c0)) WHEN rt0.c2 THEN rt0.c3 COLLATE NOCASE WHEN (0.1340645317418222 IN ()) THEN ('sh' IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN TYPEOF(rt0.c0) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(rt0.c0)))AND(t0.c56)) ELSE ((rt0.c0)LIKE(rt0.c0)) END) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON ((rt0.c3) NOT BETWEEN (((rt0.c0)=(vt0.c1))) AND (t0.c0 COLLATE RTRIM)) FULL OUTER JOIN t0 ON (t0.c0 COLLATE NOCASE IN ((NOT ('')))) ORDER BY COALESCE(CASE t0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END, (- (vt0.c1)))  NULLS LAST);
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN vt0 ON ((rt0.c3) NOT BETWEEN (((rt0.c0)=(vt0.c1))) AND (t0.c0 COLLATE RTRIM)) FULL OUTER JOIN t0 ON (t0.c0 COLLATE NOCASE IN ((NOT ('')))) WHERE (CASE WHEN ((((rt0.c1)OR(t0.c56)))AND(rt0.c2)) THEN ((rt0.c1) BETWEEN (t0.c0) AND (t1.c0)) WHEN rt0.c2 THEN rt0.c3 COLLATE NOCASE WHEN (0.1340645317418222 IN ()) THEN ('sh' IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN TYPEOF(rt0.c0) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(rt0.c0)))AND(t0.c56)) ELSE ((rt0.c0)LIKE(rt0.c0)) END) ORDER BY COALESCE(CASE t0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END, (- (vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)OR(t0.c56)))AND(rt0.c2)) THEN ((rt0.c1) BETWEEN (t0.c0) AND (t1.c0)) WHEN rt0.c2 THEN rt0.c3 COLLATE NOCASE WHEN (0.1340645317418222 IN ()) THEN ('sh' IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN TYPEOF(rt0.c0) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(rt0.c0)))AND(t0.c56)) ELSE ((rt0.c0)LIKE(rt0.c0)) END) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON ((rt0.c3) NOT BETWEEN (((rt0.c0)=(vt0.c1))) AND (t0.c0 COLLATE RTRIM)) FULL OUTER JOIN t0 ON (t0.c0 COLLATE NOCASE IN ((NOT ('')))) ORDER BY COALESCE(CASE t0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c0 END, (- (vt0.c1)))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (x'471e');
SELECT SUM(count) FROM (SELECT ((x'471e') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (x'471e');
SELECT SUM(count) FROM (SELECT ((x'471e') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (x'471e');
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)<=('-2126687816' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)<=('-2126687816' COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)<=('-2126687816' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)<=('-2126687816' COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)<=('-2126687816' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN rt1 ON ((rt1.c5)IS(rt1.c5)) COLLATE BINARY COLLATE NOCASE CROSS JOIN t0 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE rt1.c3  WHEN rt1.c1 THEN t1.c0 ELSE '-1906470089' END) AND (x'')) WHERE ((((t1.c0) NOT BETWEEN (rt1.c5) AND (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOT BETWEEN (rt1.c5) AND (t1.c0)) IN ())) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt1 ON ((rt1.c5)IS(rt1.c5)) COLLATE BINARY COLLATE NOCASE CROSS JOIN t0 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE rt1.c3  WHEN rt1.c1 THEN t1.c0 ELSE '-1906470089' END) AND (x'')));
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN rt1 ON ((rt1.c5)IS(rt1.c5)) COLLATE BINARY COLLATE NOCASE CROSS JOIN t0 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE rt1.c3  WHEN rt1.c1 THEN t1.c0 ELSE '-1906470089' END) AND (x'')) WHERE ((((t1.c0) NOT BETWEEN (rt1.c5) AND (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOT BETWEEN (rt1.c5) AND (t1.c0)) IN ())) IS TRUE)  as count FROM t1, vt0 CROSS JOIN rt1 ON ((rt1.c5)IS(rt1.c5)) COLLATE BINARY COLLATE NOCASE CROSS JOIN t0 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE rt1.c3  WHEN rt1.c1 THEN t1.c0 ELSE '-1906470089' END) AND (x'')));
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN rt1 ON ((rt1.c5)IS(rt1.c5)) COLLATE BINARY COLLATE NOCASE CROSS JOIN t0 ON ((((rt1.c1) NOTNULL)) BETWEEN (CASE rt1.c3  WHEN rt1.c1 THEN t1.c0 ELSE '-1906470089' END) AND (x'')) WHERE ((((t1.c0) NOT BETWEEN (rt1.c5) AND (t1.c0)) IN ()));
SELECT * FROM t0, rt0, rt1, t1, vt0 WHERE (NULLIF(DISTINCT ((vt0.c1)>=(rt1.c4)), CASE rt1.c4  WHEN t0.c56 THEN rt1.c0 END)) ORDER BY (~ (rt0.c2 COLLATE NOCASE)), ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) BETWEEN (((((rt1.c2)AND('17D3^z')))OR(rt0.c3))) AND (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c1)>=(rt1.c4)), CASE rt1.c4  WHEN t0.c56 THEN rt1.c0 END)) IS TRUE)  as count FROM t0, rt0, rt1, t1, vt0 ORDER BY (~ (rt0.c2 COLLATE NOCASE)), ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) BETWEEN (((((rt1.c2)AND('17D3^z')))OR(rt0.c3))) AND (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, rt1, t1, vt0 WHERE (NULLIF(DISTINCT ((vt0.c1)>=(rt1.c4)), CASE rt1.c4  WHEN t0.c56 THEN rt1.c0 END)) ORDER BY (~ (rt0.c2 COLLATE NOCASE)), ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) BETWEEN (((((rt1.c2)AND('17D3^z')))OR(rt0.c3))) AND (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c1)>=(rt1.c4)), CASE rt1.c4  WHEN t0.c56 THEN rt1.c0 END)) IS TRUE)  as count FROM t0, rt0, rt1, t1, vt0 ORDER BY (~ (rt0.c2 COLLATE NOCASE)), ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) BETWEEN (((((rt1.c2)AND('17D3^z')))OR(rt0.c3))) AND (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST);
SELECT * FROM t0, rt0, rt1, t1, vt0 WHERE (NULLIF(DISTINCT ((vt0.c1)>=(rt1.c4)), CASE rt1.c4  WHEN t0.c56 THEN rt1.c0 END)) ORDER BY (~ (rt0.c2 COLLATE NOCASE)), ((t0.c0) BETWEEN (rt0.c3) AND (vt0.c2)) COLLATE RTRIM DESC, ((vt0.c0) BETWEEN (((((rt1.c2)AND('17D3^z')))OR(rt0.c3))) AND (CAST(vt0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((~ ((t1.c0 IN (t1.c0, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c0 IN (t1.c0, t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((~ ((t1.c0 IN (t1.c0, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c0 IN (t1.c0, t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((~ ((t1.c0 IN (t1.c0, t1.c0)))));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((NULL) BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c0)-(rt1.c4)))) INNER JOIN vt0 ON ((rt1.c0 COLLATE RTRIM)<(HEX(DISTINCT rt1.c4))) FULL OUTER JOIN rt0 ON ((rt1.c5)AND(vt0.c2)) WHERE ((~ ((((x''))<>(('983858458'))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((x''))!=(('983858458')))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((NULL) BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c0)-(rt1.c4)))) INNER JOIN vt0 ON ((rt1.c0 COLLATE RTRIM)<(HEX(DISTINCT rt1.c4))) FULL OUTER JOIN rt0 ON ((rt1.c5)AND(vt0.c2)));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((NULL) BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c0)-(rt1.c4)))) INNER JOIN vt0 ON ((rt1.c0 COLLATE RTRIM)<(HEX(DISTINCT rt1.c4))) FULL OUTER JOIN rt0 ON ((rt1.c5)AND(vt0.c2)) WHERE ((~ ((((x''))<>(('983858458'))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((x''))!=(('983858458')))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((NULL) BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c0)-(rt1.c4)))) INNER JOIN vt0 ON ((rt1.c0 COLLATE RTRIM)<(HEX(DISTINCT rt1.c4))) FULL OUTER JOIN rt0 ON ((rt1.c5)AND(vt0.c2)));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((NOT (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((NOT (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((NOT (rt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)<<(vt0.c1)))OR('')))OR(((vt0.c1) NOT NULL))))OR(vt0.c1)))OR(LIKE(-1.898959806E9, vt0.c2)))) ORDER BY (((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)), CAST(0.008765410165550214 AS INTEGER)))<(((('days')OR(vt0.c1)), ((vt0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)<<(vt0.c1)))OR('')))OR(((vt0.c1) NOT NULL))))OR(vt0.c1)))OR(LIKE(-1.898959806E9, vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)), CAST(0.008765410165550214 AS INTEGER)))<(((('days')OR(vt0.c1)), ((vt0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)<<(vt0.c1)))OR('')))OR(((vt0.c1) NOT NULL))))OR(vt0.c1)))OR(LIKE(-1.898959806E9, vt0.c2)))) ORDER BY (((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)), CAST(0.008765410165550214 AS INTEGER)))<(((('days')OR(vt0.c1)), ((vt0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)<<(vt0.c1)))OR('')))OR(((vt0.c1) NOT NULL))))OR(vt0.c1)))OR(LIKE(-1.898959806E9, vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)), CAST(0.008765410165550214 AS INTEGER)))<(((('days')OR(vt0.c1)), ((vt0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)<<(vt0.c1)))OR('')))OR(((vt0.c1) NOT NULL))))OR(vt0.c1)))OR(LIKE(-1.898959806E9, vt0.c2)))) ORDER BY (((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)), CAST(0.008765410165550214 AS INTEGER)))<(((('days')OR(vt0.c1)), ((vt0.c0) NOTNULL), CAST(vt0.c1 AS INTEGER)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, t0, rt1, vt0, rt0 WHERE (((((vt0.c1)AND(t0.c56))) BETWEEN ('') AND (((rt1.c5) IS TRUE)))) ORDER BY ((((rt1.c0)*(t0.c56)))/(CASE WHEN t0.c56 THEN rt0.c0 WHEN t0.c0 THEN t0.c56 WHEN rt1.c5 THEN rt1.c3 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(t0.c56))) BETWEEN ('') AND (((rt1.c5) IS TRUE)))) IS TRUE)  as count FROM t1, t0, rt1, vt0, rt0 ORDER BY ((((rt1.c0)*(t0.c56)))/(CASE WHEN t0.c56 THEN rt0.c0 WHEN t0.c0 THEN t0.c56 WHEN rt1.c5 THEN rt1.c3 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL * FROM t1, t0, rt1, vt0, rt0 WHERE (((((vt0.c1)AND(t0.c56))) BETWEEN ('') AND (((rt1.c5) IS TRUE)))) ORDER BY ((((rt1.c0)*(t0.c56)))/(CASE WHEN t0.c56 THEN rt0.c0 WHEN t0.c0 THEN t0.c56 WHEN rt1.c5 THEN rt1.c3 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)AND(t0.c56))) BETWEEN ('') AND (((rt1.c5) IS TRUE)))) IS TRUE)  as count FROM t1, t0, rt1, vt0, rt0 ORDER BY ((((rt1.c0)*(t0.c56)))/(CASE WHEN t0.c56 THEN rt0.c0 WHEN t0.c0 THEN t0.c56 WHEN rt1.c5 THEN rt1.c3 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL * FROM t1, t0, rt1, vt0, rt0 WHERE (((((vt0.c1)AND(t0.c56))) BETWEEN ('') AND (((rt1.c5) IS TRUE)))) ORDER BY ((((rt1.c0)*(t0.c56)))/(CASE WHEN t0.c56 THEN rt0.c0 WHEN t0.c0 THEN t0.c56 WHEN rt1.c5 THEN rt1.c3 ELSE t0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN 1.369041453E9 THEN t1.c0 ELSE t1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1.369041453E9 THEN t1.c0 ELSE t1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN 1.369041453E9 THEN t1.c0 ELSE t1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 1.369041453E9 THEN t1.c0 ELSE t1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN 1.369041453E9 THEN t1.c0 ELSE t1.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((((rt0.c0))==((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0))==((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((((rt0.c0))==((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0))==((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ ((((rt0.c0))==((rt0.c1))))));
SELECT * FROM rt1, rt0 WHERE (((x'') BETWEEN (rt1.c5) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (rt1.c5) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((x'') BETWEEN (rt1.c5) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (rt1.c5) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((x'') BETWEEN (rt1.c5) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT COUNT(*) FROM t0, t1, rt1, rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c5 WHEN t0.c56 THEN t0.c56 ELSE rt1.c5 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c5 WHEN t0.c56 THEN t0.c56 ELSE rt1.c5 END) IS TRUE)) IS TRUE)  as count FROM t0, t1, rt1, rt0, vt0);
SELECT COUNT(*) FROM t0, t1, rt1, rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c5 WHEN t0.c56 THEN t0.c56 ELSE rt1.c5 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c5 WHEN t0.c56 THEN t0.c56 ELSE rt1.c5 END) IS TRUE)) IS TRUE)  as count FROM t0, t1, rt1, rt0, vt0);
SELECT COUNT(*) FROM t0, t1, rt1, rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c5 WHEN t0.c56 THEN t0.c56 ELSE rt1.c5 END) IS TRUE));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt1.c3))<((CASE vt0.c0  WHEN rt1.c1 THEN rt0.c3 END))) WHERE (((rt0.c2 COLLATE NOCASE)<<(rt1.c1))) ORDER BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((rt0.c0, vt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c2, rt1.c0)))))  NULLS FIRST, (((rt1.c1)) BETWEEN ((((((rt0.c0)AND(rt0.c0)))AND(rt1.c3)))) AND ((rt1.c2)))  NULLS FIRST, CAST(json_type(vt0.c2) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)<<(rt1.c1))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt1.c3))<((CASE vt0.c0  WHEN rt1.c1 THEN rt0.c3 END))) ORDER BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((rt0.c0, vt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c2, rt1.c0)))))  NULLS FIRST, (((rt1.c1)) BETWEEN ((((((rt0.c0)AND(rt0.c0)))AND(rt1.c3)))) AND ((rt1.c2)))  NULLS FIRST, CAST(json_type(vt0.c2) AS INTEGER) DESC);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt1.c3))<((CASE vt0.c0  WHEN rt1.c1 THEN rt0.c3 END))) WHERE (((rt0.c2 COLLATE NOCASE)<<(rt1.c1))) ORDER BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((rt0.c0, vt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c2, rt1.c0)))))  NULLS FIRST, (((rt1.c1)) BETWEEN ((((((rt0.c0)AND(rt0.c0)))AND(rt1.c3)))) AND ((rt1.c2)))  NULLS FIRST, CAST(json_type(vt0.c2) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)<<(rt1.c1))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt0 ON (((rt1.c3))<((CASE vt0.c0  WHEN rt1.c1 THEN rt0.c3 END))) ORDER BY ((rt0.c0 COLLATE BINARY) NOT BETWEEN ((~ (rt1.c4))) AND ((((rt1.c3, rt1.c0, rt1.c0)) BETWEEN ((rt0.c0, vt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c2, rt1.c0)))))  NULLS FIRST, (((rt1.c1)) BETWEEN ((((((rt0.c0)AND(rt0.c0)))AND(rt1.c3)))) AND ((rt1.c2)))  NULLS FIRST, CAST(json_type(vt0.c2) AS INTEGER) DESC);
SELECT ALL * FROM t1, t0 NOT INDEXED, rt0, vt0 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY ((((((((((-1034933303) BETWEEN (vt0.c0) AND (t0.c0)))AND(CAST(vt0.c0 AS REAL))))AND((+ (t0.c0)))))OR(((rt0.c2) ISNULL))))AND(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1, t0, rt0, vt0 ORDER BY ((((((((((-1034933303) BETWEEN (vt0.c0) AND (t0.c0)))AND(CAST(vt0.c0 AS REAL))))AND((+ (t0.c0)))))OR(((rt0.c2) ISNULL))))AND(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, t0 NOT INDEXED, rt0, vt0 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY ((((((((((-1034933303) BETWEEN (vt0.c0) AND (t0.c0)))AND(CAST(vt0.c0 AS REAL))))AND((+ (t0.c0)))))OR(((rt0.c2) ISNULL))))AND(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1, t0, rt0, vt0 ORDER BY ((((((((((-1034933303) BETWEEN (vt0.c0) AND (t0.c0)))AND(CAST(vt0.c0 AS REAL))))AND((+ (t0.c0)))))OR(((rt0.c2) ISNULL))))AND(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, t0 NOT INDEXED, rt0, vt0 WHERE (CAST(t1.c0 AS TEXT)) ORDER BY ((((((((((-1034933303) BETWEEN (vt0.c0) AND (t0.c0)))AND(CAST(vt0.c0 AS REAL))))AND((+ (t0.c0)))))OR(((rt0.c2) ISNULL))))AND(CAST(rt0.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN rt0 ON (('lL#VW셩HLt') BETWEEN ((vt0.c2 IN ())) AND (CASE rt0.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c0 THEN t1.c0 END)) LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY)*(CAST(rt0.c0 AS REAL))) INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt1 ON ((CAST(t1.c0 AS INTEGER))AND(((2.71330772E8) NOTNULL))) WHERE (((CAST(vt0.c2 AS INTEGER))||((t0.c0 IN (t0.c56))))) ORDER BY ((((vt0.c1) IS TRUE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER))||((t0.c0 IN (t0.c56))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (('lL#VW셩HLt') BETWEEN ((vt0.c2 IN ())) AND (CASE rt0.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c0 THEN t1.c0 END)) LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY)*(CAST(rt0.c0 AS REAL))) INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt1 ON ((CAST(t1.c0 AS INTEGER))AND(((2.71330772E8) NOTNULL))) ORDER BY ((((vt0.c1) IS TRUE)) ISNULL)  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN rt0 ON (('lL#VW셩HLt') BETWEEN ((vt0.c2 IN ())) AND (CASE rt0.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c0 THEN t1.c0 END)) LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY)*(CAST(rt0.c0 AS REAL))) INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt1 ON ((CAST(t1.c0 AS INTEGER))AND(((2.71330772E8) NOTNULL))) WHERE (((CAST(vt0.c2 AS INTEGER))||((t0.c0 IN (t0.c56))))) ORDER BY ((((vt0.c1) IS TRUE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER))||((t0.c0 IN (t0.c56))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (('lL#VW셩HLt') BETWEEN ((vt0.c2 IN ())) AND (CASE rt0.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c0 THEN t1.c0 END)) LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY)*(CAST(rt0.c0 AS REAL))) INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt1 ON ((CAST(t1.c0 AS INTEGER))AND(((2.71330772E8) NOTNULL))) ORDER BY ((((vt0.c1) IS TRUE)) ISNULL)  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN rt0 ON (('lL#VW셩HLt') BETWEEN ((vt0.c2 IN ())) AND (CASE rt0.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c0 THEN t1.c0 END)) LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY)*(CAST(rt0.c0 AS REAL))) INNER JOIN vt0 ON (x'' IN ()) FULL OUTER JOIN rt1 ON ((CAST(t1.c0 AS INTEGER))AND(((2.71330772E8) NOTNULL))) WHERE (((CAST(vt0.c2 AS INTEGER))||((t0.c0 IN (t0.c56))))) ORDER BY ((((vt0.c1) IS TRUE)) ISNULL)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT ((t0.c0) NOTNULL))) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c56) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN CASE t0.c0  WHEN t0.c56 THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c56)OR(t0.c0)))OR('o%TVi{')) WHEN ABS(DISTINCT t0.c0) THEN LIKELY(t0.c56) END;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((t0.c0) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c56) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN CASE t0.c0  WHEN t0.c56 THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c56)OR(t0.c0)))OR('o%TVi{')) WHEN ABS(DISTINCT t0.c0) THEN LIKELY(t0.c56) END);
SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT ((t0.c0) NOTNULL))) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c56) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN CASE t0.c0  WHEN t0.c56 THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c56)OR(t0.c0)))OR('o%TVi{')) WHEN ABS(DISTINCT t0.c0) THEN LIKELY(t0.c56) END;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((t0.c0) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c56) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN CASE t0.c0  WHEN t0.c56 THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c56)OR(t0.c0)))OR('o%TVi{')) WHEN ABS(DISTINCT t0.c0) THEN LIKELY(t0.c56) END);
SELECT ALL * FROM t0 WHERE (UNLIKELY(DISTINCT ((t0.c0) NOTNULL))) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN ((t0.c56) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN CASE t0.c0  WHEN t0.c56 THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c56)OR(t0.c0)))OR('o%TVi{')) WHEN ABS(DISTINCT t0.c0) THEN LIKELY(t0.c56) END;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN rt1.c5 THEN rt1.c4 WHEN '876787266' THEN rt1.c1 WHEN rt0.c3 THEN rt0.c2 END)%(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt1.c5 THEN rt1.c4 WHEN '876787266' THEN rt1.c1 WHEN rt0.c3 THEN rt0.c2 END)%(((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN rt1.c5 THEN rt1.c4 WHEN '876787266' THEN rt1.c1 WHEN rt0.c3 THEN rt0.c2 END)%(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt1.c5 THEN rt1.c4 WHEN '876787266' THEN rt1.c1 WHEN rt0.c3 THEN rt0.c2 END)%(((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN rt1.c5 THEN rt1.c4 WHEN '876787266' THEN rt1.c1 WHEN rt0.c3 THEN rt0.c2 END)%(((t0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (TRIM(0Xffffffffa9a17156));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0Xffffffffa9a17156)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (TRIM(0Xffffffffa9a17156));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0Xffffffffa9a17156)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (TRIM(0Xffffffffa9a17156));
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE ((('7{')<>((NOT (x''))))) ORDER BY ((((rt1.c2)||(rt1.c0)))<((((rt1.c1))>((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('7{')<>((NOT (x''))))) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY ((((rt1.c2)||(rt1.c0)))<((((rt1.c1))>((NULL)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE ((('7{')<>((NOT (x''))))) ORDER BY ((((rt1.c2)||(rt1.c0)))<((((rt1.c1))>((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('7{')<>((NOT (x''))))) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY ((((rt1.c2)||(rt1.c0)))<((((rt1.c1))>((NULL)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE ((('7{')<>((NOT (x''))))) ORDER BY ((((rt1.c2)||(rt1.c0)))<((((rt1.c1))>((NULL)))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)LIKE(rt1.c5)))%(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)LIKE(rt1.c5)))%(NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)LIKE(rt1.c5)))%(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)LIKE(rt1.c5)))%(NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)LIKE(rt1.c5)))%(NULL COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON x'0f6f' COLLATE BINARY COLLATE NOCASE INNER JOIN t0 ON (((rt1.c1))<((rt1.c5))) COLLATE NOCASE WHERE ((+ (((rt1.c4)&(rt1.c5))))) ORDER BY CASE WHEN (((rt1.c0)) BETWEEN ((rt1.c4)) AND ((rt0.c2))) THEN ((((rt0.c2)AND(rt1.c1)))AND(rt1.c0)) END  NULLS FIRST, (rt1.c2 COLLATE NOCASE IN (((((rt1.c0)AND(t0.c0)))AND(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4)&(rt1.c5))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON x'0f6f' COLLATE BINARY COLLATE NOCASE INNER JOIN t0 ON (((rt1.c1))<((rt1.c5))) COLLATE NOCASE ORDER BY CASE WHEN (((rt1.c0)) BETWEEN ((rt1.c4)) AND ((rt0.c2))) THEN ((((rt0.c2)AND(rt1.c1)))AND(rt1.c0)) END  NULLS FIRST, (rt1.c2 COLLATE NOCASE IN (((((rt1.c0)AND(t0.c0)))AND(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON x'0f6f' COLLATE BINARY COLLATE NOCASE INNER JOIN t0 ON (((rt1.c1))<((rt1.c5))) COLLATE NOCASE WHERE ((+ (((rt1.c4)&(rt1.c5))))) ORDER BY CASE WHEN (((rt1.c0)) BETWEEN ((rt1.c4)) AND ((rt0.c2))) THEN ((((rt0.c2)AND(rt1.c1)))AND(rt1.c0)) END  NULLS FIRST, (rt1.c2 COLLATE NOCASE IN (((((rt1.c0)AND(t0.c0)))AND(rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4)&(rt1.c5))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON x'0f6f' COLLATE BINARY COLLATE NOCASE INNER JOIN t0 ON (((rt1.c1))<((rt1.c5))) COLLATE NOCASE ORDER BY CASE WHEN (((rt1.c0)) BETWEEN ((rt1.c4)) AND ((rt0.c2))) THEN ((((rt0.c2)AND(rt1.c1)))AND(rt1.c0)) END  NULLS FIRST, (rt1.c2 COLLATE NOCASE IN (((((rt1.c0)AND(t0.c0)))AND(rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON x'0f6f' COLLATE BINARY COLLATE NOCASE INNER JOIN t0 ON (((rt1.c1))<((rt1.c5))) COLLATE NOCASE WHERE ((+ (((rt1.c4)&(rt1.c5))))) ORDER BY CASE WHEN (((rt1.c0)) BETWEEN ((rt1.c4)) AND ((rt0.c2))) THEN ((((rt0.c2)AND(rt1.c1)))AND(rt1.c0)) END  NULLS FIRST, (rt1.c2 COLLATE NOCASE IN (((((rt1.c0)AND(t0.c0)))AND(rt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) NOTNULL) COLLATE BINARY);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON (+ (((vt0.c1) NOT NULL))) WHERE (CASE ((x'') ISNULL)  WHEN CASE t1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c2 IN ()) ELSE x'' END) ORDER BY (((- (']\%'))) ISNULL) ASC, (t1.c0 IN ((vt0.c1 IN (t1.c0)), ((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') ISNULL)  WHEN CASE t1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c2 IN ()) ELSE x'' END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (+ (((vt0.c1) NOT NULL))) ORDER BY (((- (']\%'))) ISNULL) ASC, (t1.c0 IN ((vt0.c1 IN (t1.c0)), ((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON (+ (((vt0.c1) NOT NULL))) WHERE (CASE ((x'') ISNULL)  WHEN CASE t1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c2 IN ()) ELSE x'' END) ORDER BY (((- (']\%'))) ISNULL) ASC, (t1.c0 IN ((vt0.c1 IN (t1.c0)), ((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((x'') ISNULL)  WHEN CASE t1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c2 IN ()) ELSE x'' END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (+ (((vt0.c1) NOT NULL))) ORDER BY (((- (']\%'))) ISNULL) ASC, (t1.c0 IN ((vt0.c1 IN (t1.c0)), ((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON (+ (((vt0.c1) NOT NULL))) WHERE (CASE ((x'') ISNULL)  WHEN CASE t1.c0  WHEN vt0.c0 THEN vt0.c1 END THEN (vt0.c2 IN ()) ELSE x'' END) ORDER BY (((- (']\%'))) ISNULL) ASC, (t1.c0 IN ((vt0.c1 IN (t1.c0)), ((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM t1, rt0, t0, vt0 WHERE (CAST(LIKE(t1.c0, rt0.c2) AS TEXT)) ORDER BY GLOB((~ (vt0.c2)), CAST(vt0.c0 AS REAL))  NULLS LAST, ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(t1.c0, rt0.c2) AS TEXT)) IS TRUE)  as count FROM t1, rt0, t0, vt0 ORDER BY GLOB((~ (vt0.c2)), CAST(vt0.c0 AS REAL))  NULLS LAST, ((x'') ISNULL)  NULLS LAST);
SELECT * FROM t1, rt0, t0, vt0 WHERE (CAST(LIKE(t1.c0, rt0.c2) AS TEXT)) ORDER BY GLOB((~ (vt0.c2)), CAST(vt0.c0 AS REAL))  NULLS LAST, ((x'') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(t1.c0, rt0.c2) AS TEXT)) IS TRUE)  as count FROM t1, rt0, t0, vt0 ORDER BY GLOB((~ (vt0.c2)), CAST(vt0.c0 AS REAL))  NULLS LAST, ((x'') ISNULL)  NULLS LAST);
SELECT * FROM t1, rt0, t0, vt0 WHERE (CAST(LIKE(t1.c0, rt0.c2) AS TEXT)) ORDER BY GLOB((~ (vt0.c2)), CAST(vt0.c0 AS REAL))  NULLS LAST, ((x'') ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c0))<=((rt0.c2)))) BETWEEN ((- (t0.c56))) AND (rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c0  NULLS LAST, 0.4072094717744663  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<=((rt0.c2)))) BETWEEN ((- (t0.c56))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0  NULLS LAST, 0.4072094717744663  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c0))<=((rt0.c2)))) BETWEEN ((- (t0.c56))) AND (rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c0  NULLS LAST, 0.4072094717744663  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<=((rt0.c2)))) BETWEEN ((- (t0.c56))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0  NULLS LAST, 0.4072094717744663  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c0))<=((rt0.c2)))) BETWEEN ((- (t0.c56))) AND (rt0.c0 COLLATE NOCASE))) ORDER BY rt0.c0  NULLS LAST, 0.4072094717744663  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE ((~ (CAST(rt1.c4 AS REAL)))) ORDER BY ((((rt1.c2)||(x'c931'))) BETWEEN (((((vt0.c0)AND(t0.c0)))AND(rt0.c2))) AND (((rt0.c1)OR(t0.c56))))  NULLS LAST, CASE WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c5 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, 'RK꤈[3yd'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c4 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY ((((rt1.c2)||(x'c931'))) BETWEEN (((((vt0.c0)AND(t0.c0)))AND(rt0.c2))) AND (((rt0.c1)OR(t0.c56))))  NULLS LAST, CASE WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c5 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, 'RK꤈[3yd'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE ((~ (CAST(rt1.c4 AS REAL)))) ORDER BY ((((rt1.c2)||(x'c931'))) BETWEEN (((((vt0.c0)AND(t0.c0)))AND(rt0.c2))) AND (((rt0.c1)OR(t0.c56))))  NULLS LAST, CASE WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c5 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, 'RK꤈[3yd'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c4 AS REAL)))) IS TRUE)  as count FROM rt0, rt1, vt0, t0 ORDER BY ((((rt1.c2)||(x'c931'))) BETWEEN (((((vt0.c0)AND(t0.c0)))AND(rt0.c2))) AND (((rt0.c1)OR(t0.c56))))  NULLS LAST, CASE WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c5 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, 'RK꤈[3yd'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE ((~ (CAST(rt1.c4 AS REAL)))) ORDER BY ((((rt1.c2)||(x'c931'))) BETWEEN (((((vt0.c0)AND(t0.c0)))AND(rt0.c2))) AND (((rt0.c1)OR(t0.c56))))  NULLS LAST, CASE WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c5 WHEN NULL THEN rt0.c1 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM DESC  NULLS FIRST, 'RK꤈[3yd'  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt1.c3) IS FALSE) THEN '' WHEN (vt0.c2 IN (rt0.c0)) THEN (rt0.c3 IN ()) WHEN (+ (rt1.c1)) THEN ((rt1.c1) IS FALSE) END WHERE ((~ (((rt1.c4)AND(rt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c4)AND(rt0.c1))))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt1.c3) IS FALSE) THEN '' WHEN (vt0.c2 IN (rt0.c0)) THEN (rt0.c3 IN ()) WHEN (+ (rt1.c1)) THEN ((rt1.c1) IS FALSE) END ORDER BY vt0.c0);
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt1.c3) IS FALSE) THEN '' WHEN (vt0.c2 IN (rt0.c0)) THEN (rt0.c3 IN ()) WHEN (+ (rt1.c1)) THEN ((rt1.c1) IS FALSE) END WHERE ((~ (((rt1.c4)AND(rt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c4)AND(rt0.c1))))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt1.c3) IS FALSE) THEN '' WHEN (vt0.c2 IN (rt0.c0)) THEN (rt0.c3 IN ()) WHEN (+ (rt1.c1)) THEN ((rt1.c1) IS FALSE) END ORDER BY vt0.c0);
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt1.c3) IS FALSE) THEN '' WHEN (vt0.c2 IN (rt0.c0)) THEN (rt0.c3 IN ()) WHEN (+ (rt1.c1)) THEN ((rt1.c1) IS FALSE) END WHERE ((~ (((rt1.c4)AND(rt0.c1))))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c56)<=(t0.c0)))>>((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c56)<=(t0.c0)))>>((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c56)<=(t0.c0)))>>((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c56)<=(t0.c0)))>>((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c56)<=(t0.c0)))>>((NOT (t0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c1) NOT NULL) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) END) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)*(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c1) NOT NULL) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)*(NULL)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c1) NOT NULL) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) END) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)*(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c1) NOT NULL) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)*(NULL)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c1) NOT NULL) ELSE ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) END) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c0)*(NULL)))) DESC;
SELECT * FROM rt0, vt0, t1 WHERE (CAST(((rt0.c1)*(rt0.c2)) AS BLOB)) ORDER BY (((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) IN (UNLIKELY(DISTINCT vt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY (((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) IN (UNLIKELY(DISTINCT vt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, vt0, t1 WHERE (CAST(((rt0.c1)*(rt0.c2)) AS BLOB)) ORDER BY (((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) IN (UNLIKELY(DISTINCT vt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY (((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) IN (UNLIKELY(DISTINCT vt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, vt0, t1 WHERE (CAST(((rt0.c1)*(rt0.c2)) AS BLOB)) ORDER BY (((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) IN (UNLIKELY(DISTINCT vt0.c2)))  NULLS FIRST;
SELECT * FROM rt1, t1 WHERE (((((rt1.c0)%(rt1.c0)))||(0.7219552554690128))) ORDER BY ((((rt1.c0)IS NOT(rt1.c1)))<=(((rt1.c0) BETWEEN (t1.c0) AND (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)%(rt1.c0)))||(0.7219552554690128))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((rt1.c0)IS NOT(rt1.c1)))<=(((rt1.c0) BETWEEN (t1.c0) AND (rt1.c1))))  NULLS FIRST);
SELECT * FROM rt1, t1 WHERE (((((rt1.c0)%(rt1.c0)))||(0.7219552554690128))) ORDER BY ((((rt1.c0)IS NOT(rt1.c1)))<=(((rt1.c0) BETWEEN (t1.c0) AND (rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)%(rt1.c0)))||(0.7219552554690128))) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((rt1.c0)IS NOT(rt1.c1)))<=(((rt1.c0) BETWEEN (t1.c0) AND (rt1.c1))))  NULLS FIRST);
SELECT * FROM rt1, t1 WHERE (((((rt1.c0)%(rt1.c0)))||(0.7219552554690128))) ORDER BY ((((rt1.c0)IS NOT(rt1.c1)))<=(((rt1.c0) BETWEEN (t1.c0) AND (rt1.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c2)-(rt0.c3))) IS TRUE)) ORDER BY 0.39543965193159536, (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt1.c2)))OR(rt0.c3)), rt0.c0, ((((rt1.c4)AND(rt0.c0)))AND(rt1.c4)), ((rt1.c3)AND(rt0.c3)), CAST(rt0.c0 AS TEXT)))>((((rt1.c1)=(rt0.c1)), rt0.c3, CAST(rt0.c1 AS INTEGER), CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '' THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN x'' END, ((rt0.c1) IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)-(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.39543965193159536, (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt1.c2)))OR(rt0.c3)), rt0.c0, ((((rt1.c4)AND(rt0.c0)))AND(rt1.c4)), ((rt1.c3)AND(rt0.c3)), CAST(rt0.c0 AS TEXT)))>((((rt1.c1)=(rt0.c1)), rt0.c3, CAST(rt0.c1 AS INTEGER), CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '' THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN x'' END, ((rt0.c1) IS TRUE)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c2)-(rt0.c3))) IS TRUE)) ORDER BY 0.39543965193159536, (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt1.c2)))OR(rt0.c3)), rt0.c0, ((((rt1.c4)AND(rt0.c0)))AND(rt1.c4)), ((rt1.c3)AND(rt0.c3)), CAST(rt0.c0 AS TEXT)))>((((rt1.c1)=(rt0.c1)), rt0.c3, CAST(rt0.c1 AS INTEGER), CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '' THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN x'' END, ((rt0.c1) IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)-(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.39543965193159536, (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt1.c2)))OR(rt0.c3)), rt0.c0, ((((rt1.c4)AND(rt0.c0)))AND(rt1.c4)), ((rt1.c3)AND(rt0.c3)), CAST(rt0.c0 AS TEXT)))>((((rt1.c1)=(rt0.c1)), rt0.c3, CAST(rt0.c1 AS INTEGER), CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '' THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN x'' END, ((rt0.c1) IS TRUE)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt1.c2)-(rt0.c3))) IS TRUE)) ORDER BY 0.39543965193159536, (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt1.c2)))OR(rt0.c3)), rt0.c0, ((((rt1.c4)AND(rt0.c0)))AND(rt1.c4)), ((rt1.c3)AND(rt0.c3)), CAST(rt0.c0 AS TEXT)))>((((rt1.c1)=(rt0.c1)), rt0.c3, CAST(rt0.c1 AS INTEGER), CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN '' THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN x'' END, ((rt0.c1) IS TRUE)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (((t1.c0 COLLATE NOCASE) NOT BETWEEN ((NOT (vt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE NOCASE) NOT BETWEEN ((NOT (vt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (((t1.c0 COLLATE NOCASE) NOT BETWEEN ((NOT (vt0.c0))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE NOCASE) NOT BETWEEN ((NOT (vt0.c0))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (((t1.c0 COLLATE NOCASE) NOT BETWEEN ((NOT (vt0.c0))) AND (rt0.c0)));
SELECT ALL * FROM vt0, rt1, t0 WHERE (PRINTF(CAST(t0.c0 AS REAL), ABS(rt1.c0), (('X{') BETWEEN (rt1.c4) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(CAST(t0.c0 AS REAL), ABS(rt1.c0), (('X{') BETWEEN (rt1.c4) AND (vt0.c1)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1, t0 WHERE (PRINTF(CAST(t0.c0 AS REAL), ABS(rt1.c0), (('X{') BETWEEN (rt1.c4) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(CAST(t0.c0 AS REAL), ABS(rt1.c0), (('X{') BETWEEN (rt1.c4) AND (vt0.c1)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT ALL * FROM vt0, rt1, t0 WHERE (PRINTF(CAST(t0.c0 AS REAL), ABS(rt1.c0), (('X{') BETWEEN (rt1.c4) AND (vt0.c1))));
SELECT ALL * FROM t0, t1 WHERE (((t0.c0) NOT BETWEEN ((t0.c56 IN ())) AND (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN ((t0.c56 IN ())) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (((t0.c0) NOT BETWEEN ((t0.c56 IN ())) AND (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN ((t0.c56 IN ())) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE (((t0.c0) NOT BETWEEN ((t0.c56 IN ())) AND (((t0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (json_array_length(0X61240fb9, (((t1.c0))>=((t1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_array_length(0x61240fb9, (((t1.c0))>=((t1.c0))))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (json_array_length(0X61240fb9, (((t1.c0))>=((t1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_array_length(0x61240fb9, (((t1.c0))>=((t1.c0))))) IS TRUE)  as count FROM t1, t0);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c1 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c1 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c1 AS REAL)) NOT NULL));
SELECT * FROM rt0, t0 INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (((((((((((t1.c0) BETWEEN (rt0.c3) AND (0.9802278751715933)))AND(((t1.c0)IS(vt0.c2)))))AND(((rt0.c3)>=(t0.c0)))))AND(rt0.c0)))OR(LOWER(rt0.c0)))) ORDER BY (((rt0.c2)/(vt0.c1)) IN ((~ (vt0.c2)), t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) BETWEEN (rt0.c3) AND (0.9802278751715933)))AND(((t1.c0)IS(vt0.c2)))))AND(((rt0.c3)>=(t0.c0)))))AND(rt0.c0)))OR(LOWER(rt0.c0)))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON CAST((t1.c0 IN ()) AS BLOB) ORDER BY (((rt0.c2)/(vt0.c1)) IN ((~ (vt0.c2)), t0.c0 COLLATE RTRIM)));
SELECT * FROM rt0, t0 INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (((((((((((t1.c0) BETWEEN (rt0.c3) AND (0.9802278751715933)))AND(((t1.c0)IS(vt0.c2)))))AND(((rt0.c3)>=(t0.c0)))))AND(rt0.c0)))OR(LOWER(rt0.c0)))) ORDER BY (((rt0.c2)/(vt0.c1)) IN ((~ (vt0.c2)), t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) BETWEEN (rt0.c3) AND (0.9802278751715933)))AND(((t1.c0)IS(vt0.c2)))))AND(((rt0.c3)>=(t0.c0)))))AND(rt0.c0)))OR(LOWER(rt0.c0)))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON CAST((t1.c0 IN ()) AS BLOB) ORDER BY (((rt0.c2)/(vt0.c1)) IN ((~ (vt0.c2)), t0.c0 COLLATE RTRIM)));
SELECT * FROM rt0, t0 INNER JOIN vt0 ON vt0.c1 INNER JOIN t1 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (((((((((((t1.c0) BETWEEN (rt0.c3) AND (0.9802278751715933)))AND(((t1.c0)IS(vt0.c2)))))AND(((rt0.c3)>=(t0.c0)))))AND(rt0.c0)))OR(LOWER(rt0.c0)))) ORDER BY (((rt0.c2)/(vt0.c1)) IN ((~ (vt0.c2)), t0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM rt1, t1, rt0, t0, vt0 WHERE (((((t0.c56) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c56) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, t1, rt0, t0, vt0);
SELECT COUNT(*) FROM rt1, t1, rt0, t0, vt0 WHERE (((((t0.c56) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c56) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, t1, rt0, t0, vt0);
SELECT COUNT(*) FROM rt1, t1, rt0, t0, vt0 WHERE (((((t0.c56) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN t1 ON 0Xffffffffd5ca3bbf LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY CROSS JOIN t0 ON (((rt1.c3 IN (rt0.c0, vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN rt1.c1 THEN vt0.c2 END)) WHERE (-1935554790) ORDER BY vt0.c0  NULLS FIRST, ((CASE WHEN t0.c56 THEN NULL ELSE t1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c4 THEN rt1.c2 END) AND (((rt1.c3) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1935554790) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN t1 ON 0xffffffffd5ca3bbf LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY CROSS JOIN t0 ON (((rt1.c3 IN (rt0.c0, vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN rt1.c1 THEN vt0.c2 END)) ORDER BY vt0.c0  NULLS FIRST, ((CASE WHEN t0.c56 THEN NULL ELSE t1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c4 THEN rt1.c2 END) AND (((rt1.c3) NOT NULL))) DESC);
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN t1 ON 0Xffffffffd5ca3bbf LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY CROSS JOIN t0 ON (((rt1.c3 IN (rt0.c0, vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN rt1.c1 THEN vt0.c2 END)) WHERE (-1935554790) ORDER BY vt0.c0  NULLS FIRST, ((CASE WHEN t0.c56 THEN NULL ELSE t1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c4 THEN rt1.c2 END) AND (((rt1.c3) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1935554790) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN t1 ON 0xffffffffd5ca3bbf LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY CROSS JOIN t0 ON (((rt1.c3 IN (rt0.c0, vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN rt1.c1 THEN vt0.c2 END)) ORDER BY vt0.c0  NULLS FIRST, ((CASE WHEN t0.c56 THEN NULL ELSE t1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c4 THEN rt1.c2 END) AND (((rt1.c3) NOT NULL))) DESC);
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN t1 ON 0Xffffffffd5ca3bbf LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS INTEGER) COLLATE BINARY CROSS JOIN t0 ON (((rt1.c3 IN (rt0.c0, vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN rt1.c1 THEN vt0.c2 END)) WHERE (-1935554790) ORDER BY vt0.c0  NULLS FIRST, ((CASE WHEN t0.c56 THEN NULL ELSE t1.c0 END) BETWEEN (CASE vt0.c0  WHEN rt1.c4 THEN rt1.c2 END) AND (((rt1.c3) NOT NULL))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, t0 WHERE (((((rt1.c1) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, t0 WHERE (((((rt1.c1) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1, t0 WHERE (((((rt1.c1) ISNULL)) NOTNULL));
SELECT COUNT(*) FROM rt1, t0, rt0, vt0 WHERE (0Xfffffffffc8b5ce2);
SELECT SUM(count) FROM (SELECT ((0Xfffffffffc8b5ce2) IS TRUE)  as count FROM rt1, t0, rt0, vt0);
SELECT COUNT(*) FROM rt1, t0, rt0, vt0 WHERE (0Xfffffffffc8b5ce2);
SELECT SUM(count) FROM (SELECT ((0Xfffffffffc8b5ce2) IS TRUE)  as count FROM rt1, t0, rt0, vt0);
SELECT COUNT(*) FROM rt1, t0, rt0, vt0 WHERE (0Xfffffffffc8b5ce2);
SELECT ALL COUNT(*) FROM t1, t0, vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((vt0.c1 IN ())) AND ('-1906470089')));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((vt0.c1 IN ())) AND ('-1906470089'))) IS TRUE)  as count FROM t1, t0, vt0);
SELECT ALL COUNT(*) FROM t1, t0, vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((vt0.c1 IN ())) AND ('-1906470089')));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((vt0.c1 IN ())) AND ('-1906470089'))) IS TRUE)  as count FROM t1, t0, vt0);
SELECT ALL COUNT(*) FROM t1, t0, vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((vt0.c1 IN ())) AND ('-1906470089')));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (((((((rt1.c0)OR(rt1.c4)))OR(x'')))<(((rt1.c5) BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY t0.c0 ASC, CASE rt1.c0  WHEN t0.c0 THEN t0.c56 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c1 END COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt1.c4)))OR(x'')))<(((rt1.c5) BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY t0.c0 ASC, CASE rt1.c0  WHEN t0.c0 THEN t0.c56 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c1 END COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (((((((rt1.c0)OR(rt1.c4)))OR(x'')))<(((rt1.c5) BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY t0.c0 ASC, CASE rt1.c0  WHEN t0.c0 THEN t0.c56 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c1 END COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt1.c4)))OR(x'')))<(((rt1.c5) BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY t0.c0 ASC, CASE rt1.c0  WHEN t0.c0 THEN t0.c56 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c1 END COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (((((((rt1.c0)OR(rt1.c4)))OR(x'')))<(((rt1.c5) BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY t0.c0 ASC, CASE rt1.c0  WHEN t0.c0 THEN t0.c56 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c3 THEN t0.c0 ELSE rt1.c1 END COLLATE NOCASE COLLATE NOCASE;
SELECT * FROM vt0, t0, rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN t0.c56 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE BINARY THEN t0.c56 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN t0.c56 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE BINARY THEN t0.c56 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN t0.c56 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END);
SELECT * FROM t1, vt0 WHERE ((((NOT (t1.c0)))-(((vt0.c1) ISNULL)))) ORDER BY ((((((((CAST(t1.c0 AS BLOB))OR(((vt0.c0) BETWEEN (t1.c0) AND (NULL)))))AND(CAST(vt0.c1 AS BLOB))))AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c0)))-(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((CAST(t1.c0 AS BLOB))OR(((vt0.c0) BETWEEN (t1.c0) AND (NULL)))))AND(CAST(vt0.c1 AS BLOB))))AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM t1, vt0 WHERE ((((NOT (t1.c0)))-(((vt0.c1) ISNULL)))) ORDER BY ((((((((CAST(t1.c0 AS BLOB))OR(((vt0.c0) BETWEEN (t1.c0) AND (NULL)))))AND(CAST(vt0.c1 AS BLOB))))AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c0)))-(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((CAST(t1.c0 AS BLOB))OR(((vt0.c0) BETWEEN (t1.c0) AND (NULL)))))AND(CAST(vt0.c1 AS BLOB))))AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM t1, vt0 WHERE ((((NOT (t1.c0)))-(((vt0.c1) ISNULL)))) ORDER BY ((((((((CAST(t1.c0 AS BLOB))OR(((vt0.c0) BETWEEN (t1.c0) AND (NULL)))))AND(CAST(vt0.c1 AS BLOB))))AND(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM t0, rt1 WHERE (CAST(((0.17889639310711392)==(rt1.c0)) AS INTEGER)) ORDER BY ((((rt1.c0)<>(rt1.c1))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.17889639310711392)==(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c0)<>(rt1.c1))) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE (CAST(((0.17889639310711392)==(rt1.c0)) AS INTEGER)) ORDER BY ((((rt1.c0)<>(rt1.c1))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.17889639310711392)==(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c0)<>(rt1.c1))) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE (CAST(((0.17889639310711392)==(rt1.c0)) AS INTEGER)) ORDER BY ((((rt1.c0)<>(rt1.c1))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1, rt1, rt0 WHERE (((COALESCE(DISTINCT vt0.c0, rt1.c1, t1.c0, vt0.c2)) BETWEEN ((0.5754234363452223 IN ())) AND (CASE rt1.c4  WHEN rt0.c3 THEN t1.c0 ELSE vt0.c2 END))) ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c1)))OR(vt0.c2)))&(rt0.c3)) DESC  NULLS LAST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c0, rt1.c1, t1.c0, vt0.c2)) BETWEEN ((0.5754234363452223 IN ())) AND (CASE rt1.c4  WHEN rt0.c3 THEN t1.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0, t1, rt1, rt0 ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c1)))OR(vt0.c2)))&(rt0.c3)) DESC  NULLS LAST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, rt1, rt0 WHERE (((COALESCE(DISTINCT vt0.c0, rt1.c1, t1.c0, vt0.c2)) BETWEEN ((0.5754234363452223 IN ())) AND (CASE rt1.c4  WHEN rt0.c3 THEN t1.c0 ELSE vt0.c2 END))) ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c1)))OR(vt0.c2)))&(rt0.c3)) DESC  NULLS LAST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c0, rt1.c1, t1.c0, vt0.c2)) BETWEEN ((0.5754234363452223 IN ())) AND (CASE rt1.c4  WHEN rt0.c3 THEN t1.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0, t1, rt1, rt0 ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c1)))OR(vt0.c2)))&(rt0.c3)) DESC  NULLS LAST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, rt1, rt0 WHERE (((COALESCE(DISTINCT vt0.c0, rt1.c1, t1.c0, vt0.c2)) BETWEEN ((0.5754234363452223 IN ())) AND (CASE rt1.c4  WHEN rt0.c3 THEN t1.c0 ELSE vt0.c2 END))) ORDER BY ((((((((((vt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt1.c1)))OR(vt0.c2)))&(rt0.c3)) DESC  NULLS LAST, vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, rt0 FULL OUTER JOIN rt1 ON NULL WHERE (((CAST(rt1.c5 AS TEXT))<=(((rt1.c2) BETWEEN (vt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c5 AS TEXT))<=(((rt1.c2) BETWEEN (vt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0 FULL OUTER JOIN rt1 ON NULL);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 FULL OUTER JOIN rt1 ON NULL WHERE (((CAST(rt1.c5 AS TEXT))<=(((rt1.c2) BETWEEN (vt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c5 AS TEXT))<=(((rt1.c2) BETWEEN (vt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0 FULL OUTER JOIN rt1 ON NULL);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 FULL OUTER JOIN rt1 ON NULL WHERE (((CAST(rt1.c5 AS TEXT))<=(((rt1.c2) BETWEEN (vt0.c2) AND (rt0.c0)))));
SELECT * FROM rt1, t1 WHERE (CASE x''  WHEN (((t1.c0)) BETWEEN ((rt1.c4)) AND ((0Xffffffffd9bad148))) THEN rt1.c3 WHEN CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c4 END THEN CASE 0.7456401963417953  WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END WHEN ((rt1.c0) NOTNULL) THEN rt1.c4 END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (((t1.c0)) BETWEEN ((rt1.c4)) AND ((0Xffffffffd9bad148))) THEN rt1.c3 WHEN CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c4 END THEN CASE 0.7456401963417953  WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END WHEN ((rt1.c0) NOTNULL) THEN rt1.c4 END) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (CASE x''  WHEN (((t1.c0)) BETWEEN ((rt1.c4)) AND ((0Xffffffffd9bad148))) THEN rt1.c3 WHEN CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c4 END THEN CASE 0.7456401963417953  WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END WHEN ((rt1.c0) NOTNULL) THEN rt1.c4 END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (((t1.c0)) BETWEEN ((rt1.c4)) AND ((0Xffffffffd9bad148))) THEN rt1.c3 WHEN CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c4 END THEN CASE 0.7456401963417953  WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END WHEN ((rt1.c0) NOTNULL) THEN rt1.c4 END) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (CASE x''  WHEN (((t1.c0)) BETWEEN ((rt1.c4)) AND ((0Xffffffffd9bad148))) THEN rt1.c3 WHEN CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c4 END THEN CASE 0.7456401963417953  WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END WHEN ((rt1.c0) NOTNULL) THEN rt1.c4 END);
SELECT * FROM t1, rt0, vt0 CROSS JOIN rt1 ON ((RTRIM(t1.c0)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c1) NOTNULL))) RIGHT OUTER JOIN t0 ON CAST((~ (rt1.c1)) AS BLOB) WHERE (CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN rt1 ON ((RTRIM(t1.c0)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c1) NOTNULL))) RIGHT OUTER JOIN t0 ON CAST((~ (rt1.c1)) AS BLOB));
SELECT * FROM t1, rt0, vt0 CROSS JOIN rt1 ON ((RTRIM(t1.c0)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c1) NOTNULL))) RIGHT OUTER JOIN t0 ON CAST((~ (rt1.c1)) AS BLOB) WHERE (CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN rt1 ON ((RTRIM(t1.c0)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c1) NOTNULL))) RIGHT OUTER JOIN t0 ON CAST((~ (rt1.c1)) AS BLOB));
SELECT * FROM t1, rt0, vt0 CROSS JOIN rt1 ON ((RTRIM(t1.c0)) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt1.c1) NOTNULL))) RIGHT OUTER JOIN t0 ON CAST((~ (rt1.c1)) AS BLOB) WHERE (CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM t0, t1, rt1, vt0, rt0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN (((rt0.c0))<((t1.c0))) WHEN ((rt0.c1) NOTNULL) THEN (~ (t0.c56)) WHEN rt0.c2 COLLATE BINARY THEN rt1.c0 ELSE rt1.c1 COLLATE RTRIM END) ORDER BY rt1.c5;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS INTEGER) THEN (((rt0.c0))<((t1.c0))) WHEN ((rt0.c1) NOTNULL) THEN (~ (t0.c56)) WHEN rt0.c2 COLLATE BINARY THEN rt1.c0 ELSE rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM t0, t1, rt1, vt0, rt0 ORDER BY rt1.c5);
SELECT ALL * FROM t0, t1, rt1, vt0, rt0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN (((rt0.c0))<((t1.c0))) WHEN ((rt0.c1) NOTNULL) THEN (~ (t0.c56)) WHEN rt0.c2 COLLATE BINARY THEN rt1.c0 ELSE rt1.c1 COLLATE RTRIM END) ORDER BY rt1.c5;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS INTEGER) THEN (((rt0.c0))<((t1.c0))) WHEN ((rt0.c1) NOTNULL) THEN (~ (t0.c56)) WHEN rt0.c2 COLLATE BINARY THEN rt1.c0 ELSE rt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM t0, t1, rt1, vt0, rt0 ORDER BY rt1.c5);
SELECT ALL * FROM t0, t1, rt1, vt0, rt0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN (((rt0.c0))<((t1.c0))) WHEN ((rt0.c1) NOTNULL) THEN (~ (t0.c56)) WHEN rt0.c2 COLLATE BINARY THEN rt1.c0 ELSE rt1.c1 COLLATE RTRIM END) ORDER BY rt1.c5;
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON 0.394273666699978 RIGHT OUTER JOIN t1 ON ((((rt1.c1) NOTNULL))>=((~ (t1.c0)))) INNER JOIN rt1 ON (((((((t0.c0))>=((t0.c56))))AND(((3.27996548E8)*(t1.c0)))))AND(((rt1.c3)>>(rt1.c1)))) WHERE (json_remove(rt1.c0, rt1.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((json_remove(rt1.c0, rt1.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON 0.394273666699978 RIGHT OUTER JOIN t1 ON ((((rt1.c1) NOTNULL))>=((~ (t1.c0)))) INNER JOIN rt1 ON (((((((t0.c0))>=((t0.c56))))AND(((3.27996548E8)*(t1.c0)))))AND(((rt1.c3)>>(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON 0.394273666699978 RIGHT OUTER JOIN t1 ON ((((rt1.c1) NOTNULL))>=((~ (t1.c0)))) INNER JOIN rt1 ON (((((((t0.c0))>=((t0.c56))))AND(((3.27996548E8)*(t1.c0)))))AND(((rt1.c3)>>(rt1.c1)))) WHERE (json_remove(rt1.c0, rt1.c3) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((json_remove(rt1.c0, rt1.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON 0.394273666699978 RIGHT OUTER JOIN t1 ON ((((rt1.c1) NOTNULL))>=((~ (t1.c0)))) INNER JOIN rt1 ON (((((((t0.c0))>=((t0.c56))))AND(((3.27996548E8)*(t1.c0)))))AND(((rt1.c3)>>(rt1.c1)))));
SELECT * FROM rt0, vt0, t0, rt1, t1 WHERE (((((rt0.c3)|(rt1.c5))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN -320844848 THEN -1691890569 WHEN t1.c0 THEN vt0.c1 WHEN rt0.c0 THEN t1.c0 END))) ORDER BY (((x'1afc'))<((((x'') NOT BETWEEN (vt0.c1) AND (-3.86923759E8))))) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)|(rt1.c5))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN -320844848 THEN -1691890569 WHEN t1.c0 THEN vt0.c1 WHEN rt0.c0 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0, rt1, t1 ORDER BY (((x'1afc'))<((((x'') NOT BETWEEN (vt0.c1) AND (-3.86923759E8))))) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, rt1, t1 WHERE (((((rt0.c3)|(rt1.c5))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN -320844848 THEN -1691890569 WHEN t1.c0 THEN vt0.c1 WHEN rt0.c0 THEN t1.c0 END))) ORDER BY (((x'1afc'))<((((x'') NOT BETWEEN (vt0.c1) AND (-3.86923759E8))))) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)|(rt1.c5))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN -320844848 THEN -1691890569 WHEN t1.c0 THEN vt0.c1 WHEN rt0.c0 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, vt0, t0, rt1, t1 ORDER BY (((x'1afc'))<((((x'') NOT BETWEEN (vt0.c1) AND (-3.86923759E8))))) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, rt1, t1 WHERE (((((rt0.c3)|(rt1.c5))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN -320844848 THEN -1691890569 WHEN t1.c0 THEN vt0.c1 WHEN rt0.c0 THEN t1.c0 END))) ORDER BY (((x'1afc'))<((((x'') NOT BETWEEN (vt0.c1) AND (-3.86923759E8))))) DESC  NULLS LAST, (vt0.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((((NULL)OR(t1.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((NULL)OR(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((((NULL)OR(t1.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((NULL)OR(t1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((((NULL)OR(t1.c0)))OR(t1.c0)))));
SELECT ALL * FROM rt0, t0, vt0, rt1 WHERE (((((((((DATE(t0.c0, rt1.c0, rt1.c2))AND(((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(NULL)))OR(((((rt0.c0)AND('')))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((DATE(t0.c0, rt1.c0, rt1.c2))AND(((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(NULL)))OR(((((rt0.c0)AND('')))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0, rt1);
SELECT ALL * FROM rt0, t0, vt0, rt1 WHERE (((((((((DATE(t0.c0, rt1.c0, rt1.c2))AND(((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(NULL)))OR(((((rt0.c0)AND('')))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((DATE(t0.c0, rt1.c0, rt1.c2))AND(((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(NULL)))OR(((((rt0.c0)AND('')))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0, rt1);
SELECT ALL * FROM rt0, t0, vt0, rt1 WHERE (((((((((DATE(t0.c0, rt1.c0, rt1.c2))AND(((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(NULL)))OR(((((rt0.c0)AND('')))AND(rt0.c1)))));
SELECT * FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END))==((CAST(NULL AS REAL), (((vt0.c2))<=((vt0.c0))), vt0.c2)))) ORDER BY ((vt0.c2)<>(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END))==((CAST(NULL AS REAL), (((vt0.c2))<=((vt0.c0))), vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)!=(vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END))==((CAST(NULL AS REAL), (((vt0.c2))<=((vt0.c0))), vt0.c2)))) ORDER BY ((vt0.c2)<>(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END))==((CAST(NULL AS REAL), (((vt0.c2))<=((vt0.c0))), vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)!=(vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END))==((CAST(NULL AS REAL), (((vt0.c2))<=((vt0.c0))), vt0.c2)))) ORDER BY ((vt0.c2)<>(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, t1, rt1, vt0 WHERE (((rt1.c3 COLLATE NOCASE) NOT NULL)) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0, rt0, t1, rt1, vt0 ORDER BY rt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, t1, rt1, vt0 WHERE (((rt1.c3 COLLATE NOCASE) NOT NULL)) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0, rt0, t1, rt1, vt0 ORDER BY rt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, t1, rt1, vt0 WHERE (((rt1.c3 COLLATE NOCASE) NOT NULL)) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((NOT ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((NOT ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((NOT ((rt1.c2 IN ()))));
SELECT * FROM t1, rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CASE (((rt0.c2, rt0.c0, t0.c0))<((t1.c0, t0.c0, t0.c56)))  WHEN '*eBǳ?ⷔE₇q' THEN ((vt0.c1) NOT NULL) WHEN CASE rt1.c3  WHEN vt0.c0 THEN vt0.c1 END THEN rt1.c2 WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.8051938062679813) THEN (rt1.c2 IN ()) ELSE 0.4024587423205783 END WHERE ((((rt0.c3)) BETWEEN (((((vt0.c0))>=((vt0.c1))))) AND ((LOWER(DISTINCT rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((((vt0.c0))>=((vt0.c1))))) AND ((LOWER(DISTINCT rt1.c2))))) IS TRUE)  as count FROM t1, rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CASE (((rt0.c2, rt0.c0, t0.c0))<((t1.c0, t0.c0, t0.c56)))  WHEN '*eBǳ?ⷔE₇q' THEN ((vt0.c1) NOT NULL) WHEN CASE rt1.c3  WHEN vt0.c0 THEN vt0.c1 END THEN rt1.c2 WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.8051938062679813) THEN (rt1.c2 IN ()) ELSE 0.4024587423205783 END);
SELECT * FROM t1, rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CASE (((rt0.c2, rt0.c0, t0.c0))<((t1.c0, t0.c0, t0.c56)))  WHEN '*eBǳ?ⷔE₇q' THEN ((vt0.c1) NOT NULL) WHEN CASE rt1.c3  WHEN vt0.c0 THEN vt0.c1 END THEN rt1.c2 WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.8051938062679813) THEN (rt1.c2 IN ()) ELSE 0.4024587423205783 END WHERE ((((rt0.c3)) BETWEEN (((((vt0.c0))>=((vt0.c1))))) AND ((LOWER(DISTINCT rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((((vt0.c0))>=((vt0.c1))))) AND ((LOWER(DISTINCT rt1.c2))))) IS TRUE)  as count FROM t1, rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CASE (((rt0.c2, rt0.c0, t0.c0))<((t1.c0, t0.c0, t0.c56)))  WHEN '*eBǳ?ⷔE₇q' THEN ((vt0.c1) NOT NULL) WHEN CASE rt1.c3  WHEN vt0.c0 THEN vt0.c1 END THEN rt1.c2 WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.8051938062679813) THEN (rt1.c2 IN ()) ELSE 0.4024587423205783 END);
SELECT * FROM t1, rt1, vt0, rt0 RIGHT OUTER JOIN t0 ON CASE (((rt0.c2, rt0.c0, t0.c0))<((t1.c0, t0.c0, t0.c56)))  WHEN '*eBǳ?ⷔE₇q' THEN ((vt0.c1) NOT NULL) WHEN CASE rt1.c3  WHEN vt0.c0 THEN vt0.c1 END THEN rt1.c2 WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.8051938062679813) THEN (rt1.c2 IN ()) ELSE 0.4024587423205783 END WHERE ((((rt0.c3)) BETWEEN (((((vt0.c0))>=((vt0.c1))))) AND ((LOWER(DISTINCT rt1.c2)))));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t1.c0 WHEN vt0.c2 THEN rt0.c1 WHEN rt1.c4 THEN vt0.c2 ELSE rt0.c0 END IN ()) INNER JOIN t1 ON ((((rt1.c3) ISNULL)) NOTNULL) LEFT OUTER JOIN vt0 ON '-949852503' WHERE ((- (vt0.c1))) ORDER BY CAST(LOWER(DISTINCT t0.c0) AS BLOB), CASE ((rt1.c4)IS(rt0.c1))  WHEN CAST(rt1.c4 AS REAL) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN t0.c56 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 END END ASC, ((CASE WHEN rt1.c3 THEN vt0.c1 ELSE rt0.c3 END)GLOB(((rt1.c4) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t1.c0 WHEN vt0.c2 THEN rt0.c1 WHEN rt1.c4 THEN vt0.c2 ELSE rt0.c0 END IN ()) INNER JOIN t1 ON ((((rt1.c3) ISNULL)) NOTNULL) LEFT OUTER JOIN vt0 ON '-949852503' ORDER BY CAST(LOWER(DISTINCT t0.c0) AS BLOB), CASE ((rt1.c4)IS(rt0.c1))  WHEN CAST(rt1.c4 AS REAL) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN t0.c56 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 END END ASC, ((CASE WHEN rt1.c3 THEN vt0.c1 ELSE rt0.c3 END)GLOB(((rt1.c4) NOTNULL))) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t1.c0 WHEN vt0.c2 THEN rt0.c1 WHEN rt1.c4 THEN vt0.c2 ELSE rt0.c0 END IN ()) INNER JOIN t1 ON ((((rt1.c3) ISNULL)) NOTNULL) LEFT OUTER JOIN vt0 ON '-949852503' WHERE ((- (vt0.c1))) ORDER BY CAST(LOWER(DISTINCT t0.c0) AS BLOB), CASE ((rt1.c4)IS(rt0.c1))  WHEN CAST(rt1.c4 AS REAL) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN t0.c56 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 END END ASC, ((CASE WHEN rt1.c3 THEN vt0.c1 ELSE rt0.c3 END)GLOB(((rt1.c4) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t1.c0 WHEN vt0.c2 THEN rt0.c1 WHEN rt1.c4 THEN vt0.c2 ELSE rt0.c0 END IN ()) INNER JOIN t1 ON ((((rt1.c3) ISNULL)) NOTNULL) LEFT OUTER JOIN vt0 ON '-949852503' ORDER BY CAST(LOWER(DISTINCT t0.c0) AS BLOB), CASE ((rt1.c4)IS(rt0.c1))  WHEN CAST(rt1.c4 AS REAL) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN t0.c56 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 END END ASC, ((CASE WHEN rt1.c3 THEN vt0.c1 ELSE rt0.c3 END)GLOB(((rt1.c4) NOTNULL))) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t1.c0 WHEN vt0.c2 THEN rt0.c1 WHEN rt1.c4 THEN vt0.c2 ELSE rt0.c0 END IN ()) INNER JOIN t1 ON ((((rt1.c3) ISNULL)) NOTNULL) LEFT OUTER JOIN vt0 ON '-949852503' WHERE ((- (vt0.c1))) ORDER BY CAST(LOWER(DISTINCT t0.c0) AS BLOB), CASE ((rt1.c4)IS(rt0.c1))  WHEN CAST(rt1.c4 AS REAL) THEN CASE WHEN rt1.c0 THEN rt1.c2 WHEN t0.c56 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 END END ASC, ((CASE WHEN rt1.c3 THEN vt0.c1 ELSE rt0.c3 END)GLOB(((rt1.c4) NOTNULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((((((0.7914814854573473)AND(rt1.c3)))OR(rt0.c3))) BETWEEN (INSTR(rt0.c1, rt1.c3)) AND (((x'') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7914814854573473)AND(rt1.c3)))OR(rt0.c3))) BETWEEN (INSTR(rt0.c1, rt1.c3)) AND (((x'') IS TRUE)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((((((0.7914814854573473)AND(rt1.c3)))OR(rt0.c3))) BETWEEN (INSTR(rt0.c1, rt1.c3)) AND (((x'') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7914814854573473)AND(rt1.c3)))OR(rt0.c3))) BETWEEN (INSTR(rt0.c1, rt1.c3)) AND (((x'') IS TRUE)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((((((0.7914814854573473)AND(rt1.c3)))OR(rt0.c3))) BETWEEN (INSTR(rt0.c1, rt1.c3)) AND (((x'') IS TRUE))));
SELECT COUNT(*) FROM t1, rt1, t0, rt0 NOT INDEXED WHERE (NULL) ORDER BY ((((((((CAST(rt0.c0 AS BLOB))AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))OR(((rt0.c0) IS FALSE))))OR(NULL));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt1, t0, rt0 ORDER BY ((((((((CAST(rt0.c0 AS BLOB))AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))OR(((rt0.c0) IS FALSE))))OR(NULL)));
SELECT COUNT(*) FROM t1, rt1, t0, rt0 NOT INDEXED WHERE (NULL) ORDER BY ((((((((CAST(rt0.c0 AS BLOB))AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))OR(((rt0.c0) IS FALSE))))OR(NULL));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt1, t0, rt0 ORDER BY ((((((((CAST(rt0.c0 AS BLOB))AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))OR(((rt0.c0) IS FALSE))))OR(NULL)));
SELECT COUNT(*) FROM t1, rt1, t0, rt0 NOT INDEXED WHERE (NULL) ORDER BY ((((((((CAST(rt0.c0 AS BLOB))AND(((rt0.c1) NOTNULL))))OR((rt0.c0 IN ()))))OR(((rt0.c0) IS FALSE))))OR(NULL));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((~ (vt0.c0)))>=(CAST(vt0.c1 AS TEXT))) INNER JOIN t0 ON (+ (((rt1.c3)||(t0.c56)))) LEFT OUTER JOIN vt0 ON -2.94848998E8 WHERE (((0xffffffffe8f40941 IN ()) IN ())) ORDER BY ((((((t0.c0)OR(vt0.c0)))OR(rt1.c5))) BETWEEN (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt1.c3)<>(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffe8f40941 IN ()) IN ())) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((~ (vt0.c0)))>=(CAST(vt0.c1 AS TEXT))) INNER JOIN t0 ON (+ (((rt1.c3)||(t0.c56)))) LEFT OUTER JOIN vt0 ON -2.94848998E8 ORDER BY ((((((t0.c0)OR(vt0.c0)))OR(rt1.c5))) BETWEEN (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt1.c3)!=(rt1.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((~ (vt0.c0)))>=(CAST(vt0.c1 AS TEXT))) INNER JOIN t0 ON (+ (((rt1.c3)||(t0.c56)))) LEFT OUTER JOIN vt0 ON -2.94848998E8 WHERE (((0xffffffffe8f40941 IN ()) IN ())) ORDER BY ((((((t0.c0)OR(vt0.c0)))OR(rt1.c5))) BETWEEN (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt1.c3)<>(rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffe8f40941 IN ()) IN ())) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((~ (vt0.c0)))>=(CAST(vt0.c1 AS TEXT))) INNER JOIN t0 ON (+ (((rt1.c3)||(t0.c56)))) LEFT OUTER JOIN vt0 ON -2.94848998E8 ORDER BY ((((((t0.c0)OR(vt0.c0)))OR(rt1.c5))) BETWEEN (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt1.c3)!=(rt1.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((~ (vt0.c0)))>=(CAST(vt0.c1 AS TEXT))) INNER JOIN t0 ON (+ (((rt1.c3)||(t0.c56)))) LEFT OUTER JOIN vt0 ON -2.94848998E8 WHERE (((0xffffffffe8f40941 IN ()) IN ())) ORDER BY ((((((t0.c0)OR(vt0.c0)))OR(rt1.c5))) BETWEEN (((vt0.c2) BETWEEN (t0.c0) AND (t0.c0))) AND (((rt1.c3)<>(rt1.c1)))) ASC  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c2)OR(rt1.c2)))OR(rt0.c3)))LIKE(((rt0.c0)LIKE(vt0.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN rt1.c3 THEN CAST(rt0.c2 AS BLOB) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((((rt1.c2)OR(rt1.c3)))AND(rt0.c0)) WHEN vt0.c1 THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END WHERE (CASE (- (rt1.c2))  WHEN ((rt1.c4)*(NULL)) THEN 0.6099511355592591 ELSE (rt1.c2 IN ()) END) ORDER BY (NOT (x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c2))  WHEN ((rt1.c4)*(NULL)) THEN 0.6099511355592591 ELSE (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c2)OR(rt1.c2)))OR(rt0.c3)))LIKE(((rt0.c0)LIKE(vt0.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN rt1.c3 THEN CAST(rt0.c2 AS BLOB) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((((rt1.c2)OR(rt1.c3)))AND(rt0.c0)) WHEN vt0.c1 THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END ORDER BY (NOT (x'')) DESC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c2)OR(rt1.c2)))OR(rt0.c3)))LIKE(((rt0.c0)LIKE(vt0.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN rt1.c3 THEN CAST(rt0.c2 AS BLOB) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((((rt1.c2)OR(rt1.c3)))AND(rt0.c0)) WHEN vt0.c1 THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END WHERE (CASE (- (rt1.c2))  WHEN ((rt1.c4)*(NULL)) THEN 0.6099511355592591 ELSE (rt1.c2 IN ()) END) ORDER BY (NOT (x'')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c2))  WHEN ((rt1.c4)*(NULL)) THEN 0.6099511355592591 ELSE (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c2)OR(rt1.c2)))OR(rt0.c3)))LIKE(((rt0.c0)LIKE(vt0.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN rt1.c3 THEN CAST(rt0.c2 AS BLOB) WHEN CAST(vt0.c1 AS NUMERIC) THEN ((((rt1.c2)OR(rt1.c3)))AND(rt0.c0)) WHEN vt0.c1 THEN (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) END ORDER BY (NOT (x'')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c56) BETWEEN (t0.c56) AND (t0.c56)))OR(CAST(t0.c0 AS NUMERIC))))AND('-1096532155')))AND((- (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c56))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c56) BETWEEN (t0.c56) AND (t0.c56)))OR(CAST(t0.c0 AS NUMERIC))))AND('-1096532155')))AND((- (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c56))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c56) BETWEEN (t0.c56) AND (t0.c56)))OR(CAST(t0.c0 AS NUMERIC))))AND('-1096532155')))AND((- (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c56))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c56) BETWEEN (t0.c56) AND (t0.c56)))OR(CAST(t0.c0 AS NUMERIC))))AND('-1096532155')))AND((- (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c56))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c56) BETWEEN (t0.c56) AND (t0.c56)))OR(CAST(t0.c0 AS NUMERIC))))AND('-1096532155')))AND((- (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c56))))) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((vt0.c0 IN (rt0.c0, rt0.c2)) IN ()), (((t1.c0 IN ()))AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt0 ORDER BY ((vt0.c0 IN (rt0.c0, rt0.c2)) IN ()), (((t1.c0 IN ()))AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 NATURAL JOIN vt0 WHERE (NULL) ORDER BY ((vt0.c0 IN (rt0.c0, rt0.c2)) IN ()), (((t1.c0 IN ()))AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt0 ORDER BY ((vt0.c0 IN (rt0.c0, rt0.c2)) IN ()), (((t1.c0 IN ()))AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1, vt0 WHERE ((((t1.c0)||(t1.c0)) IN (CAST(rt1.c0 AS BLOB)))) ORDER BY LIKELY((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)||(t1.c0)) IN (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM t1, rt1, vt0 ORDER BY LIKELY((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1, vt0 WHERE ((((t1.c0)||(t1.c0)) IN (CAST(rt1.c0 AS BLOB)))) ORDER BY LIKELY((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)||(t1.c0)) IN (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM t1, rt1, vt0 ORDER BY LIKELY((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1, vt0 WHERE ((((t1.c0)||(t1.c0)) IN (CAST(rt1.c0 AS BLOB)))) ORDER BY LIKELY((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c5))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CAST(-28408371 AS TEXT)) ORDER BY (('454926497' COLLATE RTRIM)LIKE(((rt1.c1)&(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-28408371 AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY (('454926497' COLLATE RTRIM)LIKE(((rt1.c1)&(rt1.c4)))));
SELECT ALL * FROM rt1 WHERE (CAST(-28408371 AS TEXT)) ORDER BY (('454926497' COLLATE RTRIM)LIKE(((rt1.c1)&(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(-28408371 AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY (('454926497' COLLATE RTRIM)LIKE(((rt1.c1)&(rt1.c4)))));
SELECT ALL * FROM rt1 WHERE (CAST(-28408371 AS TEXT)) ORDER BY (('454926497' COLLATE RTRIM)LIKE(((rt1.c1)&(rt1.c4))));
SELECT COUNT(*) FROM rt0, t0, vt0 CROSS JOIN t1 ON TRIM(DISTINCT vt0.c1, rt0.c2) COLLATE BINARY WHERE (CAST(t0.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt0 CROSS JOIN t1 ON TRIM(DISTINCT vt0.c1, rt0.c2) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0, vt0 CROSS JOIN t1 ON TRIM(DISTINCT vt0.c1, rt0.c2) COLLATE BINARY WHERE (CAST(t0.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0, t0, vt0 CROSS JOIN t1 ON TRIM(DISTINCT vt0.c1, rt0.c2) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0, vt0 CROSS JOIN t1 ON TRIM(DISTINCT vt0.c1, rt0.c2) COLLATE BINARY WHERE (CAST(t0.c0 COLLATE BINARY AS NUMERIC));
SELECT * FROM vt0, t0 NATURAL JOIN t1 WHERE (DATETIME(vt0.c2 COLLATE BINARY, (t0.c0 IN (0.21626043422756946, vt0.c0)), ((vt0.c2) ISNULL))) ORDER BY ((((vt0.c0)GLOB(t1.c0)))IS(((t1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((DATETIME(vt0.c2 COLLATE BINARY, (t0.c0 IN (0.21626043422756946, vt0.c0)), ((vt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN t1 ORDER BY ((((vt0.c0)GLOB(t1.c0)))IS(((t1.c0) IS FALSE))) DESC);
SELECT * FROM vt0, t0 NATURAL JOIN t1 WHERE (DATETIME(vt0.c2 COLLATE BINARY, (t0.c0 IN (0.21626043422756946, vt0.c0)), ((vt0.c2) ISNULL))) ORDER BY ((((vt0.c0)GLOB(t1.c0)))IS(((t1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((DATETIME(vt0.c2 COLLATE BINARY, (t0.c0 IN (0.21626043422756946, vt0.c0)), ((vt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN t1 ORDER BY ((((vt0.c0)GLOB(t1.c0)))IS(((t1.c0) IS FALSE))) DESC);
SELECT * FROM vt0, t0 NATURAL JOIN t1 WHERE (DATETIME(vt0.c2 COLLATE BINARY, (t0.c0 IN (0.21626043422756946, vt0.c0)), ((vt0.c2) ISNULL))) ORDER BY ((((vt0.c0)GLOB(t1.c0)))IS(((t1.c0) IS FALSE))) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN t1 ON ((NULL)&(x'')) LEFT OUTER JOIN rt1 ON ((((((t1.c0)<<(rt0.c2)))AND(((rt0.c1)<=(0.48006168820689354)))))AND(t0.c56)) INNER JOIN vt0 ON ((((x'')<(vt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt0.c0)))) WHERE ((((NOT (rt1.c2))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (-1285846091)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (-1285846091))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN t1 ON ((NULL)&(x'')) LEFT OUTER JOIN rt1 ON ((((((t1.c0)<<(rt0.c2)))AND(((rt0.c1)<=(0.48006168820689354)))))AND(t0.c56)) INNER JOIN vt0 ON ((((x'')<(vt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN t1 ON ((NULL)&(x'')) LEFT OUTER JOIN rt1 ON ((((((t1.c0)<<(rt0.c2)))AND(((rt0.c1)<=(0.48006168820689354)))))AND(t0.c56)) INNER JOIN vt0 ON ((((x'')<(vt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt0.c0)))) WHERE ((((NOT (rt1.c2))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (-1285846091)));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (-1285846091))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN t1 ON ((NULL)&(x'')) LEFT OUTER JOIN rt1 ON ((((((t1.c0)<<(rt0.c2)))AND(((rt0.c1)<=(0.48006168820689354)))))AND(t0.c56)) INNER JOIN vt0 ON ((((x'')<(vt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN t1 ON ((NULL)&(x'')) LEFT OUTER JOIN rt1 ON ((((((t1.c0)<<(rt0.c2)))AND(((rt0.c1)<=(0.48006168820689354)))))AND(t0.c56)) INNER JOIN vt0 ON ((((x'')<(vt0.c2))) NOT BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) NOT BETWEEN (rt1.c5) AND (rt0.c0)))) WHERE ((((NOT (rt1.c2))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (-1285846091)));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c3))))<>((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c3))))<>((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c3))))<>((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c3))))<>((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c3))))<>((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))))));
SELECT ALL * FROM vt0, t0, t1, rt0, rt1 WHERE (((vt0.c0 IN (rt1.c5)) IN ())) ORDER BY (((((NOT (rt1.c1)))OR(t0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (rt1.c5)) IN ())) IS TRUE)  as count FROM vt0, t0, t1, rt0, rt1 ORDER BY (((((NOT (rt1.c1)))OR(t0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, t1, rt0, rt1 WHERE (((vt0.c0 IN (rt1.c5)) IN ())) ORDER BY (((((NOT (rt1.c1)))OR(t0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (rt1.c5)) IN ())) IS TRUE)  as count FROM vt0, t0, t1, rt0, rt1 ORDER BY (((((NOT (rt1.c1)))OR(t0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (ABS(ABS(DISTINCT rt1.c3)));
SELECT SUM(count) FROM (SELECT ((ABS(ABS(DISTINCT rt1.c3))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (ABS(ABS(DISTINCT rt1.c3)));
SELECT SUM(count) FROM (SELECT ((ABS(ABS(DISTINCT rt1.c3))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (ABS(ABS(DISTINCT rt1.c3)));
SELECT ALL * FROM rt1, t1 NOT INDEXED, rt0, t0, vt0 WHERE (MAX((rt0.c3 IN ()), (rt1.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((MAX((rt0.c3 IN ()), (rt1.c3 IN ()))) IS TRUE)  as count FROM rt1, t1, rt0, t0, vt0);
SELECT ALL * FROM rt1, t1 NOT INDEXED, rt0, t0, vt0 WHERE (MAX((rt0.c3 IN ()), (rt1.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((MAX((rt0.c3 IN ()), (rt1.c3 IN ()))) IS TRUE)  as count FROM rt1, t1, rt0, t0, vt0);
SELECT ALL * FROM rt1, t1 NOT INDEXED, rt0, t0, vt0 WHERE (MAX((rt0.c3 IN ()), (rt1.c3 IN ())));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON vt0.c2 RIGHT OUTER JOIN rt0 ON ((rt1.c3 COLLATE BINARY) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c56))) AND ((- (rt1.c3)))) LEFT OUTER JOIN t0 ON CAST((rt0.c3 IN (0xffffffffd473044d, rt1.c5)) AS REAL) RIGHT OUTER JOIN t1 ON ((((rt1.c0, rt0.c0, rt0.c0))>=((vt0.c1, rt1.c0, t0.c0))) IN ()) WHERE ((NULLIF(DISTINCT rt1.c3, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT rt1.c3, rt0.c2) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON vt0.c2 RIGHT OUTER JOIN rt0 ON ((rt1.c3 COLLATE BINARY) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c56))) AND ((- (rt1.c3)))) LEFT OUTER JOIN t0 ON CAST((rt0.c3 IN (0xffffffffd473044d, rt1.c5)) AS REAL) RIGHT OUTER JOIN t1 ON ((((rt1.c0, rt0.c0, rt0.c0))>=((vt0.c1, rt1.c0, t0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON vt0.c2 RIGHT OUTER JOIN rt0 ON ((rt1.c3 COLLATE BINARY) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c56))) AND ((- (rt1.c3)))) LEFT OUTER JOIN t0 ON CAST((rt0.c3 IN (0xffffffffd473044d, rt1.c5)) AS REAL) RIGHT OUTER JOIN t1 ON ((((rt1.c0, rt0.c0, rt0.c0))>=((vt0.c1, rt1.c0, t0.c0))) IN ()) WHERE ((NULLIF(DISTINCT rt1.c3, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((NULLIF(DISTINCT rt1.c3, rt0.c2) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON vt0.c2 RIGHT OUTER JOIN rt0 ON ((rt1.c3 COLLATE BINARY) BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c56))) AND ((- (rt1.c3)))) LEFT OUTER JOIN t0 ON CAST((rt0.c3 IN (0xffffffffd473044d, rt1.c5)) AS REAL) RIGHT OUTER JOIN t1 ON ((((rt1.c0, rt0.c0, rt0.c0))>=((vt0.c1, rt1.c0, t0.c0))) IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE BINARY THEN (NOT (rt1.c0)) END INNER JOIN t0 ON 0.7151666179502066 WHERE (JULIANDAY(rt1.c0 COLLATE NOCASE, CASE WHEN rt1.c1 THEN vt0.c2 END, CASE rt1.c3  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, x'ba5178fb', LIKELIHOOD(DISTINCT vt0.c0, 0.03995347229943402))) ORDER BY (((~ (-1628329983)))<>(((rt1.c5) BETWEEN (rt1.c1) AND (t0.c56)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(rt1.c0 COLLATE NOCASE, CASE WHEN rt1.c1 THEN vt0.c2 END, CASE rt1.c3  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, x'ba5178fb', LIKELIHOOD(DISTINCT vt0.c0, 0.03995347229943402))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE BINARY THEN (NOT (rt1.c0)) END INNER JOIN t0 ON 0.7151666179502066 ORDER BY (((~ (-1628329983)))!=(((rt1.c5) BETWEEN (rt1.c1) AND (t0.c56)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE BINARY THEN (NOT (rt1.c0)) END INNER JOIN t0 ON 0.7151666179502066 WHERE (JULIANDAY(rt1.c0 COLLATE NOCASE, CASE WHEN rt1.c1 THEN vt0.c2 END, CASE rt1.c3  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, x'ba5178fb', LIKELIHOOD(DISTINCT vt0.c0, 0.03995347229943402))) ORDER BY (((~ (-1628329983)))<>(((rt1.c5) BETWEEN (rt1.c1) AND (t0.c56)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(rt1.c0 COLLATE NOCASE, CASE WHEN rt1.c1 THEN vt0.c2 END, CASE rt1.c3  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, x'ba5178fb', LIKELIHOOD(DISTINCT vt0.c0, 0.03995347229943402))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE BINARY THEN (NOT (rt1.c0)) END INNER JOIN t0 ON 0.7151666179502066 ORDER BY (((~ (-1628329983)))!=(((rt1.c5) BETWEEN (rt1.c1) AND (t0.c56)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN rt1.c1 COLLATE BINARY THEN (NOT (rt1.c0)) END INNER JOIN t0 ON 0.7151666179502066 WHERE (JULIANDAY(rt1.c0 COLLATE NOCASE, CASE WHEN rt1.c1 THEN vt0.c2 END, CASE rt1.c3  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, x'ba5178fb', LIKELIHOOD(DISTINCT vt0.c0, 0.03995347229943402))) ORDER BY (((~ (-1628329983)))<>(((rt1.c5) BETWEEN (rt1.c1) AND (t0.c56)))) ASC  NULLS FIRST;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 CROSS JOIN t1 ON TRIM(((t1.c0) NOT BETWEEN (rt1.c5) AND (rt0.c3))) CROSS JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((t1.c0) NOT NULL) THEN NULL ELSE ((t0.c56) NOT BETWEEN (rt0.c0) AND (rt1.c1)) END WHERE (((rt1.c4) NOT BETWEEN (rt0.c2) AND (2126791092)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((+ (rt0.c0)))LIKE(CASE rt1.c4  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c1 END)) DESC  NULLS LAST, (((+ (rt0.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOT BETWEEN (rt0.c2) AND (2126791092)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 CROSS JOIN t1 ON TRIM(((t1.c0) NOT BETWEEN (rt1.c5) AND (rt0.c3))) CROSS JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((t1.c0) NOT NULL) THEN NULL ELSE ((t0.c56) NOT BETWEEN (rt0.c0) AND (rt1.c1)) END ORDER BY (((+ (rt0.c0)))LIKE(CASE rt1.c4  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c1 END)) DESC  NULLS LAST, (((+ (rt0.c2))) IS TRUE) ASC);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 CROSS JOIN t1 ON TRIM(((t1.c0) NOT BETWEEN (rt1.c5) AND (rt0.c3))) CROSS JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((t1.c0) NOT NULL) THEN NULL ELSE ((t0.c56) NOT BETWEEN (rt0.c0) AND (rt1.c1)) END WHERE (((rt1.c4) NOT BETWEEN (rt0.c2) AND (2126791092)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((+ (rt0.c0)))LIKE(CASE rt1.c4  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c1 END)) DESC  NULLS LAST, (((+ (rt0.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOT BETWEEN (rt0.c2) AND (2126791092)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 CROSS JOIN t1 ON TRIM(((t1.c0) NOT BETWEEN (rt1.c5) AND (rt0.c3))) CROSS JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((t1.c0) NOT NULL) THEN NULL ELSE ((t0.c56) NOT BETWEEN (rt0.c0) AND (rt1.c1)) END ORDER BY (((+ (rt0.c0)))LIKE(CASE rt1.c4  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c1 END)) DESC  NULLS LAST, (((+ (rt0.c2))) IS TRUE) ASC);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 CROSS JOIN t1 ON TRIM(((t1.c0) NOT BETWEEN (rt1.c5) AND (rt0.c3))) CROSS JOIN t0 ON CASE ((t0.c0) IS TRUE)  WHEN ((t1.c0) NOT NULL) THEN NULL ELSE ((t0.c56) NOT BETWEEN (rt0.c0) AND (rt1.c1)) END WHERE (((rt1.c4) NOT BETWEEN (rt0.c2) AND (2126791092)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (((+ (rt0.c0)))LIKE(CASE rt1.c4  WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c1 END)) DESC  NULLS LAST, (((+ (rt0.c2))) IS TRUE) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c0)OR(vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c5));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c5)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c0)OR(vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c5));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c5)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(((rt1.c0)OR(vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3)))) BETWEEN (rt1.c2 COLLATE BINARY) AND (rt1.c5));
SELECT * FROM t1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1, t0);
SELECT * FROM t1, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt1 WHERE ((TRIM(rt1.c1) IN (rt1.c3))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((TRIM(rt1.c1) IN (rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((TRIM(rt1.c1) IN (rt1.c3))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((TRIM(rt1.c1) IN (rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((TRIM(rt1.c1) IN (rt1.c3))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(vt0.c1)))AND(((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS BLOB))AND(vt0.c1)))AND(((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(vt0.c1)))AND(((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS BLOB))AND(vt0.c1)))AND(((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(vt0.c1)))AND(((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))));
SELECT COUNT(*) FROM t0, vt0, t1 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c2 END THEN ((t0.c56)<<('wꚨДuf%rpd')) ELSE (NOT (t0.c0)) END) ORDER BY ((((vt0.c1)IS NOT(vt0.c1)))AND(NULL));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c2 END THEN ((t0.c56)<<('wꚨДuf%rpd')) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM t0, vt0, t1 ORDER BY ((((vt0.c1)IS NOT(vt0.c1)))AND(NULL)));
SELECT COUNT(*) FROM t0, vt0, t1 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c2 END THEN ((t0.c56)<<('wꚨДuf%rpd')) ELSE (NOT (t0.c0)) END) ORDER BY ((((vt0.c1)IS NOT(vt0.c1)))AND(NULL));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c2 END THEN ((t0.c56)<<('wꚨДuf%rpd')) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM t0, vt0, t1 ORDER BY ((((vt0.c1)IS NOT(vt0.c1)))AND(NULL)));
SELECT COUNT(*) FROM t0, vt0, t1 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c2 END THEN ((t0.c56)<<('wꚨДuf%rpd')) ELSE (NOT (t0.c0)) END) ORDER BY ((((vt0.c1)IS NOT(vt0.c1)))AND(NULL));
SELECT * FROM t0 WHERE (((x'010ee80a') BETWEEN (CASE t0.c56  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c56) ISNULL)))) ORDER BY COALESCE(((t0.c0) BETWEEN (t0.c0) AND (t0.c56)), ((t0.c56)<=(t0.c56)), COALESCE(t0.c0, t0.c0), ((((t0.c0)AND(t0.c56)))AND(t0.c56))) DESC, (((((t0.c0)AND(x'')))OR(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((x'010ee80a') BETWEEN (CASE t0.c56  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c56) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(((t0.c0) BETWEEN (t0.c0) AND (t0.c56)), ((t0.c56)<=(t0.c56)), COALESCE(t0.c0, t0.c0), ((((t0.c0)AND(t0.c56)))AND(t0.c56))) DESC, (((((t0.c0)AND(x'')))OR(t0.c0)) IN ()));
SELECT * FROM t0 WHERE (((x'010ee80a') BETWEEN (CASE t0.c56  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c56) ISNULL)))) ORDER BY COALESCE(((t0.c0) BETWEEN (t0.c0) AND (t0.c56)), ((t0.c56)<=(t0.c56)), COALESCE(t0.c0, t0.c0), ((((t0.c0)AND(t0.c56)))AND(t0.c56))) DESC, (((((t0.c0)AND(x'')))OR(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((x'010ee80a') BETWEEN (CASE t0.c56  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c56) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY COALESCE(((t0.c0) BETWEEN (t0.c0) AND (t0.c56)), ((t0.c56)<=(t0.c56)), COALESCE(t0.c0, t0.c0), ((((t0.c0)AND(t0.c56)))AND(t0.c56))) DESC, (((((t0.c0)AND(x'')))OR(t0.c0)) IN ()));
SELECT * FROM t0 WHERE (((x'010ee80a') BETWEEN (CASE t0.c56  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c56) ISNULL)))) ORDER BY COALESCE(((t0.c0) BETWEEN (t0.c0) AND (t0.c56)), ((t0.c56)<=(t0.c56)), COALESCE(t0.c0, t0.c0), ((((t0.c0)AND(t0.c56)))AND(t0.c56))) DESC, (((((t0.c0)AND(x'')))OR(t0.c0)) IN ());
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, t1 NATURAL JOIN t0 WHERE (INSTR(((vt0.c0)||(rt0.c0)), x'db99')) ORDER BY ((rt0.c3 COLLATE BINARY) IS FALSE) DESC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN t0.c0 THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt0.c0)||(rt0.c0)), x'db99')) IS TRUE)  as count FROM rt0, vt0, rt1, t1 NATURAL JOIN t0 ORDER BY ((rt0.c3 COLLATE BINARY) IS FALSE) DESC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN t0.c0 THEN NULL END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, t1 NATURAL JOIN t0 WHERE (INSTR(((vt0.c0)||(rt0.c0)), x'db99')) ORDER BY ((rt0.c3 COLLATE BINARY) IS FALSE) DESC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN t0.c0 THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt0.c0)||(rt0.c0)), x'db99')) IS TRUE)  as count FROM rt0, vt0, rt1, t1 NATURAL JOIN t0 ORDER BY ((rt0.c3 COLLATE BINARY) IS FALSE) DESC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN t0.c0 THEN NULL END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1, t1 NATURAL JOIN t0 WHERE (INSTR(((vt0.c0)||(rt0.c0)), x'db99')) ORDER BY ((rt0.c3 COLLATE BINARY) IS FALSE) DESC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN t0.c0 THEN NULL END  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c0)>=(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c0)>=(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c0)>=(vt0.c1)) COLLATE BINARY);
SELECT * FROM rt0, t0, vt0 WHERE (((((LIKELY(vt0.c0))OR(x'')))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(vt0.c0))OR(x'')))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((LIKELY(vt0.c0))OR(x'')))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(vt0.c0))OR(x'')))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (((((LIKELY(vt0.c0))OR(x'')))OR(CASE vt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)));
SELECT ALL * FROM vt0, t0 WHERE ((0.8528439804901417 IN ())) ORDER BY TYPEOF('17D3^Z') COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.8528439804901417 IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF('17D3^Z') COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((0.8528439804901417 IN ())) ORDER BY TYPEOF('17D3^Z') COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.8528439804901417 IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY TYPEOF('17D3^Z') COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((0.8528439804901417 IN ())) ORDER BY TYPEOF('17D3^Z') COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, rt1 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c0))) BETWEEN ('2126791092' COLLATE BINARY) AND (x'e140' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c0))) BETWEEN ('2126791092' COLLATE BINARY) AND (x'e140' COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt0, rt1);
SELECT COUNT(*) FROM t1, vt0, rt1 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c0))) BETWEEN ('2126791092' COLLATE BINARY) AND (x'e140' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c0))) BETWEEN ('2126791092' COLLATE BINARY) AND (x'e140' COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt0, rt1);
SELECT COUNT(*) FROM t1, vt0, rt1 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c0))) BETWEEN ('2126791092' COLLATE BINARY) AND (x'e140' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0, rt0, rt1, vt0 WHERE (((((rt0.c0) NOTNULL))>((((rt1.c4, rt1.c3, rt0.c2))>=((rt1.c5, rt0.c3, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))>((((rt1.c4, rt1.c3, rt0.c2))>=((rt1.c5, rt0.c3, vt0.c2)))))) IS TRUE)  as count FROM t0, rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, rt1, vt0 WHERE (((((rt0.c0) NOTNULL))>((((rt1.c4, rt1.c3, rt0.c2))>=((rt1.c5, rt0.c3, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))>((((rt1.c4, rt1.c3, rt0.c2))>=((rt1.c5, rt0.c3, vt0.c2)))))) IS TRUE)  as count FROM t0, rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, rt1, vt0 WHERE (((((rt0.c0) NOTNULL))>((((rt1.c4, rt1.c3, rt0.c2))>=((rt1.c5, rt0.c3, vt0.c2))))));
SELECT COUNT(*) FROM rt1 WHERE ((+ ((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ ((~ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ ((~ (rt1.c3)))));
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt1 WHERE (((0.5476749167558546) BETWEEN ((((t0.c0))=((rt1.c0)))) AND ((((rt1.c0))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5476749167558546) BETWEEN ((((t0.c0))==((rt1.c0)))) AND ((((rt1.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM t1, t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt1 WHERE (((0.5476749167558546) BETWEEN ((((t0.c0))=((rt1.c0)))) AND ((((rt1.c0))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5476749167558546) BETWEEN ((((t0.c0))==((rt1.c0)))) AND ((((rt1.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM t1, t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt1 WHERE (((0.5476749167558546) BETWEEN ((((t0.c0))=((rt1.c0)))) AND ((((rt1.c0))!=((vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((((((((rt0.c0)GLOB(rt0.c1)))OR(INSTR(rt0.c2, t1.c0))))AND(rt0.c2)))OR(t1.c0)))AND((rt0.c1 IN (rt0.c2))))  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((((((((((rt0.c0)GLOB(rt0.c1)))OR(INSTR(rt0.c2, t1.c0))))AND(rt0.c2)))OR(t1.c0)))AND((rt0.c1 IN (rt0.c2))))  NULLS LAST, x'');
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((((((((rt0.c0)GLOB(rt0.c1)))OR(INSTR(rt0.c2, t1.c0))))AND(rt0.c2)))OR(t1.c0)))AND((rt0.c1 IN (rt0.c2))))  NULLS LAST, x'';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY ((((((((((rt0.c0)GLOB(rt0.c1)))OR(INSTR(rt0.c2, t1.c0))))AND(rt0.c2)))OR(t1.c0)))AND((rt0.c1 IN (rt0.c2))))  NULLS LAST, x'');
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((rt0.c3 COLLATE BINARY) BETWEEN ((rt0.c2 IN ())) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((((((((rt0.c0)GLOB(rt0.c1)))OR(INSTR(rt0.c2, t1.c0))))AND(rt0.c2)))OR(t1.c0)))AND((rt0.c1 IN (rt0.c2))))  NULLS LAST, x'';
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS INTEGER))GLOB((~ (NULL)))) WHERE ((((vt0.c2) IS TRUE) IN ())) ORDER BY (((((-1007287821)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN (((vt0.c1)OR(vt0.c1))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c2)))AND(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS INTEGER))GLOB((~ (NULL)))) ORDER BY (((((-1007287821)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN (((vt0.c1)OR(vt0.c1))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c2)))AND(vt0.c2)))) DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS INTEGER))GLOB((~ (NULL)))) WHERE ((((vt0.c2) IS TRUE) IN ())) ORDER BY (((((-1007287821)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN (((vt0.c1)OR(vt0.c1))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c2)))AND(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS INTEGER))GLOB((~ (NULL)))) ORDER BY (((((-1007287821)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN (((vt0.c1)OR(vt0.c1))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c2)))AND(vt0.c2)))) DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((CAST(t1.c0 AS INTEGER))GLOB((~ (NULL)))) WHERE ((((vt0.c2) IS TRUE) IN ())) ORDER BY (((((-1007287821)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))) NOT BETWEEN (((vt0.c1)OR(vt0.c1))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c2)))AND(vt0.c2)))) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>=('-386660031')) COLLATE BINARY) ORDER BY ((((vt0.c2)LIKE(vt0.c0)))<=(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=('-386660031')) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)LIKE(vt0.c0)))<=(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>=('-386660031')) COLLATE BINARY) ORDER BY ((((vt0.c2)LIKE(vt0.c0)))<=(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=('-386660031')) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)LIKE(vt0.c0)))<=(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>=('-386660031')) COLLATE BINARY) ORDER BY ((((vt0.c2)LIKE(vt0.c0)))<=(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))));
SELECT ALL * FROM t1, vt0, t0 WHERE ((((CAST(0.9332910256377933 AS TEXT)))<=((((t1.c0)>=(t0.c0)))))) ORDER BY 0.3316114669109368  NULLS FIRST, x'b626' ASC  NULLS FIRST, (vt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0.9332910256377933 AS TEXT)))<=((((t1.c0)>=(t0.c0)))))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY 0.3316114669109368  NULLS FIRST, x'b626' ASC  NULLS FIRST, (vt0.c1 IN ()));
SELECT ALL * FROM t1, vt0, t0 WHERE ((((CAST(0.9332910256377933 AS TEXT)))<=((((t1.c0)>=(t0.c0)))))) ORDER BY 0.3316114669109368  NULLS FIRST, x'b626' ASC  NULLS FIRST, (vt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0.9332910256377933 AS TEXT)))<=((((t1.c0)>=(t0.c0)))))) IS TRUE)  as count FROM t1, vt0, t0 ORDER BY 0.3316114669109368  NULLS FIRST, x'b626' ASC  NULLS FIRST, (vt0.c1 IN ()));
SELECT ALL * FROM t1, vt0, t0 WHERE ((((CAST(0.9332910256377933 AS TEXT)))<=((((t1.c0)>=(t0.c0)))))) ORDER BY 0.3316114669109368  NULLS FIRST, x'b626' ASC  NULLS FIRST, (vt0.c1 IN ());
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST('' AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('' AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST('' AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('' AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(CAST('' AS TEXT) AS NUMERIC));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON rt0.c3 FULL OUTER JOIN rt0 ON (((+ (rt1.c3)))LIKE(((rt1.c4)GLOB(rt1.c2)))) INNER JOIN t0 ON (((rt1.c3)) BETWEEN ((((rt1.c2)OR(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (0.031061900079387028) AND (rt0.c0))))) WHERE (((((((rt1.c0)OR(rt1.c3)))OR(rt1.c5)))=((((vt0.c0))<>((t0.c56))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c5)))==((((vt0.c0))<>((t0.c56)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON rt0.c3 FULL OUTER JOIN rt0 ON (((+ (rt1.c3)))LIKE(((rt1.c4)GLOB(rt1.c2)))) INNER JOIN t0 ON (((rt1.c3)) BETWEEN ((((rt1.c2)OR(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (0.031061900079387028) AND (rt0.c0))))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON rt0.c3 FULL OUTER JOIN rt0 ON (((+ (rt1.c3)))LIKE(((rt1.c4)GLOB(rt1.c2)))) INNER JOIN t0 ON (((rt1.c3)) BETWEEN ((((rt1.c2)OR(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (0.031061900079387028) AND (rt0.c0))))) WHERE (((((((rt1.c0)OR(rt1.c3)))OR(rt1.c5)))=((((vt0.c0))<>((t0.c56))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c5)))==((((vt0.c0))<>((t0.c56)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON rt0.c3 FULL OUTER JOIN rt0 ON (((+ (rt1.c3)))LIKE(((rt1.c4)GLOB(rt1.c2)))) INNER JOIN t0 ON (((rt1.c3)) BETWEEN ((((rt1.c2)OR(t0.c0)))) AND ((((t0.c0) NOT BETWEEN (0.031061900079387028) AND (rt0.c0))))));
SELECT ALL COUNT(*) FROM t1, t0 WHERE (UNLIKELY((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((t0.c0 IN ()))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (UNLIKELY((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((t0.c0 IN ()))) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (UNLIKELY((t0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR((vt0.c2 IN ()))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR((vt0.c2 IN ()))))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR((vt0.c2 IN ()))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR((vt0.c2 IN ()))))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR((vt0.c2 IN ()))))OR(vt0.c0)));
SELECT ALL * FROM vt0, rt0, rt1 WHERE ('') ORDER BY ((0.48006168820689354) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((0.48006168820689354) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, rt1 WHERE ('') ORDER BY ((0.48006168820689354) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((0.48006168820689354) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, rt1 WHERE ('') ORDER BY ((0.48006168820689354) NOTNULL) DESC  NULLS LAST;
SELECT * FROM t1, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c2))) IS FALSE)) ORDER BY ((rt1.c2)>(rt1.c5)) ASC  NULLS LAST, 0Xfffffffffc4740b6, (((rt1.c0, rt1.c4, rt1.c2, rt1.c5, rt1.c3))<>((rt1.c5, rt1.c2, rt1.c0, rt1.c0, rt1.c2))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((rt1.c2)>(rt1.c5)) ASC  NULLS LAST, 0Xfffffffffc4740b6, (((rt1.c0, rt1.c4, rt1.c2, rt1.c5, rt1.c3))<>((rt1.c5, rt1.c2, rt1.c0, rt1.c0, rt1.c2))) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c2))) IS FALSE)) ORDER BY ((rt1.c2)>(rt1.c5)) ASC  NULLS LAST, 0Xfffffffffc4740b6, (((rt1.c0, rt1.c4, rt1.c2, rt1.c5, rt1.c3))<>((rt1.c5, rt1.c2, rt1.c0, rt1.c0, rt1.c2))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((rt1.c2)>(rt1.c5)) ASC  NULLS LAST, 0Xfffffffffc4740b6, (((rt1.c0, rt1.c4, rt1.c2, rt1.c5, rt1.c3))<>((rt1.c5, rt1.c2, rt1.c0, rt1.c0, rt1.c2))) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c2))) IS FALSE)) ORDER BY ((rt1.c2)>(rt1.c5)) ASC  NULLS LAST, 0Xfffffffffc4740b6, (((rt1.c0, rt1.c4, rt1.c2, rt1.c5, rt1.c3))<>((rt1.c5, rt1.c2, rt1.c0, rt1.c0, rt1.c2))) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c2)>(vt0.c1)) COLLATE RTRIM) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)>(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((vt0.c2)>(vt0.c1)) COLLATE RTRIM) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)>(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((vt0.c2)>(vt0.c1)) COLLATE RTRIM) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END COLLATE NOCASE;
SELECT ALL * FROM vt0, t1 NATURAL JOIN t0 WHERE (TRIM(CAST(vt0.c0 AS INTEGER))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c56) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c56) AND (t0.c56)) WHEN ((((vt0.c2)AND('m~')))OR(t1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt0.c1)AND(vt0.c2)) ELSE ((vt0.c0)/(t0.c56)) END, CAST((- (t0.c56)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN t0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c56) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c56) AND (t0.c56)) WHEN ((((vt0.c2)AND('m~')))OR(t1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt0.c1)AND(vt0.c2)) ELSE ((vt0.c0)/(t0.c56)) END, CAST((- (t0.c56)) AS TEXT) DESC);
SELECT ALL * FROM vt0, t1 NATURAL JOIN t0 WHERE (TRIM(CAST(vt0.c0 AS INTEGER))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c56) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c56) AND (t0.c56)) WHEN ((((vt0.c2)AND('m~')))OR(t1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt0.c1)AND(vt0.c2)) ELSE ((vt0.c0)/(t0.c56)) END, CAST((- (t0.c56)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN t0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c56) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c56) AND (t0.c56)) WHEN ((((vt0.c2)AND('m~')))OR(t1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt0.c1)AND(vt0.c2)) ELSE ((vt0.c0)/(t0.c56)) END, CAST((- (t0.c56)) AS TEXT) DESC);
SELECT ALL * FROM vt0, t1 NATURAL JOIN t0 WHERE (TRIM(CAST(vt0.c0 AS INTEGER))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c56) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c56) AND (t0.c56)) WHEN ((((vt0.c2)AND('m~')))OR(t1.c0)) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt0.c1)AND(vt0.c2)) ELSE ((vt0.c0)/(t0.c56)) END, CAST((- (t0.c56)) AS TEXT) DESC;
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((((((rt0.c3)AND(rt0.c3)))OR(vt0.c0))) IS FALSE) CROSS JOIN rt0 ON ((((rt0.c2)>>(rt1.c5))) BETWEEN ((~ (rt1.c4))) AND (((rt1.c3) NOT BETWEEN (vt0.c2) AND (-9.49852503E8)))) WHERE (-2114816377) ORDER BY (((~ (rt1.c4))) NOT BETWEEN (rt1.c5) AND ((+ (vt0.c1))))  NULLS LAST, 0Xfffffffff7528403 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-2114816377) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((((rt0.c3)AND(rt0.c3)))OR(vt0.c0))) IS FALSE) CROSS JOIN rt0 ON ((((rt0.c2)>>(rt1.c5))) BETWEEN ((~ (rt1.c4))) AND (((rt1.c3) NOT BETWEEN (vt0.c2) AND (-9.49852503E8)))) ORDER BY (((~ (rt1.c4))) NOT BETWEEN (rt1.c5) AND ((+ (vt0.c1))))  NULLS LAST, 0xfffffffff7528403 COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((((((rt0.c3)AND(rt0.c3)))OR(vt0.c0))) IS FALSE) CROSS JOIN rt0 ON ((((rt0.c2)>>(rt1.c5))) BETWEEN ((~ (rt1.c4))) AND (((rt1.c3) NOT BETWEEN (vt0.c2) AND (-9.49852503E8)))) WHERE (-2114816377) ORDER BY (((~ (rt1.c4))) NOT BETWEEN (rt1.c5) AND ((+ (vt0.c1))))  NULLS LAST, 0Xfffffffff7528403 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-2114816377) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((((rt0.c3)AND(rt0.c3)))OR(vt0.c0))) IS FALSE) CROSS JOIN rt0 ON ((((rt0.c2)>>(rt1.c5))) BETWEEN ((~ (rt1.c4))) AND (((rt1.c3) NOT BETWEEN (vt0.c2) AND (-9.49852503E8)))) ORDER BY (((~ (rt1.c4))) NOT BETWEEN (rt1.c5) AND ((+ (vt0.c1))))  NULLS LAST, 0xfffffffff7528403 COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((((((rt0.c3)AND(rt0.c3)))OR(vt0.c0))) IS FALSE) CROSS JOIN rt0 ON ((((rt0.c2)>>(rt1.c5))) BETWEEN ((~ (rt1.c4))) AND (((rt1.c3) NOT BETWEEN (vt0.c2) AND (-9.49852503E8)))) WHERE (-2114816377) ORDER BY (((~ (rt1.c4))) NOT BETWEEN (rt1.c5) AND ((+ (vt0.c1))))  NULLS LAST, 0Xfffffffff7528403 COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, rt1 NATURAL JOIN t0 WHERE (((((rt1.c5)<=(rt1.c4)))/(((rt1.c2)>=(rt1.c0))))) ORDER BY 1.49035522E9 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5)<=(rt1.c4)))/(((rt1.c2)>=(rt1.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1 NATURAL JOIN t0 ORDER BY 1.49035522E9 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, rt1 NATURAL JOIN t0 WHERE (((((rt1.c5)<=(rt1.c4)))/(((rt1.c2)>=(rt1.c0))))) ORDER BY 1.49035522E9 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5)<=(rt1.c4)))/(((rt1.c2)>=(rt1.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1 NATURAL JOIN t0 ORDER BY 1.49035522E9 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, rt1 NATURAL JOIN t0 WHERE (((((rt1.c5)<=(rt1.c4)))/(((rt1.c2)>=(rt1.c0))))) ORDER BY 1.49035522E9 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c5) ORDER BY ((IFNULL(rt1.c4, rt1.c3)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((IFNULL(rt1.c4, rt1.c3)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c5) ORDER BY ((IFNULL(rt1.c4, rt1.c3)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((IFNULL(rt1.c4, rt1.c3)) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c5) ORDER BY ((IFNULL(rt1.c4, rt1.c3)) IS TRUE);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c0 IN (rt1.c2)))LIKE(rt1.c4))) ORDER BY ((0.5642093028288251) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (rt1.c2)))LIKE(rt1.c4))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((0.5642093028288251) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c0 IN (rt1.c2)))LIKE(rt1.c4))) ORDER BY ((0.5642093028288251) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (rt1.c2)))LIKE(rt1.c4))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((0.5642093028288251) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((t0.c0 IN (rt1.c2)))LIKE(rt1.c4))) ORDER BY ((0.5642093028288251) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, t1, rt1 WHERE (UNLIKELY(DISTINCT ((-1368515828) BETWEEN (rt1.c3) AND (x''))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((-1368515828) BETWEEN (rt1.c3) AND (x'')))) IS TRUE)  as count FROM t0, rt0, t1, rt1);
SELECT COUNT(*) FROM t0, rt0, t1, rt1 WHERE (UNLIKELY(DISTINCT ((-1368515828) BETWEEN (rt1.c3) AND (x''))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((-1368515828) BETWEEN (rt1.c3) AND (x'')))) IS TRUE)  as count FROM t0, rt0, t1, rt1);
SELECT COUNT(*) FROM t0, rt0, t1, rt1 WHERE (UNLIKELY(DISTINCT ((-1368515828) BETWEEN (rt1.c3) AND (x''))));
SELECT ALL * FROM rt0, vt0, t1, rt1, t0 WHERE (((((((((((((rt1.c3)AND(0X483c7ec7)))AND(rt1.c5)))AND(rt0.c1)))OR(vt0.c1)))OR(rt1.c4)))AND(t0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((((((((t0.c56) NOT BETWEEN (vt0.c1) AND (t0.c56)))AND(t0.c56)))AND((rt1.c4 IN ()))))AND((rt1.c1 IN (vt0.c1, rt1.c4)))))AND(((rt1.c5)==('')))) ASC  NULLS FIRST, json_array_length('C[', ((rt1.c4)&(rt1.c3))), x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c3)AND(0x483c7ec7)))AND(rt1.c5)))AND(rt0.c1)))OR(vt0.c1)))OR(rt1.c4)))AND(t0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t1, rt1, t0 ORDER BY ((((((((((t0.c56) NOT BETWEEN (vt0.c1) AND (t0.c56)))AND(t0.c56)))AND((rt1.c4 IN ()))))AND((rt1.c1 IN (vt0.c1, rt1.c4)))))AND(((rt1.c5)==('')))) ASC  NULLS FIRST, json_array_length('C[', ((rt1.c4)&(rt1.c3))), x''  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t1, rt1, t0 WHERE (((((((((((((rt1.c3)AND(0X483c7ec7)))AND(rt1.c5)))AND(rt0.c1)))OR(vt0.c1)))OR(rt1.c4)))AND(t0.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((((((((t0.c56) NOT BETWEEN (vt0.c1) AND (t0.c56)))AND(t0.c56)))AND((rt1.c4 IN ()))))AND((rt1.c1 IN (vt0.c1, rt1.c4)))))AND(((rt1.c5)==('')))) ASC  NULLS FIRST, json_array_length('C[', ((rt1.c4)&(rt1.c3))), x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c3)AND(0x483c7ec7)))AND(rt1.c5)))AND(rt0.c1)))OR(vt0.c1)))OR(rt1.c4)))AND(t0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t1, rt1, t0 ORDER BY ((((((((((t0.c56) NOT BETWEEN (vt0.c1) AND (t0.c56)))AND(t0.c56)))AND((rt1.c4 IN ()))))AND((rt1.c1 IN (vt0.c1, rt1.c4)))))AND(((rt1.c5)==('')))) ASC  NULLS FIRST, json_array_length('C[', ((rt1.c4)&(rt1.c3))), x''  NULLS LAST);
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON ((((TOTAL_CHANGES())AND(vt0.c2)))OR(((rt0.c1) NOTNULL))) CROSS JOIN vt0 ON (~ (rt0.c0)) CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CAST('' AS INTEGER))) AND (((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))))) CROSS JOIN rt0 ON (((rt1.c1, t1.c0 COLLATE NOCASE, (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))))<(((((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c5))), json_quote(t0.c0), ((rt1.c1)-(vt0.c0))))) WHERE (CAST(LOWER(DISTINCT vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT vt0.c0) AS INTEGER)) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON ((((TOTAL_CHANGES())AND(vt0.c2)))OR(((rt0.c1) NOTNULL))) CROSS JOIN vt0 ON (~ (rt0.c0)) CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CAST('' AS INTEGER))) AND (((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))))) CROSS JOIN rt0 ON (((rt1.c1, t1.c0 COLLATE NOCASE, (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))))<(((((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c5))), json_quote(t0.c0), ((rt1.c1)-(vt0.c0))))));
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON ((((TOTAL_CHANGES())AND(vt0.c2)))OR(((rt0.c1) NOTNULL))) CROSS JOIN vt0 ON (~ (rt0.c0)) CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CAST('' AS INTEGER))) AND (((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))))) CROSS JOIN rt0 ON (((rt1.c1, t1.c0 COLLATE NOCASE, (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))))<(((((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c5))), json_quote(t0.c0), ((rt1.c1)-(vt0.c0))))) WHERE (CAST(LOWER(DISTINCT vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT vt0.c0) AS INTEGER)) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON ((((TOTAL_CHANGES())AND(vt0.c2)))OR(((rt0.c1) NOTNULL))) CROSS JOIN vt0 ON (~ (rt0.c0)) CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CAST('' AS INTEGER))) AND (((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))))) CROSS JOIN rt0 ON (((rt1.c1, t1.c0 COLLATE NOCASE, (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))))<(((((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c5))), json_quote(t0.c0), ((rt1.c1)-(vt0.c0))))));
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON ((((TOTAL_CHANGES())AND(vt0.c2)))OR(((rt0.c1) NOTNULL))) CROSS JOIN vt0 ON (~ (rt0.c0)) CROSS JOIN t0 ON (((vt0.c0)) BETWEEN ((CAST('' AS INTEGER))) AND (((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3)))))) CROSS JOIN rt0 ON (((rt1.c1, t1.c0 COLLATE NOCASE, (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))))<(((((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c5))), json_quote(t0.c0), ((rt1.c1)-(vt0.c0))))) WHERE (CAST(LOWER(DISTINCT vt0.c0) AS INTEGER));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS REAL));
SELECT COUNT(*) FROM rt1, t0 FULL OUTER JOIN vt0 ON CAST(((vt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) AS NUMERIC) WHERE (((((vt0.c0)AND(((NULL)OR(t0.c56)))))AND(((0.030397584027649915) NOTNULL)))) ORDER BY ((rt1.c5)*(((((((((rt1.c5)AND(rt1.c4)))OR(rt1.c2)))AND(t0.c56)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(((NULL)OR(t0.c56)))))AND(((0.030397584027649915) NOTNULL)))) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN vt0 ON CAST(((vt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) AS NUMERIC) ORDER BY ((rt1.c5)*(((((((((rt1.c5)AND(rt1.c4)))OR(rt1.c2)))AND(t0.c56)))AND(vt0.c0)))));
SELECT COUNT(*) FROM rt1, t0 FULL OUTER JOIN vt0 ON CAST(((vt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) AS NUMERIC) WHERE (((((vt0.c0)AND(((NULL)OR(t0.c56)))))AND(((0.030397584027649915) NOTNULL)))) ORDER BY ((rt1.c5)*(((((((((rt1.c5)AND(rt1.c4)))OR(rt1.c2)))AND(t0.c56)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(((NULL)OR(t0.c56)))))AND(((0.030397584027649915) NOTNULL)))) IS TRUE)  as count FROM rt1, t0 FULL OUTER JOIN vt0 ON CAST(((vt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) AS NUMERIC) ORDER BY ((rt1.c5)*(((((((((rt1.c5)AND(rt1.c4)))OR(rt1.c2)))AND(t0.c56)))AND(vt0.c0)))));
SELECT COUNT(*) FROM rt1, t0 FULL OUTER JOIN vt0 ON CAST(((vt0.c2) BETWEEN (rt1.c2) AND (t0.c0)) AS NUMERIC) WHERE (((((vt0.c0)AND(((NULL)OR(t0.c56)))))AND(((0.030397584027649915) NOTNULL)))) ORDER BY ((rt1.c5)*(((((((((rt1.c5)AND(rt1.c4)))OR(rt1.c2)))AND(t0.c56)))AND(vt0.c0))));
SELECT COUNT(*) FROM t1 WHERE (LIKELY(DISTINCT ((t1.c0) IS TRUE))) ORDER BY 0.6770640401038267 DESC, (((t1.c0 IN ()))<<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t1.c0) IS TRUE))) IS TRUE)  as count FROM t1 ORDER BY 0.6770640401038267 DESC, (((t1.c0 IN ()))<<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (LIKELY(DISTINCT ((t1.c0) IS TRUE))) ORDER BY 0.6770640401038267 DESC, (((t1.c0 IN ()))<<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t1.c0) IS TRUE))) IS TRUE)  as count FROM t1 ORDER BY 0.6770640401038267 DESC, (((t1.c0 IN ()))<<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (LIKELY(DISTINCT ((t1.c0) IS TRUE))) ORDER BY 0.6770640401038267 DESC, (((t1.c0 IN ()))<<(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))));
SELECT ALL * FROM rt1, vt0 WHERE ((NOT (CAST(rt1.c3 AS TEXT)))) ORDER BY (((load_extension(vt0.c2)))=((SQLITE_VERSION()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((load_extension(vt0.c2)))=((SQLITE_VERSION()))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((NOT (CAST(rt1.c3 AS TEXT)))) ORDER BY (((load_extension(vt0.c2)))=((SQLITE_VERSION()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c3 AS TEXT)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((load_extension(vt0.c2)))=((SQLITE_VERSION()))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((ABS(rt1.c2))||((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c2))||((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((ABS(rt1.c2))||((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c2))||((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((ABS(rt1.c2))||((rt1.c2 IN ()))));
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((rt1.c5) BETWEEN (t0.c0) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c5) BETWEEN (t0.c0) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((rt1.c5) BETWEEN (t0.c0) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c5) BETWEEN (t0.c0) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((rt1.c5) BETWEEN (t0.c0) AND (rt1.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, rt1, t0, t1 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM rt0, vt0, rt1, t0, t1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, rt1, t0, t1 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM rt0, vt0, rt1, t0, t1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0, rt1, t0, t1 WHERE (vt0.c2);
SELECT * FROM t0 CROSS JOIN t1 ON CAST(((((x'')AND(rt0.c1)))AND(t1.c0)) AS BLOB) LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((CASE WHEN t0.c56 THEN t1.c0 ELSE rt0.c2 END)<(rt0.c2 COLLATE RTRIM))) ORDER BY CASE WHEN ((t0.c0)>(t0.c0)) THEN ((t0.c0) NOTNULL) END  NULLS LAST, ((CASE WHEN t0.c56 THEN t1.c0 END)>=(CAST(t1.c0 AS TEXT))) DESC, ((((((((((t0.c56)+(rt0.c3)))OR(((NULL) BETWEEN (rt0.c3) AND (t0.c0)))))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c56 THEN t1.c0 ELSE rt0.c2 END)<(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON CAST(((((x'')AND(rt0.c1)))AND(t1.c0)) AS BLOB) LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY CASE WHEN ((t0.c0)>(t0.c0)) THEN ((t0.c0) NOTNULL) END  NULLS LAST, ((CASE WHEN t0.c56 THEN t1.c0 END)>=(CAST(t1.c0 AS TEXT))) DESC, ((((((((((t0.c56)+(rt0.c3)))OR(((NULL) BETWEEN (rt0.c3) AND (t0.c0)))))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS NUMERIC))) DESC);
SELECT * FROM t0 CROSS JOIN t1 ON CAST(((((x'')AND(rt0.c1)))AND(t1.c0)) AS BLOB) LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((CASE WHEN t0.c56 THEN t1.c0 ELSE rt0.c2 END)<(rt0.c2 COLLATE RTRIM))) ORDER BY CASE WHEN ((t0.c0)>(t0.c0)) THEN ((t0.c0) NOTNULL) END  NULLS LAST, ((CASE WHEN t0.c56 THEN t1.c0 END)>=(CAST(t1.c0 AS TEXT))) DESC, ((((((((((t0.c56)+(rt0.c3)))OR(((NULL) BETWEEN (rt0.c3) AND (t0.c0)))))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c56 THEN t1.c0 ELSE rt0.c2 END)<(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON CAST(((((x'')AND(rt0.c1)))AND(t1.c0)) AS BLOB) LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY CASE WHEN ((t0.c0)>(t0.c0)) THEN ((t0.c0) NOTNULL) END  NULLS LAST, ((CASE WHEN t0.c56 THEN t1.c0 END)>=(CAST(t1.c0 AS TEXT))) DESC, ((((((((((t0.c56)+(rt0.c3)))OR(((NULL) BETWEEN (rt0.c3) AND (t0.c0)))))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS NUMERIC))) DESC);
SELECT * FROM t0 CROSS JOIN t1 ON CAST(((((x'')AND(rt0.c1)))AND(t1.c0)) AS BLOB) LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((CASE WHEN t0.c56 THEN t1.c0 ELSE rt0.c2 END)<(rt0.c2 COLLATE RTRIM))) ORDER BY CASE WHEN ((t0.c0)>(t0.c0)) THEN ((t0.c0) NOTNULL) END  NULLS LAST, ((CASE WHEN t0.c56 THEN t1.c0 END)>=(CAST(t1.c0 AS TEXT))) DESC, ((((((((((t0.c56)+(rt0.c3)))OR(((NULL) BETWEEN (rt0.c3) AND (t0.c0)))))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c3 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((((rt1.c3)AND(rt1.c0)))AND(rt1.c3))))) ORDER BY 0x792d4127 DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((rt1.c3)AND(rt1.c0)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY 0X792d4127 DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((((rt1.c3)AND(rt1.c0)))AND(rt1.c3))))) ORDER BY 0x792d4127 DESC;
SELECT SUM(count) FROM (SELECT (((~ (((((rt1.c3)AND(rt1.c0)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY 0X792d4127 DESC);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, t1, vt0 WHERE ((+ ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, t1, vt0 WHERE ((+ ((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt0, t0, rt1, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, t1, vt0 WHERE ((+ ((rt1.c0 IN ()))));
SELECT COUNT(*) FROM t0, vt0, t1, rt0 WHERE (((rt0.c3) IS FALSE)) ORDER BY HEX(((rt0.c0)*(vt0.c1)))  NULLS LAST, CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE)) IS TRUE)  as count FROM t0, vt0, t1, rt0 NOT INDEXED ORDER BY HEX(((rt0.c0)*(vt0.c1)))  NULLS LAST, CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, t1, rt0 WHERE (((rt0.c3) IS FALSE)) ORDER BY HEX(((rt0.c0)*(vt0.c1)))  NULLS LAST, CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE)) IS TRUE)  as count FROM t0, vt0, t1, rt0 NOT INDEXED ORDER BY HEX(((rt0.c0)*(vt0.c1)))  NULLS LAST, CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, t1, rt0 WHERE (((rt0.c3) IS FALSE)) ORDER BY HEX(((rt0.c0)*(vt0.c1)))  NULLS LAST, CASE ((rt0.c0) NOTNULL)  WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END  NULLS LAST;
SELECT * FROM t0, rt0 INNER JOIN vt0 ON CASE ((rt1.c2) BETWEEN (t1.c0) AND (rt1.c5))  WHEN CAST(vt0.c2 AS REAL) THEN (('186908266') BETWEEN (t0.c56) AND (rt1.c5)) WHEN ((t0.c56)>>(rt1.c5)) THEN (NULL IN ()) WHEN (t0.c56 IN ()) THEN (((rt1.c0, rt1.c2, vt0.c1)) BETWEEN ((t1.c0, rt1.c2, rt0.c2)) AND ((rt0.c3, rt1.c1, rt0.c0))) END FULL OUTER JOIN t1 ON (((rt1.c1)) BETWEEN ((((t0.c56)%(rt1.c0)))) AND ((CAST(NULL AS TEXT)))) FULL OUTER JOIN rt1 ON (((((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<(((NOT (vt0.c1))))) WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((t0.c0)LIKE(vt0.c1))) AND (((rt1.c5)>=(rt0.c1))))) ORDER BY CAST(0.6439995676472823 AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (((t0.c0)LIKE(vt0.c1))) AND (((rt1.c5)>=(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON CASE ((rt1.c2) BETWEEN (t1.c0) AND (rt1.c5))  WHEN CAST(vt0.c2 AS REAL) THEN (('186908266') BETWEEN (t0.c56) AND (rt1.c5)) WHEN ((t0.c56)>>(rt1.c5)) THEN (NULL IN ()) WHEN (t0.c56 IN ()) THEN (((rt1.c0, rt1.c2, vt0.c1)) BETWEEN ((t1.c0, rt1.c2, rt0.c2)) AND ((rt0.c3, rt1.c1, rt0.c0))) END FULL OUTER JOIN t1 ON (((rt1.c1)) BETWEEN ((((t0.c56)%(rt1.c0)))) AND ((CAST(NULL AS TEXT)))) FULL OUTER JOIN rt1 ON (((((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<(((NOT (vt0.c1))))) ORDER BY CAST(0.6439995676472823 AS REAL) DESC  NULLS LAST);
SELECT * FROM t0, rt0 INNER JOIN vt0 ON CASE ((rt1.c2) BETWEEN (t1.c0) AND (rt1.c5))  WHEN CAST(vt0.c2 AS REAL) THEN (('186908266') BETWEEN (t0.c56) AND (rt1.c5)) WHEN ((t0.c56)>>(rt1.c5)) THEN (NULL IN ()) WHEN (t0.c56 IN ()) THEN (((rt1.c0, rt1.c2, vt0.c1)) BETWEEN ((t1.c0, rt1.c2, rt0.c2)) AND ((rt0.c3, rt1.c1, rt0.c0))) END FULL OUTER JOIN t1 ON (((rt1.c1)) BETWEEN ((((t0.c56)%(rt1.c0)))) AND ((CAST(NULL AS TEXT)))) FULL OUTER JOIN rt1 ON (((((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<(((NOT (vt0.c1))))) WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((t0.c0)LIKE(vt0.c1))) AND (((rt1.c5)>=(rt0.c1))))) ORDER BY CAST(0.6439995676472823 AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (((t0.c0)LIKE(vt0.c1))) AND (((rt1.c5)>=(rt0.c1))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON CASE ((rt1.c2) BETWEEN (t1.c0) AND (rt1.c5))  WHEN CAST(vt0.c2 AS REAL) THEN (('186908266') BETWEEN (t0.c56) AND (rt1.c5)) WHEN ((t0.c56)>>(rt1.c5)) THEN (NULL IN ()) WHEN (t0.c56 IN ()) THEN (((rt1.c0, rt1.c2, vt0.c1)) BETWEEN ((t1.c0, rt1.c2, rt0.c2)) AND ((rt0.c3, rt1.c1, rt0.c0))) END FULL OUTER JOIN t1 ON (((rt1.c1)) BETWEEN ((((t0.c56)%(rt1.c0)))) AND ((CAST(NULL AS TEXT)))) FULL OUTER JOIN rt1 ON (((((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<(((NOT (vt0.c1))))) ORDER BY CAST(0.6439995676472823 AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0)))<>(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('1102833892')))) WHERE (CAST(((rt1.c3)/(t0.c56)) AS INTEGER)) ORDER BY (+ (CASE rt1.c4  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)/(t0.c56)) AS INTEGER)) IS TRUE)  as count FROM t1, rt0, rt1 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0)))!=(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('1102833892')))) ORDER BY (+ (CASE rt1.c4  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0)))<>(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('1102833892')))) WHERE (CAST(((rt1.c3)/(t0.c56)) AS INTEGER)) ORDER BY (+ (CASE rt1.c4  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)/(t0.c56)) AS INTEGER)) IS TRUE)  as count FROM t1, rt0, rt1 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0)))!=(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('1102833892')))) ORDER BY (+ (CASE rt1.c4  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0)))<>(((rt0.c1) NOT BETWEEN (rt0.c0) AND ('1102833892')))) WHERE (CAST(((rt1.c3)/(t0.c56)) AS INTEGER)) ORDER BY (+ (CASE rt1.c4  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END));
SELECT COUNT(*) FROM rt0, rt1, t0, vt0, t1 WHERE ((+ (CAST(rt0.c3 AS BLOB)))) ORDER BY TRIM(((t0.c56) NOTNULL), ROUND(rt0.c3, rt1.c0))  NULLS FIRST, UPPER(((rt1.c3) NOT BETWEEN (NULL) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1, t0, vt0, t1 ORDER BY TRIM(((t0.c56) NOTNULL), ROUND(rt0.c3, rt1.c0))  NULLS FIRST, UPPER(((rt1.c3) NOT BETWEEN (NULL) AND (t1.c0))));
SELECT COUNT(*) FROM rt0, rt1, t0, vt0, t1 WHERE ((+ (CAST(rt0.c3 AS BLOB)))) ORDER BY TRIM(((t0.c56) NOTNULL), ROUND(rt0.c3, rt1.c0))  NULLS FIRST, UPPER(((rt1.c3) NOT BETWEEN (NULL) AND (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c3 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1, t0, vt0, t1 ORDER BY TRIM(((t0.c56) NOTNULL), ROUND(rt0.c3, rt1.c0))  NULLS FIRST, UPPER(((rt1.c3) NOT BETWEEN (NULL) AND (t1.c0))));
SELECT COUNT(*) FROM rt0, rt1, t0, vt0, t1 WHERE ((+ (CAST(rt0.c3 AS BLOB)))) ORDER BY TRIM(((t0.c56) NOTNULL), ROUND(rt0.c3, rt1.c0))  NULLS FIRST, UPPER(((rt1.c3) NOT BETWEEN (NULL) AND (t1.c0)));
SELECT COUNT(*) FROM t0, rt1 WHERE (((rt1.c3 COLLATE RTRIM)|(((NULL) BETWEEN (rt1.c3) AND (rt1.c3))))) ORDER BY (~ ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE RTRIM)|(((NULL) BETWEEN (rt1.c3) AND (rt1.c3))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (~ ((x'' IN ()))));
SELECT COUNT(*) FROM t0, rt1 WHERE (((rt1.c3 COLLATE RTRIM)|(((NULL) BETWEEN (rt1.c3) AND (rt1.c3))))) ORDER BY (~ ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE RTRIM)|(((NULL) BETWEEN (rt1.c3) AND (rt1.c3))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (~ ((x'' IN ()))));
SELECT COUNT(*) FROM t0, rt1 WHERE (((rt1.c3 COLLATE RTRIM)|(((NULL) BETWEEN (rt1.c3) AND (rt1.c3))))) ORDER BY (~ ((x'' IN ())));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c0)))>>(CAST(rt1.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c0)))>>(CAST(rt1.c5 AS BLOB)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c0)))>>(CAST(rt1.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c0)))>>(CAST(rt1.c5 AS BLOB)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((((((rt1.c5)OR(rt1.c5)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c0)))>>(CAST(rt1.c5 AS BLOB))));
SELECT * FROM vt0, rt0 FULL OUTER JOIN rt1 ON (NOT (((NULL)<(rt0.c0)))) RIGHT OUTER JOIN t0 ON t0.c56 FULL OUTER JOIN t1 ON CASE ((rt1.c2)!=(rt1.c2))  WHEN (((rt0.c1, rt1.c5, vt0.c0))<=((0Xfffffffff90b40d5, rt0.c2, rt1.c5))) THEN rt0.c2 END WHERE (CAST(((((rt1.c3)AND(t1.c0)))AND(rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c3)AND(t1.c0)))AND(rt1.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN rt1 ON (NOT (((NULL)<(rt0.c0)))) RIGHT OUTER JOIN t0 ON t0.c56 FULL OUTER JOIN t1 ON CASE ((rt1.c2)<>(rt1.c2))  WHEN (((rt0.c1, rt1.c5, vt0.c0))<=((0xfffffffff90b40d5, rt0.c2, rt1.c5))) THEN rt0.c2 END);
SELECT * FROM vt0, rt0 FULL OUTER JOIN rt1 ON (NOT (((NULL)<(rt0.c0)))) RIGHT OUTER JOIN t0 ON t0.c56 FULL OUTER JOIN t1 ON CASE ((rt1.c2)!=(rt1.c2))  WHEN (((rt0.c1, rt1.c5, vt0.c0))<=((0Xfffffffff90b40d5, rt0.c2, rt1.c5))) THEN rt0.c2 END WHERE (CAST(((((rt1.c3)AND(t1.c0)))AND(rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c3)AND(t1.c0)))AND(rt1.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN rt1 ON (NOT (((NULL)<(rt0.c0)))) RIGHT OUTER JOIN t0 ON t0.c56 FULL OUTER JOIN t1 ON CASE ((rt1.c2)<>(rt1.c2))  WHEN (((rt0.c1, rt1.c5, vt0.c0))<=((0xfffffffff90b40d5, rt0.c2, rt1.c5))) THEN rt0.c2 END);
SELECT * FROM vt0, rt0 FULL OUTER JOIN rt1 ON (NOT (((NULL)<(rt0.c0)))) RIGHT OUTER JOIN t0 ON t0.c56 FULL OUTER JOIN t1 ON CASE ((rt1.c2)!=(rt1.c2))  WHEN (((rt0.c1, rt1.c5, vt0.c0))<=((0Xfffffffff90b40d5, rt0.c2, rt1.c5))) THEN rt0.c2 END WHERE (CAST(((((rt1.c3)AND(t1.c0)))AND(rt1.c1)) AS REAL));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t1, rt0, vt0 CROSS JOIN t0 ON (NOT (SQLITE_COMPILEOPTION_USED(NULL))) FULL OUTER JOIN rt1 ON ((((t0.c0)AND(t0.c0)))OR(rt0.c0)) COLLATE BINARY WHERE ((CASE t0.c0  WHEN vt0.c2 THEN rt1.c4 END IN ())) ORDER BY '-1628329983' DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN vt0.c2 THEN rt1.c4 END IN ())) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN t0 ON (NOT (SQLITE_COMPILEOPTION_USED(NULL))) FULL OUTER JOIN rt1 ON ((((t0.c0)AND(t0.c0)))OR(rt0.c0)) COLLATE BINARY ORDER BY '-1628329983' DESC);
SELECT ALL * FROM t1, rt0, vt0 CROSS JOIN t0 ON (NOT (SQLITE_COMPILEOPTION_USED(NULL))) FULL OUTER JOIN rt1 ON ((((t0.c0)AND(t0.c0)))OR(rt0.c0)) COLLATE BINARY WHERE ((CASE t0.c0  WHEN vt0.c2 THEN rt1.c4 END IN ())) ORDER BY '-1628329983' DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN vt0.c2 THEN rt1.c4 END IN ())) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN t0 ON (NOT (SQLITE_COMPILEOPTION_USED(NULL))) FULL OUTER JOIN rt1 ON ((((t0.c0)AND(t0.c0)))OR(rt0.c0)) COLLATE BINARY ORDER BY '-1628329983' DESC);
SELECT ALL * FROM t1, rt0, vt0 CROSS JOIN t0 ON (NOT (SQLITE_COMPILEOPTION_USED(NULL))) FULL OUTER JOIN rt1 ON ((((t0.c0)AND(t0.c0)))OR(rt0.c0)) COLLATE BINARY WHERE ((CASE t0.c0  WHEN vt0.c2 THEN rt1.c4 END IN ())) ORDER BY '-1628329983' DESC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON 0.8497597740836204 WHERE (NULL) ORDER BY CAST(t0.c0 AS REAL)  NULLS LAST, ((((t1.c0)OR(t0.c56)))-(((t1.c0)GLOB(t0.c56)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON 0.8497597740836204 ORDER BY CAST(t0.c0 AS REAL)  NULLS LAST, ((((t1.c0)OR(t0.c56)))-(((t1.c0)GLOB(t0.c56)))) ASC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON 0.8497597740836204 WHERE (NULL) ORDER BY CAST(t0.c0 AS REAL)  NULLS LAST, ((((t1.c0)OR(t0.c56)))-(((t1.c0)GLOB(t0.c56)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON 0.8497597740836204 ORDER BY CAST(t0.c0 AS REAL)  NULLS LAST, ((((t1.c0)OR(t0.c56)))-(((t1.c0)GLOB(t0.c56)))) ASC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON 0.8497597740836204 WHERE (NULL) ORDER BY CAST(t0.c0 AS REAL)  NULLS LAST, ((((t1.c0)OR(t0.c56)))-(((t1.c0)GLOB(t0.c56)))) ASC;
SELECT COUNT(*) FROM rt0, rt1, t0, vt0 WHERE ((+ ((((rt0.c3, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c3)))))) ORDER BY (+ (((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((rt1.c2) IS FALSE))OR(UNLIKELY(DISTINCT vt0.c0))))OR(t0.c56 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c3, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1, t0, vt0 ORDER BY (+ (((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((rt1.c2) IS FALSE))OR(UNLIKELY(DISTINCT vt0.c0))))OR(t0.c56 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0, vt0 WHERE ((+ ((((rt0.c3, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c3)))))) ORDER BY (+ (((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((rt1.c2) IS FALSE))OR(UNLIKELY(DISTINCT vt0.c0))))OR(t0.c56 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c3, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1, t0, vt0 ORDER BY (+ (((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((rt1.c2) IS FALSE))OR(UNLIKELY(DISTINCT vt0.c0))))OR(t0.c56 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0, vt0 WHERE ((+ ((((rt0.c3, rt1.c3, rt1.c3))<=((rt1.c1, rt1.c4, rt1.c3)))))) ORDER BY (+ (((rt0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((rt1.c2) IS FALSE))OR(UNLIKELY(DISTINCT vt0.c0))))OR(t0.c56 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM t1, rt1 NOT INDEXED, rt0, t0 WHERE ((- (rt1.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt1, rt0, t0);
SELECT COUNT(*) FROM t1, rt1 NOT INDEXED, rt0, t0 WHERE ((- (rt1.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt1, rt0, t0);
SELECT COUNT(*) FROM t1, rt1 NOT INDEXED, rt0, t0 WHERE ((- (rt1.c4 COLLATE BINARY)));
SELECT * FROM rt0, rt1 WHERE ((+ (UNICODE(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (UNICODE(rt0.c2)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((+ (UNICODE(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (UNICODE(rt0.c2)))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((+ (UNICODE(rt0.c2))));
SELECT * FROM rt1, vt0 WHERE ((((vt0.c2, rt1.c0, rt1.c2)) BETWEEN ((((vt0.c0)<=(vt0.c0)), IFNULL(DISTINCT rt1.c0, rt1.c1), (rt1.c4 IN (rt1.c4)))) AND (((- (vt0.c2)), CAST(rt1.c1 AS INTEGER), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2, rt1.c0, rt1.c2)) BETWEEN ((((vt0.c0)<=(vt0.c0)), IFNULL(DISTINCT rt1.c0, rt1.c1), (rt1.c4 IN (rt1.c4)))) AND (((- (vt0.c2)), CAST(rt1.c1 AS INTEGER), (vt0.c0 IN ()))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c2, rt1.c0, rt1.c2)) BETWEEN ((((vt0.c0)<=(vt0.c0)), IFNULL(DISTINCT rt1.c0, rt1.c1), (rt1.c4 IN (rt1.c4)))) AND (((- (vt0.c2)), CAST(rt1.c1 AS INTEGER), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2, rt1.c0, rt1.c2)) BETWEEN ((((vt0.c0)<=(vt0.c0)), IFNULL(DISTINCT rt1.c0, rt1.c1), (rt1.c4 IN (rt1.c4)))) AND (((- (vt0.c2)), CAST(rt1.c1 AS INTEGER), (vt0.c0 IN ()))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c2, rt1.c0, rt1.c2)) BETWEEN ((((vt0.c0)<=(vt0.c0)), IFNULL(DISTINCT rt1.c0, rt1.c1), (rt1.c4 IN (rt1.c4)))) AND (((- (vt0.c2)), CAST(rt1.c1 AS INTEGER), (vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON NULL WHERE ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END, (- ('602219142')), (vt0.c0 IN ())))<((CASE WHEN vt0.c0 THEN 0.140281750802689 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c56 END, ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'922f')))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END, (- ('602219142')), (vt0.c0 IN ())))<((CASE WHEN vt0.c0 THEN 0.140281750802689 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c56 END, ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'922f')))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON NULL WHERE ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END, (- ('602219142')), (vt0.c0 IN ())))<((CASE WHEN vt0.c0 THEN 0.140281750802689 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c56 END, ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'922f')))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END, (- ('602219142')), (vt0.c0 IN ())))<((CASE WHEN vt0.c0 THEN 0.140281750802689 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c56 END, ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'922f')))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON NULL WHERE ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END, (- ('602219142')), (vt0.c0 IN ())))<((CASE WHEN vt0.c0 THEN 0.140281750802689 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c56 END, ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(x'922f')))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END))));
SELECT ALL * FROM t1 CROSS JOIN rt1 ON ((((0X38f77b16) ISNULL)) BETWEEN (NULL) AND (x'')) LEFT OUTER JOIN vt0 ON (COALESCE(vt0.c1, t1.c0, t0.c56, rt1.c2) IN ()) CROSS JOIN t0 ON ((t0.c56 COLLATE RTRIM) IS FALSE) WHERE (((((t0.c0)-(t0.c0)))||((vt0.c1 IN ())))) ORDER BY ((((rt1.c3)<>(t1.c0)))+((NOT (t0.c0))))  NULLS LAST, (((((~ (rt1.c3)))AND(x'' COLLATE BINARY)))OR(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)-(t0.c0)))||((vt0.c1 IN ())))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON ((((0x38f77b16) ISNULL)) BETWEEN (NULL) AND (x'')) LEFT OUTER JOIN vt0 ON (COALESCE(vt0.c1, t1.c0, t0.c56, rt1.c2) IN ()) CROSS JOIN t0 ON ((t0.c56 COLLATE RTRIM) IS FALSE) ORDER BY ((((rt1.c3)<>(t1.c0)))+((NOT (t0.c0))))  NULLS LAST, (((((~ (rt1.c3)))AND(x'' COLLATE BINARY)))OR(x'')) ASC);
SELECT ALL * FROM t1 CROSS JOIN rt1 ON ((((0X38f77b16) ISNULL)) BETWEEN (NULL) AND (x'')) LEFT OUTER JOIN vt0 ON (COALESCE(vt0.c1, t1.c0, t0.c56, rt1.c2) IN ()) CROSS JOIN t0 ON ((t0.c56 COLLATE RTRIM) IS FALSE) WHERE (((((t0.c0)-(t0.c0)))||((vt0.c1 IN ())))) ORDER BY ((((rt1.c3)<>(t1.c0)))+((NOT (t0.c0))))  NULLS LAST, (((((~ (rt1.c3)))AND(x'' COLLATE BINARY)))OR(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)-(t0.c0)))||((vt0.c1 IN ())))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON ((((0x38f77b16) ISNULL)) BETWEEN (NULL) AND (x'')) LEFT OUTER JOIN vt0 ON (COALESCE(vt0.c1, t1.c0, t0.c56, rt1.c2) IN ()) CROSS JOIN t0 ON ((t0.c56 COLLATE RTRIM) IS FALSE) ORDER BY ((((rt1.c3)<>(t1.c0)))+((NOT (t0.c0))))  NULLS LAST, (((((~ (rt1.c3)))AND(x'' COLLATE BINARY)))OR(x'')) ASC);
SELECT ALL * FROM t1 CROSS JOIN rt1 ON ((((0X38f77b16) ISNULL)) BETWEEN (NULL) AND (x'')) LEFT OUTER JOIN vt0 ON (COALESCE(vt0.c1, t1.c0, t0.c56, rt1.c2) IN ()) CROSS JOIN t0 ON ((t0.c56 COLLATE RTRIM) IS FALSE) WHERE (((((t0.c0)-(t0.c0)))||((vt0.c1 IN ())))) ORDER BY ((((rt1.c3)<>(t1.c0)))+((NOT (t0.c0))))  NULLS LAST, (((((~ (rt1.c3)))AND(x'' COLLATE BINARY)))OR(x'')) ASC;
SELECT * FROM rt1, t1, t0 FULL OUTER JOIN rt0 ON ((((rt1.c0)||(rt0.c2))) NOTNULL) WHERE (CAST(((rt0.c2) IS FALSE) AS TEXT)) ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c5))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt1, t1, t0 FULL OUTER JOIN rt0 ON ((((rt1.c0)||(rt0.c2))) NOTNULL) ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c5))) IN ())  NULLS FIRST);
SELECT * FROM rt1, t1, t0 FULL OUTER JOIN rt0 ON ((((rt1.c0)||(rt0.c2))) NOTNULL) WHERE (CAST(((rt0.c2) IS FALSE) AS TEXT)) ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c5))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt1, t1, t0 FULL OUTER JOIN rt0 ON ((((rt1.c0)||(rt0.c2))) NOTNULL) ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c5))) IN ())  NULLS FIRST);
SELECT * FROM rt1, t1, t0 FULL OUTER JOIN rt0 ON ((((rt1.c0)||(rt0.c2))) NOTNULL) WHERE (CAST(((rt0.c2) IS FALSE) AS TEXT)) ORDER BY ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c5))) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt1 FULL OUTER JOIN t0 ON (((rt1.c4 IN ())) NOTNULL) WHERE ((((((t1.c0))==((rt1.c3))))/((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))==((rt1.c3))))/((+ (t1.c0))))) IS TRUE)  as count FROM t1, rt1 FULL OUTER JOIN t0 ON (((rt1.c4 IN ())) NOTNULL));
SELECT COUNT(*) FROM t1, rt1 FULL OUTER JOIN t0 ON (((rt1.c4 IN ())) NOTNULL) WHERE ((((((t1.c0))==((rt1.c3))))/((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))==((rt1.c3))))/((+ (t1.c0))))) IS TRUE)  as count FROM t1, rt1 FULL OUTER JOIN t0 ON (((rt1.c4 IN ())) NOTNULL));
SELECT COUNT(*) FROM t1, rt1 FULL OUTER JOIN t0 ON (((rt1.c4 IN ())) NOTNULL) WHERE ((((((t1.c0))==((rt1.c3))))/((+ (t1.c0)))));
SELECT ALL * FROM rt0, t1 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 END)));
SELECT * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 DESC);
SELECT * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM t0, rt0, rt1 WHERE ((SQLITE_COMPILEOPTION_GET(rt1.c3) IN (((t0.c0)<<(rt1.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((SQLITE_COMPILEOPTION_GET(rt1.c3) IN (((t0.c0)<<(rt1.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((SQLITE_COMPILEOPTION_GET(rt1.c3) IN (((t0.c0)<<(rt1.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((SQLITE_COMPILEOPTION_GET(rt1.c3) IN (((t0.c0)<<(rt1.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((SQLITE_COMPILEOPTION_GET(rt1.c3) IN (((t0.c0)<<(rt1.c2)), ((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0)))));
SELECT * FROM t1, t0, vt0 WHERE ((- (COALESCE(vt0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (COALESCE(vt0.c0, t0.c0)))) IS TRUE)  as count FROM t1, t0, vt0);
SELECT * FROM t1, t0, vt0 WHERE ((- (COALESCE(vt0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (COALESCE(vt0.c0, t0.c0)))) IS TRUE)  as count FROM t1, t0, vt0);
SELECT * FROM t1, t0, vt0 WHERE ((- (COALESCE(vt0.c0, t0.c0))));
SELECT * FROM rt0 WHERE (CAST(UPPER(rt0.c0) AS REAL)) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt0.c0) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(UPPER(rt0.c0) AS REAL)) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt0.c0) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(UPPER(rt0.c0) AS REAL)) ORDER BY ((rt0.c3 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t1 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN ((+ (t1.c0))) AND (((0.4939408832037657) IS TRUE))) WHERE (json_insert(((t1.c0) BETWEEN (t1.c0) AND (t0.c56)), ((t0.c56)||(0.14641435659070134)), (~ (t0.c56))));
SELECT SUM(count) FROM (SELECT ((json_insert(((t1.c0) BETWEEN (t1.c0) AND (t0.c56)), ((t0.c56)||(0.14641435659070134)), (~ (t0.c56)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN ((+ (t1.c0))) AND (((0.4939408832037657) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN t1 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN ((+ (t1.c0))) AND (((0.4939408832037657) IS TRUE))) WHERE (json_insert(((t1.c0) BETWEEN (t1.c0) AND (t0.c56)), ((t0.c56)||(0.14641435659070134)), (~ (t0.c56))));
SELECT SUM(count) FROM (SELECT ((json_insert(((t1.c0) BETWEEN (t1.c0) AND (t0.c56)), ((t0.c56)||(0.14641435659070134)), (~ (t0.c56)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN t1 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN ((+ (t1.c0))) AND (((0.4939408832037657) IS TRUE))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0)-(vt0.c2))) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER)) IS FALSE) RIGHT OUTER JOIN t0 ON CAST(((rt1.c4)>(t0.c0)) AS INTEGER) WHERE (CASE WHEN (((vt0.c2))>((NULL))) THEN ((((rt1.c1)AND(vt0.c1)))OR(rt1.c0)) ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c2))>((NULL))) THEN ((((rt1.c1)AND(vt0.c1)))OR(rt1.c0)) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0)-(vt0.c2))) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER)) IS FALSE) RIGHT OUTER JOIN t0 ON CAST(((rt1.c4)>(t0.c0)) AS INTEGER));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0)-(vt0.c2))) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER)) IS FALSE) RIGHT OUTER JOIN t0 ON CAST(((rt1.c4)>(t0.c0)) AS INTEGER) WHERE (CASE WHEN (((vt0.c2))>((NULL))) THEN ((((rt1.c1)AND(vt0.c1)))OR(rt1.c0)) ELSE (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c2))>((NULL))) THEN ((((rt1.c1)AND(vt0.c1)))OR(rt1.c0)) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt0.c0)-(vt0.c2))) RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c2 AS INTEGER)) IS FALSE) RIGHT OUTER JOIN t0 ON CAST(((rt1.c4)>(t0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, t1 CROSS JOIN vt0 ON rt1.c4 WHERE ((+ (vt0.c0))) ORDER BY SQLITE_VERSION() DESC, (rt1.c2 IN (vt0.c1)) COLLATE RTRIM, rt1.c1 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM rt1, t1 CROSS JOIN vt0 ON rt1.c4 ORDER BY SQLITE_VERSION() DESC, (rt1.c2 IN (vt0.c1)) COLLATE RTRIM, rt1.c1 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt1, t1 CROSS JOIN vt0 ON rt1.c4 WHERE ((+ (vt0.c0))) ORDER BY SQLITE_VERSION() DESC, (rt1.c2 IN (vt0.c1)) COLLATE RTRIM, rt1.c1 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM rt1, t1 CROSS JOIN vt0 ON rt1.c4 ORDER BY SQLITE_VERSION() DESC, (rt1.c2 IN (vt0.c1)) COLLATE RTRIM, rt1.c1 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt1, t1 CROSS JOIN vt0 ON rt1.c4 WHERE ((+ (vt0.c0))) ORDER BY SQLITE_VERSION() DESC, (rt1.c2 IN (vt0.c1)) COLLATE RTRIM, rt1.c1 COLLATE NOCASE DESC;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1) NOTNULL)) AND ((((rt1.c2))<=((rt1.c4))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1) NOTNULL)) AND ((((rt1.c2))<=((rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1) NOTNULL)) AND ((((rt1.c2))<=((rt1.c4))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1) NOTNULL)) AND ((((rt1.c2))<=((rt1.c4)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1) NOTNULL)) AND ((((rt1.c2))<=((rt1.c4))))));
SELECT * FROM t1, rt1 WHERE ((((((((rt1.c3)AND(-1113082870)))OR(rt1.c3)), rt1.c2, (((1093676030)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), ((NULL)>=(rt1.c4)), CASE x''  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c5 END))<=((rt1.c2, rt1.c0, ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0)), rt1.c3, (4.54926497E8 IN ()))))) ORDER BY (((((((rt1.c4)OR(9.1717709E8)))AND(rt1.c1))))==(((- (rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c3)AND(-1113082870)))OR(rt1.c3)), rt1.c2, (((1093676030)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), ((NULL)>=(rt1.c4)), CASE x''  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c5 END))<=((rt1.c2, rt1.c0, ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0)), rt1.c3, (4.54926497E8 IN ()))))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((((((rt1.c4)OR(9.1717709E8)))AND(rt1.c1))))=(((- (rt1.c1))))) ASC  NULLS LAST);
SELECT * FROM t1, rt1 WHERE ((((((((rt1.c3)AND(-1113082870)))OR(rt1.c3)), rt1.c2, (((1093676030)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), ((NULL)>=(rt1.c4)), CASE x''  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c5 END))<=((rt1.c2, rt1.c0, ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0)), rt1.c3, (4.54926497E8 IN ()))))) ORDER BY (((((((rt1.c4)OR(9.1717709E8)))AND(rt1.c1))))==(((- (rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c3)AND(-1113082870)))OR(rt1.c3)), rt1.c2, (((1093676030)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), ((NULL)>=(rt1.c4)), CASE x''  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c5 END))<=((rt1.c2, rt1.c0, ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0)), rt1.c3, (4.54926497E8 IN ()))))) IS TRUE)  as count FROM t1, rt1 ORDER BY (((((((rt1.c4)OR(9.1717709E8)))AND(rt1.c1))))=(((- (rt1.c1))))) ASC  NULLS LAST);
SELECT * FROM t1, rt1 WHERE ((((((((rt1.c3)AND(-1113082870)))OR(rt1.c3)), rt1.c2, (((1093676030)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), ((NULL)>=(rt1.c4)), CASE x''  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c5 END))<=((rt1.c2, rt1.c0, ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0)), rt1.c3, (4.54926497E8 IN ()))))) ORDER BY (((((((rt1.c4)OR(9.1717709E8)))AND(rt1.c1))))==(((- (rt1.c1))))) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c4, rt1.c2, rt1.c1)) NOT BETWEEN (((NOT (rt1.c1)), (+ (rt1.c5)), rt1.c1 COLLATE BINARY)) AND (((((rt1.c2))==((rt1.c1))), NULLIF(DISTINCT rt1.c1, rt1.c2), ((rt1.c0)LIKE(rt1.c1)))))) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4, rt1.c2, rt1.c1)) NOT BETWEEN (((NOT (rt1.c1)), (+ (rt1.c5)), rt1.c1 COLLATE BINARY)) AND (((((rt1.c2))=((rt1.c1))), NULLIF(DISTINCT rt1.c1, rt1.c2), ((rt1.c0)LIKE(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c4, rt1.c2, rt1.c1)) NOT BETWEEN (((NOT (rt1.c1)), (+ (rt1.c5)), rt1.c1 COLLATE BINARY)) AND (((((rt1.c2))==((rt1.c1))), NULLIF(DISTINCT rt1.c1, rt1.c2), ((rt1.c0)LIKE(rt1.c1)))))) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c4, rt1.c2, rt1.c1)) NOT BETWEEN (((NOT (rt1.c1)), (+ (rt1.c5)), rt1.c1 COLLATE BINARY)) AND (((((rt1.c2))=((rt1.c1))), NULLIF(DISTINCT rt1.c1, rt1.c2), ((rt1.c0)LIKE(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c4, rt1.c2, rt1.c1)) NOT BETWEEN (((NOT (rt1.c1)), (+ (rt1.c5)), rt1.c1 COLLATE BINARY)) AND (((((rt1.c2))==((rt1.c1))), NULLIF(DISTINCT rt1.c1, rt1.c2), ((rt1.c0)LIKE(rt1.c1)))))) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM rt1, rt0 WHERE (0.9155691130643749) ORDER BY CASE (((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN x'' THEN x'554a' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9155691130643749) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE (((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN x'' THEN x'554a' END  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (0.9155691130643749) ORDER BY CASE (((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN x'' THEN x'554a' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9155691130643749) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE (((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN x'' THEN x'554a' END  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (0.9155691130643749) ORDER BY CASE (((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))  WHEN x'' THEN x'554a' END  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0, t1, vt0 WHERE (((rt0.c2) NOT BETWEEN (((vt0.c1)IS NOT(rt0.c3))) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((vt0.c1)IS NOT(rt0.c3))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, t1, vt0);
SELECT COUNT(*) FROM rt0, t0, t1, vt0 WHERE (((rt0.c2) NOT BETWEEN (((vt0.c1)IS NOT(rt0.c3))) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (((vt0.c1)IS NOT(rt0.c3))) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0, t1, vt0);
SELECT COUNT(*) FROM rt0, t0, t1, vt0 WHERE (((rt0.c2) NOT BETWEEN (((vt0.c1)IS NOT(rt0.c3))) AND (rt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (((((rt0.c0)|(vt0.c2))) IS TRUE)) ORDER BY (CAST(vt0.c2 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (CAST(vt0.c2 AS BLOB) IN ()));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (((((rt0.c0)|(vt0.c2))) IS TRUE)) ORDER BY (CAST(vt0.c2 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (CAST(vt0.c2 AS BLOB) IN ()));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (((((rt0.c0)|(vt0.c2))) IS TRUE)) ORDER BY (CAST(vt0.c2 AS BLOB) IN ());
SELECT ALL * FROM rt0, t0, rt1 WHERE (TRIM(CAST(rt1.c5 AS TEXT), CAST(t0.c56 AS REAL)));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(rt1.c5 AS TEXT), CAST(t0.c56 AS REAL))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE (TRIM(CAST(rt1.c5 AS TEXT), CAST(t0.c56 AS REAL)));
SELECT SUM(count) FROM (SELECT ((TRIM(CAST(rt1.c5 AS TEXT), CAST(t0.c56 AS REAL))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE (TRIM(CAST(rt1.c5 AS TEXT), CAST(t0.c56 AS REAL)));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON ((((rt1.c1) IS TRUE))OR(((rt1.c5) IS TRUE))) FULL OUTER JOIN rt0 ON (((((vt0.c2))=((rt1.c3))))AND(((t1.c0) IS FALSE))) INNER JOIN vt0 ON (((- (rt1.c1)))>=(CASE WHEN rt1.c2 THEN vt0.c1 END)) WHERE (((((((rt1.c5)+(rt1.c3)))AND((rt1.c2 IN (rt1.c5)))))AND(((rt0.c3) NOT BETWEEN (t1.c0) AND (rt0.c1))))) ORDER BY ((((rt1.c1)||(rt1.c5))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5)+(rt1.c3)))AND((rt1.c2 IN (rt1.c5)))))AND(((rt0.c3) NOT BETWEEN (t1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((((rt1.c1) IS TRUE))OR(((rt1.c5) IS TRUE))) FULL OUTER JOIN rt0 ON (((((vt0.c2))==((rt1.c3))))AND(((t1.c0) IS FALSE))) INNER JOIN vt0 ON (((- (rt1.c1)))>=(CASE WHEN rt1.c2 THEN vt0.c1 END)) ORDER BY ((((rt1.c1)||(rt1.c5))) NOT NULL));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON ((((rt1.c1) IS TRUE))OR(((rt1.c5) IS TRUE))) FULL OUTER JOIN rt0 ON (((((vt0.c2))=((rt1.c3))))AND(((t1.c0) IS FALSE))) INNER JOIN vt0 ON (((- (rt1.c1)))>=(CASE WHEN rt1.c2 THEN vt0.c1 END)) WHERE (((((((rt1.c5)+(rt1.c3)))AND((rt1.c2 IN (rt1.c5)))))AND(((rt0.c3) NOT BETWEEN (t1.c0) AND (rt0.c1))))) ORDER BY ((((rt1.c1)||(rt1.c5))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5)+(rt1.c3)))AND((rt1.c2 IN (rt1.c5)))))AND(((rt0.c3) NOT BETWEEN (t1.c0) AND (rt0.c1))))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((((rt1.c1) IS TRUE))OR(((rt1.c5) IS TRUE))) FULL OUTER JOIN rt0 ON (((((vt0.c2))==((rt1.c3))))AND(((t1.c0) IS FALSE))) INNER JOIN vt0 ON (((- (rt1.c1)))>=(CASE WHEN rt1.c2 THEN vt0.c1 END)) ORDER BY ((((rt1.c1)||(rt1.c5))) NOT NULL));
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT * FROM vt0, t1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)>>(vt0.c2))) AND (((t1.c0)<<(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)>>(vt0.c2))) AND (((t1.c0)<<(vt0.c2))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)>>(vt0.c2))) AND (((t1.c0)<<(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)>>(vt0.c2))) AND (((t1.c0)<<(vt0.c2))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)>>(vt0.c2))) AND (((t1.c0)<<(vt0.c2)))));
SELECT COUNT(*) FROM rt1, rt0, vt0 INNER JOIN t0 ON (((t0.c56 IN ())) IS TRUE) WHERE (TRIM(((rt1.c1) BETWEEN (x'') AND (rt0.c1)))) ORDER BY ((CAST(rt1.c4 AS BLOB)) IS TRUE) DESC  NULLS FIRST, (- ((('') BETWEEN (rt1.c0) AND (vt0.c2)))) ASC, ((((((((((rt1.c5)AND(vt0.c2)))AND(vt0.c2)))AND(rt1.c5)))AND(t0.c56))) NOT BETWEEN (((vt0.c2)>=(vt0.c0))) AND ((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c1) BETWEEN (x'') AND (rt0.c1)))) IS TRUE)  as count FROM rt1, rt0, vt0 INNER JOIN t0 ON (((t0.c56 IN ())) IS TRUE) ORDER BY ((CAST(rt1.c4 AS BLOB)) IS TRUE) DESC  NULLS FIRST, (- ((('') BETWEEN (rt1.c0) AND (vt0.c2)))) ASC, ((((((((((rt1.c5)AND(vt0.c2)))AND(vt0.c2)))AND(rt1.c5)))AND(t0.c56))) NOT BETWEEN (((vt0.c2)>=(vt0.c0))) AND ((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt0 INNER JOIN t0 ON (((t0.c56 IN ())) IS TRUE) WHERE (TRIM(((rt1.c1) BETWEEN (x'') AND (rt0.c1)))) ORDER BY ((CAST(rt1.c4 AS BLOB)) IS TRUE) DESC  NULLS FIRST, (- ((('') BETWEEN (rt1.c0) AND (vt0.c2)))) ASC, ((((((((((rt1.c5)AND(vt0.c2)))AND(vt0.c2)))AND(rt1.c5)))AND(t0.c56))) NOT BETWEEN (((vt0.c2)>=(vt0.c0))) AND ((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt1.c1) BETWEEN (x'') AND (rt0.c1)))) IS TRUE)  as count FROM rt1, rt0, vt0 INNER JOIN t0 ON (((t0.c56 IN ())) IS TRUE) ORDER BY ((CAST(rt1.c4 AS BLOB)) IS TRUE) DESC  NULLS FIRST, (- ((('') BETWEEN (rt1.c0) AND (vt0.c2)))) ASC, ((((((((((rt1.c5)AND(vt0.c2)))AND(vt0.c2)))AND(rt1.c5)))AND(t0.c56))) NOT BETWEEN (((vt0.c2)>=(vt0.c0))) AND ((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt0 INNER JOIN t0 ON (((t0.c56 IN ())) IS TRUE) WHERE (TRIM(((rt1.c1) BETWEEN (x'') AND (rt0.c1)))) ORDER BY ((CAST(rt1.c4 AS BLOB)) IS TRUE) DESC  NULLS FIRST, (- ((('') BETWEEN (rt1.c0) AND (vt0.c2)))) ASC, ((((((((((rt1.c5)AND(vt0.c2)))AND(vt0.c2)))AND(rt1.c5)))AND(t0.c56))) NOT BETWEEN (((vt0.c2)>=(vt0.c0))) AND ((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM t1 NOT INDEXED INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 ELSE rt1.c3 END)>('1803659008')) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1))) NOT BETWEEN (x'') AND (((((rt1.c2)AND(rt1.c3)))AND(rt1.c5))))) ORDER BY ((CAST('Q' AS NUMERIC))<<((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1))) NOT BETWEEN (x'') AND (((((rt1.c2)AND(rt1.c3)))AND(rt1.c5))))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 ELSE rt1.c3 END)>('1803659008')) ORDER BY ((CAST('Q' AS NUMERIC))<<((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))))  NULLS FIRST);
SELECT * FROM t1 NOT INDEXED INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 ELSE rt1.c3 END)>('1803659008')) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1))) NOT BETWEEN (x'') AND (((((rt1.c2)AND(rt1.c3)))AND(rt1.c5))))) ORDER BY ((CAST('Q' AS NUMERIC))<<((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1))) NOT BETWEEN (x'') AND (((((rt1.c2)AND(rt1.c3)))AND(rt1.c5))))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 ELSE rt1.c3 END)>('1803659008')) ORDER BY ((CAST('Q' AS NUMERIC))<<((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))))  NULLS FIRST);
SELECT * FROM t1 NOT INDEXED INNER JOIN rt1 ON ((CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c5 ELSE rt1.c3 END)>('1803659008')) WHERE (((((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c1))) NOT BETWEEN (x'') AND (((((rt1.c2)AND(rt1.c3)))AND(rt1.c5))))) ORDER BY ((CAST('Q' AS NUMERIC))<<((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE ((((((rt0.c1 IN ()))AND(((rt0.c3)&(rt0.c1)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(((rt0.c3)&(rt0.c1)))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE ((((((rt0.c1 IN ()))AND(((rt0.c3)&(rt0.c1)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(((rt0.c3)&(rt0.c1)))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE ((((((rt0.c1 IN ()))AND(((rt0.c3)&(rt0.c1)))))OR(NULL)));
SELECT COUNT(*) FROM vt0, rt1, t0 LEFT OUTER JOIN t1 ON ((((x'')AND(((rt1.c3)OR(rt1.c2)))))OR(((((rt1.c5)OR(rt0.c3)))AND(rt1.c1)))) CROSS JOIN rt0 ON ((((NULL)LIKE(rt0.c1))) IS TRUE) WHERE ((+ ((('o\r')>>(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((('o\r')>>(x''))))) IS TRUE)  as count FROM vt0, rt1, t0 LEFT OUTER JOIN t1 ON ((((x'')AND(((rt1.c3)OR(rt1.c2)))))OR(((((rt1.c5)OR(rt0.c3)))AND(rt1.c1)))) CROSS JOIN rt0 ON ((((NULL)LIKE(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM vt0, rt1, t0 LEFT OUTER JOIN t1 ON ((((x'')AND(((rt1.c3)OR(rt1.c2)))))OR(((((rt1.c5)OR(rt0.c3)))AND(rt1.c1)))) CROSS JOIN rt0 ON ((((NULL)LIKE(rt0.c1))) IS TRUE) WHERE ((+ ((('o\r')>>(x'')))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((('o\r')>>(x''))))) IS TRUE)  as count FROM vt0, rt1, t0 LEFT OUTER JOIN t1 ON ((((x'')AND(((rt1.c3)OR(rt1.c2)))))OR(((((rt1.c5)OR(rt0.c3)))AND(rt1.c1)))) CROSS JOIN rt0 ON ((((NULL)LIKE(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE CAST(vt0.c2 AS REAL)  WHEN UPPER(vt0.c0) THEN ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (NOT ('1997241253')) THEN json_array_length(rt1.c4, vt0.c2) WHEN ((rt1.c4)*(rt1.c0)) THEN ((vt0.c1)<<(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c2 AS REAL)  WHEN UPPER(vt0.c0) THEN ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (NOT ('1997241253')) THEN json_array_length(rt1.c4, vt0.c2) WHEN ((rt1.c4)*(rt1.c0)) THEN ((vt0.c1)<<(rt1.c3)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE CAST(vt0.c2 AS REAL)  WHEN UPPER(vt0.c0) THEN ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (NOT ('1997241253')) THEN json_array_length(rt1.c4, vt0.c2) WHEN ((rt1.c4)*(rt1.c0)) THEN ((vt0.c1)<<(rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c2 AS REAL)  WHEN UPPER(vt0.c0) THEN ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (NOT ('1997241253')) THEN json_array_length(rt1.c4, vt0.c2) WHEN ((rt1.c4)*(rt1.c0)) THEN ((vt0.c1)<<(rt1.c3)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM t1, vt0, t0, rt0, rt1 WHERE ((((rt1.c4, rt1.c1, rt1.c3)) BETWEEN ((TYPEOF(DISTINCT rt1.c3), ((((((((((((t0.c0)AND(rt0.c2)))AND(rt1.c0)))AND(rt0.c3)))AND(t0.c0)))AND(rt0.c3)))AND(rt1.c5)), CAST(rt1.c5 AS INTEGER))) AND ((CAST(rt0.c0 AS NUMERIC), CAST(rt1.c2 AS NUMERIC), '1581380302'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4, rt1.c1, rt1.c3)) BETWEEN ((TYPEOF(DISTINCT rt1.c3), ((((((((((((t0.c0)AND(rt0.c2)))AND(rt1.c0)))AND(rt0.c3)))AND(t0.c0)))AND(rt0.c3)))AND(rt1.c5)), CAST(rt1.c5 AS INTEGER))) AND ((CAST(rt0.c0 AS NUMERIC), CAST(rt1.c2 AS NUMERIC), '1581380302')))) IS TRUE)  as count FROM t1, vt0, t0, rt0, rt1);
SELECT COUNT(*) FROM t1, vt0, t0, rt0, rt1 WHERE ((((rt1.c4, rt1.c1, rt1.c3)) BETWEEN ((TYPEOF(DISTINCT rt1.c3), ((((((((((((t0.c0)AND(rt0.c2)))AND(rt1.c0)))AND(rt0.c3)))AND(t0.c0)))AND(rt0.c3)))AND(rt1.c5)), CAST(rt1.c5 AS INTEGER))) AND ((CAST(rt0.c0 AS NUMERIC), CAST(rt1.c2 AS NUMERIC), '1581380302'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4, rt1.c1, rt1.c3)) BETWEEN ((TYPEOF(DISTINCT rt1.c3), ((((((((((((t0.c0)AND(rt0.c2)))AND(rt1.c0)))AND(rt0.c3)))AND(t0.c0)))AND(rt0.c3)))AND(rt1.c5)), CAST(rt1.c5 AS INTEGER))) AND ((CAST(rt0.c0 AS NUMERIC), CAST(rt1.c2 AS NUMERIC), '1581380302')))) IS TRUE)  as count FROM t1, vt0, t0, rt0, rt1);
SELECT COUNT(*) FROM t1, vt0, t0, rt0, rt1 WHERE ((((rt1.c4, rt1.c1, rt1.c3)) BETWEEN ((TYPEOF(DISTINCT rt1.c3), ((((((((((((t0.c0)AND(rt0.c2)))AND(rt1.c0)))AND(rt0.c3)))AND(t0.c0)))AND(rt0.c3)))AND(rt1.c5)), CAST(rt1.c5 AS INTEGER))) AND ((CAST(rt0.c0 AS NUMERIC), CAST(rt1.c2 AS NUMERIC), '1581380302'))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c56)%(rt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (t0.c56)));
SELECT SUM(count) FROM (SELECT ((((((t0.c56)%(rt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (t0.c56))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c56)%(rt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (t0.c56)));
SELECT SUM(count) FROM (SELECT ((((((t0.c56)%(rt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (t0.c56))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((t0.c56)%(rt0.c1))) BETWEEN (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 END) AND (t0.c56)));
SELECT * FROM rt0, vt0, t1, t0 WHERE (((((((((((((((t0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) ORDER BY LIKE(((rt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), (((t0.c56)) BETWEEN ((t0.c0)) AND ((t1.c0))), '+') DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t1, t0 ORDER BY LIKE(((rt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), (((t0.c56)) BETWEEN ((t0.c0)) AND ((t1.c0))), '+') DESC);
SELECT * FROM rt0, vt0, t1, t0 WHERE (((((((((((((((t0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) ORDER BY LIKE(((rt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), (((t0.c56)) BETWEEN ((t0.c0)) AND ((t1.c0))), '+') DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t1, t0 ORDER BY LIKE(((rt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), (((t0.c56)) BETWEEN ((t0.c0)) AND ((t1.c0))), '+') DESC);
SELECT * FROM rt0, vt0, t1, t0 WHERE (((((((((((((((t0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) ORDER BY LIKE(((rt0.c0) BETWEEN (t0.c0) AND (vt0.c0)), (((t0.c56)) BETWEEN ((t0.c0)) AND ((t1.c0))), '+') DESC;
SELECT ALL * FROM rt0, vt0, t1, rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t1, rt1);
SELECT ALL * FROM rt0, vt0, t1, rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t1, rt1);
SELECT ALL * FROM rt0, vt0, t1, rt1 WHERE (CAST(rt1.c1 COLLATE BINARY AS BLOB));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c3)))))) ORDER BY (+ (((vt0.c1)+(vt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (+ (((vt0.c1)+(vt0.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c3)))))) ORDER BY (+ (((vt0.c1)+(vt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (+ (((vt0.c1)+(vt0.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c3)))))) ORDER BY (+ (((vt0.c1)+(vt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (((((x'')&(vt0.c2))) BETWEEN ((((x''))!=((vt0.c0)))) AND (((vt0.c2)>>(x'')))));
SELECT SUM(count) FROM (SELECT ((((((x'')&(vt0.c2))) BETWEEN ((((x''))!=((vt0.c0)))) AND (((vt0.c2)>>(x''))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')&(vt0.c2))) BETWEEN ((((x''))!=((vt0.c0)))) AND (((vt0.c2)>>(x'')))));
SELECT SUM(count) FROM (SELECT ((((((x'')&(vt0.c2))) BETWEEN ((((x''))!=((vt0.c0)))) AND (((vt0.c2)>>(x''))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'')&(vt0.c2))) BETWEEN ((((x''))!=((vt0.c0)))) AND (((vt0.c2)>>(x'')))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CASE ((rt0.c2)>(rt0.c2))  WHEN ((vt0.c0)*(rt0.c1)) THEN ((((rt1.c2)OR(rt0.c3)))OR(rt1.c2)) ELSE ((vt0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)>(rt0.c2))  WHEN ((vt0.c0)*(rt0.c1)) THEN ((((rt1.c2)OR(rt0.c3)))OR(rt1.c2)) ELSE ((vt0.c2) IS TRUE) END) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CASE ((rt0.c2)>(rt0.c2))  WHEN ((vt0.c0)*(rt0.c1)) THEN ((((rt1.c2)OR(rt0.c3)))OR(rt1.c2)) ELSE ((vt0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)>(rt0.c2))  WHEN ((vt0.c0)*(rt0.c1)) THEN ((((rt1.c2)OR(rt0.c3)))OR(rt1.c2)) ELSE ((vt0.c2) IS TRUE) END) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CASE ((rt0.c2)>(rt0.c2))  WHEN ((vt0.c0)*(rt0.c1)) THEN ((((rt1.c2)OR(rt0.c3)))OR(rt1.c2)) ELSE ((vt0.c2) IS TRUE) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (0.36775952972361736) AND (rt0.c3)) AS TEXT)) ORDER BY (- (rt0.c2));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (0.36775952972361736) AND (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (0.36775952972361736) AND (rt0.c3)) AS TEXT)) ORDER BY (- (rt0.c2));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (0.36775952972361736) AND (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (0.36775952972361736) AND (rt0.c3)) AS TEXT)) ORDER BY (- (rt0.c2));
SELECT COUNT(*) FROM rt0, t0, vt0, t1 WHERE (((t0.c56)>=(t0.c56)) COLLATE BINARY) ORDER BY ((((t0.c0)AND(UNLIKELY(DISTINCT '0.04389113058024241'))))AND(((rt0.c1)*(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c56)>=(t0.c56)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0, t1 ORDER BY ((((t0.c0)AND(UNLIKELY(DISTINCT '0.04389113058024241'))))AND(((rt0.c1)*(vt0.c0)))));
SELECT COUNT(*) FROM rt0, t0, vt0, t1 WHERE (((t0.c56)>=(t0.c56)) COLLATE BINARY) ORDER BY ((((t0.c0)AND(UNLIKELY(DISTINCT '0.04389113058024241'))))AND(((rt0.c1)*(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c56)>=(t0.c56)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt0, t1 ORDER BY ((((t0.c0)AND(UNLIKELY(DISTINCT '0.04389113058024241'))))AND(((rt0.c1)*(vt0.c0)))));
SELECT COUNT(*) FROM rt0, t0, vt0, t1 WHERE (((t0.c56)>=(t0.c56)) COLLATE BINARY) ORDER BY ((((t0.c0)AND(UNLIKELY(DISTINCT '0.04389113058024241'))))AND(((rt0.c1)*(vt0.c0))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE NULL  WHEN CASE WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((x'')-(vt0.c1)) WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN 0x5e41f2ce THEN rt0.c2 END THEN rt0.c2 COLLATE NOCASE WHEN (~ (rt0.c2)) THEN CAST(vt0.c1 AS TEXT) END LEFT OUTER JOIN vt0 ON ((CASE WHEN NULL THEN vt0.c2 ELSE rt0.c0 END) IS TRUE) WHERE (((((('P<'))>=((t0.c56))))<=(t0.c0 COLLATE RTRIM))) ORDER BY ((NULL)>>((- (rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((('P<'))>=((t0.c56))))<=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE NULL  WHEN CASE WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((x'')-(vt0.c1)) WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN 0x5e41f2ce THEN rt0.c2 END THEN rt0.c2 COLLATE NOCASE WHEN (~ (rt0.c2)) THEN CAST(vt0.c1 AS TEXT) END LEFT OUTER JOIN vt0 ON ((CASE WHEN NULL THEN vt0.c2 ELSE rt0.c0 END) IS TRUE) ORDER BY ((NULL)>>((- (rt0.c3)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE NULL  WHEN CASE WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((x'')-(vt0.c1)) WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN 0x5e41f2ce THEN rt0.c2 END THEN rt0.c2 COLLATE NOCASE WHEN (~ (rt0.c2)) THEN CAST(vt0.c1 AS TEXT) END LEFT OUTER JOIN vt0 ON ((CASE WHEN NULL THEN vt0.c2 ELSE rt0.c0 END) IS TRUE) WHERE (((((('P<'))>=((t0.c56))))<=(t0.c0 COLLATE RTRIM))) ORDER BY ((NULL)>>((- (rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((('P<'))>=((t0.c56))))<=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE NULL  WHEN CASE WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((x'')-(vt0.c1)) WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN 0x5e41f2ce THEN rt0.c2 END THEN rt0.c2 COLLATE NOCASE WHEN (~ (rt0.c2)) THEN CAST(vt0.c1 AS TEXT) END LEFT OUTER JOIN vt0 ON ((CASE WHEN NULL THEN vt0.c2 ELSE rt0.c0 END) IS TRUE) ORDER BY ((NULL)>>((- (rt0.c3)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE NULL  WHEN CASE WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c3 END THEN ((x'')-(vt0.c1)) WHEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN 0x5e41f2ce THEN rt0.c2 END THEN rt0.c2 COLLATE NOCASE WHEN (~ (rt0.c2)) THEN CAST(vt0.c1 AS TEXT) END LEFT OUTER JOIN vt0 ON ((CASE WHEN NULL THEN vt0.c2 ELSE rt0.c0 END) IS TRUE) WHERE (((((('P<'))>=((t0.c56))))<=(t0.c0 COLLATE RTRIM))) ORDER BY ((NULL)>>((- (rt0.c3)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c1)))>>((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.5508092202043336))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c1)))>>((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.5508092202043336)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c1)))>>((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.5508092202043336))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)/(rt0.c1)))>>((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.5508092202043336)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)/(rt0.c1)))>>((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.5508092202043336))))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)IS NOT(rt0.c1)))AND(((x'27101f8aac7c')||(rt0.c1)))))OR((rt0.c2 IN (rt0.c3, rt0.c2))))) ORDER BY rt0.c1 ASC, CAST(rt0.c2 AS NUMERIC) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UPPER(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)IS NOT(rt0.c1)))AND(((x'27101f8aac7c')||(rt0.c1)))))OR((rt0.c2 IN (rt0.c3, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, CAST(rt0.c2 AS NUMERIC) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UPPER(rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c1)IS NOT(rt0.c1)))AND(((x'27101f8aac7c')||(rt0.c1)))))OR((rt0.c2 IN (rt0.c3, rt0.c2))))) ORDER BY rt0.c1 ASC, CAST(rt0.c2 AS NUMERIC) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UPPER(rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)IS NOT(rt0.c1)))AND(((x'27101f8aac7c')||(rt0.c1)))))OR((rt0.c2 IN (rt0.c3, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC, CAST(rt0.c2 AS NUMERIC) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UPPER(rt0.c2))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c1)IS NOT(rt0.c1)))AND(((x'27101f8aac7c')||(rt0.c1)))))OR((rt0.c2 IN (rt0.c3, rt0.c2))))) ORDER BY rt0.c1 ASC, CAST(rt0.c2 AS NUMERIC) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (UPPER(rt0.c2))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, rt1, t0, rt0 WHERE (((rt0.c1)OR(((rt0.c3)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR(((rt0.c3)IS(t0.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0, rt1, t0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt1, t0, rt0 WHERE (((rt0.c1)OR(((rt0.c3)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR(((rt0.c3)IS(t0.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0, rt1, t0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt1, t0, rt0 WHERE (((rt0.c1)OR(((rt0.c3)IS(t0.c0)))));
SELECT COUNT(*) FROM t0, t1, vt0, rt0, rt1 WHERE (((UNICODE(rt1.c0))=(((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNICODE(rt1.c0))=(((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0, t1, vt0, rt0, rt1);
SELECT COUNT(*) FROM t0, t1, vt0, rt0, rt1 WHERE (((UNICODE(rt1.c0))=(((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNICODE(rt1.c0))=(((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0, t1, vt0, rt0, rt1);
SELECT COUNT(*) FROM t0, t1, vt0, rt0, rt1 WHERE (((UNICODE(rt1.c0))=(((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c0)))));
SELECT * FROM rt1, t1, rt0 WHERE ((((rt1.c3 COLLATE RTRIM))>((((rt1.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY (((((((((t1.c0 IN (rt0.c1, rt1.c5)))AND(NULL COLLATE NOCASE)))OR(rt1.c2 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)))OR(((t1.c0)>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 COLLATE RTRIM))>((((rt1.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (((((((((t1.c0 IN (rt0.c1, rt1.c5)))AND(NULL COLLATE NOCASE)))OR(rt1.c2 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)))OR(((t1.c0)>(rt0.c0)))));
SELECT * FROM rt1, t1, rt0 WHERE ((((rt1.c3 COLLATE RTRIM))>((((rt1.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY (((((((((t1.c0 IN (rt0.c1, rt1.c5)))AND(NULL COLLATE NOCASE)))OR(rt1.c2 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)))OR(((t1.c0)>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 COLLATE RTRIM))>((((rt1.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (((((((((t1.c0 IN (rt0.c1, rt1.c5)))AND(NULL COLLATE NOCASE)))OR(rt1.c2 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)))OR(((t1.c0)>(rt0.c0)))));
SELECT * FROM rt1, t1, rt0 WHERE ((((rt1.c3 COLLATE RTRIM))>((((rt1.c3) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY (((((((((t1.c0 IN (rt0.c1, rt1.c5)))AND(NULL COLLATE NOCASE)))OR(rt1.c2 COLLATE BINARY)))AND(rt0.c2 COLLATE BINARY)))OR(((t1.c0)>(rt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c0))) ORDER BY '\X' ASC  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0))) IS TRUE)  as count FROM t1 ORDER BY '\X' ASC  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c0))) ORDER BY '\X' ASC  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0))) IS TRUE)  as count FROM t1 ORDER BY '\X' ASC  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c0))) ORDER BY '\X' ASC  NULLS LAST, CAST((t1.c0 IN ()) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((rt1.c5)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((rt1.c4 COLLATE NOCASE))) FULL OUTER JOIN rt1 ON ((rt1.c5 COLLATE RTRIM) NOT NULL) WHERE (((((rt1.c1)>=(rt1.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)>=(rt1.c4))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((rt1.c5)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((rt1.c4 COLLATE NOCASE))) FULL OUTER JOIN rt1 ON ((rt1.c5 COLLATE RTRIM) NOT NULL));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((rt1.c5)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((rt1.c4 COLLATE NOCASE))) FULL OUTER JOIN rt1 ON ((rt1.c5 COLLATE RTRIM) NOT NULL) WHERE (((((rt1.c1)>=(rt1.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)>=(rt1.c4))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((rt1.c5)) NOT BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((rt1.c4 COLLATE NOCASE))) FULL OUTER JOIN rt1 ON ((rt1.c5 COLLATE RTRIM) NOT NULL));
SELECT * FROM t1, rt0, t0, vt0, rt1 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c0, '#^|?媀/l!', vt0.c1))=((rt1.c3, t0.c56, rt1.c4))) ELSE (x'' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c0, '#^|?媀/l!', vt0.c1))=((rt1.c3, t0.c56, rt1.c4))) ELSE (x'' IN ()) END) IS TRUE)  as count FROM t1, rt0, t0, vt0, rt1);
SELECT * FROM t1, rt0, t0, vt0, rt1 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c0, '#^|?媀/l!', vt0.c1))=((rt1.c3, t0.c56, rt1.c4))) ELSE (x'' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c0, '#^|?媀/l!', vt0.c1))=((rt1.c3, t0.c56, rt1.c4))) ELSE (x'' IN ()) END) IS TRUE)  as count FROM t1, rt0, t0, vt0, rt1);
SELECT * FROM t1, rt0, t0, vt0, rt1 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((rt1.c0, '#^|?媀/l!', vt0.c1))=((rt1.c3, t0.c56, rt1.c4))) ELSE (x'' IN ()) END);
SELECT COUNT(*) FROM t0, t1, vt0 WHERE (json(((((((((t1.c0)AND(t0.c56)))OR(vt0.c1)))AND(vt0.c2)))OR(t0.c0)))) ORDER BY CAST(json_object(t1.c0, t0.c0) AS BLOB) ASC, (((('[䅐')!=(vt0.c0))) IS FALSE)  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json(((((((((t1.c0)AND(t0.c56)))OR(vt0.c1)))AND(vt0.c2)))OR(t0.c0)))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY CAST(json_object(t1.c0, t0.c0) AS BLOB) ASC, (((('[䅐')<>(vt0.c0))) IS FALSE)  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (t1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, t1, vt0 WHERE (json(((((((((t1.c0)AND(t0.c56)))OR(vt0.c1)))AND(vt0.c2)))OR(t0.c0)))) ORDER BY CAST(json_object(t1.c0, t0.c0) AS BLOB) ASC, (((('[䅐')!=(vt0.c0))) IS FALSE)  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json(((((((((t1.c0)AND(t0.c56)))OR(vt0.c1)))AND(vt0.c2)))OR(t0.c0)))) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY CAST(json_object(t1.c0, t0.c0) AS BLOB) ASC, (((('[䅐')<>(vt0.c0))) IS FALSE)  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (t1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, rt0, vt0, t1 WHERE (((UPPER(0.7219552554690128)) IS TRUE)) ORDER BY (((rt1.c1)IS(t1.c0)) IN (((rt1.c0) NOT NULL), (rt1.c3 IN ()))) ASC  NULLS LAST, '+⃱- ';
SELECT SUM(count) FROM (SELECT ((((UPPER(0.7219552554690128)) IS TRUE)) IS TRUE)  as count FROM t0, rt1, rt0, vt0, t1 ORDER BY (((rt1.c1)IS(t1.c0)) IN (((rt1.c0) NOT NULL), (rt1.c3 IN ()))) ASC  NULLS LAST, '+⃱- ');
SELECT COUNT(*) FROM t0, rt1, rt0, vt0, t1 WHERE (((UPPER(0.7219552554690128)) IS TRUE)) ORDER BY (((rt1.c1)IS(t1.c0)) IN (((rt1.c0) NOT NULL), (rt1.c3 IN ()))) ASC  NULLS LAST, '+⃱- ';
SELECT SUM(count) FROM (SELECT ((((UPPER(0.7219552554690128)) IS TRUE)) IS TRUE)  as count FROM t0, rt1, rt0, vt0, t1 ORDER BY (((rt1.c1)IS(t1.c0)) IN (((rt1.c0) NOT NULL), (rt1.c3 IN ()))) ASC  NULLS LAST, '+⃱- ');
SELECT COUNT(*) FROM t0, rt1, rt0, vt0, t1 WHERE (((UPPER(0.7219552554690128)) IS TRUE)) ORDER BY (((rt1.c1)IS(t1.c0)) IN (((rt1.c0) NOT NULL), (rt1.c3 IN ()))) ASC  NULLS LAST, '+⃱- ';
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (((t0.c56 COLLATE RTRIM) BETWEEN (((t1.c0) NOT BETWEEN (x'0098') AND (t0.c56))) AND (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((t0.c56 COLLATE RTRIM) BETWEEN (((t1.c0) NOT BETWEEN (x'0098') AND (t0.c56))) AND (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (((t0.c56 COLLATE RTRIM) BETWEEN (((t1.c0) NOT BETWEEN (x'0098') AND (t0.c56))) AND (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((t0.c56 COLLATE RTRIM) BETWEEN (((t1.c0) NOT BETWEEN (x'0098') AND (t0.c56))) AND (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT COUNT(*) FROM t0, rt0, t1 WHERE (((t0.c56 COLLATE RTRIM) BETWEEN (((t1.c0) NOT BETWEEN (x'0098') AND (t0.c56))) AND (((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))));
SELECT COUNT(*) FROM vt0, t1, rt0, rt1, t0 WHERE (((((((((NULL)OR(((rt1.c2)<('')))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(((rt1.c1) BETWEEN (t0.c0) AND (rt1.c4)))))AND((((rt1.c5))>((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(((rt1.c2)<('')))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(((rt1.c1) BETWEEN (t0.c0) AND (rt1.c4)))))AND((((rt1.c5))>((rt1.c3)))))) IS TRUE)  as count FROM vt0, t1, rt0, rt1, t0);
SELECT COUNT(*) FROM vt0, t1, rt0, rt1, t0 WHERE (((((((((NULL)OR(((rt1.c2)<('')))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(((rt1.c1) BETWEEN (t0.c0) AND (rt1.c4)))))AND((((rt1.c5))>((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(((rt1.c2)<('')))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(((rt1.c1) BETWEEN (t0.c0) AND (rt1.c4)))))AND((((rt1.c5))>((rt1.c3)))))) IS TRUE)  as count FROM vt0, t1, rt0, rt1, t0);
SELECT COUNT(*) FROM vt0, t1, rt0, rt1, t0 WHERE (((((((((NULL)OR(((rt1.c2)<('')))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(((rt1.c1) BETWEEN (t0.c0) AND (rt1.c4)))))AND((((rt1.c5))>((rt1.c3))))));
SELECT ALL * FROM t0, t1 WHERE ((~ (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE ((~ (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, t1);
SELECT ALL * FROM t0, t1 WHERE ((~ (t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((t1.c0 IN ()))) ORDER BY ((((t1.c0)<=(t1.c0)))>=((NOT (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((t1.c0 IN ()))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)<=(t1.c0)))>=((NOT (t1.c0)))) DESC);
SELECT COUNT(*) FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((t1.c0 IN ()))) ORDER BY ((((t1.c0)<=(t1.c0)))>=((NOT (t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED((t1.c0 IN ()))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)<=(t1.c0)))>=((NOT (t1.c0)))) DESC);
SELECT COUNT(*) FROM t1 WHERE (SQLITE_COMPILEOPTION_USED((t1.c0 IN ()))) ORDER BY ((((t1.c0)<=(t1.c0)))>=((NOT (t1.c0)))) DESC;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)LIKE(t1.c0))) ORDER BY 0.1930425889647378;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE NOCASE)LIKE(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY 0.1930425889647378);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)LIKE(t1.c0))) ORDER BY 0.1930425889647378;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE NOCASE)LIKE(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY 0.1930425889647378);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE NOCASE)LIKE(t1.c0))) ORDER BY 0.1930425889647378;
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE ((((((rt0.c0, '1241307079', rt0.c0))==((rt0.c1, rt0.c0, rt0.c0))))|(((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, '1241307079', rt0.c0))==((rt0.c1, rt0.c0, rt0.c0))))|(((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (~ (rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE ((((((rt0.c0, '1241307079', rt0.c0))==((rt0.c1, rt0.c0, rt0.c0))))|(((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, '1241307079', rt0.c0))==((rt0.c1, rt0.c0, rt0.c0))))|(((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (~ (rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 INNER JOIN t1 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE ((((((rt0.c0, '1241307079', rt0.c0))==((rt0.c1, rt0.c0, rt0.c0))))|(((rt0.c2)LIKE(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((CASE rt1.c1  WHEN rt1.c2 THEN 0.44247825688411124 END)OR(RTRIM(t1.c0))))AND((NOT (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c1  WHEN rt1.c2 THEN 0.44247825688411124 END)OR(RTRIM(t1.c0))))AND((NOT (rt1.c5))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((CASE rt1.c1  WHEN rt1.c2 THEN 0.44247825688411124 END)OR(RTRIM(t1.c0))))AND((NOT (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c1  WHEN rt1.c2 THEN 0.44247825688411124 END)OR(RTRIM(t1.c0))))AND((NOT (rt1.c5))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (((((CASE rt1.c1  WHEN rt1.c2 THEN 0.44247825688411124 END)OR(RTRIM(t1.c0))))AND((NOT (rt1.c5)))));
SELECT ALL COUNT(*) FROM t0, t1, vt0, rt0, rt1 WHERE (CAST(((((((((NULL)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((NULL)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, t1, vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, t1, vt0, rt0, rt1 WHERE (CAST(((((((((NULL)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((NULL)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0, t1, vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, t1, vt0, rt0, rt1 WHERE (CAST(((((((((NULL)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c3);
SELECT * FROM t0, rt0 WHERE (LOWER(json_object(rt0.c3, rt0.c3, rt0.c2, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(json_object(rt0.c3, rt0.c3, rt0.c2, rt0.c3))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (LOWER(json_object(rt0.c3, rt0.c3, rt0.c2, rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(json_object(rt0.c3, rt0.c3, rt0.c2, rt0.c3))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN ((((rt0.c0))<=((rt0.c0)))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) NOT BETWEEN ((((rt0.c0))<=((rt0.c0)))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN ((((rt0.c0))<=((rt0.c0)))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1))) NOT BETWEEN ((((rt0.c0))<=((rt0.c0)))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN ((((rt0.c0))<=((rt0.c0)))) AND ((rt0.c0 IN ()))));
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN ((rt1.c2)>(rt1.c2)) THEN CAST(1545005377 AS BLOB) ELSE rt1.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) IS FALSE)  WHEN ((rt1.c2)>(rt1.c2)) THEN CAST(1545005377 AS BLOB) ELSE rt1.c3 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt1, vt0, rt0);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN ((rt1.c2)>(rt1.c2)) THEN CAST(1545005377 AS BLOB) ELSE rt1.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) IS FALSE)  WHEN ((rt1.c2)>(rt1.c2)) THEN CAST(1545005377 AS BLOB) ELSE rt1.c3 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt1, vt0, rt0);
SELECT ALL * FROM t0, rt1, vt0, rt0 WHERE (CASE ((rt0.c1) IS FALSE)  WHEN ((rt1.c2)>(rt1.c2)) THEN CAST(1545005377 AS BLOB) ELSE rt1.c3 COLLATE NOCASE END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((vt0.c2)OR(t1.c0)))AND(t0.c0)))OR((('wp')>=(vt0.c2)))))OR(x'')) LEFT OUTER JOIN t0 ON ((vt0.c2) BETWEEN (((t1.c0)IS(NULL))) AND ((t1.c0 IN ()))) WHERE ('') ORDER BY (- (CASE t1.c0  WHEN t0.c56 THEN '1495376050' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '-704258751' ELSE vt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((vt0.c2)OR(t1.c0)))AND(t0.c0)))OR((('wp')>=(vt0.c2)))))OR(x'')) LEFT OUTER JOIN t0 ON ((vt0.c2) BETWEEN (((t1.c0)IS(NULL))) AND ((t1.c0 IN ()))) ORDER BY (- (CASE t1.c0  WHEN t0.c56 THEN '1495376050' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '-704258751' ELSE vt0.c2 END)) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((vt0.c2)OR(t1.c0)))AND(t0.c0)))OR((('wp')>=(vt0.c2)))))OR(x'')) LEFT OUTER JOIN t0 ON ((vt0.c2) BETWEEN (((t1.c0)IS(NULL))) AND ((t1.c0 IN ()))) WHERE ('') ORDER BY (- (CASE t1.c0  WHEN t0.c56 THEN '1495376050' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '-704258751' ELSE vt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((((((((vt0.c2)OR(t1.c0)))AND(t0.c0)))OR((('wp')>=(vt0.c2)))))OR(x'')) LEFT OUTER JOIN t0 ON ((vt0.c2) BETWEEN (((t1.c0)IS(NULL))) AND ((t1.c0 IN ()))) ORDER BY (- (CASE t1.c0  WHEN t0.c56 THEN '1495376050' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '-704258751' ELSE vt0.c2 END)) DESC);
SELECT * FROM t1, t0 WHERE (CASE ((t0.c56) BETWEEN (t0.c0) AND (t1.c0))  WHEN t0.c56 COLLATE BINARY THEN UPPER(t0.c56) ELSE CAST(t0.c0 AS BLOB) END) ORDER BY CAST(t1.c0 COLLATE NOCASE AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c56) BETWEEN (t0.c0) AND (t1.c0))  WHEN t0.c56 COLLATE BINARY THEN UPPER(t0.c56) ELSE CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(t1.c0 COLLATE NOCASE AS NUMERIC)  NULLS LAST);
SELECT * FROM t1, t0 WHERE (CASE ((t0.c56) BETWEEN (t0.c0) AND (t1.c0))  WHEN t0.c56 COLLATE BINARY THEN UPPER(t0.c56) ELSE CAST(t0.c0 AS BLOB) END) ORDER BY CAST(t1.c0 COLLATE NOCASE AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c56) BETWEEN (t0.c0) AND (t1.c0))  WHEN t0.c56 COLLATE BINARY THEN UPPER(t0.c56) ELSE CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t1, t0 ORDER BY CAST(t1.c0 COLLATE NOCASE AS NUMERIC)  NULLS LAST);
SELECT * FROM t1, t0 WHERE (CASE ((t0.c56) BETWEEN (t0.c0) AND (t1.c0))  WHEN t0.c56 COLLATE BINARY THEN UPPER(t0.c56) ELSE CAST(t0.c0 AS BLOB) END) ORDER BY CAST(t1.c0 COLLATE NOCASE AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt0, t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c3)))AND(rt1.c3)))OR(CASE rt1.c0  WHEN rt0.c0 THEN '' ELSE '979963002' END)))OR(CAST(rt0.c1 AS NUMERIC))) INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE (((((((rt0.c0)<=(rt1.c5)))AND(CAST(vt0.c0 AS REAL))))OR(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)<=(rt1.c5)))AND(CAST(vt0.c0 AS REAL))))OR(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM t1, rt0, t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c3)))AND(rt1.c3)))OR(CASE rt1.c0  WHEN rt0.c0 THEN '' ELSE '979963002' END)))OR(CAST(rt0.c1 AS NUMERIC))) INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, rt0, t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c3)))AND(rt1.c3)))OR(CASE rt1.c0  WHEN rt0.c0 THEN '' ELSE '979963002' END)))OR(CAST(rt0.c1 AS NUMERIC))) INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE (((((((rt0.c0)<=(rt1.c5)))AND(CAST(vt0.c0 AS REAL))))OR(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)<=(rt1.c5)))AND(CAST(vt0.c0 AS REAL))))OR(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM t1, rt0, t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c3)))AND(rt1.c3)))OR(CASE rt1.c0  WHEN rt0.c0 THEN '' ELSE '979963002' END)))OR(CAST(rt0.c1 AS NUMERIC))) INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, rt0, t0 RIGHT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c3)))AND(rt1.c3)))OR(CASE rt1.c0  WHEN rt0.c0 THEN '' ELSE '979963002' END)))OR(CAST(rt0.c1 AS NUMERIC))) INNER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE (((((((rt0.c0)<=(rt1.c5)))AND(CAST(vt0.c0 AS REAL))))OR(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1)))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (NOT (((t0.c56) NOT NULL))) INNER JOIN t1 ON '-1470147518' WHERE ((((t0.c56)) BETWEEN ((t0.c56 COLLATE RTRIM)) AND ((((((((((((((t1.c0)AND(vt0.c2)))AND(t0.c0)))AND(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(t0.c56)))))) ORDER BY (((((vt0.c1) ISNULL)))<=((((t0.c56)=('+⃱- '))))) DESC, vt0.c2 DESC, LTRIM((NOT (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56)) BETWEEN ((t0.c56 COLLATE RTRIM)) AND ((((((((((((((t1.c0)AND(vt0.c2)))AND(t0.c0)))AND(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(t0.c56)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (NOT (((t0.c56) NOT NULL))) INNER JOIN t1 ON '-1470147518' ORDER BY (((((vt0.c1) ISNULL)))<=((((t0.c56)=('+⃱- '))))) DESC, vt0.c2 DESC, LTRIM((NOT (vt0.c0))) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (NOT (((t0.c56) NOT NULL))) INNER JOIN t1 ON '-1470147518' WHERE ((((t0.c56)) BETWEEN ((t0.c56 COLLATE RTRIM)) AND ((((((((((((((t1.c0)AND(vt0.c2)))AND(t0.c0)))AND(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(t0.c56)))))) ORDER BY (((((vt0.c1) ISNULL)))<=((((t0.c56)=('+⃱- '))))) DESC, vt0.c2 DESC, LTRIM((NOT (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56)) BETWEEN ((t0.c56 COLLATE RTRIM)) AND ((((((((((((((t1.c0)AND(vt0.c2)))AND(t0.c0)))AND(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(t0.c56)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (NOT (((t0.c56) NOT NULL))) INNER JOIN t1 ON '-1470147518' ORDER BY (((((vt0.c1) ISNULL)))<=((((t0.c56)=('+⃱- '))))) DESC, vt0.c2 DESC, LTRIM((NOT (vt0.c0))) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (NOT (((t0.c56) NOT NULL))) INNER JOIN t1 ON '-1470147518' WHERE ((((t0.c56)) BETWEEN ((t0.c56 COLLATE RTRIM)) AND ((((((((((((((t1.c0)AND(vt0.c2)))AND(t0.c0)))AND(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(t0.c56)))))) ORDER BY (((((vt0.c1) ISNULL)))<=((((t0.c56)=('+⃱- '))))) DESC, vt0.c2 DESC, LTRIM((NOT (vt0.c0))) DESC;
SELECT COUNT(*) FROM rt1 WHERE (-1892805074 COLLATE NOCASE) ORDER BY CAST((rt1.c2 IN ()) AS TEXT) ASC, ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c3))) BETWEEN (LIKELY(rt1.c3)) AND (rt1.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1892805074 COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS TEXT) ASC, ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c3))) BETWEEN (LIKELY(rt1.c3)) AND (rt1.c3))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (-1892805074 COLLATE NOCASE) ORDER BY CAST((rt1.c2 IN ()) AS TEXT) ASC, ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c3))) BETWEEN (LIKELY(rt1.c3)) AND (rt1.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1892805074 COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS TEXT) ASC, ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c3))) BETWEEN (LIKELY(rt1.c3)) AND (rt1.c3))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (-1892805074 COLLATE NOCASE) ORDER BY CAST((rt1.c2 IN ()) AS TEXT) ASC, ((((((rt1.c4)AND(rt1.c4)))AND(rt1.c3))) BETWEEN (LIKELY(rt1.c3)) AND (rt1.c3))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, t1, t0, rt0 WHERE ((+ (((0.022408097788652714)OR(rt0.c2))))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS BLOB)  NULLS FIRST, ((((CASE t0.c56  WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)AND(-1991698195 COLLATE RTRIM)))OR((x'1c5e' IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.022408097788652714)OR(rt0.c2))))) IS TRUE)  as count FROM vt0, rt1, t1, t0, rt0 ORDER BY CAST(vt0.c1 COLLATE RTRIM AS BLOB)  NULLS FIRST, ((((CASE t0.c56  WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)AND(-1991698195 COLLATE RTRIM)))OR((x'1c5e' IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, t1, t0, rt0 WHERE ((+ (((0.022408097788652714)OR(rt0.c2))))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS BLOB)  NULLS FIRST, ((((CASE t0.c56  WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)AND(-1991698195 COLLATE RTRIM)))OR((x'1c5e' IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.022408097788652714)OR(rt0.c2))))) IS TRUE)  as count FROM vt0, rt1, t1, t0, rt0 ORDER BY CAST(vt0.c1 COLLATE RTRIM AS BLOB)  NULLS FIRST, ((((CASE t0.c56  WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)AND(-1991698195 COLLATE RTRIM)))OR((x'1c5e' IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, t1, t0, rt0 WHERE ((+ (((0.022408097788652714)OR(rt0.c2))))) ORDER BY CAST(vt0.c1 COLLATE RTRIM AS BLOB)  NULLS FIRST, ((((CASE t0.c56  WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)AND(-1991698195 COLLATE RTRIM)))OR((x'1c5e' IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (UPPER(CAST(NULL AS TEXT))) ORDER BY t1.c0 COLLATE RTRIM, ((t1.c0)>=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(NULL AS TEXT))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 COLLATE RTRIM, ((t1.c0)>=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (UPPER(CAST(NULL AS TEXT))) ORDER BY t1.c0 COLLATE RTRIM, ((t1.c0)>=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(NULL AS TEXT))) IS TRUE)  as count FROM t1 ORDER BY t1.c0 COLLATE RTRIM, ((t1.c0)>=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (UPPER(CAST(NULL AS TEXT))) ORDER BY t1.c0 COLLATE RTRIM, ((t1.c0)>=(t1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t1, vt0, t0 WHERE ((CASE WHEN t0.c56 THEN rt1.c0 ELSE rt1.c3 END IN ())) ORDER BY 0.826966584140224 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c56 THEN rt1.c0 ELSE rt1.c3 END IN ())) IS TRUE)  as count FROM rt1, t1, vt0, t0 ORDER BY 0.826966584140224 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1, vt0, t0 WHERE ((CASE WHEN t0.c56 THEN rt1.c0 ELSE rt1.c3 END IN ())) ORDER BY 0.826966584140224 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c56 THEN rt1.c0 ELSE rt1.c3 END IN ())) IS TRUE)  as count FROM rt1, t1, vt0, t0 ORDER BY 0.826966584140224 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1, vt0, t0 WHERE ((CASE WHEN t0.c56 THEN rt1.c0 ELSE rt1.c3 END IN ())) ORDER BY 0.826966584140224 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0, rt1, vt0 WHERE ('917177090' COLLATE BINARY) ORDER BY TRIM(DISTINCT ((rt0.c1)/(vt0.c0)), t1.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('917177090' COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, rt1, vt0 ORDER BY TRIM(DISTINCT ((rt0.c1)/(vt0.c0)), t1.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, rt1, vt0 WHERE ('917177090' COLLATE BINARY) ORDER BY TRIM(DISTINCT ((rt0.c1)/(vt0.c0)), t1.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('917177090' COLLATE BINARY) IS TRUE)  as count FROM t1, rt0, rt1, vt0 ORDER BY TRIM(DISTINCT ((rt0.c1)/(vt0.c0)), t1.c0 COLLATE RTRIM) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, rt1, vt0 WHERE ('917177090' COLLATE BINARY) ORDER BY TRIM(DISTINCT ((rt0.c1)/(vt0.c0)), t1.c0 COLLATE RTRIM) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE ((((((rt0.c2, rt0.c3, rt0.c0))==((t1.c0, 0.5456919036163619, rt0.c3))))<=(ABS(t0.c0)))) ORDER BY CASE WHEN (+ (rt0.c1)) THEN ((((t0.c0)AND(rt0.c3)))AND(t0.c56)) END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c3, rt0.c0))==((t1.c0, 0.5456919036163619, rt0.c3))))<=(ABS(t0.c0)))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY CASE WHEN (+ (rt0.c1)) THEN ((((t0.c0)AND(rt0.c3)))AND(t0.c56)) END);
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE ((((((rt0.c2, rt0.c3, rt0.c0))==((t1.c0, 0.5456919036163619, rt0.c3))))<=(ABS(t0.c0)))) ORDER BY CASE WHEN (+ (rt0.c1)) THEN ((((t0.c0)AND(rt0.c3)))AND(t0.c56)) END;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c3, rt0.c0))==((t1.c0, 0.5456919036163619, rt0.c3))))<=(ABS(t0.c0)))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY CASE WHEN (+ (rt0.c1)) THEN ((((t0.c0)AND(rt0.c3)))AND(t0.c56)) END);
SELECT ALL COUNT(*) FROM t1, rt0, t0 WHERE ((((((rt0.c2, rt0.c3, rt0.c0))==((t1.c0, 0.5456919036163619, rt0.c3))))<=(ABS(t0.c0)))) ORDER BY CASE WHEN (+ (rt0.c1)) THEN ((((t0.c0)AND(rt0.c3)))AND(t0.c56)) END;
SELECT ALL COUNT(*) FROM rt1, t0, rt0, t1 WHERE (((x'5ebf')+(((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((x'5ebf')+(((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c5))))) IS TRUE)  as count FROM rt1, t0, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, t0, rt0, t1 WHERE (((x'5ebf')+(((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((x'5ebf')+(((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c5))))) IS TRUE)  as count FROM rt1, t0, rt0, t1);
SELECT ALL COUNT(*) FROM rt1, t0, rt0, t1 WHERE (((x'5ebf')+(((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c5)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (-183300048);
SELECT SUM(count) FROM (SELECT ALL ((-183300048) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (-183300048);
SELECT SUM(count) FROM (SELECT ALL ((-183300048) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (-183300048);
SELECT * FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE x''  WHEN ((rt0.c1)-(rt0.c3)) THEN '' END INNER JOIN t1 ON (((((t0.c0)<<(rt1.c4))))>=((((rt0.c0)<(rt1.c5))))) WHERE (((json_valid(rt1.c2))=(((((t0.c0)OR(rt1.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt1.c2))=(((((t0.c0)OR(rt1.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE x''  WHEN ((rt0.c1)-(rt0.c3)) THEN '' END INNER JOIN t1 ON (((((t0.c0)<<(rt1.c4))))>=((((rt0.c0)<(rt1.c5))))));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE x''  WHEN ((rt0.c1)-(rt0.c3)) THEN '' END INNER JOIN t1 ON (((((t0.c0)<<(rt1.c4))))>=((((rt0.c0)<(rt1.c5))))) WHERE (((json_valid(rt1.c2))=(((((t0.c0)OR(rt1.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt1.c2))=(((((t0.c0)OR(rt1.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE x''  WHEN ((rt0.c1)-(rt0.c3)) THEN '' END INNER JOIN t1 ON (((((t0.c0)<<(rt1.c4))))>=((((rt0.c0)<(rt1.c5))))));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE x''  WHEN ((rt0.c1)-(rt0.c3)) THEN '' END INNER JOIN t1 ON (((((t0.c0)<<(rt1.c4))))>=((((rt0.c0)<(rt1.c5))))) WHERE (((json_valid(rt1.c2))=(((((t0.c0)OR(rt1.c1)))AND(rt0.c2)))));
SELECT ALL * FROM t1, rt1 WHERE ((((rt1.c5)AND(rt1.c1)) IN ())) ORDER BY (CAST(rt1.c0 AS REAL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)AND(rt1.c1)) IN ())) IS TRUE)  as count FROM t1, rt1 ORDER BY (CAST(rt1.c0 AS REAL) IN ())  NULLS LAST);
SELECT ALL * FROM t1, rt1 WHERE ((((rt1.c5)AND(rt1.c1)) IN ())) ORDER BY (CAST(rt1.c0 AS REAL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)AND(rt1.c1)) IN ())) IS TRUE)  as count FROM t1, rt1 ORDER BY (CAST(rt1.c0 AS REAL) IN ())  NULLS LAST);
SELECT ALL * FROM t1, rt1 WHERE ((((rt1.c5)AND(rt1.c1)) IN ())) ORDER BY (CAST(rt1.c0 AS REAL) IN ())  NULLS LAST;
SELECT ALL * FROM t0, vt0, t1, rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, vt0, t1, rt0, rt1);
SELECT ALL * FROM t0, vt0, t1, rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, vt0, t1, rt0, rt1);
SELECT ALL * FROM t0, vt0, t1, rt0, rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM t1, vt0 WHERE (ABS(CASE WHEN vt0.c2 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CASE WHEN vt0.c2 THEN t1.c0 END)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (ABS(CASE WHEN vt0.c2 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ABS(CASE WHEN vt0.c2 THEN t1.c0 END)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (ABS(CASE WHEN vt0.c2 THEN t1.c0 END));
SELECT * FROM rt0, rt1, t1, t0 WHERE ((((rt1.c3) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c3) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, rt1, t1, t0);
SELECT * FROM rt0, rt1, t1, t0 WHERE ((((rt1.c3) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c3) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, rt1, t1, t0);
SELECT * FROM rt0, rt1, t1, t0 WHERE ((((rt1.c3) IS TRUE) IN ()));
SELECT * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 COLLATE RTRIM AS REAL) RIGHT OUTER JOIN rt1 ON (('-1898959806' COLLATE RTRIM)<>(json_insert(rt0.c2, vt0.c0, vt0.c1, vt0.c2, rt0.c2))) WHERE (CASE (rt1.c2 IN (rt0.c3, rt0.c2))  WHEN CASE vt0.c2  WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN 0.5626845780478318 WHEN 0.8586217756866799 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c0 ELSE rt1.c0 END THEN rt1.c1 ELSE SQLITE_COMPILEOPTION_GET(rt1.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c2 IN (rt0.c3, rt0.c2))  WHEN CASE vt0.c2  WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN 0.5626845780478318 WHEN 0.8586217756866799 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c0 ELSE rt1.c0 END THEN rt1.c1 ELSE SQLITE_COMPILEOPTION_GET(rt1.c5) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 COLLATE RTRIM AS REAL) RIGHT OUTER JOIN rt1 ON (('-1898959806' COLLATE RTRIM)<>(json_insert(rt0.c2, vt0.c0, vt0.c1, vt0.c2, rt0.c2))));
SELECT * FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 COLLATE RTRIM AS REAL) RIGHT OUTER JOIN rt1 ON (('-1898959806' COLLATE RTRIM)<>(json_insert(rt0.c2, vt0.c0, vt0.c1, vt0.c2, rt0.c2))) WHERE (CASE (rt1.c2 IN (rt0.c3, rt0.c2))  WHEN CASE vt0.c2  WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN 0.5626845780478318 WHEN 0.8586217756866799 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c0 ELSE rt1.c0 END THEN rt1.c1 ELSE SQLITE_COMPILEOPTION_GET(rt1.c5) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c2 IN (rt0.c3, rt0.c2))  WHEN CASE vt0.c2  WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN 0.5626845780478318 WHEN 0.8586217756866799 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c0 ELSE rt1.c0 END THEN rt1.c1 ELSE SQLITE_COMPILEOPTION_GET(rt1.c5) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(rt0.c0 COLLATE RTRIM AS REAL) RIGHT OUTER JOIN rt1 ON (('-1898959806' COLLATE RTRIM)<>(json_insert(rt0.c2, vt0.c0, vt0.c1, vt0.c2, rt0.c2))));
SELECT ALL * FROM t1, rt0 WHERE (rt0.c2) ORDER BY ((0Xffffffff8ed02c42 COLLATE BINARY) ISNULL), rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY ((0xffffffff8ed02c42 COLLATE BINARY) ISNULL), rt0.c0 ASC);
SELECT ALL * FROM t1, rt0 WHERE (rt0.c2) ORDER BY ((0Xffffffff8ed02c42 COLLATE BINARY) ISNULL), rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, rt0 ORDER BY ((0xffffffff8ed02c42 COLLATE BINARY) ISNULL), rt0.c0 ASC);
SELECT ALL * FROM t1, rt0 WHERE (rt0.c2) ORDER BY ((0Xffffffff8ed02c42 COLLATE BINARY) ISNULL), rt0.c0 ASC;
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c56 COLLATE BINARY)OR(t0.c56)))AND(((t0.c0)>>(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c56)))))OR(((((t0.c0)OR(t0.c0)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c56 COLLATE BINARY)OR(t0.c56)))AND(((t0.c0)>>(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c56)))))OR(((((t0.c0)OR(t0.c0)))AND(NULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c56 COLLATE BINARY)OR(t0.c56)))AND(((t0.c0)>>(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c56)))))OR(((((t0.c0)OR(t0.c0)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c56 COLLATE BINARY)OR(t0.c56)))AND(((t0.c0)>>(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c56)))))OR(((((t0.c0)OR(t0.c0)))AND(NULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c56 COLLATE BINARY)OR(t0.c56)))AND(((t0.c0)>>(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c56)))))OR(((((t0.c0)OR(t0.c0)))AND(NULL)))));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c5)||(0.6382619490551464)))GLOB(((rt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5)||(0.6382619490551464)))GLOB(((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c5)||(0.6382619490551464)))GLOB(((rt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5)||(0.6382619490551464)))GLOB(((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((rt1.c5)||(0.6382619490551464)))GLOB(((rt1.c0) IS FALSE))));
SELECT COUNT(*) FROM t0, rt1, t1, rt0 WHERE ('432403885') ORDER BY (rt1.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('432403885') IS TRUE)  as count FROM t0, rt1, t1, rt0 ORDER BY (rt1.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, t1, rt0 WHERE ('432403885') ORDER BY (rt1.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('432403885') IS TRUE)  as count FROM t0, rt1, t1, rt0 ORDER BY (rt1.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, t1, rt0 WHERE ('432403885') ORDER BY (rt1.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c5);
SELECT ALL * FROM t0 WHERE ('-399290205') ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS BLOB) ELSE t0.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-399290205') IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS BLOB) ELSE t0.c0 COLLATE BINARY END ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ('-399290205') ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS BLOB) ELSE t0.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-399290205') IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS BLOB) ELSE t0.c0 COLLATE BINARY END ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ('-399290205') ORDER BY CASE WHEN ((t0.c0) NOTNULL) THEN CAST(t0.c0 AS BLOB) ELSE t0.c0 COLLATE BINARY END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((~ (t1.c0))))>=((NULL)))) ORDER BY (- (((t1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((~ (t1.c0))))>=((NULL)))) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c0) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((~ (t1.c0))))>=((NULL)))) ORDER BY (- (((t1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((~ (t1.c0))))>=((NULL)))) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c0) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((~ (t1.c0))))>=((NULL)))) ORDER BY (- (((t1.c0) IS FALSE)))  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c2)>(rt1.c2))) ISNULL) CROSS JOIN vt0 ON t0.c56 WHERE (((((vt0.c2) NOTNULL))%(((t0.c56)<=(vt0.c2))))) ORDER BY ((t0.c56) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL))%(((t0.c56)<=(vt0.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c2)>(rt1.c2))) ISNULL) CROSS JOIN vt0 ON t0.c56 ORDER BY ((t0.c56) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c2)>(rt1.c2))) ISNULL) CROSS JOIN vt0 ON t0.c56 WHERE (((((vt0.c2) NOTNULL))%(((t0.c56)<=(vt0.c2))))) ORDER BY ((t0.c56) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL))%(((t0.c56)<=(vt0.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c2)>(rt1.c2))) ISNULL) CROSS JOIN vt0 ON t0.c56 ORDER BY ((t0.c56) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c2)>(rt1.c2))) ISNULL) CROSS JOIN vt0 ON t0.c56 WHERE (((((vt0.c2) NOTNULL))%(((t0.c56)<=(vt0.c2))))) ORDER BY ((t0.c56) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0, rt1 WHERE (((0X88bcecd) ISNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN t1.c0 END) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c5)<=(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0x88bcecd) ISNULL)) IS TRUE)  as count FROM t1, vt0, rt1 ORDER BY ((CASE WHEN vt0.c0 THEN t1.c0 END) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c5)<=(t1.c0)))) DESC);
SELECT COUNT(*) FROM t1, vt0, rt1 WHERE (((0X88bcecd) ISNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN t1.c0 END) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c5)<=(t1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0x88bcecd) ISNULL)) IS TRUE)  as count FROM t1, vt0, rt1 ORDER BY ((CASE WHEN vt0.c0 THEN t1.c0 END) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c5)<=(t1.c0)))) DESC);
SELECT COUNT(*) FROM t1, vt0, rt1 WHERE (((0X88bcecd) ISNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN t1.c0 END) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c5)<=(t1.c0)))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c56 END))) ORDER BY ((((((rt0.c2)<<(rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c56)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c56 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c2)<<(rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c56)))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c56 END))) ORDER BY ((((((rt0.c2)<<(rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c56)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c56 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c2)<<(rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c56)))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c56 END))) ORDER BY ((((((rt0.c2)<<(rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t0.c56)))) DESC;
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE ((((~ (x'')))<>(rt1.c2))) ORDER BY CASE ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c5))  WHEN ((rt1.c1)<>(vt0.c2)) THEN CAST(rt1.c0 AS TEXT) WHEN CAST(vt0.c1 AS REAL) THEN '-118844372' WHEN ((rt1.c1)|(rt1.c4)) THEN rt1.c5 COLLATE BINARY WHEN (((rt1.c1)) NOT BETWEEN ((t0.c56)) AND ((rt1.c2))) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c4)) WHEN ((((((((((((rt1.c0)OR(rt1.c2)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c56)))OR(vt0.c2)))AND(rt1.c5)) THEN (- (140224467)) END DESC  NULLS FIRST, UNLIKELY(DISTINCT ((0.4145504908514921)&(vt0.c2)));
SELECT SUM(count) FROM (SELECT (((((~ (x'')))<>(rt1.c2))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CASE ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c5))  WHEN ((rt1.c1)<>(vt0.c2)) THEN CAST(rt1.c0 AS TEXT) WHEN CAST(vt0.c1 AS REAL) THEN '-118844372' WHEN ((rt1.c1)|(rt1.c4)) THEN rt1.c5 COLLATE BINARY WHEN (((rt1.c1)) NOT BETWEEN ((t0.c56)) AND ((rt1.c2))) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c4)) WHEN ((((((((((((rt1.c0)OR(rt1.c2)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c56)))OR(vt0.c2)))AND(rt1.c5)) THEN (- (140224467)) END DESC  NULLS FIRST, UNLIKELY(DISTINCT ((0.4145504908514921)&(vt0.c2))));
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE ((((~ (x'')))<>(rt1.c2))) ORDER BY CASE ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c5))  WHEN ((rt1.c1)<>(vt0.c2)) THEN CAST(rt1.c0 AS TEXT) WHEN CAST(vt0.c1 AS REAL) THEN '-118844372' WHEN ((rt1.c1)|(rt1.c4)) THEN rt1.c5 COLLATE BINARY WHEN (((rt1.c1)) NOT BETWEEN ((t0.c56)) AND ((rt1.c2))) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c4)) WHEN ((((((((((((rt1.c0)OR(rt1.c2)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c56)))OR(vt0.c2)))AND(rt1.c5)) THEN (- (140224467)) END DESC  NULLS FIRST, UNLIKELY(DISTINCT ((0.4145504908514921)&(vt0.c2)));
SELECT SUM(count) FROM (SELECT (((((~ (x'')))<>(rt1.c2))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY CASE ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c5))  WHEN ((rt1.c1)<>(vt0.c2)) THEN CAST(rt1.c0 AS TEXT) WHEN CAST(vt0.c1 AS REAL) THEN '-118844372' WHEN ((rt1.c1)|(rt1.c4)) THEN rt1.c5 COLLATE BINARY WHEN (((rt1.c1)) NOT BETWEEN ((t0.c56)) AND ((rt1.c2))) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c4)) WHEN ((((((((((((rt1.c0)OR(rt1.c2)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c56)))OR(vt0.c2)))AND(rt1.c5)) THEN (- (140224467)) END DESC  NULLS FIRST, UNLIKELY(DISTINCT ((0.4145504908514921)&(vt0.c2))));
SELECT ALL COUNT(*) FROM rt1, vt0, t0 WHERE ((((~ (x'')))<>(rt1.c2))) ORDER BY CASE ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c5))  WHEN ((rt1.c1)<>(vt0.c2)) THEN CAST(rt1.c0 AS TEXT) WHEN CAST(vt0.c1 AS REAL) THEN '-118844372' WHEN ((rt1.c1)|(rt1.c4)) THEN rt1.c5 COLLATE BINARY WHEN (((rt1.c1)) NOT BETWEEN ((t0.c56)) AND ((rt1.c2))) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c4)) WHEN ((((((((((((rt1.c0)OR(rt1.c2)))OR(t0.c0)))OR(vt0.c1)))OR(t0.c56)))OR(vt0.c2)))AND(rt1.c5)) THEN (- (140224467)) END DESC  NULLS FIRST, UNLIKELY(DISTINCT ((0.4145504908514921)&(vt0.c2)));
SELECT ALL COUNT(*) FROM rt1 WHERE (0.8146891548231672) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8146891548231672) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.8146891548231672) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8146891548231672) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.8146891548231672) ORDER BY rt1.c1 DESC  NULLS LAST;
SELECT * FROM vt0, t1, rt0, rt1 WHERE (((rt1.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOTNULL)) IS TRUE)  as count FROM vt0, t1, rt0, rt1);
SELECT * FROM vt0, t1, rt0, rt1 WHERE (((rt1.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOTNULL)) IS TRUE)  as count FROM vt0, t1, rt0, rt1);
SELECT * FROM vt0, t1, rt0, rt1 WHERE (((rt1.c2) NOTNULL));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, 887372183, (((rt0.c3, vt0.c1, rt0.c3, '-642068152', vt0.c1)) BETWEEN ((vt0.c0, '{', rt0.c2, rt0.c3, vt0.c1)) AND ((vt0.c1, 0.38435266707462457, t0.c56, rt0.c2, rt0.c3)))))>=(((NOT (vt0.c0)), CAST(0X1f66a85d AS NUMERIC), (- (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, 887372183, (((rt0.c3, vt0.c1, rt0.c3, '-642068152', vt0.c1)) BETWEEN ((vt0.c0, '{', rt0.c2, rt0.c3, vt0.c1)) AND ((vt0.c1, 0.38435266707462457, t0.c56, rt0.c2, rt0.c3)))))>=(((NOT (vt0.c0)), CAST(0x1f66a85d AS NUMERIC), (- (t0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, 887372183, (((rt0.c3, vt0.c1, rt0.c3, '-642068152', vt0.c1)) BETWEEN ((vt0.c0, '{', rt0.c2, rt0.c3, vt0.c1)) AND ((vt0.c1, 0.38435266707462457, t0.c56, rt0.c2, rt0.c3)))))>=(((NOT (vt0.c0)), CAST(0X1f66a85d AS NUMERIC), (- (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, 887372183, (((rt0.c3, vt0.c1, rt0.c3, '-642068152', vt0.c1)) BETWEEN ((vt0.c0, '{', rt0.c2, rt0.c3, vt0.c1)) AND ((vt0.c1, 0.38435266707462457, t0.c56, rt0.c2, rt0.c3)))))>=(((NOT (vt0.c0)), CAST(0x1f66a85d AS NUMERIC), (- (t0.c0)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END, 887372183, (((rt0.c3, vt0.c1, rt0.c3, '-642068152', vt0.c1)) BETWEEN ((vt0.c0, '{', rt0.c2, rt0.c3, vt0.c1)) AND ((vt0.c1, 0.38435266707462457, t0.c56, rt0.c2, rt0.c3)))))>=(((NOT (vt0.c0)), CAST(0X1f66a85d AS NUMERIC), (- (t0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN t0.c0 END) IS FALSE) INNER JOIN rt0 ON ((((((rt1.c1)OR(rt1.c2)))OR(NULL))) ISNULL) CROSS JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))GLOB(CAST(t0.c0 AS INTEGER))) INNER JOIN t1 ON ((CAST(rt1.c3 AS NUMERIC))LIKE(((t1.c0) BETWEEN (t0.c56) AND (rt1.c2)))) WHERE (CASE WHEN CASE 0.2516189811096504  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 0.2516189811096504  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN t0.c0 END) IS FALSE) INNER JOIN rt0 ON ((((((rt1.c1)OR(rt1.c2)))OR(NULL))) ISNULL) CROSS JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))GLOB(CAST(t0.c0 AS INTEGER))) INNER JOIN t1 ON ((CAST(rt1.c3 AS NUMERIC))LIKE(((t1.c0) BETWEEN (t0.c56) AND (rt1.c2)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN t0.c0 END) IS FALSE) INNER JOIN rt0 ON ((((((rt1.c1)OR(rt1.c2)))OR(NULL))) ISNULL) CROSS JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))GLOB(CAST(t0.c0 AS INTEGER))) INNER JOIN t1 ON ((CAST(rt1.c3 AS NUMERIC))LIKE(((t1.c0) BETWEEN (t0.c56) AND (rt1.c2)))) WHERE (CASE WHEN CASE 0.2516189811096504  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 0.2516189811096504  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN t0.c0 END) IS FALSE) INNER JOIN rt0 ON ((((((rt1.c1)OR(rt1.c2)))OR(NULL))) ISNULL) CROSS JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))GLOB(CAST(t0.c0 AS INTEGER))) INNER JOIN t1 ON ((CAST(rt1.c3 AS NUMERIC))LIKE(((t1.c0) BETWEEN (t0.c56) AND (rt1.c2)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN t0.c0 END) IS FALSE) INNER JOIN rt0 ON ((((((rt1.c1)OR(rt1.c2)))OR(NULL))) ISNULL) CROSS JOIN rt1 ON ((CAST(t0.c0 AS NUMERIC))GLOB(CAST(t0.c0 AS INTEGER))) INNER JOIN t1 ON ((CAST(rt1.c3 AS NUMERIC))LIKE(((t1.c0) BETWEEN (t0.c56) AND (rt1.c2)))) WHERE (CASE WHEN CASE 0.2516189811096504  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1))) END);
SELECT * FROM t0, rt1 WHERE (DATE(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)), TRIM(rt1.c3), ((rt1.c4) BETWEEN (t0.c56) AND (rt1.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)), UPPER(DISTINCT rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)), TRIM(rt1.c3), ((rt1.c4) BETWEEN (t0.c56) AND (rt1.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)), UPPER(DISTINCT rt1.c1))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (DATE(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)), TRIM(rt1.c3), ((rt1.c4) BETWEEN (t0.c56) AND (rt1.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)), UPPER(DISTINCT rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)), TRIM(rt1.c3), ((rt1.c4) BETWEEN (t0.c56) AND (rt1.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)), UPPER(DISTINCT rt1.c1))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (DATE(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)), TRIM(rt1.c3), ((rt1.c4) BETWEEN (t0.c56) AND (rt1.c3)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)), UPPER(DISTINCT rt1.c1)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) COLLATE RTRIM FULL OUTER JOIN t1 ON (+ (CASE WHEN t1.c0 THEN vt0.c1 END)) WHERE ((UPPER(rt0.c1) IN ())) ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(rt0.c1) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) COLLATE RTRIM FULL OUTER JOIN t1 ON (+ (CASE WHEN t1.c0 THEN vt0.c1 END)) ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) COLLATE RTRIM FULL OUTER JOIN t1 ON (+ (CASE WHEN t1.c0 THEN vt0.c1 END)) WHERE ((UPPER(rt0.c1) IN ())) ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(rt0.c1) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) COLLATE RTRIM FULL OUTER JOIN t1 ON (+ (CASE WHEN t1.c0 THEN vt0.c1 END)) ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN ()) COLLATE RTRIM FULL OUTER JOIN t1 ON (+ (CASE WHEN t1.c0 THEN vt0.c1 END)) WHERE ((UPPER(rt0.c1) IN ())) ORDER BY (- (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((LIKELIHOOD(rt0.c1, 0.29514037287597483))AND(((rt0.c1)+(rt0.c0)))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(rt0.c1, 0.29514037287597483))AND(((rt0.c1)+(rt0.c0)))))AND(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((LIKELIHOOD(rt0.c1, 0.29514037287597483))AND(((rt0.c1)+(rt0.c0)))))AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(rt0.c1, 0.29514037287597483))AND(((rt0.c1)+(rt0.c0)))))AND(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((LIKELIHOOD(rt0.c1, 0.29514037287597483))AND(((rt0.c1)+(rt0.c0)))))AND(rt0.c1)));
SELECT COUNT(*) FROM rt1, vt0, t0, rt0 WHERE (((CASE rt0.c0  WHEN t0.c0 THEN rt1.c4 END)|(((x'') BETWEEN (t0.c56) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN t0.c0 THEN rt1.c4 END)|(((x'') BETWEEN (t0.c56) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, vt0, t0, rt0);
SELECT COUNT(*) FROM rt1, vt0, t0, rt0 WHERE (((CASE rt0.c0  WHEN t0.c0 THEN rt1.c4 END)|(((x'') BETWEEN (t0.c56) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN t0.c0 THEN rt1.c4 END)|(((x'') BETWEEN (t0.c56) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, vt0, t0, rt0);
SELECT COUNT(*) FROM rt1, vt0, t0, rt0 WHERE (((CASE rt0.c0  WHEN t0.c0 THEN rt1.c4 END)|(((x'') BETWEEN (t0.c56) AND (rt0.c0)))));
SELECT ALL * FROM t0, t1, rt1 WHERE (CAST(0.22294296031356586 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.22294296031356586 AS TEXT)) IS TRUE)  as count FROM t0, t1, rt1);
SELECT ALL * FROM t0, t1, rt1 WHERE (CAST(0.22294296031356586 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.22294296031356586 AS TEXT)) IS TRUE)  as count FROM t0, t1, rt1);
SELECT ALL * FROM t0, t1, rt1 WHERE (CAST(0.22294296031356586 AS TEXT));
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c0) IS FALSE) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)IS(t1.c0)) THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOTNULL) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c0)IS NOT(t1.c0)) END) ORDER BY ((((t1.c0)OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) IS FALSE) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)IS(t1.c0)) THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOTNULL) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c0)IS NOT(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c0) IS FALSE) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)IS(t1.c0)) THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOTNULL) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c0)IS NOT(t1.c0)) END) ORDER BY ((((t1.c0)OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) IS FALSE) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)IS(t1.c0)) THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOTNULL) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c0)IS NOT(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c0) IS FALSE) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0)IS(t1.c0)) THEN CAST(t1.c0 AS INTEGER) WHEN ((t1.c0) NOTNULL) THEN CAST(t1.c0 AS INTEGER) ELSE ((t1.c0)IS NOT(t1.c0)) END) ORDER BY ((((t1.c0)OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM;
SELECT COUNT(*) FROM vt0, rt1, rt0, t1, t0 WHERE ((((NULL))==(((t0.c0 IN ()))))) ORDER BY COALESCE(DISTINCT (~ (rt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((rt1.c4)*(rt1.c4)), CASE WHEN rt1.c2 THEN rt1.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL))=(((t0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt1, rt0, t1, t0 ORDER BY COALESCE(DISTINCT (~ (rt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((rt1.c4)*(rt1.c4)), CASE WHEN rt1.c2 THEN rt1.c1 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0, t1, t0 WHERE ((((NULL))==(((t0.c0 IN ()))))) ORDER BY COALESCE(DISTINCT (~ (rt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((rt1.c4)*(rt1.c4)), CASE WHEN rt1.c2 THEN rt1.c1 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL))=(((t0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt1, rt0, t1, t0 ORDER BY COALESCE(DISTINCT (~ (rt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((rt1.c4)*(rt1.c4)), CASE WHEN rt1.c2 THEN rt1.c1 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0, t1, t0 WHERE ((((NULL))==(((t0.c0 IN ()))))) ORDER BY COALESCE(DISTINCT (~ (rt0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((rt1.c4)*(rt1.c4)), CASE WHEN rt1.c2 THEN rt1.c1 END) DESC  NULLS LAST;
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((CASE WHEN t1.c0 THEN rt1.c0 END) IS FALSE) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c5 THEN rt1.c4 WHEN t0.c0 THEN rt0.c0 ELSE rt1.c1 END)AND((NOT (t0.c0)))) RIGHT OUTER JOIN t1 ON '-501407002' FULL OUTER JOIN t0 ON ((CASE vt0.c1  WHEN t0.c56 THEN rt1.c4 ELSE vt0.c0 END)+(rt0.c3)) WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c3)) AS TEXT)) ORDER BY (~ (((vt0.c1)IS('2146209647')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((CASE WHEN t1.c0 THEN rt1.c0 END) IS FALSE) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c5 THEN rt1.c4 WHEN t0.c0 THEN rt0.c0 ELSE rt1.c1 END)AND((NOT (t0.c0)))) RIGHT OUTER JOIN t1 ON '-501407002' FULL OUTER JOIN t0 ON ((CASE vt0.c1  WHEN t0.c56 THEN rt1.c4 ELSE vt0.c0 END)+(rt0.c3)) ORDER BY (~ (((vt0.c1)IS('2146209647')))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((CASE WHEN t1.c0 THEN rt1.c0 END) IS FALSE) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c5 THEN rt1.c4 WHEN t0.c0 THEN rt0.c0 ELSE rt1.c1 END)AND((NOT (t0.c0)))) RIGHT OUTER JOIN t1 ON '-501407002' FULL OUTER JOIN t0 ON ((CASE vt0.c1  WHEN t0.c56 THEN rt1.c4 ELSE vt0.c0 END)+(rt0.c3)) WHERE (CAST(((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c3)) AS TEXT)) ORDER BY (~ (((vt0.c1)IS('2146209647')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT BETWEEN (rt1.c5) AND (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((CASE WHEN t1.c0 THEN rt1.c0 END) IS FALSE) RIGHT OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c5 THEN rt1.c4 WHEN t0.c0 THEN rt0.c0 ELSE rt1.c1 END)AND((NOT (t0.c0)))) RIGHT OUTER JOIN t1 ON '-501407002' FULL OUTER JOIN t0 ON ((CASE vt0.c1  WHEN t0.c56 THEN rt1.c4 ELSE vt0.c0 END)+(rt0.c3)) ORDER BY (~ (((vt0.c1)IS('2146209647')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t1, rt1, rt0, vt0 WHERE (((CAST(t0.c56 AS REAL))<>(((vt0.c2) IS FALSE)))) ORDER BY (((t0.c56, rt1.c3, rt0.c1)) BETWEEN (((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((rt1.c1))), ((rt1.c3)>(rt0.c0)), '-1710516044')) AND ((((rt0.c1)AND(-1504413465)), (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c0))), x'36fd')));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c56 AS REAL))!=(((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, t1, rt1, rt0, vt0 ORDER BY (((t0.c56, rt1.c3, rt0.c1)) BETWEEN (((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((rt1.c1))), ((rt1.c3)>(rt0.c0)), '-1710516044')) AND ((((rt0.c1)AND(-1504413465)), (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c0))), x'36fd'))));
SELECT ALL COUNT(*) FROM t0, t1, rt1, rt0, vt0 WHERE (((CAST(t0.c56 AS REAL))<>(((vt0.c2) IS FALSE)))) ORDER BY (((t0.c56, rt1.c3, rt0.c1)) BETWEEN (((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((rt1.c1))), ((rt1.c3)>(rt0.c0)), '-1710516044')) AND ((((rt0.c1)AND(-1504413465)), (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c0))), x'36fd')));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c56 AS REAL))!=(((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, t1, rt1, rt0, vt0 ORDER BY (((t0.c56, rt1.c3, rt0.c1)) BETWEEN (((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((rt1.c1))), ((rt1.c3)>(rt0.c0)), '-1710516044')) AND ((((rt0.c1)AND(-1504413465)), (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c0))), x'36fd'))));
SELECT ALL COUNT(*) FROM t0, t1, rt1, rt0, vt0 WHERE (((CAST(t0.c56 AS REAL))<>(((vt0.c2) IS FALSE)))) ORDER BY (((t0.c56, rt1.c3, rt0.c1)) BETWEEN (((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((rt1.c1))), ((rt1.c3)>(rt0.c0)), '-1710516044')) AND ((((rt0.c1)AND(-1504413465)), (((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c0))), x'36fd')));
SELECT ALL * FROM rt0, vt0, t0, rt1 WHERE ((t0.c56 COLLATE BINARY IN ())) ORDER BY 'nD' ASC;
SELECT SUM(count) FROM (SELECT (((t0.c56 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt0, t0, rt1 ORDER BY 'nD' ASC);
SELECT ALL * FROM rt0, vt0, t0, rt1 WHERE ((t0.c56 COLLATE BINARY IN ())) ORDER BY 'nD' ASC;
SELECT SUM(count) FROM (SELECT (((t0.c56 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt0, t0, rt1 ORDER BY 'nD' ASC);
SELECT ALL * FROM rt0, vt0, t0, rt1 WHERE ((t0.c56 COLLATE BINARY IN ())) ORDER BY 'nD' ASC;
SELECT COUNT(*) FROM t1, rt0 INNER JOIN vt0 ON (((vt0.c0) ISNULL) IN ()) CROSS JOIN rt1 ON (((((rt1.c4) IS FALSE)))<((vt0.c1))) FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((rt0.c3))!=((0.5251752227206894))))) AND ((((vt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c4))))) WHERE ((~ (t0.c56)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c56))) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt0 ON (((vt0.c0) ISNULL) IN ()) CROSS JOIN rt1 ON (((((rt1.c4) IS FALSE)))<((vt0.c1))) FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((rt0.c3))!=((0.5251752227206894))))) AND ((((vt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c4))))));
SELECT COUNT(*) FROM t1, rt0 INNER JOIN vt0 ON (((vt0.c0) ISNULL) IN ()) CROSS JOIN rt1 ON (((((rt1.c4) IS FALSE)))<((vt0.c1))) FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((rt0.c3))!=((0.5251752227206894))))) AND ((((vt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c4))))) WHERE ((~ (t0.c56)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c56))) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt0 ON (((vt0.c0) ISNULL) IN ()) CROSS JOIN rt1 ON (((((rt1.c4) IS FALSE)))<((vt0.c1))) FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((rt0.c3))!=((0.5251752227206894))))) AND ((((vt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c4))))));
SELECT COUNT(*) FROM t1, rt0 INNER JOIN vt0 ON (((vt0.c0) ISNULL) IN ()) CROSS JOIN rt1 ON (((((rt1.c4) IS FALSE)))<((vt0.c1))) FULL OUTER JOIN t0 ON (((x'')) BETWEEN (((((rt0.c3))!=((0.5251752227206894))))) AND ((((vt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c4))))) WHERE ((~ (t0.c56)));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM t1 WHERE (-730659763) ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((t1.c0 IN ()), TRIM(t1.c0, t1.c0), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), t1.c0 COLLATE NOCASE, (NOT (t1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-730659763) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((t1.c0 IN ()), TRIM(t1.c0, t1.c0), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), t1.c0 COLLATE NOCASE, (NOT (t1.c0))))) ASC);
SELECT COUNT(*) FROM t1 WHERE (-730659763) ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((t1.c0 IN ()), TRIM(t1.c0, t1.c0), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), t1.c0 COLLATE NOCASE, (NOT (t1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-730659763) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((t1.c0 IN ()), TRIM(t1.c0, t1.c0), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), t1.c0 COLLATE NOCASE, (NOT (t1.c0))))) ASC);
SELECT COUNT(*) FROM t1 WHERE (-730659763) ORDER BY (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN (((t1.c0 IN ()), TRIM(t1.c0, t1.c0), CAST(t1.c0 AS REAL))) AND ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), t1.c0 COLLATE NOCASE, (NOT (t1.c0))))) ASC;
SELECT ALL * FROM rt1, t0, vt0 WHERE (((((t0.c56) BETWEEN (vt0.c1) AND (t0.c56))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 END) AND (t0.c0 COLLATE BINARY))) ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c56) BETWEEN (vt0.c1) AND (t0.c56))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 END) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT NULL)  NULLS LAST);
SELECT ALL * FROM rt1, t0, vt0 WHERE (((((t0.c56) BETWEEN (vt0.c1) AND (t0.c56))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 END) AND (t0.c0 COLLATE BINARY))) ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c56) BETWEEN (vt0.c1) AND (t0.c56))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 END) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT NULL)  NULLS LAST);
SELECT ALL * FROM rt1, t0, vt0 WHERE (((((t0.c56) BETWEEN (vt0.c1) AND (t0.c56))) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c5 END) AND (t0.c0 COLLATE BINARY))) ORDER BY ((CAST(rt1.c1 AS BLOB)) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt1.c0))!=((rt0.c0)))) NOTNULL)) ORDER BY ((rt0.c0 IN ('0N')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))!=((rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((rt0.c0 IN ('0N')) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt1.c0))!=((rt0.c0)))) NOTNULL)) ORDER BY ((rt0.c0 IN ('0N')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))!=((rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((rt0.c0 IN ('0N')) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt1.c0))!=((rt0.c0)))) NOTNULL)) ORDER BY ((rt0.c0 IN ('0N')) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1, rt1, rt0 WHERE (((x'bd15') ISNULL)) ORDER BY UNLIKELY((((rt1.c0))>((rt1.c3))))  NULLS LAST, (((((rt0.c0)AND(rt0.c3)))OR(rt1.c2)) IN (CAST(NULL AS TEXT), ((rt1.c1)AND(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((x'bd15') ISNULL)) IS TRUE)  as count FROM vt0, t1, rt1, rt0 ORDER BY UNLIKELY((((rt1.c0))>((rt1.c3))))  NULLS LAST, (((((rt0.c0)AND(rt0.c3)))OR(rt1.c2)) IN (CAST(NULL AS TEXT), ((rt1.c1)AND(vt0.c2)))));
SELECT COUNT(*) FROM vt0, t1, rt1, rt0 WHERE (((x'bd15') ISNULL)) ORDER BY UNLIKELY((((rt1.c0))>((rt1.c3))))  NULLS LAST, (((((rt0.c0)AND(rt0.c3)))OR(rt1.c2)) IN (CAST(NULL AS TEXT), ((rt1.c1)AND(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((x'bd15') ISNULL)) IS TRUE)  as count FROM vt0, t1, rt1, rt0 ORDER BY UNLIKELY((((rt1.c0))>((rt1.c3))))  NULLS LAST, (((((rt0.c0)AND(rt0.c3)))OR(rt1.c2)) IN (CAST(NULL AS TEXT), ((rt1.c1)AND(vt0.c2)))));
SELECT COUNT(*) FROM vt0, t1, rt1, rt0 WHERE (((x'bd15') ISNULL)) ORDER BY UNLIKELY((((rt1.c0))>((rt1.c3))))  NULLS LAST, (((((rt0.c0)AND(rt0.c3)))OR(rt1.c2)) IN (CAST(NULL AS TEXT), ((rt1.c1)AND(vt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN 0X4b497a44 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN 0X4b497a44 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN 0X4b497a44 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN 0X4b497a44 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN 0X4b497a44 THEN rt0.c2 END AS INTEGER));
SELECT * FROM rt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN rt0.c2 ELSE ((((x'')AND(rt0.c1)))AND(rt0.c1)) END WHERE (((((rt0.c2)IS(rt0.c3)))IS NOT(((rt0.c2)<>(rt0.c1))))) ORDER BY TYPEOF(DISTINCT ((rt0.c1)LIKE(0.6162688767416837))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt0.c3)))IS NOT(((rt0.c2)!=(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN rt0.c2 ELSE ((((x'')AND(rt0.c1)))AND(rt0.c1)) END ORDER BY TYPEOF(DISTINCT ((rt0.c1)LIKE(0.6162688767416837))) ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN rt0.c2 ELSE ((((x'')AND(rt0.c1)))AND(rt0.c1)) END WHERE (((((rt0.c2)IS(rt0.c3)))IS NOT(((rt0.c2)<>(rt0.c1))))) ORDER BY TYPEOF(DISTINCT ((rt0.c1)LIKE(0.6162688767416837))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt0.c3)))IS NOT(((rt0.c2)!=(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN rt0.c2 ELSE ((((x'')AND(rt0.c1)))AND(rt0.c1)) END ORDER BY TYPEOF(DISTINCT ((rt0.c1)LIKE(0.6162688767416837))) ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN rt1 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN rt0.c2 ELSE ((((x'')AND(rt0.c1)))AND(rt0.c1)) END WHERE (((((rt0.c2)IS(rt0.c3)))IS NOT(((rt0.c2)<>(rt0.c1))))) ORDER BY TYPEOF(DISTINCT ((rt0.c1)LIKE(0.6162688767416837))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((rt0.c2)%(vt0.c0)))IS NOT(((rt0.c1) NOTNULL))) INNER JOIN t0 ON ((CASE WHEN vt0.c2 THEN vt0.c1 ELSE NULL END)>=((~ (rt1.c0)))) LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END) ISNULL) INNER JOIN rt1 ON CAST(CAST(rt1.c5 AS NUMERIC) AS NUMERIC) WHERE (CHAR(((x'6136') NOTNULL))) ORDER BY CASE WHEN (((rt1.c4))!=((NULL))) THEN ((t1.c0)AND(rt1.c5)) WHEN rt1.c4 THEN (((vt0.c0, rt0.c1, rt1.c2))<=(('-405548652', vt0.c2, rt0.c0))) WHEN ((rt0.c1) NOT NULL) THEN ((0.6438431418576209)&(0xffffffffff7bdfc5)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHAR(((x'6136') NOTNULL))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((rt0.c2)%(vt0.c0)))IS NOT(((rt0.c1) NOTNULL))) INNER JOIN t0 ON ((CASE WHEN vt0.c2 THEN vt0.c1 ELSE NULL END)>=((~ (rt1.c0)))) LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END) ISNULL) INNER JOIN rt1 ON CAST(CAST(rt1.c5 AS NUMERIC) AS NUMERIC) ORDER BY CASE WHEN (((rt1.c4))<>((NULL))) THEN ((t1.c0)AND(rt1.c5)) WHEN rt1.c4 THEN (((vt0.c0, rt0.c1, rt1.c2))<=(('-405548652', vt0.c2, rt0.c0))) WHEN ((rt0.c1) NOT NULL) THEN ((0.6438431418576209)&(0xffffffffff7bdfc5)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((rt0.c2)%(vt0.c0)))IS NOT(((rt0.c1) NOTNULL))) INNER JOIN t0 ON ((CASE WHEN vt0.c2 THEN vt0.c1 ELSE NULL END)>=((~ (rt1.c0)))) LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END) ISNULL) INNER JOIN rt1 ON CAST(CAST(rt1.c5 AS NUMERIC) AS NUMERIC) WHERE (CHAR(((x'6136') NOTNULL))) ORDER BY CASE WHEN (((rt1.c4))!=((NULL))) THEN ((t1.c0)AND(rt1.c5)) WHEN rt1.c4 THEN (((vt0.c0, rt0.c1, rt1.c2))<=(('-405548652', vt0.c2, rt0.c0))) WHEN ((rt0.c1) NOT NULL) THEN ((0.6438431418576209)&(0xffffffffff7bdfc5)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHAR(((x'6136') NOTNULL))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((rt0.c2)%(vt0.c0)))IS NOT(((rt0.c1) NOTNULL))) INNER JOIN t0 ON ((CASE WHEN vt0.c2 THEN vt0.c1 ELSE NULL END)>=((~ (rt1.c0)))) LEFT OUTER JOIN rt0 ON ((CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END) ISNULL) INNER JOIN rt1 ON CAST(CAST(rt1.c5 AS NUMERIC) AS NUMERIC) ORDER BY CASE WHEN (((rt1.c4))<>((NULL))) THEN ((t1.c0)AND(rt1.c5)) WHEN rt1.c4 THEN (((vt0.c0, rt0.c1, rt1.c2))<=(('-405548652', vt0.c2, rt0.c0))) WHEN ((rt0.c1) NOT NULL) THEN ((0.6438431418576209)&(0xffffffffff7bdfc5)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CASE WHEN vt0.c2 THEN vt0.c2 END)) FULL OUTER JOIN rt0 ON (((((- ('1860307099')))AND(NULL)))AND(((vt0.c0) NOT NULL))) WHERE (vt0.c2) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CASE WHEN vt0.c2 THEN vt0.c2 END)) FULL OUTER JOIN rt0 ON (((((- ('1860307099')))AND(NULL)))AND(((vt0.c0) NOT NULL))) ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CASE WHEN vt0.c2 THEN vt0.c2 END)) FULL OUTER JOIN rt0 ON (((((- ('1860307099')))AND(NULL)))AND(((vt0.c0) NOT NULL))) WHERE (vt0.c2) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CASE WHEN vt0.c2 THEN vt0.c2 END)) FULL OUTER JOIN rt0 ON (((((- ('1860307099')))AND(NULL)))AND(((vt0.c0) NOT NULL))) ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) IN (CASE WHEN vt0.c2 THEN vt0.c2 END)) FULL OUTER JOIN rt0 ON (((((- ('1860307099')))AND(NULL)))AND(((vt0.c0) NOT NULL))) WHERE (vt0.c2) ORDER BY vt0.c1 DESC;
SELECT * FROM rt1 WHERE (((((ABS(rt1.c4))AND(CAST(rt1.c2 AS INTEGER))))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((-8.83644152E8)))))) ORDER BY (~ (-3.99290205E8));
SELECT SUM(count) FROM (SELECT ((((((ABS(rt1.c4))AND(CAST(rt1.c2 AS INTEGER))))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((-8.83644152E8)))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (-3.99290205E8)));
SELECT * FROM rt1 WHERE (((((ABS(rt1.c4))AND(CAST(rt1.c2 AS INTEGER))))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((-8.83644152E8)))))) ORDER BY (~ (-3.99290205E8));
SELECT SUM(count) FROM (SELECT ((((((ABS(rt1.c4))AND(CAST(rt1.c2 AS INTEGER))))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((-8.83644152E8)))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (-3.99290205E8)));
SELECT * FROM rt1 WHERE (((((ABS(rt1.c4))AND(CAST(rt1.c2 AS INTEGER))))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((-8.83644152E8)))))) ORDER BY (~ (-3.99290205E8));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1) IS FALSE))));
SELECT ALL * FROM t0, vt0, rt0, rt1, t1 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (ABS(0.9136931152416514)) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (ABS(0.9136931152416514)) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, rt0, rt1, t1);
SELECT ALL * FROM t0, vt0, rt0, rt1, t1 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (ABS(0.9136931152416514)) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (ABS(0.9136931152416514)) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, rt0, rt1, t1);
SELECT ALL * FROM t0, vt0, rt0, rt1, t1 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (ABS(0.9136931152416514)) AND (CAST(rt1.c2 AS BLOB))));
SELECT * FROM t1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (rt0.c2);
SELECT * FROM rt1 WHERE (CAST(NULL AS BLOB) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END ASC);
SELECT * FROM rt1 WHERE (CAST(NULL AS BLOB) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END ASC);
SELECT * FROM rt1 WHERE (CAST(NULL AS BLOB) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS BLOB) END ASC;
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) THEN (NOT (t0.c0)) WHEN CAST(t0.c56 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN vt0.c1 COLLATE RTRIM THEN CAST('1292112102' AS REAL) END) ORDER BY (((vt0.c2, t0.c56, vt0.c0)) BETWEEN ((((vt0.c1) NOTNULL), CASE WHEN vt0.c1 THEN t0.c56 ELSE vt0.c2 END, 'A-	rU^\rK')) AND ((vt0.c1 COLLATE BINARY, x'', ((((((((((((vt0.c0)OR(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(vt0.c2)))OR(0.07494258942068743)))OR(0.972850666161619)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) THEN (NOT (t0.c0)) WHEN CAST(t0.c56 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN vt0.c1 COLLATE RTRIM THEN CAST('1292112102' AS REAL) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2, t0.c56, vt0.c0)) BETWEEN ((((vt0.c1) NOTNULL), CASE WHEN vt0.c1 THEN t0.c56 ELSE vt0.c2 END, 'A-	rU^\rK')) AND ((vt0.c1 COLLATE BINARY, x'', ((((((((((((vt0.c0)OR(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(vt0.c2)))OR(0.07494258942068743)))OR(0.972850666161619))))));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) THEN (NOT (t0.c0)) WHEN CAST(t0.c56 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN vt0.c1 COLLATE RTRIM THEN CAST('1292112102' AS REAL) END) ORDER BY (((vt0.c2, t0.c56, vt0.c0)) BETWEEN ((((vt0.c1) NOTNULL), CASE WHEN vt0.c1 THEN t0.c56 ELSE vt0.c2 END, 'A-	rU^\rK')) AND ((vt0.c1 COLLATE BINARY, x'', ((((((((((((vt0.c0)OR(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(vt0.c2)))OR(0.07494258942068743)))OR(0.972850666161619)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) THEN (NOT (t0.c0)) WHEN CAST(t0.c56 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN vt0.c1 COLLATE RTRIM THEN CAST('1292112102' AS REAL) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c2, t0.c56, vt0.c0)) BETWEEN ((((vt0.c1) NOTNULL), CASE WHEN vt0.c1 THEN t0.c56 ELSE vt0.c2 END, 'A-	rU^\rK')) AND ((vt0.c1 COLLATE BINARY, x'', ((((((((((((vt0.c0)OR(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(vt0.c2)))OR(0.07494258942068743)))OR(0.972850666161619))))));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) THEN (NOT (t0.c0)) WHEN CAST(t0.c56 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN vt0.c1 COLLATE RTRIM THEN CAST('1292112102' AS REAL) END) ORDER BY (((vt0.c2, t0.c56, vt0.c0)) BETWEEN ((((vt0.c1) NOTNULL), CASE WHEN vt0.c1 THEN t0.c56 ELSE vt0.c2 END, 'A-	rU^\rK')) AND ((vt0.c1 COLLATE BINARY, x'', ((((((((((((vt0.c0)OR(t0.c56)))AND(t0.c56)))AND(vt0.c2)))AND(vt0.c2)))OR(0.07494258942068743)))OR(0.972850666161619)))));
SELECT COUNT(*) FROM rt1, rt0, t0, t1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, rt0, t0, t1);
SELECT COUNT(*) FROM rt1, rt0, t0, t1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, rt0, t0, t1);
SELECT COUNT(*) FROM rt1, rt0, t0, t1 WHERE (rt1.c4);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) IS FALSE) COLLATE BINARY) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT NULL) ASC  NULLS FIRST, CAST(((rt0.c2)-(rt0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT NULL) ASC  NULLS FIRST, CAST(((rt0.c2)-(rt0.c2)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) IS FALSE) COLLATE BINARY) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT NULL) ASC  NULLS FIRST, CAST(((rt0.c2)-(rt0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT NULL) ASC  NULLS FIRST, CAST(((rt0.c2)-(rt0.c2)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) IS FALSE) COLLATE BINARY) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT NULL) ASC  NULLS FIRST, CAST(((rt0.c2)-(rt0.c2)) AS TEXT)  NULLS LAST;
SELECT * FROM t1, t0, rt1, vt0 WHERE (((rt1.c3)/(x''))) ORDER BY (NOT (vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)/(x''))) IS TRUE)  as count FROM t1, t0, rt1, vt0 ORDER BY (NOT (vt0.c1)) DESC  NULLS LAST);
SELECT * FROM t1, t0, rt1, vt0 WHERE (((rt1.c3)/(x''))) ORDER BY (NOT (vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)/(x''))) IS TRUE)  as count FROM t1, t0, rt1, vt0 ORDER BY (NOT (vt0.c1)) DESC  NULLS LAST);
SELECT * FROM t1, t0, rt1, vt0 WHERE (((rt1.c3)/(x''))) ORDER BY (NOT (vt0.c1)) DESC  NULLS LAST;
SELECT * FROM t1, t0, rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY TOTAL_CHANGES());
SELECT * FROM t1, t0, rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) ORDER BY TOTAL_CHANGES();
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM t1, t0, rt0 ORDER BY TOTAL_CHANGES());
SELECT * FROM t1, t0, rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) ORDER BY TOTAL_CHANGES();
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c1))<((t0.c0))) AS BLOB) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c2)OR(rt0.c0)))OR(t0.c56)), 0.2484100225432585) DESC  NULLS FIRST, (~ ((((t0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c56, rt0.c1)) AND ((vt0.c0, rt0.c2, vt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c1))<((t0.c0))) AS BLOB) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c2)OR(rt0.c0)))OR(t0.c56)), 0.2484100225432585) DESC  NULLS FIRST, (~ ((((t0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c56, rt0.c1)) AND ((vt0.c0, rt0.c2, vt0.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c1))<((t0.c0))) AS BLOB) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c2)OR(rt0.c0)))OR(t0.c56)), 0.2484100225432585) DESC  NULLS FIRST, (~ ((((t0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c56, rt0.c1)) AND ((vt0.c0, rt0.c2, vt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c1))<((t0.c0))) AS BLOB) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c2)OR(rt0.c0)))OR(t0.c56)), 0.2484100225432585) DESC  NULLS FIRST, (~ ((((t0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c56, rt0.c1)) AND ((vt0.c0, rt0.c2, vt0.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON CAST((((vt0.c1))<((t0.c0))) AS BLOB) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY LIKELIHOOD(DISTINCT ((((vt0.c2)OR(rt0.c0)))OR(t0.c56)), 0.2484100225432585) DESC  NULLS FIRST, (~ ((((t0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, t0.c56, rt0.c1)) AND ((vt0.c0, rt0.c2, vt0.c2)))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0)))*(((rt1.c0)!=(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0)))*(((rt1.c0)!=(rt1.c5))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0)))*(((rt1.c0)!=(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0)))*(((rt1.c0)!=(rt1.c5))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c0)))*(((rt1.c0)!=(rt1.c5)))));
SELECT ALL * FROM vt0, rt1, t0 RIGHT OUTER JOIN t1 ON (NOT (((((((((vt0.c1)AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))AND(vt0.c1)))) WHERE (NULL) ORDER BY (((((rt1.c5 IN ()))OR((NOT (vt0.c1)))))OR(((((vt0.c0)AND(vt0.c2)))OR(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1, t0 RIGHT OUTER JOIN t1 ON (NOT (((((((((vt0.c1)AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))AND(vt0.c1)))) ORDER BY (((((rt1.c5 IN ()))OR((NOT (vt0.c1)))))OR(((((vt0.c0)AND(vt0.c2)))OR(rt1.c3)))) DESC);
SELECT ALL * FROM vt0, rt1, t0 RIGHT OUTER JOIN t1 ON (NOT (((((((((vt0.c1)AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))AND(vt0.c1)))) WHERE (NULL) ORDER BY (((((rt1.c5 IN ()))OR((NOT (vt0.c1)))))OR(((((vt0.c0)AND(vt0.c2)))OR(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1, t0 RIGHT OUTER JOIN t1 ON (NOT (((((((((vt0.c1)AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))AND(vt0.c1)))) ORDER BY (((((rt1.c5 IN ()))OR((NOT (vt0.c1)))))OR(((((vt0.c0)AND(vt0.c2)))OR(rt1.c3)))) DESC);
SELECT ALL * FROM vt0, rt1, t0 RIGHT OUTER JOIN t1 ON (NOT (((((((((vt0.c1)AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)))AND(vt0.c1)))) WHERE (NULL) ORDER BY (((((rt1.c5 IN ()))OR((NOT (vt0.c1)))))OR(((((vt0.c0)AND(vt0.c2)))OR(rt1.c3)))) DESC;
SELECT ALL * FROM rt1 WHERE (((((rt1.c4)IS(rt1.c5)))LIKE(((rt1.c0) NOTNULL)))) ORDER BY (((rt1.c2))<((rt1.c5))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)IS(rt1.c5)))LIKE(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2))<((rt1.c5))) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4)IS(rt1.c5)))LIKE(((rt1.c0) NOTNULL)))) ORDER BY (((rt1.c2))<((rt1.c5))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)IS(rt1.c5)))LIKE(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2))<((rt1.c5))) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c4)IS(rt1.c5)))LIKE(((rt1.c0) NOTNULL)))) ORDER BY (((rt1.c2))<((rt1.c5))) COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (((((NULL)>=(rt1.c5))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)>=(rt1.c5))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((NULL)>=(rt1.c5))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)>=(rt1.c5))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((NULL)>=(rt1.c5))) ISNULL));
SELECT * FROM rt1, rt0, t1 FULL OUTER JOIN t0 ON rt1.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, t1 FULL OUTER JOIN t0 ON rt1.c0);
SELECT * FROM rt1, rt0, t1 FULL OUTER JOIN t0 ON rt1.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, t1 FULL OUTER JOIN t0 ON rt1.c0);
SELECT * FROM rt1, rt0, t1 FULL OUTER JOIN t0 ON rt1.c0 WHERE (rt0.c0);
SELECT ALL * FROM t1, vt0, t0, rt1 WHERE (STRFTIME(((((NULL)OR(rt1.c4)))AND(t1.c0)), LTRIM(rt1.c4), t1.c0 COLLATE RTRIM)) ORDER BY (((rt1.c3)) BETWEEN ((CAST(rt1.c3 AS INTEGER))) AND (((((vt0.c2, rt1.c1, t1.c0)) BETWEEN ((vt0.c2, '1451944257', vt0.c1)) AND ((-1906470089, vt0.c2, t0.c0))))))  NULLS FIRST, (((((t0.c0))>=((t0.c0)))) NOT BETWEEN ((rt1.c5 IN ())) AND (rt1.c1));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((((NULL)OR(rt1.c4)))AND(t1.c0)), LTRIM(rt1.c4), t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1, vt0, t0, rt1 ORDER BY (((rt1.c3)) BETWEEN ((CAST(rt1.c3 AS INTEGER))) AND (((((vt0.c2, rt1.c1, t1.c0)) BETWEEN ((vt0.c2, '1451944257', vt0.c1)) AND ((-1906470089, vt0.c2, t0.c0))))))  NULLS FIRST, (((((t0.c0))>=((t0.c0)))) NOT BETWEEN ((rt1.c5 IN ())) AND (rt1.c1)));
SELECT ALL * FROM t1, vt0, t0, rt1 WHERE (STRFTIME(((((NULL)OR(rt1.c4)))AND(t1.c0)), LTRIM(rt1.c4), t1.c0 COLLATE RTRIM)) ORDER BY (((rt1.c3)) BETWEEN ((CAST(rt1.c3 AS INTEGER))) AND (((((vt0.c2, rt1.c1, t1.c0)) BETWEEN ((vt0.c2, '1451944257', vt0.c1)) AND ((-1906470089, vt0.c2, t0.c0))))))  NULLS FIRST, (((((t0.c0))>=((t0.c0)))) NOT BETWEEN ((rt1.c5 IN ())) AND (rt1.c1));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((((NULL)OR(rt1.c4)))AND(t1.c0)), LTRIM(rt1.c4), t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1, vt0, t0, rt1 ORDER BY (((rt1.c3)) BETWEEN ((CAST(rt1.c3 AS INTEGER))) AND (((((vt0.c2, rt1.c1, t1.c0)) BETWEEN ((vt0.c2, '1451944257', vt0.c1)) AND ((-1906470089, vt0.c2, t0.c0))))))  NULLS FIRST, (((((t0.c0))>=((t0.c0)))) NOT BETWEEN ((rt1.c5 IN ())) AND (rt1.c1)));
SELECT ALL * FROM t1, vt0, t0, rt1 WHERE (STRFTIME(((((NULL)OR(rt1.c4)))AND(t1.c0)), LTRIM(rt1.c4), t1.c0 COLLATE RTRIM)) ORDER BY (((rt1.c3)) BETWEEN ((CAST(rt1.c3 AS INTEGER))) AND (((((vt0.c2, rt1.c1, t1.c0)) BETWEEN ((vt0.c2, '1451944257', vt0.c1)) AND ((-1906470089, vt0.c2, t0.c0))))))  NULLS FIRST, (((((t0.c0))>=((t0.c0)))) NOT BETWEEN ((rt1.c5 IN ())) AND (rt1.c1));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((NOT (vt0.c2))) ORDER BY CASE 0.7756418357648679  WHEN vt0.c0 THEN ((vt0.c2) NOT BETWEEN ('vr') AND (NULL)) WHEN CAST(t1.c0 AS TEXT) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c2)/(0.8366940618424518)) ELSE (vt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c2))) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE 0.7756418357648679  WHEN vt0.c0 THEN ((vt0.c2) NOT BETWEEN ('vr') AND (NULL)) WHEN CAST(t1.c0 AS TEXT) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c2)/(0.8366940618424518)) ELSE (vt0.c0 IN ()) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((NOT (vt0.c2))) ORDER BY CASE 0.7756418357648679  WHEN vt0.c0 THEN ((vt0.c2) NOT BETWEEN ('vr') AND (NULL)) WHEN CAST(t1.c0 AS TEXT) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c2)/(0.8366940618424518)) ELSE (vt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c2))) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE 0.7756418357648679  WHEN vt0.c0 THEN ((vt0.c2) NOT BETWEEN ('vr') AND (NULL)) WHEN CAST(t1.c0 AS TEXT) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c2)/(0.8366940618424518)) ELSE (vt0.c0 IN ()) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((NOT (vt0.c2))) ORDER BY CASE 0.7756418357648679  WHEN vt0.c0 THEN ((vt0.c2) NOT BETWEEN ('vr') AND (NULL)) WHEN CAST(t1.c0 AS TEXT) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c2)/(0.8366940618424518)) ELSE (vt0.c0 IN ()) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, vt0, t1 WHERE (917177090);
SELECT SUM(count) FROM (SELECT ALL ((917177090) IS TRUE)  as count FROM rt0, rt1, vt0, t1);
SELECT COUNT(*) FROM rt0, rt1, vt0, t1 WHERE (917177090);
SELECT SUM(count) FROM (SELECT ALL ((917177090) IS TRUE)  as count FROM rt0, rt1, vt0, t1);
SELECT COUNT(*) FROM rt0, rt1, vt0, t1 WHERE (917177090);
SELECT * FROM rt1 WHERE (-2059299879) ORDER BY CASE json_array_length(rt1.c5)  WHEN (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN CAST(rt1.c5 AS INTEGER) WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c5 COLLATE RTRIM WHEN ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c2)) THEN ((rt1.c5)*(rt1.c1)) END ASC, rt1.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-2059299879) IS TRUE)  as count FROM rt1 ORDER BY CASE json_array_length(rt1.c5)  WHEN (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN CAST(rt1.c5 AS INTEGER) WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c5 COLLATE RTRIM WHEN ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c2)) THEN ((rt1.c5)*(rt1.c1)) END ASC, rt1.c4  NULLS LAST);
SELECT * FROM rt1 WHERE (-2059299879) ORDER BY CASE json_array_length(rt1.c5)  WHEN (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN CAST(rt1.c5 AS INTEGER) WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c5 COLLATE RTRIM WHEN ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c2)) THEN ((rt1.c5)*(rt1.c1)) END ASC, rt1.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-2059299879) IS TRUE)  as count FROM rt1 ORDER BY CASE json_array_length(rt1.c5)  WHEN (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN CAST(rt1.c5 AS INTEGER) WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c5 COLLATE RTRIM WHEN ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c2)) THEN ((rt1.c5)*(rt1.c1)) END ASC, rt1.c4  NULLS LAST);
SELECT * FROM rt1 WHERE (-2059299879) ORDER BY CASE json_array_length(rt1.c5)  WHEN (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN CAST(rt1.c5 AS INTEGER) WHEN UPPER(DISTINCT rt1.c3) THEN rt1.c5 COLLATE RTRIM WHEN ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c2)) THEN ((rt1.c5)*(rt1.c1)) END ASC, rt1.c4  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE RTRIM)&((vt0.c0 IN (rt1.c3))))) ORDER BY (((rt1.c0 IN (rt1.c5, rt1.c5))) BETWEEN ((((rt1.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)&((vt0.c0 IN (rt1.c3))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0 IN (rt1.c5, rt1.c5))) BETWEEN ((((rt1.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END)) ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE RTRIM)&((vt0.c0 IN (rt1.c3))))) ORDER BY (((rt1.c0 IN (rt1.c5, rt1.c5))) BETWEEN ((((rt1.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)&((vt0.c0 IN (rt1.c3))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0 IN (rt1.c5, rt1.c5))) BETWEEN ((((rt1.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END)) ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((vt0.c0 COLLATE RTRIM)&((vt0.c0 IN (rt1.c3))))) ORDER BY (((rt1.c0 IN (rt1.c5, rt1.c5))) BETWEEN ((((rt1.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) AND (CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END)) ASC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE ((((((rt1.c2))<((rt1.c5)))) NOT BETWEEN (rt1.c0) AND (CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))<((rt1.c5)))) NOT BETWEEN (rt1.c0) AND (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE ((((((rt1.c2))<((rt1.c5)))) NOT BETWEEN (rt1.c0) AND (CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))<((rt1.c5)))) NOT BETWEEN (rt1.c0) AND (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE ((((((rt1.c2))<((rt1.c5)))) NOT BETWEEN (rt1.c0) AND (CAST(t0.c0 AS INTEGER))));
SELECT COUNT(*) FROM t1, rt1 WHERE (CASE ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c3))  WHEN ((((rt1.c2)AND(rt1.c0)))OR(NULL)) THEN ((t1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5)) THEN ((0.818452907949063)=(rt1.c0)) WHEN CAST(rt1.c4 AS TEXT) THEN (((rt1.c0))<=((rt1.c2))) WHEN CASE WHEN rt1.c0 THEN rt1.c1 END THEN CAST(rt1.c5 AS INTEGER) WHEN rt1.c5 COLLATE BINARY THEN ((((rt1.c0)OR(x'')))AND(rt1.c1)) ELSE ((rt1.c3) BETWEEN (t1.c0) AND (rt1.c5)) END) ORDER BY ((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((t1.c0))) IN ())  NULLS LAST, CASE (((rt1.c4, rt1.c5, rt1.c1)) BETWEEN ((NULL, rt1.c5, rt1.c1)) AND ((rt1.c2, rt1.c3, rt1.c1)))  WHEN (('382391462')<(rt1.c3)) THEN ((rt1.c5)%(rt1.c3)) ELSE (+ (x'552b')) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c3))  WHEN ((((rt1.c2)AND(rt1.c0)))OR(NULL)) THEN ((t1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5)) THEN ((0.818452907949063)==(rt1.c0)) WHEN CAST(rt1.c4 AS TEXT) THEN (((rt1.c0))<=((rt1.c2))) WHEN CASE WHEN rt1.c0 THEN rt1.c1 END THEN CAST(rt1.c5 AS INTEGER) WHEN rt1.c5 COLLATE BINARY THEN ((((rt1.c0)OR(x'')))AND(rt1.c1)) ELSE ((rt1.c3) BETWEEN (t1.c0) AND (rt1.c5)) END) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((t1.c0))) IN ())  NULLS LAST, CASE (((rt1.c4, rt1.c5, rt1.c1)) BETWEEN ((NULL, rt1.c5, rt1.c1)) AND ((rt1.c2, rt1.c3, rt1.c1)))  WHEN (('382391462')<(rt1.c3)) THEN ((rt1.c5)%(rt1.c3)) ELSE (+ (x'552b')) END ASC);
SELECT COUNT(*) FROM t1, rt1 WHERE (CASE ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c3))  WHEN ((((rt1.c2)AND(rt1.c0)))OR(NULL)) THEN ((t1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5)) THEN ((0.818452907949063)=(rt1.c0)) WHEN CAST(rt1.c4 AS TEXT) THEN (((rt1.c0))<=((rt1.c2))) WHEN CASE WHEN rt1.c0 THEN rt1.c1 END THEN CAST(rt1.c5 AS INTEGER) WHEN rt1.c5 COLLATE BINARY THEN ((((rt1.c0)OR(x'')))AND(rt1.c1)) ELSE ((rt1.c3) BETWEEN (t1.c0) AND (rt1.c5)) END) ORDER BY ((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((t1.c0))) IN ())  NULLS LAST, CASE (((rt1.c4, rt1.c5, rt1.c1)) BETWEEN ((NULL, rt1.c5, rt1.c1)) AND ((rt1.c2, rt1.c3, rt1.c1)))  WHEN (('382391462')<(rt1.c3)) THEN ((rt1.c5)%(rt1.c3)) ELSE (+ (x'552b')) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c3))  WHEN ((((rt1.c2)AND(rt1.c0)))OR(NULL)) THEN ((t1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5)) THEN ((0.818452907949063)==(rt1.c0)) WHEN CAST(rt1.c4 AS TEXT) THEN (((rt1.c0))<=((rt1.c2))) WHEN CASE WHEN rt1.c0 THEN rt1.c1 END THEN CAST(rt1.c5 AS INTEGER) WHEN rt1.c5 COLLATE BINARY THEN ((((rt1.c0)OR(x'')))AND(rt1.c1)) ELSE ((rt1.c3) BETWEEN (t1.c0) AND (rt1.c5)) END) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((t1.c0))) IN ())  NULLS LAST, CASE (((rt1.c4, rt1.c5, rt1.c1)) BETWEEN ((NULL, rt1.c5, rt1.c1)) AND ((rt1.c2, rt1.c3, rt1.c1)))  WHEN (('382391462')<(rt1.c3)) THEN ((rt1.c5)%(rt1.c3)) ELSE (+ (x'552b')) END ASC);
SELECT COUNT(*) FROM t1, rt1 WHERE (CASE ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c3))  WHEN ((((rt1.c2)AND(rt1.c0)))OR(NULL)) THEN ((t1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5)) THEN ((0.818452907949063)=(rt1.c0)) WHEN CAST(rt1.c4 AS TEXT) THEN (((rt1.c0))<=((rt1.c2))) WHEN CASE WHEN rt1.c0 THEN rt1.c1 END THEN CAST(rt1.c5 AS INTEGER) WHEN rt1.c5 COLLATE BINARY THEN ((((rt1.c0)OR(x'')))AND(rt1.c1)) ELSE ((rt1.c3) BETWEEN (t1.c0) AND (rt1.c5)) END) ORDER BY ((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((t1.c0))) IN ())  NULLS LAST, CASE (((rt1.c4, rt1.c5, rt1.c1)) BETWEEN ((NULL, rt1.c5, rt1.c1)) AND ((rt1.c2, rt1.c3, rt1.c1)))  WHEN (('382391462')<(rt1.c3)) THEN ((rt1.c5)%(rt1.c3)) ELSE (+ (x'552b')) END ASC;
SELECT ALL * FROM t1 WHERE (CAST(1490355220 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1490355220 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(1490355220 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1490355220 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(1490355220 COLLATE NOCASE AS BLOB));
SELECT ALL * FROM rt1, t0, t1, vt0, rt0 WHERE (((NULL)AND(COALESCE(rt0.c3, rt1.c3, vt0.c2, rt1.c1, t1.c0, rt1.c0)))) ORDER BY ((+ (rt0.c1)) IN (rt0.c0, CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((NULL)AND(COALESCE(rt0.c3, rt1.c3, vt0.c2, rt1.c1, t1.c0, rt1.c0)))) IS TRUE)  as count FROM rt1, t0, t1, vt0, rt0 ORDER BY ((+ (rt0.c1)) IN (rt0.c0, CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt1, t0, t1, vt0, rt0 WHERE (((NULL)AND(COALESCE(rt0.c3, rt1.c3, vt0.c2, rt1.c1, t1.c0, rt1.c0)))) ORDER BY ((+ (rt0.c1)) IN (rt0.c0, CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((NULL)AND(COALESCE(rt0.c3, rt1.c3, vt0.c2, rt1.c1, t1.c0, rt1.c0)))) IS TRUE)  as count FROM rt1, t0, t1, vt0, rt0 ORDER BY ((+ (rt0.c1)) IN (rt0.c0, CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt1, t0, t1, vt0, rt0 WHERE (((NULL)AND(COALESCE(rt0.c3, rt1.c3, vt0.c2, rt1.c1, t1.c0, rt1.c0)))) ORDER BY ((+ (rt0.c1)) IN (rt0.c0, CAST(rt0.c2 AS TEXT)));
SELECT ALL * FROM t1, rt0, t0 WHERE (((((rt0.c3) BETWEEN (t0.c56) AND (t0.c0)))|(((rt0.c3)IS(0.9512132628546184))))) ORDER BY LIKELY(DISTINCT ((t0.c0) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (t0.c56) AND (t0.c0)))|(((rt0.c3)IS(0.9512132628546184))))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY LIKELY(DISTINCT ((t0.c0) ISNULL)) ASC);
SELECT ALL * FROM t1, rt0, t0 WHERE (((((rt0.c3) BETWEEN (t0.c56) AND (t0.c0)))|(((rt0.c3)IS(0.9512132628546184))))) ORDER BY LIKELY(DISTINCT ((t0.c0) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (t0.c56) AND (t0.c0)))|(((rt0.c3)IS(0.9512132628546184))))) IS TRUE)  as count FROM t1, rt0, t0 ORDER BY LIKELY(DISTINCT ((t0.c0) ISNULL)) ASC);
SELECT ALL * FROM t1, rt0, t0 WHERE (((((rt0.c3) BETWEEN (t0.c56) AND (t0.c0)))|(((rt0.c3)IS(0.9512132628546184))))) ORDER BY LIKELY(DISTINCT ((t0.c0) ISNULL)) ASC;
SELECT ALL COUNT(*) FROM t0, t1, rt1 WHERE (CASE WHEN rt1.c4 THEN ((((t0.c56)OR(t0.c56)))AND(rt1.c2)) WHEN ((NULL)GLOB(rt1.c0)) THEN CASE WHEN rt1.c4 THEN t0.c56 ELSE rt1.c5 END WHEN t0.c56 THEN (~ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c4 THEN ((((t0.c56)OR(t0.c56)))AND(rt1.c2)) WHEN ((NULL)GLOB(rt1.c0)) THEN CASE WHEN rt1.c4 THEN t0.c56 ELSE rt1.c5 END WHEN t0.c56 THEN (~ (rt1.c1)) END) IS TRUE)  as count FROM t0, t1, rt1);
SELECT ALL COUNT(*) FROM t0, t1, rt1 WHERE (CASE WHEN rt1.c4 THEN ((((t0.c56)OR(t0.c56)))AND(rt1.c2)) WHEN ((NULL)GLOB(rt1.c0)) THEN CASE WHEN rt1.c4 THEN t0.c56 ELSE rt1.c5 END WHEN t0.c56 THEN (~ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c4 THEN ((((t0.c56)OR(t0.c56)))AND(rt1.c2)) WHEN ((NULL)GLOB(rt1.c0)) THEN CASE WHEN rt1.c4 THEN t0.c56 ELSE rt1.c5 END WHEN t0.c56 THEN (~ (rt1.c1)) END) IS TRUE)  as count FROM t0, t1, rt1);
SELECT ALL COUNT(*) FROM t0, t1, rt1 WHERE (CASE WHEN rt1.c4 THEN ((((t0.c56)OR(t0.c56)))AND(rt1.c2)) WHEN ((NULL)GLOB(rt1.c0)) THEN CASE WHEN rt1.c4 THEN t0.c56 ELSE rt1.c5 END WHEN t0.c56 THEN (~ (rt1.c1)) END);
SELECT * FROM rt1, rt0, t1 LEFT OUTER JOIN t0 ON (((rt1.c0)>>(rt1.c2)) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((NULL))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM rt1, rt0, t1 LEFT OUTER JOIN t0 ON (((rt1.c0)>>(rt1.c2)) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((NULL))));
SELECT * FROM rt1, rt0, t1 LEFT OUTER JOIN t0 ON (((rt1.c0)>>(rt1.c2)) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((NULL))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM rt1, rt0, t1 LEFT OUTER JOIN t0 ON (((rt1.c0)>>(rt1.c2)) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((NULL))));
SELECT * FROM rt1, rt0, t1 LEFT OUTER JOIN t0 ON (((rt1.c0)>>(rt1.c2)) IN ()) FULL OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((NULL))) WHERE (t1.c0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((('983569888'))>=((((((rt1.c0)OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY (((x'') NOT BETWEEN (rt1.c5) AND (rt0.c0)) IN (TYPEOF(DISTINCT rt1.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('983569888'))>=((((((rt1.c0)OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (((x'') NOT BETWEEN (rt1.c5) AND (rt0.c0)) IN (TYPEOF(DISTINCT rt1.c3))) ASC  NULLS LAST);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((('983569888'))>=((((((rt1.c0)OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY (((x'') NOT BETWEEN (rt1.c5) AND (rt0.c0)) IN (TYPEOF(DISTINCT rt1.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('983569888'))>=((((((rt1.c0)OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (((x'') NOT BETWEEN (rt1.c5) AND (rt0.c0)) IN (TYPEOF(DISTINCT rt1.c3))) ASC  NULLS LAST);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((('983569888'))>=((((((rt1.c0)OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY (((x'') NOT BETWEEN (rt1.c5) AND (rt0.c0)) IN (TYPEOF(DISTINCT rt1.c3))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((~ (vt0.c2)))AND(-6.42068152E8)))AND(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c2)))AND(-6.42068152E8)))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((~ (vt0.c2)))AND(-6.42068152E8)))AND(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c2)))AND(-6.42068152E8)))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((~ (vt0.c2)))AND(-6.42068152E8)))AND(((vt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM rt1, vt0, t0 NATURAL JOIN rt0 WHERE (rt1.c4) ORDER BY t0.c56 ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, vt0, t0 NATURAL JOIN rt0 ORDER BY t0.c56 ASC);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 NATURAL JOIN rt0 WHERE (rt1.c4) ORDER BY t0.c56 ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, vt0, t0 NATURAL JOIN rt0 ORDER BY t0.c56 ASC);
SELECT ALL COUNT(*) FROM rt1, vt0, t0 NATURAL JOIN rt0 WHERE (rt1.c4) ORDER BY t0.c56 ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ ((NOT (rt0.c1))))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ ((NOT (rt0.c1))))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ ((NOT (rt0.c1))))) ORDER BY rt0.c3  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE BINARY) IS TRUE) CROSS JOIN rt0 ON '434461175' WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (vt0.c0) AND (TYPEOF(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (vt0.c0) AND (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE BINARY) IS TRUE) CROSS JOIN rt0 ON '434461175');
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE BINARY) IS TRUE) CROSS JOIN rt0 ON '434461175' WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (vt0.c0) AND (TYPEOF(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (vt0.c0) AND (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t1 ON ((rt0.c0 COLLATE BINARY) IS TRUE) CROSS JOIN rt0 ON '434461175');
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((((rt0.c0)IS(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS(rt0.c3)) IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((((rt0.c0)IS(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS(rt0.c3)) IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((((rt0.c0)IS(rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t0, t1 WHERE (NULL) ORDER BY ((t0.c56)LIKE(t0.c56)) COLLATE BINARY ASC, 0.9018676978843401 ASC  NULLS LAST, (+ ((- (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1, rt0, t0, t1 ORDER BY ((t0.c56)LIKE(t0.c56)) COLLATE BINARY ASC, 0.9018676978843401 ASC  NULLS LAST, (+ ((- (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t0, t1 WHERE (NULL) ORDER BY ((t0.c56)LIKE(t0.c56)) COLLATE BINARY ASC, 0.9018676978843401 ASC  NULLS LAST, (+ ((- (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1, rt0, t0, t1 ORDER BY ((t0.c56)LIKE(t0.c56)) COLLATE BINARY ASC, 0.9018676978843401 ASC  NULLS LAST, (+ ((- (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t0, t1 WHERE (NULL) ORDER BY ((t0.c56)LIKE(t0.c56)) COLLATE BINARY ASC, 0.9018676978843401 ASC  NULLS LAST, (+ ((- (t0.c0)))) ASC;
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c3 LEFT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((rt1.c5 IN (rt1.c3)))) AND ((rt0.c0 COLLATE NOCASE))) CROSS JOIN rt1 ON CASE CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END  WHEN vt0.c1 THEN ((rt1.c0)>=(t1.c0)) ELSE (x'636a' IN (rt1.c5)) END WHERE ((((rt1.c5) NOTNULL) IN (((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5) NOTNULL) IN (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c3 LEFT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((rt1.c5 IN (rt1.c3)))) AND ((rt0.c0 COLLATE NOCASE))) CROSS JOIN rt1 ON CASE CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END  WHEN vt0.c1 THEN ((rt1.c0)>=(t1.c0)) ELSE (x'636a' IN (rt1.c5)) END);
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c3 LEFT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((rt1.c5 IN (rt1.c3)))) AND ((rt0.c0 COLLATE NOCASE))) CROSS JOIN rt1 ON CASE CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END  WHEN vt0.c1 THEN ((rt1.c0)>=(t1.c0)) ELSE (x'636a' IN (rt1.c5)) END WHERE ((((rt1.c5) NOTNULL) IN (((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c5) NOTNULL) IN (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c3 LEFT OUTER JOIN vt0 ON (((vt0.c2)) BETWEEN (((rt1.c5 IN (rt1.c3)))) AND ((rt0.c0 COLLATE NOCASE))) CROSS JOIN rt1 ON CASE CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END  WHEN vt0.c1 THEN ((rt1.c0)>=(t1.c0)) ELSE (x'636a' IN (rt1.c5)) END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c5);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)=(vt0.c2)) AS REAL)) ORDER BY (+ ((vt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)==(vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c2 IN ()))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)=(vt0.c2)) AS REAL)) ORDER BY (+ ((vt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)==(vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c2 IN ()))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)=(vt0.c2)) AS REAL)) ORDER BY (+ ((vt0.c2 IN ()))) ASC;
SELECT ALL * FROM t1 WHERE ((NOT ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((NOT ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((NOT ((+ (t1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c1)) THEN '' WHEN ((rt1.c5)>=(rt1.c4)) THEN JULIANDAY(rt1.c0, 0xffffffff912866e9, rt1.c3) WHEN ((rt1.c4)IS(rt1.c0)) THEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE rt1.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c1)) THEN '' WHEN ((rt1.c5)>=(rt1.c4)) THEN JULIANDAY(rt1.c0, 0Xffffffff912866e9, rt1.c3) WHEN ((rt1.c4)IS(rt1.c0)) THEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE rt1.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c1)) THEN '' WHEN ((rt1.c5)>=(rt1.c4)) THEN JULIANDAY(rt1.c0, 0xffffffff912866e9, rt1.c3) WHEN ((rt1.c4)IS(rt1.c0)) THEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE rt1.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c1)) THEN '' WHEN ((rt1.c5)>=(rt1.c4)) THEN JULIANDAY(rt1.c0, 0Xffffffff912866e9, rt1.c3) WHEN ((rt1.c4)IS(rt1.c0)) THEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE rt1.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c1)) THEN '' WHEN ((rt1.c5)>=(rt1.c4)) THEN JULIANDAY(rt1.c0, 0xffffffff912866e9, rt1.c3) WHEN ((rt1.c4)IS(rt1.c0)) THEN ((((((((rt1.c0)OR(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))OR(rt1.c1)) ELSE rt1.c3 COLLATE NOCASE END);
SELECT COUNT(*) FROM t1, rt1, vt0, rt0, t0 WHERE ((((t0.c56) NOT NULL) IN ())) ORDER BY (((t0.c56 IN (vt0.c1, rt1.c3)))LIKE(((((vt0.c0)AND(rt1.c3)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56) NOT NULL) IN ())) IS TRUE)  as count FROM t1, rt1, vt0, rt0, t0 ORDER BY (((t0.c56 IN (vt0.c1, rt1.c3)))LIKE(((((vt0.c0)AND(rt1.c3)))OR(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1, vt0, rt0, t0 WHERE ((((t0.c56) NOT NULL) IN ())) ORDER BY (((t0.c56 IN (vt0.c1, rt1.c3)))LIKE(((((vt0.c0)AND(rt1.c3)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56) NOT NULL) IN ())) IS TRUE)  as count FROM t1, rt1, vt0, rt0, t0 ORDER BY (((t0.c56 IN (vt0.c1, rt1.c3)))LIKE(((((vt0.c0)AND(rt1.c3)))OR(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1, vt0, rt0, t0 WHERE ((((t0.c56) NOT NULL) IN ())) ORDER BY (((t0.c56 IN (vt0.c1, rt1.c3)))LIKE(((((vt0.c0)AND(rt1.c3)))OR(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((~ ((~ (rt1.c0))))) ORDER BY (((((rt1.c5)AND(rt1.c0)))OR(rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c5)AND(rt1.c0)))OR(rt1.c0)) IN ()));
SELECT ALL * FROM rt1 WHERE ((~ ((~ (rt1.c0))))) ORDER BY (((((rt1.c5)AND(rt1.c0)))OR(rt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c5)AND(rt1.c0)))OR(rt1.c0)) IN ()));
SELECT ALL * FROM rt1 WHERE ((~ ((~ (rt1.c0))))) ORDER BY (((((rt1.c5)AND(rt1.c0)))OR(rt1.c0)) IN ());
SELECT * FROM rt1 WHERE (((rt1.c4 COLLATE BINARY)GLOB(CAST(rt1.c0 AS INTEGER)))) ORDER BY (rt1.c2 IN ())  NULLS LAST, (NOT (rt1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE BINARY)GLOB(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c2 IN ())  NULLS LAST, (NOT (rt1.c0)) COLLATE BINARY ASC);
SELECT * FROM rt1 WHERE (((rt1.c4 COLLATE BINARY)GLOB(CAST(rt1.c0 AS INTEGER)))) ORDER BY (rt1.c2 IN ())  NULLS LAST, (NOT (rt1.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE BINARY)GLOB(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c2 IN ())  NULLS LAST, (NOT (rt1.c0)) COLLATE BINARY ASC);
SELECT * FROM rt1 WHERE (((rt1.c4 COLLATE BINARY)GLOB(CAST(rt1.c0 AS INTEGER)))) ORDER BY (rt1.c2 IN ())  NULLS LAST, (NOT (rt1.c0)) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE ((~ (rt0.c1)) COLLATE RTRIM) ORDER BY ((CAST(rt0.c3 AS NUMERIC)) BETWEEN (TRIM(DISTINCT vt0.c2)) AND (((vt0.c2)OR(rt0.c2)))) DESC, ((rt0.c0) NOT NULL) DESC  NULLS FIRST, ((CASE NULL  WHEN t1.c0 THEN rt0.c0 ELSE vt0.c2 END) BETWEEN (((((rt0.c3)AND(vt0.c0)))OR(vt0.c0))) AND (((0.0030884163095689088) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((CAST(rt0.c3 AS NUMERIC)) BETWEEN (TRIM(DISTINCT vt0.c2)) AND (((vt0.c2)OR(rt0.c2)))) DESC, ((rt0.c0) NOT NULL) DESC  NULLS FIRST, ((CASE NULL  WHEN t1.c0 THEN rt0.c0 ELSE vt0.c2 END) BETWEEN (((((rt0.c3)AND(vt0.c0)))OR(vt0.c0))) AND (((0.0030884163095689088) ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE ((~ (rt0.c1)) COLLATE RTRIM) ORDER BY ((CAST(rt0.c3 AS NUMERIC)) BETWEEN (TRIM(DISTINCT vt0.c2)) AND (((vt0.c2)OR(rt0.c2)))) DESC, ((rt0.c0) NOT NULL) DESC  NULLS FIRST, ((CASE NULL  WHEN t1.c0 THEN rt0.c0 ELSE vt0.c2 END) BETWEEN (((((rt0.c3)AND(vt0.c0)))OR(vt0.c0))) AND (((0.0030884163095689088) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((CAST(rt0.c3 AS NUMERIC)) BETWEEN (TRIM(DISTINCT vt0.c2)) AND (((vt0.c2)OR(rt0.c2)))) DESC, ((rt0.c0) NOT NULL) DESC  NULLS FIRST, ((CASE NULL  WHEN t1.c0 THEN rt0.c0 ELSE vt0.c2 END) BETWEEN (((((rt0.c3)AND(vt0.c0)))OR(vt0.c0))) AND (((0.0030884163095689088) ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE ((~ (rt0.c1)) COLLATE RTRIM) ORDER BY ((CAST(rt0.c3 AS NUMERIC)) BETWEEN (TRIM(DISTINCT vt0.c2)) AND (((vt0.c2)OR(rt0.c2)))) DESC, ((rt0.c0) NOT NULL) DESC  NULLS FIRST, ((CASE NULL  WHEN t1.c0 THEN rt0.c0 ELSE vt0.c2 END) BETWEEN (((((rt0.c3)AND(vt0.c0)))OR(vt0.c0))) AND (((0.0030884163095689088) ISNULL))) ASC  NULLS LAST;
SELECT ALL * FROM t1, rt0, vt0, rt1, t0 WHERE ((- (HEX(0x41bbe8e4)))) ORDER BY ((((t0.c56) NOT NULL)) BETWEEN (((((rt0.c0)OR(rt0.c1)))OR(NULL))) AND (((rt1.c3)>=(rt1.c0)))), CASE (+ (vt0.c1))  WHEN ((((((((vt0.c2)AND(t0.c56)))OR(vt0.c2)))AND(rt1.c2)))OR(vt0.c1)) THEN t0.c0 END ASC, t0.c56 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (HEX(0x41bbe8e4)))) IS TRUE)  as count FROM t1, rt0, vt0, rt1 NOT INDEXED, t0 ORDER BY ((((t0.c56) NOT NULL)) BETWEEN (((((rt0.c0)OR(rt0.c1)))OR(NULL))) AND (((rt1.c3)>=(rt1.c0)))), CASE (+ (vt0.c1))  WHEN ((((((((vt0.c2)AND(t0.c56)))OR(vt0.c2)))AND(rt1.c2)))OR(vt0.c1)) THEN t0.c0 END ASC, t0.c56 ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0, vt0, rt1, t0 WHERE ((- (HEX(0x41bbe8e4)))) ORDER BY ((((t0.c56) NOT NULL)) BETWEEN (((((rt0.c0)OR(rt0.c1)))OR(NULL))) AND (((rt1.c3)>=(rt1.c0)))), CASE (+ (vt0.c1))  WHEN ((((((((vt0.c2)AND(t0.c56)))OR(vt0.c2)))AND(rt1.c2)))OR(vt0.c1)) THEN t0.c0 END ASC, t0.c56 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (HEX(0x41bbe8e4)))) IS TRUE)  as count FROM t1, rt0, vt0, rt1 NOT INDEXED, t0 ORDER BY ((((t0.c56) NOT NULL)) BETWEEN (((((rt0.c0)OR(rt0.c1)))OR(NULL))) AND (((rt1.c3)>=(rt1.c0)))), CASE (+ (vt0.c1))  WHEN ((((((((vt0.c2)AND(t0.c56)))OR(vt0.c2)))AND(rt1.c2)))OR(vt0.c1)) THEN t0.c0 END ASC, t0.c56 ASC  NULLS LAST);
SELECT ALL * FROM t1, rt0, vt0, rt1, t0 WHERE ((- (HEX(0x41bbe8e4)))) ORDER BY ((((t0.c56) NOT NULL)) BETWEEN (((((rt0.c0)OR(rt0.c1)))OR(NULL))) AND (((rt1.c3)>=(rt1.c0)))), CASE (+ (vt0.c1))  WHEN ((((((((vt0.c2)AND(t0.c56)))OR(vt0.c2)))AND(rt1.c2)))OR(vt0.c1)) THEN t0.c0 END ASC, t0.c56 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (' H+');
SELECT SUM(count) FROM (SELECT ((' H+') IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (' H+');
SELECT SUM(count) FROM (SELECT ((' H+') IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (' H+');
SELECT ALL COUNT(*) FROM t0, t1, rt1, vt0, rt0 WHERE (((((((rt1.c3)>>(rt1.c3)))AND((('8')LIKE(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN t0.c56 WHEN t0.c56 THEN t0.c0 ELSE vt0.c2 END))) ORDER BY (((rt1.c3, rt1.c0, vt0.c0, 0.39543965193159536, 0.6702701933817624)) BETWEEN ((CAST(rt1.c0 AS REAL), ((t0.c56) BETWEEN (rt0.c1) AND (0.72934053925557)), ((((vt0.c1)AND(rt0.c1)))AND(rt0.c3)), NULL, vt0.c2)) AND ((((rt0.c2)<=(rt0.c1)), ((rt0.c0)OR(rt1.c1)), ((((((((((((rt0.c1)OR(t0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c3)))AND(t1.c0)))AND(rt1.c2)), CAST(rt0.c2 AS BLOB), ABS(rt1.c1))))  NULLS LAST, rtreenode((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), CASE WHEN vt0.c0 THEN rt0.c3 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)>>(rt1.c3)))AND((('8')LIKE(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN t0.c56 WHEN t0.c56 THEN t0.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM t0, t1, rt1, vt0, rt0 ORDER BY (((rt1.c3, rt1.c0, vt0.c0, 0.39543965193159536, 0.6702701933817624)) BETWEEN ((CAST(rt1.c0 AS REAL), ((t0.c56) BETWEEN (rt0.c1) AND (0.72934053925557)), ((((vt0.c1)AND(rt0.c1)))AND(rt0.c3)), NULL, vt0.c2)) AND ((((rt0.c2)<=(rt0.c1)), ((rt0.c0)OR(rt1.c1)), ((((((((((((rt0.c1)OR(t0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c3)))AND(t1.c0)))AND(rt1.c2)), CAST(rt0.c2 AS BLOB), ABS(rt1.c1))))  NULLS LAST, rtreenode((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), CASE WHEN vt0.c0 THEN rt0.c3 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t1, rt1, vt0, rt0 WHERE (((((((rt1.c3)>>(rt1.c3)))AND((('8')LIKE(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN t0.c56 WHEN t0.c56 THEN t0.c0 ELSE vt0.c2 END))) ORDER BY (((rt1.c3, rt1.c0, vt0.c0, 0.39543965193159536, 0.6702701933817624)) BETWEEN ((CAST(rt1.c0 AS REAL), ((t0.c56) BETWEEN (rt0.c1) AND (0.72934053925557)), ((((vt0.c1)AND(rt0.c1)))AND(rt0.c3)), NULL, vt0.c2)) AND ((((rt0.c2)<=(rt0.c1)), ((rt0.c0)OR(rt1.c1)), ((((((((((((rt0.c1)OR(t0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c3)))AND(t1.c0)))AND(rt1.c2)), CAST(rt0.c2 AS BLOB), ABS(rt1.c1))))  NULLS LAST, rtreenode((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), CASE WHEN vt0.c0 THEN rt0.c3 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)>>(rt1.c3)))AND((('8')LIKE(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN t0.c56 WHEN t0.c56 THEN t0.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM t0, t1, rt1, vt0, rt0 ORDER BY (((rt1.c3, rt1.c0, vt0.c0, 0.39543965193159536, 0.6702701933817624)) BETWEEN ((CAST(rt1.c0 AS REAL), ((t0.c56) BETWEEN (rt0.c1) AND (0.72934053925557)), ((((vt0.c1)AND(rt0.c1)))AND(rt0.c3)), NULL, vt0.c2)) AND ((((rt0.c2)<=(rt0.c1)), ((rt0.c0)OR(rt1.c1)), ((((((((((((rt0.c1)OR(t0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c3)))AND(t1.c0)))AND(rt1.c2)), CAST(rt0.c2 AS BLOB), ABS(rt1.c1))))  NULLS LAST, rtreenode((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), CASE WHEN vt0.c0 THEN rt0.c3 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, t1, rt1, vt0, rt0 WHERE (((((((rt1.c3)>>(rt1.c3)))AND((('8')LIKE(vt0.c0)))))AND(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN t0.c56 WHEN t0.c56 THEN t0.c0 ELSE vt0.c2 END))) ORDER BY (((rt1.c3, rt1.c0, vt0.c0, 0.39543965193159536, 0.6702701933817624)) BETWEEN ((CAST(rt1.c0 AS REAL), ((t0.c56) BETWEEN (rt0.c1) AND (0.72934053925557)), ((((vt0.c1)AND(rt0.c1)))AND(rt0.c3)), NULL, vt0.c2)) AND ((((rt0.c2)<=(rt0.c1)), ((rt0.c0)OR(rt1.c1)), ((((((((((((rt0.c1)OR(t0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c3)))AND(t1.c0)))AND(rt1.c2)), CAST(rt0.c2 AS BLOB), ABS(rt1.c1))))  NULLS LAST, rtreenode((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))), CASE WHEN vt0.c0 THEN rt0.c3 END)  NULLS FIRST;
SELECT ALL * FROM t0, rt0, t1, rt1, vt0 WHERE ((((rt1.c3, rt1.c3, rt1.c4, rt1.c5, rt0.c1)) BETWEEN ((((((vt0.c0)OR(t0.c56)))OR(vt0.c1)), ((((rt1.c4)AND(rt0.c2)))AND(vt0.c0)), ((rt1.c1) NOT NULL), (vt0.c1 IN ()), rt0.c0)) AND (((((rt1.c4)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))), ((t0.c0)IS(rt1.c5)), ((rt0.c3) NOTNULL), (((rt1.c4, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c2, vt0.c1, rt0.c2)) AND ((vt0.c0, rt1.c1, rt1.c2))), (((rt1.c3))>((x'3160'))))))) ORDER BY ((json_valid(rt1.c0)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt1.c3, rt1.c4, rt1.c5, rt0.c1)) BETWEEN ((((((vt0.c0)OR(t0.c56)))OR(vt0.c1)), ((((rt1.c4)AND(rt0.c2)))AND(vt0.c0)), ((rt1.c1) NOT NULL), (vt0.c1 IN ()), rt0.c0)) AND (((((rt1.c4)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))), ((t0.c0)IS(rt1.c5)), ((rt0.c3) NOTNULL), (((rt1.c4, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c2, vt0.c1, rt0.c2)) AND ((vt0.c0, rt1.c1, rt1.c2))), (((rt1.c3))>((x'3160'))))))) IS TRUE)  as count FROM t0, rt0, t1, rt1, vt0 ORDER BY ((json_valid(rt1.c0)) NOT NULL));
SELECT ALL * FROM t0, rt0, t1, rt1, vt0 WHERE ((((rt1.c3, rt1.c3, rt1.c4, rt1.c5, rt0.c1)) BETWEEN ((((((vt0.c0)OR(t0.c56)))OR(vt0.c1)), ((((rt1.c4)AND(rt0.c2)))AND(vt0.c0)), ((rt1.c1) NOT NULL), (vt0.c1 IN ()), rt0.c0)) AND (((((rt1.c4)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))), ((t0.c0)IS(rt1.c5)), ((rt0.c3) NOTNULL), (((rt1.c4, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c2, vt0.c1, rt0.c2)) AND ((vt0.c0, rt1.c1, rt1.c2))), (((rt1.c3))>((x'3160'))))))) ORDER BY ((json_valid(rt1.c0)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt1.c3, rt1.c4, rt1.c5, rt0.c1)) BETWEEN ((((((vt0.c0)OR(t0.c56)))OR(vt0.c1)), ((((rt1.c4)AND(rt0.c2)))AND(vt0.c0)), ((rt1.c1) NOT NULL), (vt0.c1 IN ()), rt0.c0)) AND (((((rt1.c4)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))), ((t0.c0)IS(rt1.c5)), ((rt0.c3) NOTNULL), (((rt1.c4, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c2, vt0.c1, rt0.c2)) AND ((vt0.c0, rt1.c1, rt1.c2))), (((rt1.c3))>((x'3160'))))))) IS TRUE)  as count FROM t0, rt0, t1, rt1, vt0 ORDER BY ((json_valid(rt1.c0)) NOT NULL));
SELECT ALL * FROM t0, rt0, t1, rt1, vt0 WHERE ((((rt1.c3, rt1.c3, rt1.c4, rt1.c5, rt0.c1)) BETWEEN ((((((vt0.c0)OR(t0.c56)))OR(vt0.c1)), ((((rt1.c4)AND(rt0.c2)))AND(vt0.c0)), ((rt1.c1) NOT NULL), (vt0.c1 IN ()), rt0.c0)) AND (((((rt1.c4)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))), ((t0.c0)IS(rt1.c5)), ((rt0.c3) NOTNULL), (((rt1.c4, rt1.c2, rt1.c0)) NOT BETWEEN ((rt1.c2, vt0.c1, rt0.c2)) AND ((vt0.c0, rt1.c1, rt1.c2))), (((rt1.c3))>((x'3160'))))))) ORDER BY ((json_valid(rt1.c0)) NOT NULL);
SELECT * FROM rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt0.c3);
SELECT * FROM rt0 WHERE (((((rt0.c1)|(rt0.c0)))<>(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c0)))!=(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)|(rt0.c0)))<>(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c0)))!=(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)|(rt0.c0)))<>(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL * FROM t1, vt0, t0, rt1, rt0 WHERE (NULL) ORDER BY (rt1.c1 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt0, t0, rt1, rt0 ORDER BY (rt1.c1 COLLATE NOCASE IN ())  NULLS LAST);
SELECT ALL * FROM t1, vt0, t0, rt1, rt0 WHERE (NULL) ORDER BY (rt1.c1 COLLATE NOCASE IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt0, t0, rt1, rt0 ORDER BY (rt1.c1 COLLATE NOCASE IN ())  NULLS LAST);
SELECT ALL * FROM t1, vt0, t0, rt1, rt0 WHERE (NULL) ORDER BY (rt1.c1 COLLATE NOCASE IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1, rt1, t0, vt0 WHERE ((rt0.c2 IN ('')) COLLATE NOCASE) ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 END  WHEN ((rt0.c2)IS(vt0.c2)) THEN ((((vt0.c1)AND(t0.c56)))OR(vt0.c1)) ELSE '602219142' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ('')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, rt1, t0, vt0 ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 END  WHEN ((rt0.c2)IS(vt0.c2)) THEN ((((vt0.c1)AND(t0.c56)))OR(vt0.c1)) ELSE '602219142' END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1, rt1, t0, vt0 WHERE ((rt0.c2 IN ('')) COLLATE NOCASE) ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 END  WHEN ((rt0.c2)IS(vt0.c2)) THEN ((((vt0.c1)AND(t0.c56)))OR(vt0.c1)) ELSE '602219142' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ('')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, rt1, t0, vt0 ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 END  WHEN ((rt0.c2)IS(vt0.c2)) THEN ((((vt0.c1)AND(t0.c56)))OR(vt0.c1)) ELSE '602219142' END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1, rt1, t0, vt0 WHERE ((rt0.c2 IN ('')) COLLATE NOCASE) ORDER BY CASE CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 END  WHEN ((rt0.c2)IS(vt0.c2)) THEN ((((vt0.c1)AND(t0.c56)))OR(vt0.c1)) ELSE '602219142' END ASC  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (((rt1.c4 COLLATE RTRIM)!=((- (rt1.c2))))) ORDER BY (((rt1.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt1.c2)>>(rt1.c2)))))  NULLS LAST, rt1.c5  NULLS FIRST, ((rt1.c2)GLOB(((((rt1.c5)OR(rt1.c4)))OR(-1.710516044E9)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE RTRIM)!=((- (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt1.c2)>>(rt1.c2)))))  NULLS LAST, rt1.c5  NULLS FIRST, ((rt1.c2)GLOB(((((rt1.c5)OR(rt1.c4)))OR(-1.710516044E9)))) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((rt1.c4 COLLATE RTRIM)!=((- (rt1.c2))))) ORDER BY (((rt1.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt1.c2)>>(rt1.c2)))))  NULLS LAST, rt1.c5  NULLS FIRST, ((rt1.c2)GLOB(((((rt1.c5)OR(rt1.c4)))OR(-1.710516044E9)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE RTRIM)!=((- (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt1.c2)>>(rt1.c2)))))  NULLS LAST, rt1.c5  NULLS FIRST, ((rt1.c2)GLOB(((((rt1.c5)OR(rt1.c4)))OR(-1.710516044E9)))) DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((rt1.c4 COLLATE RTRIM)!=((- (rt1.c2))))) ORDER BY (((rt1.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt1.c2)>>(rt1.c2)))))  NULLS LAST, rt1.c5  NULLS FIRST, ((rt1.c2)GLOB(((((rt1.c5)OR(rt1.c4)))OR(-1.710516044E9)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t1, t0, rt1 WHERE (json_extract((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((1.49537605E9))), ((((t1.c0)OR(vt0.c0)))AND(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((json_extract((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((1.49537605E9))), ((((t1.c0)OR(vt0.c0)))AND(vt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t1, t0, rt1);
SELECT ALL * FROM vt0, rt0, t1, t0, rt1 WHERE (json_extract((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((1.49537605E9))), ((((t1.c0)OR(vt0.c0)))AND(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((json_extract((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((1.49537605E9))), ((((t1.c0)OR(vt0.c0)))AND(vt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t1, t0, rt1);
SELECT ALL * FROM vt0, rt0, t1, t0, rt1 WHERE (json_extract((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((1.49537605E9))), ((((t1.c0)OR(vt0.c0)))AND(vt0.c2))));
SELECT ALL COUNT(*) FROM vt0, t1, t0 FULL OUTER JOIN rt1 ON ((+ (vt0.c1)) IN ()) FULL OUTER JOIN rt0 ON ((((rt1.c0) NOTNULL)) IS FALSE) WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY (((((((((t1.c0)AND(rt1.c2)))AND(t1.c0)))AND(vt0.c2)))AND('0.768600855193041')) IN ()) ASC, CASE WHEN ((rt1.c1) IS TRUE) THEN ((((((((rt1.c3)AND(rt1.c1)))AND(rt0.c1)))OR(0.4385962510277295)))AND(rt0.c2)) ELSE rt1.c1 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, t0 FULL OUTER JOIN rt1 ON ((+ (vt0.c1)) IN ()) FULL OUTER JOIN rt0 ON ((((rt1.c0) NOTNULL)) IS FALSE) ORDER BY (((((((((t1.c0)AND(rt1.c2)))AND(t1.c0)))AND(vt0.c2)))AND('0.768600855193041')) IN ()) ASC, CASE WHEN ((rt1.c1) IS TRUE) THEN ((((((((rt1.c3)AND(rt1.c1)))AND(rt0.c1)))OR(0.4385962510277295)))AND(rt0.c2)) ELSE rt1.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt0, t1, t0 FULL OUTER JOIN rt1 ON ((+ (vt0.c1)) IN ()) FULL OUTER JOIN rt0 ON ((((rt1.c0) NOTNULL)) IS FALSE) WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY (((((((((t1.c0)AND(rt1.c2)))AND(t1.c0)))AND(vt0.c2)))AND('0.768600855193041')) IN ()) ASC, CASE WHEN ((rt1.c1) IS TRUE) THEN ((((((((rt1.c3)AND(rt1.c1)))AND(rt0.c1)))OR(0.4385962510277295)))AND(rt0.c2)) ELSE rt1.c1 COLLATE BINARY END;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, t0 FULL OUTER JOIN rt1 ON ((+ (vt0.c1)) IN ()) FULL OUTER JOIN rt0 ON ((((rt1.c0) NOTNULL)) IS FALSE) ORDER BY (((((((((t1.c0)AND(rt1.c2)))AND(t1.c0)))AND(vt0.c2)))AND('0.768600855193041')) IN ()) ASC, CASE WHEN ((rt1.c1) IS TRUE) THEN ((((((((rt1.c3)AND(rt1.c1)))AND(rt0.c1)))OR(0.4385962510277295)))AND(rt0.c2)) ELSE rt1.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM vt0, t1, t0 FULL OUTER JOIN rt1 ON ((+ (vt0.c1)) IN ()) FULL OUTER JOIN rt0 ON ((((rt1.c0) NOTNULL)) IS FALSE) WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY (((((((((t1.c0)AND(rt1.c2)))AND(t1.c0)))AND(vt0.c2)))AND('0.768600855193041')) IN ()) ASC, CASE WHEN ((rt1.c1) IS TRUE) THEN ((((((((rt1.c3)AND(rt1.c1)))AND(rt0.c1)))OR(0.4385962510277295)))AND(rt0.c2)) ELSE rt1.c1 COLLATE BINARY END;
SELECT ALL * FROM t1, rt1, vt0 WHERE (CASE (NOT (rt1.c3))  WHEN vt0.c0 THEN (((vt0.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c4)) AND ((vt0.c1, rt1.c0, t1.c0))) WHEN rt1.c4 COLLATE RTRIM THEN ((((vt0.c1)OR(rt1.c3)))OR(vt0.c0)) WHEN CASE t1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END THEN (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((vt0.c2))) ELSE ((0.10718530623773281)<=(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt1.c3))  WHEN vt0.c0 THEN (((vt0.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c4)) AND ((vt0.c1, rt1.c0, t1.c0))) WHEN rt1.c4 COLLATE RTRIM THEN ((((vt0.c1)OR(rt1.c3)))OR(vt0.c0)) WHEN CASE t1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END THEN (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((vt0.c2))) ELSE ((0.10718530623773281)<=(rt1.c0)) END) IS TRUE)  as count FROM t1, rt1, vt0);
SELECT ALL * FROM t1, rt1, vt0 WHERE (CASE (NOT (rt1.c3))  WHEN vt0.c0 THEN (((vt0.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c4)) AND ((vt0.c1, rt1.c0, t1.c0))) WHEN rt1.c4 COLLATE RTRIM THEN ((((vt0.c1)OR(rt1.c3)))OR(vt0.c0)) WHEN CASE t1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END THEN (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((vt0.c2))) ELSE ((0.10718530623773281)<=(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt1.c3))  WHEN vt0.c0 THEN (((vt0.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c4)) AND ((vt0.c1, rt1.c0, t1.c0))) WHEN rt1.c4 COLLATE RTRIM THEN ((((vt0.c1)OR(rt1.c3)))OR(vt0.c0)) WHEN CASE t1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END THEN (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((vt0.c2))) ELSE ((0.10718530623773281)<=(rt1.c0)) END) IS TRUE)  as count FROM t1, rt1, vt0);
SELECT ALL * FROM t1, rt1, vt0 WHERE (CASE (NOT (rt1.c3))  WHEN vt0.c0 THEN (((vt0.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((t1.c0, rt1.c2, rt1.c4)) AND ((vt0.c1, rt1.c0, t1.c0))) WHEN rt1.c4 COLLATE RTRIM THEN ((((vt0.c1)OR(rt1.c3)))OR(vt0.c0)) WHEN CASE t1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END THEN (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((vt0.c2))) ELSE ((0.10718530623773281)<=(rt1.c0)) END);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, t1, rt0 WHERE (((((((rt1.c2))>((rt1.c0))), rt1.c3 COLLATE NOCASE, ((0Xfffffffffc4d3853) BETWEEN (rt1.c1) AND (t1.c0))))<=((((rt1.c2)<>('_TAR')), (((rt1.c2))<=((rt0.c1))), ((rt1.c3)-(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2))>((rt1.c0))), rt1.c3 COLLATE NOCASE, ((0xfffffffffc4d3853) BETWEEN (rt1.c1) AND (t1.c0))))<=((((rt1.c2)<>('_TAR')), (((rt1.c2))<=((rt0.c1))), ((rt1.c3)-(rt1.c0)))))) IS TRUE)  as count FROM t0, vt0, rt1, t1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, t1, rt0 WHERE (((((((rt1.c2))>((rt1.c0))), rt1.c3 COLLATE NOCASE, ((0Xfffffffffc4d3853) BETWEEN (rt1.c1) AND (t1.c0))))<=((((rt1.c2)<>('_TAR')), (((rt1.c2))<=((rt0.c1))), ((rt1.c3)-(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2))>((rt1.c0))), rt1.c3 COLLATE NOCASE, ((0xfffffffffc4d3853) BETWEEN (rt1.c1) AND (t1.c0))))<=((((rt1.c2)<>('_TAR')), (((rt1.c2))<=((rt0.c1))), ((rt1.c3)-(rt1.c0)))))) IS TRUE)  as count FROM t0, vt0, rt1, t1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt1, t1, rt0 WHERE (((((((rt1.c2))>((rt1.c0))), rt1.c3 COLLATE NOCASE, ((0Xfffffffffc4d3853) BETWEEN (rt1.c1) AND (t1.c0))))<=((((rt1.c2)<>('_TAR')), (((rt1.c2))<=((rt0.c1))), ((rt1.c3)-(rt1.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((0.7758476081058046 IN (vt0.c2)))OR((('-717920855')LIKE(vt0.c0)))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.7758476081058046 IN (vt0.c2)))OR((('-717920855')LIKE(vt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((0.7758476081058046 IN (vt0.c2)))OR((('-717920855')LIKE(vt0.c0)))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.7758476081058046 IN (vt0.c2)))OR((('-717920855')LIKE(vt0.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((0.7758476081058046 IN (vt0.c2)))OR((('-717920855')LIKE(vt0.c0)))))OR(rt0.c1)));
SELECT COUNT(*) FROM t0, t1 FULL OUTER JOIN rt0 ON (((+ (t0.c0))) NOT NULL) RIGHT OUTER JOIN rt1 ON t1.c0 WHERE ((~ (((rt0.c3)-(t0.c56)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)-(t0.c56))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON (((+ (t0.c0))) NOT NULL) RIGHT OUTER JOIN rt1 ON t1.c0);
SELECT COUNT(*) FROM t0, t1 FULL OUTER JOIN rt0 ON (((+ (t0.c0))) NOT NULL) RIGHT OUTER JOIN rt1 ON t1.c0 WHERE ((~ (((rt0.c3)-(t0.c56)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)-(t0.c56))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON (((+ (t0.c0))) NOT NULL) RIGHT OUTER JOIN rt1 ON t1.c0);
SELECT COUNT(*) FROM t0, t1 FULL OUTER JOIN rt0 ON (((+ (t0.c0))) NOT NULL) RIGHT OUTER JOIN rt1 ON t1.c0 WHERE ((~ (((rt0.c3)-(t0.c56)))));
SELECT * FROM rt0, rt1, t1, t0 WHERE (-141648300);
SELECT SUM(count) FROM (SELECT ALL ((-141648300) IS TRUE)  as count FROM rt0, rt1, t1, t0);
SELECT * FROM rt0, rt1, t1, t0 WHERE (-141648300);
SELECT SUM(count) FROM (SELECT ALL ((-141648300) IS TRUE)  as count FROM rt0, rt1, t1, t0);
SELECT * FROM rt0, rt1, t1, t0 WHERE (-141648300);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (CASE ((t1.c0)OR(t1.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((vt0.c0)AND(t1.c0)) END) ORDER BY (((vt0.c1)) BETWEEN ((t1.c0)) AND (((((vt0.c2))>=((vt0.c1)))))), (vt0.c1 IN (((t1.c0)|(t1.c0))))  NULLS LAST, (((vt0.c2)) BETWEEN (((('0.6438431418576209') BETWEEN (t1.c0) AND (vt0.c2)))) AND ((vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)OR(t1.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((vt0.c0)AND(t1.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY (((vt0.c1)) BETWEEN ((t1.c0)) AND (((((vt0.c2))>=((vt0.c1)))))), (vt0.c1 IN (((t1.c0)|(t1.c0))))  NULLS LAST, (((vt0.c2)) BETWEEN (((('0.6438431418576209') BETWEEN (t1.c0) AND (vt0.c2)))) AND ((vt0.c1))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (CASE ((t1.c0)OR(t1.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((vt0.c0)AND(t1.c0)) END) ORDER BY (((vt0.c1)) BETWEEN ((t1.c0)) AND (((((vt0.c2))>=((vt0.c1)))))), (vt0.c1 IN (((t1.c0)|(t1.c0))))  NULLS LAST, (((vt0.c2)) BETWEEN (((('0.6438431418576209') BETWEEN (t1.c0) AND (vt0.c2)))) AND ((vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)OR(t1.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((vt0.c0)AND(t1.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY (((vt0.c1)) BETWEEN ((t1.c0)) AND (((((vt0.c2))>=((vt0.c1)))))), (vt0.c1 IN (((t1.c0)|(t1.c0))))  NULLS LAST, (((vt0.c2)) BETWEEN (((('0.6438431418576209') BETWEEN (t1.c0) AND (vt0.c2)))) AND ((vt0.c1))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (CASE ((t1.c0)OR(t1.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((vt0.c0)AND(t1.c0)) END) ORDER BY (((vt0.c1)) BETWEEN ((t1.c0)) AND (((((vt0.c2))>=((vt0.c1)))))), (vt0.c1 IN (((t1.c0)|(t1.c0))))  NULLS LAST, (((vt0.c2)) BETWEEN (((('0.6438431418576209') BETWEEN (t1.c0) AND (vt0.c2)))) AND ((vt0.c1))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY (NOT ((+ (vt0.c2)))), ((((vt0.c1)+(vt0.c1)))LIKE(((vt0.c0)+(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((+ (vt0.c2)))), ((((vt0.c1)+(vt0.c1)))LIKE(((vt0.c0)+(vt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY (NOT ((+ (vt0.c2)))), ((((vt0.c1)+(vt0.c1)))LIKE(((vt0.c0)+(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((+ (vt0.c2)))), ((((vt0.c1)+(vt0.c1)))LIKE(((vt0.c0)+(vt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY (NOT ((+ (vt0.c2)))), ((((vt0.c1)+(vt0.c1)))LIKE(((vt0.c0)+(vt0.c2)))) DESC;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<<(t1.c0)))IS(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<<(t1.c0)))IS(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<<(t1.c0)))IS(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<<(t1.c0)))IS(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<<(t1.c0)))IS(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT * FROM vt0, t0 CROSS JOIN t1 ON vt0.c1 COLLATE NOCASE WHERE (CAST(CASE WHEN vt0.c2 THEN t0.c56 ELSE vt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c2 THEN t0.c56 ELSE vt0.c2 END AS TEXT)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t1 ON vt0.c1 COLLATE NOCASE);
SELECT * FROM vt0, t0 CROSS JOIN t1 ON vt0.c1 COLLATE NOCASE WHERE (CAST(CASE WHEN vt0.c2 THEN t0.c56 ELSE vt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c2 THEN t0.c56 ELSE vt0.c2 END AS TEXT)) IS TRUE)  as count FROM vt0, t0 CROSS JOIN t1 ON vt0.c1 COLLATE NOCASE);
SELECT * FROM vt0, t0 CROSS JOIN t1 ON vt0.c1 COLLATE NOCASE WHERE (CAST(CASE WHEN vt0.c2 THEN t0.c56 ELSE vt0.c2 END AS TEXT));
SELECT * FROM t0 FULL OUTER JOIN t1 ON (((t0.c56, ((t0.c56)&(t0.c0)), (NULL IN (t0.c56))))<((0X7941f2e7, TRIM(t0.c0), ((t1.c0)&(t0.c0))))) WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c56))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))AND(t0.c56))) IS FALSE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON (((t0.c56, ((t0.c56)&(t0.c0)), (NULL IN (t0.c56))))<((0X7941f2e7, TRIM(t0.c0), ((t1.c0)&(t0.c0))))));
SELECT * FROM t0 FULL OUTER JOIN t1 ON (((t0.c56, ((t0.c56)&(t0.c0)), (NULL IN (t0.c56))))<((0X7941f2e7, TRIM(t0.c0), ((t1.c0)&(t0.c0))))) WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c56))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))AND(t0.c56))) IS FALSE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON (((t0.c56, ((t0.c56)&(t0.c0)), (NULL IN (t0.c56))))<((0X7941f2e7, TRIM(t0.c0), ((t1.c0)&(t0.c0))))));
SELECT * FROM t0 FULL OUTER JOIN t1 ON (((t0.c56, ((t0.c56)&(t0.c0)), (NULL IN (t0.c56))))<((0X7941f2e7, TRIM(t0.c0), ((t1.c0)&(t0.c0))))) WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c56))) IS FALSE));
SELECT * FROM vt0, t1, rt1, t0 WHERE (((((vt0.c0)&(vt0.c2))) ISNULL)) ORDER BY rt1.c5, ((UPPER(DISTINCT rt1.c1))OR(((vt0.c2)GLOB(t0.c56)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, rt1, t0 ORDER BY rt1.c5, ((UPPER(DISTINCT rt1.c1))OR(((vt0.c2)GLOB(t0.c56)))) ASC);
SELECT * FROM vt0, t1, rt1, t0 WHERE (((((vt0.c0)&(vt0.c2))) ISNULL)) ORDER BY rt1.c5, ((UPPER(DISTINCT rt1.c1))OR(((vt0.c2)GLOB(t0.c56)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, rt1, t0 ORDER BY rt1.c5, ((UPPER(DISTINCT rt1.c1))OR(((vt0.c2)GLOB(t0.c56)))) ASC);
SELECT * FROM vt0, t1, rt1, t0 WHERE (((((vt0.c0)&(vt0.c2))) ISNULL)) ORDER BY rt1.c5, ((UPPER(DISTINCT rt1.c1))OR(((vt0.c2)GLOB(t0.c56)))) ASC;
SELECT ALL * FROM rt1, t0, vt0, t1, rt0 WHERE ((((((((rt1.c1)AND(rt1.c3)))AND(NULL))))<=((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c5 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1)AND(rt1.c3)))AND(NULL))))<=((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c5 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt1, t0, vt0, t1, rt0);
SELECT ALL * FROM rt1, t0, vt0, t1, rt0 WHERE ((((((((rt1.c1)AND(rt1.c3)))AND(NULL))))<=((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c5 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1)AND(rt1.c3)))AND(NULL))))<=((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c5 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt1, t0, vt0, t1, rt0);
SELECT ALL * FROM rt1, t0, vt0, t1, rt0 WHERE ((((((((rt1.c1)AND(rt1.c3)))AND(NULL))))<=((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c5 ELSE rt0.c0 END))));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (((((rt1.c5) BETWEEN (t0.c56) AND (x''))) IS TRUE)) ORDER BY (((((((((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))AND((NOT (t0.c56)))))AND((t0.c0 IN (vt0.c2, t0.c56)))))AND(((((((((t0.c56)AND(rt1.c4)))OR(t0.c0)))AND(rt1.c5)))OR(rt1.c5)))))AND(rt1.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5) BETWEEN (t0.c56) AND (x''))) IS TRUE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((((((((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))AND((NOT (t0.c56)))))AND((t0.c0 IN (vt0.c2, t0.c56)))))AND(((((((((t0.c56)AND(rt1.c4)))OR(t0.c0)))AND(rt1.c5)))OR(rt1.c5)))))AND(rt1.c3))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (((((rt1.c5) BETWEEN (t0.c56) AND (x''))) IS TRUE)) ORDER BY (((((((((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))AND((NOT (t0.c56)))))AND((t0.c0 IN (vt0.c2, t0.c56)))))AND(((((((((t0.c56)AND(rt1.c4)))OR(t0.c0)))AND(rt1.c5)))OR(rt1.c5)))))AND(rt1.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5) BETWEEN (t0.c56) AND (x''))) IS TRUE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((((((((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))AND((NOT (t0.c56)))))AND((t0.c0 IN (vt0.c2, t0.c56)))))AND(((((((((t0.c56)AND(rt1.c4)))OR(t0.c0)))AND(rt1.c5)))OR(rt1.c5)))))AND(rt1.c3))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (((((rt1.c5) BETWEEN (t0.c56) AND (x''))) IS TRUE)) ORDER BY (((((((((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))AND((NOT (t0.c56)))))AND((t0.c0 IN (vt0.c2, t0.c56)))))AND(((((((((t0.c56)AND(rt1.c4)))OR(t0.c0)))AND(rt1.c5)))OR(rt1.c5)))))AND(rt1.c3))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt1, rt0 WHERE (((vt0.c1)>=(rt1.c0)) COLLATE BINARY) ORDER BY ((UNLIKELY(DISTINCT vt0.c1))||((rt1.c2 IN ()))), ((((rt1.c1) IS TRUE)) NOT BETWEEN ((((rt1.c4))>=((0X546cc169)))) AND ((rt1.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, t0, vt0, rt1, rt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c1))||((rt1.c2 IN ()))), ((((rt1.c1) IS TRUE)) NOT BETWEEN ((((rt1.c4))>=((0x546cc169)))) AND ((rt1.c2 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt1, rt0 WHERE (((vt0.c1)>=(rt1.c0)) COLLATE BINARY) ORDER BY ((UNLIKELY(DISTINCT vt0.c1))||((rt1.c2 IN ()))), ((((rt1.c1) IS TRUE)) NOT BETWEEN ((((rt1.c4))>=((0X546cc169)))) AND ((rt1.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, t0, vt0, rt1, rt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c1))||((rt1.c2 IN ()))), ((((rt1.c1) IS TRUE)) NOT BETWEEN ((((rt1.c4))>=((0x546cc169)))) AND ((rt1.c2 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt1, rt0 WHERE (((vt0.c1)>=(rt1.c0)) COLLATE BINARY) ORDER BY ((UNLIKELY(DISTINCT vt0.c1))||((rt1.c2 IN ()))), ((((rt1.c1) IS TRUE)) NOT BETWEEN ((((rt1.c4))>=((0X546cc169)))) AND ((rt1.c2 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c56) NOT NULL))LIKE(0.21728135774394042 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t0.c56) NOT NULL))LIKE(0.21728135774394042 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c56) NOT NULL))LIKE(0.21728135774394042 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t0.c56) NOT NULL))LIKE(0.21728135774394042 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c56) NOT NULL))LIKE(0.21728135774394042 COLLATE BINARY)));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((((rt1.c0)>(rt1.c0))) ISNULL)) ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c3) AND ('~*k^')))), ((LIKELY(DISTINCT rt1.c2))-((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(rt1.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c3) AND ('~*k^')))), ((LIKELY(DISTINCT rt1.c2))-((NOT (rt0.c3)))));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((((rt1.c0)>(rt1.c0))) ISNULL)) ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c3) AND ('~*k^')))), ((LIKELY(DISTINCT rt1.c2))-((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(rt1.c0))) ISNULL)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c3) AND ('~*k^')))), ((LIKELY(DISTINCT rt1.c2))-((NOT (rt0.c3)))));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((((rt1.c0)>(rt1.c0))) ISNULL)) ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c3) AND ('~*k^')))), ((LIKELY(DISTINCT rt1.c2))-((NOT (rt0.c3))));
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt0 ON ((((((((((((((((rt0.c3)AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(-91180890)))OR(((rt0.c0)<>(rt0.c1)))))AND(((((rt0.c2)OR(t1.c0)))AND(rt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c3)))) WHERE ((+ (NULL))) ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c2))) BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (json_valid(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON ((((((((((((((((rt0.c3)AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(-91180890)))OR(((rt0.c0)<>(rt0.c1)))))AND(((((rt0.c2)OR(t1.c0)))AND(rt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c3)))) ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c2))) BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (json_valid(vt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt0 ON ((((((((((((((((rt0.c3)AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(-91180890)))OR(((rt0.c0)<>(rt0.c1)))))AND(((((rt0.c2)OR(t1.c0)))AND(rt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c3)))) WHERE ((+ (NULL))) ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c2))) BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (json_valid(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON ((((((((((((((((rt0.c3)AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(-91180890)))OR(((rt0.c0)<>(rt0.c1)))))AND(((((rt0.c2)OR(t1.c0)))AND(rt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c3)))) ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c2))) BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (json_valid(vt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt0 ON ((((((((((((((((rt0.c3)AND(vt0.c1)))OR(rt0.c2)))OR(vt0.c1)))OR(vt0.c0)))OR(-91180890)))OR(((rt0.c0)<>(rt0.c1)))))AND(((((rt0.c2)OR(t1.c0)))AND(rt0.c2)))))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c3)))) WHERE ((+ (NULL))) ORDER BY ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c2))) BETWEEN ((((vt0.c1))>=((vt0.c1)))) AND (json_valid(vt0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c1 END)) AND ((((vt0.c0)<=(vt0.c2)))))) ORDER BY CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN ((NULL) NOTNULL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 WHEN 0.8492529480448064 THEN 'now' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c1 END)) AND ((((vt0.c0)<=(vt0.c2)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN ((NULL) NOTNULL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 WHEN 0.8492529480448064 THEN 'now' END ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c1 END)) AND ((((vt0.c0)<=(vt0.c2)))))) ORDER BY CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN ((NULL) NOTNULL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 WHEN 0.8492529480448064 THEN 'now' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c1 END)) AND ((((vt0.c0)<=(vt0.c2)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN ((NULL) NOTNULL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 WHEN 0.8492529480448064 THEN 'now' END ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c1)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c1 END)) AND ((((vt0.c0)<=(vt0.c2)))))) ORDER BY CASE NULL  WHEN CAST(vt0.c0 AS BLOB) THEN ((NULL) NOTNULL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c2 WHEN 0.8492529480448064 THEN 'now' END ASC  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((((CAST(rt0.c0 AS REAL))AND((- (0.6162688767416837)))))AND(DATE(rt1.c3, rt1.c4, rt1.c5))))AND(((rt1.c0)%(rt1.c1)))))AND((((rt0.c2))<((rt0.c3))))) RIGHT OUTER JOIN rt1 ON ((((rt1.c1)AND(rt0.c0)))OR(((rt1.c5) BETWEEN (rt0.c1) AND (NULL)))) INNER JOIN t0 ON 'HjF⯾zFu呂O' WHERE (rt1.c1) ORDER BY (((((rt1.c3, rt1.c3, NULL, x'', rt0.c3)) NOT BETWEEN ((rt0.c2, rt1.c3, rt0.c2, rt1.c3, t1.c0)) AND ((rt1.c5, '', rt1.c4, rt1.c3, rt1.c2))))IS NOT(CAST(rt0.c3 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((((((((CAST(rt0.c0 AS REAL))AND((- (0.6162688767416837)))))AND(DATE(rt1.c3, rt1.c4, rt1.c5))))AND(((rt1.c0)%(rt1.c1)))))AND((((rt0.c2))<((rt0.c3))))) RIGHT OUTER JOIN rt1 ON ((((rt1.c1)AND(rt0.c0)))OR(((rt1.c5) BETWEEN (rt0.c1) AND (NULL)))) INNER JOIN t0 ON 'HjF⯾zFu呂O' ORDER BY (((((rt1.c3, rt1.c3, NULL, x'', rt0.c3)) NOT BETWEEN ((rt0.c2, rt1.c3, rt0.c2, rt1.c3, t1.c0)) AND ((rt1.c5, '', rt1.c4, rt1.c3, rt1.c2))))IS NOT(CAST(rt0.c3 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((((CAST(rt0.c0 AS REAL))AND((- (0.6162688767416837)))))AND(DATE(rt1.c3, rt1.c4, rt1.c5))))AND(((rt1.c0)%(rt1.c1)))))AND((((rt0.c2))<((rt0.c3))))) RIGHT OUTER JOIN rt1 ON ((((rt1.c1)AND(rt0.c0)))OR(((rt1.c5) BETWEEN (rt0.c1) AND (NULL)))) INNER JOIN t0 ON 'HjF⯾zFu呂O' WHERE (rt1.c1) ORDER BY (((((rt1.c3, rt1.c3, NULL, x'', rt0.c3)) NOT BETWEEN ((rt0.c2, rt1.c3, rt0.c2, rt1.c3, t1.c0)) AND ((rt1.c5, '', rt1.c4, rt1.c3, rt1.c2))))IS NOT(CAST(rt0.c3 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((((((((CAST(rt0.c0 AS REAL))AND((- (0.6162688767416837)))))AND(DATE(rt1.c3, rt1.c4, rt1.c5))))AND(((rt1.c0)%(rt1.c1)))))AND((((rt0.c2))<((rt0.c3))))) RIGHT OUTER JOIN rt1 ON ((((rt1.c1)AND(rt0.c0)))OR(((rt1.c5) BETWEEN (rt0.c1) AND (NULL)))) INNER JOIN t0 ON 'HjF⯾zFu呂O' ORDER BY (((((rt1.c3, rt1.c3, NULL, x'', rt0.c3)) NOT BETWEEN ((rt0.c2, rt1.c3, rt0.c2, rt1.c3, t1.c0)) AND ((rt1.c5, '', rt1.c4, rt1.c3, rt1.c2))))IS NOT(CAST(rt0.c3 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELY(((t1.c0)<(t1.c0)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t1.c0)<(t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELY(((t1.c0)<(t1.c0)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t1.c0)<(t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELY(((t1.c0)<(t1.c0)))) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t1, rt1 WHERE (CAST(((rt1.c4)>(rt1.c3)) AS INTEGER)) ORDER BY ((((CAST(rt0.c3 AS REAL))AND(rt1.c2)))OR((- (rt0.c3)))) ASC, (~ (COALESCE(rt0.c1, vt0.c1, rt1.c5, t1.c0))), ((((NULL)OR(vt0.c2 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4)>(rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t1, rt1 ORDER BY ((((CAST(rt0.c3 AS REAL))AND(rt1.c2)))OR((- (rt0.c3)))) ASC, (~ (COALESCE(rt0.c1, vt0.c1, rt1.c5, t1.c0))), ((((NULL)OR(vt0.c2 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, rt1 WHERE (CAST(((rt1.c4)>(rt1.c3)) AS INTEGER)) ORDER BY ((((CAST(rt0.c3 AS REAL))AND(rt1.c2)))OR((- (rt0.c3)))) ASC, (~ (COALESCE(rt0.c1, vt0.c1, rt1.c5, t1.c0))), ((((NULL)OR(vt0.c2 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c4)>(rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t1, rt1 ORDER BY ((((CAST(rt0.c3 AS REAL))AND(rt1.c2)))OR((- (rt0.c3)))) ASC, (~ (COALESCE(rt0.c1, vt0.c1, rt1.c5, t1.c0))), ((((NULL)OR(vt0.c2 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, rt1 WHERE (CAST(((rt1.c4)>(rt1.c3)) AS INTEGER)) ORDER BY ((((CAST(rt0.c3 AS REAL))AND(rt1.c2)))OR((- (rt0.c3)))) ASC, (~ (COALESCE(rt0.c1, vt0.c1, rt1.c5, t1.c0))), ((((NULL)OR(vt0.c2 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE ((((((vt0.c2 IN ()))AND(t0.c0)))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2 IN ()))AND(t0.c0)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE ((((((vt0.c2 IN ()))AND(t0.c0)))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2 IN ()))AND(t0.c0)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1 WHERE ((((((vt0.c2 IN ()))AND(t0.c0)))OR(vt0.c0 COLLATE BINARY)));
SELECT * FROM t1, rt1, t0, vt0, rt0 WHERE (((((t0.c0)-(t1.c0)))%(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(t1.c0)))%(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt1, t0, vt0, rt0);
SELECT * FROM t1, rt1, t0, vt0, rt0 WHERE (((((t0.c0)-(t1.c0)))%(rt1.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(t1.c0)))%(rt1.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt1, t0, vt0, rt0);
SELECT * FROM t1, rt1, t0, vt0, rt0 WHERE (((((t0.c0)-(t1.c0)))%(rt1.c3 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((rt1.c4)/('kD*f#lI')) FULL OUTER JOIN t1 ON t1.c0 WHERE ((((t0.c56)) BETWEEN ((((rt1.c2)GLOB(rt1.c0)))) AND ((((rt1.c4) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c56)) BETWEEN ((((rt1.c2)GLOB(rt1.c0)))) AND ((((rt1.c4) NOTNULL))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((rt1.c4)/('kD*f#lI')) FULL OUTER JOIN t1 ON t1.c0);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((rt1.c4)/('kD*f#lI')) FULL OUTER JOIN t1 ON t1.c0 WHERE ((((t0.c56)) BETWEEN ((((rt1.c2)GLOB(rt1.c0)))) AND ((((rt1.c4) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c56)) BETWEEN ((((rt1.c2)GLOB(rt1.c0)))) AND ((((rt1.c4) NOTNULL))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((rt1.c4)/('kD*f#lI')) FULL OUTER JOIN t1 ON t1.c0);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((rt1.c4)/('kD*f#lI')) FULL OUTER JOIN t1 ON t1.c0 WHERE ((((t0.c56)) BETWEEN ((((rt1.c2)GLOB(rt1.c0)))) AND ((((rt1.c4) NOTNULL)))));
SELECT ALL * FROM t1, rt0, rt1, vt0 WHERE (CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) ORDER BY (((t1.c0)>=(rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t1, rt0, rt1, vt0 ORDER BY (((t1.c0)>=(rt1.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM t1, rt0, rt1, vt0 WHERE (CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) ORDER BY (((t1.c0)>=(rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t1, rt0, rt1, vt0 ORDER BY (((t1.c0)>=(rt1.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM t1, rt0, rt1, vt0 WHERE (CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)) AS TEXT)) ORDER BY (((t1.c0)>=(rt1.c1)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ((COALESCE(DISTINCT t1.c0, rt0.c2))>>(((rt0.c0)-(t1.c0)))) WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN ((((rt0.c2))=(('-183300048')))) AND (0.9512132628546184))) ORDER BY ((0Xffffffffb8e3a6a8) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN ((((rt0.c2))==(('-183300048')))) AND (0.9512132628546184))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((COALESCE(DISTINCT t1.c0, rt0.c2))>>(((rt0.c0)-(t1.c0)))) ORDER BY ((0xffffffffb8e3a6a8) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ((COALESCE(DISTINCT t1.c0, rt0.c2))>>(((rt0.c0)-(t1.c0)))) WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN ((((rt0.c2))=(('-183300048')))) AND (0.9512132628546184))) ORDER BY ((0Xffffffffb8e3a6a8) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS BLOB)) BETWEEN ((((rt0.c2))==(('-183300048')))) AND (0.9512132628546184))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((COALESCE(DISTINCT t1.c0, rt0.c2))>>(((rt0.c0)-(t1.c0)))) ORDER BY ((0xffffffffb8e3a6a8) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ((COALESCE(DISTINCT t1.c0, rt0.c2))>>(((rt0.c0)-(t1.c0)))) WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN ((((rt0.c2))=(('-183300048')))) AND (0.9512132628546184))) ORDER BY ((0Xffffffffb8e3a6a8) NOT NULL);
SELECT ALL * FROM rt1, t1, vt0 WHERE (rt1.c5) ORDER BY SQLITE_VERSION() DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1, t1, vt0 ORDER BY SQLITE_VERSION() DESC);
SELECT ALL * FROM rt1, t1, vt0 WHERE (rt1.c5) ORDER BY SQLITE_VERSION() DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1, t1, vt0 ORDER BY SQLITE_VERSION() DESC);
SELECT ALL * FROM rt1, t1, vt0 WHERE (rt1.c5) ORDER BY SQLITE_VERSION() DESC;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE ((((rt0.c1)|(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)|(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE ((((rt0.c1)|(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)|(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0, t0 WHERE ((((rt0.c1)|(rt0.c1)) IN ()));
SELECT * FROM t1, rt1, vt0 WHERE (((LIKELIHOOD(rt1.c2, 0.620558521970064)) BETWEEN (((rt1.c0) IS FALSE)) AND ((('0.72934053925557') NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt1.c2, 0.620558521970064)) BETWEEN (((rt1.c0) IS FALSE)) AND ((('0.72934053925557') NOT NULL)))) IS TRUE)  as count FROM t1, rt1, vt0);
SELECT * FROM t1, rt1, vt0 WHERE (((LIKELIHOOD(rt1.c2, 0.620558521970064)) BETWEEN (((rt1.c0) IS FALSE)) AND ((('0.72934053925557') NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt1.c2, 0.620558521970064)) BETWEEN (((rt1.c0) IS FALSE)) AND ((('0.72934053925557') NOT NULL)))) IS TRUE)  as count FROM t1, rt1, vt0);
SELECT * FROM t1, rt1, vt0 WHERE (((LIKELIHOOD(rt1.c2, 0.620558521970064)) BETWEEN (((rt1.c0) IS FALSE)) AND ((('0.72934053925557') NOT NULL))));
SELECT * FROM vt0, rt0, t1 WHERE ((rt0.c0 IN ((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((- (vt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((rt0.c0 IN ((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((- (vt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT * FROM vt0, rt0, t1 WHERE ((rt0.c0 IN ((- (vt0.c2)))));
SELECT COUNT(*) FROM rt1 WHERE ((((((((((rt1.c2 IN (rt1.c2, rt1.c2)))AND(TRIM(DISTINCT rt1.c3, rt1.c4))))AND(((rt1.c0) BETWEEN ('') AND (rt1.c4)))))AND(CAST(rt1.c0 AS TEXT))))OR('qc')));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2 IN (rt1.c2, rt1.c2)))AND(TRIM(DISTINCT rt1.c3, rt1.c4))))AND(((rt1.c0) BETWEEN ('') AND (rt1.c4)))))AND(CAST(rt1.c0 AS TEXT))))OR('qc'))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((((((rt1.c2 IN (rt1.c2, rt1.c2)))AND(TRIM(DISTINCT rt1.c3, rt1.c4))))AND(((rt1.c0) BETWEEN ('') AND (rt1.c4)))))AND(CAST(rt1.c0 AS TEXT))))OR('qc')));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c2 IN (rt1.c2, rt1.c2)))AND(TRIM(DISTINCT rt1.c3, rt1.c4))))AND(((rt1.c0) BETWEEN ('') AND (rt1.c4)))))AND(CAST(rt1.c0 AS TEXT))))OR('qc'))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((((((rt1.c2 IN (rt1.c2, rt1.c2)))AND(TRIM(DISTINCT rt1.c3, rt1.c4))))AND(((rt1.c0) BETWEEN ('') AND (rt1.c4)))))AND(CAST(rt1.c0 AS TEXT))))OR('qc')));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL)) ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c3, rt0.c2)) BETWEEN (((('-8659003')%(rt0.c0)), ((rt0.c1)/(rt0.c0)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)OR(rt0.c2)), (rt0.c0 IN ()))) AND ((((rt0.c1)<(0x1)), LIKELY(rt0.c0), 0.027211101238333146 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), NULL))) ASC, (~ (((rt0.c1)>>(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c3, rt0.c2)) BETWEEN (((('-8659003')%(rt0.c0)), ((rt0.c1)/(rt0.c0)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)OR(rt0.c2)), (rt0.c0 IN ()))) AND ((((rt0.c1)<(0X1)), LIKELY(rt0.c0), 0.027211101238333146 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), NULL))) ASC, (~ (((rt0.c1)>>(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL)) ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c3, rt0.c2)) BETWEEN (((('-8659003')%(rt0.c0)), ((rt0.c1)/(rt0.c0)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)OR(rt0.c2)), (rt0.c0 IN ()))) AND ((((rt0.c1)<(0x1)), LIKELY(rt0.c0), 0.027211101238333146 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), NULL))) ASC, (~ (((rt0.c1)>>(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c3, rt0.c2)) BETWEEN (((('-8659003')%(rt0.c0)), ((rt0.c1)/(rt0.c0)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)OR(rt0.c2)), (rt0.c0 IN ()))) AND ((((rt0.c1)<(0X1)), LIKELY(rt0.c0), 0.027211101238333146 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), NULL))) ASC, (~ (((rt0.c1)>>(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS REAL)) ORDER BY (((rt0.c1, rt0.c3, rt0.c0, rt0.c3, rt0.c2)) BETWEEN (((('-8659003')%(rt0.c0)), ((rt0.c1)/(rt0.c0)), ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)), ((rt0.c3)OR(rt0.c2)), (rt0.c0 IN ()))) AND ((((rt0.c1)<(0x1)), LIKELY(rt0.c0), 0.027211101238333146 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), NULL))) ASC, (~ (((rt0.c1)>>(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, rt0, vt0, t0, rt1 WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) ORDER BY ((CASE rt1.c0  WHEN rt1.c5 THEN rt0.c1 ELSE rt1.c4 END) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t1, rt0, vt0, t0, rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c5 THEN rt0.c1 ELSE rt1.c4 END) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM t1, rt0, vt0, t0, rt1 WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) ORDER BY ((CASE rt1.c0  WHEN rt1.c5 THEN rt0.c1 ELSE rt1.c4 END) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t1, rt0, vt0, t0, rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c5 THEN rt0.c1 ELSE rt1.c4 END) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM t1, rt0, vt0, t0, rt1 WHERE (CAST((NOT (vt0.c1)) AS INTEGER)) ORDER BY ((CASE rt1.c0  WHEN rt1.c5 THEN rt0.c1 ELSE rt1.c4 END) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CAST(vt0.c0 AS BLOB)));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC) WHERE (((((((((rt0.c3)AND(vt0.c2)))AND(rt0.c0)))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)AND(vt0.c2)))AND(rt0.c0)))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC) WHERE (((((((((rt0.c3)AND(vt0.c2)))AND(rt0.c0)))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c3)AND(vt0.c2)))AND(rt0.c0)))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE BINARY LEFT OUTER JOIN t0 ON CAST(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC) WHERE (((((((((rt0.c3)AND(vt0.c2)))AND(rt0.c0)))AND(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM t1, rt0, t0, vt0 WHERE (CAST(0.8497597740836204 AS TEXT)) ORDER BY (rt0.c0 IN (0x318139ad)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.8497597740836204 AS TEXT)) IS TRUE)  as count FROM t1, rt0, t0, vt0 ORDER BY (rt0.c0 IN (0x318139ad)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t1, rt0, t0, vt0 WHERE (CAST(0.8497597740836204 AS TEXT)) ORDER BY (rt0.c0 IN (0x318139ad)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.8497597740836204 AS TEXT)) IS TRUE)  as count FROM t1, rt0, t0, vt0 ORDER BY (rt0.c0 IN (0x318139ad)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t1, rt0, t0, vt0 WHERE (CAST(0.8497597740836204 AS TEXT)) ORDER BY (rt0.c0 IN (0x318139ad)) COLLATE BINARY DESC;
SELECT * FROM vt0, rt1, t1 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt1.c0)))AND(((rt1.c1)<>(rt1.c4)))))AND(-636924971)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt1.c0)))AND(((rt1.c1)<>(rt1.c4)))))AND(-636924971))) IS TRUE)  as count FROM vt0, rt1, t1);
SELECT * FROM vt0, rt1, t1 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt1.c0)))AND(((rt1.c1)<>(rt1.c4)))))AND(-636924971)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt1.c0)))AND(((rt1.c1)<>(rt1.c4)))))AND(-636924971))) IS TRUE)  as count FROM vt0, rt1, t1);
SELECT * FROM vt0, rt1, t1 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt1.c0)))AND(((rt1.c1)<>(rt1.c4)))))AND(-636924971)));
SELECT ALL COUNT(*) FROM vt0, rt1, t0 NATURAL JOIN rt0 WHERE (rt1.c0) ORDER BY TOTAL_CHANGES()  NULLS LAST, CASE WHEN (rt0.c2 IN ()) THEN ABS(DISTINCT rt0.c1) ELSE 'z}Hh傣' END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, rt1, t0 NATURAL JOIN rt0 ORDER BY TOTAL_CHANGES()  NULLS LAST, CASE WHEN (rt0.c2 IN ()) THEN ABS(DISTINCT rt0.c1) ELSE 'z}Hh傣' END);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 NATURAL JOIN rt0 WHERE (rt1.c0) ORDER BY TOTAL_CHANGES()  NULLS LAST, CASE WHEN (rt0.c2 IN ()) THEN ABS(DISTINCT rt0.c1) ELSE 'z}Hh傣' END;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0, rt1, t0 NATURAL JOIN rt0 ORDER BY TOTAL_CHANGES()  NULLS LAST, CASE WHEN (rt0.c2 IN ()) THEN ABS(DISTINCT rt0.c1) ELSE 'z}Hh傣' END);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 NATURAL JOIN rt0 WHERE (rt1.c0) ORDER BY TOTAL_CHANGES()  NULLS LAST, CASE WHEN (rt0.c2 IN ()) THEN ABS(DISTINCT rt0.c1) ELSE 'z}Hh傣' END;
SELECT * FROM vt0, rt0 WHERE (json_insert((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) ORDER BY (((~ (0x3aa015e0)))<(vt0.c1))  NULLS FIRST, (json_extract(NULL, vt0.c2) IN ()) DESC, (('M9B6J!Y!') BETWEEN (((((x'b620')OR(rt0.c3)))OR(rt0.c2))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_insert((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (0X3aa015e0)))<(vt0.c1))  NULLS FIRST, (json_extract(NULL, vt0.c2) IN ()) DESC, (('M9B6J!Y!') BETWEEN (((((x'b620')OR(rt0.c3)))OR(rt0.c2))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT * FROM vt0, rt0 WHERE (json_insert((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) ORDER BY (((~ (0x3aa015e0)))<(vt0.c1))  NULLS FIRST, (json_extract(NULL, vt0.c2) IN ()) DESC, (('M9B6J!Y!') BETWEEN (((((x'b620')OR(rt0.c3)))OR(rt0.c2))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_insert((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), vt0.c1 COLLATE BINARY, CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c2 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (0X3aa015e0)))<(vt0.c1))  NULLS FIRST, (json_extract(NULL, vt0.c2) IN ()) DESC, (('M9B6J!Y!') BETWEEN (((((x'b620')OR(rt0.c3)))OR(rt0.c2))) AND (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT * FROM t0 CROSS JOIN t1 ON IFNULL(0.2156454636482037, t0.c56) COLLATE NOCASE LEFT OUTER JOIN rt1 ON x'53bf' WHERE (((((rt1.c4) NOT NULL))&(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4) NOT NULL))&(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON IFNULL(0.2156454636482037, t0.c56) COLLATE NOCASE LEFT OUTER JOIN rt1 ON x'53bf');
SELECT * FROM t0 CROSS JOIN t1 ON IFNULL(0.2156454636482037, t0.c56) COLLATE NOCASE LEFT OUTER JOIN rt1 ON x'53bf' WHERE (((((rt1.c4) NOT NULL))&(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4) NOT NULL))&(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN t1 ON IFNULL(0.2156454636482037, t0.c56) COLLATE NOCASE LEFT OUTER JOIN rt1 ON x'53bf');
SELECT * FROM t0 CROSS JOIN t1 ON IFNULL(0.2156454636482037, t0.c56) COLLATE NOCASE LEFT OUTER JOIN rt1 ON x'53bf' WHERE (((((rt1.c4) NOT NULL))&(t0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, rt1, t0 LEFT OUTER JOIN t1 ON ((((rt1.c3) NOT BETWEEN (vt0.c2) AND (rt1.c0)))<(((vt0.c2)*(vt0.c2)))) WHERE (TRIM(DISTINCT ((rt1.c4)AND(t0.c56))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt1.c4)AND(t0.c56)))) IS TRUE)  as count FROM vt0, rt1, t0 LEFT OUTER JOIN t1 ON ((((rt1.c3) NOT BETWEEN (vt0.c2) AND (rt1.c0)))<(((vt0.c2)*(vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt1, t0 LEFT OUTER JOIN t1 ON ((((rt1.c3) NOT BETWEEN (vt0.c2) AND (rt1.c0)))<(((vt0.c2)*(vt0.c2)))) WHERE (TRIM(DISTINCT ((rt1.c4)AND(t0.c56))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((rt1.c4)AND(t0.c56)))) IS TRUE)  as count FROM vt0, rt1, t0 LEFT OUTER JOIN t1 ON ((((rt1.c3) NOT BETWEEN (vt0.c2) AND (rt1.c0)))<(((vt0.c2)*(vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt1, t0 LEFT OUTER JOIN t1 ON ((((rt1.c3) NOT BETWEEN (vt0.c2) AND (rt1.c0)))<(((vt0.c2)*(vt0.c2)))) WHERE (TRIM(DISTINCT ((rt1.c4)AND(t0.c56))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, t1 WHERE (json_valid(((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((t1.c0) NOTNULL))) IS TRUE)  as count FROM rt1, rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, t1 WHERE (json_valid(((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((t1.c0) NOTNULL))) IS TRUE)  as count FROM rt1, rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, t1 WHERE (json_valid(((t1.c0) NOTNULL)));
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((rt1.c3)OR(vt0.c2)))AND(rt0.c3))) INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC))<<(((rt1.c0)LIKE(rt1.c1)))) WHERE (((((((rt0.c0) BETWEEN (rt0.c3) AND (rt1.c5)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c3)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c3) AND (rt1.c5)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c3)-(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((rt1.c3)OR(vt0.c2)))AND(rt0.c3))) INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC))<<(((rt1.c0)LIKE(rt1.c1)))));
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((rt1.c3)OR(vt0.c2)))AND(rt0.c3))) INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC))<<(((rt1.c0)LIKE(rt1.c1)))) WHERE (((((((rt0.c0) BETWEEN (rt0.c3) AND (rt1.c5)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c3)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (rt0.c3) AND (rt1.c5)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c3)-(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((rt1.c3)OR(vt0.c2)))AND(rt0.c3))) INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC))<<(((rt1.c0)LIKE(rt1.c1)))));
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((rt1.c3)OR(vt0.c2)))AND(rt0.c3))) INNER JOIN t1 ON ((CAST(t1.c0 AS NUMERIC))<<(((rt1.c0)LIKE(rt1.c1)))) WHERE (((((((rt0.c0) BETWEEN (rt0.c3) AND (rt1.c5)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c3)-(rt0.c2)))));
SELECT * FROM rt0, vt0, t0, t1 RIGHT OUTER JOIN rt1 ON (+ (((rt0.c1)||(rt0.c0)))) WHERE ((((rt1.c5 COLLATE BINARY))=((vt0.c1 COLLATE RTRIM)))) ORDER BY (((rt1.c1 IN ())) ISNULL) ASC  NULLS LAST, CAST(TYPEOF(DISTINCT '}]') AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5 COLLATE BINARY))==((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0, t0, t1 RIGHT OUTER JOIN rt1 ON (+ (((rt0.c1)||(rt0.c0)))) ORDER BY (((rt1.c1 IN ())) ISNULL) ASC  NULLS LAST, CAST(TYPEOF(DISTINCT '}]') AS BLOB)  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, t1 RIGHT OUTER JOIN rt1 ON (+ (((rt0.c1)||(rt0.c0)))) WHERE ((((rt1.c5 COLLATE BINARY))=((vt0.c1 COLLATE RTRIM)))) ORDER BY (((rt1.c1 IN ())) ISNULL) ASC  NULLS LAST, CAST(TYPEOF(DISTINCT '}]') AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c5 COLLATE BINARY))==((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, vt0, t0, t1 RIGHT OUTER JOIN rt1 ON (+ (((rt0.c1)||(rt0.c0)))) ORDER BY (((rt1.c1 IN ())) ISNULL) ASC  NULLS LAST, CAST(TYPEOF(DISTINCT '}]') AS BLOB)  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, t1 RIGHT OUTER JOIN rt1 ON (+ (((rt0.c1)||(rt0.c0)))) WHERE ((((rt1.c5 COLLATE BINARY))=((vt0.c1 COLLATE RTRIM)))) ORDER BY (((rt1.c1 IN ())) ISNULL) ASC  NULLS LAST, CAST(TYPEOF(DISTINCT '}]') AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NOT INDEXED, t1, rt1, vt0 FULL OUTER JOIN t0 ON ((((rt0.c0)>(vt0.c2))) NOT NULL) WHERE (TRIM((((rt1.c5, rt1.c5, rt1.c0, rt1.c2, rt0.c2))<((rt1.c3, rt0.c3, vt0.c0, vt0.c1, rt0.c0))))) ORDER BY ((((((((((((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c4)))GLOB((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt1.c5, rt1.c5, rt1.c0, rt1.c2, rt0.c2))<((rt1.c3, rt0.c3, vt0.c0, vt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0, t1, rt1, vt0 FULL OUTER JOIN t0 ON ((((rt0.c0)>(vt0.c2))) NOT NULL) ORDER BY ((((((((((((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c4)))GLOB((NOT (t0.c0)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, t1, rt1, vt0 FULL OUTER JOIN t0 ON ((((rt0.c0)>(vt0.c2))) NOT NULL) WHERE (TRIM((((rt1.c5, rt1.c5, rt1.c0, rt1.c2, rt0.c2))<((rt1.c3, rt0.c3, vt0.c0, vt0.c1, rt0.c0))))) ORDER BY ((((((((((((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c4)))GLOB((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt1.c5, rt1.c5, rt1.c0, rt1.c2, rt0.c2))<((rt1.c3, rt0.c3, vt0.c0, vt0.c1, rt0.c0))))) IS TRUE)  as count FROM rt0, t1, rt1, vt0 FULL OUTER JOIN t0 ON ((((rt0.c0)>(vt0.c2))) NOT NULL) ORDER BY ((((((((((((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c4)))GLOB((NOT (t0.c0)))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, t1, rt1, vt0 FULL OUTER JOIN t0 ON ((((rt0.c0)>(vt0.c2))) NOT NULL) WHERE (TRIM((((rt1.c5, rt1.c5, rt1.c0, rt1.c2, rt0.c2))<((rt1.c3, rt0.c3, vt0.c0, vt0.c1, rt0.c0))))) ORDER BY ((((((((((((((rt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(rt1.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c4)))GLOB((NOT (t0.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (rt1.c5) AND (t1.c0)))>(((((((((t1.c0)AND(rt1.c5)))AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c4)))) CROSS JOIN t1 ON (((x'')) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((NULL))) INNER JOIN rt1 ON 0.42166945283856605 LEFT OUTER JOIN t0 ON (+ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM WHERE (CASE WHEN ((vt0.c2)LIKE(x'')) THEN TYPEOF(t1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)LIKE(x'')) THEN TYPEOF(t1.c0) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (rt1.c5) AND (t1.c0)))>(((((((((t1.c0)AND(rt1.c5)))AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c4)))) CROSS JOIN t1 ON (((x'')) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((NULL))) INNER JOIN rt1 ON 0.42166945283856605 LEFT OUTER JOIN t0 ON (+ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (rt1.c5) AND (t1.c0)))>(((((((((t1.c0)AND(rt1.c5)))AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c4)))) CROSS JOIN t1 ON (((x'')) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((NULL))) INNER JOIN rt1 ON 0.42166945283856605 LEFT OUTER JOIN t0 ON (+ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM WHERE (CASE WHEN ((vt0.c2)LIKE(x'')) THEN TYPEOF(t1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)LIKE(x'')) THEN TYPEOF(t1.c0) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (rt1.c5) AND (t1.c0)))>(((((((((t1.c0)AND(rt1.c5)))AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c4)))) CROSS JOIN t1 ON (((x'')) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((NULL))) INNER JOIN rt1 ON 0.42166945283856605 LEFT OUTER JOIN t0 ON (+ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c5)||(rt1.c0))))) ORDER BY CASE NULL COLLATE NOCASE  WHEN rt1.c0 COLLATE RTRIM THEN (rt1.c5 IN ()) END ASC, ((rt1.c5)GLOB(rt1.c5)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c5)||(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CASE NULL COLLATE NOCASE  WHEN rt1.c0 COLLATE RTRIM THEN (rt1.c5 IN ()) END ASC, ((rt1.c5)GLOB(rt1.c5)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c5)||(rt1.c0))))) ORDER BY CASE NULL COLLATE NOCASE  WHEN rt1.c0 COLLATE RTRIM THEN (rt1.c5 IN ()) END ASC, ((rt1.c5)GLOB(rt1.c5)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c5)||(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY CASE NULL COLLATE NOCASE  WHEN rt1.c0 COLLATE RTRIM THEN (rt1.c5 IN ()) END ASC, ((rt1.c5)GLOB(rt1.c5)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((rt1.c5)||(rt1.c0))))) ORDER BY CASE NULL COLLATE NOCASE  WHEN rt1.c0 COLLATE RTRIM THEN (rt1.c5 IN ()) END ASC, ((rt1.c5)GLOB(rt1.c5)) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)!=(GLOB(vt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)<>(GLOB(vt0.c2, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)!=(GLOB(vt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)<>(GLOB(vt0.c2, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)!=(GLOB(vt0.c2, vt0.c1))));
SELECT COUNT(*) FROM t0, vt0, rt1, rt0 FULL OUTER JOIN t1 ON (((t0.c56) NOTNULL) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c3)), ((0xffffffff977646c6) NOT NULL))) WHERE (CASE rt1.c2  WHEN ((rt1.c4)LIKE(vt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 END ELSE ((t1.c0) NOTNULL) END) ORDER BY CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c56)) THEN ((((vt0.c0)AND(t1.c0)))AND(NULL)) WHEN ((vt0.c2) NOT BETWEEN (NULL) AND (rt1.c5)) THEN (NOT (rt1.c0)) WHEN rt1.c5 THEN SQLITE_SOURCE_ID() ELSE ((rt1.c3)IS NOT(t1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN ((rt1.c4)LIKE(vt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 END ELSE ((t1.c0) NOTNULL) END) IS TRUE)  as count FROM t0, vt0, rt1, rt0 FULL OUTER JOIN t1 ON (((t0.c56) NOTNULL) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c3)), ((0Xffffffff977646c6) NOT NULL))) ORDER BY CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c56)) THEN ((((vt0.c0)AND(t1.c0)))AND(NULL)) WHEN ((vt0.c2) NOT BETWEEN (NULL) AND (rt1.c5)) THEN (NOT (rt1.c0)) WHEN rt1.c5 THEN SQLITE_SOURCE_ID() ELSE ((rt1.c3)IS NOT(t1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt1, rt0 FULL OUTER JOIN t1 ON (((t0.c56) NOTNULL) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c3)), ((0xffffffff977646c6) NOT NULL))) WHERE (CASE rt1.c2  WHEN ((rt1.c4)LIKE(vt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 END ELSE ((t1.c0) NOTNULL) END) ORDER BY CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c56)) THEN ((((vt0.c0)AND(t1.c0)))AND(NULL)) WHEN ((vt0.c2) NOT BETWEEN (NULL) AND (rt1.c5)) THEN (NOT (rt1.c0)) WHEN rt1.c5 THEN SQLITE_SOURCE_ID() ELSE ((rt1.c3)IS NOT(t1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c2  WHEN ((rt1.c4)LIKE(vt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 END ELSE ((t1.c0) NOTNULL) END) IS TRUE)  as count FROM t0, vt0, rt1, rt0 FULL OUTER JOIN t1 ON (((t0.c56) NOTNULL) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c3)), ((0Xffffffff977646c6) NOT NULL))) ORDER BY CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c56)) THEN ((((vt0.c0)AND(t1.c0)))AND(NULL)) WHEN ((vt0.c2) NOT BETWEEN (NULL) AND (rt1.c5)) THEN (NOT (rt1.c0)) WHEN rt1.c5 THEN SQLITE_SOURCE_ID() ELSE ((rt1.c3)IS NOT(t1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt1, rt0 FULL OUTER JOIN t1 ON (((t0.c56) NOTNULL) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c3)), ((0xffffffff977646c6) NOT NULL))) WHERE (CASE rt1.c2  WHEN ((rt1.c4)LIKE(vt0.c0)) THEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c1 END ELSE ((t1.c0) NOTNULL) END) ORDER BY CASE WHEN ((((rt1.c1)OR(rt0.c2)))AND(t0.c56)) THEN ((((vt0.c0)AND(t1.c0)))AND(NULL)) WHEN ((vt0.c2) NOT BETWEEN (NULL) AND (rt1.c5)) THEN (NOT (rt1.c0)) WHEN rt1.c5 THEN SQLITE_SOURCE_ID() ELSE ((rt1.c3)IS NOT(t1.c0)) END  NULLS LAST;
SELECT * FROM t1, t0, rt1, vt0, rt0 WHERE (((0xffffffffb40d0856)<(LIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffb40d0856)<(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM t1, t0, rt1, vt0, rt0);
SELECT * FROM t1, t0, rt1, vt0, rt0 WHERE (((0xffffffffb40d0856)<(LIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffb40d0856)<(LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM t1, t0, rt1, vt0, rt0);
SELECT * FROM t1, t0, rt1, vt0, rt0 WHERE (((0xffffffffb40d0856)<(LIKELY(DISTINCT vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((NOT (MIN(vt0.c1, 0.8917202764387545)))) ORDER BY ((((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), 1263106628, (vt0.c2 IN ())))>=(((vt0.c0 IN ('', vt0.c2)), (((vt0.c2))<=((vt0.c2))), ((('-386923759')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) DESC  NULLS FIRST, ((((vt0.c0)>>(vt0.c1)))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (MIN(vt0.c1, 0.8917202764387545)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), 1263106628, (vt0.c2 IN ())))>=(((vt0.c0 IN ('', vt0.c2)), (((vt0.c2))<=((vt0.c2))), ((('-386923759')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) DESC  NULLS FIRST, ((((vt0.c0)>>(vt0.c1)))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (MIN(vt0.c1, 0.8917202764387545)))) ORDER BY ((((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), 1263106628, (vt0.c2 IN ())))>=(((vt0.c0 IN ('', vt0.c2)), (((vt0.c2))<=((vt0.c2))), ((('-386923759')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) DESC  NULLS FIRST, ((((vt0.c0)>>(vt0.c1)))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (MIN(vt0.c1, 0.8917202764387545)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), 1263106628, (vt0.c2 IN ())))>=(((vt0.c0 IN ('', vt0.c2)), (((vt0.c2))<=((vt0.c2))), ((('-386923759')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) DESC  NULLS FIRST, ((((vt0.c0)>>(vt0.c1)))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT (MIN(vt0.c1, 0.8917202764387545)))) ORDER BY ((((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), 1263106628, (vt0.c2 IN ())))>=(((vt0.c0 IN ('', vt0.c2)), (((vt0.c2))<=((vt0.c2))), ((('-386923759')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) DESC  NULLS FIRST, ((((vt0.c0)>>(vt0.c1)))OR(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON NULL LEFT OUTER JOIN vt0 ON CAST(UNICODE(rt1.c2) AS TEXT) CROSS JOIN rt0 ON x'' INNER JOIN rt1 ON (NOT (((((rt0.c0)AND(rt1.c4)))AND(x'2c90')))) WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY rt0.c1 COLLATE NOCASE ASC  NULLS FIRST, (((+ (rt1.c0)))=(rt0.c3 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON NULL LEFT OUTER JOIN vt0 ON CAST(UNICODE(rt1.c2) AS TEXT) CROSS JOIN rt0 ON x'' INNER JOIN rt1 ON (NOT (((((rt0.c0)AND(rt1.c4)))AND(x'2c90')))) ORDER BY rt0.c1 COLLATE NOCASE ASC  NULLS FIRST, (((+ (rt1.c0)))=(rt0.c3 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN t0 ON NULL LEFT OUTER JOIN vt0 ON CAST(UNICODE(rt1.c2) AS TEXT) CROSS JOIN rt0 ON x'' INNER JOIN rt1 ON (NOT (((((rt0.c0)AND(rt1.c4)))AND(x'2c90')))) WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY rt0.c1 COLLATE NOCASE ASC  NULLS FIRST, (((+ (rt1.c0)))=(rt0.c3 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON NULL LEFT OUTER JOIN vt0 ON CAST(UNICODE(rt1.c2) AS TEXT) CROSS JOIN rt0 ON x'' INNER JOIN rt1 ON (NOT (((((rt0.c0)AND(rt1.c4)))AND(x'2c90')))) ORDER BY rt0.c1 COLLATE NOCASE ASC  NULLS FIRST, (((+ (rt1.c0)))=(rt0.c3 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c56 END THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c1)AND(NULL)) END FULL OUTER JOIN t0 ON ((vt0.c0)IS(vt0.c2)) COLLATE RTRIM WHERE (((vt0.c1 COLLATE BINARY)!=(((((NULL)AND(rt0.c3)))AND(t1.c0))))) ORDER BY CASE rt0.c3 COLLATE BINARY  WHEN vt0.c0 THEN (vt0.c1 IN ()) WHEN CASE WHEN vt0.c2 THEN rt0.c3 END THEN (vt0.c0 IN ()) WHEN CHAR(vt0.c0, rt0.c3, rt0.c3) THEN (vt0.c2 IN ()) ELSE rt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY)!=(((((NULL)AND(rt0.c3)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c56 END THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c1)AND(NULL)) END FULL OUTER JOIN t0 ON ((vt0.c0)IS(vt0.c2)) COLLATE RTRIM ORDER BY CASE rt0.c3 COLLATE BINARY  WHEN vt0.c0 THEN (vt0.c1 IN ()) WHEN CASE WHEN vt0.c2 THEN rt0.c3 END THEN (vt0.c0 IN ()) WHEN CHAR(vt0.c0, rt0.c3, rt0.c3) THEN (vt0.c2 IN ()) ELSE rt0.c0 END ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c56 END THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c1)AND(NULL)) END FULL OUTER JOIN t0 ON ((vt0.c0)IS(vt0.c2)) COLLATE RTRIM WHERE (((vt0.c1 COLLATE BINARY)!=(((((NULL)AND(rt0.c3)))AND(t1.c0))))) ORDER BY CASE rt0.c3 COLLATE BINARY  WHEN vt0.c0 THEN (vt0.c1 IN ()) WHEN CASE WHEN vt0.c2 THEN rt0.c3 END THEN (vt0.c0 IN ()) WHEN CHAR(vt0.c0, rt0.c3, rt0.c3) THEN (vt0.c2 IN ()) ELSE rt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY)!=(((((NULL)AND(rt0.c3)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON CASE WHEN CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c56 END THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c1)AND(NULL)) END FULL OUTER JOIN t0 ON ((vt0.c0)IS(vt0.c2)) COLLATE RTRIM ORDER BY CASE rt0.c3 COLLATE BINARY  WHEN vt0.c0 THEN (vt0.c1 IN ()) WHEN CASE WHEN vt0.c2 THEN rt0.c3 END THEN (vt0.c0 IN ()) WHEN CHAR(vt0.c0, rt0.c3, rt0.c3) THEN (vt0.c2 IN ()) ELSE rt0.c0 END ASC  NULLS FIRST);
SELECT * FROM t1, vt0, t0 WHERE (((((t0.c0)==(vt0.c0)))<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)=(vt0.c0)))<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0, t0);
SELECT * FROM t1, vt0, t0 WHERE (((((t0.c0)==(vt0.c0)))<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)=(vt0.c0)))<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0, t0);
SELECT * FROM t1, vt0, t0 WHERE (((((t0.c0)==(vt0.c0)))<(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0, t1, rt1 INNER JOIN t0 ON (NOT (UNICODE(t1.c0))) WHERE ((CAST(vt0.c1 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t1, rt1 INNER JOIN t0 ON (NOT (UNICODE(t1.c0))));
SELECT COUNT(*) FROM vt0, t1, rt1 INNER JOIN t0 ON (NOT (UNICODE(t1.c0))) WHERE ((CAST(vt0.c1 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t1, rt1 INNER JOIN t0 ON (NOT (UNICODE(t1.c0))));
SELECT COUNT(*) FROM vt0, t1, rt1 INNER JOIN t0 ON (NOT (UNICODE(t1.c0))) WHERE ((CAST(vt0.c1 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1) BETWEEN (((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5))) AND (-1005604264))) ORDER BY ((((x'') NOT BETWEEN (0.61870786487011) AND (rt0.c3))) NOTNULL), ((((((((rt1.c2)OR('.H')))OR(((rt0.c1)LIKE(rt1.c2)))))AND(rt0.c2)))AND('-706309817'))  NULLS LAST, json_quote(json_quote(rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5))) AND (-1005604264))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((x'') NOT BETWEEN (0.61870786487011) AND (rt0.c3))) NOTNULL), ((((((((rt1.c2)OR('.H')))OR(((rt0.c1)LIKE(rt1.c2)))))AND(rt0.c2)))AND('-706309817'))  NULLS LAST, json_quote(json_quote(rt0.c3)) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1) BETWEEN (((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5))) AND (-1005604264))) ORDER BY ((((x'') NOT BETWEEN (0.61870786487011) AND (rt0.c3))) NOTNULL), ((((((((rt1.c2)OR('.H')))OR(((rt0.c1)LIKE(rt1.c2)))))AND(rt0.c2)))AND('-706309817'))  NULLS LAST, json_quote(json_quote(rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5))) AND (-1005604264))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((x'') NOT BETWEEN (0.61870786487011) AND (rt0.c3))) NOTNULL), ((((((((rt1.c2)OR('.H')))OR(((rt0.c1)LIKE(rt1.c2)))))AND(rt0.c2)))AND('-706309817'))  NULLS LAST, json_quote(json_quote(rt0.c3)) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1) BETWEEN (((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c5))) AND (-1005604264))) ORDER BY ((((x'') NOT BETWEEN (0.61870786487011) AND (rt0.c3))) NOTNULL), ((((((((rt1.c2)OR('.H')))OR(((rt0.c1)LIKE(rt1.c2)))))AND(rt0.c2)))AND('-706309817'))  NULLS LAST, json_quote(json_quote(rt0.c3)) DESC;
SELECT COUNT(*) FROM vt0, rt1, rt0, t0, t1 WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1, rt0, t0, t1);
SELECT COUNT(*) FROM vt0, rt1, rt0, t0, t1 WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1, rt0, t0, t1);
SELECT COUNT(*) FROM vt0, rt1, rt0, t0, t1 WHERE ((rt1.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c3 AS NUMERIC))LIKE(CASE 0.27785596972010496  WHEN rt1.c3 THEN vt0.c1 WHEN 0.8366940618424518 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS NUMERIC))LIKE(CASE 0.27785596972010496  WHEN rt1.c3 THEN vt0.c1 WHEN 0.8366940618424518 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c3 AS NUMERIC))LIKE(CASE 0.27785596972010496  WHEN rt1.c3 THEN vt0.c1 WHEN 0.8366940618424518 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS NUMERIC))LIKE(CASE 0.27785596972010496  WHEN rt1.c3 THEN vt0.c1 WHEN 0.8366940618424518 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c3 AS NUMERIC))LIKE(CASE 0.27785596972010496  WHEN rt1.c3 THEN vt0.c1 WHEN 0.8366940618424518 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c2 END)));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON GLOB(rt1.c4, rt1.c4) COLLATE BINARY INNER JOIN t1 ON ((((rt1.c0) NOTNULL))>(((vt0.c0) ISNULL))) WHERE ((NOT (CAST(rt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON GLOB(rt1.c4, rt1.c4) COLLATE BINARY INNER JOIN t1 ON ((((rt1.c0) NOTNULL))>(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON GLOB(rt1.c4, rt1.c4) COLLATE BINARY INNER JOIN t1 ON ((((rt1.c0) NOTNULL))>(((vt0.c0) ISNULL))) WHERE ((NOT (CAST(rt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON GLOB(rt1.c4, rt1.c4) COLLATE BINARY INNER JOIN t1 ON ((((rt1.c0) NOTNULL))>(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON GLOB(rt1.c4, rt1.c4) COLLATE BINARY INNER JOIN t1 ON ((((rt1.c0) NOTNULL))>(((vt0.c0) ISNULL))) WHERE ((NOT (CAST(rt1.c0 AS BLOB))));
SELECT COUNT(*) FROM t1, rt1 CROSS JOIN rt0 ON ((((((vt0.c2)AND(rt0.c0)))AND(t0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((vt0.c1) NOTNULL))) FULL OUTER JOIN t0 ON 0.22294296031356586 LEFT OUTER JOIN vt0 ON (+ (CASE WHEN NULL THEN t0.c0 END)) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t1, rt1 CROSS JOIN rt0 ON ((((((vt0.c2)AND(rt0.c0)))AND(t0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((vt0.c1) NOTNULL))) FULL OUTER JOIN t0 ON 0.22294296031356586 LEFT OUTER JOIN vt0 ON (+ (CASE WHEN NULL THEN t0.c0 END)));
SELECT COUNT(*) FROM t1, rt1 CROSS JOIN rt0 ON ((((((vt0.c2)AND(rt0.c0)))AND(t0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((vt0.c1) NOTNULL))) FULL OUTER JOIN t0 ON 0.22294296031356586 LEFT OUTER JOIN vt0 ON (+ (CASE WHEN NULL THEN t0.c0 END)) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t1, rt1 CROSS JOIN rt0 ON ((((((vt0.c2)AND(rt0.c0)))AND(t0.c0))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((vt0.c1) NOTNULL))) FULL OUTER JOIN t0 ON 0.22294296031356586 LEFT OUTER JOIN vt0 ON (+ (CASE WHEN NULL THEN t0.c0 END)));
SELECT COUNT(*) FROM t0, t1 NATURAL JOIN rt0 WHERE (((CASE rt0.c2  WHEN t0.c56 THEN t1.c0 END) NOT BETWEEN ((t0.c56 IN ())) AND (t0.c56 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN t0.c56 THEN t1.c0 END) NOT BETWEEN ((t0.c56 IN ())) AND (t0.c56 COLLATE BINARY))) IS TRUE)  as count FROM t0, t1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0, t1 NATURAL JOIN rt0 WHERE (((CASE rt0.c2  WHEN t0.c56 THEN t1.c0 END) NOT BETWEEN ((t0.c56 IN ())) AND (t0.c56 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN t0.c56 THEN t1.c0 END) NOT BETWEEN ((t0.c56 IN ())) AND (t0.c56 COLLATE BINARY))) IS TRUE)  as count FROM t0, t1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0, t1 NATURAL JOIN rt0 WHERE (((CASE rt0.c2  WHEN t0.c56 THEN t1.c0 END) NOT BETWEEN ((t0.c56 IN ())) AND (t0.c56 COLLATE BINARY)));
SELECT ALL * FROM t0, t1 LEFT OUTER JOIN rt1 ON ((rt0.c2 COLLATE BINARY)+(CASE WHEN t1.c0 THEN rt1.c0 ELSE rt0.c1 END)) FULL OUTER JOIN rt0 ON ABS(CASE rt1.c3  WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c4 WHEN t0.c56 THEN '\ஷ' ELSE rt0.c1 END) WHERE (CAST(1.803659008E9 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.803659008E9 AS NUMERIC)) IS TRUE)  as count FROM t0, t1 LEFT OUTER JOIN rt1 ON ((rt0.c2 COLLATE BINARY)+(CASE WHEN t1.c0 THEN rt1.c0 ELSE rt0.c1 END)) FULL OUTER JOIN rt0 ON ABS(CASE rt1.c3  WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c4 WHEN t0.c56 THEN '\ஷ' ELSE rt0.c1 END));
SELECT ALL * FROM t0, t1 LEFT OUTER JOIN rt1 ON ((rt0.c2 COLLATE BINARY)+(CASE WHEN t1.c0 THEN rt1.c0 ELSE rt0.c1 END)) FULL OUTER JOIN rt0 ON ABS(CASE rt1.c3  WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c4 WHEN t0.c56 THEN '\ஷ' ELSE rt0.c1 END) WHERE (CAST(1.803659008E9 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.803659008E9 AS NUMERIC)) IS TRUE)  as count FROM t0, t1 LEFT OUTER JOIN rt1 ON ((rt0.c2 COLLATE BINARY)+(CASE WHEN t1.c0 THEN rt1.c0 ELSE rt0.c1 END)) FULL OUTER JOIN rt0 ON ABS(CASE rt1.c3  WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c4 WHEN t0.c56 THEN '\ஷ' ELSE rt0.c1 END));
SELECT ALL * FROM t0, rt1, t1, vt0, rt0 WHERE ((CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c2 END IN ((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c2 END IN ((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, rt1, t1, vt0, rt0);
SELECT ALL * FROM t0, rt1, t1, vt0, rt0 WHERE ((CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c2 END IN ((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c2 END IN ((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, rt1, t1, vt0, rt0);
SELECT ALL * FROM t0, rt1, t1, vt0, rt0 WHERE ((CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c2 END IN ((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((t0.c0))))));
SELECT * FROM vt0, t1 LEFT OUTER JOIN t0 ON CASE t0.c0  WHEN rt1.c5 THEN vt0.c0 END COLLATE RTRIM COLLATE BINARY INNER JOIN rt1 ON (((((vt0.c2, t0.c56, rt1.c5)) BETWEEN (('寜nowyr', t0.c0, t0.c0)) AND ((-1470147518, rt0.c1, vt0.c2)))) NOT BETWEEN (((0.12328375271934311) BETWEEN (rt0.c2) AND (rt0.c1))) AND (vt0.c2 COLLATE RTRIM)) CROSS JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN ())) WHERE (((((rt0.c2) BETWEEN (vt0.c2) AND (rt1.c4))) BETWEEN (((rt1.c0)<(rt1.c3))) AND ((('᧼P/冸v,uP級')>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (vt0.c2) AND (rt1.c4))) BETWEEN (((rt1.c0)<(rt1.c3))) AND ((('᧼P/冸v,uP級')>>(vt0.c1))))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN t0 ON CASE t0.c0  WHEN rt1.c5 THEN vt0.c0 END COLLATE RTRIM COLLATE BINARY INNER JOIN rt1 ON (((((vt0.c2, t0.c56, rt1.c5)) BETWEEN (('寜nowyr', t0.c0, t0.c0)) AND ((-1470147518, rt0.c1, vt0.c2)))) NOT BETWEEN (((0.12328375271934311) BETWEEN (rt0.c2) AND (rt0.c1))) AND (vt0.c2 COLLATE RTRIM)) CROSS JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN ())));
SELECT * FROM vt0, t1 LEFT OUTER JOIN t0 ON CASE t0.c0  WHEN rt1.c5 THEN vt0.c0 END COLLATE RTRIM COLLATE BINARY INNER JOIN rt1 ON (((((vt0.c2, t0.c56, rt1.c5)) BETWEEN (('寜nowyr', t0.c0, t0.c0)) AND ((-1470147518, rt0.c1, vt0.c2)))) NOT BETWEEN (((0.12328375271934311) BETWEEN (rt0.c2) AND (rt0.c1))) AND (vt0.c2 COLLATE RTRIM)) CROSS JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN ())) WHERE (((((rt0.c2) BETWEEN (vt0.c2) AND (rt1.c4))) BETWEEN (((rt1.c0)<(rt1.c3))) AND ((('᧼P/冸v,uP級')>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (vt0.c2) AND (rt1.c4))) BETWEEN (((rt1.c0)<(rt1.c3))) AND ((('᧼P/冸v,uP級')>>(vt0.c1))))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN t0 ON CASE t0.c0  WHEN rt1.c5 THEN vt0.c0 END COLLATE RTRIM COLLATE BINARY INNER JOIN rt1 ON (((((vt0.c2, t0.c56, rt1.c5)) BETWEEN (('寜nowyr', t0.c0, t0.c0)) AND ((-1470147518, rt0.c1, vt0.c2)))) NOT BETWEEN (((0.12328375271934311) BETWEEN (rt0.c2) AND (rt0.c1))) AND (vt0.c2 COLLATE RTRIM)) CROSS JOIN rt0 ON UNLIKELY(DISTINCT (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0, t0, t1, rt1, rt0 WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))  WHEN ((rt1.c1)/(vt0.c2)) THEN (- (rt1.c1)) ELSE (rt0.c3 IN (rt0.c3, vt0.c0)) END) ORDER BY 0.49678834050695997  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))  WHEN ((rt1.c1)/(vt0.c2)) THEN (- (rt1.c1)) ELSE (rt0.c3 IN (rt0.c3, vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, t1, rt1, rt0 ORDER BY 0.49678834050695997  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, t1, rt1, rt0 WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))  WHEN ((rt1.c1)/(vt0.c2)) THEN (- (rt1.c1)) ELSE (rt0.c3 IN (rt0.c3, vt0.c0)) END) ORDER BY 0.49678834050695997  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))  WHEN ((rt1.c1)/(vt0.c2)) THEN (- (rt1.c1)) ELSE (rt0.c3 IN (rt0.c3, vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, t1, rt1, rt0 ORDER BY 0.49678834050695997  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, t1, rt1, rt0 WHERE (CASE (((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))  WHEN ((rt1.c1)/(vt0.c2)) THEN (- (rt1.c1)) ELSE (rt0.c3 IN (rt0.c3, vt0.c0)) END) ORDER BY 0.49678834050695997  NULLS FIRST;
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (-73278793);
SELECT SUM(count) FROM (SELECT ALL ((-73278793) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (-73278793);
SELECT SUM(count) FROM (SELECT ALL ((-73278793) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (-73278793);
SELECT ALL * FROM vt0 WHERE (0.813127214838771);
SELECT SUM(count) FROM (SELECT ((0.813127214838771) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.813127214838771);
SELECT SUM(count) FROM (SELECT ((0.813127214838771) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.813127214838771);
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c5) IS TRUE) AS TEXT)) ORDER BY 0X318139ad;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c5) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt1, t0 ORDER BY 0X318139ad);
SELECT ALL * FROM rt1, t0 WHERE (CAST(((rt1.c5) IS TRUE) AS TEXT)) ORDER BY 0X318139ad;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c5) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt1, t0 ORDER BY 0X318139ad);
SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((((rt1.c3 COLLATE RTRIM)OR(NULLIF(t1.c0, t0.c56))))OR((vt0.c1 IN ()))) INNER JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE ((vt0.c2) NOT NULL)  WHEN (0.9155691130643749 IN ()) THEN rt1.c1 END WHERE (TRIM(DISTINCT '2008162672', ((rt1.c2) ISNULL))) ORDER BY ((((((rt0.c2)OR(t0.c56)))AND(rt0.c1)))AND(json_type(vt0.c0))) ASC  NULLS LAST, json_array_length(((rt1.c3)&(NULL)), (+ (rt1.c0))), ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT '2008162672', ((rt1.c2) ISNULL))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON ((((rt1.c3 COLLATE RTRIM)OR(NULLIF(t1.c0, t0.c56))))OR((vt0.c1 IN ()))) INNER JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE ((vt0.c2) NOT NULL)  WHEN (0.9155691130643749 IN ()) THEN rt1.c1 END ORDER BY ((((((rt0.c2)OR(t0.c56)))AND(rt0.c1)))AND(json_type(vt0.c0))) ASC  NULLS LAST, json_array_length(((rt1.c3)&(NULL)), (+ (rt1.c0))), ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c1))) IS TRUE)  NULLS LAST);
SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((((rt1.c3 COLLATE RTRIM)OR(NULLIF(t1.c0, t0.c56))))OR((vt0.c1 IN ()))) INNER JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE ((vt0.c2) NOT NULL)  WHEN (0.9155691130643749 IN ()) THEN rt1.c1 END WHERE (TRIM(DISTINCT '2008162672', ((rt1.c2) ISNULL))) ORDER BY ((((((rt0.c2)OR(t0.c56)))AND(rt0.c1)))AND(json_type(vt0.c0))) ASC  NULLS LAST, json_array_length(((rt1.c3)&(NULL)), (+ (rt1.c0))), ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT '2008162672', ((rt1.c2) ISNULL))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN t0 ON ((((rt1.c3 COLLATE RTRIM)OR(NULLIF(t1.c0, t0.c56))))OR((vt0.c1 IN ()))) INNER JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE ((vt0.c2) NOT NULL)  WHEN (0.9155691130643749 IN ()) THEN rt1.c1 END ORDER BY ((((((rt0.c2)OR(t0.c56)))AND(rt0.c1)))AND(json_type(vt0.c0))) ASC  NULLS LAST, json_array_length(((rt1.c3)&(NULL)), (+ (rt1.c0))), ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c1))) IS TRUE)  NULLS LAST);
SELECT * FROM t1 LEFT OUTER JOIN t0 ON ((((rt1.c3 COLLATE RTRIM)OR(NULLIF(t1.c0, t0.c56))))OR((vt0.c1 IN ()))) INNER JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) CROSS JOIN rt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE ((vt0.c2) NOT NULL)  WHEN (0.9155691130643749 IN ()) THEN rt1.c1 END WHERE (TRIM(DISTINCT '2008162672', ((rt1.c2) ISNULL))) ORDER BY ((((((rt0.c2)OR(t0.c56)))AND(rt0.c1)))AND(json_type(vt0.c0))) ASC  NULLS LAST, json_array_length(((rt1.c3)&(NULL)), (+ (rt1.c0))), ((((((vt0.c0)OR(rt1.c0)))AND(rt1.c1))) IS TRUE)  NULLS LAST;
SELECT * FROM t1 WHERE (CASE WHEN NULL THEN ((t1.c0)=(2.146209647E9)) WHEN ((t1.c0)|(NULL)) THEN ((t1.c0)LIKE(t1.c0)) WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM ELSE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((t1.c0)=(2.146209647E9)) WHEN ((t1.c0)|(NULL)) THEN ((t1.c0)LIKE(t1.c0)) WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM ELSE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN NULL THEN ((t1.c0)=(2.146209647E9)) WHEN ((t1.c0)|(NULL)) THEN ((t1.c0)LIKE(t1.c0)) WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM ELSE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((t1.c0)=(2.146209647E9)) WHEN ((t1.c0)|(NULL)) THEN ((t1.c0)LIKE(t1.c0)) WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM ELSE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN NULL THEN ((t1.c0)=(2.146209647E9)) WHEN ((t1.c0)|(NULL)) THEN ((t1.c0)LIKE(t1.c0)) WHEN (t1.c0 IN ()) THEN t1.c0 COLLATE RTRIM ELSE CASE t1.c0  WHEN t1.c0 THEN t1.c0 END END);
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c3 COLLATE NOCASE)OR(rt1.c0)))OR((((rt1.c3))<>((rt1.c5))))))OR(0.6648963314492703)))AND(rt1.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c3 COLLATE NOCASE)OR(rt1.c0)))OR((((rt1.c3))<>((rt1.c5))))))OR(0.6648963314492703)))AND(rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c3 COLLATE NOCASE)OR(rt1.c0)))OR((((rt1.c3))<>((rt1.c5))))))OR(0.6648963314492703)))AND(rt1.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c3 COLLATE NOCASE)OR(rt1.c0)))OR((((rt1.c3))<>((rt1.c5))))))OR(0.6648963314492703)))AND(rt1.c4 COLLATE RTRIM))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((rt1.c3 COLLATE NOCASE)OR(rt1.c0)))OR((((rt1.c3))<>((rt1.c5))))))OR(0.6648963314492703)))AND(rt1.c4 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t1, rt0, rt1, t0 WHERE ((((rt1.c1)<(t1.c0)) IN ((t0.c56 IN ())))) ORDER BY x'', (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS FIRST, (- (CAST(rt1.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)<(t1.c0)) IN ((t0.c56 IN ())))) IS TRUE)  as count FROM vt0, t1, rt0, rt1, t0 ORDER BY x'', (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS FIRST, (- (CAST(rt1.c1 AS REAL))) DESC);
SELECT ALL * FROM vt0, t1, rt0, rt1, t0 WHERE ((((rt1.c1)<(t1.c0)) IN ((t0.c56 IN ())))) ORDER BY x'', (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS FIRST, (- (CAST(rt1.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)<(t1.c0)) IN ((t0.c56 IN ())))) IS TRUE)  as count FROM vt0, t1, rt0, rt1, t0 ORDER BY x'', (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS FIRST, (- (CAST(rt1.c1 AS REAL))) DESC);
SELECT ALL * FROM vt0, t1, rt0, rt1, t0 WHERE ((((rt1.c1)<(t1.c0)) IN ((t0.c56 IN ())))) ORDER BY x'', (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS FIRST, (- (CAST(rt1.c1 AS REAL))) DESC;
SELECT ALL COUNT(*) FROM t0, rt1 CROSS JOIN vt0 ON (((((vt0.c0))!=((vt0.c1)))) NOT BETWEEN (((((vt0.c1)AND(rt1.c0)))AND(rt1.c5))) AND (((vt0.c1)=(vt0.c2)))) WHERE (CASE '^o'  WHEN (rt1.c4 IN (rt1.c4)) THEN ((rt1.c5)=(rt1.c0)) ELSE ((t0.c56)|(rt1.c0)) END) ORDER BY (rt1.c4 COLLATE RTRIM IN ()) ASC  NULLS FIRST, CASE WHEN CASE t0.c0  WHEN rt1.c5 THEN '[1{Dztf偐' WHEN t0.c56 THEN rt1.c5 WHEN t0.c56 THEN vt0.c0 END THEN (rt1.c4 IN (t0.c0)) ELSE ('5*U' IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE '^o'  WHEN (rt1.c4 IN (rt1.c4)) THEN ((rt1.c5)=(rt1.c0)) ELSE ((t0.c56)|(rt1.c0)) END) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt0 ON (((((vt0.c0))!=((vt0.c1)))) NOT BETWEEN (((((vt0.c1)AND(rt1.c0)))AND(rt1.c5))) AND (((vt0.c1)==(vt0.c2)))) ORDER BY (rt1.c4 COLLATE RTRIM IN ()) ASC  NULLS FIRST, CASE WHEN CASE t0.c0  WHEN rt1.c5 THEN '[1{Dztf偐' WHEN t0.c56 THEN rt1.c5 WHEN t0.c56 THEN vt0.c0 END THEN (rt1.c4 IN (t0.c0)) ELSE ('5*U' IN ()) END ASC);
SELECT ALL COUNT(*) FROM t0, rt1 CROSS JOIN vt0 ON (((((vt0.c0))!=((vt0.c1)))) NOT BETWEEN (((((vt0.c1)AND(rt1.c0)))AND(rt1.c5))) AND (((vt0.c1)=(vt0.c2)))) WHERE (CASE '^o'  WHEN (rt1.c4 IN (rt1.c4)) THEN ((rt1.c5)=(rt1.c0)) ELSE ((t0.c56)|(rt1.c0)) END) ORDER BY (rt1.c4 COLLATE RTRIM IN ()) ASC  NULLS FIRST, CASE WHEN CASE t0.c0  WHEN rt1.c5 THEN '[1{Dztf偐' WHEN t0.c56 THEN rt1.c5 WHEN t0.c56 THEN vt0.c0 END THEN (rt1.c4 IN (t0.c0)) ELSE ('5*U' IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE '^o'  WHEN (rt1.c4 IN (rt1.c4)) THEN ((rt1.c5)=(rt1.c0)) ELSE ((t0.c56)|(rt1.c0)) END) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt0 ON (((((vt0.c0))!=((vt0.c1)))) NOT BETWEEN (((((vt0.c1)AND(rt1.c0)))AND(rt1.c5))) AND (((vt0.c1)==(vt0.c2)))) ORDER BY (rt1.c4 COLLATE RTRIM IN ()) ASC  NULLS FIRST, CASE WHEN CASE t0.c0  WHEN rt1.c5 THEN '[1{Dztf偐' WHEN t0.c56 THEN rt1.c5 WHEN t0.c56 THEN vt0.c0 END THEN (rt1.c4 IN (t0.c0)) ELSE ('5*U' IN ()) END ASC);
SELECT ALL COUNT(*) FROM t0, rt1 CROSS JOIN vt0 ON (((((vt0.c0))!=((vt0.c1)))) NOT BETWEEN (((((vt0.c1)AND(rt1.c0)))AND(rt1.c5))) AND (((vt0.c1)=(vt0.c2)))) WHERE (CASE '^o'  WHEN (rt1.c4 IN (rt1.c4)) THEN ((rt1.c5)=(rt1.c0)) ELSE ((t0.c56)|(rt1.c0)) END) ORDER BY (rt1.c4 COLLATE RTRIM IN ()) ASC  NULLS FIRST, CASE WHEN CASE t0.c0  WHEN rt1.c5 THEN '[1{Dztf偐' WHEN t0.c56 THEN rt1.c5 WHEN t0.c56 THEN vt0.c0 END THEN (rt1.c4 IN (t0.c0)) ELSE ('5*U' IN ()) END ASC;
SELECT ALL * FROM t1, t0, rt0, vt0 WHERE ((((rt0.c3)) BETWEEN (((((t0.c56))<=((rt0.c0))))) AND (((((rt0.c0)) NOT BETWEEN ((0.6770640401038267)) AND ((t0.c56)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((((t0.c56))<=((rt0.c0))))) AND (((((rt0.c0)) NOT BETWEEN ((0.6770640401038267)) AND ((t0.c56))))))) IS TRUE)  as count FROM t1, t0, rt0, vt0);
SELECT ALL * FROM t1, t0, rt0, vt0 WHERE ((((rt0.c3)) BETWEEN (((((t0.c56))<=((rt0.c0))))) AND (((((rt0.c0)) NOT BETWEEN ((0.6770640401038267)) AND ((t0.c56)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((((t0.c56))<=((rt0.c0))))) AND (((((rt0.c0)) NOT BETWEEN ((0.6770640401038267)) AND ((t0.c56))))))) IS TRUE)  as count FROM t1, t0, rt0, vt0);
SELECT ALL * FROM t1, t0, rt0, vt0 WHERE ((((rt0.c3)) BETWEEN (((((t0.c56))<=((rt0.c0))))) AND (((((rt0.c0)) NOT BETWEEN ((0.6770640401038267)) AND ((t0.c56)))))));
SELECT ALL * FROM rt0, t1, vt0, t0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((vt0.c1)=(rt0.c3)), NULLIF(vt0.c1, t0.c56)))>=((((vt0.c1)>=(vt0.c2)), LIKELY(vt0.c0), CAST(rt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((vt0.c1)==(rt0.c3)), NULLIF(vt0.c1, t0.c56)))>=((((vt0.c1)>=(vt0.c2)), LIKELY(vt0.c0), CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM rt0, t1, vt0, t0 NOT INDEXED);
SELECT ALL * FROM rt0, t1, vt0, t0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((vt0.c1)=(rt0.c3)), NULLIF(vt0.c1, t0.c56)))>=((((vt0.c1)>=(vt0.c2)), LIKELY(vt0.c0), CAST(rt0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((vt0.c1)==(rt0.c3)), NULLIF(vt0.c1, t0.c56)))>=((((vt0.c1)>=(vt0.c2)), LIKELY(vt0.c0), CAST(rt0.c2 AS TEXT))))) IS TRUE)  as count FROM rt0, t1, vt0, t0 NOT INDEXED);
SELECT ALL * FROM rt0, t1, vt0, t0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), ((vt0.c1)=(rt0.c3)), NULLIF(vt0.c1, t0.c56)))>=((((vt0.c1)>=(vt0.c2)), LIKELY(vt0.c0), CAST(rt0.c2 AS TEXT)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.2758982710945088, t1.c0))==((NULL, (+ (t1.c0)), ((t1.c0) IS TRUE))))) ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.2758982710945088, t1.c0))==((NULL, (+ (t1.c0)), ((t1.c0) IS TRUE))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.2758982710945088, t1.c0))==((NULL, (+ (t1.c0)), ((t1.c0) IS TRUE))))) ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.2758982710945088, t1.c0))==((NULL, (+ (t1.c0)), ((t1.c0) IS TRUE))))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), 0.2758982710945088, t1.c0))==((NULL, (+ (t1.c0)), ((t1.c0) IS TRUE))))) ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC) ASC;
SELECT ALL * FROM rt1, t1, rt0 WHERE (rt1.c4) ORDER BY ((rt0.c2 IN ()) IN ((((rt0.c1, rt1.c5, rt1.c1)) BETWEEN ((rt1.c0, rt0.c2, rt1.c4)) AND ((rt1.c1, rt0.c3, rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 NOT INDEXED, t1, rt0 ORDER BY ((rt0.c2 IN ()) IN ((((rt0.c1, rt1.c5, rt1.c1)) BETWEEN ((rt1.c0, rt0.c2, rt1.c4)) AND ((rt1.c1, rt0.c3, rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (rt1.c4) ORDER BY ((rt0.c2 IN ()) IN ((((rt0.c1, rt1.c5, rt1.c1)) BETWEEN ((rt1.c0, rt0.c2, rt1.c4)) AND ((rt1.c1, rt0.c3, rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 NOT INDEXED, t1, rt0 ORDER BY ((rt0.c2 IN ()) IN ((((rt0.c1, rt1.c5, rt1.c1)) BETWEEN ((rt1.c0, rt0.c2, rt1.c4)) AND ((rt1.c1, rt0.c3, rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (rt1.c4) ORDER BY ((rt0.c2 IN ()) IN ((((rt0.c1, rt1.c5, rt1.c1)) BETWEEN ((rt1.c0, rt0.c2, rt1.c4)) AND ((rt1.c1, rt0.c3, rt0.c1)))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c1)GLOB(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)GLOB(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)GLOB(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)GLOB(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)GLOB(vt0.c2)));
SELECT ALL COUNT(*) FROM vt0, t1, rt0, rt1 WHERE (CASE WHEN (('1451944257') BETWEEN (rt1.c0) AND (rt1.c0)) THEN '1793681729' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('1451944257') BETWEEN (rt1.c0) AND (rt1.c0)) THEN '1793681729' END) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, rt1 WHERE (CASE WHEN (('1451944257') BETWEEN (rt1.c0) AND (rt1.c0)) THEN '1793681729' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('1451944257') BETWEEN (rt1.c0) AND (rt1.c0)) THEN '1793681729' END) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, rt1 WHERE (CASE WHEN (('1451944257') BETWEEN (rt1.c0) AND (rt1.c0)) THEN '1793681729' END);
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((((~ (rt1.c0)))AND((rt0.c2 IN ()))))OR(((('816071982', rt1.c2, rt1.c2))<((rt1.c4, 'cq̂By', vt0.c2))))) WHERE (((rt1.c3)-(rt1.c5)) COLLATE RTRIM) ORDER BY ((rt1.c1)LIKE(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, NULL DESC, '1432311124'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)-(rt1.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((((~ (rt1.c0)))AND((rt0.c2 IN ()))))OR(((('816071982', rt1.c2, rt1.c2))<((rt1.c4, 'cq̂By', vt0.c2))))) ORDER BY ((rt1.c1)LIKE(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, NULL DESC, '1432311124'  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((((~ (rt1.c0)))AND((rt0.c2 IN ()))))OR(((('816071982', rt1.c2, rt1.c2))<((rt1.c4, 'cq̂By', vt0.c2))))) WHERE (((rt1.c3)-(rt1.c5)) COLLATE RTRIM) ORDER BY ((rt1.c1)LIKE(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, NULL DESC, '1432311124'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)-(rt1.c5)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((((~ (rt1.c0)))AND((rt0.c2 IN ()))))OR(((('816071982', rt1.c2, rt1.c2))<((rt1.c4, 'cq̂By', vt0.c2))))) ORDER BY ((rt1.c1)LIKE(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, NULL DESC, '1432311124'  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON (((((~ (rt1.c0)))AND((rt0.c2 IN ()))))OR(((('816071982', rt1.c2, rt1.c2))<((rt1.c4, 'cq̂By', vt0.c2))))) WHERE (((rt1.c3)-(rt1.c5)) COLLATE RTRIM) ORDER BY ((rt1.c1)LIKE(vt0.c0)) COLLATE BINARY ASC  NULLS LAST, NULL DESC, '1432311124'  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((CASE WHEN t0.c56 THEN x'' WHEN rt0.c3 THEN t0.c0 WHEN 0.526274985769451 THEN rt0.c0 END)<=((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c56 THEN x'' WHEN rt0.c3 THEN t0.c0 WHEN 0.526274985769451 THEN rt0.c0 END)<=((~ (rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CASE WHEN t0.c56 THEN x'' WHEN rt0.c3 THEN t0.c0 WHEN 0.526274985769451 THEN rt0.c0 END)<=((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c56 THEN x'' WHEN rt0.c3 THEN t0.c0 WHEN 0.526274985769451 THEN rt0.c0 END)<=((~ (rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CASE WHEN t0.c56 THEN x'' WHEN rt0.c3 THEN t0.c0 WHEN 0.526274985769451 THEN rt0.c0 END)<=((~ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1)))<((rt0.c2 IN ())))) ORDER BY ((rt0.c0)>(rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)>(rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1)))<((rt0.c2 IN ())))) ORDER BY ((rt0.c0)>(rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)>(rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1)))<((rt0.c2 IN ())))) ORDER BY ((rt0.c0)>(rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, t0, t1, rt1 WHERE ((~ (((rt0.c3) IS FALSE)))) ORDER BY (((vt0.c2)) NOT BETWEEN (((((rt1.c2, t0.c0, t0.c56, rt1.c2, rt1.c0))>=((rt1.c4, vt0.c1, rt1.c4, rt1.c3, rt0.c3))))) AND ((((((rt1.c5)OR(NULL)))AND(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, t0, t1, rt1 ORDER BY (((vt0.c2)) NOT BETWEEN (((((rt1.c2, t0.c0, t0.c56, rt1.c2, rt1.c0))>=((rt1.c4, vt0.c1, rt1.c4, rt1.c3, rt0.c3))))) AND ((((((rt1.c5)OR(NULL)))AND(rt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0, t1, rt1 WHERE ((~ (((rt0.c3) IS FALSE)))) ORDER BY (((vt0.c2)) NOT BETWEEN (((((rt1.c2, t0.c0, t0.c56, rt1.c2, rt1.c0))>=((rt1.c4, vt0.c1, rt1.c4, rt1.c3, rt0.c3))))) AND ((((((rt1.c5)OR(NULL)))AND(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, t0, t1, rt1 ORDER BY (((vt0.c2)) NOT BETWEEN (((((rt1.c2, t0.c0, t0.c56, rt1.c2, rt1.c0))>=((rt1.c4, vt0.c1, rt1.c4, rt1.c3, rt0.c3))))) AND ((((((rt1.c5)OR(NULL)))AND(rt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0, t1, rt1 WHERE ((~ (((rt0.c3) IS FALSE)))) ORDER BY (((vt0.c2)) NOT BETWEEN (((((rt1.c2, t0.c0, t0.c56, rt1.c2, rt1.c0))>=((rt1.c4, vt0.c1, rt1.c4, rt1.c3, rt0.c3))))) AND ((((((rt1.c5)OR(NULL)))AND(rt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c3 COLLATE BINARY) IS TRUE)) ORDER BY '', ((~ (rt0.c2)) IN (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY '', ((~ (rt0.c2)) IN (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c3 COLLATE BINARY) IS TRUE)) ORDER BY '', ((~ (rt0.c2)) IN (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY '', ((~ (rt0.c2)) IN (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c3 COLLATE BINARY) IS TRUE)) ORDER BY '', ((~ (rt0.c2)) IN (CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)>((((rt0.c2))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>((((rt0.c2))>=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)>((((rt0.c2))>=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>((((rt0.c2))>=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3)>((((rt0.c2))>=((rt0.c1))))));
SELECT * FROM rt1, t1 WHERE ((- (LTRIM(x'c9aa'))));
SELECT SUM(count) FROM (SELECT (((- (LTRIM(x'c9aa')))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE ((- (LTRIM(x'c9aa'))));
SELECT SUM(count) FROM (SELECT (((- (LTRIM(x'c9aa')))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE ((- (LTRIM(x'c9aa'))));
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CAST(((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c5)))AND(rt0.c2)))OR(t0.c56)) AS INTEGER) WHERE ((- (CASE rt1.c5  WHEN rt1.c2 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt1.c5  WHEN rt1.c2 THEN x'' END))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CAST(((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c5)))AND(rt0.c2)))OR(t0.c56)) AS INTEGER));
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CAST(((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c5)))AND(rt0.c2)))OR(t0.c56)) AS INTEGER) WHERE ((- (CASE rt1.c5  WHEN rt1.c2 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt1.c5  WHEN rt1.c2 THEN x'' END))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CAST(((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c5)))AND(rt0.c2)))OR(t0.c56)) AS INTEGER));
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN t0 ON CAST(((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c5)))AND(rt0.c2)))OR(t0.c56)) AS INTEGER) WHERE ((- (CASE rt1.c5  WHEN rt1.c2 THEN x'' END)));
SELECT * FROM rt1 WHERE ((NOT ((((rt1.c5))<((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt1.c5))<((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((NOT ((((rt1.c5))<((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt1.c5))<((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((NOT ((((rt1.c5))<((rt1.c0))))));
SELECT ALL COUNT(*) FROM rt0, t1, rt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, rt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t1, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, t1, rt1, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t1 WHERE (CASE ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c0)) THEN CAST(rt1.c3 AS REAL) WHEN (((rt1.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN NULL WHEN rt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE CAST(rt1.c1 AS INTEGER) END) ORDER BY ((vt0.c2 COLLATE BINARY) NOT BETWEEN ((rt1.c1 IN ())) AND (CASE WHEN vt0.c2 THEN vt0.c1 ELSE rt1.c5 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c0)) THEN CAST(rt1.c3 AS REAL) WHEN (((rt1.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN NULL WHEN rt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE CAST(rt1.c1 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt1, rt0, t1 ORDER BY ((vt0.c2 COLLATE BINARY) NOT BETWEEN ((rt1.c1 IN ())) AND (CASE WHEN vt0.c2 THEN vt0.c1 ELSE rt1.c5 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t1 WHERE (CASE ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c0)) THEN CAST(rt1.c3 AS REAL) WHEN (((rt1.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN NULL WHEN rt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE CAST(rt1.c1 AS INTEGER) END) ORDER BY ((vt0.c2 COLLATE BINARY) NOT BETWEEN ((rt1.c1 IN ())) AND (CASE WHEN vt0.c2 THEN vt0.c1 ELSE rt1.c5 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c0)) THEN CAST(rt1.c3 AS REAL) WHEN (((rt1.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN NULL WHEN rt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE CAST(rt1.c1 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt1, rt0, t1 ORDER BY ((vt0.c2 COLLATE BINARY) NOT BETWEEN ((rt1.c1 IN ())) AND (CASE WHEN vt0.c2 THEN vt0.c1 ELSE rt1.c5 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0, t1 WHERE (CASE ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0))  WHEN ((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c0)) THEN CAST(rt1.c3 AS REAL) WHEN (((rt1.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2))) THEN NULL WHEN rt0.c0 THEN vt0.c0 COLLATE RTRIM ELSE CAST(rt1.c1 AS INTEGER) END) ORDER BY ((vt0.c2 COLLATE BINARY) NOT BETWEEN ((rt1.c1 IN ())) AND (CASE WHEN vt0.c2 THEN vt0.c1 ELSE rt1.c5 END)) DESC  NULLS LAST;
SELECT * FROM vt0, t1, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, rt1);
SELECT * FROM vt0, t1, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, rt1);
SELECT * FROM vt0, t1, rt1 WHERE (x'');
SELECT COUNT(*) FROM t1, rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, ((rt0.c0)<=(t1.c0)), rt0.c2 COLLATE NOCASE))<=(((+ (rt0.c3)), ((rt0.c0) IS FALSE), ((rt0.c2)GLOB(t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, ((rt0.c0)<=(t1.c0)), rt0.c2 COLLATE NOCASE))<=(((+ (rt0.c3)), ((rt0.c0) IS FALSE), ((rt0.c2)GLOB(t1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, ((rt0.c0)<=(t1.c0)), rt0.c2 COLLATE NOCASE))<=(((+ (rt0.c3)), ((rt0.c0) IS FALSE), ((rt0.c2)GLOB(t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, ((rt0.c0)<=(t1.c0)), rt0.c2 COLLATE NOCASE))<=(((+ (rt0.c3)), ((rt0.c0) IS FALSE), ((rt0.c2)GLOB(t1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END))) ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END, ((rt0.c0)<=(t1.c0)), rt0.c2 COLLATE NOCASE))<=(((+ (rt0.c3)), ((rt0.c0) IS FALSE), ((rt0.c2)GLOB(t1.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c56 COLLATE NOCASE) NOTNULL)) ORDER BY (((t0.c56)*(t0.c56)) IN ())  NULLS FIRST, ((x'' COLLATE RTRIM)IS((t0.c56 IN ()))), ((0.3399783594014939) BETWEEN (((t0.c56) IS TRUE)) AND (t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c56 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c56)*(t0.c56)) IN ())  NULLS FIRST, ((x'' COLLATE RTRIM)IS((t0.c56 IN ()))), ((0.3399783594014939) BETWEEN (((t0.c56) IS TRUE)) AND (t0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c56 COLLATE NOCASE) NOTNULL)) ORDER BY (((t0.c56)*(t0.c56)) IN ())  NULLS FIRST, ((x'' COLLATE RTRIM)IS((t0.c56 IN ()))), ((0.3399783594014939) BETWEEN (((t0.c56) IS TRUE)) AND (t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c56 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c56)*(t0.c56)) IN ())  NULLS FIRST, ((x'' COLLATE RTRIM)IS((t0.c56 IN ()))), ((0.3399783594014939) BETWEEN (((t0.c56) IS TRUE)) AND (t0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c56 COLLATE NOCASE) NOTNULL)) ORDER BY (((t0.c56)*(t0.c56)) IN ())  NULLS FIRST, ((x'' COLLATE RTRIM)IS((t0.c56 IN ()))), ((0.3399783594014939) BETWEEN (((t0.c56) IS TRUE)) AND (t0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0, t1, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED, t1, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, t1, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED, t1, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, t1, rt1 WHERE (NULL);
SELECT * FROM rt0, t1, rt1, vt0 NOT INDEXED WHERE (((((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c1)))IS NOT(154279808)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c1)))IS NOT(154279808))) IS TRUE)  as count FROM rt0, t1, rt1, vt0);
SELECT * FROM rt0, t1, rt1, vt0 NOT INDEXED WHERE (((((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c1)))IS NOT(154279808)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c1)))IS NOT(154279808))) IS TRUE)  as count FROM rt0, t1, rt1, vt0);
SELECT * FROM rt0, t1, rt1, vt0 NOT INDEXED WHERE (((((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c1)))IS NOT(154279808)));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN t0 ON (((('1108967955') NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>((NOT (NULL)))) WHERE (((((t1.c0)AND(vt0.c1)))OR(t0.c0)) COLLATE RTRIM) ORDER BY (+ (((((vt0.c2)OR(0xffffffff854193d9)))OR(0.6978115374891551))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(vt0.c1)))OR(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN t0 ON (((('1108967955') NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>((NOT (NULL)))) ORDER BY (+ (((((vt0.c2)OR(0xffffffff854193d9)))OR(0.6978115374891551)))));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN t0 ON (((('1108967955') NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>((NOT (NULL)))) WHERE (((((t1.c0)AND(vt0.c1)))OR(t0.c0)) COLLATE RTRIM) ORDER BY (+ (((((vt0.c2)OR(0xffffffff854193d9)))OR(0.6978115374891551))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(vt0.c1)))OR(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN t0 ON (((('1108967955') NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>((NOT (NULL)))) ORDER BY (+ (((((vt0.c2)OR(0xffffffff854193d9)))OR(0.6978115374891551)))));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN t0 ON (((('1108967955') NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>((NOT (NULL)))) WHERE (((((t1.c0)AND(vt0.c1)))OR(t0.c0)) COLLATE RTRIM) ORDER BY (+ (((((vt0.c2)OR(0xffffffff854193d9)))OR(0.6978115374891551))));
SELECT * FROM rt0, t1 NOT INDEXED, t0, vt0, rt1 WHERE (((((((((((((((rt0.c1)<=(rt0.c3)))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1)))))AND(((vt0.c1)=(vt0.c2)))))OR((NULL IN ()))))OR(((rt1.c2) NOTNULL))))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(t0.c56 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)<=(rt0.c3)))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1)))))AND(((vt0.c1)=(vt0.c2)))))OR((NULL IN ()))))OR(((rt1.c2) NOTNULL))))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(t0.c56 AS REAL)))) IS TRUE)  as count FROM rt0, t1, t0, vt0, rt1);
SELECT * FROM rt0, t1 NOT INDEXED, t0, vt0, rt1 WHERE (((((((((((((((rt0.c1)<=(rt0.c3)))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1)))))AND(((vt0.c1)=(vt0.c2)))))OR((NULL IN ()))))OR(((rt1.c2) NOTNULL))))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(t0.c56 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)<=(rt0.c3)))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1)))))AND(((vt0.c1)=(vt0.c2)))))OR((NULL IN ()))))OR(((rt1.c2) NOTNULL))))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(t0.c56 AS REAL)))) IS TRUE)  as count FROM rt0, t1, t0, vt0, rt1);
SELECT * FROM rt0, t1 NOT INDEXED, t0, vt0, rt1 WHERE (((((((((((((((rt0.c1)<=(rt0.c3)))AND(((((rt0.c3)OR(rt1.c1)))AND(rt1.c1)))))AND(((vt0.c1)=(vt0.c2)))))OR((NULL IN ()))))OR(((rt1.c2) NOTNULL))))AND(rt1.c1 COLLATE NOCASE)))AND(CAST(t0.c56 AS REAL))));
SELECT ALL * FROM vt0, rt0, t1, t0 INNER JOIN rt1 ON rt1.c1 WHERE ((((((0.7247799391081887, rt1.c3, rt0.c1)) BETWEEN ((t0.c0, rt1.c1, '')) AND ((rt1.c5, x'075d', 0.1645786614440241))))&('2105602090' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.7247799391081887, rt1.c3, rt0.c1)) BETWEEN ((t0.c0, rt1.c1, '')) AND ((rt1.c5, x'075d', 0.1645786614440241))))&('2105602090' COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0, t1, t0 INNER JOIN rt1 ON rt1.c1);
SELECT ALL * FROM vt0, rt0, t1, t0 INNER JOIN rt1 ON rt1.c1 WHERE ((((((0.7247799391081887, rt1.c3, rt0.c1)) BETWEEN ((t0.c0, rt1.c1, '')) AND ((rt1.c5, x'075d', 0.1645786614440241))))&('2105602090' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((0.7247799391081887, rt1.c3, rt0.c1)) BETWEEN ((t0.c0, rt1.c1, '')) AND ((rt1.c5, x'075d', 0.1645786614440241))))&('2105602090' COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0, t1, t0 INNER JOIN rt1 ON rt1.c1);
SELECT ALL * FROM vt0, rt0, t1, t0 INNER JOIN rt1 ON rt1.c1 WHERE ((((((0.7247799391081887, rt1.c3, rt0.c1)) BETWEEN ((t0.c0, rt1.c1, '')) AND ((rt1.c5, x'075d', 0.1645786614440241))))&('2105602090' COLLATE NOCASE)));
SELECT COUNT(*) FROM t1, t0, vt0, rt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<=(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))<=(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM t1, t0, vt0, rt1, rt0);
SELECT COUNT(*) FROM t1, t0, vt0, rt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<=(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC))<=(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM t1, t0, vt0, rt1, rt0);
SELECT COUNT(*) FROM t1, t0, vt0, rt1, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<=(CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, t0, t1 CROSS JOIN rt1 ON '66583946' WHERE (rt1.c5) ORDER BY (((vt0.c2, rt1.c4, t0.c0)) BETWEEN (((- (t0.c0)), (t0.c56 IN ()), CASE vt0.c0  WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN vt0.c2 WHEN rt1.c0 THEN rt1.c4 ELSE t0.c56 END)) AND ((((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2)), (((vt0.c2)) BETWEEN ((rt1.c5)) AND ((t0.c56))), 0.5098344472559455 COLLATE RTRIM))), (((rt1.c2)) NOT BETWEEN ((((vt0.c1)<(t0.c0)))) AND ((((rt1.c5)>>(vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM vt0, t0, t1 CROSS JOIN rt1 ON '66583946' ORDER BY (((vt0.c2, rt1.c4, t0.c0)) BETWEEN (((- (t0.c0)), (t0.c56 IN ()), CASE vt0.c0  WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN vt0.c2 WHEN rt1.c0 THEN rt1.c4 ELSE t0.c56 END)) AND ((((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2)), (((vt0.c2)) BETWEEN ((rt1.c5)) AND ((t0.c56))), 0.5098344472559455 COLLATE RTRIM))), (((rt1.c2)) NOT BETWEEN ((((vt0.c1)<(t0.c0)))) AND ((((rt1.c5)>>(vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, t1 CROSS JOIN rt1 ON '66583946' WHERE (rt1.c5) ORDER BY (((vt0.c2, rt1.c4, t0.c0)) BETWEEN (((- (t0.c0)), (t0.c56 IN ()), CASE vt0.c0  WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN vt0.c2 WHEN rt1.c0 THEN rt1.c4 ELSE t0.c56 END)) AND ((((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2)), (((vt0.c2)) BETWEEN ((rt1.c5)) AND ((t0.c56))), 0.5098344472559455 COLLATE RTRIM))), (((rt1.c2)) NOT BETWEEN ((((vt0.c1)<(t0.c0)))) AND ((((rt1.c5)>>(vt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM vt0, t0, t1 CROSS JOIN rt1 ON '66583946' ORDER BY (((vt0.c2, rt1.c4, t0.c0)) BETWEEN (((- (t0.c0)), (t0.c56 IN ()), CASE vt0.c0  WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN vt0.c2 WHEN rt1.c0 THEN rt1.c4 ELSE t0.c56 END)) AND ((((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2)), (((vt0.c2)) BETWEEN ((rt1.c5)) AND ((t0.c56))), 0.5098344472559455 COLLATE RTRIM))), (((rt1.c2)) NOT BETWEEN ((((vt0.c1)<(t0.c0)))) AND ((((rt1.c5)>>(vt0.c1))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, t1 CROSS JOIN rt1 ON '66583946' WHERE (rt1.c5) ORDER BY (((vt0.c2, rt1.c4, t0.c0)) BETWEEN (((- (t0.c0)), (t0.c56 IN ()), CASE vt0.c0  WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN vt0.c2 WHEN rt1.c0 THEN rt1.c4 ELSE t0.c56 END)) AND ((((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c2)), (((vt0.c2)) BETWEEN ((rt1.c5)) AND ((t0.c56))), 0.5098344472559455 COLLATE RTRIM))), (((rt1.c2)) NOT BETWEEN ((((vt0.c1)<(t0.c0)))) AND ((((rt1.c5)>>(vt0.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t1, rt0, t0, vt0 WHERE (CASE '1001318817'  WHEN LENGTH(rt1.c2) THEN ((rt0.c2) NOTNULL) WHEN x'' THEN load_extension(rt1.c5) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((vt0.c2)=(rt1.c1)) END) ORDER BY CASE UNLIKELY(vt0.c0)  WHEN ((rt1.c0)&(rt1.c2)) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c3 THEN CASE rt1.c3  WHEN rt1.c1 THEN t0.c56 WHEN vt0.c0 THEN t0.c56 WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c1 END WHEN ((rt0.c0) NOTNULL) THEN rt0.c2 COLLATE NOCASE END DESC, ((LOWER(t0.c0)) IS TRUE)  NULLS LAST, CASE ((((((((x'0923')AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c3)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN (((rt0.c3, rt1.c4, vt0.c1))>=((rt1.c5, 'Q4|E>>', rt1.c4))) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE '1001318817'  WHEN LENGTH(rt1.c2) THEN ((rt0.c2) NOTNULL) WHEN x'' THEN load_extension(rt1.c5) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((vt0.c2)=(rt1.c1)) END) IS TRUE)  as count FROM rt1, t1, rt0, t0, vt0 ORDER BY CASE UNLIKELY(vt0.c0)  WHEN ((rt1.c0)&(rt1.c2)) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c3 THEN CASE rt1.c3  WHEN rt1.c1 THEN t0.c56 WHEN vt0.c0 THEN t0.c56 WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c1 END WHEN ((rt0.c0) NOTNULL) THEN rt0.c2 COLLATE NOCASE END DESC, ((LOWER(t0.c0)) IS TRUE)  NULLS LAST, CASE ((((((((x'0923')AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c3)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN (((rt0.c3, rt1.c4, vt0.c1))>=((rt1.c5, 'Q4|E>>', rt1.c4))) END DESC);
SELECT ALL * FROM rt1, t1, rt0, t0, vt0 WHERE (CASE '1001318817'  WHEN LENGTH(rt1.c2) THEN ((rt0.c2) NOTNULL) WHEN x'' THEN load_extension(rt1.c5) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((vt0.c2)=(rt1.c1)) END) ORDER BY CASE UNLIKELY(vt0.c0)  WHEN ((rt1.c0)&(rt1.c2)) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c3 THEN CASE rt1.c3  WHEN rt1.c1 THEN t0.c56 WHEN vt0.c0 THEN t0.c56 WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c1 END WHEN ((rt0.c0) NOTNULL) THEN rt0.c2 COLLATE NOCASE END DESC, ((LOWER(t0.c0)) IS TRUE)  NULLS LAST, CASE ((((((((x'0923')AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c3)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN (((rt0.c3, rt1.c4, vt0.c1))>=((rt1.c5, 'Q4|E>>', rt1.c4))) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE '1001318817'  WHEN LENGTH(rt1.c2) THEN ((rt0.c2) NOTNULL) WHEN x'' THEN load_extension(rt1.c5) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((vt0.c2)=(rt1.c1)) END) IS TRUE)  as count FROM rt1, t1, rt0, t0, vt0 ORDER BY CASE UNLIKELY(vt0.c0)  WHEN ((rt1.c0)&(rt1.c2)) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c3 THEN CASE rt1.c3  WHEN rt1.c1 THEN t0.c56 WHEN vt0.c0 THEN t0.c56 WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c1 END WHEN ((rt0.c0) NOTNULL) THEN rt0.c2 COLLATE NOCASE END DESC, ((LOWER(t0.c0)) IS TRUE)  NULLS LAST, CASE ((((((((x'0923')AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c3)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN (((rt0.c3, rt1.c4, vt0.c1))>=((rt1.c5, 'Q4|E>>', rt1.c4))) END DESC);
SELECT ALL * FROM rt1, t1, rt0, t0, vt0 WHERE (CASE '1001318817'  WHEN LENGTH(rt1.c2) THEN ((rt0.c2) NOTNULL) WHEN x'' THEN load_extension(rt1.c5) WHEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)) THEN ((vt0.c2)=(rt1.c1)) END) ORDER BY CASE UNLIKELY(vt0.c0)  WHEN ((rt1.c0)&(rt1.c2)) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c3 THEN CASE rt1.c3  WHEN rt1.c1 THEN t0.c56 WHEN vt0.c0 THEN t0.c56 WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c1 END WHEN ((rt0.c0) NOTNULL) THEN rt0.c2 COLLATE NOCASE END DESC, ((LOWER(t0.c0)) IS TRUE)  NULLS LAST, CASE ((((((((x'0923')AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c3)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN (((rt0.c3, rt1.c4, vt0.c1))>=((rt1.c5, 'Q4|E>>', rt1.c4))) END DESC;
SELECT * FROM t0, rt0, vt0, t1, rt1 WHERE (CAST(((t1.c0) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0, t1, rt1);
SELECT * FROM t0, rt0, vt0, t1, rt1 WHERE (CAST(((t1.c0) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, vt0, t1, rt1);
SELECT * FROM t0, rt0, vt0, t1, rt1 WHERE (CAST(((t1.c0) IS TRUE) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, t0, t1, rt1, rt0 WHERE (((((((((rt1.c2)AND(rt0.c0)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)AND(rt0.c0)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, t1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, t1, rt1, rt0 WHERE (((((((((rt1.c2)AND(rt0.c0)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2)AND(rt0.c0)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, t1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, t1, rt1, rt0 WHERE (((((((((rt1.c2)AND(rt0.c0)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((rt1.c0 IN (vt0.c0)))LIKE(((rt0.c0)GLOB(rt0.c1)))) INNER JOIN rt1 ON CASE WHEN rt1.c0 COLLATE BINARY THEN (rt1.c0 IN ()) WHEN (t1.c0 IN ()) THEN (rt1.c3 IN ()) WHEN ('mrj⯉#ja\r' IN (rt0.c2, vt0.c2)) THEN (+ (t1.c0)) ELSE LIKELIHOOD(rt1.c2, 0.7907896263369585) END FULL OUTER JOIN vt0 ON UPPER(CAST(vt0.c2 AS NUMERIC)) WHERE (CAST(CAST(rt1.c1 AS REAL) AS TEXT)) ORDER BY '-717920855' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS REAL) AS TEXT)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((rt1.c0 IN (vt0.c0)))LIKE(((rt0.c0)GLOB(rt0.c1)))) INNER JOIN rt1 ON CASE WHEN rt1.c0 COLLATE BINARY THEN (rt1.c0 IN ()) WHEN (t1.c0 IN ()) THEN (rt1.c3 IN ()) WHEN ('mrj⯉#ja\r' IN (rt0.c2, vt0.c2)) THEN (+ (t1.c0)) ELSE LIKELIHOOD(rt1.c2, 0.7907896263369585) END FULL OUTER JOIN vt0 ON UPPER(CAST(vt0.c2 AS NUMERIC)) ORDER BY '-717920855' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((rt1.c0 IN (vt0.c0)))LIKE(((rt0.c0)GLOB(rt0.c1)))) INNER JOIN rt1 ON CASE WHEN rt1.c0 COLLATE BINARY THEN (rt1.c0 IN ()) WHEN (t1.c0 IN ()) THEN (rt1.c3 IN ()) WHEN ('mrj⯉#ja\r' IN (rt0.c2, vt0.c2)) THEN (+ (t1.c0)) ELSE LIKELIHOOD(rt1.c2, 0.7907896263369585) END FULL OUTER JOIN vt0 ON UPPER(CAST(vt0.c2 AS NUMERIC)) WHERE (CAST(CAST(rt1.c1 AS REAL) AS TEXT)) ORDER BY '-717920855' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS REAL) AS TEXT)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((rt1.c0 IN (vt0.c0)))LIKE(((rt0.c0)GLOB(rt0.c1)))) INNER JOIN rt1 ON CASE WHEN rt1.c0 COLLATE BINARY THEN (rt1.c0 IN ()) WHEN (t1.c0 IN ()) THEN (rt1.c3 IN ()) WHEN ('mrj⯉#ja\r' IN (rt0.c2, vt0.c2)) THEN (+ (t1.c0)) ELSE LIKELIHOOD(rt1.c2, 0.7907896263369585) END FULL OUTER JOIN vt0 ON UPPER(CAST(vt0.c2 AS NUMERIC)) ORDER BY '-717920855' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_valid(rt0.c2))IS NOT(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_valid(rt0.c2))IS NOT(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_valid(rt0.c2))IS NOT(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_valid(rt0.c2))IS NOT(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_valid(rt0.c2))IS NOT(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT * FROM vt0, t0, rt0, t1 WHERE ((((t0.c56, rt0.c2, rt0.c1)) NOT BETWEEN (((~ ('ITvy?皇39o')), (+ (rt0.c0)), ((vt0.c0)AND(t1.c0)))) AND ((rt0.c1, ((rt0.c1)<>(vt0.c2)), ((vt0.c2)/(vt0.c0)))))) ORDER BY CASE t0.c0  WHEN (t0.c56 IN (rt0.c0, vt0.c2)) THEN CASE WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56, rt0.c2, rt0.c1)) NOT BETWEEN (((~ ('ITvy?皇39o')), (+ (rt0.c0)), ((vt0.c0)AND(t1.c0)))) AND ((rt0.c1, ((rt0.c1)!=(vt0.c2)), ((vt0.c2)/(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0, t1 ORDER BY CASE t0.c0  WHEN (t0.c56 IN (rt0.c0, vt0.c2)) THEN CASE WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0, t1 WHERE ((((t0.c56, rt0.c2, rt0.c1)) NOT BETWEEN (((~ ('ITvy?皇39o')), (+ (rt0.c0)), ((vt0.c0)AND(t1.c0)))) AND ((rt0.c1, ((rt0.c1)<>(vt0.c2)), ((vt0.c2)/(vt0.c0)))))) ORDER BY CASE t0.c0  WHEN (t0.c56 IN (rt0.c0, vt0.c2)) THEN CASE WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56, rt0.c2, rt0.c1)) NOT BETWEEN (((~ ('ITvy?皇39o')), (+ (rt0.c0)), ((vt0.c0)AND(t1.c0)))) AND ((rt0.c1, ((rt0.c1)!=(vt0.c2)), ((vt0.c2)/(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0, rt0, t1 ORDER BY CASE t0.c0  WHEN (t0.c56 IN (rt0.c0, vt0.c2)) THEN CASE WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0, t1 WHERE ((((t0.c56, rt0.c2, rt0.c1)) NOT BETWEEN (((~ ('ITvy?皇39o')), (+ (rt0.c0)), ((vt0.c0)AND(t1.c0)))) AND ((rt0.c1, ((rt0.c1)<>(vt0.c2)), ((vt0.c2)/(vt0.c0)))))) ORDER BY CASE t0.c0  WHEN (t0.c56 IN (rt0.c0, vt0.c2)) THEN CASE WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END END ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((0.1808770841162226 COLLATE BINARY)|((((x'')) NOT BETWEEN (('2096298623')) AND ((rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.1808770841162226 COLLATE BINARY)|((((x'')) NOT BETWEEN (('2096298623')) AND ((rt1.c5)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((0.1808770841162226 COLLATE BINARY)|((((x'')) NOT BETWEEN (('2096298623')) AND ((rt1.c5))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.1808770841162226 COLLATE BINARY)|((((x'')) NOT BETWEEN (('2096298623')) AND ((rt1.c5)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((0.1808770841162226 COLLATE BINARY)|((((x'')) NOT BETWEEN (('2096298623')) AND ((rt1.c5))))));
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE (TRIM(DISTINCT rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE (TRIM(DISTINCT rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE (TRIM(DISTINCT rt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN t1 ON UNLIKELY(DISTINCT ((rt1.c0)<<(rt1.c4))) WHERE (CAST(((t0.c0)<(rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM t0, rt1 INNER JOIN t1 ON UNLIKELY(DISTINCT ((rt1.c0)<<(rt1.c4))));
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN t1 ON UNLIKELY(DISTINCT ((rt1.c0)<<(rt1.c4))) WHERE (CAST(((t0.c0)<(rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<(rt1.c1)) AS BLOB)) IS TRUE)  as count FROM t0, rt1 INNER JOIN t1 ON UNLIKELY(DISTINCT ((rt1.c0)<<(rt1.c4))));
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN t1 ON UNLIKELY(DISTINCT ((rt1.c0)<<(rt1.c4))) WHERE (CAST(((t0.c0)<(rt1.c1)) AS BLOB));
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((rt1.c3)GLOB(rt1.c0)) IN ((- (rt1.c1))))) ORDER BY ((((((x'1f2c') ISNULL))OR(NULLIF(DISTINCT rt1.c3, rt1.c5))))OR(''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)GLOB(rt1.c0)) IN ((- (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((x'1f2c') ISNULL))OR(NULLIF(DISTINCT rt1.c3, rt1.c5))))OR(''))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((rt1.c3)GLOB(rt1.c0)) IN ((- (rt1.c1))))) ORDER BY ((((((x'1f2c') ISNULL))OR(NULLIF(DISTINCT rt1.c3, rt1.c5))))OR(''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)GLOB(rt1.c0)) IN ((- (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((x'1f2c') ISNULL))OR(NULLIF(DISTINCT rt1.c3, rt1.c5))))OR(''))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((rt1.c3)GLOB(rt1.c0)) IN ((- (rt1.c1))))) ORDER BY ((((((x'1f2c') ISNULL))OR(NULLIF(DISTINCT rt1.c3, rt1.c5))))OR(''))  NULLS FIRST;
SELECT ALL * FROM t1, t0 LEFT OUTER JOIN vt0 ON ((rt1.c4 COLLATE BINARY)IS NOT(-1.034933303E9)) INNER JOIN rt1 ON ((((((((t1.c0 COLLATE BINARY)OR(((rt1.c3) ISNULL))))AND((x'' IN (rt1.c4)))))OR(CAST(rt1.c4 AS REAL))))OR(((((((((rt1.c4)OR(0.293612455105137)))AND(t0.c0)))AND(rt1.c5)))AND(rt1.c0)))) WHERE (((((('0.030397584027649915')) BETWEEN ((vt0.c2)) AND ((NULL))))+(((rt1.c5)&(t0.c56)))));
SELECT SUM(count) FROM (SELECT ((((((('0.030397584027649915')) BETWEEN ((vt0.c2)) AND ((NULL))))+(((rt1.c5)&(t0.c56))))) IS TRUE)  as count FROM t1, t0 LEFT OUTER JOIN vt0 ON ((rt1.c4 COLLATE BINARY)IS NOT(-1.034933303E9)) INNER JOIN rt1 ON ((((((((t1.c0 COLLATE BINARY)OR(((rt1.c3) ISNULL))))AND((x'' IN (rt1.c4)))))OR(CAST(rt1.c4 AS REAL))))OR(((((((((rt1.c4)OR(0.293612455105137)))AND(t0.c0)))AND(rt1.c5)))AND(rt1.c0)))));
SELECT ALL * FROM t1, t0 LEFT OUTER JOIN vt0 ON ((rt1.c4 COLLATE BINARY)IS NOT(-1.034933303E9)) INNER JOIN rt1 ON ((((((((t1.c0 COLLATE BINARY)OR(((rt1.c3) ISNULL))))AND((x'' IN (rt1.c4)))))OR(CAST(rt1.c4 AS REAL))))OR(((((((((rt1.c4)OR(0.293612455105137)))AND(t0.c0)))AND(rt1.c5)))AND(rt1.c0)))) WHERE (((((('0.030397584027649915')) BETWEEN ((vt0.c2)) AND ((NULL))))+(((rt1.c5)&(t0.c56)))));
SELECT SUM(count) FROM (SELECT ((((((('0.030397584027649915')) BETWEEN ((vt0.c2)) AND ((NULL))))+(((rt1.c5)&(t0.c56))))) IS TRUE)  as count FROM t1, t0 LEFT OUTER JOIN vt0 ON ((rt1.c4 COLLATE BINARY)IS NOT(-1.034933303E9)) INNER JOIN rt1 ON ((((((((t1.c0 COLLATE BINARY)OR(((rt1.c3) ISNULL))))AND((x'' IN (rt1.c4)))))OR(CAST(rt1.c4 AS REAL))))OR(((((((((rt1.c4)OR(0.293612455105137)))AND(t0.c0)))AND(rt1.c5)))AND(rt1.c0)))));
SELECT ALL * FROM t0, t1, rt1, vt0, rt0 WHERE (((x'') BETWEEN (t1.c0) AND (0.36637917699726186)));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (t1.c0) AND (0.36637917699726186))) IS TRUE)  as count FROM t0, t1, rt1, vt0, rt0);
SELECT ALL * FROM t0, t1, rt1, vt0, rt0 WHERE (((x'') BETWEEN (t1.c0) AND (0.36637917699726186)));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (t1.c0) AND (0.36637917699726186))) IS TRUE)  as count FROM t0, t1, rt1, vt0, rt0);
SELECT ALL * FROM t0, t1, rt1, vt0, rt0 WHERE (((x'') BETWEEN (t1.c0) AND (0.36637917699726186)));
SELECT COUNT(*) FROM t1, rt1, vt0 WHERE (0X7ee96b4a) ORDER BY ((((vt0.c1 COLLATE BINARY)AND((+ (rt1.c2)))))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X7ee96b4a) IS TRUE)  as count FROM t1, rt1, vt0 ORDER BY ((((vt0.c1 COLLATE BINARY)AND((+ (rt1.c2)))))OR(NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1, vt0 WHERE (0X7ee96b4a) ORDER BY ((((vt0.c1 COLLATE BINARY)AND((+ (rt1.c2)))))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X7ee96b4a) IS TRUE)  as count FROM t1, rt1, vt0 ORDER BY ((((vt0.c1 COLLATE BINARY)AND((+ (rt1.c2)))))OR(NULL)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1, vt0 WHERE (0X7ee96b4a) ORDER BY ((((vt0.c1 COLLATE BINARY)AND((+ (rt1.c2)))))OR(NULL)) DESC  NULLS FIRST;
SELECT * FROM t1, vt0, rt0, t0, rt1 WHERE ((((rt1.c2) NOT NULL) IN ())) ORDER BY CASE WHEN rt1.c3 THEN rt1.c2 ELSE 0.836881048351654 END COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOT NULL) IN ())) IS TRUE)  as count FROM t1, vt0, rt0, t0, rt1 ORDER BY CASE WHEN rt1.c3 THEN rt1.c2 ELSE 0.836881048351654 END COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM t1, vt0, rt0, t0, rt1 WHERE ((((rt1.c2) NOT NULL) IN ())) ORDER BY CASE WHEN rt1.c3 THEN rt1.c2 ELSE 0.836881048351654 END COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOT NULL) IN ())) IS TRUE)  as count FROM t1, vt0, rt0, t0, rt1 ORDER BY CASE WHEN rt1.c3 THEN rt1.c2 ELSE 0.836881048351654 END COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM t1, vt0, rt0, t0, rt1 WHERE ((((rt1.c2) NOT NULL) IN ())) ORDER BY CASE WHEN rt1.c3 THEN rt1.c2 ELSE 0.836881048351654 END COLLATE RTRIM COLLATE RTRIM;
SELECT * FROM rt1, vt0, t1, rt0 WHERE (((((vt0.c2))>((rt0.c2))) IN ())) ORDER BY (- (rt1.c2)) COLLATE NOCASE ASC, COALESCE(CAST(rt1.c2 AS TEXT), TYPEOF(DISTINCT rt0.c2)) ASC, (((((rt1.c2)<<(rt1.c4)), ((((rt1.c3)AND(rt1.c2)))AND(vt0.c2)), (((rt1.c4))=((rt0.c3)))))==((UPPER(DISTINCT t1.c0), CASE rt0.c1  WHEN vt0.c1 THEN rt1.c5 ELSE rt1.c4 END, ((NULL)==(0X13392f12))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2))>((rt0.c2))) IN ())) IS TRUE)  as count FROM rt1, vt0, t1, rt0 ORDER BY (- (rt1.c2)) COLLATE NOCASE ASC, COALESCE(CAST(rt1.c2 AS TEXT), TYPEOF(DISTINCT rt0.c2)) ASC, (((((rt1.c2)<<(rt1.c4)), ((((rt1.c3)AND(rt1.c2)))AND(vt0.c2)), (((rt1.c4))==((rt0.c3)))))=((UPPER(DISTINCT t1.c0), CASE rt0.c1  WHEN vt0.c1 THEN rt1.c5 ELSE rt1.c4 END, ((NULL)==(0X13392f12))))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0, t1, rt0 WHERE (((((vt0.c2))>((rt0.c2))) IN ())) ORDER BY (- (rt1.c2)) COLLATE NOCASE ASC, COALESCE(CAST(rt1.c2 AS TEXT), TYPEOF(DISTINCT rt0.c2)) ASC, (((((rt1.c2)<<(rt1.c4)), ((((rt1.c3)AND(rt1.c2)))AND(vt0.c2)), (((rt1.c4))=((rt0.c3)))))==((UPPER(DISTINCT t1.c0), CASE rt0.c1  WHEN vt0.c1 THEN rt1.c5 ELSE rt1.c4 END, ((NULL)==(0X13392f12))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2))>((rt0.c2))) IN ())) IS TRUE)  as count FROM rt1, vt0, t1, rt0 ORDER BY (- (rt1.c2)) COLLATE NOCASE ASC, COALESCE(CAST(rt1.c2 AS TEXT), TYPEOF(DISTINCT rt0.c2)) ASC, (((((rt1.c2)<<(rt1.c4)), ((((rt1.c3)AND(rt1.c2)))AND(vt0.c2)), (((rt1.c4))==((rt0.c3)))))=((UPPER(DISTINCT t1.c0), CASE rt0.c1  WHEN vt0.c1 THEN rt1.c5 ELSE rt1.c4 END, ((NULL)==(0X13392f12))))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0, t1, rt0 WHERE (((((vt0.c2))>((rt0.c2))) IN ())) ORDER BY (- (rt1.c2)) COLLATE NOCASE ASC, COALESCE(CAST(rt1.c2 AS TEXT), TYPEOF(DISTINCT rt0.c2)) ASC, (((((rt1.c2)<<(rt1.c4)), ((((rt1.c3)AND(rt1.c2)))AND(vt0.c2)), (((rt1.c4))=((rt0.c3)))))==((UPPER(DISTINCT t1.c0), CASE rt0.c1  WHEN vt0.c1 THEN rt1.c5 ELSE rt1.c4 END, ((NULL)==(0X13392f12))))) DESC  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN t1 ON CASE CAST(vt0.c2 AS TEXT)  WHEN ((rt1.c1) IS FALSE) THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) END CROSS JOIN rt1 ON '' WHERE (rt1.c4) ORDER BY ((+ (rt1.c1)) IN (((((((((rt1.c0)OR(vt0.c0)))OR(rt1.c4)))OR(rt1.c5)))AND(vt0.c0)))) DESC, (((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.6590085670230067))))OR('2053450065')))AND((rt1.c4 IN (t1.c0)))))AND(((rt1.c2) NOT NULL))))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON CASE CAST(vt0.c2 AS TEXT)  WHEN ((rt1.c1) IS FALSE) THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) END CROSS JOIN rt1 ON '' ORDER BY ((+ (rt1.c1)) IN (((((((((rt1.c0)OR(vt0.c0)))OR(rt1.c4)))OR(rt1.c5)))AND(vt0.c0)))) DESC, (((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.6590085670230067))))OR('2053450065')))AND((rt1.c4 IN (t1.c0)))))AND(((rt1.c2) NOT NULL))))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN t1 ON CASE CAST(vt0.c2 AS TEXT)  WHEN ((rt1.c1) IS FALSE) THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) END CROSS JOIN rt1 ON '' WHERE (rt1.c4) ORDER BY ((+ (rt1.c1)) IN (((((((((rt1.c0)OR(vt0.c0)))OR(rt1.c4)))OR(rt1.c5)))AND(vt0.c0)))) DESC, (((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.6590085670230067))))OR('2053450065')))AND((rt1.c4 IN (t1.c0)))))AND(((rt1.c2) NOT NULL))))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON CASE CAST(vt0.c2 AS TEXT)  WHEN ((rt1.c1) IS FALSE) THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) END CROSS JOIN rt1 ON '' ORDER BY ((+ (rt1.c1)) IN (((((((((rt1.c0)OR(vt0.c0)))OR(rt1.c4)))OR(rt1.c5)))AND(vt0.c0)))) DESC, (((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.6590085670230067))))OR('2053450065')))AND((rt1.c4 IN (t1.c0)))))AND(((rt1.c2) NOT NULL))))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN t1 ON CASE CAST(vt0.c2 AS TEXT)  WHEN ((rt1.c1) IS FALSE) THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) END CROSS JOIN rt1 ON '' WHERE (rt1.c4) ORDER BY ((+ (rt1.c1)) IN (((((((((rt1.c0)OR(vt0.c0)))OR(rt1.c4)))OR(rt1.c5)))AND(vt0.c0)))) DESC, (((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((0.6590085670230067))))OR('2053450065')))AND((rt1.c4 IN (t1.c0)))))AND(((rt1.c2) NOT NULL))))OR(CAST(rt1.c2 AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t1, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, t1, rt1);
SELECT ALL * FROM vt0, rt0, t1, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, t1, rt1);
SELECT ALL * FROM vt0, rt0, t1, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((((vt0.c2) NOT NULL))) AND ((vt0.c0))));
SELECT * FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((rt0.c1) IS FALSE) IN ()) WHERE ((((rt1.c2 IN (rt1.c5))) BETWEEN ((~ ('kudu&|瓐w'))) AND (x'' COLLATE BINARY))) ORDER BY CAST(CASE WHEN rt1.c2 THEN vt0.c2 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (rt1.c5))) BETWEEN ((~ ('kudu&|瓐w'))) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((rt0.c1) IS FALSE) IN ()) ORDER BY CAST(CASE WHEN rt1.c2 THEN vt0.c2 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((rt0.c1) IS FALSE) IN ()) WHERE ((((rt1.c2 IN (rt1.c5))) BETWEEN ((~ ('kudu&|瓐w'))) AND (x'' COLLATE BINARY))) ORDER BY CAST(CASE WHEN rt1.c2 THEN vt0.c2 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN (rt1.c5))) BETWEEN ((~ ('kudu&|瓐w'))) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((rt0.c1) IS FALSE) IN ()) ORDER BY CAST(CASE WHEN rt1.c2 THEN vt0.c2 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((rt0.c1) IS FALSE) IN ()) WHERE ((((rt1.c2 IN (rt1.c5))) BETWEEN ((~ ('kudu&|瓐w'))) AND (x'' COLLATE BINARY))) ORDER BY CAST(CASE WHEN rt1.c2 THEN vt0.c2 WHEN rt1.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c2 END AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS FALSE))/(((t0.c0)|(rt0.c0)))) WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS FALSE))/(((t0.c0)|(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS FALSE))/(((t0.c0)|(rt0.c0)))) WHERE ((+ (x'')));
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS FALSE))/(((t0.c0)|(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS FALSE))/(((t0.c0)|(rt0.c0)))) WHERE ((+ (x'')));
SELECT * FROM rt0, rt1, t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT((((rt1.c2))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)IS NOT((((rt1.c2))=((rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT((((rt1.c2))==((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)IS NOT((((rt1.c2))=((rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((t0.c0 COLLATE RTRIM)IS NOT((((rt1.c2))==((rt0.c0))))));
SELECT ALL * FROM rt1, t0, rt0, vt0, t1 WHERE (((LIKELIHOOD(DISTINCT rt0.c3, 0.10221071998980558)) IS FALSE)) ORDER BY (+ ((~ (rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT rt0.c3, 0.10221071998980558)) IS FALSE)) IS TRUE)  as count FROM rt1, t0, rt0, vt0, t1 ORDER BY (+ ((~ (rt1.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0, vt0, t1 WHERE (((LIKELIHOOD(DISTINCT rt0.c3, 0.10221071998980558)) IS FALSE)) ORDER BY (+ ((~ (rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT rt0.c3, 0.10221071998980558)) IS FALSE)) IS TRUE)  as count FROM rt1, t0, rt0, vt0, t1 ORDER BY (+ ((~ (rt1.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0, vt0, t1 WHERE (((LIKELIHOOD(DISTINCT rt0.c3, 0.10221071998980558)) IS FALSE)) ORDER BY (+ ((~ (rt1.c3)))) ASC  NULLS FIRST;
SELECT * FROM t1, rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1 IN ()))OR((t0.c0 IN ()))))AND((('PH센e!''g')|(t1.c0)))) WHERE (t1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1 IN ()))OR((t0.c0 IN ()))))AND((('PH센e!''g')|(t1.c0)))));
SELECT * FROM t1, rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1 IN ()))OR((t0.c0 IN ()))))AND((('PH센e!''g')|(t1.c0)))) WHERE (t1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1 IN ()))OR((t0.c0 IN ()))))AND((('PH센e!''g')|(t1.c0)))));
SELECT * FROM t1, rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1 IN ()))OR((t0.c0 IN ()))))AND((('PH센e!''g')|(t1.c0)))) WHERE (t1.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt1, t1, rt0, vt0 WHERE (t0.c56) ORDER BY rt1.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c56) IS TRUE)  as count FROM t0, rt1, t1, rt0, vt0 ORDER BY rt1.c5  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, t1, rt0, vt0 WHERE (t0.c56) ORDER BY rt1.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c56) IS TRUE)  as count FROM t0, rt1, t1, rt0, vt0 ORDER BY rt1.c5  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, t1, rt0, vt0 WHERE (t0.c56) ORDER BY rt1.c5  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE t1.c0 COLLATE BINARY  WHEN ((t1.c0)LIKE(t1.c0)) THEN 0.8146891548231672 ELSE ((t1.c0)||(t1.c0)) END) ORDER BY ((((((((t1.c0 COLLATE RTRIM)OR((t1.c0 IN ()))))AND(json_array_length(t1.c0))))AND(t1.c0)))AND(x'' COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c0 COLLATE BINARY  WHEN ((t1.c0)LIKE(t1.c0)) THEN 0.8146891548231672 ELSE ((t1.c0)||(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0 COLLATE RTRIM)OR((t1.c0 IN ()))))AND(json_array_length(t1.c0))))AND(t1.c0)))AND(x'' COLLATE BINARY)) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (CASE t1.c0 COLLATE BINARY  WHEN ((t1.c0)LIKE(t1.c0)) THEN 0.8146891548231672 ELSE ((t1.c0)||(t1.c0)) END) ORDER BY ((((((((t1.c0 COLLATE RTRIM)OR((t1.c0 IN ()))))AND(json_array_length(t1.c0))))AND(t1.c0)))AND(x'' COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c0 COLLATE BINARY  WHEN ((t1.c0)LIKE(t1.c0)) THEN 0.8146891548231672 ELSE ((t1.c0)||(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0 COLLATE RTRIM)OR((t1.c0 IN ()))))AND(json_array_length(t1.c0))))AND(t1.c0)))AND(x'' COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, t0 WHERE (((((((t0.c0)IS NOT(t1.c0)))OR(t0.c56 COLLATE BINARY)))AND(CAST(t0.c56 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)IS NOT(t1.c0)))OR(t0.c56 COLLATE BINARY)))AND(CAST(t0.c56 AS NUMERIC)))) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (((((((t0.c0)IS NOT(t1.c0)))OR(t0.c56 COLLATE BINARY)))AND(CAST(t0.c56 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)IS NOT(t1.c0)))OR(t0.c56 COLLATE BINARY)))AND(CAST(t0.c56 AS NUMERIC)))) IS TRUE)  as count FROM t1, t0);
SELECT COUNT(*) FROM t1, t0 WHERE (((((((t0.c0)IS NOT(t1.c0)))OR(t0.c56 COLLATE BINARY)))AND(CAST(t0.c56 AS NUMERIC))));
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1)))%(((rt1.c4)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1)))%(((rt1.c4)IS(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1)))%(((rt1.c4)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1)))%(((rt1.c4)IS(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((- (rt1.c1)))%(((rt1.c4)IS(rt1.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN (rt0.c2 COLLATE NOCASE, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN 'oQUY' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END, (('-320844848') BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN (rt0.c2 COLLATE NOCASE, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN 'oQUY' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END, (('-320844848') BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN (rt0.c2 COLLATE NOCASE, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN 'oQUY' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END, (('-320844848') BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN (rt0.c2 COLLATE NOCASE, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN 'oQUY' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END, (('-320844848') BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN (rt0.c2 COLLATE NOCASE, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN 'oQUY' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END, (('-320844848') BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY rt0.c2;
SELECT ALL * FROM rt1, t1, rt0, vt0 WHERE ((((~ (rt1.c0)))||(((((rt0.c1)AND(rt0.c0)))OR(rt1.c4))))) ORDER BY 0.5642093028288251  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0)))||(((((rt0.c1)AND(rt0.c0)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1, t1, rt0, vt0 ORDER BY 0.5642093028288251  NULLS LAST);
SELECT ALL * FROM rt1, t1, rt0, vt0 WHERE ((((~ (rt1.c0)))||(((((rt0.c1)AND(rt0.c0)))OR(rt1.c4))))) ORDER BY 0.5642093028288251  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0)))||(((((rt0.c1)AND(rt0.c0)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1, t1, rt0, vt0 ORDER BY 0.5642093028288251  NULLS LAST);
SELECT ALL * FROM rt1, t1, rt0, vt0 WHERE ((((~ (rt1.c0)))||(((((rt0.c1)AND(rt0.c0)))OR(rt1.c4))))) ORDER BY 0.5642093028288251  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (NULL COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)IS NOT(vt0.c0))))) ORDER BY ((((vt0.c1 IN ())))!=((CASE WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1 IN ())))<>((CASE WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)IS NOT(vt0.c0))))) ORDER BY ((((vt0.c1 IN ())))!=((CASE WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1 IN ())))<>((CASE WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)IS NOT(vt0.c0))))) ORDER BY ((((vt0.c1 IN ())))!=((CASE WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0, vt0, rt1, t0 WHERE (((((((((((t0.c56)AND(rt1.c3)))OR(rt0.c3)))AND(NULL)))AND(rt0.c1))) BETWEEN (((vt0.c1)IS(vt0.c2))) AND (((t0.c56) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c56)AND(rt1.c3)))OR(rt0.c3)))AND(NULL)))AND(rt0.c1))) BETWEEN (((vt0.c1)IS(vt0.c2))) AND (((t0.c56) ISNULL)))) IS TRUE)  as count FROM t1, rt0, vt0, rt1, t0);
SELECT COUNT(*) FROM t1, rt0, vt0, rt1, t0 WHERE (((((((((((t0.c56)AND(rt1.c3)))OR(rt0.c3)))AND(NULL)))AND(rt0.c1))) BETWEEN (((vt0.c1)IS(vt0.c2))) AND (((t0.c56) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c56)AND(rt1.c3)))OR(rt0.c3)))AND(NULL)))AND(rt0.c1))) BETWEEN (((vt0.c1)IS(vt0.c2))) AND (((t0.c56) ISNULL)))) IS TRUE)  as count FROM t1, rt0, vt0, rt1, t0);
SELECT COUNT(*) FROM t1, rt0, vt0, rt1, t0 WHERE (((((((((((t0.c56)AND(rt1.c3)))OR(rt0.c3)))AND(NULL)))AND(rt0.c1))) BETWEEN (((vt0.c1)IS(vt0.c2))) AND (((t0.c56) ISNULL))));
SELECT * FROM t1, rt0, rt1 WHERE ((((- (rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (((rt0.c3)<(rt0.c2))))) ORDER BY ((((CAST(rt0.c1 AS REAL))AND(((rt0.c2) ISNULL))))AND((rt1.c1 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (((rt0.c3)<(rt0.c2))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((((CAST(rt0.c1 AS REAL))AND(((rt0.c2) ISNULL))))AND((rt1.c1 IN (rt0.c2)))));
SELECT * FROM t1, rt0, rt1 WHERE ((((- (rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (((rt0.c3)<(rt0.c2))))) ORDER BY ((((CAST(rt0.c1 AS REAL))AND(((rt0.c2) ISNULL))))AND((rt1.c1 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (((rt0.c3)<(rt0.c2))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((((CAST(rt0.c1 AS REAL))AND(((rt0.c2) ISNULL))))AND((rt1.c1 IN (rt0.c2)))));
SELECT * FROM t1, rt0, rt1 WHERE ((((- (rt1.c1))) BETWEEN (((rt1.c2) IS FALSE)) AND (((rt0.c3)<(rt0.c2))))) ORDER BY ((((CAST(rt0.c1 AS REAL))AND(((rt0.c2) ISNULL))))AND((rt1.c1 IN (rt0.c2))));
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)), ((((((((rt1.c1)OR(rt1.c4)))AND(rt1.c5)))OR(rt1.c0)))OR(NULL)), CAST(rt1.c0 AS NUMERIC)))!=(((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))), (~ (rt1.c4)), (rt1.c5 IN (rt1.c5)))))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c2))!=((rt1.c1)))) AND ((rt1.c1 IN ()))), (x'890c' IN (LIKELIHOOD(rt1.c2, 0.5471870857344368), NULLIF(rt1.c5, '\o')));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)), ((((((((rt1.c1)OR(rt1.c4)))AND(rt1.c5)))OR(rt1.c0)))OR(NULL)), CAST(rt1.c0 AS NUMERIC)))<>(((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))), (~ (rt1.c4)), (rt1.c5 IN (rt1.c5)))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c2))<>((rt1.c1)))) AND ((rt1.c1 IN ()))), (x'890c' IN (LIKELIHOOD(rt1.c2, 0.5471870857344368), NULLIF(rt1.c5, '\o'))));
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)), ((((((((rt1.c1)OR(rt1.c4)))AND(rt1.c5)))OR(rt1.c0)))OR(NULL)), CAST(rt1.c0 AS NUMERIC)))!=(((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))), (~ (rt1.c4)), (rt1.c5 IN (rt1.c5)))))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c2))!=((rt1.c1)))) AND ((rt1.c1 IN ()))), (x'890c' IN (LIKELIHOOD(rt1.c2, 0.5471870857344368), NULLIF(rt1.c5, '\o')));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)), ((((((((rt1.c1)OR(rt1.c4)))AND(rt1.c5)))OR(rt1.c0)))OR(NULL)), CAST(rt1.c0 AS NUMERIC)))<>(((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))), (~ (rt1.c4)), (rt1.c5 IN (rt1.c5)))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c2))<>((rt1.c1)))) AND ((rt1.c1 IN ()))), (x'890c' IN (LIKELIHOOD(rt1.c2, 0.5471870857344368), NULLIF(rt1.c5, '\o'))));
SELECT ALL * FROM rt1 WHERE ((((((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)), ((((((((rt1.c1)OR(rt1.c4)))AND(rt1.c5)))OR(rt1.c0)))OR(NULL)), CAST(rt1.c0 AS NUMERIC)))!=(((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))), (~ (rt1.c4)), (rt1.c5 IN (rt1.c5)))))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) BETWEEN ((((rt1.c2))!=((rt1.c1)))) AND ((rt1.c1 IN ()))), (x'890c' IN (LIKELIHOOD(rt1.c2, 0.5471870857344368), NULLIF(rt1.c5, '\o')));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c56 IN ())) NOT NULL)) ORDER BY (((((~ (t0.c0)))OR(((NULL) ISNULL))))AND(CASE t0.c56  WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((((~ (t0.c0)))OR(((NULL) ISNULL))))AND(CASE t0.c56  WHEN t0.c0 THEN t0.c0 END)) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c56 IN ())) NOT NULL)) ORDER BY (((((~ (t0.c0)))OR(((NULL) ISNULL))))AND(CASE t0.c56  WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c56 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((((~ (t0.c0)))OR(((NULL) ISNULL))))AND(CASE t0.c56  WHEN t0.c0 THEN t0.c0 END)) ASC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c56 IN ())) NOT NULL)) ORDER BY (((((~ (t0.c0)))OR(((NULL) ISNULL))))AND(CASE t0.c56  WHEN t0.c0 THEN t0.c0 END)) ASC;
SELECT ALL * FROM t1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (vt0.c0);
SELECT * FROM t0 INNER JOIN t1 ON ((((x'c0a6' IN (rt0.c1))))>=(((((2.033008935E9))!=((t1.c0)))))) FULL OUTER JOIN rt0 ON (((t0.c56)) BETWEEN ((CASE vt0.c1  WHEN t0.c56 THEN vt0.c1 END)) AND ((((((t0.c56)OR(vt0.c1)))OR(rt0.c2))))) LEFT OUTER JOIN vt0 ON (((((rt0.c2, vt0.c1, t0.c56))>=((vt0.c0, rt0.c2, t1.c0)))) NOT NULL) WHERE ((((rt0.c3)IS(0.17889639310711392)) IN (CAST(t1.c0 AS BLOB), (('887372183')-(0.47721501564197477))))) ORDER BY ((ABS(rt0.c2))<(((vt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)IS(0.17889639310711392)) IN (CAST(t1.c0 AS BLOB), (('887372183')-(0.47721501564197477))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON ((((x'c0a6' IN (rt0.c1))))>=(((((2.033008935E9))<>((t1.c0)))))) FULL OUTER JOIN rt0 ON (((t0.c56)) BETWEEN ((CASE vt0.c1  WHEN t0.c56 THEN vt0.c1 END)) AND ((((((t0.c56)OR(vt0.c1)))OR(rt0.c2))))) LEFT OUTER JOIN vt0 ON (((((rt0.c2, vt0.c1, t0.c56))>=((vt0.c0, rt0.c2, t1.c0)))) NOT NULL) ORDER BY ((ABS(rt0.c2))<(((vt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN t1 ON ((((x'c0a6' IN (rt0.c1))))>=(((((2.033008935E9))!=((t1.c0)))))) FULL OUTER JOIN rt0 ON (((t0.c56)) BETWEEN ((CASE vt0.c1  WHEN t0.c56 THEN vt0.c1 END)) AND ((((((t0.c56)OR(vt0.c1)))OR(rt0.c2))))) LEFT OUTER JOIN vt0 ON (((((rt0.c2, vt0.c1, t0.c56))>=((vt0.c0, rt0.c2, t1.c0)))) NOT NULL) WHERE ((((rt0.c3)IS(0.17889639310711392)) IN (CAST(t1.c0 AS BLOB), (('887372183')-(0.47721501564197477))))) ORDER BY ((ABS(rt0.c2))<(((vt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)IS(0.17889639310711392)) IN (CAST(t1.c0 AS BLOB), (('887372183')-(0.47721501564197477))))) IS TRUE)  as count FROM t0 INNER JOIN t1 ON ((((x'c0a6' IN (rt0.c1))))>=(((((2.033008935E9))<>((t1.c0)))))) FULL OUTER JOIN rt0 ON (((t0.c56)) BETWEEN ((CASE vt0.c1  WHEN t0.c56 THEN vt0.c1 END)) AND ((((((t0.c56)OR(vt0.c1)))OR(rt0.c2))))) LEFT OUTER JOIN vt0 ON (((((rt0.c2, vt0.c1, t0.c56))>=((vt0.c0, rt0.c2, t1.c0)))) NOT NULL) ORDER BY ((ABS(rt0.c2))<(((vt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (SUBSTR(((((t1.c0)OR(t1.c0)))OR(t1.c0)), ('kr' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((((t1.c0)OR(t1.c0)))OR(t1.c0)), ('kr' IN ()))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (SUBSTR(((((t1.c0)OR(t1.c0)))OR(t1.c0)), ('kr' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((((t1.c0)OR(t1.c0)))OR(t1.c0)), ('kr' IN ()))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (SUBSTR(((((t1.c0)OR(t1.c0)))OR(t1.c0)), ('kr' IN ())));
SELECT ALL COUNT(*) FROM t1, t0, rt0, vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM t1, t0, rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM t1, t0, rt0, vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM t1, t0, rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM t1, t0, rt0, vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER)) IS TRUE));
SELECT COUNT(*) FROM t0, t1 CROSS JOIN rt1 ON t0.c0 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c56 IN ())) AND (rt1.c5)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c56 IN ())) AND (rt1.c5))) IS TRUE)  as count FROM t0, t1 CROSS JOIN rt1 ON t0.c0);
SELECT COUNT(*) FROM t0, t1 CROSS JOIN rt1 ON t0.c0 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c56 IN ())) AND (rt1.c5)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c56 IN ())) AND (rt1.c5))) IS TRUE)  as count FROM t0, t1 CROSS JOIN rt1 ON t0.c0);
SELECT COUNT(*) FROM t0, t1 CROSS JOIN rt1 ON t0.c0 WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c56 IN ())) AND (rt1.c5)));
SELECT ALL COUNT(*) FROM t0, rt1, t1, vt0, rt0 WHERE ((+ ((rt0.c0 IN (rt1.c3, t0.c56)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN (rt1.c3, t0.c56))))) IS TRUE)  as count FROM t0, rt1, t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, t1, vt0, rt0 WHERE ((+ ((rt0.c0 IN (rt1.c3, t0.c56)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN (rt1.c3, t0.c56))))) IS TRUE)  as count FROM t0, rt1, t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, t1, vt0, rt0 WHERE ((+ ((rt0.c0 IN (rt1.c3, t0.c56)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB))<((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB))<((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB))<((rt1.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB))<((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS BLOB))<((rt1.c4 IN ()))));
SELECT COUNT(*) FROM t0 WHERE (((x'')AND(t0.c56)) COLLATE NOCASE) ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c56)))OR(t0.c56)))+(NULL)), CASE ((((t0.c0)OR(t0.c56)))AND(NULL))  WHEN ((((t0.c56)OR(t0.c56)))AND(t0.c56)) THEN LIKELIHOOD(t0.c0, 0.37793742291283894) ELSE t0.c56 END DESC;
SELECT SUM(count) FROM (SELECT ((((x'')AND(t0.c56)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c56)))OR(t0.c56)))+(NULL)), CASE ((((t0.c0)OR(t0.c56)))AND(NULL))  WHEN ((((t0.c56)OR(t0.c56)))AND(t0.c56)) THEN LIKELIHOOD(t0.c0, 0.37793742291283894) ELSE t0.c56 END DESC);
SELECT COUNT(*) FROM t0 WHERE (((x'')AND(t0.c56)) COLLATE NOCASE) ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c56)))OR(t0.c56)))+(NULL)), CASE ((((t0.c0)OR(t0.c56)))AND(NULL))  WHEN ((((t0.c56)OR(t0.c56)))AND(t0.c56)) THEN LIKELIHOOD(t0.c0, 0.37793742291283894) ELSE t0.c56 END DESC;
SELECT SUM(count) FROM (SELECT ((((x'')AND(t0.c56)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c56)))OR(t0.c56)))+(NULL)), CASE ((((t0.c0)OR(t0.c56)))AND(NULL))  WHEN ((((t0.c56)OR(t0.c56)))AND(t0.c56)) THEN LIKELIHOOD(t0.c0, 0.37793742291283894) ELSE t0.c56 END DESC);
SELECT COUNT(*) FROM t0 WHERE (((x'')AND(t0.c56)) COLLATE NOCASE) ORDER BY ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c56)))OR(t0.c56)))+(NULL)), CASE ((((t0.c0)OR(t0.c56)))AND(NULL))  WHEN ((((t0.c56)OR(t0.c56)))AND(t0.c56)) THEN LIKELIHOOD(t0.c0, 0.37793742291283894) ELSE t0.c56 END DESC;
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((((0X7371abd7)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3)))) IS FALSE)) ORDER BY '()'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0x7371abd7)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3)))) IS FALSE)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY '()'  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((((0X7371abd7)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3)))) IS FALSE)) ORDER BY '()'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((0x7371abd7)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3)))) IS FALSE)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY '()'  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((((0X7371abd7)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3)))) IS FALSE)) ORDER BY '()'  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c4 IN ())) NOT NULL)) ORDER BY CASE WHEN (((t0.c0))<=((rt1.c4))) THEN (((0.7506488591575037, rt1.c2, t0.c56))<((t0.c0, 0.42267018320705696, 0.7540614645892753))) WHEN HEX(DISTINCT rt1.c4) THEN ((((rt1.c2)OR(rt1.c4)))AND(rt1.c3)) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((t0.c0) IS TRUE) ELSE (~ (t0.c56)) END;
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, t0 ORDER BY CASE WHEN (((t0.c0))<=((rt1.c4))) THEN (((0.7506488591575037, rt1.c2, t0.c56))<((t0.c0, 0.42267018320705696, 0.7540614645892753))) WHEN HEX(DISTINCT rt1.c4) THEN ((((rt1.c2)OR(rt1.c4)))AND(rt1.c3)) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((t0.c0) IS TRUE) ELSE (~ (t0.c56)) END);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c4 IN ())) NOT NULL)) ORDER BY CASE WHEN (((t0.c0))<=((rt1.c4))) THEN (((0.7506488591575037, rt1.c2, t0.c56))<((t0.c0, 0.42267018320705696, 0.7540614645892753))) WHEN HEX(DISTINCT rt1.c4) THEN ((((rt1.c2)OR(rt1.c4)))AND(rt1.c3)) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((t0.c0) IS TRUE) ELSE (~ (t0.c56)) END;
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, t0 ORDER BY CASE WHEN (((t0.c0))<=((rt1.c4))) THEN (((0.7506488591575037, rt1.c2, t0.c56))<((t0.c0, 0.42267018320705696, 0.7540614645892753))) WHEN HEX(DISTINCT rt1.c4) THEN ((((rt1.c2)OR(rt1.c4)))AND(rt1.c3)) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((t0.c0) IS TRUE) ELSE (~ (t0.c56)) END);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((rt1.c4 IN ())) NOT NULL)) ORDER BY CASE WHEN (((t0.c0))<=((rt1.c4))) THEN (((0.7506488591575037, rt1.c2, t0.c56))<((t0.c0, 0.42267018320705696, 0.7540614645892753))) WHEN HEX(DISTINCT rt1.c4) THEN ((((rt1.c2)OR(rt1.c4)))AND(rt1.c3)) WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((t0.c0) IS TRUE) ELSE (~ (t0.c56)) END;
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (UPPER(((vt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c2) NOTNULL))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (UPPER(((vt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((vt0.c2) NOTNULL))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (UPPER(((vt0.c2) NOTNULL)));
SELECT ALL COUNT(*) FROM t0, rt0, t1, rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((t0.c56)-(vt0.c2)))) AND (((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((t0.c56)-(vt0.c2)))) AND (((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))) IS TRUE)  as count FROM t0, rt0, t1, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, t1, rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((t0.c56)-(vt0.c2)))) AND (((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((t0.c56)-(vt0.c2)))) AND (((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))) IS TRUE)  as count FROM t0, rt0, t1, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, t1, rt1, vt0 WHERE ((((rt1.c2)) NOT BETWEEN ((((t0.c56)-(vt0.c2)))) AND (((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))));
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE ((((NOT (rt0.c3)))<=(CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS NUMERIC) DESC  NULLS LAST, t0.c0 DESC, (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))<=(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS NUMERIC) DESC  NULLS LAST, t0.c0 DESC, (NULL IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE ((((NOT (rt0.c3)))<=(CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS NUMERIC) DESC  NULLS LAST, t0.c0 DESC, (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))<=(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS NUMERIC) DESC  NULLS LAST, t0.c0 DESC, (NULL IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE ((((NOT (rt0.c3)))<=(CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS NUMERIC) DESC  NULLS LAST, t0.c0 DESC, (NULL IN ())  NULLS LAST;
SELECT ALL * FROM rt1, t0 NATURAL JOIN t1 WHERE ((NOT (t1.c0)) COLLATE NOCASE) ORDER BY (((~ (rt1.c4))) BETWEEN (CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END) AND (((t1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN t1 ORDER BY (((~ (rt1.c4))) BETWEEN (CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END) AND (((t1.c0) NOT NULL))));
SELECT ALL * FROM rt1, t0 NATURAL JOIN t1 WHERE ((NOT (t1.c0)) COLLATE NOCASE) ORDER BY (((~ (rt1.c4))) BETWEEN (CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END) AND (((t1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN t1 ORDER BY (((~ (rt1.c4))) BETWEEN (CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END) AND (((t1.c0) NOT NULL))));
SELECT ALL * FROM rt1, t0 NATURAL JOIN t1 WHERE ((NOT (t1.c0)) COLLATE NOCASE) ORDER BY (((~ (rt1.c4))) BETWEEN (CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END) AND (((t1.c0) NOT NULL)));
SELECT ALL * FROM vt0 WHERE (0.22294296031356586);
SELECT SUM(count) FROM (SELECT ALL ((0.22294296031356586) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.22294296031356586);
SELECT SUM(count) FROM (SELECT ALL ((0.22294296031356586) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.22294296031356586);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c2)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c2)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c2)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, t1, vt0, rt0, rt1 WHERE (((((t0.c56)%(rt1.c1)))|((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c56)%(rt1.c1)))|((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM t0, t1, vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, t1, vt0, rt0, rt1 WHERE (((((t0.c56)%(rt1.c1)))|((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c56)%(rt1.c1)))|((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))))) IS TRUE)  as count FROM t0, t1, vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, t1, vt0, rt0, rt1 WHERE (((((t0.c56)%(rt1.c1)))|((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))));
SELECT COUNT(*) FROM t1, t0, vt0, rt0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1, t0, vt0, rt0, rt1);
SELECT COUNT(*) FROM t1, t0, vt0, rt0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t1, t0, vt0, rt0, rt1);
SELECT COUNT(*) FROM t1, t0, vt0, rt0, rt1 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE ((((t0.c0 IN ()))+(((((((((((((t1.c0)AND(rt0.c2)))AND(t1.c0)))AND(rt0.c0)))AND(NULL)))AND(rt0.c3)))AND(t0.c56)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))+(((((((((((((t1.c0)AND(rt0.c2)))AND(t1.c0)))AND(rt0.c0)))AND(NULL)))AND(rt0.c3)))AND(t0.c56))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE ((((t0.c0 IN ()))+(((((((((((((t1.c0)AND(rt0.c2)))AND(t1.c0)))AND(rt0.c0)))AND(NULL)))AND(rt0.c3)))AND(t0.c56)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))+(((((((((((((t1.c0)AND(rt0.c2)))AND(t1.c0)))AND(rt0.c0)))AND(NULL)))AND(rt0.c3)))AND(t0.c56))))) IS TRUE)  as count FROM t0, rt0, t1);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE ((((t0.c0 IN ()))+(((((((((((((t1.c0)AND(rt0.c2)))AND(t1.c0)))AND(rt0.c0)))AND(NULL)))AND(rt0.c3)))AND(t0.c56)))));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (json_type((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c2))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (json_type((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((json_type((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c2))))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (json_type((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c2)))));
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<(t1.c0))  WHEN ((t1.c0)<>(t1.c0)) THEN '' WHEN CAST(t1.c0 AS REAL) THEN (~ (t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN CAST(x'' AS BLOB) ELSE ((t1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)<(t1.c0))  WHEN ((t1.c0)!=(t1.c0)) THEN '' WHEN CAST(t1.c0 AS REAL) THEN (~ (t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN CAST(x'' AS BLOB) ELSE ((t1.c0) ISNULL) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<(t1.c0))  WHEN ((t1.c0)<>(t1.c0)) THEN '' WHEN CAST(t1.c0 AS REAL) THEN (~ (t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN CAST(x'' AS BLOB) ELSE ((t1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0)<(t1.c0))  WHEN ((t1.c0)!=(t1.c0)) THEN '' WHEN CAST(t1.c0 AS REAL) THEN (~ (t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN CAST(x'' AS BLOB) ELSE ((t1.c0) ISNULL) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE ((t1.c0)<(t1.c0))  WHEN ((t1.c0)<>(t1.c0)) THEN '' WHEN CAST(t1.c0 AS REAL) THEN (~ (t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN CAST(x'' AS BLOB) ELSE ((t1.c0) ISNULL) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((TRIM(DISTINCT '1857914856')) BETWEEN ((((t0.c0)) BETWEEN ((vt0.c2)) AND ((x'')))) AND (((((vt0.c1)AND(vt0.c0)))OR(t0.c0)))) WHERE ((((CAST(vt0.c1 AS TEXT)))>=((vt0.c0 COLLATE BINARY)))) ORDER BY CASE WHEN (- (t0.c56)) THEN vt0.c1 ELSE ((vt0.c1)<(t0.c0)) END  NULLS FIRST, ((UNLIKELY('741754363')) NOT BETWEEN (vt0.c0) AND ((~ (t0.c0)))) DESC, (((((vt0.c1))<((vt0.c2)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS TEXT)))>=((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((TRIM(DISTINCT '1857914856')) BETWEEN ((((t0.c0)) BETWEEN ((vt0.c2)) AND ((x'')))) AND (((((vt0.c1)AND(vt0.c0)))OR(t0.c0)))) ORDER BY CASE WHEN (- (t0.c56)) THEN vt0.c1 ELSE ((vt0.c1)<(t0.c0)) END  NULLS FIRST, ((UNLIKELY('741754363')) NOT BETWEEN (vt0.c0) AND ((~ (t0.c0)))) DESC, (((((vt0.c1))<((vt0.c2)))) IS FALSE));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((TRIM(DISTINCT '1857914856')) BETWEEN ((((t0.c0)) BETWEEN ((vt0.c2)) AND ((x'')))) AND (((((vt0.c1)AND(vt0.c0)))OR(t0.c0)))) WHERE ((((CAST(vt0.c1 AS TEXT)))>=((vt0.c0 COLLATE BINARY)))) ORDER BY CASE WHEN (- (t0.c56)) THEN vt0.c1 ELSE ((vt0.c1)<(t0.c0)) END  NULLS FIRST, ((UNLIKELY('741754363')) NOT BETWEEN (vt0.c0) AND ((~ (t0.c0)))) DESC, (((((vt0.c1))<((vt0.c2)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS TEXT)))>=((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((TRIM(DISTINCT '1857914856')) BETWEEN ((((t0.c0)) BETWEEN ((vt0.c2)) AND ((x'')))) AND (((((vt0.c1)AND(vt0.c0)))OR(t0.c0)))) ORDER BY CASE WHEN (- (t0.c56)) THEN vt0.c1 ELSE ((vt0.c1)<(t0.c0)) END  NULLS FIRST, ((UNLIKELY('741754363')) NOT BETWEEN (vt0.c0) AND ((~ (t0.c0)))) DESC, (((((vt0.c1))<((vt0.c2)))) IS FALSE));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((TRIM(DISTINCT '1857914856')) BETWEEN ((((t0.c0)) BETWEEN ((vt0.c2)) AND ((x'')))) AND (((((vt0.c1)AND(vt0.c0)))OR(t0.c0)))) WHERE ((((CAST(vt0.c1 AS TEXT)))>=((vt0.c0 COLLATE BINARY)))) ORDER BY CASE WHEN (- (t0.c56)) THEN vt0.c1 ELSE ((vt0.c1)<(t0.c0)) END  NULLS FIRST, ((UNLIKELY('741754363')) NOT BETWEEN (vt0.c0) AND ((~ (t0.c0)))) DESC, (((((vt0.c1))<((vt0.c2)))) IS FALSE);
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON (((rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((((rt1.c3)<(vt0.c0))))) FULL OUTER JOIN vt0 ON vt0.c2 RIGHT OUTER JOIN t0 ON ((((((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c3)))OR((t0.c56 IN ()))))AND(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE NULL END)))OR(rt1.c5)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c2)>=(t0.c56)))) CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((rt1.c4)) AND (('-1951089849'))) WHERE (CAST(((rt0.c0) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON (((rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((((rt1.c3)<(vt0.c0))))) FULL OUTER JOIN vt0 ON vt0.c2 RIGHT OUTER JOIN t0 ON ((((((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c3)))OR((t0.c56 IN ()))))AND(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE NULL END)))OR(rt1.c5)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c2)>=(t0.c56)))) CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((rt1.c4)) AND (('-1951089849'))));
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON (((rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((((rt1.c3)<(vt0.c0))))) FULL OUTER JOIN vt0 ON vt0.c2 RIGHT OUTER JOIN t0 ON ((((((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c3)))OR((t0.c56 IN ()))))AND(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE NULL END)))OR(rt1.c5)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c2)>=(t0.c56)))) CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((rt1.c4)) AND (('-1951089849'))) WHERE (CAST(((rt0.c0) IS TRUE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON (((rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((((rt1.c3)<(vt0.c0))))) FULL OUTER JOIN vt0 ON vt0.c2 RIGHT OUTER JOIN t0 ON ((((((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c3)))OR((t0.c56 IN ()))))AND(NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE NULL END)))OR(rt1.c5)))OR(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c2)>=(t0.c56)))) CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((rt1.c4)) AND (('-1951089849'))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON 'kudu&|瓐w' LEFT OUTER JOIN t1 ON (((NOT (vt0.c0)))/(((t0.c56) NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 'kudu&|瓐w' LEFT OUTER JOIN t1 ON (((NOT (vt0.c0)))/(((t0.c56) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON 'kudu&|瓐w' LEFT OUTER JOIN t1 ON (((NOT (vt0.c0)))/(((t0.c56) NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 'kudu&|瓐w' LEFT OUTER JOIN t1 ON (((NOT (vt0.c0)))/(((t0.c56) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON 'kudu&|瓐w' LEFT OUTER JOIN t1 ON (((NOT (vt0.c0)))/(((t0.c56) NOT BETWEEN (t1.c0) AND (t1.c0)))) WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON CASE (- (rt1.c5))  WHEN NULL THEN TRIM(vt0.c1, rt1.c5) WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (rt1.c5)) THEN CAST(rt1.c5 AS INTEGER) WHEN vt0.c2 THEN rt1.c4 ELSE ((t0.c56)*(rt1.c4)) END FULL OUTER JOIN vt0 ON (~ (((rt1.c4) IS TRUE))) WHERE (CASE t0.c0  WHEN (- (rt1.c2)) THEN x'' ELSE ((rt1.c0)&(vt0.c2)) END) ORDER BY (((rt1.c5 COLLATE BINARY))>((CASE WHEN rt1.c4 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN (- (rt1.c2)) THEN x'' ELSE ((rt1.c0)&(vt0.c2)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON CASE (- (rt1.c5))  WHEN NULL THEN TRIM(vt0.c1, rt1.c5) WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (rt1.c5)) THEN CAST(rt1.c5 AS INTEGER) WHEN vt0.c2 THEN rt1.c4 ELSE ((t0.c56)*(rt1.c4)) END FULL OUTER JOIN vt0 ON (~ (((rt1.c4) IS TRUE))) ORDER BY (((rt1.c5 COLLATE BINARY))>((CASE WHEN rt1.c4 THEN vt0.c1 END))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON CASE (- (rt1.c5))  WHEN NULL THEN TRIM(vt0.c1, rt1.c5) WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (rt1.c5)) THEN CAST(rt1.c5 AS INTEGER) WHEN vt0.c2 THEN rt1.c4 ELSE ((t0.c56)*(rt1.c4)) END FULL OUTER JOIN vt0 ON (~ (((rt1.c4) IS TRUE))) WHERE (CASE t0.c0  WHEN (- (rt1.c2)) THEN x'' ELSE ((rt1.c0)&(vt0.c2)) END) ORDER BY (((rt1.c5 COLLATE BINARY))>((CASE WHEN rt1.c4 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN (- (rt1.c2)) THEN x'' ELSE ((rt1.c0)&(vt0.c2)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON CASE (- (rt1.c5))  WHEN NULL THEN TRIM(vt0.c1, rt1.c5) WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (rt1.c5)) THEN CAST(rt1.c5 AS INTEGER) WHEN vt0.c2 THEN rt1.c4 ELSE ((t0.c56)*(rt1.c4)) END FULL OUTER JOIN vt0 ON (~ (((rt1.c4) IS TRUE))) ORDER BY (((rt1.c5 COLLATE BINARY))>((CASE WHEN rt1.c4 THEN vt0.c1 END))));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN vt0 ON x'' INNER JOIN t1 ON CASE WHEN NULLIF(rt1.c3, t0.c0) THEN ((rt1.c4)-(rt1.c3)) END WHERE ((((rt1.c1)LIKE(rt1.c5)) IN ())) ORDER BY (((((((((((0.18270863995880238)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((rt1.c0) NOT NULL))))AND(CASE vt0.c2  WHEN rt1.c2 THEN rt1.c4 ELSE vt0.c0 END)))OR(((rt1.c2)&(vt0.c0)))))OR((((t0.c56, rt1.c5, rt1.c2, NULL, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, vt0.c0, rt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t0.c56, vt0.c0, rt1.c1)))))  NULLS LAST, ((~ (t1.c0)) IN (rt1.c2, (((vt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))), ((((((((0.6227883564787866)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))AND(vt0.c2)))) DESC, CASE WHEN '-183300048' THEN (NOT ('1545005377')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)LIKE(rt1.c5)) IN ())) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN vt0 ON x'' INNER JOIN t1 ON CASE WHEN NULLIF(rt1.c3, t0.c0) THEN ((rt1.c4)-(rt1.c3)) END ORDER BY (((((((((((0.18270863995880238)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((rt1.c0) NOT NULL))))AND(CASE vt0.c2  WHEN rt1.c2 THEN rt1.c4 ELSE vt0.c0 END)))OR(((rt1.c2)&(vt0.c0)))))OR((((t0.c56, rt1.c5, rt1.c2, NULL, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, vt0.c0, rt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t0.c56, vt0.c0, rt1.c1)))))  NULLS LAST, ((~ (t1.c0)) IN (rt1.c2, (((vt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))), ((((((((0.6227883564787866)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))AND(vt0.c2)))) DESC, CASE WHEN '-183300048' THEN (NOT ('1545005377')) END  NULLS FIRST);
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN vt0 ON x'' INNER JOIN t1 ON CASE WHEN NULLIF(rt1.c3, t0.c0) THEN ((rt1.c4)-(rt1.c3)) END WHERE ((((rt1.c1)LIKE(rt1.c5)) IN ())) ORDER BY (((((((((((0.18270863995880238)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((rt1.c0) NOT NULL))))AND(CASE vt0.c2  WHEN rt1.c2 THEN rt1.c4 ELSE vt0.c0 END)))OR(((rt1.c2)&(vt0.c0)))))OR((((t0.c56, rt1.c5, rt1.c2, NULL, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, vt0.c0, rt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t0.c56, vt0.c0, rt1.c1)))))  NULLS LAST, ((~ (t1.c0)) IN (rt1.c2, (((vt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))), ((((((((0.6227883564787866)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))AND(vt0.c2)))) DESC, CASE WHEN '-183300048' THEN (NOT ('1545005377')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)LIKE(rt1.c5)) IN ())) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN vt0 ON x'' INNER JOIN t1 ON CASE WHEN NULLIF(rt1.c3, t0.c0) THEN ((rt1.c4)-(rt1.c3)) END ORDER BY (((((((((((0.18270863995880238)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((rt1.c0) NOT NULL))))AND(CASE vt0.c2  WHEN rt1.c2 THEN rt1.c4 ELSE vt0.c0 END)))OR(((rt1.c2)&(vt0.c0)))))OR((((t0.c56, rt1.c5, rt1.c2, NULL, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, vt0.c0, rt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t0.c56, vt0.c0, rt1.c1)))))  NULLS LAST, ((~ (t1.c0)) IN (rt1.c2, (((vt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))), ((((((((0.6227883564787866)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))AND(vt0.c2)))) DESC, CASE WHEN '-183300048' THEN (NOT ('1545005377')) END  NULLS FIRST);
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN vt0 ON x'' INNER JOIN t1 ON CASE WHEN NULLIF(rt1.c3, t0.c0) THEN ((rt1.c4)-(rt1.c3)) END WHERE ((((rt1.c1)LIKE(rt1.c5)) IN ())) ORDER BY (((((((((((0.18270863995880238)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((rt1.c0) NOT NULL))))AND(CASE vt0.c2  WHEN rt1.c2 THEN rt1.c4 ELSE vt0.c0 END)))OR(((rt1.c2)&(vt0.c0)))))OR((((t0.c56, rt1.c5, rt1.c2, NULL, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, vt0.c0, rt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t0.c56, vt0.c0, rt1.c1)))))  NULLS LAST, ((~ (t1.c0)) IN (rt1.c2, (((vt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))), ((((((((0.6227883564787866)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))AND(vt0.c2)))) DESC, CASE WHEN '-183300048' THEN (NOT ('1545005377')) END  NULLS FIRST;
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<((rt0.c1)))) BETWEEN ((vt0.c1 IN ())) AND (((t1.c0) BETWEEN (vt0.c2) AND (t1.c0)))) FULL OUTER JOIN vt0 ON CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) WHERE (NULL) ORDER BY (((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))))AND((NOT (rt0.c1)))))AND(((x'8efb')OR(t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<((rt0.c1)))) BETWEEN ((vt0.c1 IN ())) AND (((t1.c0) BETWEEN (vt0.c2) AND (t1.c0)))) FULL OUTER JOIN vt0 ON CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ORDER BY (((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))))AND((NOT (rt0.c1)))))AND(((x'8efb')OR(t1.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<((rt0.c1)))) BETWEEN ((vt0.c1 IN ())) AND (((t1.c0) BETWEEN (vt0.c2) AND (t1.c0)))) FULL OUTER JOIN vt0 ON CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) WHERE (NULL) ORDER BY (((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))))AND((NOT (rt0.c1)))))AND(((x'8efb')OR(t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((((rt0.c2))<((rt0.c1)))) BETWEEN ((vt0.c1 IN ())) AND (((t1.c0) BETWEEN (vt0.c2) AND (t1.c0)))) FULL OUTER JOIN vt0 ON CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) ORDER BY (((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))))AND((NOT (rt0.c1)))))AND(((x'8efb')OR(t1.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) WHERE ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (CAST(t0.c56 AS TEXT)))) ORDER BY (- (CAST(rt0.c3 AS BLOB))), ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((- (NULL))) AND (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 ELSE '' END)) ASC  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)) THEN CAST(rt0.c3 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (CAST(t0.c56 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) ORDER BY (- (CAST(rt0.c3 AS BLOB))), ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((- (NULL))) AND (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 ELSE '' END)) ASC  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)) THEN CAST(rt0.c3 AS BLOB) END  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) WHERE ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (CAST(t0.c56 AS TEXT)))) ORDER BY (- (CAST(rt0.c3 AS BLOB))), ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((- (NULL))) AND (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 ELSE '' END)) ASC  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)) THEN CAST(rt0.c3 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (CAST(t0.c56 AS TEXT)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) ORDER BY (- (CAST(rt0.c3 AS BLOB))), ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((- (NULL))) AND (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 ELSE '' END)) ASC  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)) THEN CAST(rt0.c3 AS BLOB) END  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CAST(CAST(rt0.c0 AS REAL) AS REAL) WHERE ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)) IN (CAST(t0.c56 AS TEXT)))) ORDER BY (- (CAST(rt0.c3 AS BLOB))), ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) BETWEEN ((- (NULL))) AND (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 ELSE '' END)) ASC  NULLS LAST, CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)) THEN CAST(rt0.c3 AS BLOB) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt0, rt1 WHERE ((((- (vt0.c0)))IS('0.6109092476860626')));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS('0.6109092476860626'))) IS TRUE)  as count FROM t1, t0, vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt0, rt1 WHERE ((((- (vt0.c0)))IS('0.6109092476860626')));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS('0.6109092476860626'))) IS TRUE)  as count FROM t1, t0, vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt0, rt1 WHERE ((((- (vt0.c0)))IS('0.6109092476860626')));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) IS TRUE) WHERE (t0.c56);
SELECT SUM(count) FROM (SELECT ALL ((t0.c56) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) IS TRUE) WHERE (t0.c56);
SELECT SUM(count) FROM (SELECT ALL ((t0.c56) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((CAST(rt0.c1 AS NUMERIC)) IS TRUE) WHERE (t0.c56);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2) ISNULL)))>((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) ISNULL)))>((rt0.c2)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2) ISNULL)))>((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) ISNULL)))>((rt0.c2)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((rt0.c2) ISNULL)))>((rt0.c2))));
SELECT ALL COUNT(*) FROM t0, t1 INNER JOIN vt0 ON ((((rt0.c2) ISNULL))IS NOT(((t1.c0)>=(t0.c56)))) CROSS JOIN rt0 ON CAST((((t0.c56))!=((rt0.c1))) AS INTEGER) WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM t0, t1 INNER JOIN vt0 ON ((((rt0.c2) ISNULL))IS NOT(((t1.c0)>=(t0.c56)))) CROSS JOIN rt0 ON CAST((((t0.c56))!=((rt0.c1))) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, t1 INNER JOIN vt0 ON ((((rt0.c2) ISNULL))IS NOT(((t1.c0)>=(t0.c56)))) CROSS JOIN rt0 ON CAST((((t0.c56))!=((rt0.c1))) AS INTEGER) WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM t0, t1 INNER JOIN vt0 ON ((((rt0.c2) ISNULL))IS NOT(((t1.c0)>=(t0.c56)))) CROSS JOIN rt0 ON CAST((((t0.c56))!=((rt0.c1))) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, t1 INNER JOIN vt0 ON ((((rt0.c2) ISNULL))IS NOT(((t1.c0)>=(t0.c56)))) CROSS JOIN rt0 ON CAST((((t0.c56))!=((rt0.c1))) AS INTEGER) WHERE (((x'') IS FALSE));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt1 ON CASE (((t1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))  WHEN CASE rt1.c5  WHEN rt1.c5 THEN rt1.c4 END THEN ((t1.c0) NOTNULL) WHEN ((rt1.c1)GLOB(rt1.c4)) THEN ((rt1.c3) NOTNULL) WHEN ((rt1.c4)|(rt1.c3)) THEN ((rt1.c1)>>(t1.c0)) END WHERE (CAST(CAST(rt1.c3 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt1 ON CASE (((t1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))  WHEN CASE rt1.c5  WHEN rt1.c5 THEN rt1.c4 END THEN ((t1.c0) NOTNULL) WHEN ((rt1.c1)GLOB(rt1.c4)) THEN ((rt1.c3) NOTNULL) WHEN ((rt1.c4)|(rt1.c3)) THEN ((rt1.c1)>>(t1.c0)) END);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt1 ON CASE (((t1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))  WHEN CASE rt1.c5  WHEN rt1.c5 THEN rt1.c4 END THEN ((t1.c0) NOTNULL) WHEN ((rt1.c1)GLOB(rt1.c4)) THEN ((rt1.c3) NOTNULL) WHEN ((rt1.c4)|(rt1.c3)) THEN ((rt1.c1)>>(t1.c0)) END WHERE (CAST(CAST(rt1.c3 AS BLOB) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c3 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt1 ON CASE (((t1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))  WHEN CASE rt1.c5  WHEN rt1.c5 THEN rt1.c4 END THEN ((t1.c0) NOTNULL) WHEN ((rt1.c1)GLOB(rt1.c4)) THEN ((rt1.c3) NOTNULL) WHEN ((rt1.c4)|(rt1.c3)) THEN ((rt1.c1)>>(t1.c0)) END);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt1 ON CASE (((t1.c0)) NOT BETWEEN ((NULL)) AND ((rt1.c1)))  WHEN CASE rt1.c5  WHEN rt1.c5 THEN rt1.c4 END THEN ((t1.c0) NOTNULL) WHEN ((rt1.c1)GLOB(rt1.c4)) THEN ((rt1.c3) NOTNULL) WHEN ((rt1.c4)|(rt1.c3)) THEN ((rt1.c1)>>(t1.c0)) END WHERE (CAST(CAST(rt1.c3 AS BLOB) AS INTEGER));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON rt0.c2 FULL OUTER JOIN rt0 ON (((rt0.c3)&(rt0.c1)) IN ((rt0.c1 IN ()))) WHERE (rt0.c0) ORDER BY ((vt0.c0 COLLATE BINARY)<(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON rt0.c2 FULL OUTER JOIN rt0 ON (((rt0.c3)&(rt0.c1)) IN ((rt0.c1 IN ()))) ORDER BY ((vt0.c0 COLLATE BINARY)<(CAST(rt0.c1 AS INTEGER))));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON rt0.c2 FULL OUTER JOIN rt0 ON (((rt0.c3)&(rt0.c1)) IN ((rt0.c1 IN ()))) WHERE (rt0.c0) ORDER BY ((vt0.c0 COLLATE BINARY)<(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON rt0.c2 FULL OUTER JOIN rt0 ON (((rt0.c3)&(rt0.c1)) IN ((rt0.c1 IN ()))) ORDER BY ((vt0.c0 COLLATE BINARY)<(CAST(rt0.c1 AS INTEGER))));
SELECT * FROM rt1, t1 WHERE (CASE WHEN ((((((((t1.c0)AND(NULL)))AND(rt1.c5)))OR(rt1.c0)))AND('1233470381')) THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c2)) END) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2) NOT BETWEEN (t1.c0) AND (0.4974555140871968)))) AND (((t1.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t1.c0)AND(NULL)))AND(rt1.c5)))OR(rt1.c0)))AND('1233470381')) THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, t1 ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2) NOT BETWEEN (t1.c0) AND (0.4974555140871968)))) AND (((t1.c0 IN ())))) DESC  NULLS FIRST);
SELECT * FROM rt1, t1 WHERE (CASE WHEN ((((((((t1.c0)AND(NULL)))AND(rt1.c5)))OR(rt1.c0)))AND('1233470381')) THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c2)) END) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2) NOT BETWEEN (t1.c0) AND (0.4974555140871968)))) AND (((t1.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t1.c0)AND(NULL)))AND(rt1.c5)))OR(rt1.c0)))AND('1233470381')) THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, t1 ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2) NOT BETWEEN (t1.c0) AND (0.4974555140871968)))) AND (((t1.c0 IN ())))) DESC  NULLS FIRST);
SELECT * FROM rt1, t1 WHERE (CASE WHEN ((((((((t1.c0)AND(NULL)))AND(rt1.c5)))OR(rt1.c0)))AND('1233470381')) THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt1.c2)) END) ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2) NOT BETWEEN (t1.c0) AND (0.4974555140871968)))) AND (((t1.c0 IN ())))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON t0.c56 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(t0.c0 AS BLOB) END) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((t0.c56))))LIKE((0.8528439804901417 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON t0.c56 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((t0.c56))))LIKE((0.8528439804901417 IN ()))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON t0.c56 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(t0.c0 AS BLOB) END) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((t0.c56))))LIKE((0.8528439804901417 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON t0.c56 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((t0.c56))))LIKE((0.8528439804901417 IN ()))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON t0.c56 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN CAST(t0.c0 AS BLOB) END) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((t0.c56))))LIKE((0.8528439804901417 IN ())));
SELECT ALL * FROM vt0, rt0 WHERE ((((('-2059299879')OR(((vt0.c1) ISNULL))))AND('1102833892'))) ORDER BY (~ (((vt0.c2) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2059299879')OR(((vt0.c1) ISNULL))))AND('1102833892'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (((vt0.c2) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((('-2059299879')OR(((vt0.c1) ISNULL))))AND('1102833892'))) ORDER BY (~ (((vt0.c2) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('-2059299879')OR(((vt0.c1) ISNULL))))AND('1102833892'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (((vt0.c2) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((('-2059299879')OR(((vt0.c1) ISNULL))))AND('1102833892'))) ORDER BY (~ (((vt0.c2) NOT NULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 CROSS JOIN rt0 ON '-1315943222' COLLATE BINARY WHERE ((rt1.c1 IN ()) COLLATE BINARY) ORDER BY ((0.756857675852916)==(x''))  NULLS LAST, CAST(((((((((rt1.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c4)))AND(t0.c56)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 CROSS JOIN rt0 ON '-1315943222' COLLATE BINARY ORDER BY ((0.756857675852916)=(x''))  NULLS LAST, CAST(((((((((rt1.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c4)))AND(t0.c56)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 CROSS JOIN rt0 ON '-1315943222' COLLATE BINARY WHERE ((rt1.c1 IN ()) COLLATE BINARY) ORDER BY ((0.756857675852916)==(x''))  NULLS LAST, CAST(((((((((rt1.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c4)))AND(t0.c56)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 CROSS JOIN rt0 ON '-1315943222' COLLATE BINARY ORDER BY ((0.756857675852916)=(x''))  NULLS LAST, CAST(((((((((rt1.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c4)))AND(t0.c56)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 CROSS JOIN rt0 ON '-1315943222' COLLATE BINARY WHERE ((rt1.c1 IN ()) COLLATE BINARY) ORDER BY ((0.756857675852916)==(x''))  NULLS LAST, CAST(((((((((rt1.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c4)))AND(t0.c56)) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t1 ON ((vt0.c1) NOT NULL) WHERE (1.098688478E9) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1.098688478E9) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t1 ON ((vt0.c1) NOT NULL) ORDER BY rt1.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t1 ON ((vt0.c1) NOT NULL) WHERE (1.098688478E9) ORDER BY rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((1.098688478E9) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t1 ON ((vt0.c1) NOT NULL) ORDER BY rt1.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN t1 ON ((vt0.c1) NOT NULL) WHERE (1.098688478E9) ORDER BY rt1.c2  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t1 CROSS JOIN t0 ON rtreenode(((t0.c56) NOT NULL), vt0.c2) WHERE (((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c0)))))OR(((0xffffffffa311effb)||(t0.c0)))))OR(vt0.c0)))AND((t0.c56 IN ())))) ORDER BY HEX(((vt0.c2) NOT BETWEEN (t0.c56) AND (0.7470465461972094))) DESC, CAST(x'' AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c0)))))OR(((0Xffffffffa311effb)||(t0.c0)))))OR(vt0.c0)))AND((t0.c56 IN ())))) IS TRUE)  as count FROM rt0, vt0, t1 CROSS JOIN t0 ON rtreenode(((t0.c56) NOT NULL), vt0.c2) ORDER BY HEX(((vt0.c2) NOT BETWEEN (t0.c56) AND (0.7470465461972094))) DESC, CAST(x'' AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0, t1 CROSS JOIN t0 ON rtreenode(((t0.c56) NOT NULL), vt0.c2) WHERE (((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c0)))))OR(((0xffffffffa311effb)||(t0.c0)))))OR(vt0.c0)))AND((t0.c56 IN ())))) ORDER BY HEX(((vt0.c2) NOT BETWEEN (t0.c56) AND (0.7470465461972094))) DESC, CAST(x'' AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c0)))))OR(((0Xffffffffa311effb)||(t0.c0)))))OR(vt0.c0)))AND((t0.c56 IN ())))) IS TRUE)  as count FROM rt0, vt0, t1 CROSS JOIN t0 ON rtreenode(((t0.c56) NOT NULL), vt0.c2) ORDER BY HEX(((vt0.c2) NOT BETWEEN (t0.c56) AND (0.7470465461972094))) DESC, CAST(x'' AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0, t1 CROSS JOIN t0 ON rtreenode(((t0.c56) NOT NULL), vt0.c2) WHERE (((((((((rt0.c1 COLLATE RTRIM)AND((NOT (rt0.c0)))))OR(((0xffffffffa311effb)||(t0.c0)))))OR(vt0.c0)))AND((t0.c56 IN ())))) ORDER BY HEX(((vt0.c2) NOT BETWEEN (t0.c56) AND (0.7470465461972094))) DESC, CAST(x'' AS NUMERIC);
SELECT * FROM rt0, rt1, vt0, t0, t1 WHERE (((((CAST(rt0.c0 AS REAL))OR(((0Xffffffff940d6da7)%(t1.c0)))))OR(0X5921a0b2)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS REAL))OR(((0Xffffffff940d6da7)%(t1.c0)))))OR(0x5921a0b2))) IS TRUE)  as count FROM rt0, rt1, vt0, t0, t1);
SELECT * FROM rt0, rt1, vt0, t0, t1 WHERE (((((CAST(rt0.c0 AS REAL))OR(((0Xffffffff940d6da7)%(t1.c0)))))OR(0X5921a0b2)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS REAL))OR(((0Xffffffff940d6da7)%(t1.c0)))))OR(0x5921a0b2))) IS TRUE)  as count FROM rt0, rt1, vt0, t0, t1);
SELECT * FROM rt0, rt1, vt0, t0, t1 WHERE (((((CAST(rt0.c0 AS REAL))OR(((0Xffffffff940d6da7)%(t1.c0)))))OR(0X5921a0b2)));
SELECT COUNT(*) FROM rt0, t1, rt1, t0, vt0 WHERE ((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c3)) IN (CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c3)) IN (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t1, rt1, t0, vt0);
SELECT COUNT(*) FROM rt0, t1, rt1, t0, vt0 WHERE ((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c3)) IN (CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c3)) IN (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t1, rt1, t0, vt0);
SELECT COUNT(*) FROM rt0, t1, rt1, t0, vt0 WHERE ((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c3)) IN (CAST(t0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON rt1.c1 RIGHT OUTER JOIN rt1 ON ((((((((((vt0.c0) NOT NULL))AND((rt0.c2 IN ()))))OR(LIKELIHOOD(rt1.c2, 0.1713599658935916))))OR(((rt0.c3)<('')))))OR(((((rt1.c2)AND(rt1.c1)))AND(rt0.c0)))) WHERE ((((vt0.c2 IN ()))|((NOT (rt0.c3))))) ORDER BY ((rt1.c5)*(rt1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))|((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON rt1.c1 RIGHT OUTER JOIN rt1 ON ((((((((((vt0.c0) NOT NULL))AND((rt0.c2 IN ()))))OR(LIKELIHOOD(rt1.c2, 0.1713599658935916))))OR(((rt0.c3)<('')))))OR(((((rt1.c2)AND(rt1.c1)))AND(rt0.c0)))) ORDER BY ((rt1.c5)*(rt1.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON rt1.c1 RIGHT OUTER JOIN rt1 ON ((((((((((vt0.c0) NOT NULL))AND((rt0.c2 IN ()))))OR(LIKELIHOOD(rt1.c2, 0.1713599658935916))))OR(((rt0.c3)<('')))))OR(((((rt1.c2)AND(rt1.c1)))AND(rt0.c0)))) WHERE ((((vt0.c2 IN ()))|((NOT (rt0.c3))))) ORDER BY ((rt1.c5)*(rt1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))|((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON rt1.c1 RIGHT OUTER JOIN rt1 ON ((((((((((vt0.c0) NOT NULL))AND((rt0.c2 IN ()))))OR(LIKELIHOOD(rt1.c2, 0.1713599658935916))))OR(((rt0.c3)<('')))))OR(((((rt1.c2)AND(rt1.c1)))AND(rt0.c0)))) ORDER BY ((rt1.c5)*(rt1.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((NULL COLLATE BINARY) NOT NULL)) ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC));
SELECT ALL * FROM t1 WHERE (((NULL COLLATE BINARY) NOT NULL)) ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC));
SELECT ALL * FROM t1 WHERE (((NULL COLLATE BINARY) NOT NULL)) ORDER BY CAST(((t1.c0)+(t1.c0)) AS NUMERIC);
SELECT * FROM rt0, vt0 WHERE ((((((NULL)<(rt0.c0))))>((((rt0.c3) ISNULL))))) ORDER BY 0.768600855193041, ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL)<(rt0.c0))))>((((rt0.c3) ISNULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.768600855193041, ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((((NULL)<(rt0.c0))))>((((rt0.c3) ISNULL))))) ORDER BY 0.768600855193041, ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL)<(rt0.c0))))>((((rt0.c3) ISNULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.768600855193041, ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((((NULL)<(rt0.c0))))>((((rt0.c3) ISNULL))))) ORDER BY 0.768600855193041, ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c0)&(vt0.c2))) NOT BETWEEN (((((rt0.c3)AND(t0.c56)))OR(rt0.c0))) AND ((~ (vt0.c1))))) ORDER BY (x'6cf7' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c2))) NOT BETWEEN (((((rt0.c3)AND(t0.c56)))OR(rt0.c0))) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (x'6cf7' IN ()) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c0)&(vt0.c2))) NOT BETWEEN (((((rt0.c3)AND(t0.c56)))OR(rt0.c0))) AND ((~ (vt0.c1))))) ORDER BY (x'6cf7' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c2))) NOT BETWEEN (((((rt0.c3)AND(t0.c56)))OR(rt0.c0))) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (x'6cf7' IN ()) DESC);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((vt0.c0)&(vt0.c2))) NOT BETWEEN (((((rt0.c3)AND(t0.c56)))OR(rt0.c0))) AND ((~ (vt0.c1))))) ORDER BY (x'6cf7' IN ()) DESC;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0 COLLATE NOCASE))<(((rt1.c0 IN ()))))) ORDER BY ((((rt1.c2)IS NOT(rt1.c3)))|(x'c4ba'));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 COLLATE NOCASE))<(((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)IS NOT(rt1.c3)))|(x'c4ba')));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0 COLLATE NOCASE))<(((rt1.c0 IN ()))))) ORDER BY ((((rt1.c2)IS NOT(rt1.c3)))|(x'c4ba'));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 COLLATE NOCASE))<(((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)IS NOT(rt1.c3)))|(x'c4ba')));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0 COLLATE NOCASE))<(((rt1.c0 IN ()))))) ORDER BY ((((rt1.c2)IS NOT(rt1.c3)))|(x'c4ba'));
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED WHERE (CAST((+ (t1.c0)) AS BLOB)) ORDER BY '779520451' ASC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1, vt0 ORDER BY '779520451' ASC);
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED WHERE (CAST((+ (t1.c0)) AS BLOB)) ORDER BY '779520451' ASC;
SELECT SUM(count) FROM (SELECT ((CAST((+ (t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1, vt0 ORDER BY '779520451' ASC);
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED WHERE (CAST((+ (t1.c0)) AS BLOB)) ORDER BY '779520451' ASC;
SELECT ALL * FROM rt1, vt0, t0, t1, rt0 WHERE ((CAST(rt1.c3 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c3 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, vt0, t0, t1, rt0);
SELECT ALL * FROM rt1, vt0, t0, t1, rt0 WHERE ((CAST(rt1.c3 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c3 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, vt0, t0, t1, rt0);
SELECT ALL * FROM rt1, vt0, t0, t1, rt0 WHERE ((CAST(rt1.c3 AS TEXT) IN ()));
SELECT ALL * FROM rt1, t1 NOT INDEXED, t0 CROSS JOIN rt0 ON rt1.c2 WHERE ('1241307079') ORDER BY ((rt1.c1 COLLATE BINARY)OR(LOWER(rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1241307079') IS TRUE)  as count FROM rt1, t1, t0 CROSS JOIN rt0 ON rt1.c2 ORDER BY ((rt1.c1 COLLATE BINARY)OR(LOWER(rt1.c0))) DESC);
SELECT ALL * FROM rt1, t1 NOT INDEXED, t0 CROSS JOIN rt0 ON rt1.c2 WHERE ('1241307079') ORDER BY ((rt1.c1 COLLATE BINARY)OR(LOWER(rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1241307079') IS TRUE)  as count FROM rt1, t1, t0 CROSS JOIN rt0 ON rt1.c2 ORDER BY ((rt1.c1 COLLATE BINARY)OR(LOWER(rt1.c0))) DESC);
SELECT ALL * FROM rt1, t1 NOT INDEXED, t0 CROSS JOIN rt0 ON rt1.c2 WHERE ('1241307079') ORDER BY ((rt1.c1 COLLATE BINARY)OR(LOWER(rt1.c0))) DESC;
SELECT ALL * FROM rt0, rt1, t0, vt0, t1 WHERE (CAST(CASE NULL  WHEN rt1.c5 THEN t1.c0 END AS REAL)) ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN CHAR(rt1.c0) ELSE 0.8065736076369462 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN rt1.c5 THEN t1.c0 END AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0, vt0, t1 ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN CHAR(rt1.c0) ELSE 0.8065736076369462 END DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t0, vt0, t1 WHERE (CAST(CASE NULL  WHEN rt1.c5 THEN t1.c0 END AS REAL)) ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN CHAR(rt1.c0) ELSE 0.8065736076369462 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN rt1.c5 THEN t1.c0 END AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0, vt0, t1 ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN CHAR(rt1.c0) ELSE 0.8065736076369462 END DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t0, vt0, t1 WHERE (CAST(CASE NULL  WHEN rt1.c5 THEN t1.c0 END AS REAL)) ORDER BY CASE WHEN ((rt0.c2) NOT NULL) THEN CHAR(rt1.c0) ELSE 0.8065736076369462 END DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0, t1, vt0 FULL OUTER JOIN rt1 ON (~ (rt1.c1 COLLATE BINARY)) WHERE (CASE rt1.c1  WHEN LOWER(rt1.c1) THEN rt0.c3 COLLATE BINARY WHEN CASE t0.c0  WHEN vt0.c1 THEN '-268230521' ELSE rt1.c0 END THEN t0.c56 WHEN CASE t0.c0  WHEN rt1.c4 THEN vt0.c1 WHEN vt0.c0 THEN t0.c56 WHEN t0.c0 THEN rt1.c0 END THEN ((4.54926497E8)OR(rt0.c0)) ELSE (vt0.c1 IN ()) END) ORDER BY STRFTIME(rt1.c5 COLLATE RTRIM, (t0.c0 IN ()), (((rt1.c3, vt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0)) AND ((x'', rt1.c3, t1.c0))), (- (rt1.c2)), (((vt0.c2))==((t0.c56)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN LOWER(rt1.c1) THEN rt0.c3 COLLATE BINARY WHEN CASE t0.c0  WHEN vt0.c1 THEN '-268230521' ELSE rt1.c0 END THEN t0.c56 WHEN CASE t0.c0  WHEN rt1.c4 THEN vt0.c1 WHEN vt0.c0 THEN t0.c56 WHEN t0.c0 THEN rt1.c0 END THEN ((4.54926497E8)OR(rt0.c0)) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, t0, t1, vt0 FULL OUTER JOIN rt1 ON (~ (rt1.c1 COLLATE BINARY)) ORDER BY STRFTIME(rt1.c5 COLLATE RTRIM, (t0.c0 IN ()), (((rt1.c3, vt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0)) AND ((x'', rt1.c3, t1.c0))), (- (rt1.c2)), (((vt0.c2))=((t0.c56)))) DESC);
SELECT ALL * FROM rt0, t0, t1, vt0 FULL OUTER JOIN rt1 ON (~ (rt1.c1 COLLATE BINARY)) WHERE (CASE rt1.c1  WHEN LOWER(rt1.c1) THEN rt0.c3 COLLATE BINARY WHEN CASE t0.c0  WHEN vt0.c1 THEN '-268230521' ELSE rt1.c0 END THEN t0.c56 WHEN CASE t0.c0  WHEN rt1.c4 THEN vt0.c1 WHEN vt0.c0 THEN t0.c56 WHEN t0.c0 THEN rt1.c0 END THEN ((4.54926497E8)OR(rt0.c0)) ELSE (vt0.c1 IN ()) END) ORDER BY STRFTIME(rt1.c5 COLLATE RTRIM, (t0.c0 IN ()), (((rt1.c3, vt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0)) AND ((x'', rt1.c3, t1.c0))), (- (rt1.c2)), (((vt0.c2))==((t0.c56)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN LOWER(rt1.c1) THEN rt0.c3 COLLATE BINARY WHEN CASE t0.c0  WHEN vt0.c1 THEN '-268230521' ELSE rt1.c0 END THEN t0.c56 WHEN CASE t0.c0  WHEN rt1.c4 THEN vt0.c1 WHEN vt0.c0 THEN t0.c56 WHEN t0.c0 THEN rt1.c0 END THEN ((4.54926497E8)OR(rt0.c0)) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM rt0, t0, t1, vt0 FULL OUTER JOIN rt1 ON (~ (rt1.c1 COLLATE BINARY)) ORDER BY STRFTIME(rt1.c5 COLLATE RTRIM, (t0.c0 IN ()), (((rt1.c3, vt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0)) AND ((x'', rt1.c3, t1.c0))), (- (rt1.c2)), (((vt0.c2))=((t0.c56)))) DESC);
SELECT ALL * FROM rt0, t0, t1, vt0 FULL OUTER JOIN rt1 ON (~ (rt1.c1 COLLATE BINARY)) WHERE (CASE rt1.c1  WHEN LOWER(rt1.c1) THEN rt0.c3 COLLATE BINARY WHEN CASE t0.c0  WHEN vt0.c1 THEN '-268230521' ELSE rt1.c0 END THEN t0.c56 WHEN CASE t0.c0  WHEN rt1.c4 THEN vt0.c1 WHEN vt0.c0 THEN t0.c56 WHEN t0.c0 THEN rt1.c0 END THEN ((4.54926497E8)OR(rt0.c0)) ELSE (vt0.c1 IN ()) END) ORDER BY STRFTIME(rt1.c5 COLLATE RTRIM, (t0.c0 IN ()), (((rt1.c3, vt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, rt0.c0, t0.c0)) AND ((x'', rt1.c3, t1.c0))), (- (rt1.c2)), (((vt0.c2))==((t0.c56)))) DESC;
SELECT ALL COUNT(*) FROM t1, t0, rt1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c2) NOT NULL)))<=((rt0.c2 COLLATE RTRIM))) WHERE (t0.c0) ORDER BY HEX(DISTINCT (rt1.c5 IN (t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t1, t0, rt1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c2) NOT NULL)))<=((rt0.c2 COLLATE RTRIM))) ORDER BY HEX(DISTINCT (rt1.c5 IN (t0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, rt1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c2) NOT NULL)))<=((rt0.c2 COLLATE RTRIM))) WHERE (t0.c0) ORDER BY HEX(DISTINCT (rt1.c5 IN (t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t1, t0, rt1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c2) NOT NULL)))<=((rt0.c2 COLLATE RTRIM))) ORDER BY HEX(DISTINCT (rt1.c5 IN (t0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, rt1, rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c2) NOT NULL)))<=((rt0.c2 COLLATE RTRIM))) WHERE (t0.c0) ORDER BY HEX(DISTINCT (rt1.c5 IN (t0.c0)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 CROSS JOIN t1 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c56)))-((((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c5))))) CROSS JOIN t0 ON ((NULL)||((((t0.c56, t0.c56, t0.c56))>=((rt1.c3, rt1.c3, rt1.c4))))) WHERE (((((((((((t1.c0)OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, rt1 CROSS JOIN t1 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c56)))-((((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c5))))) CROSS JOIN t0 ON ((NULL)||((((t0.c56, t0.c56, t0.c56))>=((rt1.c3, rt1.c3, rt1.c4))))));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 CROSS JOIN t1 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c56)))-((((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c5))))) CROSS JOIN t0 ON ((NULL)||((((t0.c56, t0.c56, t0.c56))>=((rt1.c3, rt1.c3, rt1.c4))))) WHERE (((((((((((t1.c0)OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, rt1 CROSS JOIN t1 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c56)))-((((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c5))))) CROSS JOIN t0 ON ((NULL)||((((t0.c56, t0.c56, t0.c56))>=((rt1.c3, rt1.c3, rt1.c4))))));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 CROSS JOIN t1 ON ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c56)))-((((rt1.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c5))))) CROSS JOIN t0 ON ((NULL)||((((t0.c56, t0.c56, t0.c56))>=((rt1.c3, rt1.c3, rt1.c4))))) WHERE (((((((((((t1.c0)OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))) NOT NULL));
SELECT * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1))>((~ (rt0.c1))))) ORDER BY HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1))>((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1))>((~ (rt0.c1))))) ORDER BY HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1))>((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1))>((~ (rt0.c1))))) ORDER BY HEX(DISTINCT rt0.c0) COLLATE BINARY COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((((((((((((((((((rt0.c3 IN (rt1.c1)))AND(((t0.c0)=(rt1.c5)))))AND(0.29734868435050144 COLLATE NOCASE)))OR(TYPEOF(rt1.c0))))OR(CASE WHEN rt0.c3 THEN rt1.c4 ELSE 0x57284539 END)))AND(((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((rt0.c0)<=(t0.c0)))))AND((+ (rt1.c2)))))OR((('0.72934053925557')>(0.9155691130643749))))) ORDER BY ((((((((((((((((rt0.c1)OR(rt1.c3)))AND(x'')))OR(t0.c56)))AND(rt1.c0)))AND(rt1.c1)))OR(((rt0.c0)%(rt1.c3)))))AND((('887372183')AND(t0.c0)))))OR(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN t0.c0 THEN rt1.c3 ELSE rt0.c0 END)) DESC  NULLS FIRST, (((((((((- (rt1.c5)))OR(rt1.c2 COLLATE NOCASE)))AND(((rt0.c0)&(rt1.c2)))))OR((((rt1.c4)) BETWEEN ((0.14421720501579982)) AND ((rt1.c2))))))OR(rt1.c1))  NULLS FIRST, ((((((t0.c56) ISNULL))AND(CASE WHEN rt1.c0 THEN rt0.c1 END)))OR(t0.c0)) ASC  NULLS LAST, x'47cf'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((rt0.c3 IN (rt1.c1)))AND(((t0.c0)==(rt1.c5)))))AND(0.29734868435050144 COLLATE NOCASE)))OR(TYPEOF(rt1.c0))))OR(CASE WHEN rt0.c3 THEN rt1.c4 ELSE 0X57284539 END)))AND(((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((rt0.c0)<=(t0.c0)))))AND((+ (rt1.c2)))))OR((('0.72934053925557')>(0.9155691130643749))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((((((((((((((rt0.c1)OR(rt1.c3)))AND(x'')))OR(t0.c56)))AND(rt1.c0)))AND(rt1.c1)))OR(((rt0.c0)%(rt1.c3)))))AND((('887372183')AND(t0.c0)))))OR(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN t0.c0 THEN rt1.c3 ELSE rt0.c0 END)) DESC  NULLS FIRST, (((((((((- (rt1.c5)))OR(rt1.c2 COLLATE NOCASE)))AND(((rt0.c0)&(rt1.c2)))))OR((((rt1.c4)) BETWEEN ((0.14421720501579982)) AND ((rt1.c2))))))OR(rt1.c1))  NULLS FIRST, ((((((t0.c56) ISNULL))AND(CASE WHEN rt1.c0 THEN rt0.c1 END)))OR(t0.c0)) ASC  NULLS LAST, x'47cf'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((((((((((((((((((rt0.c3 IN (rt1.c1)))AND(((t0.c0)=(rt1.c5)))))AND(0.29734868435050144 COLLATE NOCASE)))OR(TYPEOF(rt1.c0))))OR(CASE WHEN rt0.c3 THEN rt1.c4 ELSE 0x57284539 END)))AND(((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((rt0.c0)<=(t0.c0)))))AND((+ (rt1.c2)))))OR((('0.72934053925557')>(0.9155691130643749))))) ORDER BY ((((((((((((((((rt0.c1)OR(rt1.c3)))AND(x'')))OR(t0.c56)))AND(rt1.c0)))AND(rt1.c1)))OR(((rt0.c0)%(rt1.c3)))))AND((('887372183')AND(t0.c0)))))OR(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN t0.c0 THEN rt1.c3 ELSE rt0.c0 END)) DESC  NULLS FIRST, (((((((((- (rt1.c5)))OR(rt1.c2 COLLATE NOCASE)))AND(((rt0.c0)&(rt1.c2)))))OR((((rt1.c4)) BETWEEN ((0.14421720501579982)) AND ((rt1.c2))))))OR(rt1.c1))  NULLS FIRST, ((((((t0.c56) ISNULL))AND(CASE WHEN rt1.c0 THEN rt0.c1 END)))OR(t0.c0)) ASC  NULLS LAST, x'47cf'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((rt0.c3 IN (rt1.c1)))AND(((t0.c0)==(rt1.c5)))))AND(0.29734868435050144 COLLATE NOCASE)))OR(TYPEOF(rt1.c0))))OR(CASE WHEN rt0.c3 THEN rt1.c4 ELSE 0X57284539 END)))AND(((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((rt0.c0)<=(t0.c0)))))AND((+ (rt1.c2)))))OR((('0.72934053925557')>(0.9155691130643749))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((((((((((((((rt0.c1)OR(rt1.c3)))AND(x'')))OR(t0.c56)))AND(rt1.c0)))AND(rt1.c1)))OR(((rt0.c0)%(rt1.c3)))))AND((('887372183')AND(t0.c0)))))OR(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN t0.c0 THEN rt1.c3 ELSE rt0.c0 END)) DESC  NULLS FIRST, (((((((((- (rt1.c5)))OR(rt1.c2 COLLATE NOCASE)))AND(((rt0.c0)&(rt1.c2)))))OR((((rt1.c4)) BETWEEN ((0.14421720501579982)) AND ((rt1.c2))))))OR(rt1.c1))  NULLS FIRST, ((((((t0.c56) ISNULL))AND(CASE WHEN rt1.c0 THEN rt0.c1 END)))OR(t0.c0)) ASC  NULLS LAST, x'47cf'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((((((((((((((((((rt0.c3 IN (rt1.c1)))AND(((t0.c0)=(rt1.c5)))))AND(0.29734868435050144 COLLATE NOCASE)))OR(TYPEOF(rt1.c0))))OR(CASE WHEN rt0.c3 THEN rt1.c4 ELSE 0x57284539 END)))AND(((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((rt0.c0)<=(t0.c0)))))AND((+ (rt1.c2)))))OR((('0.72934053925557')>(0.9155691130643749))))) ORDER BY ((((((((((((((((rt0.c1)OR(rt1.c3)))AND(x'')))OR(t0.c56)))AND(rt1.c0)))AND(rt1.c1)))OR(((rt0.c0)%(rt1.c3)))))AND((('887372183')AND(t0.c0)))))OR(CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c4 WHEN t0.c0 THEN rt1.c3 ELSE rt0.c0 END)) DESC  NULLS FIRST, (((((((((- (rt1.c5)))OR(rt1.c2 COLLATE NOCASE)))AND(((rt0.c0)&(rt1.c2)))))OR((((rt1.c4)) BETWEEN ((0.14421720501579982)) AND ((rt1.c2))))))OR(rt1.c1))  NULLS FIRST, ((((((t0.c56) ISNULL))AND(CASE WHEN rt1.c0 THEN rt0.c1 END)))OR(t0.c0)) ASC  NULLS LAST, x'47cf'  NULLS FIRST;
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c1) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, rt0, rt1, t1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM t0, vt0, rt0, rt1, t1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, rt1, t1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM t0, vt0, rt0, rt1, t1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, rt1, t1 WHERE (rt1.c4);
SELECT * FROM t0, vt0, rt1, t1 WHERE ((NOT (((rt1.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c3) ISNULL)))) IS TRUE)  as count FROM t0, vt0, rt1, t1);
SELECT * FROM t0, vt0, rt1, t1 WHERE ((NOT (((rt1.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c3) ISNULL)))) IS TRUE)  as count FROM t0, vt0, rt1, t1);
SELECT * FROM t0, vt0, rt1, t1 WHERE ((NOT (((rt1.c3) ISNULL))));
SELECT ALL * FROM rt1, t1, t0, vt0 WHERE (((vt0.c2) IS FALSE) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS FALSE) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1, t0, vt0);
SELECT ALL * FROM rt1, t1, t0, vt0 WHERE (((vt0.c2) IS FALSE) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS FALSE) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1, t0, vt0);
SELECT ALL * FROM rt1, t1, t0, vt0 WHERE (((vt0.c2) IS FALSE) COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM t1 CROSS JOIN vt0 ON (((((((((((rt1.c3)) BETWEEN (('1586996500')) AND ((rt1.c2))))OR((vt0.c2 IN (rt0.c3, rt1.c0)))))OR((rt1.c3 IN ()))))OR(NULL)))AND(CAST(rt1.c2 AS INTEGER))) RIGHT OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN rt1 ON ((rt1.c0) ISNULL) COLLATE NOCASE WHERE (((((((((CAST(rt1.c1 AS INTEGER))AND(((rt1.c5)&(t1.c0)))))OR(rt1.c5)))OR(SQLITE_SOURCE_ID())))OR(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c1 AS INTEGER))AND(((rt1.c5)&(t1.c0)))))OR(rt1.c5)))OR(SQLITE_SOURCE_ID())))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((((((((((rt1.c3)) BETWEEN (('1586996500')) AND ((rt1.c2))))OR((vt0.c2 IN (rt0.c3, rt1.c0)))))OR((rt1.c3 IN ()))))OR(NULL)))AND(CAST(rt1.c2 AS INTEGER))) RIGHT OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN rt1 ON ((rt1.c0) ISNULL) COLLATE NOCASE);
SELECT * FROM t1 CROSS JOIN vt0 ON (((((((((((rt1.c3)) BETWEEN (('1586996500')) AND ((rt1.c2))))OR((vt0.c2 IN (rt0.c3, rt1.c0)))))OR((rt1.c3 IN ()))))OR(NULL)))AND(CAST(rt1.c2 AS INTEGER))) RIGHT OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN rt1 ON ((rt1.c0) ISNULL) COLLATE NOCASE WHERE (((((((((CAST(rt1.c1 AS INTEGER))AND(((rt1.c5)&(t1.c0)))))OR(rt1.c5)))OR(SQLITE_SOURCE_ID())))OR(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c1 AS INTEGER))AND(((rt1.c5)&(t1.c0)))))OR(rt1.c5)))OR(SQLITE_SOURCE_ID())))OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((((((((((rt1.c3)) BETWEEN (('1586996500')) AND ((rt1.c2))))OR((vt0.c2 IN (rt0.c3, rt1.c0)))))OR((rt1.c3 IN ()))))OR(NULL)))AND(CAST(rt1.c2 AS INTEGER))) RIGHT OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN rt1 ON ((rt1.c0) ISNULL) COLLATE NOCASE);
SELECT * FROM vt0, t1, rt0 WHERE (CASE WHEN TRIM(rt0.c1) THEN (NOT (rt0.c2)) WHEN (rt0.c1 IN (vt0.c1)) THEN CASE WHEN rt0.c2 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN ((rt0.c3)&('᧼p/冸v,up級')) THEN ((vt0.c2)>=(rt0.c1)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(rt0.c1) THEN (NOT (rt0.c2)) WHEN (rt0.c1 IN (vt0.c1)) THEN CASE WHEN rt0.c2 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN ((rt0.c3)&('᧼p/冸v,up級')) THEN ((vt0.c2)>=(rt0.c1)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE (CASE WHEN TRIM(rt0.c1) THEN (NOT (rt0.c2)) WHEN (rt0.c1 IN (vt0.c1)) THEN CASE WHEN rt0.c2 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN ((rt0.c3)&('᧼p/冸v,up級')) THEN ((vt0.c2)>=(rt0.c1)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(rt0.c1) THEN (NOT (rt0.c2)) WHEN (rt0.c1 IN (vt0.c1)) THEN CASE WHEN rt0.c2 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN ((rt0.c3)&('᧼p/冸v,up級')) THEN ((vt0.c2)>=(rt0.c1)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE (CASE WHEN TRIM(rt0.c1) THEN (NOT (rt0.c2)) WHEN (rt0.c1 IN (vt0.c1)) THEN CASE WHEN rt0.c2 THEN t1.c0 WHEN vt0.c2 THEN t1.c0 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN ((rt0.c3)&('᧼p/冸v,up級')) THEN ((vt0.c2)>=(rt0.c1)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t1, rt0, t0, rt1 WHERE (CASE ((rt1.c3) IS TRUE)  WHEN CAST(rt0.c0 AS INTEGER) THEN x'' WHEN (rt0.c3 IN ()) THEN (rt0.c1 IN ()) WHEN 0.9585971408984361 THEN '427221066' ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3) IS TRUE)  WHEN CAST(rt0.c0 AS INTEGER) THEN x'' WHEN (rt0.c3 IN ()) THEN (rt0.c1 IN ()) WHEN 0.9585971408984361 THEN '427221066' ELSE x'' END) IS TRUE)  as count FROM t1, rt0, t0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, t0, rt1 WHERE (CASE ((rt1.c3) IS TRUE)  WHEN CAST(rt0.c0 AS INTEGER) THEN x'' WHEN (rt0.c3 IN ()) THEN (rt0.c1 IN ()) WHEN 0.9585971408984361 THEN '427221066' ELSE x'' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c3) IS TRUE)  WHEN CAST(rt0.c0 AS INTEGER) THEN x'' WHEN (rt0.c3 IN ()) THEN (rt0.c1 IN ()) WHEN 0.9585971408984361 THEN '427221066' ELSE x'' END) IS TRUE)  as count FROM t1, rt0, t0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, t0, rt1 WHERE (CASE ((rt1.c3) IS TRUE)  WHEN CAST(rt0.c0 AS INTEGER) THEN x'' WHEN (rt0.c3 IN ()) THEN (rt0.c1 IN ()) WHEN 0.9585971408984361 THEN '427221066' ELSE x'' END);
SELECT * FROM rt0, t0, rt1 WHERE ((((rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c5)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((rt1.c2)<=(rt0.c2)), CAST(rt1.c5 AS REAL), ((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))) AND ((x'', ((rt1.c3)>=(rt0.c0)), ((rt1.c1)%(rt0.c3)), rt0.c0, (rt0.c1 IN ()))))) ORDER BY ((((t0.c0) BETWEEN (rt1.c5) AND (rt0.c2))) NOT BETWEEN ((rt1.c5 IN ())) AND (CASE t0.c0  WHEN t0.c56 THEN rt0.c0 ELSE t0.c56 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c5)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((rt1.c2)<=(rt0.c2)), CAST(rt1.c5 AS REAL), ((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))) AND ((x'', ((rt1.c3)>=(rt0.c0)), ((rt1.c1)%(rt0.c3)), rt0.c0, (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((t0.c0) BETWEEN (rt1.c5) AND (rt0.c2))) NOT BETWEEN ((rt1.c5 IN ())) AND (CASE t0.c0  WHEN t0.c56 THEN rt0.c0 ELSE t0.c56 END))  NULLS LAST);
SELECT * FROM rt0, t0, rt1 WHERE ((((rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c5)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((rt1.c2)<=(rt0.c2)), CAST(rt1.c5 AS REAL), ((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))) AND ((x'', ((rt1.c3)>=(rt0.c0)), ((rt1.c1)%(rt0.c3)), rt0.c0, (rt0.c1 IN ()))))) ORDER BY ((((t0.c0) BETWEEN (rt1.c5) AND (rt0.c2))) NOT BETWEEN ((rt1.c5 IN ())) AND (CASE t0.c0  WHEN t0.c56 THEN rt0.c0 ELSE t0.c56 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c5)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((rt1.c2)<=(rt0.c2)), CAST(rt1.c5 AS REAL), ((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))) AND ((x'', ((rt1.c3)>=(rt0.c0)), ((rt1.c1)%(rt0.c3)), rt0.c0, (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((t0.c0) BETWEEN (rt1.c5) AND (rt0.c2))) NOT BETWEEN ((rt1.c5 IN ())) AND (CASE t0.c0  WHEN t0.c56 THEN rt0.c0 ELSE t0.c56 END))  NULLS LAST);
SELECT * FROM rt0, t0, rt1 WHERE ((((rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c5)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((rt1.c2)<=(rt0.c2)), CAST(rt1.c5 AS REAL), ((((rt0.c2)OR(rt1.c1)))OR(rt0.c2)))) AND ((x'', ((rt1.c3)>=(rt0.c0)), ((rt1.c1)%(rt0.c3)), rt0.c0, (rt0.c1 IN ()))))) ORDER BY ((((t0.c0) BETWEEN (rt1.c5) AND (rt0.c2))) NOT BETWEEN ((rt1.c5 IN ())) AND (CASE t0.c0  WHEN t0.c56 THEN rt0.c0 ELSE t0.c56 END))  NULLS LAST;
SELECT COUNT(*) FROM t0, t1, rt0, rt1, vt0 WHERE (((((rt1.c5))<((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5))<((t0.c0))) IN ())) IS TRUE)  as count FROM t0, t1, rt0, rt1, vt0);
SELECT COUNT(*) FROM t0, t1, rt0, rt1, vt0 WHERE (((((rt1.c5))<((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5))<((t0.c0))) IN ())) IS TRUE)  as count FROM t0, t1, rt0, rt1, vt0);
SELECT COUNT(*) FROM t0, t1, rt0, rt1, vt0 WHERE (((((rt1.c5))<((t0.c0))) IN ()));
SELECT ALL * FROM t1, rt0, rt1, vt0 WHERE ((((vt0.c2 IN ()))+((NOT (rt0.c2))))) ORDER BY ((((+ (rt1.c0))))=(((rt0.c1 IN (rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))+((NOT (rt0.c2))))) IS TRUE)  as count FROM t1, rt0, rt1, vt0 ORDER BY ((((+ (rt1.c0))))=(((rt0.c1 IN (rt1.c4))))));
SELECT ALL * FROM t1, rt0, rt1, vt0 WHERE ((((vt0.c2 IN ()))+((NOT (rt0.c2))))) ORDER BY ((((+ (rt1.c0))))=(((rt0.c1 IN (rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))+((NOT (rt0.c2))))) IS TRUE)  as count FROM t1, rt0, rt1, vt0 ORDER BY ((((+ (rt1.c0))))=(((rt0.c1 IN (rt1.c4))))));
SELECT ALL * FROM t1, rt0, rt1, vt0 WHERE ((((vt0.c2 IN ()))+((NOT (rt0.c2))))) ORDER BY ((((+ (rt1.c0))))=(((rt0.c1 IN (rt1.c4)))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, t0 WHERE (((NULL)&(vt0.c2)) COLLATE NOCASE) ORDER BY ((TRIM(DISTINCT rt1.c0)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)&(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY ((TRIM(DISTINCT rt1.c0)) IS TRUE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, t0 WHERE (((NULL)&(vt0.c2)) COLLATE NOCASE) ORDER BY ((TRIM(DISTINCT rt1.c0)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)&(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, vt0, t0 ORDER BY ((TRIM(DISTINCT rt1.c0)) IS TRUE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0, t0 WHERE (((NULL)&(vt0.c2)) COLLATE NOCASE) ORDER BY ((TRIM(DISTINCT rt1.c0)) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((((rt1.c5 IN ()))OR(((rt1.c1) ISNULL))))AND(((rt0.c1) ISNULL))) CROSS JOIN vt0 ON ((rt1.c5)-(((rt1.c4)&(rt1.c1)))) LEFT OUTER JOIN t0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN rt1.c4 COLLATE NOCASE THEN (~ (rt0.c1)) END WHERE ((+ (rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt1.c5 IN ()))OR(((rt1.c1) ISNULL))))AND(((rt0.c1) ISNULL))) CROSS JOIN vt0 ON ((rt1.c5)-(((rt1.c4)&(rt1.c1)))) LEFT OUTER JOIN t0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN rt1.c4 COLLATE NOCASE THEN (~ (rt0.c1)) END);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((((rt1.c5 IN ()))OR(((rt1.c1) ISNULL))))AND(((rt0.c1) ISNULL))) CROSS JOIN vt0 ON ((rt1.c5)-(((rt1.c4)&(rt1.c1)))) LEFT OUTER JOIN t0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN rt1.c4 COLLATE NOCASE THEN (~ (rt0.c1)) END WHERE ((+ (rt1.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((((rt1.c5 IN ()))OR(((rt1.c1) ISNULL))))AND(((rt0.c1) ISNULL))) CROSS JOIN vt0 ON ((rt1.c5)-(((rt1.c4)&(rt1.c1)))) LEFT OUTER JOIN t0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN rt1.c4 COLLATE NOCASE THEN (~ (rt0.c1)) END);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((((rt1.c5 IN ()))OR(((rt1.c1) ISNULL))))AND(((rt0.c1) ISNULL))) CROSS JOIN vt0 ON ((rt1.c5)-(((rt1.c4)&(rt1.c1)))) LEFT OUTER JOIN t0 ON CASE CAST(vt0.c1 AS BLOB)  WHEN rt1.c4 COLLATE NOCASE THEN (~ (rt0.c1)) END WHERE ((+ (rt1.c3)) COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE (((((((((NULLIF(DISTINCT vt0.c0, rt0.c0))AND(((rt0.c0)/(vt0.c0)))))AND((~ (vt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.9587857447854442))))OR((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'77b2', vt0.c2, vt0.c0)))))) ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN (rt0.c2 IN ()) WHEN 0Xffffffff9fb46a43 THEN ((((((((NULL)OR(0.754919703900584)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE RTRIM ELSE (NOT (rt0.c3)) END  NULLS FIRST, (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))>=(((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(DISTINCT vt0.c0, rt0.c0))AND(((rt0.c0)/(vt0.c0)))))AND((~ (vt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.9587857447854442))))OR((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'77b2', vt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN (rt0.c2 IN ()) WHEN 0xffffffff9fb46a43 THEN ((((((((NULL)OR(0.754919703900584)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE RTRIM ELSE (NOT (rt0.c3)) END  NULLS FIRST, (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))>=(((- (vt0.c2))))));
SELECT * FROM rt0, vt0 WHERE (((((((((NULLIF(DISTINCT vt0.c0, rt0.c0))AND(((rt0.c0)/(vt0.c0)))))AND((~ (vt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.9587857447854442))))OR((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'77b2', vt0.c2, vt0.c0)))))) ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN (rt0.c2 IN ()) WHEN 0Xffffffff9fb46a43 THEN ((((((((NULL)OR(0.754919703900584)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE RTRIM ELSE (NOT (rt0.c3)) END  NULLS FIRST, (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))>=(((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(DISTINCT vt0.c0, rt0.c0))AND(((rt0.c0)/(vt0.c0)))))AND((~ (vt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.9587857447854442))))OR((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'77b2', vt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN (rt0.c2 IN ()) WHEN 0xffffffff9fb46a43 THEN ((((((((NULL)OR(0.754919703900584)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE RTRIM ELSE (NOT (rt0.c3)) END  NULLS FIRST, (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))>=(((- (vt0.c2))))));
SELECT * FROM rt0, vt0 WHERE (((((((((NULLIF(DISTINCT vt0.c0, rt0.c0))AND(((rt0.c0)/(vt0.c0)))))AND((~ (vt0.c1)))))OR(LIKELIHOOD(rt0.c2, 0.9587857447854442))))OR((((rt0.c3, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'77b2', vt0.c2, vt0.c0)))))) ORDER BY CASE WHEN LIKELY(DISTINCT vt0.c0) THEN (rt0.c2 IN ()) WHEN 0Xffffffff9fb46a43 THEN ((((((((NULL)OR(0.754919703900584)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c1 COLLATE RTRIM ELSE (NOT (rt0.c3)) END  NULLS FIRST, (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1))))>=(((- (vt0.c2)))));
SELECT COUNT(*) FROM vt0, t1, rt1 WHERE (((((t1.c0)||(rt1.c1)))-(CASE WHEN rt1.c5 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c4 WHEN t1.c0 THEN rt1.c4 END))) ORDER BY ((LOWER(rt1.c0)) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c5 END) AND (((((rt1.c3)AND(vt0.c0)))OR(rt1.c1)))), (+ (vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)||(rt1.c1)))-(CASE WHEN rt1.c5 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c4 WHEN t1.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM vt0, t1, rt1 ORDER BY ((LOWER(rt1.c0)) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c5 END) AND (((((rt1.c3)AND(vt0.c0)))OR(rt1.c1)))), (+ (vt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, t1, rt1 WHERE (((((t1.c0)||(rt1.c1)))-(CASE WHEN rt1.c5 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c4 WHEN t1.c0 THEN rt1.c4 END))) ORDER BY ((LOWER(rt1.c0)) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c5 END) AND (((((rt1.c3)AND(vt0.c0)))OR(rt1.c1)))), (+ (vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)||(rt1.c1)))-(CASE WHEN rt1.c5 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c4 WHEN t1.c0 THEN rt1.c4 END))) IS TRUE)  as count FROM vt0, t1, rt1 ORDER BY ((LOWER(rt1.c0)) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c5 END) AND (((((rt1.c3)AND(vt0.c0)))OR(rt1.c1)))), (+ (vt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, t1, rt1 WHERE (((((t1.c0)||(rt1.c1)))-(CASE WHEN rt1.c5 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c4 WHEN t1.c0 THEN rt1.c4 END))) ORDER BY ((LOWER(rt1.c0)) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c5 END) AND (((((rt1.c3)AND(vt0.c0)))OR(rt1.c1)))), (+ (vt0.c1 COLLATE RTRIM));
SELECT * FROM t1, rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 END)-(NULL))) ORDER BY ((((((((CASE rt1.c3  WHEN '' THEN rt1.c3 END)AND((+ (t0.c56)))))OR(((rt1.c5)>=(rt1.c3)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE 1.211924167E9  WHEN rt1.c3 THEN rt1.c4 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt1.c1 END)-(NULL))) IS TRUE)  as count FROM t1, rt1, t0 ORDER BY ((((((((CASE rt1.c3  WHEN '' THEN rt1.c3 END)AND((+ (t0.c56)))))OR(((rt1.c5)>=(rt1.c3)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE 1.211924167E9  WHEN rt1.c3 THEN rt1.c4 END))  NULLS FIRST);
SELECT * FROM t1, rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 END)-(NULL))) ORDER BY ((((((((CASE rt1.c3  WHEN '' THEN rt1.c3 END)AND((+ (t0.c56)))))OR(((rt1.c5)>=(rt1.c3)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE 1.211924167E9  WHEN rt1.c3 THEN rt1.c4 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt1.c1 END)-(NULL))) IS TRUE)  as count FROM t1, rt1, t0 ORDER BY ((((((((CASE rt1.c3  WHEN '' THEN rt1.c3 END)AND((+ (t0.c56)))))OR(((rt1.c5)>=(rt1.c3)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE 1.211924167E9  WHEN rt1.c3 THEN rt1.c4 END))  NULLS FIRST);
SELECT * FROM t1, rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 END)-(NULL))) ORDER BY ((((((((CASE rt1.c3  WHEN '' THEN rt1.c3 END)AND((+ (t0.c56)))))OR(((rt1.c5)>=(rt1.c3)))))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(CASE 1.211924167E9  WHEN rt1.c3 THEN rt1.c4 END))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt1 CROSS JOIN rt0 ON NULL INNER JOIN t1 ON ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c4 ELSE NULL END)/(((rt1.c4) IS FALSE))) WHERE (((rt1.c1)%(((0.7809705044167832) BETWEEN (rt1.c3) AND (vt0.c0))))) ORDER BY ((0x6ee2089b)IS(((((rt1.c5)AND(t1.c0)))OR(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)%(((0.7809705044167832) BETWEEN (rt1.c3) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1 CROSS JOIN rt0 ON NULL INNER JOIN t1 ON ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c4 ELSE NULL END)/(((rt1.c4) IS FALSE))) ORDER BY ((0X6ee2089b)IS(((((rt1.c5)AND(t1.c0)))OR(rt1.c4)))));
SELECT COUNT(*) FROM t0, vt0, rt1 CROSS JOIN rt0 ON NULL INNER JOIN t1 ON ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c4 ELSE NULL END)/(((rt1.c4) IS FALSE))) WHERE (((rt1.c1)%(((0.7809705044167832) BETWEEN (rt1.c3) AND (vt0.c0))))) ORDER BY ((0x6ee2089b)IS(((((rt1.c5)AND(t1.c0)))OR(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)%(((0.7809705044167832) BETWEEN (rt1.c3) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1 CROSS JOIN rt0 ON NULL INNER JOIN t1 ON ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c4 ELSE NULL END)/(((rt1.c4) IS FALSE))) ORDER BY ((0X6ee2089b)IS(((((rt1.c5)AND(t1.c0)))OR(rt1.c4)))));
SELECT COUNT(*) FROM t0, vt0, rt1 CROSS JOIN rt0 ON NULL INNER JOIN t1 ON ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c4 ELSE NULL END)/(((rt1.c4) IS FALSE))) WHERE (((rt1.c1)%(((0.7809705044167832) BETWEEN (rt1.c3) AND (vt0.c0))))) ORDER BY ((0x6ee2089b)IS(((((rt1.c5)AND(t1.c0)))OR(rt1.c4))));
SELECT * FROM rt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT))>(((rt0.c2)*(vt0.c1)))) RIGHT OUTER JOIN rt0 ON t1.c0 RIGHT OUTER JOIN t1 ON CAST(rt1.c4 AS BLOB) COLLATE NOCASE WHERE (((rt1.c3 COLLATE BINARY) NOTNULL)) ORDER BY CASE rt0.c2 COLLATE NOCASE  WHEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt1.c1) NOTNULL) THEN ((vt0.c1)+(rt1.c1)) WHEN ((vt0.c2)OR(x'c31e')) THEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) ELSE x'' END DESC  NULLS FIRST, SQLITE_VERSION() ASC, ((((((rt0.c2) BETWEEN (vt0.c1) AND (t1.c0)))AND(rt0.c2)))AND((('?y') BETWEEN (t1.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT))>(((rt0.c2)*(vt0.c1)))) RIGHT OUTER JOIN rt0 ON t1.c0 RIGHT OUTER JOIN t1 ON CAST(rt1.c4 AS BLOB) COLLATE NOCASE ORDER BY CASE rt0.c2 COLLATE NOCASE  WHEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt1.c1) NOTNULL) THEN ((vt0.c1)+(rt1.c1)) WHEN ((vt0.c2)OR(x'c31e')) THEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) ELSE x'' END DESC  NULLS FIRST, SQLITE_VERSION() ASC, ((((((rt0.c2) BETWEEN (vt0.c1) AND (t1.c0)))AND(rt0.c2)))AND((('?y') BETWEEN (t1.c0) AND (rt0.c2)))) ASC);
SELECT * FROM rt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT))>(((rt0.c2)*(vt0.c1)))) RIGHT OUTER JOIN rt0 ON t1.c0 RIGHT OUTER JOIN t1 ON CAST(rt1.c4 AS BLOB) COLLATE NOCASE WHERE (((rt1.c3 COLLATE BINARY) NOTNULL)) ORDER BY CASE rt0.c2 COLLATE NOCASE  WHEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt1.c1) NOTNULL) THEN ((vt0.c1)+(rt1.c1)) WHEN ((vt0.c2)OR(x'c31e')) THEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) ELSE x'' END DESC  NULLS FIRST, SQLITE_VERSION() ASC, ((((((rt0.c2) BETWEEN (vt0.c1) AND (t1.c0)))AND(rt0.c2)))AND((('?y') BETWEEN (t1.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT))>(((rt0.c2)*(vt0.c1)))) RIGHT OUTER JOIN rt0 ON t1.c0 RIGHT OUTER JOIN t1 ON CAST(rt1.c4 AS BLOB) COLLATE NOCASE ORDER BY CASE rt0.c2 COLLATE NOCASE  WHEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt1.c1) NOTNULL) THEN ((vt0.c1)+(rt1.c1)) WHEN ((vt0.c2)OR(x'c31e')) THEN ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) ELSE x'' END DESC  NULLS FIRST, SQLITE_VERSION() ASC, ((((((rt0.c2) BETWEEN (vt0.c1) AND (t1.c0)))AND(rt0.c2)))AND((('?y') BETWEEN (t1.c0) AND (rt0.c2)))) ASC);
SELECT * FROM rt1, t0 WHERE (((((x'' COLLATE NOCASE)OR((((rt1.c0, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c5))))))AND(CAST(x'' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'' COLLATE NOCASE)OR((((rt1.c0, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c5))))))AND(CAST(x'' AS REAL)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((x'' COLLATE NOCASE)OR((((rt1.c0, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c5))))))AND(CAST(x'' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'' COLLATE NOCASE)OR((((rt1.c0, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c5))))))AND(CAST(x'' AS REAL)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((x'' COLLATE NOCASE)OR((((rt1.c0, rt1.c2, rt1.c1))<((rt1.c0, rt1.c0, rt1.c5))))))AND(CAST(x'' AS REAL))));
SELECT * FROM t0 INNER JOIN rt0 ON (x'' IN ()) WHERE ((TRIM(DISTINCT t0.c0, t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT t0.c0, t0.c0) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (x'' IN ()));
SELECT * FROM t0 INNER JOIN rt0 ON (x'' IN ()) WHERE ((TRIM(DISTINCT t0.c0, t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT t0.c0, t0.c0) IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (x'' IN ()));
SELECT * FROM t0 INNER JOIN rt0 ON (x'' IN ()) WHERE ((TRIM(DISTINCT t0.c0, t0.c0) IN ()));
SELECT ALL * FROM rt1, vt0, t1 WHERE (x'') ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0, t1 ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c0 END)) ASC);
SELECT ALL * FROM rt1, vt0, t1 WHERE (x'') ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0, t1 ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c0 END)) ASC);
SELECT ALL * FROM rt1, vt0, t1 WHERE (x'') ORDER BY (NOT (CASE WHEN rt1.c1 THEN rt1.c5 ELSE rt1.c0 END)) ASC;
SELECT ALL * FROM vt0, t1, rt1, rt0, t0 WHERE (UNICODE(CASE WHEN rt1.c3 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE WHEN rt1.c3 THEN rt0.c2 END)) IS TRUE)  as count FROM vt0, t1, rt1, rt0, t0);
SELECT ALL * FROM vt0, t1, rt1, rt0, t0 WHERE (UNICODE(CASE WHEN rt1.c3 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ((UNICODE(CASE WHEN rt1.c3 THEN rt0.c2 END)) IS TRUE)  as count FROM vt0, t1, rt1, rt0, t0);
SELECT ALL * FROM vt0, t1, rt1, rt0, t0 WHERE (UNICODE(CASE WHEN rt1.c3 THEN rt0.c2 END));
SELECT * FROM vt0 WHERE (-183300048) ORDER BY CASE (x'' IN ())  WHEN -386660031 THEN vt0.c0 COLLATE BINARY ELSE (vt0.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((-183300048) IS TRUE)  as count FROM vt0 ORDER BY CASE (x'' IN ())  WHEN -386660031 THEN vt0.c0 COLLATE BINARY ELSE (vt0.c2 IN ()) END);
SELECT * FROM vt0 WHERE (-183300048) ORDER BY CASE (x'' IN ())  WHEN -386660031 THEN vt0.c0 COLLATE BINARY ELSE (vt0.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL ((-183300048) IS TRUE)  as count FROM vt0 ORDER BY CASE (x'' IN ())  WHEN -386660031 THEN vt0.c0 COLLATE BINARY ELSE (vt0.c2 IN ()) END);
SELECT * FROM vt0 WHERE (-183300048) ORDER BY CASE (x'' IN ())  WHEN -386660031 THEN vt0.c0 COLLATE BINARY ELSE (vt0.c2 IN ()) END;
SELECT ALL * FROM vt0, t0, t1, rt1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY ((-649457861 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, t1, rt1 ORDER BY ((-649457861 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t0, t1, rt1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY ((-649457861 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, t1, rt1 ORDER BY ((-649457861 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, t0, t1, rt1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY ((-649457861 IN ()) IN ())  NULLS FIRST;
