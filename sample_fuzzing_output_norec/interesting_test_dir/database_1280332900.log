-- Time: 2024/06/09 07:04:50
-- Database: database0
-- Database version: 3.40.0
-- seed value: 1280332900
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (x'', x''); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('ooE<U᳈') WHERE vt0.c1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2048793800,4');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2048793800,15');\n; -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c0) VALUES (x'', 0.12219707320052042); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.8209737701783645, ''); -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt0 SET (c1)=('0.12219707320052042') WHERE ((vt0.c1 COLLATE NOCASE) NOT BETWEEN ((('jh') ISNULL)) AND (vt0.c0)); -- 1ms;
PRAGMA main.application_id; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40136'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 2ms;
UPDATE vt0 SET (c0)=(0.12219707320052042) WHERE LIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))); -- 0ms;
BEGIN  TRANSACTION; -- 2ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
COMMIT; -- 1ms;
END; -- 0ms;
UPDATE vt0 SET (c1)=('2048793800'); -- 1ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (-1437126243 COLLATE BINARY)); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '524'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20184'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 219990568); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='' WHERE (+ (((vt0.c1) BETWEEN (-1.437126243E9) AND (vt0.c1)))); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', 0.12219707320052042); -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET c1=x'' WHERE vt0.c0; -- 0ms;
PRAGMA main.cache_size; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES ('-1437126243', NULL), (x'2598fde1', ''), (-1.437126243E9, NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'1778', ''), (NULL, ''), (0.8209737701783645, x'bcda'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.8190495878533749, 'ꪹn'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.4670058584338167, '2036381811'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8705'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22898'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1899915365);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('0.8190495878533749') WHERE 0.12219707320052042; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-374181620', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1098528018'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('1921755833') WHERE IFNULL(DISTINCT vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=-26946369, c0=NULL; -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, '-578057092'); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
UPDATE vt0 SET c0=x''; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA threads = -3698314732538603069; -- 0ms;
UPDATE vt0 SET (c1)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c1)=(0.12219707320052042); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='-946324029'; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0.7154321571005612, 1896656256); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1.896656256E9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1066885161);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-26946369'); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -453042001);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET c1=x'' WHERE ((vt0.c0) BETWEEN ((((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0)))) AND ((vt0.c1 IN ()))); -- 0ms;
UPDATE vt0 SET c0='1388802430' WHERE ((((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1)))))>((CHANGES()))); -- 0ms;
REINDEX; -- 1ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1 UNINDEXED); -- 0ms;
PRAGMA incremental_vacuum; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_size = -6886731064961623412; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (NULL, -1066885161); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1977547752); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-578057092'; -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (0.9983919697834457, x'f7ac'); -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0.22610887525501044) WHERE (((((vt0.c1))>((vt0.c0)))) IS FALSE); -- 3ms;
UPDATE OR REPLACE vt1 SET (c1)=('1896656256') WHERE vt1.c1; -- 0ms;
PRAGMA main.cache_spill = -4784014153521104204; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1235467280,12');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1, c0, c1)=('f(''xjSZD桥', x'', ''); -- 0ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES ('2123185646', x''); -- 1ms;
UPDATE vt1 SET c0=-917183710, c0=NULL WHERE x''; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA locking_mode; -- 0ms;
VACUUM main; -- 2ms;
PRAGMA foreign_keys = true; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''), ((CASE WHEN x'' THEN 'jh' ELSE 0.8063045038610772 END IN (((((NULL)OR(NULL)))OR('')), 'x'))), (x''); -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA application_id = -4234606223789410293; -- 0ms;
DELETE FROM vt1 WHERE (NOT (((vt1.c0)>(vt1.c0)))); -- 0ms;
END TRANSACTION; -- 5ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(0.4670058584338167, 0.7303765974226177) WHERE (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0))))<=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE vt1 SET c1='jh', c0=x'1e17'; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c1) ISNULL))AND(vt1.c0)))AND(vt0.c0))) ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) ISNULL))AND(vt1.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c1) ISNULL))AND(vt1.c0)))AND(vt0.c0))) ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) ISNULL))AND(vt1.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c1) ISNULL))AND(vt1.c0)))AND(vt0.c0))) ORDER BY ((((((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt1.c0))) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY LIKE(CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY LIKE(CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c1));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY LIKE(CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY LIKE(CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c1));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY LIKE(CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c1 IN ()))GLOB((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))GLOB((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c1 IN ()))GLOB((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))GLOB((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c1 IN ()))GLOB((NOT (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ('1320705905')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ('1320705905'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ('1320705905')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ('1320705905'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ('1320705905')));
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(x'')) ISNULL)) ORDER BY ((((vt0.c1) NOT NULL))OR(NULL)) ASC, ((vt0.c1 COLLATE BINARY)OR(ABS(DISTINCT 0X2290fee6)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(x'')) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))OR(NULL)) ASC, ((vt0.c1 COLLATE BINARY)OR(ABS(DISTINCT 0x2290fee6)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(x'')) ISNULL)) ORDER BY ((((vt0.c1) NOT NULL))OR(NULL)) ASC, ((vt0.c1 COLLATE BINARY)OR(ABS(DISTINCT 0X2290fee6)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(x'')) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))OR(NULL)) ASC, ((vt0.c1 COLLATE BINARY)OR(ABS(DISTINCT 0x2290fee6)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(x'')) ISNULL)) ORDER BY ((((vt0.c1) NOT NULL))OR(NULL)) ASC, ((vt0.c1 COLLATE BINARY)OR(ABS(DISTINCT 0X2290fee6)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 END THEN ((((vt1.c0)AND(vt1.c0)))AND(NULL)) WHEN rtreenode(vt1.c0, vt1.c0) THEN ABS(vt1.c1) WHEN ((vt0.c0)GLOB(vt1.c1)) THEN LOWER(vt1.c0) END WHERE (0Xffffffff8b5a3bcf);
SELECT SUM(count) FROM (SELECT ((0xffffffff8b5a3bcf) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 END THEN ((((vt1.c0)AND(vt1.c0)))AND(NULL)) WHEN rtreenode(vt1.c0, vt1.c0) THEN ABS(vt1.c1) WHEN ((vt0.c0)GLOB(vt1.c1)) THEN LOWER(vt1.c0) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 END THEN ((((vt1.c0)AND(vt1.c0)))AND(NULL)) WHEN rtreenode(vt1.c0, vt1.c0) THEN ABS(vt1.c1) WHEN ((vt0.c0)GLOB(vt1.c1)) THEN LOWER(vt1.c0) END WHERE (0Xffffffff8b5a3bcf);
SELECT SUM(count) FROM (SELECT ((0xffffffff8b5a3bcf) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 END THEN ((((vt1.c0)AND(vt1.c0)))AND(NULL)) WHEN rtreenode(vt1.c0, vt1.c0) THEN ABS(vt1.c1) WHEN ((vt0.c0)GLOB(vt1.c1)) THEN LOWER(vt1.c0) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 END THEN ((((vt1.c0)AND(vt1.c0)))AND(NULL)) WHEN rtreenode(vt1.c0, vt1.c0) THEN ABS(vt1.c1) WHEN ((vt0.c0)GLOB(vt1.c1)) THEN LOWER(vt1.c0) END WHERE (0Xffffffff8b5a3bcf);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c1)) THEN ((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c1 IN (vt1.c1)) THEN ((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c1)) THEN ((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c1 IN (vt1.c1)) THEN ((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (vt1.c1 IN (vt1.c1)) THEN ((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) END);
SELECT * FROM vt0, vt1 WHERE ('') ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt1.c1))>=((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt1.c1))>=((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ('') ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt1.c1))>=((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt1.c1))>=((vt0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ('') ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt1.c1))>=((vt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)>(x''));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)>(x'')));
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)>(x''));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)>(x'')));
SELECT ALL * FROM vt0, vt1 WHERE (((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)>(x''));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)&(((vt0.c0)OR(1211496220))))) ORDER BY (NOT (NULL)) ASC  NULLS LAST, (((+ (vt1.c1)))=((NOT (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)&(((vt0.c0)OR(1211496220))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (NULL)) ASC  NULLS LAST, (((+ (vt1.c1)))==((NOT (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)&(((vt0.c0)OR(1211496220))))) ORDER BY (NOT (NULL)) ASC  NULLS LAST, (((+ (vt1.c1)))=((NOT (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)&(((vt0.c0)OR(1211496220))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (NULL)) ASC  NULLS LAST, (((+ (vt1.c1)))==((NOT (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)&(((vt0.c0)OR(1211496220))))) ORDER BY (NOT (NULL)) ASC  NULLS LAST, (((+ (vt1.c1)))=((NOT (vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((json_patch(vt0.c1, vt0.c0) IN (((vt0.c1) NOT NULL)))) ORDER BY ((((CAST(vt0.c1 AS BLOB))OR((~ (vt0.c0)))))AND((((vt0.c0))<=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((json_patch(vt0.c1, vt0.c0) IN (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c1 AS BLOB))OR((~ (vt0.c0)))))AND((((vt0.c0))<=((vt0.c0))))));
SELECT * FROM vt0 WHERE ((json_patch(vt0.c1, vt0.c0) IN (((vt0.c1) NOT NULL)))) ORDER BY ((((CAST(vt0.c1 AS BLOB))OR((~ (vt0.c0)))))AND((((vt0.c0))<=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((json_patch(vt0.c1, vt0.c0) IN (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c1 AS BLOB))OR((~ (vt0.c0)))))AND((((vt0.c0))<=((vt0.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE ((~ (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c1)))*(((vt0.c1)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c1)))*(((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c1)))*(((vt0.c1)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c1)))*(((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c1)))*(((vt0.c1)GLOB(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((1211496220)OR(x''))))>(((NULL IN ()))))) ORDER BY x'9bc6' COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((1211496220)OR(x''))))>(((NULL IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY x'9bc6' COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((1211496220)OR(x''))))>(((NULL IN ()))))) ORDER BY x'9bc6' COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((((1211496220)OR(x''))))>(((NULL IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY x'9bc6' COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((1211496220)OR(x''))))>(((NULL IN ()))))) ORDER BY x'9bc6' COLLATE RTRIM ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)<<(vt0.c1)))>(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ASC  NULLS FIRST, (vt0.c1 COLLATE RTRIM IN ()) ASC, 0X70ea20ea;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c1)))>(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ASC  NULLS FIRST, (vt0.c1 COLLATE RTRIM IN ()) ASC, 0X70ea20ea);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)<<(vt0.c1)))>(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ASC  NULLS FIRST, (vt0.c1 COLLATE RTRIM IN ()) ASC, 0X70ea20ea;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c1)))>(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ASC  NULLS FIRST, (vt0.c1 COLLATE RTRIM IN ()) ASC, 0X70ea20ea);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))) AND (x'')) WHERE ((((vt1.c1))=((vt0.c0))) COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1))==((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))) AND (x'')) ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))) AND (x'')) WHERE ((((vt1.c1))=((vt0.c0))) COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1))==((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))) AND (x'')) ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))) AND (x'')) WHERE ((((vt1.c1))=((vt0.c0))) COLLATE NOCASE) ORDER BY vt0.c1  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE NULL END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE NULL END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE NULL END)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.7937571979627226);
SELECT SUM(count) FROM (SELECT ((0.7937571979627226) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.7937571979627226);
SELECT SUM(count) FROM (SELECT ((0.7937571979627226) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.7937571979627226);
SELECT * FROM vt1 WHERE ((vt1.c0 IN (vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN (vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN (vt1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c0)-(vt1.c0)) COLLATE NOCASE) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c0)-(vt1.c0)) COLLATE NOCASE) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((vt0.c0)-(vt1.c0)) COLLATE NOCASE) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN vt1.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c1))))-(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC  NULLS LAST, (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<(CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c1))))-(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC  NULLS LAST, (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<(CHANGES()))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c1))))-(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC  NULLS LAST, (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<(CHANGES()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c1))))-(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC  NULLS LAST, (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<(CHANGES()))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c1))))-(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT NULL) ASC  NULLS LAST, (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<(CHANGES()))  NULLS LAST;
SELECT * FROM vt1 WHERE ('-1405231801') ORDER BY ((-9223372036854775808)==((+ (vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c1)AND((((vt1.c1))<((vt1.c0))))))OR((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, -1402084891, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1405231801') IS TRUE)  as count FROM vt1 ORDER BY ((-9223372036854775808)==((+ (vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c1)AND((((vt1.c1))<((vt1.c0))))))OR((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, -1402084891, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c1))))) DESC);
SELECT * FROM vt1 WHERE ('-1405231801') ORDER BY ((-9223372036854775808)==((+ (vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c1)AND((((vt1.c1))<((vt1.c0))))))OR((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, -1402084891, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1405231801') IS TRUE)  as count FROM vt1 ORDER BY ((-9223372036854775808)==((+ (vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c1)AND((((vt1.c1))<((vt1.c0))))))OR((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, -1402084891, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c1))))) DESC);
SELECT * FROM vt1 WHERE ('-1405231801') ORDER BY ((-9223372036854775808)==((+ (vt1.c0)))) DESC  NULLS FIRST, ((((vt1.c1)AND((((vt1.c1))<((vt1.c0))))))OR((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, -1402084891, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c1))))) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0))IS NOT(x'0a7a')));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, vt1.c0))IS NOT(x'0a7a'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0))IS NOT(x'0a7a')));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, vt1.c0))IS NOT(x'0a7a'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0))IS NOT(x'0a7a')));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) THEN ((vt0.c1)>=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) THEN ((vt0.c1)>=(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) THEN ((vt0.c1)>=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) THEN ((vt0.c1)>=(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) THEN ((vt0.c1)>=(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((0.7572356065716158 IN (((vt0.c1)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((0.7572356065716158 IN (((vt0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((0.7572356065716158 IN (((vt0.c1)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((0.7572356065716158 IN (((vt0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((0.7572356065716158 IN (((vt0.c1)>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('0.22610887525501044');
SELECT SUM(count) FROM (SELECT ALL (('0.22610887525501044') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('0.22610887525501044');
SELECT SUM(count) FROM (SELECT ALL (('0.22610887525501044') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('0.22610887525501044');
SELECT ALL COUNT(*) FROM vt1 WHERE (0x121ab10a);
SELECT SUM(count) FROM (SELECT ((0X121ab10a) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0x121ab10a);
SELECT SUM(count) FROM (SELECT ((0X121ab10a) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0x121ab10a);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (((CAST('[{' AS REAL)) BETWEEN ((NOT (vt1.c0))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 END))) ORDER BY ((vt1.c1) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST('[{' AS REAL)) BETWEEN ((NOT (vt1.c0))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (((CAST('[{' AS REAL)) BETWEEN ((NOT (vt1.c0))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 END))) ORDER BY ((vt1.c1) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((CAST('[{' AS REAL)) BETWEEN ((NOT (vt1.c0))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (((CAST('[{' AS REAL)) BETWEEN ((NOT (vt1.c0))) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 END))) ORDER BY ((vt1.c1) ISNULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1 IN ()))>=((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))>=((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1 IN ()))>=((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN ()))>=((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1 IN ()))>=((+ (vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((NULL)OR(vt1.c0)) AS NUMERIC)) ORDER BY json_quote(UNICODE(vt0.c0)) ASC, ((TYPEOF(vt0.c1)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_quote(UNICODE(vt0.c0)) ASC, ((TYPEOF(vt0.c1)) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((NULL)OR(vt1.c0)) AS NUMERIC)) ORDER BY json_quote(UNICODE(vt0.c0)) ASC, ((TYPEOF(vt0.c1)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL)OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_quote(UNICODE(vt0.c0)) ASC, ((TYPEOF(vt0.c1)) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((NULL)OR(vt1.c0)) AS NUMERIC)) ORDER BY json_quote(UNICODE(vt0.c0)) ASC, ((TYPEOF(vt0.c1)) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (ABS((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (ABS((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (ABS((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(NULL))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(NULL))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(NULL))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(NULL))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(NULL))) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((x'')>=(x'')))) AND ((CAST(vt0.c0 AS BLOB))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((x'')>=(x'')))) AND ((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((x'')>=(x'')))) AND ((CAST(vt0.c0 AS BLOB))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((x'')>=(x'')))) AND ((CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((x'')>=(x'')))) AND ((CAST(vt0.c0 AS BLOB))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)AND(vt1.c0)))OR(0xffffffff88bde999)))AND(vt1.c1)))OR(vt0.c1)))))OR(INSTR(vt0.c1, vt0.c0)))) ORDER BY (((vt1.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)AND(vt1.c0)))OR(0xffffffff88bde999)))AND(vt1.c1)))OR(vt0.c1)))))OR(INSTR(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM ORDER BY (((vt1.c0) NOTNULL) IN ()));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)AND(vt1.c0)))OR(0xffffffff88bde999)))AND(vt1.c1)))OR(vt0.c1)))))OR(INSTR(vt0.c1, vt0.c0)))) ORDER BY (((vt1.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)AND(vt1.c0)))OR(0xffffffff88bde999)))AND(vt1.c1)))OR(vt0.c1)))))OR(INSTR(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM ORDER BY (((vt1.c0) NOTNULL) IN ()));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE RTRIM WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)AND(vt1.c0)))OR(0xffffffff88bde999)))AND(vt1.c1)))OR(vt0.c1)))))OR(INSTR(vt0.c1, vt0.c0)))) ORDER BY (((vt1.c0) NOTNULL) IN ());
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END IN (x''))) ORDER BY vt1.c1, vt1.c1 ASC  NULLS FIRST, (+ (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END IN (x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1, vt1.c1 ASC  NULLS FIRST, (+ (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END IN (x''))) ORDER BY vt1.c1, vt1.c1 ASC  NULLS FIRST, (+ (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END IN (x''))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1, vt1.c1 ASC  NULLS FIRST, (+ (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END IN (x''))) ORDER BY vt1.c1, vt1.c1 ASC  NULLS FIRST, (+ (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1 COLLATE BINARY) ISNULL)) ORDER BY (((vt1.c1)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) AND (((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) AND (((NOT (vt1.c1))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1 COLLATE BINARY) ISNULL)) ORDER BY (((vt1.c1)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) AND (((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) AND (((NOT (vt1.c1))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1 COLLATE BINARY) ISNULL)) ORDER BY (((vt1.c1)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) AND (((NOT (vt1.c1)))));
SELECT * FROM vt1, vt0 WHERE (((UPPER(vt1.c1))IS NOT(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt1.c1))IS NOT(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((UPPER(vt1.c1))IS NOT(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt1.c1))IS NOT(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((UPPER(vt1.c1))IS NOT(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY vt1.c0  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)) AS INTEGER)) ORDER BY (((NOT (vt0.c1)))*(HEX(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt0.c1)))*(HEX(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)) AS INTEGER)) ORDER BY (((NOT (vt0.c1)))*(HEX(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt0.c1)))*(HEX(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)) AS INTEGER)) ORDER BY (((NOT (vt0.c1)))*(HEX(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((((((LOWER(vt1.c1))AND(((vt1.c0)GLOB(vt1.c1)))))AND(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(vt1.c1))AND(((vt1.c0)GLOB(vt1.c1)))))AND(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((LOWER(vt1.c1))AND(((vt1.c0)GLOB(vt1.c1)))))AND(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(vt1.c1))AND(((vt1.c0)GLOB(vt1.c1)))))AND(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((LOWER(vt1.c1))AND(((vt1.c0)GLOB(vt1.c1)))))AND(((vt1.c0)+(vt1.c1)))))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) IS FALSE))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((LENGTH(vt1.c0) IN ())) ORDER BY CAST(vt1.c0 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((LENGTH(vt1.c0) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c0 AS BLOB) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((LENGTH(vt1.c0) IN ())) ORDER BY CAST(vt1.c0 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((LENGTH(vt1.c0) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c0 AS BLOB) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((LENGTH(vt1.c0) IN ())) ORDER BY CAST(vt1.c0 AS BLOB) DESC;
SELECT * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))*(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ ((NOT (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c1 END IN ())) ORDER BY (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c1 END IN ())) ORDER BY (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c1 END IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c1 END IN ())) ORDER BY (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND (CAST(0.7303765974226177 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND (CAST(0.7303765974226177 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND (CAST(0.7303765974226177 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND (CAST(0.7303765974226177 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND (CAST(0.7303765974226177 AS BLOB))));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))<=(((vt1.c1) ISNULL)))) ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))<=(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))<=(((vt1.c1) ISNULL)))) ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))<=(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))<=(((vt1.c1) ISNULL)))) ORDER BY CAST(((vt1.c0) IS TRUE) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((((vt0.c0)%(vt0.c1)))))) ORDER BY 1320705905 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))>((((vt0.c0)%(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY 1320705905 COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY))>((((vt0.c0)%(vt0.c1)))))) ORDER BY 1320705905 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))>((((vt0.c0)%(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY 1320705905 COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((((NULL)OR(vt0.c1)))OR(vt0.c1)))) AND ((((x'bb56')<=(vt0.c1))))) WHERE ((((vt1.c1 IN ()))<<(HEX(vt1.c1)))) ORDER BY (~ (vt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))<<(HEX(vt1.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((((NULL)OR(vt0.c1)))OR(vt0.c1)))) AND ((((x'bb56')<=(vt0.c1))))) ORDER BY (~ (vt1.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((((NULL)OR(vt0.c1)))OR(vt0.c1)))) AND ((((x'bb56')<=(vt0.c1))))) WHERE ((((vt1.c1 IN ()))<<(HEX(vt1.c1)))) ORDER BY (~ (vt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))<<(HEX(vt1.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((((NULL)OR(vt0.c1)))OR(vt0.c1)))) AND ((((x'bb56')<=(vt0.c1))))) ORDER BY (~ (vt1.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((((((NULL)OR(vt0.c1)))OR(vt0.c1)))) AND ((((x'bb56')<=(vt0.c1))))) WHERE ((((vt1.c1 IN ()))<<(HEX(vt1.c1)))) ORDER BY (~ (vt1.c1)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (((vt1.c0))!=((vt1.c1)))  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.7031327184090722) THEN (~ (x'')) ELSE UPPER(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0))!=((vt1.c1)))  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.7031327184090722) THEN (~ (x'')) ELSE UPPER(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (((vt1.c0))!=((vt1.c1)))  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.7031327184090722) THEN (~ (x'')) ELSE UPPER(DISTINCT vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0))!=((vt1.c1)))  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.7031327184090722) THEN (~ (x'')) ELSE UPPER(DISTINCT vt0.c0) END) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE (((vt1.c0))!=((vt1.c1)))  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.7031327184090722) THEN (~ (x'')) ELSE UPPER(DISTINCT vt0.c0) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC)) ORDER BY (~ (MAX(vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (MAX(vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC)) ORDER BY (~ (MAX(vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (MAX(vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC)) ORDER BY (~ (MAX(vt0.c0, vt0.c1)));
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE BINARY)OR(vt0.c0)))AND(((vt1.c1) NOT NULL)))) ORDER BY (((vt0.c1)) BETWEEN ((TYPEOF(vt0.c0))) AND ((vt1.c0)))  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt1.c0) NOTNULL)) AND (NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE BINARY)OR(vt0.c0)))AND(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) BETWEEN ((TYPEOF(vt0.c0))) AND ((vt1.c0)))  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt1.c0) NOTNULL)) AND (NULL)));
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE BINARY)OR(vt0.c0)))AND(((vt1.c1) NOT NULL)))) ORDER BY (((vt0.c1)) BETWEEN ((TYPEOF(vt0.c0))) AND ((vt1.c0)))  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt1.c0) NOTNULL)) AND (NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE BINARY)OR(vt0.c0)))AND(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1)) BETWEEN ((TYPEOF(vt0.c0))) AND ((vt1.c0)))  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt1.c0) NOTNULL)) AND (NULL)));
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE BINARY)OR(vt0.c0)))AND(((vt1.c1) NOT NULL)))) ORDER BY (((vt0.c1)) BETWEEN ((TYPEOF(vt0.c0))) AND ((vt1.c0)))  NULLS LAST, ((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt1.c0) NOTNULL)) AND (NULL));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((('-1654486268')OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY WHERE (((((vt0.c0) NOTNULL))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4452035969756456))))) ORDER BY ((LIKELY(DISTINCT vt1.c1)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4452035969756456))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((('-1654486268')OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY ORDER BY ((LIKELY(DISTINCT vt1.c1)) IS FALSE));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((('-1654486268')OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY WHERE (((((vt0.c0) NOTNULL))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4452035969756456))))) ORDER BY ((LIKELY(DISTINCT vt1.c1)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4452035969756456))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((('-1654486268')OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY ORDER BY ((LIKELY(DISTINCT vt1.c1)) IS FALSE));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((('-1654486268')OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY WHERE (((((vt0.c0) NOTNULL))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.4452035969756456))))) ORDER BY ((LIKELY(DISTINCT vt1.c1)) IS FALSE);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))) WHERE (((((((((LIKELY(vt0.c0))OR((vt1.c0 IN ()))))OR((((vt1.c0, vt1.c0, vt1.c0, vt0.c1, vt0.c1))>=((vt1.c0, vt0.c0, vt0.c1, vt1.c1, vt0.c0))))))OR((((vt0.c1))=((vt1.c0))))))OR(((vt0.c1)<=(vt1.c0))))) ORDER BY (2.0487938E9 IN (((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELY(vt0.c0))OR((vt1.c0 IN ()))))OR((((vt1.c0, vt1.c0, vt1.c0, vt0.c1, vt0.c1))>=((vt1.c0, vt0.c0, vt0.c1, vt1.c1, vt0.c0))))))OR((((vt0.c1))==((vt1.c0))))))OR(((vt0.c1)<=(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))) ORDER BY (2.0487938E9 IN (((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))) WHERE (((((((((LIKELY(vt0.c0))OR((vt1.c0 IN ()))))OR((((vt1.c0, vt1.c0, vt1.c0, vt0.c1, vt0.c1))>=((vt1.c0, vt0.c0, vt0.c1, vt1.c1, vt0.c0))))))OR((((vt0.c1))=((vt1.c0))))))OR(((vt0.c1)<=(vt1.c0))))) ORDER BY (2.0487938E9 IN (((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LIKELY(vt0.c0))OR((vt1.c0 IN ()))))OR((((vt1.c0, vt1.c0, vt1.c0, vt0.c1, vt0.c1))>=((vt1.c0, vt0.c0, vt0.c1, vt1.c1, vt0.c0))))))OR((((vt0.c1))==((vt1.c0))))))OR(((vt0.c1)<=(vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))) ORDER BY (2.0487938E9 IN (((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((((((((vt0.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))) WHERE (((((((((LIKELY(vt0.c0))OR((vt1.c0 IN ()))))OR((((vt1.c0, vt1.c0, vt1.c0, vt0.c1, vt0.c1))>=((vt1.c0, vt0.c0, vt0.c1, vt1.c1, vt0.c0))))))OR((((vt0.c1))=((vt1.c0))))))OR(((vt0.c1)<=(vt1.c0))))) ORDER BY (2.0487938E9 IN (((vt1.c0) NOTNULL)));
SELECT ALL * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(x'ab84')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((((0.9144463514202994)AND(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) END) ORDER BY ((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ASC, ((((CAST(vt0.c1 AS NUMERIC))AND(vt0.c1)))AND(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)AND(x'ab84')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((((0.9144463514202994)AND(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ASC, ((((CAST(vt0.c1 AS NUMERIC))AND(vt0.c1)))AND(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(x'ab84')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((((0.9144463514202994)AND(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) END) ORDER BY ((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ASC, ((((CAST(vt0.c1 AS NUMERIC))AND(vt0.c1)))AND(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)AND(x'ab84')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((((0.9144463514202994)AND(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ASC, ((((CAST(vt0.c1 AS NUMERIC))AND(vt0.c1)))AND(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(x'ab84')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((((0.9144463514202994)AND(vt0.c0)))AND(vt0.c1)) THEN (NOT (vt0.c1)) END) ORDER BY ((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ASC, ((((CAST(vt0.c1 AS NUMERIC))AND(vt0.c1)))AND(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))LIKE(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((vt0.c0))))LIKE(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))LIKE(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((vt0.c0))))LIKE(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0))))LIKE(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ('0.7154321571005612');
SELECT SUM(count) FROM (SELECT ALL (('0.7154321571005612') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('0.7154321571005612');
SELECT SUM(count) FROM (SELECT ALL (('0.7154321571005612') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('0.7154321571005612');
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE))+((vt0.c0 IN ())))) ORDER BY COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ())));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE))+((vt0.c0 IN ())))) ORDER BY COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE))+((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ())));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE))+((vt0.c0 IN ())))) ORDER BY COALESCE(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER)) IS FALSE) WHERE (((vt1.c1 COLLATE NOCASE)LIKE((((vt0.c1, vt1.c0, vt1.c0))>=((vt0.c1, vt1.c0, vt1.c1)))))) ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE)LIKE((((vt0.c1, vt1.c0, vt1.c0))>=((vt0.c1, vt1.c0, vt1.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER)) IS FALSE) ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER)) IS FALSE) WHERE (((vt1.c1 COLLATE NOCASE)LIKE((((vt0.c1, vt1.c0, vt1.c0))>=((vt0.c1, vt1.c0, vt1.c1)))))) ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE)LIKE((((vt0.c1, vt1.c0, vt1.c0))>=((vt0.c1, vt1.c0, vt1.c1)))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER)) IS FALSE) ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER)) IS FALSE) WHERE (((vt1.c1 COLLATE NOCASE)LIKE((((vt0.c1, vt1.c0, vt1.c0))>=((vt0.c1, vt1.c0, vt1.c1)))))) ORDER BY (((vt0.c0 IN ())) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt1.c1 AS NUMERIC))AND(((NULL) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY LIKE(((vt1.c1)<<(vt0.c1)), CAST(vt0.c0 AS BLOB), 'e') DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c1 AS NUMERIC))AND(((NULL) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKE(((vt1.c1)<<(vt0.c1)), CAST(vt0.c0 AS BLOB), 'e') DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt1.c1 AS NUMERIC))AND(((NULL) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY LIKE(((vt1.c1)<<(vt0.c1)), CAST(vt0.c0 AS BLOB), 'e') DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c1 AS NUMERIC))AND(((NULL) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKE(((vt1.c1)<<(vt0.c1)), CAST(vt0.c0 AS BLOB), 'e') DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((CAST(vt1.c1 AS NUMERIC))AND(((NULL) BETWEEN (vt1.c1) AND (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY LIKE(((vt1.c1)<<(vt0.c1)), CAST(vt0.c0 AS BLOB), 'e') DESC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '1339122884' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '1339122884' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '1339122884' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '1339122884' END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE '1339122884' END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c0) AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c1)))AND('')))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((((((vt1.c0, vt1.c1, vt1.c0, 2048793800, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0, vt1.c0, NULL))))OR(vt1.c0 COLLATE RTRIM)))AND(vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c1)))AND('')))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0, vt1.c1, vt1.c0, 2048793800, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0, vt1.c0, NULL))))OR(vt1.c0 COLLATE RTRIM)))AND(vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c1)))AND('')))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((((((vt1.c0, vt1.c1, vt1.c0, 2048793800, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0, vt1.c0, NULL))))OR(vt1.c0 COLLATE RTRIM)))AND(vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c1)))AND('')))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0, vt1.c1, vt1.c0, 2048793800, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0, vt1.c0, NULL))))OR(vt1.c0 COLLATE RTRIM)))AND(vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c1)))AND('')))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((((((vt1.c0, vt1.c1, vt1.c0, 2048793800, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c1, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0, vt1.c0, NULL))))OR(vt1.c0 COLLATE RTRIM)))AND(vt1.c0 COLLATE BINARY));
SELECT ALL * FROM vt1 WHERE (((NULL) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c1)))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c1)))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c1)))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c1)))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c1)))) AND ((vt1.c0 IN ()))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((x'', ((vt0.c0)<(NULL)), ((x'') BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), (vt0.c0 IN ()))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c1), ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '-1146204543', vt0.c0)) AND ((2.036381811E9, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c1, 'x')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)OR(vt0.c1)), ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((x'', ((vt0.c0)<(NULL)), ((x'') BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), (vt0.c0 IN ()))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c1), ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '-1146204543', vt0.c0)) AND ((2.036381811E9, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1, 'x')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)OR(vt0.c1)), ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), vt0.c1))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((x'', ((vt0.c0)<(NULL)), ((x'') BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), (vt0.c0 IN ()))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c1), ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '-1146204543', vt0.c0)) AND ((2.036381811E9, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c1, 'x')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)OR(vt0.c1)), ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((x'', ((vt0.c0)<(NULL)), ((x'') BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), (vt0.c0 IN ()))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c1), ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '-1146204543', vt0.c0)) AND ((2.036381811E9, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1, 'x')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)OR(vt0.c1)), ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), vt0.c1))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((x'', ((vt0.c0)<(NULL)), ((x'') BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))), (vt0.c0 IN ()))) AND ((SQLITE_COMPILEOPTION_GET(vt0.c1), ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '-1146204543', vt0.c0)) AND ((2.036381811E9, vt0.c1, vt0.c0))), (vt0.c1 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c1, 'x')) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c0)OR(vt0.c1)), ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)), vt0.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT));
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT));
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, '-1402084891', vt1.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (0.9982972023619289) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), '2123185646')) AND ((CAST(vt1.c0 AS TEXT), (vt1.c1 IN ()), ((vt1.c1)IS(vt1.c1)))))) ORDER BY vt1.c1 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, '-1402084891', vt1.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (0.9982972023619289) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), '2123185646')) AND ((CAST(vt1.c0 AS TEXT), (vt1.c1 IN ()), ((vt1.c1)IS(vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, '-1402084891', vt1.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (0.9982972023619289) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), '2123185646')) AND ((CAST(vt1.c0 AS TEXT), (vt1.c1 IN ()), ((vt1.c1)IS(vt1.c1)))))) ORDER BY vt1.c1 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, '-1402084891', vt1.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (0.9982972023619289) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), '2123185646')) AND ((CAST(vt1.c0 AS TEXT), (vt1.c1 IN ()), ((vt1.c1)IS(vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, '-1402084891', vt1.c1)) NOT BETWEEN ((((vt1.c0) BETWEEN (0.9982972023619289) AND (vt1.c0)), ROUND(vt1.c0, vt1.c0), '2123185646')) AND ((CAST(vt1.c0 AS TEXT), (vt1.c1 IN ()), ((vt1.c1)IS(vt1.c1)))))) ORDER BY vt1.c1 COLLATE RTRIM ASC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), CASE WHEN '-946324029' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))=(((((vt0.c1, 0.23732525997620757, ' +X*'))<=((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (0.22596236528767855) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))))) ORDER BY ((((((((vt0.c1)OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0, NULL, vt0.c1))))))OR(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), CASE WHEN '-946324029' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))=(((((vt0.c1, 0.23732525997620757, ' +X*'))<=((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (0.22596236528767855) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0, NULL, vt0.c1))))))OR(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), CASE WHEN '-946324029' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))=(((((vt0.c1, 0.23732525997620757, ' +X*'))<=((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (0.22596236528767855) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))))) ORDER BY ((((((((vt0.c1)OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0, NULL, vt0.c1))))))OR(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), CASE WHEN '-946324029' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))=(((((vt0.c1, 0.23732525997620757, ' +X*'))<=((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (0.22596236528767855) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0, NULL, vt0.c1))))))OR(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), CASE WHEN '-946324029' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))=(((((vt0.c1, 0.23732525997620757, ' +X*'))<=((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c1) NOT BETWEEN (0.22596236528767855) AND (vt0.c1)), ((vt0.c0)<<(vt0.c1)))))) ORDER BY ((((((((vt0.c1)OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0, NULL, vt0.c1))))))OR(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0)<<(vt0.c0)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) ISNULL), CAST(vt1.c0 AS TEXT), ((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))<((((vt1.c0)%(vt1.c1)), HEX(vt1.c0), vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) ISNULL), CAST(vt1.c0 AS TEXT), ((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))<((((vt1.c0)%(vt1.c1)), HEX(vt1.c0), vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) ISNULL), CAST(vt1.c0 AS TEXT), ((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))<((((vt1.c0)%(vt1.c1)), HEX(vt1.c0), vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) ISNULL), CAST(vt1.c0 AS TEXT), ((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))<((((vt1.c0)%(vt1.c1)), HEX(vt1.c0), vt1.c1)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) ISNULL), CAST(vt1.c0 AS TEXT), ((((vt1.c1)AND(vt1.c1)))AND(vt1.c0))))<((((vt1.c0)%(vt1.c1)), HEX(vt1.c0), vt1.c1))));
SELECT ALL * FROM vt1, vt0 WHERE (LOWER(DISTINCT ((vt1.c0)/(vt0.c0)))) ORDER BY (NOT (vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt1.c0)/(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (vt0.c1)) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (LOWER(DISTINCT ((vt1.c0)/(vt0.c0)))) ORDER BY (NOT (vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt1.c0)/(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (vt0.c1)) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (LOWER(DISTINCT ((vt1.c0)/(vt0.c0)))) ORDER BY (NOT (vt0.c1)) ASC;
SELECT * FROM vt0 WHERE ((((((~ (vt0.c0)))OR(TYPEOF(vt0.c0))))OR(SQLITE_COMPILEOPTION_USED(vt0.c1)))) ORDER BY ((CAST(vt0.c0 AS REAL))%(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))OR(TYPEOF(vt0.c0))))OR(SQLITE_COMPILEOPTION_USED(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))%(NULL))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((~ (vt0.c0)))OR(TYPEOF(vt0.c0))))OR(SQLITE_COMPILEOPTION_USED(vt0.c1)))) ORDER BY ((CAST(vt0.c0 AS REAL))%(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))OR(TYPEOF(vt0.c0))))OR(SQLITE_COMPILEOPTION_USED(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS REAL))%(NULL))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((~ (vt0.c0)))OR(TYPEOF(vt0.c0))))OR(SQLITE_COMPILEOPTION_USED(vt0.c1)))) ORDER BY ((CAST(vt0.c0 AS REAL))%(NULL))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((((('')AND(vt0.c1)))OR(vt1.c1)))>=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((('')AND(vt0.c1)))OR(vt1.c1)))>=(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((('')AND(vt0.c1)))OR(vt1.c1)))>=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((('')AND(vt0.c1)))OR(vt1.c1)))>=(vt0.c1))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((('')AND(vt0.c1)))OR(vt1.c1)))>=(vt0.c1)));
SELECT * FROM vt1, vt0 WHERE ((((- (vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (UNLIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((- (vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (UNLIKELY(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (UNLIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((- (vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (UNLIKELY(vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)<=(vt0.c1)) IN ()) DESC  NULLS LAST, UNICODE(((((((((x'')OR(vt1.c0)))AND(vt1.c1)))AND(vt0.c1)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)<=(vt0.c1)) IN ()) DESC  NULLS LAST, UNICODE(((((((((x'')OR(vt1.c0)))AND(vt1.c1)))AND(vt0.c1)))AND(vt0.c1))));
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)<=(vt0.c1)) IN ()) DESC  NULLS LAST, UNICODE(((((((((x'')OR(vt1.c0)))AND(vt1.c1)))AND(vt0.c1)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)<=(vt0.c1)) IN ()) DESC  NULLS LAST, UNICODE(((((((((x'')OR(vt1.c0)))AND(vt1.c1)))AND(vt0.c1)))AND(vt0.c1))));
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0)<=(vt0.c1)) IN ()) DESC  NULLS LAST, UNICODE(((((((((x'')OR(vt1.c0)))AND(vt1.c1)))AND(vt0.c1)))AND(vt0.c1)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((vt1.c1)OR(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)))>=(((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)))>=(((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((vt1.c1)OR(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)))>=(((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)))>=(((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((vt1.c1)OR(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(vt0.c1)))>=(((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT * FROM vt0, vt1 WHERE (CAST((vt1.c1 IN (vt1.c0, vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c1 IN (vt1.c0, vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST((vt1.c1 IN (vt1.c0, vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c1 IN (vt1.c0, vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST((vt1.c1 IN (vt1.c0, vt0.c0)) AS REAL));
SELECT * FROM vt1 WHERE (x'') ORDER BY (((vt1.c1 IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ())) ISNULL)  NULLS FIRST);
SELECT * FROM vt1 WHERE (x'') ORDER BY (((vt1.c1 IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ())) ISNULL)  NULLS FIRST);
SELECT * FROM vt1 WHERE (x'') ORDER BY (((vt1.c1 IN ())) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt1.c0 IN ())))) ORDER BY (~ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt1.c0 IN ())))) ORDER BY (~ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))AND((vt1.c0 IN ())))) ORDER BY (~ (vt1.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt0.c1 IN ())))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS INTEGER)  NULLS FIRST, '' COLLATE RTRIM DESC  NULLS FIRST, ((x'')>>(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(-3.7418162E8)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS INTEGER)  NULLS FIRST, '' COLLATE RTRIM DESC  NULLS FIRST, ((x'')>>(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(-3.7418162E8)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt0.c1 IN ())))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS INTEGER)  NULLS FIRST, '' COLLATE RTRIM DESC  NULLS FIRST, ((x'')>>(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(-3.7418162E8)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS INTEGER)  NULLS FIRST, '' COLLATE RTRIM DESC  NULLS FIRST, ((x'')>>(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(-3.7418162E8)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) BETWEEN (((vt0.c1)OR(vt0.c0))) AND ((vt0.c1 IN ())))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS INTEGER)  NULLS FIRST, '' COLLATE RTRIM DESC  NULLS FIRST, ((x'')>>(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(-3.7418162E8)))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (1.098528018E9 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((1.098528018E9 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (1.098528018E9 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((1.098528018E9 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (1.098528018E9 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c1)-(vt0.c0)) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c1)>=(x'3ee11a5a')) END WHERE (((vt0.c1 COLLATE NOCASE)>=('~i'))) ORDER BY ((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1 COLLATE RTRIM)) ASC, (~ (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))), ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))GLOB(((vt0.c0)IS NOT(x''))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>=('~i'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c1)-(vt0.c0)) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c1)>=(x'3ee11a5a')) END ORDER BY ((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1 COLLATE RTRIM)) ASC, (~ (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))), ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))GLOB(((vt0.c0)IS NOT(x'')))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c1)-(vt0.c0)) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c1)>=(x'3ee11a5a')) END WHERE (((vt0.c1 COLLATE NOCASE)>=('~i'))) ORDER BY ((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1 COLLATE RTRIM)) ASC, (~ (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))), ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))GLOB(((vt0.c0)IS NOT(x''))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>=('~i'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c1)-(vt0.c0)) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c1)>=(x'3ee11a5a')) END ORDER BY ((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1 COLLATE RTRIM)) ASC, (~ (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))), ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))GLOB(((vt0.c0)IS NOT(x'')))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c1)-(vt0.c0)) THEN CAST(vt1.c1 AS REAL) ELSE ((vt1.c1)>=(x'3ee11a5a')) END WHERE (((vt0.c1 COLLATE NOCASE)>=('~i'))) ORDER BY ((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))AND(vt1.c1 COLLATE RTRIM)) ASC, (~ (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))), ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))GLOB(((vt0.c0)IS NOT(x''))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) ORDER BY ((((NULL) IS FALSE))OR(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((NULL) IS FALSE))OR(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) ORDER BY ((((NULL) IS FALSE))OR(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((NULL) IS FALSE))OR(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0)OR(x'')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) NOTNULL)) ORDER BY ((((NULL) IS FALSE))OR(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.8983414268400801);
SELECT SUM(count) FROM (SELECT ALL ((0.8983414268400801) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.8983414268400801);
SELECT SUM(count) FROM (SELECT ALL ((0.8983414268400801) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.8983414268400801);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))&(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))&(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c1 END))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))&(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))&(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c1 END))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CAST(vt0.c0 AS REAL) AS BLOB)) ORDER BY (((vt0.c0 IN (vt0.c1, vt0.c0)))&(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c1 END))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))<<(((vt0.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))<<(((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))<<(((vt0.c1)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))<<(((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))<<(((vt0.c1)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt1.c0), vt1.c1))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt1.c1)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt1.c0), vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt1.c0), vt1.c1))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((vt1.c1)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt1.c0), vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)LIKE(vt1.c0)) IN (LIKELY(DISTINCT vt1.c0), vt1.c1))) ORDER BY x'';
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)AND(((vt1.c0)<=(vt1.c1)))))AND(1894392042)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(((vt1.c0)<=(vt1.c1)))))AND(1894392042))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)AND(((vt1.c0)<=(vt1.c1)))))AND(1894392042)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(((vt1.c0)<=(vt1.c1)))))AND(1894392042))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)AND(((vt1.c0)<=(vt1.c1)))))AND(1894392042)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))-(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))-(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))-(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))-(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))-(x'')));
SELECT * FROM vt1, vt0 WHERE (((((NULL) ISNULL))OR(((vt1.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) ISNULL))OR(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((NULL) ISNULL))OR(((vt1.c0)<<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) ISNULL))OR(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((NULL) ISNULL))OR(((vt1.c0)<<(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), vt1.c1 COLLATE BINARY))!=((((vt0.c1)>(vt0.c0)), vt1.c1, SQLITE_COMPILEOPTION_USED(vt1.c1))))) ORDER BY CASE x''  WHEN vt1.c1 THEN (+ (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), vt1.c1 COLLATE BINARY))<>((((vt0.c1)>(vt0.c0)), vt1.c1, SQLITE_COMPILEOPTION_USED(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE x''  WHEN vt1.c1 THEN (+ (vt0.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), vt1.c1 COLLATE BINARY))!=((((vt0.c1)>(vt0.c0)), vt1.c1, SQLITE_COMPILEOPTION_USED(vt1.c1))))) ORDER BY CASE x''  WHEN vt1.c1 THEN (+ (vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), vt1.c1 COLLATE BINARY))<>((((vt0.c1)>(vt0.c0)), vt1.c1, SQLITE_COMPILEOPTION_USED(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE x''  WHEN vt1.c1 THEN (+ (vt0.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), vt1.c1 COLLATE BINARY))!=((((vt0.c1)>(vt0.c0)), vt1.c1, SQLITE_COMPILEOPTION_USED(vt1.c1))))) ORDER BY CASE x''  WHEN vt1.c1 THEN (+ (vt0.c0)) END;
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c1, vt1.c0, '깼wJUVfIv')) BETWEEN ((vt0.c1, vt0.c1, vt1.c1)) AND ((vt1.c1, x'', vt1.c1))))+((('-946324029')AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0 IN (vt0.c1)), CAST(vt1.c1 AS NUMERIC), (((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))))>=(((((vt0.c0, NULL, vt1.c1))=((vt0.c0, vt0.c0, NULL))), -1738129970, IFNULL(vt0.c1, vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c1, vt1.c0, '깼wJUVfIv')) BETWEEN ((vt0.c1, vt0.c1, vt1.c1)) AND ((vt1.c1, x'', vt1.c1))))+((('-946324029')AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0 IN (vt0.c1)), CAST(vt1.c1 AS NUMERIC), (((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))))>=(((((vt0.c0, NULL, vt1.c1))==((vt0.c0, vt0.c0, NULL))), -1738129970, IFNULL(vt0.c1, vt1.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c1, vt1.c0, '깼wJUVfIv')) BETWEEN ((vt0.c1, vt0.c1, vt1.c1)) AND ((vt1.c1, x'', vt1.c1))))+((('-946324029')AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0 IN (vt0.c1)), CAST(vt1.c1 AS NUMERIC), (((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))))>=(((((vt0.c0, NULL, vt1.c1))=((vt0.c0, vt0.c0, NULL))), -1738129970, IFNULL(vt0.c1, vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c1, vt1.c0, '깼wJUVfIv')) BETWEEN ((vt0.c1, vt0.c1, vt1.c1)) AND ((vt1.c1, x'', vt1.c1))))+((('-946324029')AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0 IN (vt0.c1)), CAST(vt1.c1 AS NUMERIC), (((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))))>=(((((vt0.c0, NULL, vt1.c1))==((vt0.c0, vt0.c0, NULL))), -1738129970, IFNULL(vt0.c1, vt1.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c1, vt1.c0, '깼wJUVfIv')) BETWEEN ((vt0.c1, vt0.c1, vt1.c1)) AND ((vt1.c1, x'', vt1.c1))))+((('-946324029')AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0 IN (vt0.c1)), CAST(vt1.c1 AS NUMERIC), (((vt0.c1)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))))>=(((((vt0.c0, NULL, vt1.c1))=((vt0.c0, vt0.c0, NULL))), -1738129970, IFNULL(vt0.c1, vt1.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (CAST((((0.9071505408015189))<>((vt1.c0))) AS NUMERIC)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR(vt1.c0 COLLATE BINARY)))AND(UPPER(DISTINCT vt1.c1))) ASC  NULLS FIRST, CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) AS BLOB), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c1)|(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.9071505408015189))!=((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR(vt1.c0 COLLATE BINARY)))AND(UPPER(DISTINCT vt1.c1))) ASC  NULLS FIRST, CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) AS BLOB), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c1)|(vt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CAST((((0.9071505408015189))<>((vt1.c0))) AS NUMERIC)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR(vt1.c0 COLLATE BINARY)))AND(UPPER(DISTINCT vt1.c1))) ASC  NULLS FIRST, CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) AS BLOB), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c1)|(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((0.9071505408015189))!=((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR(vt1.c0 COLLATE BINARY)))AND(UPPER(DISTINCT vt1.c1))) ASC  NULLS FIRST, CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) AS BLOB), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c1)|(vt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CAST((((0.9071505408015189))<>((vt1.c0))) AS NUMERIC)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)OR(vt1.c0 COLLATE BINARY)))AND(UPPER(DISTINCT vt1.c1))) ASC  NULLS FIRST, CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) AS BLOB), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c1)|(vt1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((TRIM(vt1.c1))AND((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c1))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((TRIM(vt1.c1))AND((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c1))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((TRIM(vt1.c1))AND((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'') ORDER BY '1320705905' DESC, TRIM(((vt0.c0)IS NOT(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 ORDER BY '1320705905' DESC, TRIM(((vt0.c0)IS NOT(vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'') ORDER BY '1320705905' DESC, TRIM(((vt0.c0)IS NOT(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 ORDER BY '1320705905' DESC, TRIM(((vt0.c0)IS NOT(vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (x'') ORDER BY '1320705905' DESC, TRIM(((vt0.c0)IS NOT(vt0.c1))) ASC;
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY ((vt1.c0) ISNULL)  NULLS LAST, UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY DESC  NULLS FIRST, CAST(vt1.c1 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) ISNULL)  NULLS LAST, UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY DESC  NULLS FIRST, CAST(vt1.c1 AS BLOB) ASC);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY ((vt1.c0) ISNULL)  NULLS LAST, UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY DESC  NULLS FIRST, CAST(vt1.c1 AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) ISNULL)  NULLS LAST, UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY DESC  NULLS FIRST, CAST(vt1.c1 AS BLOB) ASC);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY ((vt1.c0) ISNULL)  NULLS LAST, UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY DESC  NULLS FIRST, CAST(vt1.c1 AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c1) ISNULL))AND((((vt1.c1))>=(('RNᑈ'))))))OR(json_object(vt1.c1, vt0.c1, vt1.c0, '{cuFiW}'))))AND(NULL)))AND(CAST(vt0.c1 AS REAL))) WHERE (CASE (~ (vt0.c0))  WHEN CASE x'5017'  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN (vt0.c1 IN ()) ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN CASE x'5017'  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN (vt0.c1 IN ()) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c1) ISNULL))AND((((vt1.c1))>=(('RNᑈ'))))))OR(json_object(vt1.c1, vt0.c1, vt1.c0, '{cuFiW}'))))AND(NULL)))AND(CAST(vt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c1) ISNULL))AND((((vt1.c1))>=(('RNᑈ'))))))OR(json_object(vt1.c1, vt0.c1, vt1.c0, '{cuFiW}'))))AND(NULL)))AND(CAST(vt0.c1 AS REAL))) WHERE (CASE (~ (vt0.c0))  WHEN CASE x'5017'  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN (vt0.c1 IN ()) ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN CASE x'5017'  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN (vt0.c1 IN ()) ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c1) ISNULL))AND((((vt1.c1))>=(('RNᑈ'))))))OR(json_object(vt1.c1, vt0.c1, vt1.c0, '{cuFiW}'))))AND(NULL)))AND(CAST(vt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((((((vt0.c1) ISNULL))AND((((vt1.c1))>=(('RNᑈ'))))))OR(json_object(vt1.c1, vt0.c1, vt1.c0, '{cuFiW}'))))AND(NULL)))AND(CAST(vt0.c1 AS REAL))) WHERE (CASE (~ (vt0.c0))  WHEN CASE x'5017'  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END THEN (vt0.c1 IN ()) ELSE (NOT (vt1.c0)) END);
SELECT * FROM vt1, vt0 WHERE (0.8359521724005639);
SELECT SUM(count) FROM (SELECT ((0.8359521724005639) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.8359521724005639);
SELECT SUM(count) FROM (SELECT ((0.8359521724005639) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.8359521724005639);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0)<>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0)!=(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0)<>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0)!=(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((~ (vt0.c0)))))OR(((vt0.c0)<>(vt1.c1)))));
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE NULL END) ORDER BY ((vt0.c0)+(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE NULL END) ORDER BY ((vt0.c0)+(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE NULL END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN (vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE NULL END) ORDER BY ((vt0.c0)+(vt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((IFNULL(vt1.c0, vt0.c0)) ISNULL) WHERE (((((vt1.c0)OR(vt0.c0)))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt0.c0)))IS(vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((IFNULL(vt1.c0, vt0.c0)) ISNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((IFNULL(vt1.c0, vt0.c0)) ISNULL) WHERE (((((vt1.c0)OR(vt0.c0)))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt0.c0)))IS(vt0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((IFNULL(vt1.c0, vt0.c0)) ISNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((IFNULL(vt1.c0, vt0.c0)) ISNULL) WHERE (((((vt1.c0)OR(vt0.c0)))IS(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN vt0.c1 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN vt0.c1 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(CASE WHEN vt0.c1 THEN vt0.c1 END));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt1.c1)/(vt1.c1)))) AND ((vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt1.c1)/(vt1.c1)))) AND ((vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt1.c1)/(vt1.c1)))) AND ((vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt1.c1)/(vt1.c1)))) AND ((vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt1.c1)/(vt1.c1)))) AND ((vt1.c1 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (0.6387559427495013)) IN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt0.c1))) ORDER BY (+ (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c1) AND (0.6387559427495013)) IN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (0.6387559427495013)) IN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt0.c1))) ORDER BY (+ (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c1) AND (0.6387559427495013)) IN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (0.6387559427495013)) IN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt0.c1))) ORDER BY (+ (((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN vt1.c1 COLLATE NOCASE ELSE ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN vt1.c1 COLLATE NOCASE ELSE ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN vt1.c1 COLLATE NOCASE ELSE ((vt0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN vt1.c1 COLLATE NOCASE ELSE ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c1 THEN vt1.c1 COLLATE NOCASE ELSE ((vt0.c0) IS FALSE) END);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN (((vt0.c0))>=((vt1.c1))) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN (((vt0.c0))>=((vt1.c1))) THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN (((vt0.c0))>=((vt1.c1))) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN (((vt0.c0))>=((vt1.c1))) THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c1))  WHEN (((vt0.c0))>=((vt1.c1))) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT * FROM vt1, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END ELSE ((vt0.c1) IS TRUE) END) ORDER BY ((((((((((vt0.c1) ISNULL))AND(x'38b9')))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))))AND(LIKELY(DISTINCT vt1.c0))))AND(((vt1.c0)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END ELSE ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c1) ISNULL))AND(x'38b9')))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))))AND(LIKELY(DISTINCT vt1.c0))))AND(((vt1.c0)&(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END ELSE ((vt0.c1) IS TRUE) END) ORDER BY ((((((((((vt0.c1) ISNULL))AND(x'38b9')))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))))AND(LIKELY(DISTINCT vt1.c0))))AND(((vt1.c0)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END ELSE ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c1) ISNULL))AND(x'38b9')))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))))AND(LIKELY(DISTINCT vt1.c0))))AND(((vt1.c0)&(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END ELSE ((vt0.c1) IS TRUE) END) ORDER BY ((((((((((vt0.c1) ISNULL))AND(x'38b9')))AND(((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))))AND(LIKELY(DISTINCT vt1.c0))))AND(((vt1.c0)&(vt1.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c1) ORDER BY (((vt0.c1, (((vt1.c1, vt1.c1, vt1.c0))>((vt1.c0, '-764916180', vt0.c0))), (((vt1.c0))>((vt0.c0)))))<=((TYPEOF(vt1.c1), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, '0.9071505408015189' COLLATE RTRIM))) ASC  NULLS LAST, (((((x'' IN ()))OR(TRIM(vt1.c1))))AND(((vt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1, (((vt1.c1, vt1.c1, vt1.c0))>((vt1.c0, '-764916180', vt0.c0))), (((vt1.c0))>((vt0.c0)))))<=((TYPEOF(vt1.c1), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, '0.9071505408015189' COLLATE RTRIM))) ASC  NULLS LAST, (((((x'' IN ()))OR(TRIM(vt1.c1))))AND(((vt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c1) ORDER BY (((vt0.c1, (((vt1.c1, vt1.c1, vt1.c0))>((vt1.c0, '-764916180', vt0.c0))), (((vt1.c0))>((vt0.c0)))))<=((TYPEOF(vt1.c1), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, '0.9071505408015189' COLLATE RTRIM))) ASC  NULLS LAST, (((((x'' IN ()))OR(TRIM(vt1.c1))))AND(((vt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1, (((vt1.c1, vt1.c1, vt1.c0))>((vt1.c0, '-764916180', vt0.c0))), (((vt1.c0))>((vt0.c0)))))<=((TYPEOF(vt1.c1), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, '0.9071505408015189' COLLATE RTRIM))) ASC  NULLS LAST, (((((x'' IN ()))OR(TRIM(vt1.c1))))AND(((vt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c1) ORDER BY (((vt0.c1, (((vt1.c1, vt1.c1, vt1.c0))>((vt1.c0, '-764916180', vt0.c0))), (((vt1.c0))>((vt0.c0)))))<=((TYPEOF(vt1.c1), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, '0.9071505408015189' COLLATE RTRIM))) ASC  NULLS LAST, (((((x'' IN ()))OR(TRIM(vt1.c1))))AND(((vt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('U\n');
SELECT SUM(count) FROM (SELECT ALL (('U\n') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('U\n');
SELECT SUM(count) FROM (SELECT ALL (('U\n') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('U\n');
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c1) AND (0Xffffffff8fbde546)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) BETWEEN (vt0.c1) AND (0xffffffff8fbde546))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c1) AND (0Xffffffff8fbde546)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) BETWEEN (vt0.c1) AND (0xffffffff8fbde546))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c1) AND (0Xffffffff8fbde546)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT highlight(vt0.c1, NULL, vt0.c1, vt0.c1), 0.004908023520712623)) ORDER BY CAST(((vt0.c1) ISNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT highlight(vt0.c1, NULL, vt0.c1, vt0.c1), 0.004908023520712623)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) ISNULL) AS TEXT));
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT highlight(vt0.c1, NULL, vt0.c1, vt0.c1), 0.004908023520712623)) ORDER BY CAST(((vt0.c1) ISNULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT highlight(vt0.c1, NULL, vt0.c1, vt0.c1), 0.004908023520712623)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) ISNULL) AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY CAST(((vt1.c0)>=(vt1.c0)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((NULL)IS NOT(vt0.c1))) IS FALSE)) ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC, vt0.c0 ASC  NULLS FIRST, (((((vt1.c0) ISNULL), (vt1.c1 IN ()), ((vt0.c0)<<(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt0.c1, (- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS NOT(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC, vt0.c0 ASC  NULLS FIRST, (((((vt1.c0) ISNULL), (vt1.c1 IN ()), ((vt0.c0)<<(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt0.c1, (- (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((NULL)IS NOT(vt0.c1))) IS FALSE)) ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC, vt0.c0 ASC  NULLS FIRST, (((((vt1.c0) ISNULL), (vt1.c1 IN ()), ((vt0.c0)<<(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt0.c1, (- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS NOT(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC, vt0.c0 ASC  NULLS FIRST, (((((vt1.c0) ISNULL), (vt1.c1 IN ()), ((vt0.c0)<<(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt0.c1, (- (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((NULL)IS NOT(vt0.c1))) IS FALSE)) ORDER BY (((vt0.c1) IS TRUE) IN ()) DESC, vt0.c0 ASC  NULLS FIRST, (((((vt1.c0) ISNULL), (vt1.c1 IN ()), ((vt0.c0)<<(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt0.c1, (- (vt0.c0)))));
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c0 COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c1)))=(MIN(vt1.c0, vt1.c0)))) ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, CAST(vt1.c1 AS TEXT) DESC  NULLS FIRST, CASE (vt1.c1 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c1, 0.8190495878533749, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))) WHEN vt1.c1 THEN CAST(vt1.c1 AS REAL) WHEN CAST(x'8b1c' AS TEXT) THEN ((((vt1.c1)OR(x'3e6e')))OR(vt1.c0)) ELSE (((vt1.c0, vt1.c1, vt1.c1))>((0.3776799675039335, vt1.c1, vt1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)!=(vt1.c1)))=(MIN(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, CAST(vt1.c1 AS TEXT) DESC  NULLS FIRST, CASE (vt1.c1 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c1, 0.8190495878533749, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))) WHEN vt1.c1 THEN CAST(vt1.c1 AS REAL) WHEN CAST(x'8b1c' AS TEXT) THEN ((((vt1.c1)OR(x'3e6e')))OR(vt1.c0)) ELSE (((vt1.c0, vt1.c1, vt1.c1))>((0.3776799675039335, vt1.c1, vt1.c0))) END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c1)))=(MIN(vt1.c0, vt1.c0)))) ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, CAST(vt1.c1 AS TEXT) DESC  NULLS FIRST, CASE (vt1.c1 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c1, 0.8190495878533749, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))) WHEN vt1.c1 THEN CAST(vt1.c1 AS REAL) WHEN CAST(x'8b1c' AS TEXT) THEN ((((vt1.c1)OR(x'3e6e')))OR(vt1.c0)) ELSE (((vt1.c0, vt1.c1, vt1.c1))>((0.3776799675039335, vt1.c1, vt1.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)!=(vt1.c1)))=(MIN(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, CAST(vt1.c1 AS TEXT) DESC  NULLS FIRST, CASE (vt1.c1 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c1, 0.8190495878533749, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))) WHEN vt1.c1 THEN CAST(vt1.c1 AS REAL) WHEN CAST(x'8b1c' AS TEXT) THEN ((((vt1.c1)OR(x'3e6e')))OR(vt1.c0)) ELSE (((vt1.c0, vt1.c1, vt1.c1))>((0.3776799675039335, vt1.c1, vt1.c0))) END  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)<>(vt1.c1)))=(MIN(vt1.c0, vt1.c0)))) ORDER BY ((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))) NOT NULL)  NULLS FIRST, CAST(vt1.c1 AS TEXT) DESC  NULLS FIRST, CASE (vt1.c1 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (((vt1.c1, 0.8190495878533749, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))) WHEN vt1.c1 THEN CAST(vt1.c1 AS REAL) WHEN CAST(x'8b1c' AS TEXT) THEN ((((vt1.c1)OR(x'3e6e')))OR(vt1.c0)) ELSE (((vt1.c0, vt1.c1, vt1.c1))>((0.3776799675039335, vt1.c1, vt1.c0))) END  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (((('', ((vt1.c1)>=(vt1.c0)), ((vt0.c1)||(vt1.c0))))<=((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, vt1.c0, vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((('', ((vt1.c1)>=(vt1.c0)), ((vt0.c1)||(vt1.c0))))<=((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, vt1.c0, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((('', ((vt1.c1)>=(vt1.c0)), ((vt0.c1)||(vt1.c0))))<=((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, vt1.c0, vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL ((((('', ((vt1.c1)>=(vt1.c0)), ((vt0.c1)||(vt1.c0))))<=((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, vt1.c0, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((('', ((vt1.c1)>=(vt1.c0)), ((vt0.c1)||(vt1.c0))))<=((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, vt1.c0, vt0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE));
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) NOT BETWEEN (((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (CAST(vt1.c0 AS BLOB)))) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY  NULLS LAST, ((((((((((((((((0Xffffffff98f8e32d)OR(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))OR(((vt1.c0) IS FALSE))))AND((~ (-2.6946369E7)))))OR(((vt1.c1) NOT NULL))))OR(((vt1.c1)%(vt1.c1)))))OR((vt1.c1 IN ()))) DESC, CASE '-248843055'  WHEN vt1.c1 THEN vt1.c1 WHEN (((vt1.c0, vt1.c0, vt1.c1))<((vt1.c1, vt1.c1, vt1.c0))) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN vt1.c0 ELSE (NOT (vt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) NOT BETWEEN (((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY  NULLS LAST, ((((((((((((((((0Xffffffff98f8e32d)OR(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))OR(((vt1.c0) IS FALSE))))AND((~ (-2.6946369E7)))))OR(((vt1.c1) NOT NULL))))OR(((vt1.c1)%(vt1.c1)))))OR((vt1.c1 IN ()))) DESC, CASE '-248843055'  WHEN vt1.c1 THEN vt1.c1 WHEN (((vt1.c0, vt1.c0, vt1.c1))<((vt1.c1, vt1.c1, vt1.c0))) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN vt1.c0 ELSE (NOT (vt1.c1)) END ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) NOT BETWEEN (((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (CAST(vt1.c0 AS BLOB)))) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY  NULLS LAST, ((((((((((((((((0Xffffffff98f8e32d)OR(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))OR(((vt1.c0) IS FALSE))))AND((~ (-2.6946369E7)))))OR(((vt1.c1) NOT NULL))))OR(((vt1.c1)%(vt1.c1)))))OR((vt1.c1 IN ()))) DESC, CASE '-248843055'  WHEN vt1.c1 THEN vt1.c1 WHEN (((vt1.c0, vt1.c0, vt1.c1))<((vt1.c1, vt1.c1, vt1.c0))) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN vt1.c0 ELSE (NOT (vt1.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) NOT BETWEEN (((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY  NULLS LAST, ((((((((((((((((0Xffffffff98f8e32d)OR(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))OR(((vt1.c0) IS FALSE))))AND((~ (-2.6946369E7)))))OR(((vt1.c1) NOT NULL))))OR(((vt1.c1)%(vt1.c1)))))OR((vt1.c1 IN ()))) DESC, CASE '-248843055'  WHEN vt1.c1 THEN vt1.c1 WHEN (((vt1.c0, vt1.c0, vt1.c1))<((vt1.c1, vt1.c1, vt1.c0))) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN vt1.c0 ELSE (NOT (vt1.c1)) END ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) NOT BETWEEN (((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (CAST(vt1.c0 AS BLOB)))) ORDER BY CAST(vt1.c1 AS BLOB) COLLATE BINARY  NULLS LAST, ((((((((((((((((0Xffffffff98f8e32d)OR(vt1.c0)))AND(vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))OR(((vt1.c0) IS FALSE))))AND((~ (-2.6946369E7)))))OR(((vt1.c1) NOT NULL))))OR(((vt1.c1)%(vt1.c1)))))OR((vt1.c1 IN ()))) DESC, CASE '-248843055'  WHEN vt1.c1 THEN vt1.c1 WHEN (((vt1.c0, vt1.c0, vt1.c1))<((vt1.c1, vt1.c1, vt1.c0))) THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END WHEN ((vt1.c0) ISNULL) THEN vt1.c0 ELSE (NOT (vt1.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))>>((((vt0.c0))!=((vt0.c0)))))) ORDER BY (((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((''))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))>>((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((''))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))>>((((vt0.c0))!=((vt0.c0)))))) ORDER BY (((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((''))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))>>((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((''))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, x''))))>>((((vt0.c0))!=((vt0.c0)))))) ORDER BY (((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((''))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt1.c1))<>((vt0.c1)))) AND ((NOT (vt1.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN ((((vt1.c1))!=((vt0.c1)))) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt1.c1))<>((vt0.c1)))) AND ((NOT (vt1.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN ((((vt1.c1))!=((vt0.c1)))) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt1.c1))<>((vt0.c1)))) AND ((NOT (vt1.c0))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((('-2083446628')AND(vt0.c1)))AND(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c1 AS TEXT), (('xR쯖V')IS(vt0.c1)))))) ORDER BY CASE WHEN CASE WHEN -1.146204543E9 THEN vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'' END THEN (+ (vt0.c1)) WHEN json_array(NULL, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0xffffffff83d1209c THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((('-2083446628')AND(vt0.c1)))AND(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c1 AS TEXT), (('xR쯖V')IS(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN -1.146204543E9 THEN vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'' END THEN (+ (vt0.c1)) WHEN json_array(NULL, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffff83d1209c THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((('-2083446628')AND(vt0.c1)))AND(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c1 AS TEXT), (('xR쯖V')IS(vt0.c1)))))) ORDER BY CASE WHEN CASE WHEN -1.146204543E9 THEN vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'' END THEN (+ (vt0.c1)) WHEN json_array(NULL, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0xffffffff83d1209c THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((('-2083446628')AND(vt0.c1)))AND(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c1 AS TEXT), (('xR쯖V')IS(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN -1.146204543E9 THEN vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'' END THEN (+ (vt0.c1)) WHEN json_array(NULL, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffff83d1209c THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((((('-2083446628')AND(vt0.c1)))AND(vt0.c0)), (~ (vt0.c0)), ((vt0.c0) IS TRUE))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c1 AS TEXT), (('xR쯖V')IS(vt0.c1)))))) ORDER BY CASE WHEN CASE WHEN -1.146204543E9 THEN vt0.c1 END THEN CAST(vt0.c0 AS TEXT) WHEN CASE WHEN vt0.c1 THEN x'' END THEN (+ (vt0.c1)) WHEN json_array(NULL, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0xffffffff83d1209c THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c1)<(vt0.c1)), vt1.c1 COLLATE NOCASE, UNLIKELY(DISTINCT x'')))=(((((vt0.c0))==((vt1.c0))), (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) ORDER BY ((vt1.c1) NOT BETWEEN ((((vt1.c0, vt1.c1, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0)))) AND (((vt1.c1)!=('-1405231801')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)<(vt0.c1)), vt1.c1 COLLATE NOCASE, UNLIKELY(DISTINCT x'')))==(((((vt0.c0))=((vt1.c0))), (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c1) NOT BETWEEN ((((vt1.c0, vt1.c1, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0)))) AND (((vt1.c1)<>('-1405231801')))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c1)<(vt0.c1)), vt1.c1 COLLATE NOCASE, UNLIKELY(DISTINCT x'')))=(((((vt0.c0))==((vt1.c0))), (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) ORDER BY ((vt1.c1) NOT BETWEEN ((((vt1.c0, vt1.c1, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0)))) AND (((vt1.c1)!=('-1405231801')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)<(vt0.c1)), vt1.c1 COLLATE NOCASE, UNLIKELY(DISTINCT x'')))==(((((vt0.c0))=((vt1.c0))), (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c1) NOT BETWEEN ((((vt1.c0, vt1.c1, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0)))) AND (((vt1.c1)<>('-1405231801')))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c1)<(vt0.c1)), vt1.c1 COLLATE NOCASE, UNLIKELY(DISTINCT x'')))=(((((vt0.c0))==((vt1.c0))), (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) ORDER BY ((vt1.c1) NOT BETWEEN ((((vt1.c0, vt1.c1, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0)))) AND (((vt1.c1)!=('-1405231801')))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)==(vt1.c0)))>>(CAST(NULL AS REAL)))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)) THEN ((vt0.c1) IS FALSE) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN x'' WHEN NULL THEN CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)=(vt1.c0)))>>(CAST(NULL AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)) THEN ((vt0.c1) IS FALSE) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN x'' WHEN NULL THEN CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)==(vt1.c0)))>>(CAST(NULL AS REAL)))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)) THEN ((vt0.c1) IS FALSE) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN x'' WHEN NULL THEN CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)=(vt1.c0)))>>(CAST(NULL AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)) THEN ((vt0.c1) IS FALSE) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN x'' WHEN NULL THEN CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)==(vt1.c0)))>>(CAST(NULL AS REAL)))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)) THEN ((vt0.c1) IS FALSE) WHEN ((vt0.c0)LIKE(vt1.c0)) THEN x'' WHEN NULL THEN CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, '727012824', vt0.c0)) NOT BETWEEN ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((((vt0.c1)|(vt1.c1)), ((vt0.c0)>>(vt1.c0)), CASE x'6e36'  WHEN 'm?' THEN NULL ELSE vt0.c0 END))) WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) ORDER BY (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, '727012824', vt0.c0)) NOT BETWEEN ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((((vt0.c1)|(vt1.c1)), ((vt0.c0)>>(vt1.c0)), CASE x'6e36'  WHEN 'm?' THEN NULL ELSE vt0.c0 END))) ORDER BY (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, '727012824', vt0.c0)) NOT BETWEEN ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((((vt0.c1)|(vt1.c1)), ((vt0.c0)>>(vt1.c0)), CASE x'6e36'  WHEN 'm?' THEN NULL ELSE vt0.c0 END))) WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) ORDER BY (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, '727012824', vt0.c0)) NOT BETWEEN ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((((vt0.c1)|(vt1.c1)), ((vt0.c0)>>(vt1.c0)), CASE x'6e36'  WHEN 'm?' THEN NULL ELSE vt0.c0 END))) ORDER BY (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, '727012824', vt0.c0)) NOT BETWEEN ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CAST(vt1.c0 AS REAL), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((((vt0.c1)|(vt1.c1)), ((vt0.c0)>>(vt1.c0)), CASE x'6e36'  WHEN 'm?' THEN NULL ELSE vt0.c0 END))) WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB)) ORDER BY (~ (vt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END)) AND (((((0.7041235592119875)) BETWEEN ((0.5674973115807654)) AND ((vt1.c1)))))) WHERE (((LAST_INSERT_ROWID()) BETWEEN (((vt1.c0)-(NULL))) AND (TYPEOF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) BETWEEN (((vt1.c0)-(NULL))) AND (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END)) AND (((((0.7041235592119875)) BETWEEN ((0.5674973115807654)) AND ((vt1.c1)))))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END)) AND (((((0.7041235592119875)) BETWEEN ((0.5674973115807654)) AND ((vt1.c1)))))) WHERE (((LAST_INSERT_ROWID()) BETWEEN (((vt1.c0)-(NULL))) AND (TYPEOF(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) BETWEEN (((vt1.c0)-(NULL))) AND (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END)) AND (((((0.7041235592119875)) BETWEEN ((0.5674973115807654)) AND ((vt1.c1)))))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END)) AND (((((0.7041235592119875)) BETWEEN ((0.5674973115807654)) AND ((vt1.c1)))))) WHERE (((LAST_INSERT_ROWID()) BETWEEN (((vt1.c0)-(NULL))) AND (TYPEOF(vt1.c0))));
SELECT * FROM vt1 WHERE (((((vt1.c1)!=(x''))) ISNULL)) ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((+ (vt1.c1)), LENGTH(vt1.c1), vt1.c1)) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)), ((x'1820') NOT NULL), ((((vt1.c1)AND(vt1.c0)))OR(x'30df'))))) ASC  NULLS FIRST, CAST(UNLIKELY(vt1.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<>(x''))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((+ (vt1.c1)), LENGTH(vt1.c1), vt1.c1)) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)), ((x'1820') NOT NULL), ((((vt1.c1)AND(vt1.c0)))OR(x'30df'))))) ASC  NULLS FIRST, CAST(UNLIKELY(vt1.c0) AS TEXT));
SELECT * FROM vt1 WHERE (((((vt1.c1)!=(x''))) ISNULL)) ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((+ (vt1.c1)), LENGTH(vt1.c1), vt1.c1)) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)), ((x'1820') NOT NULL), ((((vt1.c1)AND(vt1.c0)))OR(x'30df'))))) ASC  NULLS FIRST, CAST(UNLIKELY(vt1.c0) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<>(x''))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((+ (vt1.c1)), LENGTH(vt1.c1), vt1.c1)) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)), ((x'1820') NOT NULL), ((((vt1.c1)AND(vt1.c0)))OR(x'30df'))))) ASC  NULLS FIRST, CAST(UNLIKELY(vt1.c0) AS TEXT));
SELECT * FROM vt1 WHERE (((((vt1.c1)!=(x''))) ISNULL)) ORDER BY (((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((+ (vt1.c1)), LENGTH(vt1.c1), vt1.c1)) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)), ((x'1820') NOT NULL), ((((vt1.c1)AND(vt1.c0)))OR(x'30df'))))) ASC  NULLS FIRST, CAST(UNLIKELY(vt1.c0) AS TEXT);
SELECT * FROM vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((~ (vt1.c0)) COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE (((('()')%('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('()')%('')) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((('()')%('')) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('()')%('')) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((('()')%('')) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<>('723804980')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)<>('723804980'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<>('723804980')))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)<>('723804980'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<>('723804980')))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN (x''))) ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(((x'')LIKE(vt0.c1)))))AND(vt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN (x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(((x'')LIKE(vt0.c1)))))AND(vt0.c1)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN (x''))) ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(((x'')LIKE(vt0.c1)))))AND(vt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN (x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(((x'')LIKE(vt0.c1)))))AND(vt0.c1)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)>>(vt0.c0)) IN (x''))) ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(((x'')LIKE(vt0.c1)))))AND(vt0.c1)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))LIKE(((vt0.c0)>=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))LIKE(((vt0.c0)>=(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))LIKE(((vt0.c0)>=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))LIKE(((vt0.c0)>=(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c1)AND(vt0.c1)))OR(vt0.c1)))LIKE(((vt0.c0)>=(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt1.c1) AND (''))))) ORDER BY CASE WHEN '3' THEN vt0.c1 COLLATE BINARY ELSE 0X15242a74 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) NOT BETWEEN (vt1.c1) AND (''))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN '3' THEN vt0.c1 COLLATE BINARY ELSE 0X15242a74 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt1.c1) AND (''))))) ORDER BY CASE WHEN '3' THEN vt0.c1 COLLATE BINARY ELSE 0X15242a74 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) NOT BETWEEN (vt1.c1) AND (''))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN '3' THEN vt0.c1 COLLATE BINARY ELSE 0X15242a74 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((~ (((vt0.c1) NOT BETWEEN (vt1.c1) AND (''))))) ORDER BY CASE WHEN '3' THEN vt0.c1 COLLATE BINARY ELSE 0X15242a74 END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON '145854935' WHERE ((- ((vt1.c1 IN ())))) ORDER BY ((x'')>>((((NULL))==((vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '145854935' ORDER BY ((x'')>>((((NULL))=((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON '145854935' WHERE ((- ((vt1.c1 IN ())))) ORDER BY ((x'')>>((((NULL))==((vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '145854935' ORDER BY ((x'')>>((((NULL))=((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON '145854935' WHERE ((- ((vt1.c1 IN ())))) ORDER BY ((x'')>>((((NULL))==((vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))) ORDER BY ((CASE 0.31737599742360934  WHEN vt0.c0 THEN vt0.c0 ELSE 0.6494623365467797 END)<>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE 0.31737599742360934  WHEN vt0.c0 THEN vt0.c0 ELSE 0.6494623365467797 END)<>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))) ORDER BY ((CASE 0.31737599742360934  WHEN vt0.c0 THEN vt0.c0 ELSE 0.6494623365467797 END)<>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE 0.31737599742360934  WHEN vt0.c0 THEN vt0.c0 ELSE 0.6494623365467797 END)<>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))OR(((vt0.c1)+(vt0.c0))))) ORDER BY ((CASE 0.31737599742360934  WHEN vt0.c0 THEN vt0.c0 ELSE 0.6494623365467797 END)<>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(x'')))AND(vt1.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1)<<(vt1.c1)))) WHERE (((((vt1.c1)*(vt1.c1)))>((((('1085849048')AND(vt0.c0)))OR('\/zfMPAYX'))))) ORDER BY (((vt0.c0) NOT BETWEEN (0.9262938690353308) AND (vt1.c0)) IN ((vt0.c1 IN ()))) DESC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (x'') AND ((((1365576646)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)*(vt1.c1)))>((((('1085849048')AND(vt0.c0)))OR('\/zfMPAYX'))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(x'')))AND(vt1.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1)<<(vt1.c1)))) ORDER BY (((vt0.c0) NOT BETWEEN (0.9262938690353308) AND (vt1.c0)) IN ((vt0.c1 IN ()))) DESC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (x'') AND ((((1365576646)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(x'')))AND(vt1.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1)<<(vt1.c1)))) WHERE (((((vt1.c1)*(vt1.c1)))>((((('1085849048')AND(vt0.c0)))OR('\/zfMPAYX'))))) ORDER BY (((vt0.c0) NOT BETWEEN (0.9262938690353308) AND (vt1.c0)) IN ((vt0.c1 IN ()))) DESC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (x'') AND ((((1365576646)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)*(vt1.c1)))>((((('1085849048')AND(vt0.c0)))OR('\/zfMPAYX'))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(x'')))AND(vt1.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1)<<(vt1.c1)))) ORDER BY (((vt0.c0) NOT BETWEEN (0.9262938690353308) AND (vt1.c0)) IN ((vt0.c1 IN ()))) DESC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (x'') AND ((((1365576646)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(x'')))AND(vt1.c1))) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1)<<(vt1.c1)))) WHERE (((((vt1.c1)*(vt1.c1)))>((((('1085849048')AND(vt0.c0)))OR('\/zfMPAYX'))))) ORDER BY (((vt0.c0) NOT BETWEEN (0.9262938690353308) AND (vt1.c0)) IN ((vt0.c1 IN ()))) DESC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (x'') AND ((((1365576646)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))  NULLS FIRST, CAST(vt0.c1 AS INTEGER) COLLATE BINARY;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY);
SELECT * FROM vt1, vt0 WHERE (json_array_length((NOT (vt0.c0)), ((vt0.c0)=('-2015256557'))));
SELECT SUM(count) FROM (SELECT ((json_array_length((NOT (vt0.c0)), ((vt0.c0)=('-2015256557')))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (json_array_length((NOT (vt0.c0)), ((vt0.c0)=('-2015256557'))));
SELECT SUM(count) FROM (SELECT ((json_array_length((NOT (vt0.c0)), ((vt0.c0)=('-2015256557')))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt0 INNER JOIN vt1 ON RTRIM((- (x''))) WHERE (((vt1.c1)&((((vt0.c0))<((vt0.c1)))))) ORDER BY (((vt1.c1 COLLATE BINARY))<>((((vt1.c0)-(vt1.c0))))) DESC  NULLS FIRST, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)&((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON RTRIM((- (x''))) ORDER BY (((vt1.c1 COLLATE BINARY))!=((((vt1.c0)-(vt1.c0))))) DESC  NULLS FIRST, vt1.c0  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt1 ON RTRIM((- (x''))) WHERE (((vt1.c1)&((((vt0.c0))<((vt0.c1)))))) ORDER BY (((vt1.c1 COLLATE BINARY))<>((((vt1.c0)-(vt1.c0))))) DESC  NULLS FIRST, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)&((((vt0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON RTRIM((- (x''))) ORDER BY (((vt1.c1 COLLATE BINARY))!=((((vt1.c0)-(vt1.c0))))) DESC  NULLS FIRST, vt1.c0  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt1 ON RTRIM((- (x''))) WHERE (((vt1.c1)&((((vt0.c0))<((vt0.c1)))))) ORDER BY (((vt1.c1 COLLATE BINARY))<>((((vt1.c0)-(vt1.c0))))) DESC  NULLS FIRST, vt1.c0  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c1)) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c1)) AND (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c1)) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c1)) AND (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c1)) AND (vt0.c1)));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))<=((vt1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))<=((vt1.c1))) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))<=((vt1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))<=((vt1.c1))) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))<=((vt1.c1))) END);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.624729086619691 END) BETWEEN ((('U\n')/(vt0.c0))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY x'', (((((vt0.c1) ISNULL)))<>((TYPEOF(DISTINCT vt0.c1)))), '727012824' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.624729086619691 END) BETWEEN ((('U\n')/(vt0.c0))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'', (((((vt0.c1) ISNULL)))<>((TYPEOF(DISTINCT vt0.c1)))), '727012824' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.624729086619691 END) BETWEEN ((('U\n')/(vt0.c0))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY x'', (((((vt0.c1) ISNULL)))<>((TYPEOF(DISTINCT vt0.c1)))), '727012824' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.624729086619691 END) BETWEEN ((('U\n')/(vt0.c0))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY x'', (((((vt0.c1) ISNULL)))<>((TYPEOF(DISTINCT vt0.c1)))), '727012824' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.624729086619691 END) BETWEEN ((('U\n')/(vt0.c0))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY x'', (((((vt0.c1) ISNULL)))<>((TYPEOF(DISTINCT vt0.c1)))), '727012824' DESC  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((vt0.c1 COLLATE BINARY IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END, (NOT (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (((vt0.c0)LIKE(vt1.c1))) AND ((+ (vt0.c1))))  NULLS FIRST, CASE WHEN vt0.c1 COLLATE RTRIM THEN vt1.c1 ELSE (((vt1.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c1))!=((vt0.c0, vt1.c1, vt0.c0, vt1.c0, vt1.c1))) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END, (NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (((vt0.c0)LIKE(vt1.c1))) AND ((+ (vt0.c1))))  NULLS FIRST, CASE WHEN vt0.c1 COLLATE RTRIM THEN vt1.c1 ELSE (((vt1.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c1))<>((vt0.c0, vt1.c1, vt0.c0, vt1.c0, vt1.c1))) END ASC);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((vt0.c1 COLLATE BINARY IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END, (NOT (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (((vt0.c0)LIKE(vt1.c1))) AND ((+ (vt0.c1))))  NULLS FIRST, CASE WHEN vt0.c1 COLLATE RTRIM THEN vt1.c1 ELSE (((vt1.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c1))!=((vt0.c0, vt1.c1, vt0.c0, vt1.c0, vt1.c1))) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END, (NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (((vt0.c0)LIKE(vt1.c1))) AND ((+ (vt0.c1))))  NULLS FIRST, CASE WHEN vt0.c1 COLLATE RTRIM THEN vt1.c1 ELSE (((vt1.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c1))<>((vt0.c0, vt1.c1, vt0.c0, vt1.c0, vt1.c1))) END ASC);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((vt0.c1 COLLATE BINARY IN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END, (NOT (vt1.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (((vt0.c0)LIKE(vt1.c1))) AND ((+ (vt0.c1))))  NULLS FIRST, CASE WHEN vt0.c1 COLLATE RTRIM THEN vt1.c1 ELSE (((vt1.c0, vt1.c1, vt0.c1, vt1.c0, vt0.c1))!=((vt0.c0, vt1.c1, vt0.c0, vt1.c0, vt1.c1))) END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1)<<(vt0.c0)), ((vt0.c0)!=(170123199)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) AND ((((((((((0.8784202083184808)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1)LIKE(vt0.c1)), TYPEOF(DISTINCT vt0.c0))))) ORDER BY CAST(x'' AS TEXT) DESC  NULLS LAST, vt0.c0, json_type(vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1)<<(vt0.c0)), ((vt0.c0)!=(170123199)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) AND ((((((((((0.8784202083184808)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1)LIKE(vt0.c1)), TYPEOF(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS TEXT) DESC  NULLS LAST, vt0.c0, json_type(vt0.c1 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1)<<(vt0.c0)), ((vt0.c0)!=(170123199)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) AND ((((((((((0.8784202083184808)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1)LIKE(vt0.c1)), TYPEOF(DISTINCT vt0.c0))))) ORDER BY CAST(x'' AS TEXT) DESC  NULLS LAST, vt0.c0, json_type(vt0.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1)<<(vt0.c0)), ((vt0.c0)!=(170123199)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) AND ((((((((((0.8784202083184808)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c1)LIKE(vt0.c1)), TYPEOF(DISTINCT vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS TEXT) DESC  NULLS LAST, vt0.c0, json_type(vt0.c1 COLLATE RTRIM));
SELECT ALL * FROM vt1 WHERE (((vt1.c1 IN (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 IN (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 IN (vt1.c0)) IN ()));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)|(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)|(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)|(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)|(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)|(vt0.c1)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON x'' WHERE (COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, vt1.c0)) ORDER BY (((((vt0.c1)%(vt0.c1))))==((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1))))) DESC  NULLS FIRST, CASE WHEN ((vt1.c1)OR(vt0.c1)) THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM)/(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, vt1.c0)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON x'' ORDER BY (((((vt0.c1)%(vt0.c1))))=((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1))))) DESC  NULLS FIRST, CASE WHEN ((vt1.c1)OR(vt0.c1)) THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM)/(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON x'' WHERE (COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, vt1.c0)) ORDER BY (((((vt0.c1)%(vt0.c1))))==((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1))))) DESC  NULLS FIRST, CASE WHEN ((vt1.c1)OR(vt0.c1)) THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM)/(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, vt1.c0)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON x'' ORDER BY (((((vt0.c1)%(vt0.c1))))=((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1))))) DESC  NULLS FIRST, CASE WHEN ((vt1.c1)OR(vt0.c1)) THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM)/(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON x'' WHERE (COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, vt1.c0)) ORDER BY (((((vt0.c1)%(vt0.c1))))==((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c1))))) DESC  NULLS FIRST, CASE WHEN ((vt1.c1)OR(vt0.c1)) THEN SQLITE_COMPILEOPTION_USED(vt0.c1) END  NULLS LAST, ((vt0.c0 COLLATE RTRIM)/(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))IS(((vt0.c1)AND(vt0.c1))))) ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST, ((((LIKELY(NULL))OR((((vt0.c0))>=((vt0.c1))))))OR(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST, CAST(((vt0.c0)<(vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))IS(((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST, ((((LIKELY(NULL))OR((((vt0.c0))>=((vt0.c1))))))OR(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST, CAST(((vt0.c0)<(vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))IS(((vt0.c1)AND(vt0.c1))))) ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST, ((((LIKELY(NULL))OR((((vt0.c0))>=((vt0.c1))))))OR(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST, CAST(((vt0.c0)<(vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))IS(((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST, ((((LIKELY(NULL))OR((((vt0.c0))>=((vt0.c1))))))OR(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST, CAST(((vt0.c0)<(vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))IS(((vt0.c1)AND(vt0.c1))))) ORDER BY (vt0.c1 IN ()) COLLATE BINARY ASC  NULLS FIRST, ((((LIKELY(NULL))OR((((vt0.c0))>=((vt0.c1))))))OR(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST, CAST(((vt0.c0)<(vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(x'')))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(x'')))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(x'')))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(x'')))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(x'')))AND(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE NULL END)IS(((2.123185646E9) ISNULL)))) ORDER BY 'x'  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE BINARY, TRIM(DISTINCT (((vt1.c1, vt1.c0, vt0.c0))>((vt1.c1, 0.5292796804818117, vt0.c0))), ((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE NULL END)IS(((2.123185646E9) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 'x'  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE BINARY, TRIM(DISTINCT (((vt1.c1, vt1.c0, vt0.c0))>((vt1.c1, 0.5292796804818117, vt0.c0))), ((((vt1.c0)OR(vt1.c1)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE NULL END)IS(((2.123185646E9) ISNULL)))) ORDER BY 'x'  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE BINARY, TRIM(DISTINCT (((vt1.c1, vt1.c0, vt0.c0))>((vt1.c1, 0.5292796804818117, vt0.c0))), ((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE NULL END)IS(((2.123185646E9) ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 'x'  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE BINARY, TRIM(DISTINCT (((vt1.c1, vt1.c0, vt0.c0))>((vt1.c1, 0.5292796804818117, vt0.c0))), ((((vt1.c0)OR(vt1.c1)))AND(vt0.c0))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE NULL END)IS(((2.123185646E9) ISNULL)))) ORDER BY 'x'  NULLS FIRST, CAST(vt1.c0 AS REAL) COLLATE BINARY, TRIM(DISTINCT (((vt1.c1, vt1.c0, vt0.c0))>((vt1.c1, 0.5292796804818117, vt0.c0))), ((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)));
SELECT * FROM vt0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1) ISNULL) THEN CAST(vt0.c0 AS REAL) END WHERE ((((((vt0.c0)IS NOT(vt1.c0))))<=((((vt1.c1) BETWEEN (vt0.c1) AND (0X5cbdf71e)))))) ORDER BY (((CASE WHEN vt0.c1 THEN vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt1.c0))))>((0.023585433109298504 COLLATE RTRIM, ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt1.c0  WHEN '579927782' THEN vt1.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS NOT(vt1.c0))))<=((((vt1.c1) BETWEEN (vt0.c1) AND (0x5cbdf71e)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1) ISNULL) THEN CAST(vt0.c0 AS REAL) END ORDER BY (((CASE WHEN vt0.c1 THEN vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt1.c0))))>((0.023585433109298504 COLLATE RTRIM, ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt1.c0  WHEN '579927782' THEN vt1.c1 ELSE vt0.c0 END))));
SELECT * FROM vt0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1) ISNULL) THEN CAST(vt0.c0 AS REAL) END WHERE ((((((vt0.c0)IS NOT(vt1.c0))))<=((((vt1.c1) BETWEEN (vt0.c1) AND (0X5cbdf71e)))))) ORDER BY (((CASE WHEN vt0.c1 THEN vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt1.c0))))>((0.023585433109298504 COLLATE RTRIM, ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt1.c0  WHEN '579927782' THEN vt1.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS NOT(vt1.c0))))<=((((vt1.c1) BETWEEN (vt0.c1) AND (0x5cbdf71e)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1) ISNULL) THEN CAST(vt0.c0 AS REAL) END ORDER BY (((CASE WHEN vt0.c1 THEN vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt1.c0))))>((0.023585433109298504 COLLATE RTRIM, ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt1.c0  WHEN '579927782' THEN vt1.c1 ELSE vt0.c0 END))));
SELECT * FROM vt0 INNER JOIN vt1 ON CASE WHEN ((vt0.c1) ISNULL) THEN CAST(vt0.c0 AS REAL) END WHERE ((((((vt0.c0)IS NOT(vt1.c0))))<=((((vt1.c1) BETWEEN (vt0.c1) AND (0X5cbdf71e)))))) ORDER BY (((CASE WHEN vt0.c1 THEN vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt1.c0))))>((0.023585433109298504 COLLATE RTRIM, ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt1.c0  WHEN '579927782' THEN vt1.c1 ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1555953438 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END AS TEXT)) ORDER BY ((((vt1.c1)IS(vt1.c1))) NOT BETWEEN ('') AND (((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR('C_)l_RU_')))AND(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1555953438 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)IS(vt1.c1))) NOT BETWEEN ('') AND (((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR('C_)l_RU_')))AND(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1555953438 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END AS TEXT)) ORDER BY ((((vt1.c1)IS(vt1.c1))) NOT BETWEEN ('') AND (((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR('C_)l_RU_')))AND(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1555953438 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)IS(vt1.c1))) NOT BETWEEN ('') AND (((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR('C_)l_RU_')))AND(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1555953438 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END AS TEXT)) ORDER BY ((((vt1.c1)IS(vt1.c1))) NOT BETWEEN ('') AND (((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR('C_)l_RU_')))AND(vt1.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)>>((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c1, vt1.c1, 0.7431736381239551)) AND ((vt1.c0, vt1.c1, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)>>((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c1, vt1.c1, 0.7431736381239551)) AND ((vt1.c0, vt1.c1, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)>>((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c1, vt1.c1, 0.7431736381239551)) AND ((vt1.c0, vt1.c1, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)>>((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c1, vt1.c1, 0.7431736381239551)) AND ((vt1.c0, vt1.c1, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END)>>((((vt1.c1, vt1.c1, NULL)) NOT BETWEEN ((vt1.c1, vt1.c1, 0.7431736381239551)) AND ((vt1.c0, vt1.c1, vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((NULL IN ())) ORDER BY ((((((((x'')AND(vt1.c1)))OR(vt1.c0)))AND((~ (vt1.c1)))))AND((+ (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((x'')AND(vt1.c1)))OR(vt1.c0)))AND((~ (vt1.c1)))))AND((+ (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((NULL IN ())) ORDER BY ((((((((x'')AND(vt1.c1)))OR(vt1.c0)))AND((~ (vt1.c1)))))AND((+ (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((x'')AND(vt1.c1)))OR(vt1.c0)))AND((~ (vt1.c1)))))AND((+ (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((NULL IN ())) ORDER BY ((((((((x'')AND(vt1.c1)))OR(vt1.c0)))AND((~ (vt1.c1)))))AND((+ (vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN ()))AND((+ (vt1.c1)))))AND(UPPER(DISTINCT vt0.c0))))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0) IS TRUE)))) ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, UPPER(DISTINCT CAST(0.7431022918742388 AS INTEGER));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND((+ (vt1.c1)))))AND(UPPER(DISTINCT vt0.c0))))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, UPPER(DISTINCT CAST(0.7431022918742388 AS INTEGER)));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN ()))AND((+ (vt1.c1)))))AND(UPPER(DISTINCT vt0.c0))))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0) IS TRUE)))) ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, UPPER(DISTINCT CAST(0.7431022918742388 AS INTEGER));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND((+ (vt1.c1)))))AND(UPPER(DISTINCT vt0.c0))))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, UPPER(DISTINCT CAST(0.7431022918742388 AS INTEGER)));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN ()))AND((+ (vt1.c1)))))AND(UPPER(DISTINCT vt0.c0))))AND(((vt1.c0) NOT NULL))))AND(((vt1.c0) IS TRUE)))) ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, UPPER(DISTINCT CAST(0.7431022918742388 AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (~ (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (~ (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c0 ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (~ (vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, vt0.c0 ASC;
SELECT * FROM vt0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NULL) IS FALSE));
SELECT * FROM vt1 WHERE (('' IN ())) ORDER BY (((0.8293063131467204))=((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS LAST, (+ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((0.8293063131467204))=((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS LAST, (+ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (('' IN ())) ORDER BY (((0.8293063131467204))=((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS LAST, (+ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((0.8293063131467204))=((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS LAST, (+ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (('' IN ())) ORDER BY (((0.8293063131467204))=((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))))) DESC  NULLS LAST, (+ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)-(vt1.c1)))-(COALESCE(NULL, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c1)))-(COALESCE(NULL, vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)-(vt1.c1)))-(COALESCE(NULL, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)-(vt1.c1)))-(COALESCE(NULL, vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)-(vt1.c1)))-(COALESCE(NULL, vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY)));
SELECT * FROM vt1 WHERE (((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0))) NOTNULL)) ORDER BY vt1.c1 ASC  NULLS LAST, ((vt1.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS LAST, ((vt1.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0))) NOTNULL)) ORDER BY vt1.c1 ASC  NULLS LAST, ((vt1.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS LAST, ((vt1.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0))) NOTNULL)) ORDER BY vt1.c1 ASC  NULLS LAST, ((vt1.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) IN ((((vt0.c0))=((vt0.c1)))))) ORDER BY ABS(CAST(vt0.c1 AS BLOB))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<<((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) IN ((((vt0.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(CAST(vt0.c1 AS BLOB))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<<((+ (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) IN ((((vt0.c0))=((vt0.c1)))))) ORDER BY ABS(CAST(vt0.c1 AS BLOB))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<<((+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) IN ((((vt0.c0))==((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(CAST(vt0.c1 AS BLOB))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<<((+ (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) IN ((((vt0.c0))=((vt0.c1)))))) ORDER BY ABS(CAST(vt0.c1 AS BLOB))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)<<((+ (vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN 0.1646693064832334 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)AND(0.8983414268400801)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN 0.1646693064832334 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)AND(0.8983414268400801)))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN 0.1646693064832334 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)AND(0.8983414268400801)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN 0.1646693064832334 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)AND(0.8983414268400801)))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c0  WHEN 0.1646693064832334 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)AND(0.8983414268400801)))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.6746317575199037)) THEN (- (vt0.c1)) WHEN TYPEOF(vt0.c0) THEN x'' WHEN vt0.c1 THEN NULL ELSE vt1.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.6746317575199037)) THEN (- (vt0.c1)) WHEN TYPEOF(vt0.c0) THEN x'' WHEN vt0.c1 THEN NULL ELSE vt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.6746317575199037)) THEN (- (vt0.c1)) WHEN TYPEOF(vt0.c0) THEN x'' WHEN vt0.c1 THEN NULL ELSE vt1.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.6746317575199037)) THEN (- (vt0.c1)) WHEN TYPEOF(vt0.c0) THEN x'' WHEN vt0.c1 THEN NULL ELSE vt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (0.6746317575199037)) THEN (- (vt0.c1)) WHEN TYPEOF(vt0.c0) THEN x'' WHEN vt0.c1 THEN NULL ELSE vt1.c1 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1)IS(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) ORDER BY ((((vt1.c1 COLLATE NOCASE)OR(LIKELY(DISTINCT vt1.c1))))OR(NULL)) DESC  NULLS FIRST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)IS(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1 COLLATE NOCASE)OR(LIKELY(DISTINCT vt1.c1))))OR(NULL)) DESC  NULLS FIRST, vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1)IS(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) ORDER BY ((((vt1.c1 COLLATE NOCASE)OR(LIKELY(DISTINCT vt1.c1))))OR(NULL)) DESC  NULLS FIRST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1)IS(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1 COLLATE NOCASE)OR(LIKELY(DISTINCT vt1.c1))))OR(NULL)) DESC  NULLS FIRST, vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1)IS(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0) IS FALSE) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) ORDER BY ((((vt1.c1 COLLATE NOCASE)OR(LIKELY(DISTINCT vt1.c1))))OR(NULL)) DESC  NULLS FIRST, vt1.c0 DESC;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0)+(vt0.c1)) IN (vt1.c1 COLLATE BINARY))) ORDER BY '728115431'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)+(vt0.c1)) IN (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY '728115431'  NULLS LAST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0)+(vt0.c1)) IN (vt1.c1 COLLATE BINARY))) ORDER BY '728115431'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)+(vt0.c1)) IN (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY '728115431'  NULLS LAST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0)+(vt0.c1)) IN (vt1.c1 COLLATE BINARY))) ORDER BY '728115431'  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt1.c1) NOT NULL)))) ORDER BY (~ (((vt0.c1)=(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((vt0.c1)==(vt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt1.c1) NOT NULL)))) ORDER BY (~ (((vt0.c1)=(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((vt0.c1)==(vt1.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt1.c1) NOT NULL)))) ORDER BY (~ (((vt0.c1)=(vt1.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((0.47339529495433164) BETWEEN (vt1.c1) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.47339529495433164) BETWEEN (vt1.c1) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((0.47339529495433164) BETWEEN (vt1.c1) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.47339529495433164) BETWEEN (vt1.c1) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((0.47339529495433164) BETWEEN (vt1.c1) AND (vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE (((((LAST_INSERT_ROWID())AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (0Xffffffff8fbde546)))))AND(0x8b191d7))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LAST_INSERT_ROWID())AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (0xffffffff8fbde546)))))AND(0X8b191d7))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((LAST_INSERT_ROWID())AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (0Xffffffff8fbde546)))))AND(0x8b191d7))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LAST_INSERT_ROWID())AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (0xffffffff8fbde546)))))AND(0X8b191d7))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((LAST_INSERT_ROWID())AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (0Xffffffff8fbde546)))))AND(0x8b191d7))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0))))<>(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0))))!=(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0))))<>(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0))))!=(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0))))<>(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt1 WHERE ('-1990226322') ORDER BY ((((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR('1320705905')))OR(((vt1.c1)IS NOT(vt1.c1)))))AND(((((((((vt1.c1)AND(x'')))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))))), ((((((vt1.c1) NOTNULL))AND(vt1.c0 COLLATE RTRIM)))OR(NULL COLLATE BINARY)), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((-1.728519379E9) NOT NULL)) AND (((vt1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT (('-1990226322') IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR('1320705905')))OR(((vt1.c1)IS NOT(vt1.c1)))))AND(((((((((vt1.c1)AND(x'')))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))))), ((((((vt1.c1) NOTNULL))AND(vt1.c0 COLLATE RTRIM)))OR(NULL COLLATE BINARY)), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((-1.728519379E9) NOT NULL)) AND (((vt1.c0) IS FALSE))) DESC);
SELECT * FROM vt1 WHERE ('-1990226322') ORDER BY ((((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR('1320705905')))OR(((vt1.c1)IS NOT(vt1.c1)))))AND(((((((((vt1.c1)AND(x'')))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))))), ((((((vt1.c1) NOTNULL))AND(vt1.c0 COLLATE RTRIM)))OR(NULL COLLATE BINARY)), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((-1.728519379E9) NOT NULL)) AND (((vt1.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT (('-1990226322') IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR('1320705905')))OR(((vt1.c1)IS NOT(vt1.c1)))))AND(((((((((vt1.c1)AND(x'')))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))))), ((((((vt1.c1) NOTNULL))AND(vt1.c0 COLLATE RTRIM)))OR(NULL COLLATE BINARY)), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((-1.728519379E9) NOT NULL)) AND (((vt1.c0) IS FALSE))) DESC);
SELECT * FROM vt1 WHERE ('-1990226322') ORDER BY ((((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR('1320705905')))OR(((vt1.c1)IS NOT(vt1.c1)))))AND(((((((((vt1.c1)AND(x'')))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))))OR((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))))), ((((((vt1.c1) NOTNULL))AND(vt1.c0 COLLATE RTRIM)))OR(NULL COLLATE BINARY)), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((-1.728519379E9) NOT NULL)) AND (((vt1.c0) IS FALSE))) DESC;
SELECT * FROM vt0, vt1 WHERE (RTRIM((('0.624729086619691')>=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((RTRIM((('0.624729086619691')>=(vt1.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (RTRIM((('0.624729086619691')>=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((RTRIM((('0.624729086619691')>=(vt1.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (RTRIM((('0.624729086619691')>=(vt1.c1))));
SELECT ALL * FROM vt1 WHERE (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY ((((vt1.c1) IS FALSE))+((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) IS FALSE))+((NOT (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY ((((vt1.c1) IS FALSE))+((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) IS FALSE))+((NOT (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY ((((vt1.c1) IS FALSE))+((NOT (vt1.c0))));
SELECT * FROM vt1, vt0 WHERE (TYPEOF((vt0.c1 IN (vt1.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((vt0.c1 IN (vt1.c0, vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TYPEOF((vt0.c1 IN (vt1.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((vt0.c1 IN (vt1.c0, vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TYPEOF((vt0.c1 IN (vt1.c0, vt0.c1))));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((((((vt0.c0))<>((vt0.c1))))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR('rnᑈ')), (+ (((vt1.c0)<>(vt0.c1))))  NULLS LAST, ((((((((vt0.c0 COLLATE RTRIM)OR(vt0.c1)))OR(vt1.c0 COLLATE BINARY)))AND(CAST(vt1.c1 AS REAL))))AND((((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt0.c0))<>((vt0.c1))))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR('rnᑈ')), (+ (((vt1.c0)<>(vt0.c1))))  NULLS LAST, ((((((((vt0.c0 COLLATE RTRIM)OR(vt0.c1)))OR(vt1.c0 COLLATE BINARY)))AND(CAST(vt1.c1 AS REAL))))AND((((vt1.c0))>=((vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((((((vt0.c0))<>((vt0.c1))))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR('rnᑈ')), (+ (((vt1.c0)<>(vt0.c1))))  NULLS LAST, ((((((((vt0.c0 COLLATE RTRIM)OR(vt0.c1)))OR(vt1.c0 COLLATE BINARY)))AND(CAST(vt1.c1 AS REAL))))AND((((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt0.c0))<>((vt0.c1))))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR('rnᑈ')), (+ (((vt1.c0)<>(vt0.c1))))  NULLS LAST, ((((((((vt0.c0 COLLATE RTRIM)OR(vt0.c1)))OR(vt1.c0 COLLATE BINARY)))AND(CAST(vt1.c1 AS REAL))))AND((((vt1.c0))>=((vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((((((vt0.c0))<>((vt0.c1))))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR('rnᑈ')), (+ (((vt1.c0)<>(vt0.c1))))  NULLS LAST, ((((((((vt0.c0 COLLATE RTRIM)OR(vt0.c1)))OR(vt1.c0 COLLATE BINARY)))AND(CAST(vt1.c1 AS REAL))))AND((((vt1.c0))>=((vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) AS INTEGER)) ORDER BY CAST(LAST_INSERT_ROWID() AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(LAST_INSERT_ROWID() AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) AS INTEGER)) ORDER BY CAST(LAST_INSERT_ROWID() AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(LAST_INSERT_ROWID() AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CAST(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) AS INTEGER)) ORDER BY CAST(LAST_INSERT_ROWID() AS REAL) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS BLOB));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((TRIM(vt0.c0, vt0.c1)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TRIM(vt0.c0, vt0.c1)) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((TRIM(vt0.c0, vt0.c1)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TRIM(vt0.c0, vt0.c1)) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY ((TRIM(vt0.c0, vt0.c1)) IS FALSE)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)>>(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)>>(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)>>(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (57898067) ORDER BY CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((57898067) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 WHERE (57898067) ORDER BY CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((57898067) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 WHERE (57898067) ORDER BY CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE BINARY;
SELECT * FROM vt1 WHERE ((- (0.4749855398472187))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 END IN (((0.4744653004102056)*(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (0.4749855398472187))) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 END IN (((0.4744653004102056)*(vt1.c1))))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((- (0.4749855398472187))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 END IN (((0.4744653004102056)*(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (0.4749855398472187))) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 END IN (((0.4744653004102056)*(vt1.c1))))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((- (0.4749855398472187))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 END IN (((0.4744653004102056)*(vt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON TRIM(NULL, CAST(vt0.c0 AS NUMERIC)) WHERE ((NOT ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON TRIM(NULL, CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON TRIM(NULL, CAST(vt0.c0 AS NUMERIC)) WHERE ((NOT ((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON TRIM(NULL, CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON TRIM(NULL, CAST(vt0.c0 AS NUMERIC)) WHERE ((NOT ((- (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((vt1.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)>(vt0.c1))))=((vt0.c1 COLLATE RTRIM)))) ORDER BY (((((((((vt0.c0)OR(NULL)))AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c1)) IN ()) ASC, UNLIKELY(vt1.c0), ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)>(vt0.c1))))=((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt0.c0)OR(NULL)))AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c1)) IN ()) ASC, UNLIKELY(vt1.c0), ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))) NOTNULL) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)>(vt0.c1))))=((vt0.c1 COLLATE RTRIM)))) ORDER BY (((((((((vt0.c0)OR(NULL)))AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c1)) IN ()) ASC, UNLIKELY(vt1.c0), ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)>(vt0.c1))))=((vt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((((vt0.c0)OR(NULL)))AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c1)) IN ()) ASC, UNLIKELY(vt1.c0), ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))) NOTNULL) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)>(vt0.c1))))=((vt0.c1 COLLATE RTRIM)))) ORDER BY (((((((((vt0.c0)OR(NULL)))AND(vt1.c1)))AND(vt1.c1)))AND(vt0.c1)) IN ()) ASC, UNLIKELY(vt1.c0), ((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))) NOTNULL) DESC;
SELECT * FROM vt0 WHERE (((((x'')<=(vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((LOWER(DISTINCT vt0.c0))+(((vt0.c1)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((x'')<=(vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((LOWER(DISTINCT vt0.c0))+(((vt0.c1)>>(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((x'')<=(vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((LOWER(DISTINCT vt0.c0))+(((vt0.c1)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((x'')<=(vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((LOWER(DISTINCT vt0.c0))+(((vt0.c1)>>(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((x'')<=(vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((LOWER(DISTINCT vt0.c0))+(((vt0.c1)>>(vt0.c0))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))) WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN ((((0.3596882493895469, vt1.c1, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c1, vt1.c1)))) AND (((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN ((((0.3596882493895469, vt1.c1, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c1, vt1.c1)))) AND (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))) WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN ((((0.3596882493895469, vt1.c1, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c1, vt1.c1)))) AND (((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN ((((0.3596882493895469, vt1.c1, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c1, vt1.c1)))) AND (((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (- (((vt1.c1) BETWEEN (NULL) AND (vt1.c1)))) WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1))) BETWEEN ((((0.3596882493895469, vt1.c1, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt1.c1, vt1.c1, vt1.c1)))) AND (((vt0.c0)%(vt0.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c1 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c1 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c1 COLLATE BINARY AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE BINARY)AND(json_patch(vt1.c1, vt1.c1))))OR((((vt1.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE BINARY)AND(json_patch(vt1.c1, vt1.c1))))OR((((vt1.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE BINARY)AND(json_patch(vt1.c1, vt1.c1))))OR((((vt1.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE BINARY)AND(json_patch(vt1.c1, vt1.c1))))OR((((vt1.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE BINARY)AND(json_patch(vt1.c1, vt1.c1))))OR((((vt1.c0))<=((vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)!=(vt0.c0)))&(((vt0.c1)&(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)!=(vt0.c0)))&(((vt0.c1)&(NULL))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)!=(vt0.c0)))&(((vt0.c1)&(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)!=(vt0.c0)))&(((vt0.c1)&(NULL))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c1)!=(vt0.c0)))&(((vt0.c1)&(NULL)))));
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL))) ORDER BY (((vt1.c1 COLLATE NOCASE))=((vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1 COLLATE NOCASE))=((vt1.c1))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL))) ORDER BY (((vt1.c1 COLLATE NOCASE))=((vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1 COLLATE NOCASE))=((vt1.c1))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL))) ORDER BY (((vt1.c1 COLLATE NOCASE))=((vt1.c1))) DESC;
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1))&(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR((vt0.c0 IN ()))))AND(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1))&(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR((vt0.c0 IN ()))))AND(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(vt0.c0)) DESC);
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1))&(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR((vt0.c0 IN ()))))AND(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1))&(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR((vt0.c0 IN ()))))AND(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(vt0.c0)) DESC);
SELECT * FROM vt0 WHERE (((TRIM(DISTINCT vt0.c1))&(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR((vt0.c0 IN ()))))AND(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(vt0.c0)) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)<<(vt0.c1)))IS(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt0.c1)))IS(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)<<(vt0.c1)))IS(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt0.c1)))IS(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)<<(vt0.c1)))IS(vt1.c0 COLLATE BINARY)));
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND('%N!B')))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND('%N!B')))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND('%N!B')))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND('%N!B')))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt1.c1)))AND('%N!B')))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1) NOT NULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))<<((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((x'')))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7266916549235958)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))<<((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((x'')))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7266916549235958)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))<<((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((x'')))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7266916549235958)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))<<((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((x'')))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7266916549235958)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))<<((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((x'')))))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7266916549235958)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN ((1481413098) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)<>(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c0))<((0.9144463514202994, '㯏,', vt0.c0))) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((1481413098) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)!=(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c0))<((0.9144463514202994, '㯏,', vt0.c0))) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN ((1481413098) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)<>(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c0))<((0.9144463514202994, '㯏,', vt0.c0))) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((1481413098) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)!=(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c0))<((0.9144463514202994, '㯏,', vt0.c0))) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOT NULL) END);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN ((1481413098) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)<>(vt0.c1)) WHEN (((vt0.c0, vt0.c1, vt0.c0))<((0.9144463514202994, '㯏,', vt0.c0))) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN ((vt0.c0) NOT NULL) END;
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN (NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN (NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN (NULL)));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(0Xffffffffb5d10ec3 AS INTEGER) THEN json_array_length(vt1.c0, vt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(0Xffffffffb5d10ec3 AS INTEGER) THEN json_array_length(vt1.c0, vt1.c1) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(0Xffffffffb5d10ec3 AS INTEGER) THEN json_array_length(vt1.c0, vt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(0Xffffffffb5d10ec3 AS INTEGER) THEN json_array_length(vt1.c0, vt1.c1) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CAST(0Xffffffffb5d10ec3 AS INTEGER) THEN json_array_length(vt1.c0, vt1.c1) END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c1)>=(vt1.c0))))) WHERE ((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), TRIM(DISTINCT vt0.c0, NULL), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt1.c0 END)) AND (((((vt0.c1))>=((vt1.c0))), 1818241737, CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'9d18' THEN vt0.c1 END, (((vt0.c1))<=((vt1.c0))), ((vt0.c1)AND(vt0.c0)))))) ORDER BY ((vt1.c0)*(vt0.c1)) COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), TRIM(DISTINCT vt0.c0, NULL), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt1.c0 END)) AND (((((vt0.c1))>=((vt1.c0))), 1818241737, CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'9d18' THEN vt0.c1 END, (((vt0.c1))<=((vt1.c0))), ((vt0.c1)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c1)>=(vt1.c0))))) ORDER BY ((vt1.c0)*(vt0.c1)) COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c1)>=(vt1.c0))))) WHERE ((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), TRIM(DISTINCT vt0.c0, NULL), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt1.c0 END)) AND (((((vt0.c1))>=((vt1.c0))), 1818241737, CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'9d18' THEN vt0.c1 END, (((vt0.c1))<=((vt1.c0))), ((vt0.c1)AND(vt0.c0)))))) ORDER BY ((vt1.c0)*(vt0.c1)) COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), TRIM(DISTINCT vt0.c0, NULL), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt1.c0 END)) AND (((((vt0.c1))>=((vt1.c0))), 1818241737, CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'9d18' THEN vt0.c1 END, (((vt0.c1))<=((vt1.c0))), ((vt0.c1)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c1)>=(vt1.c0))))) ORDER BY ((vt1.c0)*(vt0.c1)) COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c1)>=(vt1.c0))))) WHERE ((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))), TRIM(DISTINCT vt0.c0, NULL), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt1.c0 END)) AND (((((vt0.c1))>=((vt1.c0))), 1818241737, CASE vt0.c0  WHEN '' THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'9d18' THEN vt0.c1 END, (((vt0.c1))<=((vt1.c0))), ((vt0.c1)AND(vt0.c0)))))) ORDER BY ((vt1.c0)*(vt0.c1)) COLLATE RTRIM, TYPEOF(DISTINCT vt1.c0 COLLATE RTRIM) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (~ ((vt0.c1 IN (vt0.c1)))), CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (0.8983414268400801)) THEN ((vt0.c0) NOTNULL) ELSE ((vt1.c1)LIKE(vt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ ((vt0.c1 IN (vt0.c1)))), CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (0.8983414268400801)) THEN ((vt0.c0) NOTNULL) ELSE ((vt1.c1)LIKE(vt1.c1)) END DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (~ ((vt0.c1 IN (vt0.c1)))), CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (0.8983414268400801)) THEN ((vt0.c0) NOTNULL) ELSE ((vt1.c1)LIKE(vt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ ((vt0.c1 IN (vt0.c1)))), CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (0.8983414268400801)) THEN ((vt0.c0) NOTNULL) ELSE ((vt1.c1)LIKE(vt1.c1)) END DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (vt0.c1) ORDER BY (~ ((vt0.c1 IN (vt0.c1)))), CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (0.8983414268400801)) THEN ((vt0.c0) NOTNULL) ELSE ((vt1.c1)LIKE(vt1.c1)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (JULIANDAY(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)), ((vt1.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)), ((vt1.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (JULIANDAY(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)), ((vt1.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)), ((vt1.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (JULIANDAY(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)), ((vt1.c0) NOT NULL), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))));
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) BETWEEN (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) BETWEEN (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((NOT (vt1.c0))))) WHERE ('1894392042');
SELECT SUM(count) FROM (SELECT (('1894392042') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((NOT (vt1.c0))))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((NOT (vt1.c0))))) WHERE ('1894392042');
SELECT SUM(count) FROM (SELECT (('1894392042') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((NOT (vt1.c0))))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((NOT (vt1.c0))))) WHERE ('1894392042');
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) ORDER BY 0.9874617863603535  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY 0.9874617863603535  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) ORDER BY 0.9874617863603535  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY 0.9874617863603535  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL))) ORDER BY 0.9874617863603535  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY 0xffffffffe04f6b16  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED ORDER BY 0Xffffffffe04f6b16  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY 0xffffffffe04f6b16  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED ORDER BY 0Xffffffffe04f6b16  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY 0xffffffffe04f6b16  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (0.05705675025216239);
SELECT SUM(count) FROM (SELECT ALL ((0.05705675025216239) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.05705675025216239);
SELECT SUM(count) FROM (SELECT ALL ((0.05705675025216239) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.05705675025216239);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1)AND(NULL)))OR(vt1.c0)))&((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(NULL)))OR(vt1.c0)))&((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1)AND(NULL)))OR(vt1.c0)))&((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(NULL)))OR(vt1.c0)))&((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c1)AND(NULL)))OR(vt1.c0)))&((vt1.c1 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c1)))AND(vt0.c0)))OR(NULLIF(DISTINCT vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c1)))AND(vt0.c0)))OR(NULLIF(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c1)))AND(vt0.c0)))OR(NULLIF(DISTINCT vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c1)))AND(vt0.c0)))OR(NULLIF(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c1)))AND(vt0.c0)))OR(NULLIF(DISTINCT vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON json_patch(CAST(vt0.c1 AS REAL), ((vt0.c0) NOT NULL)) WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND('1954688036'))) AND ((((vt0.c0))<=((vt1.c0)))))) ORDER BY LIKELIHOOD((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), 0.3828452045106643)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND('1954688036'))) AND ((((vt0.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON json_patch(CAST(vt0.c1 AS REAL), ((vt0.c0) NOT NULL)) ORDER BY LIKELIHOOD((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), 0.3828452045106643)  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON json_patch(CAST(vt0.c1 AS REAL), ((vt0.c0) NOT NULL)) WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND('1954688036'))) AND ((((vt0.c0))<=((vt1.c0)))))) ORDER BY LIKELIHOOD((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), 0.3828452045106643)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND('1954688036'))) AND ((((vt0.c0))<=((vt1.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON json_patch(CAST(vt0.c1 AS REAL), ((vt0.c0) NOT NULL)) ORDER BY LIKELIHOOD((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), 0.3828452045106643)  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON json_patch(CAST(vt0.c1 AS REAL), ((vt0.c0) NOT NULL)) WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND('1954688036'))) AND ((((vt0.c0))<=((vt1.c0)))))) ORDER BY LIKELIHOOD((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), 0.3828452045106643)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c0)) BETWEEN (((vt1.c1 IN ()))) AND ((((((vt0.c0)OR('-1109584429')))AND(vt0.c1)))))) ORDER BY 0.658128037268959;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt1.c1 IN ()))) AND ((((((vt0.c0)OR('-1109584429')))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY 0.658128037268959);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c0)) BETWEEN (((vt1.c1 IN ()))) AND ((((((vt0.c0)OR('-1109584429')))AND(vt0.c1)))))) ORDER BY 0.658128037268959;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt1.c1 IN ()))) AND ((((((vt0.c0)OR('-1109584429')))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY 0.658128037268959);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c0)) BETWEEN (((vt1.c1 IN ()))) AND ((((((vt0.c0)OR('-1109584429')))AND(vt0.c1)))))) ORDER BY 0.658128037268959;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'') IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'1a02')==(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY ((x'')LIKE(((vt1.c0)<(vt1.c0))))  NULLS FIRST, (~ ((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'1a02')=(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((x'')LIKE(((vt1.c0)<(vt1.c0))))  NULLS FIRST, (~ ((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'1a02')==(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY ((x'')LIKE(((vt1.c0)<(vt1.c0))))  NULLS FIRST, (~ ((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'1a02')=(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((x'')LIKE(((vt1.c0)<(vt1.c0))))  NULLS FIRST, (~ ((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'1a02')==(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY ((x'')LIKE(((vt1.c0)<(vt1.c0))))  NULLS FIRST, (~ ((vt1.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0) NOT BETWEEN (LAST_INSERT_ROWID()) AND (vt1.c1))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST, (~ ((NOT (vt1.c1))))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (LAST_INSERT_ROWID()) AND (vt1.c1))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST, (~ ((NOT (vt1.c1))))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOTNULL) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0) NOT BETWEEN (LAST_INSERT_ROWID()) AND (vt1.c1))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST, (~ ((NOT (vt1.c1))))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (LAST_INSERT_ROWID()) AND (vt1.c1))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST, (~ ((NOT (vt1.c1))))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOTNULL) ASC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0) NOT BETWEEN (LAST_INSERT_ROWID()) AND (vt1.c1))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST, (~ ((NOT (vt1.c1))))  NULLS LAST, ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt1.c1)AND(vt1.c0)))AND('#gh)8%b')))AND(((vt1.c1) NOTNULL))))OR(vt1.c0 COLLATE RTRIM)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)))OR(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c1)AND(vt1.c0)))AND('#gh)8%b')))AND(((vt1.c1) NOTNULL))))OR(vt1.c0 COLLATE RTRIM)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt1.c1)AND(vt1.c0)))AND('#gh)8%b')))AND(((vt1.c1) NOTNULL))))OR(vt1.c0 COLLATE RTRIM)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)))OR(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c1)AND(vt1.c0)))AND('#gh)8%b')))AND(((vt1.c1) NOTNULL))))OR(vt1.c0 COLLATE RTRIM)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt1.c1)AND(vt1.c0)))AND('#gh)8%b')))AND(((vt1.c1) NOTNULL))))OR(vt1.c0 COLLATE RTRIM)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)))OR(vt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt1, vt0 WHERE (0.3131835537524761);
SELECT SUM(count) FROM (SELECT ((0.3131835537524761) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (0.3131835537524761);
SELECT SUM(count) FROM (SELECT ((0.3131835537524761) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (0.3131835537524761);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c0)GLOB(vt1.c1)))) AND (((- ('-764916180')))))) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((((vt1.c0)GLOB(vt1.c1)))) AND (((- ('-764916180')))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c0)GLOB(vt1.c1)))) AND (((- ('-764916180')))))) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((((vt1.c0)GLOB(vt1.c1)))) AND (((- ('-764916180')))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c0)GLOB(vt1.c1)))) AND (((- ('-764916180')))))) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt1.c1  WHEN vt0.c0 COLLATE BINARY THEN ((((((((vt1.c1)AND(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL)) END) ORDER BY ABS(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN vt0.c0 COLLATE BINARY THEN ((((((((vt1.c1)AND(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ABS(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt1.c1  WHEN vt0.c0 COLLATE BINARY THEN ((((((((vt1.c1)AND(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL)) END) ORDER BY ABS(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN vt0.c0 COLLATE BINARY THEN ((((((((vt1.c1)AND(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ABS(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt1.c1  WHEN vt0.c0 COLLATE BINARY THEN ((((((((vt1.c1)AND(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL)) END) ORDER BY ABS(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))<<(json_array(vt0.c0, vt0.c0)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))<<(json_array(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))<<(json_array(vt0.c0, vt0.c0)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))<<(json_array(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)LIKE(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)LIKE(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)LIKE(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)LIKE(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1)LIKE(vt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 WHERE (LTRIM(SQLITE_COMPILEOPTION_GET(vt0.c1))) ORDER BY (((vt1.c1)) BETWEEN ((ABS(DISTINCT vt0.c1))) AND ((0x3587b3c)));
SELECT SUM(count) FROM (SELECT ((LTRIM(SQLITE_COMPILEOPTION_GET(vt0.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) BETWEEN ((ABS(DISTINCT vt0.c1))) AND ((0x3587b3c))));
SELECT ALL * FROM vt0, vt1 WHERE (LTRIM(SQLITE_COMPILEOPTION_GET(vt0.c1))) ORDER BY (((vt1.c1)) BETWEEN ((ABS(DISTINCT vt0.c1))) AND ((0x3587b3c)));
SELECT SUM(count) FROM (SELECT ((LTRIM(SQLITE_COMPILEOPTION_GET(vt0.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) BETWEEN ((ABS(DISTINCT vt0.c1))) AND ((0x3587b3c))));
SELECT ALL * FROM vt0, vt1 WHERE (LTRIM(SQLITE_COMPILEOPTION_GET(vt0.c1))) ORDER BY (((vt1.c1)) BETWEEN ((ABS(DISTINCT vt0.c1))) AND ((0x3587b3c)));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c1) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c1) NOT NULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT NULL) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt0.c1) NOT NULL) AS REAL));
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELY((vt1.c0 IN ())));
SELECT ALL * FROM vt1 WHERE (vt1.c1 COLLATE NOCASE) ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END THEN (('-1332577030') NOTNULL) ELSE vt1.c0 END ASC  NULLS FIRST, ((vt1.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END THEN (('-1332577030') NOTNULL) ELSE vt1.c0 END ASC  NULLS FIRST, ((vt1.c0) IS FALSE) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (vt1.c1 COLLATE NOCASE) ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END THEN (('-1332577030') NOTNULL) ELSE vt1.c0 END ASC  NULLS FIRST, ((vt1.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END THEN (('-1332577030') NOTNULL) ELSE vt1.c0 END ASC  NULLS FIRST, ((vt1.c0) IS FALSE) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (vt1.c1 COLLATE NOCASE) ORDER BY CASE vt1.c0 COLLATE NOCASE  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END THEN (('-1332577030') NOTNULL) ELSE vt1.c0 END ASC  NULLS FIRST, ((vt1.c0) IS FALSE) COLLATE BINARY;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)) ORDER BY (((('142278707')OR(CASE WHEN 1e500 THEN vt0.c0 ELSE vt0.c1 END)))AND((- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((('142278707')OR(CASE WHEN 1e500 THEN vt0.c0 ELSE vt0.c1 END)))AND((- (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)) ORDER BY (((('142278707')OR(CASE WHEN 1e500 THEN vt0.c0 ELSE vt0.c1 END)))AND((- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((('142278707')OR(CASE WHEN 1e500 THEN vt0.c0 ELSE vt0.c1 END)))AND((- (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)) ORDER BY (((('142278707')OR(CASE WHEN 1e500 THEN vt0.c0 ELSE vt0.c1 END)))AND((- (vt0.c1))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND ((+ (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(((vt1.c1)GLOB(1.733865084E9))));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt1.c1)GLOB(1.733865084E9)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(((vt1.c1)GLOB(1.733865084E9))));
SELECT SUM(count) FROM (SELECT ((UPPER(((vt1.c1)GLOB(1.733865084E9)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (UPPER(((vt1.c1)GLOB(1.733865084E9))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c1))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) BETWEEN ((((vt1.c1))<((vt1.c1)))) AND ((vt1.c1 IN ())))) ORDER BY ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) BETWEEN ((((vt1.c1))<((vt1.c1)))) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) BETWEEN ((((vt1.c1))<((vt1.c1)))) AND ((vt1.c1 IN ())))) ORDER BY ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) BETWEEN ((((vt1.c1))<((vt1.c1)))) AND ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) BETWEEN ((((vt1.c1))<((vt1.c1)))) AND ((vt1.c1 IN ())))) ORDER BY ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END) ISNULL);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR('1894392042')))AND(x'')), vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (((((vt0.c0)OR('1894392042')))AND(x'')), vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR('1894392042')))AND(x'')), vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN (((((vt0.c0)OR('1894392042')))AND(x'')), vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (((((vt0.c0)OR('1894392042')))AND(x'')), vt0.c0)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c1)OR('F8}nH%')))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR('F8}nH%')))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c1)OR('F8}nH%')))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR('F8}nH%')))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c1)OR('F8}nH%')))AND(vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) NOT NULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)), vt1.c0, vt1.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) NOT NULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)), vt1.c0, vt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) NOT NULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)), vt1.c0, vt1.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) NOT NULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)), vt1.c0, vt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((x'', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) NOT NULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)), vt1.c0, vt1.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))IS NOT(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))IS NOT(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))IS NOT(CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))IS NOT(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))IS NOT(CAST(vt0.c1 AS REAL))));
SELECT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT LTRIM(0.26684295892856114, vt0.c1), 0.4995701873624515)) ORDER BY NULLIF((((vt0.c1))>=((vt0.c0))), ((vt0.c1)>(vt0.c1))) DESC  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c1 THEN '-578057092' WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)  NULLS LAST, (NOT ((((x''))<=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT LTRIM(0.26684295892856114, vt0.c1), 0.4995701873624515)) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((((vt0.c1))>=((vt0.c0))), ((vt0.c1)>(vt0.c1))) DESC  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c1 THEN '-578057092' WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)  NULLS LAST, (NOT ((((x''))<=((vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT LTRIM(0.26684295892856114, vt0.c1), 0.4995701873624515)) ORDER BY NULLIF((((vt0.c1))>=((vt0.c0))), ((vt0.c1)>(vt0.c1))) DESC  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c1 THEN '-578057092' WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)  NULLS LAST, (NOT ((((x''))<=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT LTRIM(0.26684295892856114, vt0.c1), 0.4995701873624515)) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((((vt0.c1))>=((vt0.c0))), ((vt0.c1)>(vt0.c1))) DESC  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c1 THEN '-578057092' WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)  NULLS LAST, (NOT ((((x''))<=((vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (LIKELIHOOD(DISTINCT LTRIM(0.26684295892856114, vt0.c1), 0.4995701873624515)) ORDER BY NULLIF((((vt0.c1))>=((vt0.c0))), ((vt0.c1)>(vt0.c1))) DESC  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c1 THEN '-578057092' WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)  NULLS LAST, (NOT ((((x''))<=((vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.9102742743888887));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.9102742743888887)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.9102742743888887));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.9102742743888887)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD(((vt1.c0)<<(vt1.c0)), 0.9102742743888887));
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY LOWER(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY LOWER(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LOWER(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((+ (vt0.c0))))) ORDER BY LOWER(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (SUBSTR(((vt1.c1)IS(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY ABS(((vt1.c1)/(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((vt1.c1)IS(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 ORDER BY ABS(((vt1.c1)/(vt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (SUBSTR(((vt1.c1)IS(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY ABS(((vt1.c1)/(vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((vt1.c1)IS(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt1 ORDER BY ABS(((vt1.c1)/(vt1.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (SUBSTR(((vt1.c1)IS(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY ABS(((vt1.c1)/(vt1.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json_valid(((vt0.c0)<=(vt1.c0)))) ORDER BY ((vt1.c0 COLLATE NOCASE)-(((x'') BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_valid(((vt0.c0)<=(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE)-(((x'') BETWEEN (vt1.c1) AND (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json_valid(((vt0.c0)<=(vt1.c0)))) ORDER BY ((vt1.c0 COLLATE NOCASE)-(((x'') BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_valid(((vt0.c0)<=(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE)-(((x'') BETWEEN (vt1.c1) AND (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json_valid(((vt0.c0)<=(vt1.c0)))) ORDER BY ((vt1.c0 COLLATE NOCASE)-(((x'') BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF((vt1.c1 IN ())) WHERE ((- ((+ (vt0.c1))))) ORDER BY (HEX(DISTINCT vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF((vt1.c1 IN ())) ORDER BY (HEX(DISTINCT vt0.c0) IN ()));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF((vt1.c1 IN ())) WHERE ((- ((+ (vt0.c1))))) ORDER BY (HEX(DISTINCT vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF((vt1.c1 IN ())) ORDER BY (HEX(DISTINCT vt0.c0) IN ()));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON TYPEOF((vt1.c1 IN ())) WHERE ((- ((+ (vt0.c1))))) ORDER BY (HEX(DISTINCT vt0.c0) IN ());
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, ((TRIM(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, ((TRIM(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, ((TRIM(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, ((TRIM(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (((vt1.c0) NOT NULL)))) ORDER BY (NOT ((+ (vt0.c0))))  NULLS LAST, ((TRIM(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((LTRIM(vt0.c0))IS NOT(((vt0.c0) ISNULL)))) ORDER BY (- (vt0.c1)) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0))IS NOT(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c1)) COLLATE RTRIM COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((LTRIM(vt0.c0))IS NOT(((vt0.c0) ISNULL)))) ORDER BY (- (vt0.c1)) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0))IS NOT(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c1)) COLLATE RTRIM COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((LTRIM(vt0.c0))IS NOT(((vt0.c0) ISNULL)))) ORDER BY (- (vt0.c1)) COLLATE RTRIM COLLATE BINARY;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(-1156718714 AS TEXT) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)>=(vt1.c0)) THEN 'Lq䀱KO' COLLATE NOCASE WHEN (((vt1.c1, vt0.c1, vt1.c0))<((vt1.c0, vt0.c0, vt0.c0))) THEN (('-1432154365') NOT NULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END WHERE (CASE WHEN ((vt0.c1)/(vt0.c0)) THEN (((((((((((('欖')OR(x'')))AND(vt1.c1)))AND(0.6494623365467797)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(vt0.c0)) THEN (((((((((((('欖')OR(x'')))AND(vt1.c1)))AND(0.6494623365467797)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(-1156718714 AS TEXT) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)>=(vt1.c0)) THEN 'Lq䀱KO' COLLATE NOCASE WHEN (((vt1.c1, vt0.c1, vt1.c0))<((vt1.c0, vt0.c0, vt0.c0))) THEN (('-1432154365') NOT NULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(-1156718714 AS TEXT) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)>=(vt1.c0)) THEN 'Lq䀱KO' COLLATE NOCASE WHEN (((vt1.c1, vt0.c1, vt1.c0))<((vt1.c0, vt0.c0, vt0.c0))) THEN (('-1432154365') NOT NULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END WHERE (CASE WHEN ((vt0.c1)/(vt0.c0)) THEN (((((((((((('欖')OR(x'')))AND(vt1.c1)))AND(0.6494623365467797)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE (NOT (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)/(vt0.c0)) THEN (((((((((((('欖')OR(x'')))AND(vt1.c1)))AND(0.6494623365467797)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE (NOT (vt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(-1156718714 AS TEXT) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)>=(vt1.c0)) THEN 'Lq䀱KO' COLLATE NOCASE WHEN (((vt1.c1, vt0.c1, vt1.c0))<((vt1.c0, vt0.c0, vt0.c0))) THEN (('-1432154365') NOT NULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(-1156718714 AS TEXT) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)>=(vt1.c0)) THEN 'Lq䀱KO' COLLATE NOCASE WHEN (((vt1.c1, vt0.c1, vt1.c0))<((vt1.c0, vt0.c0, vt0.c0))) THEN (('-1432154365') NOT NULL) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)) END WHERE (CASE WHEN ((vt0.c1)/(vt0.c0)) THEN (((((((((((('欖')OR(x'')))AND(vt1.c1)))AND(0.6494623365467797)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) ELSE (NOT (vt0.c1)) END);
SELECT ALL * FROM vt1 WHERE ((((1.236716502E9)-(vt1.c1)) IN ())) ORDER BY (((('')>>(vt1.c0)))>(CAST(vt1.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((1.236716502E9)-(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((('')>>(vt1.c0)))>(CAST(vt1.c1 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((1.236716502E9)-(vt1.c1)) IN ())) ORDER BY (((('')>>(vt1.c0)))>(CAST(vt1.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((1.236716502E9)-(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((('')>>(vt1.c0)))>(CAST(vt1.c1 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((1.236716502E9)-(vt1.c1)) IN ())) ORDER BY (((('')>>(vt1.c0)))>(CAST(vt1.c1 AS NUMERIC)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt0.c1)+(0.7720397550667419)))) AND ((NULL COLLATE RTRIM))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt0.c1)+(0.7720397550667419)))) AND ((NULL COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt0.c1)+(0.7720397550667419)))) AND ((NULL COLLATE RTRIM))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt0.c1)+(0.7720397550667419)))) AND ((NULL COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((vt0.c1)+(0.7720397550667419)))) AND ((NULL COLLATE RTRIM))) WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (((QUOTE('1954688036')) NOT BETWEEN ((NOT (vt1.c0))) AND (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE('1954688036')) NOT BETWEEN ((NOT (vt1.c0))) AND (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((QUOTE('1954688036')) NOT BETWEEN ((NOT (vt1.c0))) AND (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE('1954688036')) NOT BETWEEN ((NOT (vt1.c0))) AND (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((QUOTE('1954688036')) NOT BETWEEN ((NOT (vt1.c0))) AND (((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END IN ())  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (0.648332355936845)))) WHERE (((((NOT (vt0.c0))))>=((CAST(vt1.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0))))>=((CAST(vt1.c1 AS TEXT))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (0.648332355936845)))));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (0.648332355936845)))) WHERE (((((NOT (vt0.c0))))>=((CAST(vt1.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0))))>=((CAST(vt1.c1 AS TEXT))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (0.648332355936845)))));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (0.648332355936845)))) WHERE (((((NOT (vt0.c0))))>=((CAST(vt1.c1 AS TEXT)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)|(vt1.c0)) IN ())) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((('-381878695'))>((vt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)|(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((('-381878695'))>((vt1.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)|(vt1.c0)) IN ())) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((('-381878695'))>((vt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)|(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((('-381878695'))>((vt1.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)|(vt1.c0)) IN ())) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*(((('-381878695'))>((vt1.c1))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'6ff9')&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((((vt0.c1)OR(NULL)))OR('1365576646')) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)) WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0)IS NOT(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((x'6ff9')&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((((vt0.c1)OR(NULL)))OR('1365576646')) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)) WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0)IS NOT(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'6ff9')&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((((vt0.c1)OR(NULL)))OR('1365576646')) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)) WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0)IS NOT(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((x'6ff9')&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((((vt0.c1)OR(NULL)))OR('1365576646')) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)) WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0)IS NOT(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'6ff9')&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((((vt0.c1)OR(NULL)))OR('1365576646')) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)) WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt0.c0)IS NOT(vt0.c0)) END;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c1) IS FALSE)))>=(((('A*') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('' COLLATE BINARY)))OR(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('' COLLATE BINARY)))OR(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c1) IS FALSE)))>=(((('A*') NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c1) IS FALSE)))>=(((('A*') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('' COLLATE BINARY)))OR(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('' COLLATE BINARY)))OR(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c1) IS FALSE)))>=(((('A*') NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c1) IS FALSE)))>=(((('A*') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c1)))AND('' COLLATE BINARY)))OR(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND (CAST(vt0.c1 AS REAL))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ((((vt0.c0))<((x'')))))) ORDER BY ((LIKELY('303739146'))>((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))), ((((vt0.c0)GLOB(vt0.c0)))>=(((vt0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ((((vt0.c0))<((x'')))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY('303739146'))>((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))), ((((vt0.c0)GLOB(vt0.c0)))>=(((vt0.c0) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ((((vt0.c0))<((x'')))))) ORDER BY ((LIKELY('303739146'))>((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))), ((((vt0.c0)GLOB(vt0.c0)))>=(((vt0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN ((((vt0.c0))<((x'')))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY('303739146'))>((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))), ((((vt0.c0)GLOB(vt0.c0)))>=(((vt0.c0) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ((((vt0.c0))<((x'')))))) ORDER BY ((LIKELY('303739146'))>((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))), ((((vt0.c0)GLOB(vt0.c0)))>=(((vt0.c0) NOT NULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((((((vt0.c1, x'2580', vt0.c0))==((vt0.c1, vt0.c0, vt1.c1))))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT NULL))))OR(HEX(vt0.c0))))AND(SQLITE_VERSION()))) ORDER BY ((json_patch(vt1.c1, vt0.c1)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((vt0.c0))>((-2.6946369E7))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c1, x'2580', vt0.c0))==((vt0.c1, vt0.c0, vt1.c1))))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT NULL))))OR(HEX(vt0.c0))))AND(SQLITE_VERSION()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((json_patch(vt1.c1, vt0.c1)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((vt0.c0))>((-2.6946369E7))))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((((((vt0.c1, x'2580', vt0.c0))==((vt0.c1, vt0.c0, vt1.c1))))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT NULL))))OR(HEX(vt0.c0))))AND(SQLITE_VERSION()))) ORDER BY ((json_patch(vt1.c1, vt0.c1)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((vt0.c0))>((-2.6946369E7))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c1, x'2580', vt0.c0))==((vt0.c1, vt0.c0, vt1.c1))))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT NULL))))OR(HEX(vt0.c0))))AND(SQLITE_VERSION()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((json_patch(vt1.c1, vt0.c1)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((vt0.c0))>((-2.6946369E7))))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((((((vt0.c1, x'2580', vt0.c0))==((vt0.c1, vt0.c0, vt1.c1))))AND(((vt1.c0) ISNULL))))AND(((vt1.c0) NOT NULL))))OR(HEX(vt0.c0))))AND(SQLITE_VERSION()))) ORDER BY ((json_patch(vt1.c1, vt0.c1)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((((vt0.c0))>((-2.6946369E7))))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(((0.49338138084483896) NOTNULL))))AND((((vt0.c1))=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(((0.49338138084483896) NOTNULL))))AND((((vt0.c1))==((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(((0.49338138084483896) NOTNULL))))AND((((vt0.c1))=((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(((0.49338138084483896) NOTNULL))))AND((((vt0.c1))==((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(((0.49338138084483896) NOTNULL))))AND((((vt0.c1))=((vt1.c0))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ('570934854') ORDER BY TRIM(0xffffffffca847f6b, NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('570934854') IS TRUE)  as count FROM vt0, vt1 ORDER BY TRIM(0Xffffffffca847f6b, NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('570934854') ORDER BY TRIM(0xffffffffca847f6b, NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('570934854') IS TRUE)  as count FROM vt0, vt1 ORDER BY TRIM(0Xffffffffca847f6b, NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('570934854') ORDER BY TRIM(0xffffffffca847f6b, NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) ORDER BY ((((((vt1.c1)/(vt1.c0)))OR('')))AND(vt1.c1 COLLATE BINARY))  NULLS FIRST, ((((vt1.c0)/(-1408943615))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)/(vt1.c0)))OR('')))AND(vt1.c1 COLLATE BINARY))  NULLS FIRST, ((((vt1.c0)/(-1408943615))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) ORDER BY ((((((vt1.c1)/(vt1.c0)))OR('')))AND(vt1.c1 COLLATE BINARY))  NULLS FIRST, ((((vt1.c0)/(-1408943615))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)/(vt1.c0)))OR('')))AND(vt1.c1 COLLATE BINARY))  NULLS FIRST, ((((vt1.c0)/(-1408943615))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) ORDER BY ((((((vt1.c1)/(vt1.c0)))OR('')))AND(vt1.c1 COLLATE BINARY))  NULLS FIRST, ((((vt1.c0)/(-1408943615))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ('1131424172') ORDER BY CASE WHEN ABS(vt0.c1) THEN (NOT (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (('1131424172') IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ABS(vt0.c1) THEN (NOT (vt0.c0)) END DESC);
SELECT ALL * FROM vt0, vt1 WHERE ('1131424172') ORDER BY CASE WHEN ABS(vt0.c1) THEN (NOT (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (('1131424172') IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ABS(vt0.c1) THEN (NOT (vt0.c0)) END DESC);
SELECT ALL * FROM vt0, vt1 WHERE ('1131424172') ORDER BY CASE WHEN ABS(vt0.c1) THEN (NOT (vt0.c0)) END DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CAST('' AS TEXT))LIKE((- (vt0.c0))))) ORDER BY ABS(DISTINCT 142278707) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('' AS TEXT))LIKE((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT 142278707) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST('' AS TEXT))LIKE((- (vt0.c0))))) ORDER BY ABS(DISTINCT 142278707) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('' AS TEXT))LIKE((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT 142278707) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST('' AS TEXT))LIKE((- (vt0.c0))))) ORDER BY ABS(DISTINCT 142278707) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((((vt0.c0)OR(vt1.c1)))AND(vt0.c0))))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((((vt0.c0)OR(vt1.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((((vt0.c0)OR(vt1.c1)))AND(vt0.c0))))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((((vt0.c0)OR(vt1.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((((vt0.c0)OR(vt1.c1)))AND(vt0.c0))))) ORDER BY vt0.c1  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(json_extract(vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1) AS NUMERIC), CASE ((vt1.c1) NOT NULL)  WHEN ((NULL) NOTNULL) THEN CAST(vt1.c1 AS INTEGER) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(json_extract(vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1) AS NUMERIC), CASE ((vt1.c1) NOT NULL)  WHEN ((NULL) NOTNULL) THEN CAST(vt1.c1 AS INTEGER) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(json_extract(vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1) AS NUMERIC), CASE ((vt1.c1) NOT NULL)  WHEN ((NULL) NOTNULL) THEN CAST(vt1.c1 AS INTEGER) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(json_extract(vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1) AS NUMERIC), CASE ((vt1.c1) NOT NULL)  WHEN ((NULL) NOTNULL) THEN CAST(vt1.c1 AS INTEGER) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(json_extract(vt1.c1, vt1.c0, vt1.c1, vt1.c1, vt1.c0, vt1.c1) AS NUMERIC), CASE ((vt1.c1) NOT NULL)  WHEN ((NULL) NOTNULL) THEN CAST(vt1.c1 AS INTEGER) END ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)IS(vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c1)))))) ORDER BY ((LIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c1)IS(vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)IS(vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c1)))))) ORDER BY ((LIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c1)IS(vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c1)IS(vt0.c1)))) AND ((((vt0.c0)GLOB(vt0.c1)))))) ORDER BY ((LIKELY(DISTINCT vt0.c0)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))-(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END)|(vt1.c1 COLLATE NOCASE))  NULLS LAST, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN ((vt1.c0)>(vt1.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))-(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END)|(vt1.c1 COLLATE NOCASE))  NULLS LAST, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN ((vt1.c0)>(vt1.c1)) END DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))-(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END)|(vt1.c1 COLLATE NOCASE))  NULLS LAST, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN ((vt1.c0)>(vt1.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))-(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END)|(vt1.c1 COLLATE NOCASE))  NULLS LAST, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN ((vt1.c0)>(vt1.c1)) END DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))-(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END)|(vt1.c1 COLLATE NOCASE))  NULLS LAST, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN ((vt1.c0)>(vt1.c1)) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c1, vt1.c0))<>((- (vt1.c1))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c1, vt1.c0))!=((- (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c1, vt1.c0))<>((- (vt1.c1))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c1, vt1.c0))!=((- (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c1, vt1.c0))<>((- (vt1.c1))))) ORDER BY NULL  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (NULLIF(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (NOT (vt1.c0)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (NOT (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (NULLIF(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (NOT (vt1.c0)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (NOT (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (NULLIF(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (NOT (vt1.c0)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (-1409361454) ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1409361454) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (-1409361454) ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1409361454) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (-1409361454) ORDER BY CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) ISNULL) IN ())) ORDER BY ((vt0.c0) NOT BETWEEN ((+ ('⁭7B3'))) AND ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN ((+ ('⁭7B3'))) AND ((~ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) ISNULL) IN ())) ORDER BY ((vt0.c0) NOT BETWEEN ((+ ('⁭7B3'))) AND ((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN ((+ ('⁭7B3'))) AND ((~ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) ISNULL) IN ())) ORDER BY ((vt0.c0) NOT BETWEEN ((+ ('⁭7B3'))) AND ((~ (vt0.c0))));
SELECT * FROM vt1, vt0 WHERE ((- ((1131424172 IN (vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((1131424172 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- ((1131424172 IN (vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((1131424172 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- ((1131424172 IN (vt0.c1, vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((+ (((vt0.c1)||(vt0.c1))))) ORDER BY ((((NULL)) BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)||(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((NULL)) BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((+ (((vt0.c1)||(vt0.c1))))) ORDER BY ((((NULL)) BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1)||(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((NULL)) BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((+ (((vt0.c1)||(vt0.c1))))) ORDER BY ((((NULL)) BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE ((('-1156718714') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('-1156718714') IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((('-1156718714') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('-1156718714') IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((('-1156718714') IS FALSE));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)=(vt1.c0)))AND((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))))AND(vt1.c0)) WHERE ((+ (((0.5292796804818117)<(vt0.c0))))) ORDER BY (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.5292796804818117)<(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)=(vt1.c0)))AND((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))))AND(vt1.c0)) ORDER BY (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)=(vt1.c0)))AND((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))))AND(vt1.c0)) WHERE ((+ (((0.5292796804818117)<(vt0.c0))))) ORDER BY (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((0.5292796804818117)<(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)=(vt1.c0)))AND((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))))AND(vt1.c0)) ORDER BY (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((((vt0.c0)=(vt1.c0)))AND((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))))AND(vt1.c0)) WHERE ((+ (((0.5292796804818117)<(vt0.c0))))) ORDER BY (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c1 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((- (0.7194690387425134)) IN ())) ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))!=(((~ (vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((- (0.7194690387425134)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))<>(((~ (vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((- (0.7194690387425134)) IN ())) ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))!=(((~ (vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((- (0.7194690387425134)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))<>(((~ (vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((- (0.7194690387425134)) IN ())) ORDER BY (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))!=(((~ (vt0.c1))))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) IS FALSE)) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS FALSE)) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) IS FALSE)) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS FALSE)) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) IS FALSE)) BETWEEN (vt1.c1 COLLATE NOCASE) AND (CASE WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((NULLIF(DISTINCT NULL, vt0.c0))AND(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt0.c1)<<(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))!=((vt0.c1))))) DESC  NULLS LAST, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST, vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT NULL, vt0.c0))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<<(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))<>((vt0.c1))))) DESC  NULLS LAST, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST, vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((NULLIF(DISTINCT NULL, vt0.c0))AND(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt0.c1)<<(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))!=((vt0.c1))))) DESC  NULLS LAST, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST, vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT NULL, vt0.c0))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<<(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))<>((vt0.c1))))) DESC  NULLS LAST, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST, vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((NULLIF(DISTINCT NULL, vt0.c0))AND(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt0.c1)<<(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((((vt0.c0))!=((vt0.c1))))) DESC  NULLS LAST, (+ (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))  NULLS LAST, vt0.c1 ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)>=(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)>=(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)>=(TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)>=(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)>=(TRIM(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)<=(vt1.c0)))IS((~ (vt1.c0))))) ORDER BY ((((vt1.c1)|(vt1.c0))) BETWEEN (((vt1.c1) ISNULL)) AND (((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt1.c0)))IS((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((((vt1.c1)|(vt1.c0))) BETWEEN (((vt1.c1) ISNULL)) AND (((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)<=(vt1.c0)))IS((~ (vt1.c0))))) ORDER BY ((((vt1.c1)|(vt1.c0))) BETWEEN (((vt1.c1) ISNULL)) AND (((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt1.c0)))IS((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((((vt1.c1)|(vt1.c0))) BETWEEN (((vt1.c1) ISNULL)) AND (((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)<=(vt1.c0)))IS((~ (vt1.c0))))) ORDER BY ((((vt1.c1)|(vt1.c0))) BETWEEN (((vt1.c1) ISNULL)) AND (((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)IS NOT(vt1.c1))  WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 COLLATE BINARY END) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND (('[]')))  NULLS FIRST, ((NOT (vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1)IS NOT(vt1.c1))  WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND (('[]')))  NULLS FIRST, ((NOT (vt1.c1)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)IS NOT(vt1.c1))  WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 COLLATE BINARY END) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND (('[]')))  NULLS FIRST, ((NOT (vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1)IS NOT(vt1.c1))  WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND (('[]')))  NULLS FIRST, ((NOT (vt1.c1)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)IS NOT(vt1.c1))  WHEN ((vt1.c0)IS(vt1.c0)) THEN vt1.c0 COLLATE BINARY END) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND (('[]')))  NULLS FIRST, ((NOT (vt1.c1)) IN ());
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY (+ ((vt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ ((vt0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY (+ ((vt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ ((vt0.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE NOCASE) ORDER BY (+ ((vt0.c1 IN ()))) DESC;
SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c1)==(vt1.c1))  WHEN 0.9874617863603535 THEN vt1.c0 WHEN (- (vt0.c1)) THEN (x'' IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt1.c1 END ELSE CAST(vt0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)==(vt1.c1))  WHEN 0.9874617863603535 THEN vt1.c0 WHEN (- (vt0.c1)) THEN (x'' IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt1.c1 END ELSE CAST(vt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c1)==(vt1.c1))  WHEN 0.9874617863603535 THEN vt1.c0 WHEN (- (vt0.c1)) THEN (x'' IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt1.c1 END ELSE CAST(vt0.c1 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)==(vt1.c1))  WHEN 0.9874617863603535 THEN vt1.c0 WHEN (- (vt0.c1)) THEN (x'' IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt1.c1 END ELSE CAST(vt0.c1 AS BLOB) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c1)==(vt1.c1))  WHEN 0.9874617863603535 THEN vt1.c0 WHEN (- (vt0.c1)) THEN (x'' IN ()) WHEN vt1.c0 COLLATE NOCASE THEN ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt1.c1 END ELSE CAST(vt0.c1 AS BLOB) END);
SELECT * FROM vt1, vt0 WHERE (UPPER(CAST(vt1.c1 AS NUMERIC))) ORDER BY (((NULL) NOTNULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(vt1.c1 AS NUMERIC))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NULL) NOTNULL) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (UPPER(CAST(vt1.c1 AS NUMERIC))) ORDER BY (((NULL) NOTNULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(vt1.c1 AS NUMERIC))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NULL) NOTNULL) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (UPPER(CAST(vt1.c1 AS NUMERIC))) ORDER BY (((NULL) NOTNULL) IN ()) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY CASE WHEN TYPEOF(DISTINCT vt1.c1) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 'Pa''' END WHEN (((vt1.c0))>=((vt1.c0))) THEN 0xffffffffac3ddd47 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN (+ ('')) THEN ((vt1.c0)<(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN TYPEOF(DISTINCT vt1.c1) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 'Pa''' END WHEN (((vt1.c0))>=((vt1.c0))) THEN 0xffffffffac3ddd47 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN (+ ('')) THEN ((vt1.c0)<(vt1.c0)) END ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY CASE WHEN TYPEOF(DISTINCT vt1.c1) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 'Pa''' END WHEN (((vt1.c0))>=((vt1.c0))) THEN 0xffffffffac3ddd47 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN (+ ('')) THEN ((vt1.c0)<(vt1.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN TYPEOF(DISTINCT vt1.c1) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 'Pa''' END WHEN (((vt1.c0))>=((vt1.c0))) THEN 0xffffffffac3ddd47 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN (+ ('')) THEN ((vt1.c0)<(vt1.c0)) END ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY CASE WHEN TYPEOF(DISTINCT vt1.c1) THEN CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 'Pa''' END WHEN (((vt1.c0))>=((vt1.c0))) THEN 0xffffffffac3ddd47 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN ((vt1.c0)<(vt1.c1)) THEN vt1.c0 WHEN (+ ('')) THEN ((vt1.c0)<(vt1.c0)) END ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((((((((vt1.c1)LIKE(0.8445928338943034)))OR((vt1.c0 IN ()))))AND(vt1.c1)))OR((+ (vt1.c0)))))AND(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((~ (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)LIKE(0.8445928338943034)))OR((vt1.c0 IN ()))))AND(vt1.c1)))OR((+ (vt1.c0)))))AND(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((~ (vt0.c0)) IN ()) DESC);
SELECT * FROM vt1, vt0 WHERE (((((((((((vt1.c1)LIKE(0.8445928338943034)))OR((vt1.c0 IN ()))))AND(vt1.c1)))OR((+ (vt1.c0)))))AND(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((~ (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)LIKE(0.8445928338943034)))OR((vt1.c0 IN ()))))AND(vt1.c1)))OR((+ (vt1.c0)))))AND(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((~ (vt0.c0)) IN ()) DESC);
SELECT * FROM vt1, vt0 WHERE (((((((((((vt1.c1)LIKE(0.8445928338943034)))OR((vt1.c0 IN ()))))AND(vt1.c1)))OR((+ (vt1.c0)))))AND(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((~ (vt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((NULL)))))<=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) ORDER BY ((((0.18684872859286716) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>(((vt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((NULL)))))<=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((0.18684872859286716) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>(((vt1.c1) NOTNULL))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((NULL)))))<=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) ORDER BY ((((0.18684872859286716) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>(((vt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((NULL)))))<=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((0.18684872859286716) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>(((vt1.c1) NOTNULL))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((NULL)))))<=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) ORDER BY ((((0.18684872859286716) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>(((vt1.c1) NOTNULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)>(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)>(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)>(vt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (LOWER(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)<<(vt0.c1))) NOT BETWEEN ('TReC\#hh5') AND (CASE WHEN vt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<<(vt0.c1))) NOT BETWEEN ('TReC\#hh5') AND (CASE WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)<<(vt0.c1))) NOT BETWEEN ('TReC\#hh5') AND (CASE WHEN vt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)<<(vt0.c1))) NOT BETWEEN ('TReC\#hh5') AND (CASE WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)<<(vt0.c1))) NOT BETWEEN ('TReC\#hh5') AND (CASE WHEN vt1.c1 THEN vt1.c0 END)));
SELECT * FROM vt1, vt0 WHERE ((('-1484385208') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('-1484385208') IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((('-1484385208') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('-1484385208') IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((('-1484385208') IS TRUE));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN vt0.c1 WHEN vt1.c1 COLLATE NOCASE THEN (vt1.c0 IN (vt1.c1, vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN vt0.c1 WHEN vt1.c1 COLLATE NOCASE THEN (vt1.c0 IN (vt1.c1, vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN vt0.c1 WHEN vt1.c1 COLLATE NOCASE THEN (vt1.c0 IN (vt1.c1, vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN vt0.c1 WHEN vt1.c1 COLLATE NOCASE THEN (vt1.c0 IN (vt1.c1, vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c1 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)) THEN vt0.c1 WHEN vt1.c1 COLLATE NOCASE THEN (vt1.c0 IN (vt1.c1, vt0.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1)||(vt1.c1)))))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1)||(vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1)||(vt1.c1)))))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1)||(vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1)||(vt1.c1)))))) ORDER BY (~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT * FROM vt1, vt0 WHERE (TRIM(vt0.c1 COLLATE RTRIM)) ORDER BY (((vt1.c1 IN ()))AND('1733865084'))  NULLS LAST, (~ (((vt0.c0)GLOB(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1 IN ()))AND('1733865084'))  NULLS LAST, (~ (((vt0.c0)GLOB(vt1.c0)))) DESC);
SELECT * FROM vt1, vt0 WHERE (TRIM(vt0.c1 COLLATE RTRIM)) ORDER BY (((vt1.c1 IN ()))AND('1733865084'))  NULLS LAST, (~ (((vt0.c0)GLOB(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c1 IN ()))AND('1733865084'))  NULLS LAST, (~ (((vt0.c0)GLOB(vt1.c0)))) DESC);
SELECT * FROM vt1, vt0 WHERE ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END IN ((((vt1.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c1))), ((0.6270221315049225) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) ORDER BY ((('-1723606914'))>((vt0.c0 COLLATE RTRIM))) ASC  NULLS LAST, CAST(0.3131835537524761 COLLATE NOCASE AS NUMERIC) ASC, highlight(vt1.c1, vt1.c1, vt0.c1, vt0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END IN ((((vt1.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c1))), ((0.6270221315049225) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('-1723606914'))>((vt0.c0 COLLATE RTRIM))) ASC  NULLS LAST, CAST(0.3131835537524761 COLLATE NOCASE AS NUMERIC) ASC, highlight(vt1.c1, vt1.c1, vt0.c1, vt0.c1) COLLATE RTRIM);
SELECT * FROM vt1, vt0 WHERE ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END IN ((((vt1.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c1))), ((0.6270221315049225) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) ORDER BY ((('-1723606914'))>((vt0.c0 COLLATE RTRIM))) ASC  NULLS LAST, CAST(0.3131835537524761 COLLATE NOCASE AS NUMERIC) ASC, highlight(vt1.c1, vt1.c1, vt0.c1, vt0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END IN ((((vt1.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c1))), ((0.6270221315049225) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('-1723606914'))>((vt0.c0 COLLATE RTRIM))) ASC  NULLS LAST, CAST(0.3131835537524761 COLLATE NOCASE AS NUMERIC) ASC, highlight(vt1.c1, vt1.c1, vt0.c1, vt0.c1) COLLATE RTRIM);
SELECT * FROM vt1, vt0 WHERE ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END IN ((((vt1.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c1))), ((0.6270221315049225) NOT BETWEEN (vt1.c1) AND (vt0.c1))))) ORDER BY ((('-1723606914'))>((vt0.c0 COLLATE RTRIM))) ASC  NULLS LAST, CAST(0.3131835537524761 COLLATE NOCASE AS NUMERIC) ASC, highlight(vt1.c1, vt1.c1, vt0.c1, vt0.c1) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS INTEGER)))<=((((vt0.c1)-(vt0.c1)), (vt0.c0 IN (vt0.c1)), '-632143577')))) ORDER BY ((((0X6758ae7c) IS FALSE)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS INTEGER)))<=((((vt0.c1)-(vt0.c1)), (vt0.c0 IN (vt0.c1)), '-632143577')))) IS TRUE)  as count FROM vt0 ORDER BY ((((0x6758ae7c) IS FALSE)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS INTEGER)))<=((((vt0.c1)-(vt0.c1)), (vt0.c0 IN (vt0.c1)), '-632143577')))) ORDER BY ((((0X6758ae7c) IS FALSE)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS INTEGER)))<=((((vt0.c1)-(vt0.c1)), (vt0.c0 IN (vt0.c1)), '-632143577')))) IS TRUE)  as count FROM vt0 ORDER BY ((((0x6758ae7c) IS FALSE)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, ((vt0.c1) IS FALSE), CAST(vt0.c0 AS INTEGER)))<=((((vt0.c1)-(vt0.c1)), (vt0.c0 IN (vt0.c1)), '-632143577')))) ORDER BY ((((0X6758ae7c) IS FALSE)) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LIKE(vt1.c1, vt1.c0))+(((vt0.c1)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c1, vt1.c0))+(((vt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LIKE(vt1.c1, vt1.c0))+(((vt0.c1)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(vt1.c1, vt1.c0))+(((vt0.c1)|(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LIKE(vt1.c1, vt1.c0))+(((vt0.c1)|(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)-(vt0.c1)) IN (CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS BLOB)))) ORDER BY json_patch(HEX(vt0.c0), vt0.c0);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)-(vt0.c1)) IN (CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY json_patch(HEX(vt0.c0), vt0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)-(vt0.c1)) IN (CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS BLOB)))) ORDER BY json_patch(HEX(vt0.c0), vt0.c0);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)-(vt0.c1)) IN (CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY json_patch(HEX(vt0.c0), vt0.c0));
SELECT COUNT(*) FROM vt1 WHERE ((((- (NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((- (NULL))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((- (NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((- (NULL))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((- (NULL))) NOT NULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()) WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt0.c1 IN ()) END);
SELECT * FROM vt0 WHERE ((((vt0.c1) IS FALSE) IN ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS FALSE) IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1) IS FALSE) IN ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS FALSE) IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1) IS FALSE) IN ((vt0.c1 IN ()))));
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) ORDER BY (NOT (vt1.c1));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt1.c1)));
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) ORDER BY (NOT (vt1.c1));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt1.c1)));
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0)>>(vt0.c0)) AS BLOB)) ORDER BY (NOT (vt1.c1));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON x'3b7c' WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON x'3b7c');
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON x'3b7c' WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON x'3b7c');
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON x'3b7c' WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)+(vt0.c1))) BETWEEN ((~ (0.6270221315049225))) AND (CAST(vt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(vt0.c1))) BETWEEN ((~ (0.6270221315049225))) AND (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)+(vt0.c1))) BETWEEN ((~ (0.6270221315049225))) AND (CAST(vt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(vt0.c1))) BETWEEN ((~ (0.6270221315049225))) AND (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)+(vt0.c1))) BETWEEN ((~ (0.6270221315049225))) AND (CAST(vt1.c1 AS REAL))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)!=(NULL)))/(CAST(vt0.c1 AS INTEGER))) WHERE ((((vt0.c0, ((vt1.c0)AND(vt1.c0)), (((x''))>=((vt1.c0)))))==((x'', ((vt1.c1) NOT NULL), ((vt0.c1) ISNULL))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)))%((('') NOT BETWEEN (0xffffffffee76e13e) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, ((vt1.c0)AND(vt1.c0)), (((x''))>=((vt1.c0)))))=((x'', ((vt1.c1) NOT NULL), ((vt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<>(NULL)))/(CAST(vt0.c1 AS INTEGER))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)))%((('') NOT BETWEEN (0xffffffffee76e13e) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)!=(NULL)))/(CAST(vt0.c1 AS INTEGER))) WHERE ((((vt0.c0, ((vt1.c0)AND(vt1.c0)), (((x''))>=((vt1.c0)))))==((x'', ((vt1.c1) NOT NULL), ((vt0.c1) ISNULL))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)))%((('') NOT BETWEEN (0xffffffffee76e13e) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, ((vt1.c0)AND(vt1.c0)), (((x''))>=((vt1.c0)))))=((x'', ((vt1.c1) NOT NULL), ((vt0.c1) ISNULL))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<>(NULL)))/(CAST(vt0.c1 AS INTEGER))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)))%((('') NOT BETWEEN (0xffffffffee76e13e) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)!=(NULL)))/(CAST(vt0.c1 AS INTEGER))) WHERE ((((vt0.c0, ((vt1.c0)AND(vt1.c0)), (((x''))>=((vt1.c0)))))==((x'', ((vt1.c1) NOT NULL), ((vt0.c1) ISNULL))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)))%((('') NOT BETWEEN (0xffffffffee76e13e) AND (vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((CAST(vt1.c0 AS NUMERIC)))<>(((~ (vt1.c1)))))) ORDER BY (~ (0.7746152274036223 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS NUMERIC)))<>(((~ (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (0.7746152274036223 COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE ((((CAST(vt1.c0 AS NUMERIC)))<>(((~ (vt1.c1)))))) ORDER BY (~ (0.7746152274036223 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS NUMERIC)))<>(((~ (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (0.7746152274036223 COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE ((((CAST(vt1.c0 AS NUMERIC)))<>(((~ (vt1.c1)))))) ORDER BY (~ (0.7746152274036223 COLLATE BINARY));
SELECT * FROM vt0 WHERE ((NOT ((((((((('145854935')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY CAST((vt0.c1 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT (((NOT ((((((((('145854935')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS TEXT));
SELECT * FROM vt0 WHERE ((NOT ((((((((('145854935')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY CAST((vt0.c1 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT (((NOT ((((((((('145854935')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS TEXT));
SELECT * FROM vt0 WHERE ((NOT ((((((((('145854935')AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY CAST((vt0.c1 IN ()) AS TEXT);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)LIKE(vt0.c1)) COLLATE BINARY) ORDER BY ((((0.8359521724005639)OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt0.c1)||(x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)LIKE(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((0.8359521724005639)OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt0.c1)||(x''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)LIKE(vt0.c1)) COLLATE BINARY) ORDER BY ((((0.8359521724005639)OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt0.c1)||(x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)LIKE(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((0.8359521724005639)OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt0.c1)||(x''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)LIKE(vt0.c1)) COLLATE BINARY) ORDER BY ((((0.8359521724005639)OR(CASE WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt0.c1)||(x''))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((NULL) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (((((vt1.c0)>=(vt1.c1)), 0.8063045038610772, HEX(vt1.c0)))>((-578057092, ((vt1.c1)&(vt1.c1)), (0.6450877895567549 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)>=(vt1.c1)), 0.8063045038610772, HEX(vt1.c0)))>((-578057092, ((vt1.c1)&(vt1.c1)), (0.6450877895567549 IN ())))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (((((vt1.c0)>=(vt1.c1)), 0.8063045038610772, HEX(vt1.c0)))>((-578057092, ((vt1.c1)&(vt1.c1)), (0.6450877895567549 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)>=(vt1.c1)), 0.8063045038610772, HEX(vt1.c0)))>((-578057092, ((vt1.c1)&(vt1.c1)), (0.6450877895567549 IN ())))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (((((vt1.c0)>=(vt1.c1)), 0.8063045038610772, HEX(vt1.c0)))>((-578057092, ((vt1.c1)&(vt1.c1)), (0.6450877895567549 IN ())))) ASC;
SELECT * FROM vt1 WHERE (HEX(DISTINCT NULL)) ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0)<(vt1.c0)) THEN ROUND(vt1.c0, vt1.c0) WHEN (+ (vt1.c0)) THEN (+ (vt1.c0)) ELSE ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0)<(vt1.c0)) THEN ROUND(vt1.c0, vt1.c0) WHEN (+ (vt1.c0)) THEN (+ (vt1.c0)) ELSE ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT * FROM vt1 WHERE (HEX(DISTINCT NULL)) ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0)<(vt1.c0)) THEN ROUND(vt1.c0, vt1.c0) WHEN (+ (vt1.c0)) THEN (+ (vt1.c0)) ELSE ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0)<(vt1.c0)) THEN ROUND(vt1.c0, vt1.c0) WHEN (+ (vt1.c0)) THEN (+ (vt1.c0)) ELSE ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT * FROM vt1 WHERE (HEX(DISTINCT NULL)) ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0)<(vt1.c0)) THEN ROUND(vt1.c0, vt1.c0) WHEN (+ (vt1.c0)) THEN (+ (vt1.c0)) ELSE ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt1.c1) IS FALSE)))=(((vt1.c1 IN (vt0.c0, vt0.c0)), ((vt0.c1) ISNULL), ((vt1.c1)IS NOT('suy'))))) WHERE (CAST(vt1.c1 AS NUMERIC)) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt1.c1) IS FALSE)))=(((vt1.c1 IN (vt0.c0, vt0.c0)), ((vt0.c1) ISNULL), ((vt1.c1)IS NOT('suy'))))) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt1.c1) IS FALSE)))=(((vt1.c1 IN (vt0.c0, vt0.c0)), ((vt0.c1) ISNULL), ((vt1.c1)IS NOT('suy'))))) WHERE (CAST(vt1.c1 AS NUMERIC)) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS NUMERIC)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt1.c1) IS FALSE)))=(((vt1.c1 IN (vt0.c0, vt0.c0)), ((vt0.c1) ISNULL), ((vt1.c1)IS NOT('suy'))))) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt1.c1) IS FALSE)))=(((vt1.c1 IN (vt0.c0, vt0.c0)), ((vt0.c1) ISNULL), ((vt1.c1)IS NOT('suy'))))) WHERE (CAST(vt1.c1 AS NUMERIC)) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c1 END)AND((- (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((STRFTIME('', vt1.c0, '-294198978')) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((STRFTIME('', vt1.c0, '-294198978')) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((STRFTIME('', vt1.c0, '-294198978')) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((STRFTIME('', vt1.c0, '-294198978')) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((STRFTIME('', vt1.c0, '-294198978')) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1 WHERE ((((((vt0.c0))>((vt0.c1))))<=(((0.18684872859286716) NOT BETWEEN (vt0.c0) AND (''))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c1))))<=(((0.18684872859286716) NOT BETWEEN (vt0.c0) AND (''))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1 WHERE ((((((vt0.c0))>((vt0.c1))))<=(((0.18684872859286716) NOT BETWEEN (vt0.c0) AND (''))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c1))))<=(((0.18684872859286716) NOT BETWEEN (vt0.c0) AND (''))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1 WHERE ((((((vt0.c0))>((vt0.c1))))<=(((0.18684872859286716) NOT BETWEEN (vt0.c0) AND (''))))) ORDER BY vt0.c1 ASC;
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT CASE vt0.c1  WHEN '睊&\nDcq' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE vt0.c1  WHEN '睊&\nDcq' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT CASE vt0.c1  WHEN '睊&\nDcq' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE vt0.c1  WHEN '睊&\nDcq' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT CASE vt0.c1  WHEN '睊&\nDcq' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0, vt0.c0, -9.46324029E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))), NULL, ((vt0.c1) ISNULL)))<=((((vt0.c1) NOT NULL), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, vt0.c0, -9.46324029E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))), NULL, ((vt0.c1) ISNULL)))<=((((vt0.c1) NOT NULL), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0, vt0.c0, -9.46324029E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))), NULL, ((vt0.c1) ISNULL)))<=((((vt0.c1) NOT NULL), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, vt0.c0, -9.46324029E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))), NULL, ((vt0.c1) ISNULL)))<=((((vt0.c1) NOT NULL), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0, vt0.c0, -9.46324029E8)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))), NULL, ((vt0.c1) ISNULL)))<=((((vt0.c1) NOT NULL), vt0.c0, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE, ((0.3776799675039335)-(vt0.c0)))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0 COLLATE NOCASE, ((0.3776799675039335)-(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE, ((0.3776799675039335)-(vt0.c0)))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt0.c0 COLLATE NOCASE, ((0.3776799675039335)-(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT vt0.c0 COLLATE NOCASE, ((0.3776799675039335)-(vt0.c0)))) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT ((((vt0.c0))>((vt1.c0)))))) ORDER BY (- ((+ (x''))))  NULLS FIRST, (- ((((NULL))>=((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((+ (x''))))  NULLS FIRST, (- ((((NULL))>=((vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT ((((vt0.c0))>((vt1.c0)))))) ORDER BY (- ((+ (x''))))  NULLS FIRST, (- ((((NULL))>=((vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((+ (x''))))  NULLS FIRST, (- ((((NULL))>=((vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT ((((vt0.c0))>((vt1.c0)))))) ORDER BY (- ((+ (x''))))  NULLS FIRST, (- ((((NULL))>=((vt1.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN (((~ (vt0.c0)), ((vt0.c1) IS TRUE), CAST('' AS INTEGER))) AND ((((vt0.c1)GLOB(vt1.c1)), ((vt1.c1)<(vt1.c1)), ((vt0.c0)IS(vt0.c0))))) WHERE ((- (vt0.c1))) ORDER BY (((((vt0.c1 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND(((vt1.c0)<(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN (((~ (vt0.c0)), ((vt0.c1) IS TRUE), CAST('' AS INTEGER))) AND ((((vt0.c1)GLOB(vt1.c1)), ((vt1.c1)<(vt1.c1)), ((vt0.c0)IS(vt0.c0))))) ORDER BY (((((vt0.c1 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND(((vt1.c0)<(vt1.c1)))) ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN (((~ (vt0.c0)), ((vt0.c1) IS TRUE), CAST('' AS INTEGER))) AND ((((vt0.c1)GLOB(vt1.c1)), ((vt1.c1)<(vt1.c1)), ((vt0.c0)IS(vt0.c0))))) WHERE ((- (vt0.c1))) ORDER BY (((((vt0.c1 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND(((vt1.c0)<(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN (((~ (vt0.c0)), ((vt0.c1) IS TRUE), CAST('' AS INTEGER))) AND ((((vt0.c1)GLOB(vt1.c1)), ((vt1.c1)<(vt1.c1)), ((vt0.c0)IS(vt0.c0))))) ORDER BY (((((vt0.c1 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND(((vt1.c0)<(vt1.c1)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)IS(vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NOT (vt1.c1)), CAST(x'f061481676a5' AS NUMERIC), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (('0.7041235592119875') IS FALSE)))=(((~ (vt1.c1)), TRIM(vt1.c1), CAST(NULL AS INTEGER), ((2.042044525E9)!=(vt1.c0)), (vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c1)), CAST(x'f061481676a5' AS NUMERIC), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (('0.7041235592119875') IS FALSE)))==(((~ (vt1.c1)), TRIM(vt1.c1), CAST(NULL AS INTEGER), ((2.042044525E9)!=(vt1.c0)), (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NOT (vt1.c1)), CAST(x'f061481676a5' AS NUMERIC), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (('0.7041235592119875') IS FALSE)))=(((~ (vt1.c1)), TRIM(vt1.c1), CAST(NULL AS INTEGER), ((2.042044525E9)!=(vt1.c0)), (vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c1)), CAST(x'f061481676a5' AS NUMERIC), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (('0.7041235592119875') IS FALSE)))==(((~ (vt1.c1)), TRIM(vt1.c1), CAST(NULL AS INTEGER), ((2.042044525E9)!=(vt1.c0)), (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NOT (vt1.c1)), CAST(x'f061481676a5' AS NUMERIC), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)), (('0.7041235592119875') IS FALSE)))=(((~ (vt1.c1)), TRIM(vt1.c1), CAST(NULL AS INTEGER), ((2.042044525E9)!=(vt1.c0)), (vt1.c0 IN ())))));
SELECT COUNT(*) FROM vt0 WHERE ((~ (CASE x''  WHEN '1888114370' THEN vt0.c1 END))) ORDER BY (((((vt0.c0)AND(''))))<((((0x7e8d3dee) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE x''  WHEN '1888114370' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(''))))<((((0X7e8d3dee) NOT NULL)))));
SELECT COUNT(*) FROM vt0 WHERE ((~ (CASE x''  WHEN '1888114370' THEN vt0.c1 END))) ORDER BY (((((vt0.c0)AND(''))))<((((0x7e8d3dee) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE x''  WHEN '1888114370' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(''))))<((((0X7e8d3dee) NOT NULL)))));
SELECT COUNT(*) FROM vt0 WHERE ((~ (CASE x''  WHEN '1888114370' THEN vt0.c1 END))) ORDER BY (((((vt0.c0)AND(''))))<((((0x7e8d3dee) NOT NULL))));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((- (vt0.c1))) ISNULL) WHERE (vt0.c0) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((- (vt0.c1))) ISNULL) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((- (vt0.c1))) ISNULL) WHERE (vt0.c0) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((- (vt0.c1))) ISNULL) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((- (vt0.c1))) ISNULL) WHERE (vt0.c0) ORDER BY SQLITE_VERSION() ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c1)LIKE(vt0.c0)) IN (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)LIKE(vt0.c0)) IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)LIKE(vt0.c0)) IN (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)LIKE(vt0.c0)) IN (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)LIKE(vt0.c0)) IN (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((LIKELY(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELY(vt0.c1) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((LIKELY(vt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELY(vt0.c1) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((LIKELY(vt0.c1) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((vt1.c0)OR(vt1.c1)))AND(NULL)))))AND((((vt1.c1))<((vt1.c0))))))AND((((vt1.c0))>((vt1.c0))))))OR(CASE 0X121ab10a  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((-151205844)*(((vt1.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((vt1.c0)OR(vt1.c1)))AND(NULL)))))AND((((vt1.c1))<((vt1.c0))))))AND((((vt1.c0))>((vt1.c0))))))OR(CASE 0x121ab10a  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((-151205844)*(((vt1.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((vt1.c0)OR(vt1.c1)))AND(NULL)))))AND((((vt1.c1))<((vt1.c0))))))AND((((vt1.c0))>((vt1.c0))))))OR(CASE 0X121ab10a  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((-151205844)*(((vt1.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((vt1.c0)OR(vt1.c1)))AND(NULL)))))AND((((vt1.c1))<((vt1.c0))))))AND((((vt1.c0))>((vt1.c0))))))OR(CASE 0x121ab10a  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((-151205844)*(((vt1.c0) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((((vt1.c0)OR(vt1.c1)))AND(NULL)))))AND((((vt1.c1))<((vt1.c0))))))AND((((vt1.c0))>((vt1.c0))))))OR(CASE 0X121ab10a  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((-151205844)*(((vt1.c0) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(UPPER(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(UPPER(vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(UPPER(vt1.c0) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1 WHERE (LOWER(NULL)) ORDER BY json(((vt1.c1) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY json(((vt1.c1) IS TRUE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (LOWER(NULL)) ORDER BY json(((vt1.c1) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY json(((vt1.c1) IS TRUE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (LOWER(NULL)) ORDER BY json(((vt1.c1) IS TRUE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c1 IN ()) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (((UPPER(DISTINCT vt1.c0))-((vt1.c0 IN ())))) ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN LIKELY(DISTINCT vt0.c1) WHEN ',e' THEN CAST(vt0.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt1.c0))-((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN LIKELY(DISTINCT vt0.c1) WHEN ',e' THEN CAST(vt0.c0 AS REAL) END);
SELECT ALL * FROM vt1, vt0 WHERE (((UPPER(DISTINCT vt1.c0))-((vt1.c0 IN ())))) ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN LIKELY(DISTINCT vt0.c1) WHEN ',e' THEN CAST(vt0.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt1.c0))-((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN LIKELY(DISTINCT vt0.c1) WHEN ',e' THEN CAST(vt0.c0 AS REAL) END);
SELECT ALL * FROM vt1, vt0 WHERE (((UPPER(DISTINCT vt1.c0))-((vt1.c0 IN ())))) ORDER BY CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN LIKELY(DISTINCT vt0.c1) WHEN ',e' THEN CAST(vt0.c0 AS REAL) END;
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1)))<>('-374181620'))) ORDER BY ((((vt0.c0))<=((NULL))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))<>('-374181620'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((NULL))) IN ()));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1)))<>('-374181620'))) ORDER BY ((((vt0.c0))<=((NULL))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))<>('-374181620'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((NULL))) IN ()));
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c1)))<>('-374181620'))) ORDER BY ((((vt0.c0))<=((NULL))) IN ());
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c1) NOTNULL))AND((NOT (vt1.c1)))))AND((((vt0.c0)) NOT BETWEEN (('0.7431022918742388')) AND ((vt1.c1)))))) ORDER BY ((((vt1.c1)AND(0.2259221470994478)))OR(((vt0.c0)*(NULL)))) DESC  NULLS FIRST, (((((vt0.c1)) BETWEEN ((0X417a3512)) AND ((vt1.c1)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND (vt0.c0))  NULLS LAST, 0.07775784469769431 ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOTNULL))AND((NOT (vt1.c1)))))AND((((vt0.c0)) NOT BETWEEN (('0.7431022918742388')) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)AND(0.2259221470994478)))OR(((vt0.c0)*(NULL)))) DESC  NULLS FIRST, (((((vt0.c1)) BETWEEN ((0x417a3512)) AND ((vt1.c1)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND (vt0.c0))  NULLS LAST, 0.07775784469769431 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c1) NOTNULL))AND((NOT (vt1.c1)))))AND((((vt0.c0)) NOT BETWEEN (('0.7431022918742388')) AND ((vt1.c1)))))) ORDER BY ((((vt1.c1)AND(0.2259221470994478)))OR(((vt0.c0)*(NULL)))) DESC  NULLS FIRST, (((((vt0.c1)) BETWEEN ((0X417a3512)) AND ((vt1.c1)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND (vt0.c0))  NULLS LAST, 0.07775784469769431 ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOTNULL))AND((NOT (vt1.c1)))))AND((((vt0.c0)) NOT BETWEEN (('0.7431022918742388')) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)AND(0.2259221470994478)))OR(((vt0.c0)*(NULL)))) DESC  NULLS FIRST, (((((vt0.c1)) BETWEEN ((0x417a3512)) AND ((vt1.c1)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND (vt0.c0))  NULLS LAST, 0.07775784469769431 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c1) NOTNULL))AND((NOT (vt1.c1)))))AND((((vt0.c0)) NOT BETWEEN (('0.7431022918742388')) AND ((vt1.c1)))))) ORDER BY ((((vt1.c1)AND(0.2259221470994478)))OR(((vt0.c0)*(NULL)))) DESC  NULLS FIRST, (((((vt0.c1)) BETWEEN ((0X417a3512)) AND ((vt1.c1)))) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt1.c0))) AND (vt0.c0))  NULLS LAST, 0.07775784469769431 ASC;
SELECT * FROM vt1 WHERE (((x'6457')|(((vt1.c0)*(vt1.c1))))) ORDER BY ((((vt1.c0) NOT NULL))==(CASE WHEN vt1.c0 THEN 0.4904044792630916 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'6457')|(((vt1.c0)*(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL))==(CASE WHEN vt1.c0 THEN 0.4904044792630916 END)) ASC);
SELECT * FROM vt1 WHERE (((x'6457')|(((vt1.c0)*(vt1.c1))))) ORDER BY ((((vt1.c0) NOT NULL))==(CASE WHEN vt1.c0 THEN 0.4904044792630916 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'6457')|(((vt1.c0)*(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT NULL))==(CASE WHEN vt1.c0 THEN 0.4904044792630916 END)) ASC);
SELECT * FROM vt1 WHERE (((x'6457')|(((vt1.c0)*(vt1.c1))))) ORDER BY ((((vt1.c0) NOT NULL))==(CASE WHEN vt1.c0 THEN 0.4904044792630916 END)) ASC;
SELECT * FROM vt0 WHERE ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))==((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (~ (vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (~ (vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))==((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (~ (vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (~ (vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))==((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (~ (vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))));
SELECT * FROM vt0 WHERE (x'bb0d');
SELECT SUM(count) FROM (SELECT ((x'bb0d') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'bb0d');
SELECT SUM(count) FROM (SELECT ((x'bb0d') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'bb0d');
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0;
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c1)))|(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)));
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL))LIKE((vt0.c1 IN ())))) ORDER BY (~ (vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))LIKE((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt0.c1 COLLATE RTRIM)));
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL))LIKE((vt0.c1 IN ())))) ORDER BY (~ (vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))LIKE((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt0.c1 COLLATE RTRIM)));
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS REAL))LIKE((vt0.c1 IN ())))) ORDER BY (~ (vt0.c1 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0, vt1 WHERE (load_extension(NULL));
SELECT SUM(count) FROM (SELECT ((load_extension(NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (load_extension(NULL));
SELECT SUM(count) FROM (SELECT ((load_extension(NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0))<((vt1.c1)))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((- (vt1.c1))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c1 THEN '57898067' ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) AND ('#\>F'))  NULLS FIRST, CAST(CAST(vt1.c1 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<((vt1.c1)))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((- (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c1 THEN '57898067' ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) AND ('#\>F'))  NULLS FIRST, CAST(CAST(vt1.c1 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0))<((vt1.c1)))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((- (vt1.c1))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c1 THEN '57898067' ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) AND ('#\>F'))  NULLS FIRST, CAST(CAST(vt1.c1 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<((vt1.c1)))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((- (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c1 THEN '57898067' ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) AND ('#\>F'))  NULLS FIRST, CAST(CAST(vt1.c1 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0))<((vt1.c1)))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND ((- (vt1.c1))))) ORDER BY ((CASE vt1.c0  WHEN vt1.c1 THEN '57898067' ELSE vt1.c1 END) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) AND ('#\>F'))  NULLS FIRST, CAST(CAST(vt1.c1 AS INTEGER) AS BLOB);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'')>=(vt0.c0))) BETWEEN (vt1.c0) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(vt0.c0))) BETWEEN (vt1.c0) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'')>=(vt0.c0))) BETWEEN (vt1.c0) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(vt0.c0))) BETWEEN (vt1.c0) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'')>=(vt0.c0))) BETWEEN (vt1.c0) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)))));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN vt0.c1 COLLATE NOCASE THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c1  WHEN vt0.c0 THEN 0.18684872859286716 END END) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE NOCASE  WHEN vt0.c1 COLLATE NOCASE THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c1  WHEN vt0.c0 THEN 0.18684872859286716 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN vt0.c1 COLLATE NOCASE THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c1  WHEN vt0.c0 THEN 0.18684872859286716 END END) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE NOCASE  WHEN vt0.c1 COLLATE NOCASE THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c1  WHEN vt0.c0 THEN 0.18684872859286716 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1 COLLATE NOCASE  WHEN vt0.c1 COLLATE NOCASE THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE CASE vt0.c1  WHEN vt0.c0 THEN 0.18684872859286716 END END) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON CASE (x'' IN (vt0.c1, vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END ELSE '' END WHERE (((((((((vt0.c0)AND(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS INTEGER))))OR((vt1.c1 IN (vt1.c0, vt0.c1)))))OR((- (vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c1)>>(vt1.c1))) AND ((('-2141531313') BETWEEN (vt0.c0) AND (vt0.c1)))), vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS INTEGER))))OR((vt1.c1 IN (vt1.c0, vt0.c1)))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE (x'' IN (vt0.c1, vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END ELSE '' END ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c1)>>(vt1.c1))) AND ((('-2141531313') BETWEEN (vt0.c0) AND (vt0.c1)))), vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON CASE (x'' IN (vt0.c1, vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END ELSE '' END WHERE (((((((((vt0.c0)AND(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS INTEGER))))OR((vt1.c1 IN (vt1.c0, vt0.c1)))))OR((- (vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c1)>>(vt1.c1))) AND ((('-2141531313') BETWEEN (vt0.c0) AND (vt0.c1)))), vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS INTEGER))))OR((vt1.c1 IN (vt1.c0, vt0.c1)))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE (x'' IN (vt0.c1, vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END ELSE '' END ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c1)>>(vt1.c1))) AND ((('-2141531313') BETWEEN (vt0.c0) AND (vt0.c1)))), vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON CASE (x'' IN (vt0.c1, vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END ELSE '' END WHERE (((((((((vt0.c0)AND(CAST(vt0.c1 AS NUMERIC))))AND(CAST(vt0.c1 AS INTEGER))))OR((vt1.c1 IN (vt1.c0, vt0.c1)))))OR((- (vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c1)>>(vt1.c1))) AND ((('-2141531313') BETWEEN (vt0.c0) AND (vt0.c1)))), vt1.c0  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((((vt1.c1 IN (vt0.c0)))>=(((vt0.c0)<>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (vt0.c0)))>=(((vt0.c0)!=(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c1 IN (vt0.c0)))>=(((vt0.c0)<>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1 IN (vt0.c0)))>=(((vt0.c0)!=(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c1 IN (vt0.c0)))>=(((vt0.c0)<>(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0)))||((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(vt0.c0)))||((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0)))||((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(vt0.c0)))||((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0)))||((+ (vt0.c1)))));
SELECT * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) DESC, (+ ((((vt0.c0))<=((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) DESC, (+ ((((vt0.c0))<=((vt1.c0))))) DESC);
SELECT * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) DESC, (+ ((((vt0.c0))<=((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) DESC, (+ ((((vt0.c0))<=((vt1.c0))))) DESC);
SELECT * FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt1.c0)) BETWEEN ((((((vt1.c1)AND(vt0.c1)))OR(vt0.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) DESC, (+ ((((vt0.c0))<=((vt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE)-((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)-((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE)-((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)-((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE)-((vt0.c1 IN ()))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ('-1654486268') ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC) ASC  NULLS FIRST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1654486268') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC) ASC  NULLS FIRST, vt1.c1 ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ('-1654486268') ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC) ASC  NULLS FIRST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1654486268') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC) ASC  NULLS FIRST, vt1.c1 ASC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ('-1654486268') ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC) ASC  NULLS FIRST, vt1.c1 ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((x'5f46') NOTNULL)  WHEN ((vt1.c1)/(vt1.c0)) THEN x'' WHEN ((((NULL)AND(vt1.c1)))AND(vt1.c1)) THEN vt1.c1 WHEN ((vt1.c0)+(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'5f46') NOTNULL)  WHEN ((vt1.c1)/(vt1.c0)) THEN x'' WHEN ((((NULL)AND(vt1.c1)))AND(vt1.c1)) THEN vt1.c1 WHEN ((vt1.c0)+(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((x'5f46') NOTNULL)  WHEN ((vt1.c1)/(vt1.c0)) THEN x'' WHEN ((((NULL)AND(vt1.c1)))AND(vt1.c1)) THEN vt1.c1 WHEN ((vt1.c0)+(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'5f46') NOTNULL)  WHEN ((vt1.c1)/(vt1.c0)) THEN x'' WHEN ((((NULL)AND(vt1.c1)))AND(vt1.c1)) THEN vt1.c1 WHEN ((vt1.c0)+(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((x'5f46') NOTNULL)  WHEN ((vt1.c1)/(vt1.c0)) THEN x'' WHEN ((((NULL)AND(vt1.c1)))AND(vt1.c1)) THEN vt1.c1 WHEN ((vt1.c0)+(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END);
SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS BLOB));
SELECT * FROM vt0 WHERE (((((0.00197902047462184)AND(0.2402468015915563)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY COALESCE(DISTINCT ((vt0.c1) IS FALSE), vt0.c1, TYPEOF(DISTINCT 440230599), '-265843596')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.00197902047462184)AND(0.2402468015915563)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((vt0.c1) IS FALSE), vt0.c1, TYPEOF(DISTINCT 440230599), '-265843596')  NULLS LAST);
SELECT * FROM vt0 WHERE (((((0.00197902047462184)AND(0.2402468015915563)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY COALESCE(DISTINCT ((vt0.c1) IS FALSE), vt0.c1, TYPEOF(DISTINCT 440230599), '-265843596')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.00197902047462184)AND(0.2402468015915563)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT ((vt0.c1) IS FALSE), vt0.c1, TYPEOF(DISTINCT 440230599), '-265843596')  NULLS LAST);
SELECT * FROM vt0 WHERE (((((0.00197902047462184)AND(0.2402468015915563)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY COALESCE(DISTINCT ((vt0.c1) IS FALSE), vt0.c1, TYPEOF(DISTINCT 440230599), '-265843596')  NULLS LAST;
SELECT * FROM vt1 WHERE (((0.026472423516685994) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.026472423516685994) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((0.026472423516685994) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.026472423516685994) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((0.026472423516685994) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((ABS(vt0.c1)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (NULL))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c1)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((ABS(vt0.c1)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (NULL))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt0.c1)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((ABS(vt0.c1)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (NULL))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) ISNULL))=(0.6362524093727556)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))==(0.6362524093727556))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) ISNULL))=(0.6362524093727556)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))==(0.6362524093727556))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) ISNULL))=(0.6362524093727556)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((+ (vt1.c1)))) AND ((vt0.c0))) WHERE ('睊&\nDcq') ORDER BY (((vt1.c0 IN ()))>((((vt0.c1))>((-419095324))))) DESC  NULLS LAST, 'ns'  NULLS LAST, ((vt1.c0)|(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('睊&\nDcq') IS TRUE)  as count FROM vt1 NOT INDEXED FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((+ (vt1.c1)))) AND ((vt0.c0))) ORDER BY (((vt1.c0 IN ()))>((((vt0.c1))>((-419095324))))) DESC  NULLS LAST, 'ns'  NULLS LAST, ((vt1.c0)|(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((+ (vt1.c1)))) AND ((vt0.c0))) WHERE ('睊&\nDcq') ORDER BY (((vt1.c0 IN ()))>((((vt0.c1))>((-419095324))))) DESC  NULLS LAST, 'ns'  NULLS LAST, ((vt1.c0)|(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('睊&\nDcq') IS TRUE)  as count FROM vt1 NOT INDEXED FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((+ (vt1.c1)))) AND ((vt0.c0))) ORDER BY (((vt1.c0 IN ()))>((((vt0.c1))>((-419095324))))) DESC  NULLS LAST, 'ns'  NULLS LAST, ((vt1.c0)|(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN (((+ (vt1.c1)))) AND ((vt0.c0))) WHERE ('睊&\nDcq') ORDER BY (((vt1.c0 IN ()))>((((vt0.c1))>((-419095324))))) DESC  NULLS LAST, 'ns'  NULLS LAST, ((vt1.c0)|(CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS NUMERIC) WHERE (((((((((CAST(vt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE)))OR((((vt1.c1)) NOT BETWEEN ((-578057092)) AND ((vt1.c1))))))OR(((vt0.c0) NOTNULL))))OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE)))OR((((vt1.c1)) NOT BETWEEN ((-578057092)) AND ((vt1.c1))))))OR(((vt0.c0) NOTNULL))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS NUMERIC));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS NUMERIC) WHERE (((((((((CAST(vt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE)))OR((((vt1.c1)) NOT BETWEEN ((-578057092)) AND ((vt1.c1))))))OR(((vt0.c0) NOTNULL))))OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE)))OR((((vt1.c1)) NOT BETWEEN ((-578057092)) AND ((vt1.c1))))))OR(((vt0.c0) NOTNULL))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS NUMERIC));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST((+ (vt0.c1)) AS NUMERIC) WHERE (((((((((CAST(vt0.c0 AS TEXT))AND(vt0.c0 COLLATE NOCASE)))OR((((vt1.c1)) NOT BETWEEN ((-578057092)) AND ((vt1.c1))))))OR(((vt0.c0) NOTNULL))))OR(vt0.c1 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY SUBSTR(((vt0.c1) NOT BETWEEN (2042044525) AND (vt0.c0)), ((vt0.c0) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(((vt0.c1) NOT BETWEEN (2042044525) AND (vt0.c0)), ((vt0.c0) IS FALSE)) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY SUBSTR(((vt0.c1) NOT BETWEEN (2042044525) AND (vt0.c0)), ((vt0.c0) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(((vt0.c1) NOT BETWEEN (2042044525) AND (vt0.c0)), ((vt0.c0) IS FALSE)) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY SUBSTR(((vt0.c1) NOT BETWEEN (2042044525) AND (vt0.c0)), ((vt0.c0) IS FALSE)) ASC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c0)))OR(x'c8a27c61')))AND(((vt0.c1) IS FALSE)))) ORDER BY (((((vt0.c1)>>(vt0.c1))))>((vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN (vt0.c0)))OR(x'c8a27c61')))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)>>(vt0.c1))))>((vt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c0)))OR(x'c8a27c61')))AND(((vt0.c1) IS FALSE)))) ORDER BY (((((vt0.c1)>>(vt0.c1))))>((vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN (vt0.c0)))OR(x'c8a27c61')))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)>>(vt0.c1))))>((vt0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN (vt0.c0)))OR(x'c8a27c61')))AND(((vt0.c1) IS FALSE)))) ORDER BY (((((vt0.c1)>>(vt0.c1))))>((vt0.c1))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.7203218639039847);
SELECT SUM(count) FROM (SELECT ((0.7203218639039847) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.7203218639039847);
SELECT SUM(count) FROM (SELECT ((0.7203218639039847) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0.7203218639039847);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)!=(vt1.c1))))>=((CHAR(vt1.c1, NULL, vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)!=(vt1.c1))))>=((CHAR(vt1.c1, NULL, vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)!=(vt1.c1))))>=((CHAR(vt1.c1, NULL, vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)!=(vt1.c1))))>=((CHAR(vt1.c1, NULL, vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)!=(vt1.c1))))>=((CHAR(vt1.c1, NULL, vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE ((((vt0.c0)OR('0.9874617863603535')))AND(vt0.c0))  WHEN (vt1.c0 IN ()) THEN (0x73814031 IN ()) ELSE ((vt0.c0) NOT NULL) END WHERE (((vt1.c1) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND ('ᚾr䴫G\\Rp'))) AND (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND ('ᚾr䴫G\\Rp'))) AND (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE ((((vt0.c0)OR('0.9874617863603535')))AND(vt0.c0))  WHEN (vt1.c0 IN ()) THEN (0X73814031 IN ()) ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE ((((vt0.c0)OR('0.9874617863603535')))AND(vt0.c0))  WHEN (vt1.c0 IN ()) THEN (0x73814031 IN ()) ELSE ((vt0.c0) NOT NULL) END WHERE (((vt1.c1) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND ('ᚾr䴫G\\Rp'))) AND (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND ('ᚾr䴫G\\Rp'))) AND (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE ((((vt0.c0)OR('0.9874617863603535')))AND(vt0.c0))  WHEN (vt1.c0 IN ()) THEN (0X73814031 IN ()) ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE ((((vt0.c0)OR('0.9874617863603535')))AND(vt0.c0))  WHEN (vt1.c0 IN ()) THEN (0x73814031 IN ()) ELSE ((vt0.c0) NOT NULL) END WHERE (((vt1.c1) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND ('ᚾr䴫G\\Rp'))) AND (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c1 IN ()))OR(((vt1.c1)%(vt1.c1)))))OR((((vt1.c0))!=((vt1.c0)))))) ORDER BY ((NULL)>=(NULLIF(vt1.c1, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1 IN ()))OR(((vt1.c1)%(vt1.c1)))))OR((((vt1.c0))<>((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((NULL)>=(NULLIF(vt1.c1, vt1.c0))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c1 IN ()))OR(((vt1.c1)%(vt1.c1)))))OR((((vt1.c0))!=((vt1.c0)))))) ORDER BY ((NULL)>=(NULLIF(vt1.c1, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1 IN ()))OR(((vt1.c1)%(vt1.c1)))))OR((((vt1.c0))<>((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((NULL)>=(NULLIF(vt1.c1, vt1.c0))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c1 IN ()))OR(((vt1.c1)%(vt1.c1)))))OR((((vt1.c0))!=((vt1.c0)))))) ORDER BY ((NULL)>=(NULLIF(vt1.c1, vt1.c0))) ASC;
SELECT * FROM vt0, vt1 WHERE (0xffffffffca4ad295);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffca4ad295) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (0xffffffffca4ad295);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffca4ad295) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (0xffffffffca4ad295);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (0.5011280805160043))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (0.5011280805160043)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (0.5011280805160043))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (0.5011280805160043)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (0.5011280805160043))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c1))==((vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))=((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c1))==((vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))=((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c1))==((vt0.c0)))) IS TRUE));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c1, 'I~', 0.1349634492280618)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c1)), (NULL IN (vt1.c1, vt1.c1)), ((vt1.c1)<(vt1.c0)), (-992658913 IN ()), (('-1858025373') NOTNULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR('3?')), vt1.c0, (NOT (vt1.c0)), (((('d''i\r')AND(x'17957fb3')))AND(vt1.c0)), (~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c1, vt1.c1, 'I~', 0.1349634492280618)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c1)), (NULL IN (vt1.c1, vt1.c1)), ((vt1.c1)<(vt1.c0)), (-992658913 IN ()), (('-1858025373') NOTNULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR('3?')), vt1.c0, (NOT (vt1.c0)), (((('d''i\r')AND(x'17957fb3')))AND(vt1.c0)), (~ (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c1, 'I~', 0.1349634492280618)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c1)), (NULL IN (vt1.c1, vt1.c1)), ((vt1.c1)<(vt1.c0)), (-992658913 IN ()), (('-1858025373') NOTNULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR('3?')), vt1.c0, (NOT (vt1.c0)), (((('d''i\r')AND(x'17957fb3')))AND(vt1.c0)), (~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c1, vt1.c1, 'I~', 0.1349634492280618)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c1)), (NULL IN (vt1.c1, vt1.c1)), ((vt1.c1)<(vt1.c0)), (-992658913 IN ()), (('-1858025373') NOTNULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR('3?')), vt1.c0, (NOT (vt1.c0)), (((('d''i\r')AND(x'17957fb3')))AND(vt1.c0)), (~ (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c1, 'I~', 0.1349634492280618)) BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c1)), (NULL IN (vt1.c1, vt1.c1)), ((vt1.c1)<(vt1.c0)), (-992658913 IN ()), (('-1858025373') NOTNULL))) AND ((((((vt1.c1)AND(vt1.c1)))OR('3?')), vt1.c0, (NOT (vt1.c0)), (((('d''i\r')AND(x'17957fb3')))AND(vt1.c0)), (~ (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (NULL) AND (TOTAL_CHANGES()))) ORDER BY CAST(NULL AS NUMERIC) ASC, load_extension('5v', 1164772089) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (NULL) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS NUMERIC) ASC, load_extension('5v', 1164772089) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (NULL) AND (TOTAL_CHANGES()))) ORDER BY CAST(NULL AS NUMERIC) ASC, load_extension('5v', 1164772089) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (NULL) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS NUMERIC) ASC, load_extension('5v', 1164772089) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) AND (MIN(vt1.c1, 579253213, vt1.c0, vt1.c0)))  NULLS FIRST, (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) AND (MIN(vt1.c1, 579253213, vt1.c0, vt1.c0)))  NULLS FIRST, (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) AND (MIN(vt1.c1, 579253213, vt1.c0, vt1.c0)))  NULLS FIRST, (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) AND (MIN(vt1.c1, 579253213, vt1.c0, vt1.c0)))  NULLS FIRST, (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))) AND (MIN(vt1.c1, 579253213, vt1.c0, vt1.c0)))  NULLS FIRST, (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1))=((vt0.c1)))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))) ORDER BY ((CAST(vt1.c0 AS REAL))>(CAST(vt0.c1 AS BLOB)))  NULLS LAST, TRIM(((vt1.c0) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1))==((vt0.c1)))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL))>(CAST(vt0.c1 AS BLOB)))  NULLS LAST, TRIM(((vt1.c0) NOT NULL)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1))=((vt0.c1)))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))) ORDER BY ((CAST(vt1.c0 AS REAL))>(CAST(vt0.c1 AS BLOB)))  NULLS LAST, TRIM(((vt1.c0) NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1))==((vt0.c1)))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL))>(CAST(vt0.c1 AS BLOB)))  NULLS LAST, TRIM(((vt1.c0) NOT NULL)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((vt0.c1))=((vt0.c1)))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))))) ORDER BY ((CAST(vt1.c0 AS REAL))>(CAST(vt0.c1 AS BLOB)))  NULLS LAST, TRIM(((vt1.c0) NOT NULL)) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' ELSE vt1.c1 END)==(CAST(vt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' ELSE vt1.c1 END)==(CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' ELSE vt1.c1 END)==(CAST(vt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' ELSE vt1.c1 END)==(CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN x'' ELSE vt1.c1 END)==(CAST(vt1.c1 AS BLOB))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 COLLATE BINARY, ((x'') NOTNULL), HEX(vt0.c1), (NOT (vt0.c1)), x'c6b9'))<=((((vt0.c1)LIKE(vt0.c1)), CAST(vt0.c0 AS REAL), (vt1.c0 IN ()), DATE(vt0.c1, vt0.c0, vt1.c0), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END)))) ORDER BY 0.22833647781847743 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE BINARY, ((x'') NOTNULL), HEX(vt0.c1), (NOT (vt0.c1)), x'c6b9'))<=((((vt0.c1)LIKE(vt0.c1)), CAST(vt0.c0 AS REAL), (vt1.c0 IN ()), DATE(vt0.c1, vt0.c0, vt1.c0), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.22833647781847743 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 COLLATE BINARY, ((x'') NOTNULL), HEX(vt0.c1), (NOT (vt0.c1)), x'c6b9'))<=((((vt0.c1)LIKE(vt0.c1)), CAST(vt0.c0 AS REAL), (vt1.c0 IN ()), DATE(vt0.c1, vt0.c0, vt1.c0), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END)))) ORDER BY 0.22833647781847743 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE BINARY, ((x'') NOTNULL), HEX(vt0.c1), (NOT (vt0.c1)), x'c6b9'))<=((((vt0.c1)LIKE(vt0.c1)), CAST(vt0.c0 AS REAL), (vt1.c0 IN ()), DATE(vt0.c1, vt0.c0, vt1.c0), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.22833647781847743 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c1 COLLATE BINARY, ((x'') NOTNULL), HEX(vt0.c1), (NOT (vt0.c1)), x'c6b9'))<=((((vt0.c1)LIKE(vt0.c1)), CAST(vt0.c0 AS REAL), (vt1.c0 IN ()), DATE(vt0.c1, vt0.c0, vt1.c0), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c1 END)))) ORDER BY 0.22833647781847743 DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))));
SELECT * FROM vt1 WHERE ((((((((((('579253213')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('579253213')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (vt1.c0))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE ((((((((((('579253213')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('579253213')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (vt1.c0))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE ((((((((((('579253213')AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (vt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, 'Y0Br	j')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, (vt0.c0 IN ()), CASE vt0.c1  WHEN '' THEN vt0.c1 END)) AND (((((vt0.c1))<=((vt0.c1))), vt0.c1, (((vt0.c1))!=(('572650435')))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, 'Y0Br	j')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, (vt0.c0 IN ()), CASE vt0.c1  WHEN '' THEN vt0.c1 END)) AND (((((vt0.c1))<=((vt0.c1))), vt0.c1, (((vt0.c1))!=(('572650435'))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, 'Y0Br	j')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, (vt0.c0 IN ()), CASE vt0.c1  WHEN '' THEN vt0.c1 END)) AND (((((vt0.c1))<=((vt0.c1))), vt0.c1, (((vt0.c1))!=(('572650435')))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, 'Y0Br	j')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, (vt0.c0 IN ()), CASE vt0.c1  WHEN '' THEN vt0.c1 END)) AND (((((vt0.c1))<=((vt0.c1))), vt0.c1, (((vt0.c1))!=(('572650435'))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, 'Y0Br	j')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, (vt0.c0 IN ()), CASE vt0.c1  WHEN '' THEN vt0.c1 END)) AND (((((vt0.c1))<=((vt0.c1))), vt0.c1, (((vt0.c1))!=(('572650435')))))));
SELECT * FROM vt0 WHERE ((- (((vt0.c1)+(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c1)+(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c1)+(vt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((UNLIKELY(DISTINCT vt0.c1))IS NOT(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST(vt1.c0 COLLATE BINARY AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT vt0.c1))IS NOT(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE BINARY AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((UNLIKELY(DISTINCT vt0.c1))IS NOT(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST(vt1.c0 COLLATE BINARY AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT vt0.c1))IS NOT(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE BINARY AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((UNLIKELY(DISTINCT vt0.c1))IS NOT(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY CAST(vt1.c0 COLLATE BINARY AS REAL) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) IN ()) WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((((vt1.c1)AND(NULL)))AND(vt0.c0))) AND (CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) BETWEEN (((((vt1.c1)AND(NULL)))AND(vt0.c0))) AND (CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) IN ()));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) IN ()) WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((((vt1.c1)AND(NULL)))AND(vt0.c0))) AND (CAST(vt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) BETWEEN (((((vt1.c1)AND(NULL)))AND(vt0.c0))) AND (CAST(vt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) IN ()));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) IN ()) WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN (((((vt1.c1)AND(NULL)))AND(vt0.c0))) AND (CAST(vt1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((NOT (vt1.c0))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((NOT (vt1.c0))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((NOT (vt1.c0))))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 COLLATE RTRIM END) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)=(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 COLLATE RTRIM END) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)=(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c1 COLLATE RTRIM END) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE ((((((((vt0.c1)AND(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE ((((((((vt0.c1)AND(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE ((((((((vt0.c1)AND(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE ((((((((vt0.c1)AND(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) ELSE ((((((((vt0.c1)AND(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) END);
SELECT * FROM vt1, vt0 WHERE (TYPEOF(DISTINCT SUBSTR(vt0.c1, vt0.c1))) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT SUBSTR(vt0.c1, vt0.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c1  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (TYPEOF(DISTINCT SUBSTR(vt0.c1, vt0.c1))) ORDER BY vt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT SUBSTR(vt0.c1, vt0.c1))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c1  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (TYPEOF(DISTINCT SUBSTR(vt0.c1, vt0.c1))) ORDER BY vt1.c1  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c1 DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY vt0.c1 DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c1)))AND(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY vt0.c1 DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((0.5205031390502978) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((0.5205031390502978) IS TRUE))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((0.5205031390502978) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((0.5205031390502978) IS TRUE))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)<(vt1.c0)))) AND ((((0.5205031390502978) IS TRUE)))));
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS FALSE)) ORDER BY (NOT (((-1.51205844E8) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((-1.51205844E8) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS FALSE)) ORDER BY (NOT (((-1.51205844E8) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((-1.51205844E8) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS FALSE)) ORDER BY (NOT (((-1.51205844E8) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.7791957656723143)) ORDER BY 1e500, '';
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.7791957656723143)) IS TRUE)  as count FROM vt1 ORDER BY 1e500, '');
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.7791957656723143)) ORDER BY 1e500, '';
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.7791957656723143)) IS TRUE)  as count FROM vt1 ORDER BY 1e500, '');
SELECT ALL * FROM vt1 WHERE (LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.7791957656723143)) ORDER BY 1e500, '';
SELECT * FROM vt1 WHERE (load_extension(CASE WHEN vt1.c1 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC))) ORDER BY CASE ((vt1.c1)<(vt1.c0))  WHEN (('')&(vt1.c1)) THEN (+ ('()')) END, ((((vt1.c1)<(x''))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CASE WHEN vt1.c1 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c1)<(vt1.c0))  WHEN (('')&(vt1.c1)) THEN (+ ('()')) END, ((((vt1.c1)<(x''))) ISNULL) ASC);
SELECT * FROM vt1 WHERE (load_extension(CASE WHEN vt1.c1 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC))) ORDER BY CASE ((vt1.c1)<(vt1.c0))  WHEN (('')&(vt1.c1)) THEN (+ ('()')) END, ((((vt1.c1)<(x''))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CASE WHEN vt1.c1 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c1)<(vt1.c0))  WHEN (('')&(vt1.c1)) THEN (+ ('()')) END, ((((vt1.c1)<(x''))) ISNULL) ASC);
SELECT * FROM vt1 WHERE (load_extension(CASE WHEN vt1.c1 THEN vt1.c1 END, CAST(vt1.c0 AS NUMERIC))) ORDER BY CASE ((vt1.c1)<(vt1.c0))  WHEN (('')&(vt1.c1)) THEN (+ ('()')) END, ((((vt1.c1)<(x''))) ISNULL) ASC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c0))))<((vt0.c0)))) ORDER BY 0.10815057462803346 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS(vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.10815057462803346 ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c0))))<((vt0.c0)))) ORDER BY 0.10815057462803346 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)IS(vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.10815057462803346 ASC);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)IS(vt0.c0))))<((vt0.c0)))) ORDER BY 0.10815057462803346 ASC;
SELECT * FROM vt0, vt1 WHERE ((((LTRIM(vt1.c0, 0.05970955156694824)))!=((x'')))) ORDER BY (((vt0.c0 IN ())) NOT NULL), ((((((((CAST(vt1.c0 AS REAL))AND((vt0.c1 IN ()))))AND(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((vt1.c1 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((LTRIM(vt1.c0, 0.05970955156694824)))!=((x'')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0 IN ())) NOT NULL), ((((((((CAST(vt1.c0 AS REAL))AND((vt0.c1 IN ()))))AND(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((vt1.c1 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((LTRIM(vt1.c0, 0.05970955156694824)))!=((x'')))) ORDER BY (((vt0.c0 IN ())) NOT NULL), ((((((((CAST(vt1.c0 AS REAL))AND((vt0.c1 IN ()))))AND(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((vt1.c1 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((LTRIM(vt1.c0, 0.05970955156694824)))!=((x'')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0 IN ())) NOT NULL), ((((((((CAST(vt1.c0 AS REAL))AND((vt0.c1 IN ()))))AND(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((vt1.c1 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((LTRIM(vt1.c0, 0.05970955156694824)))!=((x'')))) ORDER BY (((vt0.c0 IN ())) NOT NULL), ((((((((CAST(vt1.c0 AS REAL))AND((vt0.c1 IN ()))))AND(CASE x''  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR((vt1.c1 IN ()))))AND(CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1 IN (vt1.c0))) IS FALSE)) ORDER BY ((((vt1.c1)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1 IN (vt1.c0))) IS FALSE)) ORDER BY ((((vt1.c1)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c1)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1 IN (vt1.c0))) IS FALSE)) ORDER BY ((((vt1.c1)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 WHERE (((LTRIM(vt1.c1, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(vt1.c1, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LTRIM(vt1.c1, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(vt1.c1, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LTRIM(vt1.c1, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((('')) BETWEEN ((NULL)) AND ((vt0.c1 COLLATE RTRIM))) WHERE (CAST(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((('')) BETWEEN ((NULL)) AND ((vt0.c1 COLLATE RTRIM))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((('')) BETWEEN ((NULL)) AND ((vt0.c1 COLLATE RTRIM))) WHERE (CAST(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((('')) BETWEEN ((NULL)) AND ((vt0.c1 COLLATE RTRIM))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((('')) BETWEEN ((NULL)) AND ((vt0.c1 COLLATE RTRIM))) WHERE (CAST(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC));
SELECT * FROM vt1 INNER JOIN vt0 ON ((x'')&(((vt0.c1) BETWEEN (0.718423371339539) AND (vt0.c1)))) WHERE (UPPER(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((x'')&(((vt0.c1) BETWEEN (0.718423371339539) AND (vt0.c1)))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((x'')&(((vt0.c1) BETWEEN (0.718423371339539) AND (vt0.c1)))) WHERE (UPPER(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((x'')&(((vt0.c1) BETWEEN (0.718423371339539) AND (vt0.c1)))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((x'')&(((vt0.c1) BETWEEN (0.718423371339539) AND (vt0.c1)))) WHERE (UPPER(vt1.c0 COLLATE NOCASE));
SELECT * FROM vt1 WHERE (((CAST('12468476' AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('12468476' AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST('12468476' AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('12468476' AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST('12468476' AS BLOB)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (vt1.c1 COLLATE RTRIM, ((vt1.c1) NOTNULL)))) ORDER BY (~ (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt1.c1, -2.94198978E8))!=((vt0.c0, vt0.c1, vt1.c1))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (vt1.c1 COLLATE RTRIM, ((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt1.c1, -2.94198978E8))!=((vt0.c0, vt0.c1, vt1.c1))) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (vt1.c1 COLLATE RTRIM, ((vt1.c1) NOTNULL)))) ORDER BY (~ (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt1.c1, -2.94198978E8))!=((vt0.c0, vt0.c1, vt1.c1))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (vt1.c1 COLLATE RTRIM, ((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt1.c1, -2.94198978E8))!=((vt0.c0, vt0.c1, vt1.c1))) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (vt1.c1 COLLATE RTRIM, ((vt1.c1) NOTNULL)))) ORDER BY (~ (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' ELSE vt0.c0 END))  NULLS FIRST, (((vt0.c0, vt1.c1, -2.94198978E8))!=((vt0.c0, vt0.c1, vt1.c1))) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (json_valid(((vt0.c1)-(vt0.c1)))) ORDER BY (NOT (vt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((vt0.c1)-(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (json_valid(((vt0.c1)-(vt0.c1)))) ORDER BY (NOT (vt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((vt0.c1)-(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (json_valid(((vt0.c1)-(vt0.c1)))) ORDER BY (NOT (vt0.c1)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c1)IS NOT(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)IS NOT(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c1)IS NOT(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)IS NOT(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c1)IS NOT(vt0.c1)) AS INTEGER));
SELECT ALL * FROM vt1 WHERE (LIKELY(DISTINCT json_quote(vt1.c1))) ORDER BY 0.26684295892856114 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT json_quote(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY 0.26684295892856114 DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (LIKELY(DISTINCT json_quote(vt1.c1))) ORDER BY 0.26684295892856114 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT json_quote(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY 0.26684295892856114 DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (LIKELY(DISTINCT json_quote(vt1.c1))) ORDER BY 0.26684295892856114 DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN NULL WHEN (- (vt0.c1)) THEN (NOT (vt0.c1)) ELSE ABS(vt0.c0) END) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN -1163233617 THEN vt0.c1 END THEN (vt0.c1 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN NULL WHEN (- (vt0.c1)) THEN (NOT (vt0.c1)) ELSE ABS(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN -1163233617 THEN vt0.c1 END THEN (vt0.c1 IN ()) END ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN NULL WHEN (- (vt0.c1)) THEN (NOT (vt0.c1)) ELSE ABS(vt0.c0) END) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN -1163233617 THEN vt0.c1 END THEN (vt0.c1 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN NULL WHEN (- (vt0.c1)) THEN (NOT (vt0.c1)) ELSE ABS(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN -1163233617 THEN vt0.c1 END THEN (vt0.c1 IN ()) END ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0)IS(vt0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE NOCASE THEN NULL WHEN (- (vt0.c1)) THEN (NOT (vt0.c1)) ELSE ABS(vt0.c0) END) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CASE WHEN -1163233617 THEN vt0.c1 END THEN (vt0.c1 IN ()) END ASC;
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c1) AND (NULL))  WHEN (('^2Qb') NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c1 END) ORDER BY CAST((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt1.c1) AND (NULL))  WHEN (('^2Qb') NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c1 END) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c1) AND (NULL))  WHEN (('^2Qb') NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c1 END) ORDER BY CAST((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt1.c1) AND (NULL))  WHEN (('^2Qb') NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c1 END) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS REAL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c1) AND (NULL))  WHEN (('^2Qb') NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c1 END) ORDER BY CAST((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c1)) IN ())) ORDER BY ((((NULL)OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE, vt0.c1;
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE, vt0.c1);
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c1)) IN ())) ORDER BY ((((NULL)OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE, vt0.c1;
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE, vt0.c1);
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c1)) IN ())) ORDER BY ((((NULL)OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE, vt0.c1;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))>=((((vt0.c1, 0.396554601253151, vt0.c0)) BETWEEN ((vt1.c1, vt0.c1, 'w<')) AND (('', vt1.c0, vt1.c0)))))) ORDER BY TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, vt1.c1 DESC  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))>=((((vt0.c1, 0.396554601253151, vt0.c0)) BETWEEN ((vt1.c1, vt0.c1, 'w<')) AND (('', vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, vt1.c1 DESC  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))>=((((vt0.c1, 0.396554601253151, vt0.c0)) BETWEEN ((vt1.c1, vt0.c1, 'w<')) AND (('', vt1.c0, vt1.c0)))))) ORDER BY TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, vt1.c1 DESC  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))>=((((vt0.c1, 0.396554601253151, vt0.c0)) BETWEEN ((vt1.c1, vt0.c1, 'w<')) AND (('', vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, vt1.c1 DESC  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1))))>=((((vt0.c1, 0.396554601253151, vt0.c0)) BETWEEN ((vt1.c1, vt0.c1, 'w<')) AND (('', vt1.c0, vt1.c0)))))) ORDER BY TYPEOF(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))  NULLS LAST, vt1.c1 DESC  NULLS LAST, (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 END)*((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt0.c1 END)*((~ (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 END)*((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt0.c1 END)*((~ (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt0.c1 END)*((~ (vt1.c1)))));
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))) AND (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))) AND (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))) AND (vt1.c1)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE, ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)), (x'' IN ()))) AND ((1.812010686E9 COLLATE RTRIM, CAST(0.757972361262099 AS BLOB), CAST(x'' AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE, ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)), (x'' IN ()))) AND ((1.812010686E9 COLLATE RTRIM, CAST(0.757972361262099 AS BLOB), CAST(x'' AS REAL))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE, ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)), (x'' IN ()))) AND ((1.812010686E9 COLLATE RTRIM, CAST(0.757972361262099 AS BLOB), CAST(x'' AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE, ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)), (x'' IN ()))) AND ((1.812010686E9 COLLATE RTRIM, CAST(0.757972361262099 AS BLOB), CAST(x'' AS REAL))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE, ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)), (x'' IN ()))) AND ((1.812010686E9 COLLATE RTRIM, CAST(0.757972361262099 AS BLOB), CAST(x'' AS REAL)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c1)>=(vt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)>=(vt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c1)>=(vt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)>=(vt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c1)>=(vt1.c1)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(1921755833))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt0.c0)))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(1921755833))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(1921755833))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt0.c0)))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(1921755833))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0)))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(1921755833))) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CHANGES()) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)*((vt0.c0 IN ())))  NULLS FIRST, (('')>(((vt1.c1)%(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)*((vt0.c0 IN ())))  NULLS FIRST, (('')>(((vt1.c1)%(vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CHANGES()) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)*((vt0.c0 IN ())))  NULLS FIRST, (('')>(((vt1.c1)%(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)*((vt0.c0 IN ())))  NULLS FIRST, (('')>(((vt1.c1)%(vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CHANGES()) ORDER BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)*((vt0.c0 IN ())))  NULLS FIRST, (('')>(((vt1.c1)%(vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (-2069208073);
SELECT SUM(count) FROM (SELECT ALL ((-2069208073) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (-2069208073);
SELECT SUM(count) FROM (SELECT ALL ((-2069208073) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (-2069208073);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1 WHERE (((((vt0.c0)=(vt1.c1)))!=(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt1.c1)))<>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1 WHERE (((((vt0.c0)=(vt1.c1)))!=(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)==(vt1.c1)))<>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON vt1.c1 WHERE (((((vt0.c0)=(vt1.c1)))!=(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (-618479776))))) ORDER BY json_array_length(((vt0.c0)<=('e?9Da'))) ASC, CAST((((vt1.c1))<=((vt1.c0))) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) BETWEEN (vt1.c0) AND (-618479776))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_array_length(((vt0.c0)<=('e?9Da'))) ASC, CAST((((vt1.c1))<=((vt1.c0))) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (-618479776))))) ORDER BY json_array_length(((vt0.c0)<=('e?9Da'))) ASC, CAST((((vt1.c1))<=((vt1.c0))) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) BETWEEN (vt1.c0) AND (-618479776))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_array_length(((vt0.c0)<=('e?9Da'))) ASC, CAST((((vt1.c1))<=((vt1.c0))) AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (-618479776))))) ORDER BY json_array_length(((vt0.c0)<=('e?9Da'))) ASC, CAST((((vt1.c1))<=((vt1.c0))) AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)<(vt1.c1)) COLLATE RTRIM) ORDER BY ((vt1.c1 COLLATE NOCASE)>>((((vt1.c1, vt1.c0, vt1.c1))<((vt1.c0, vt1.c0, vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE NOCASE)>>((((vt1.c1, vt1.c0, vt1.c1))<((vt1.c0, vt1.c0, vt1.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)<(vt1.c1)) COLLATE RTRIM) ORDER BY ((vt1.c1 COLLATE NOCASE)>>((((vt1.c1, vt1.c0, vt1.c1))<((vt1.c0, vt1.c0, vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE NOCASE)>>((((vt1.c1, vt1.c0, vt1.c1))<((vt1.c0, vt1.c0, vt1.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)<(vt1.c1)) COLLATE RTRIM) ORDER BY ((vt1.c1 COLLATE NOCASE)>>((((vt1.c1, vt1.c0, vt1.c1))<((vt1.c0, vt1.c0, vt1.c1)))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((x'')IS(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')IS(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((x'')IS(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')IS(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((x'')IS(vt0.c1))) NOT NULL));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.8523366276450076) AND (vt1.c1)))%(((vt1.c1) IS TRUE)))) ORDER BY ((((~ (vt1.c0)), TYPEOF(vt1.c1), ((((vt1.c0)OR(vt1.c0)))AND('1854714669'))))>((LOWER(vt1.c0), (vt1.c0 IN ()), NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (0.8523366276450076) AND (vt1.c1)))%(((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((~ (vt1.c0)), TYPEOF(vt1.c1), ((((vt1.c0)OR(vt1.c0)))AND('1854714669'))))>((LOWER(vt1.c0), (vt1.c0 IN ()), NULL))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.8523366276450076) AND (vt1.c1)))%(((vt1.c1) IS TRUE)))) ORDER BY ((((~ (vt1.c0)), TYPEOF(vt1.c1), ((((vt1.c0)OR(vt1.c0)))AND('1854714669'))))>((LOWER(vt1.c0), (vt1.c0 IN ()), NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (0.8523366276450076) AND (vt1.c1)))%(((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((~ (vt1.c0)), TYPEOF(vt1.c1), ((((vt1.c0)OR(vt1.c0)))AND('1854714669'))))>((LOWER(vt1.c0), (vt1.c0 IN ()), NULL))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (0.8523366276450076) AND (vt1.c1)))%(((vt1.c1) IS TRUE)))) ORDER BY ((((~ (vt1.c0)), TYPEOF(vt1.c1), ((((vt1.c0)OR(vt1.c0)))AND('1854714669'))))>((LOWER(vt1.c0), (vt1.c0 IN ()), NULL))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) ORDER BY ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (CAST(vt1.c1 AS NUMERIC)))  NULLS LAST, vt0.c1, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (CAST(vt1.c1 AS NUMERIC)))  NULLS LAST, vt0.c1, vt1.c1 ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) ORDER BY ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (CAST(vt1.c1 AS NUMERIC)))  NULLS LAST, vt0.c1, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (CAST(vt1.c1 AS NUMERIC)))  NULLS LAST, vt0.c1, vt1.c1 ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0)LIKE(vt1.c0))) IS TRUE)) ORDER BY ((((vt1.c0)|(vt1.c0))) NOT BETWEEN (CAST(vt1.c1 AS INTEGER)) AND (CAST(vt1.c1 AS NUMERIC)))  NULLS LAST, vt0.c1, vt1.c1 ASC;
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c1, vt1.c1, vt1.c1))=((vt1.c1, vt1.c0, vt1.c0))))||((((vt1.c1))<((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1, vt1.c1, vt1.c1))=((vt1.c1, vt1.c0, vt1.c0))))||((((vt1.c1))<((vt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c1, vt1.c1, vt1.c1))=((vt1.c1, vt1.c0, vt1.c0))))||((((vt1.c1))<((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1, vt1.c1, vt1.c1))=((vt1.c1, vt1.c0, vt1.c0))))||((((vt1.c1))<((vt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((((vt1.c1, vt1.c1, vt1.c1))=((vt1.c1, vt1.c0, vt1.c0))))||((((vt1.c1))<((vt1.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY ((vt1.c0 COLLATE BINARY)||((((vt1.c1, vt1.c0, vt1.c0))<=((vt1.c1, vt1.c0, vt1.c1))))) DESC, (((((vt1.c1)>(vt1.c1))))<((((vt1.c0) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)||((((vt1.c1, vt1.c0, vt1.c0))<=((vt1.c1, vt1.c0, vt1.c1))))) DESC, (((((vt1.c1)>(vt1.c1))))<((((vt1.c0) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY ((vt1.c0 COLLATE BINARY)||((((vt1.c1, vt1.c0, vt1.c0))<=((vt1.c1, vt1.c0, vt1.c1))))) DESC, (((((vt1.c1)>(vt1.c1))))<((((vt1.c0) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)||((((vt1.c1, vt1.c0, vt1.c0))<=((vt1.c1, vt1.c0, vt1.c1))))) DESC, (((((vt1.c1)>(vt1.c1))))<((((vt1.c0) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END))) ORDER BY ((vt1.c0 COLLATE BINARY)||((((vt1.c1, vt1.c0, vt1.c0))<=((vt1.c1, vt1.c0, vt1.c1))))) DESC, (((((vt1.c1)>(vt1.c1))))<((((vt1.c0) ISNULL))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)=(vt0.c0))) NOT NULL)) ORDER BY ((COALESCE(vt0.c1, vt1.c0, vt0.c0, vt1.c1))+(IFNULL(vt0.c0, vt0.c0))), ((~ (vt1.c1)) IN ()), CASE ((vt0.c0)=(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN x'c7af' ELSE ((vt0.c1)>=(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)==(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((COALESCE(vt0.c1, vt1.c0, vt0.c0, vt1.c1))+(IFNULL(vt0.c0, vt0.c0))), ((~ (vt1.c1)) IN ()), CASE ((vt0.c0)==(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN x'c7af' ELSE ((vt0.c1)>=(vt1.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)=(vt0.c0))) NOT NULL)) ORDER BY ((COALESCE(vt0.c1, vt1.c0, vt0.c0, vt1.c1))+(IFNULL(vt0.c0, vt0.c0))), ((~ (vt1.c1)) IN ()), CASE ((vt0.c0)=(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN x'c7af' ELSE ((vt0.c1)>=(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)==(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((COALESCE(vt0.c1, vt1.c0, vt0.c0, vt1.c1))+(IFNULL(vt0.c0, vt0.c0))), ((~ (vt1.c1)) IN ()), CASE ((vt0.c0)==(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN x'c7af' ELSE ((vt0.c1)>=(vt1.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)=(vt0.c0))) NOT NULL)) ORDER BY ((COALESCE(vt0.c1, vt1.c0, vt0.c0, vt1.c1))+(IFNULL(vt0.c0, vt0.c0))), ((~ (vt1.c1)) IN ()), CASE ((vt0.c0)=(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN x'c7af' ELSE ((vt0.c1)>=(vt1.c0)) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0))) ISNULL)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))LIKE(0.6231642569266739));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))LIKE(0.6231642569266739)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0))) ISNULL)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))LIKE(0.6231642569266739));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))LIKE(0.6231642569266739)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS(vt0.c0))) ISNULL)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))LIKE(0.6231642569266739));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)AND(vt1.c0)))!=(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(vt1.c0)))<>(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)AND(vt1.c0)))!=(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(vt1.c0)))<>(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)AND(vt1.c0)))!=(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt1 WHERE (((+ (vt1.c1)) IN (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c1)) IN (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((+ (vt1.c1)) IN (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c1)) IN (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((+ (vt1.c1)) IN (((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON '~9' WHERE ((NOT ((('EF#hoursGZ')>>(vt1.c0))))) ORDER BY '' DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 0.43273227840909545 END)IS NOT((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))), (((NULL, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c1)LIKE(vt1.c0)), (+ ('-322442002')), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c1)), ((vt1.c1)>>(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((('EF#hoursGZ')>>(vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '~9' ORDER BY '' DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 0.43273227840909545 END)IS NOT((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))), (((NULL, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c1)LIKE(vt1.c0)), (+ ('-322442002')), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c1)), ((vt1.c1)>>(vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON '~9' WHERE ((NOT ((('EF#hoursGZ')>>(vt1.c0))))) ORDER BY '' DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 0.43273227840909545 END)IS NOT((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))), (((NULL, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c1)LIKE(vt1.c0)), (+ ('-322442002')), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c1)), ((vt1.c1)>>(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((('EF#hoursGZ')>>(vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '~9' ORDER BY '' DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 0.43273227840909545 END)IS NOT((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))), (((NULL, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c1)LIKE(vt1.c0)), (+ ('-322442002')), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c1)), ((vt1.c1)>>(vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON '~9' WHERE ((NOT ((('EF#hoursGZ')>>(vt1.c0))))) ORDER BY '' DESC, ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 0.43273227840909545 END)IS NOT((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))), (((NULL, vt1.c1, vt1.c1)) BETWEEN ((((vt1.c1)LIKE(vt1.c0)), (+ ('-322442002')), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1)GLOB(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c1)), ((vt1.c1)>>(vt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKE((vt1.c0 IN (vt0.c0)), ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)), '7'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((vt1.c0 IN (vt0.c0)), ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)), '7')) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKE((vt1.c0 IN (vt0.c0)), ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)), '7'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((vt1.c0 IN (vt0.c0)), ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)), '7')) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LIKE((vt1.c0 IN (vt0.c0)), ((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)), '7'));
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1) ISNULL))) ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c1) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ()) DESC);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1) ISNULL))) ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c1) ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ()) DESC);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c1) ISNULL))) ORDER BY (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1 COLLATE NOCASE)>(NULLIF(DISTINCT vt1.c1, vt1.c1)))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE)>(NULLIF(DISTINCT vt1.c1, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CAST(vt1.c0 AS INTEGER) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1 COLLATE NOCASE)>(NULLIF(DISTINCT vt1.c1, vt1.c1)))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE)>(NULLIF(DISTINCT vt1.c1, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CAST(vt1.c0 AS INTEGER) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1 COLLATE NOCASE)>(NULLIF(DISTINCT vt1.c1, vt1.c1)))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (+ (vt0.c0)) ELSE CAST(vt0.c1 AS TEXT) END) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (((+ (vt0.c1))) ISNULL) DESC, ((vt0.c1 COLLATE RTRIM)!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (+ (vt0.c0)) ELSE CAST(vt0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (((+ (vt0.c1))) ISNULL) DESC, ((vt0.c1 COLLATE RTRIM)<>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (+ (vt0.c0)) ELSE CAST(vt0.c1 AS TEXT) END) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (((+ (vt0.c1))) ISNULL) DESC, ((vt0.c1 COLLATE RTRIM)!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (+ (vt0.c0)) ELSE CAST(vt0.c1 AS TEXT) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (((+ (vt0.c1))) ISNULL) DESC, ((vt0.c1 COLLATE RTRIM)<>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (+ (vt0.c0)) ELSE CAST(vt0.c1 AS TEXT) END) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (((+ (vt0.c1))) ISNULL) DESC, ((vt0.c1 COLLATE RTRIM)!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), 0Xffffffff94f41d06, (~ (vt1.c1)))) AND ((CASE '1921755833'  WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0) IS FALSE), (vt0.c1 IN (vt1.c0))))) WHERE ((vt1.c1 IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), 0xffffffff94f41d06, (~ (vt1.c1)))) AND ((CASE '1921755833'  WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0) IS FALSE), (vt0.c1 IN (vt1.c0))))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), 0Xffffffff94f41d06, (~ (vt1.c1)))) AND ((CASE '1921755833'  WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0) IS FALSE), (vt0.c1 IN (vt1.c0))))) WHERE ((vt1.c1 IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), 0xffffffff94f41d06, (~ (vt1.c1)))) AND ((CASE '1921755833'  WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0) IS FALSE), (vt0.c1 IN (vt1.c0))))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), 0Xffffffff94f41d06, (~ (vt1.c1)))) AND ((CASE '1921755833'  WHEN vt1.c1 THEN vt1.c0 END, ((vt0.c0) IS FALSE), (vt0.c1 IN (vt1.c0))))) WHERE ((vt1.c1 IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((HEX(vt0.c1))>>(((((vt1.c0)OR(vt0.c1)))OR('1796851316')))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c1))>>(((((vt1.c0)OR(vt0.c1)))OR('1796851316'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((HEX(vt0.c1))>>(((((vt1.c0)OR(vt0.c1)))OR('1796851316')))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c1))>>(((((vt1.c0)OR(vt0.c1)))OR('1796851316'))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((HEX(vt0.c1))>>(((((vt1.c0)OR(vt0.c1)))OR('1796851316')))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0) IS TRUE)))==((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN 0.09086303622741088 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END)))) ORDER BY 0.783438953786303;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS TRUE)))=((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN 0.09086303622741088 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.783438953786303);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0) IS TRUE)))==((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN 0.09086303622741088 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END)))) ORDER BY 0.783438953786303;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS TRUE)))=((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN 0.09086303622741088 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.783438953786303);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0) IS TRUE)))==((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN 0.09086303622741088 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END)))) ORDER BY 0.783438953786303;
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)>('-741988375'))) ORDER BY (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)>('-741988375'))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)>('-741988375'))) ORDER BY (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)>('-741988375'))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)>('-741988375'))) ORDER BY (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)LIKE(vt1.c0)))AND((x'2809' IN ()))))OR((vt1.c1 IN ()))))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND(((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)LIKE(vt1.c0)))AND((x'2809' IN ()))))OR((vt1.c1 IN ()))))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND(((x'') ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)LIKE(vt1.c0)))AND((x'2809' IN ()))))OR((vt1.c1 IN ()))))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND(((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)LIKE(vt1.c0)))AND((x'2809' IN ()))))OR((vt1.c1 IN ()))))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND(((x'') ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)LIKE(vt1.c0)))AND((x'2809' IN ()))))OR((vt1.c1 IN ()))))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND(((x'') ISNULL))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((0.39460962115702813)) NOT BETWEEN (((('Y,_XK/Bz]') IS FALSE))) AND ((vt0.c1)))) ORDER BY ((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))), ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)<<(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((0.39460962115702813)) NOT BETWEEN (((('Y,_XK/Bz]') IS FALSE))) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))), ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)<<(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((0.39460962115702813)) NOT BETWEEN (((('Y,_XK/Bz]') IS FALSE))) AND ((vt0.c1)))) ORDER BY ((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))), ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)<<(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((0.39460962115702813)) NOT BETWEEN (((('Y,_XK/Bz]') IS FALSE))) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))), ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)<<(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((0.39460962115702813)) NOT BETWEEN (((('Y,_XK/Bz]') IS FALSE))) AND ((vt0.c1)))) ORDER BY ((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))), ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)<<(vt1.c0)) ASC;
SELECT * FROM vt0 WHERE (CAST(((('now')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((('now')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((('now')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((('now')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(((('now')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((x''))<=((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))<=((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((x''))<=((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))<=((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((x''))<=((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END))));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))IS(NULLIF(vt1.c1, vt0.c0)))) ORDER BY ((('2131254637')GLOB(vt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))IS(NULLIF(vt1.c1, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('2131254637')GLOB(vt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))IS(NULLIF(vt1.c1, vt0.c0)))) ORDER BY ((('2131254637')GLOB(vt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))IS(NULLIF(vt1.c1, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((('2131254637')GLOB(vt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))IS(NULLIF(vt1.c1, vt0.c0)))) ORDER BY ((('2131254637')GLOB(vt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE ((x'')>=(vt1.c0))  WHEN LTRIM(vt0.c0, vt0.c0) THEN ((vt1.c0)-(vt0.c1)) WHEN ((vt1.c1) IS FALSE) THEN ((vt0.c1)==(vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE TYPEOF(vt1.c0) END WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE ((x'')>=(vt1.c0))  WHEN LTRIM(vt0.c0, vt0.c0) THEN ((vt1.c0)-(vt0.c1)) WHEN ((vt1.c1) IS FALSE) THEN ((vt0.c1)=(vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE TYPEOF(vt1.c0) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE ((x'')>=(vt1.c0))  WHEN LTRIM(vt0.c0, vt0.c0) THEN ((vt1.c0)-(vt0.c1)) WHEN ((vt1.c1) IS FALSE) THEN ((vt0.c1)==(vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE TYPEOF(vt1.c0) END WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE ((x'')>=(vt1.c0))  WHEN LTRIM(vt0.c0, vt0.c0) THEN ((vt1.c0)-(vt0.c1)) WHEN ((vt1.c1) IS FALSE) THEN ((vt0.c1)=(vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE TYPEOF(vt1.c0) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE ((x'')>=(vt1.c0))  WHEN LTRIM(vt0.c0, vt0.c0) THEN ((vt1.c0)-(vt0.c1)) WHEN ((vt1.c1) IS FALSE) THEN ((vt0.c1)==(vt0.c1)) WHEN ((vt0.c1)*(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE TYPEOF(vt1.c0) END WHERE ((vt1.c0 IN ()) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c1 END END) ORDER BY ('488425974' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ('488425974' IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c1 END END) ORDER BY ('488425974' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ('488425974' IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN vt0.c1 END END) ORDER BY ('488425974' IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'4df2');
SELECT SUM(count) FROM (SELECT ((x'4df2') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'4df2');
SELECT SUM(count) FROM (SELECT ((x'4df2') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'4df2');
SELECT * FROM vt1 INNER JOIN vt0 ON IFNULL(((vt1.c1)GLOB(vt0.c0)), ((vt0.c1)&(vt0.c0))) WHERE ((~ (((vt0.c1)>=(vt0.c1))))) ORDER BY (((((((vt1.c0, vt1.c0, vt0.c1))!=((vt1.c1, vt0.c1, vt1.c1))))AND(((((x'')OR(vt1.c0)))AND(vt1.c1)))))AND((vt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON IFNULL(((vt1.c1)GLOB(vt0.c0)), ((vt0.c1)&(vt0.c0))) ORDER BY (((((((vt1.c0, vt1.c0, vt0.c1))!=((vt1.c1, vt0.c1, vt1.c1))))AND(((((x'')OR(vt1.c0)))AND(vt1.c1)))))AND((vt1.c1 IN ()))) DESC);
SELECT * FROM vt1 INNER JOIN vt0 ON IFNULL(((vt1.c1)GLOB(vt0.c0)), ((vt0.c1)&(vt0.c0))) WHERE ((~ (((vt0.c1)>=(vt0.c1))))) ORDER BY (((((((vt1.c0, vt1.c0, vt0.c1))!=((vt1.c1, vt0.c1, vt1.c1))))AND(((((x'')OR(vt1.c0)))AND(vt1.c1)))))AND((vt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON IFNULL(((vt1.c1)GLOB(vt0.c0)), ((vt0.c1)&(vt0.c0))) ORDER BY (((((((vt1.c0, vt1.c0, vt0.c1))!=((vt1.c1, vt0.c1, vt1.c1))))AND(((((x'')OR(vt1.c0)))AND(vt1.c1)))))AND((vt1.c1 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY UNLIKELY(DISTINCT (vt0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNLIKELY(DISTINCT (vt0.c0 IN ())) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY UNLIKELY(DISTINCT (vt0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNLIKELY(DISTINCT (vt0.c0 IN ())) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY UNLIKELY(DISTINCT (vt0.c0 IN ())) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1, 2.0487938E9, vt1.c1)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)), ((vt1.c0)IS(vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN '1812010686' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((ABS(vt1.c0), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END, (~ (vt1.c0)))))) ORDER BY (((vt1.c0))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))), (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, 2.0487938E9, vt1.c1)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)), ((vt1.c0)IS(vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN '1812010686' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((ABS(vt1.c0), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END, (~ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))), (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1, 2.0487938E9, vt1.c1)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)), ((vt1.c0)IS(vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN '1812010686' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((ABS(vt1.c0), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END, (~ (vt1.c0)))))) ORDER BY (((vt1.c0))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))), (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, 2.0487938E9, vt1.c1)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)), ((vt1.c0)IS(vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN '1812010686' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((ABS(vt1.c0), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END, (~ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))), (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1, 2.0487938E9, vt1.c1)) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)), ((vt1.c0)IS(vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN '1812010686' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((ABS(vt1.c0), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END, (~ (vt1.c0)))))) ORDER BY (((vt1.c0))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))), (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))));
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c1)IS(vt1.c0)) AS REAL)) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND (('-1957020721'))) ASC  NULLS LAST, ((((vt1.c1)/(vt1.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)IS(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND (('-1957020721'))) ASC  NULLS LAST, ((((vt1.c1)/(vt1.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))));
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c1)IS(vt1.c0)) AS REAL)) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND (('-1957020721'))) ASC  NULLS LAST, ((((vt1.c1)/(vt1.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)IS(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND (('-1957020721'))) ASC  NULLS LAST, ((((vt1.c1)/(vt1.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))));
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c1)IS(vt1.c0)) AS REAL)) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND (('-1957020721'))) ASC  NULLS LAST, ((((vt1.c1)/(vt1.c0))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((x'88b1')|(vt0.c0)), (vt0.c0 IN ()), ((vt0.c1)>(vt0.c0))))<=((vt0.c0, NULL, (- (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((x'88b1')|(vt0.c0)), (vt0.c0 IN ()), ((vt0.c1)>(vt0.c0))))<=((vt0.c0, NULL, (- (vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((x'88b1')|(vt0.c0)), (vt0.c0 IN ()), ((vt0.c1)>(vt0.c0))))<=((vt0.c0, NULL, (- (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((x'88b1')|(vt0.c0)), (vt0.c0 IN ()), ((vt0.c1)>(vt0.c0))))<=((vt0.c0, NULL, (- (vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((((x'88b1')|(vt0.c0)), (vt0.c0 IN ()), ((vt0.c1)>(vt0.c0))))<=((vt0.c0, NULL, (- (vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c1)GLOB(vt1.c0))  WHEN LENGTH(vt0.c0) THEN ((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c0)) END) ORDER BY (~ (LOWER(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)GLOB(vt1.c0))  WHEN LENGTH(vt0.c0) THEN ((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (LOWER(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c1)GLOB(vt1.c0))  WHEN LENGTH(vt0.c0) THEN ((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c0)) END) ORDER BY (~ (LOWER(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)GLOB(vt1.c0))  WHEN LENGTH(vt0.c0) THEN ((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (LOWER(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c1)GLOB(vt1.c0))  WHEN LENGTH(vt0.c0) THEN ((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c0)) END) ORDER BY (~ (LOWER(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (x'4bbb6b83');
SELECT SUM(count) FROM (SELECT ALL ((x'4bbb6b83') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'4bbb6b83');
SELECT SUM(count) FROM (SELECT ALL ((x'4bbb6b83') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'4bbb6b83');
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c1)<<(vt1.c0))  WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c1 IN ()) WHEN vt1.c1 THEN -1.402084891E9 WHEN (vt1.c0 IN ()) THEN (- (vt1.c1)) ELSE ((vt1.c1)*(vt1.c0)) END) ORDER BY (NOT (((vt1.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)<<(vt1.c0))  WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c1 IN ()) WHEN vt1.c1 THEN -1.402084891E9 WHEN (vt1.c0 IN ()) THEN (- (vt1.c1)) ELSE ((vt1.c1)*(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c1) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c1)<<(vt1.c0))  WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c1 IN ()) WHEN vt1.c1 THEN -1.402084891E9 WHEN (vt1.c0 IN ()) THEN (- (vt1.c1)) ELSE ((vt1.c1)*(vt1.c0)) END) ORDER BY (NOT (((vt1.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)<<(vt1.c0))  WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c1 IN ()) WHEN vt1.c1 THEN -1.402084891E9 WHEN (vt1.c0 IN ()) THEN (- (vt1.c1)) ELSE ((vt1.c1)*(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c1) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c1)<<(vt1.c0))  WHEN CAST(vt1.c0 AS INTEGER) THEN (vt1.c1 IN ()) WHEN vt1.c1 THEN -1.402084891E9 WHEN (vt1.c0 IN ()) THEN (- (vt1.c1)) ELSE ((vt1.c1)*(vt1.c0)) END) ORDER BY (NOT (((vt1.c1) ISNULL)))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((UNICODE(vt1.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(vt1.c1)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((UNICODE(vt1.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(vt1.c1)) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((UNICODE(vt1.c1)) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(((vt0.c1)AND(vt0.c0))))) ORDER BY IFNULL(DISTINCT ((vt0.c1)+(vt0.c1)), ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))%(((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(((vt0.c1)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT ((vt0.c1)+(vt0.c1)), ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))%(((vt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(((vt0.c1)AND(vt0.c0))))) ORDER BY IFNULL(DISTINCT ((vt0.c1)+(vt0.c1)), ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))%(((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(((vt0.c1)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT ((vt0.c1)+(vt0.c1)), ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))%(((vt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(((vt0.c1)AND(vt0.c0))))) ORDER BY IFNULL(DISTINCT ((vt0.c1)+(vt0.c1)), ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))), ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))%(((vt0.c1) NOTNULL)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))IS(CAST(vt0.c1 AS BLOB))) WHERE (((((((vt1.c0)OR(vt0.c0)))AND(vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))IS(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))IS(CAST(vt0.c1 AS BLOB))) WHERE (((((((vt1.c0)OR(vt0.c0)))AND(vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))IS(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC))IS(CAST(vt0.c1 AS BLOB))) WHERE (((((((vt1.c0)OR(vt0.c0)))AND(vt1.c1))) NOT NULL));
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'9461');
SELECT SUM(count) FROM (SELECT ((x'9461') IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'9461');
SELECT SUM(count) FROM (SELECT ((x'9461') IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'9461');
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ())) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((LOWER(vt0.c0)))!=((((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((LOWER(vt0.c0)))<>((((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((LOWER(vt0.c0)))!=((((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((LOWER(vt0.c0)))<>((((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((LOWER(vt0.c0)))!=((((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1))))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))==((vt1.c0))) COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))==((vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))==((vt1.c0))) COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))==((vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))==((vt1.c0))) COLLATE RTRIM) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))&(ABS(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))&(ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))&(ABS(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))&(ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))&(ABS(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN ((NOT (vt0.c1))) AND (((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND((~ (vt0.c1))))) ORDER BY LIKELIHOOD(x'', 0.09750441087011119)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND((~ (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(x'', 0.09750441087011119)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND((~ (vt0.c1))))) ORDER BY LIKELIHOOD(x'', 0.09750441087011119)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND((~ (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(x'', 0.09750441087011119)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND((~ (vt0.c1))))) ORDER BY LIKELIHOOD(x'', 0.09750441087011119)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) BETWEEN (((((((((0.6657761720061314)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY (((~ (vt0.c0))) IS TRUE) ASC, (NOT (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0))) BETWEEN (((((((((0.6657761720061314)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS TRUE) ASC, (NOT (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) BETWEEN (((((((((0.6657761720061314)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY (((~ (vt0.c0))) IS TRUE) ASC, (NOT (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)!=(vt0.c0))) BETWEEN (((((((((0.6657761720061314)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) IS TRUE) ASC, (NOT (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c0))) BETWEEN (((((((((0.6657761720061314)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY (((~ (vt0.c0))) IS TRUE) ASC, (NOT (CAST(vt0.c0 AS REAL)));
SELECT ALL * FROM vt1 WHERE (CAST(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY x''  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c0)OR(-901979083)))OR(vt1.c0)) COLLATE BINARY) ORDER BY CASE vt1.c1 COLLATE RTRIM  WHEN vt1.c0 THEN UNLIKELY(x'fd19') END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(-901979083)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c1 COLLATE RTRIM  WHEN vt1.c0 THEN UNLIKELY(x'fd19') END DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)OR(-901979083)))OR(vt1.c0)) COLLATE BINARY) ORDER BY CASE vt1.c1 COLLATE RTRIM  WHEN vt1.c0 THEN UNLIKELY(x'fd19') END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(-901979083)))OR(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c1 COLLATE RTRIM  WHEN vt1.c0 THEN UNLIKELY(x'fd19') END DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)OR(-901979083)))OR(vt1.c0)) COLLATE BINARY) ORDER BY CASE vt1.c1 COLLATE RTRIM  WHEN vt1.c0 THEN UNLIKELY(x'fd19') END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY 0.9427859242316023 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY 0.9427859242316023 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY 0.9427859242316023 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY 0.9427859242316023 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY 0.9427859242316023 COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt1 WHERE ((+ (-52131106))) ORDER BY (((((vt1.c1)<=(vt1.c0))))>((((vt1.c1) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (-52131106))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1)<=(vt1.c0))))>((((vt1.c1) ISNULL))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((+ (-52131106))) ORDER BY (((((vt1.c1)<=(vt1.c0))))>((((vt1.c1) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (-52131106))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1)<=(vt1.c0))))>((((vt1.c1) ISNULL))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((+ (-52131106))) ORDER BY (((((vt1.c1)<=(vt1.c0))))>((((vt1.c1) ISNULL))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (((vt1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0))>=((vt0.c0))))/(CASE WHEN vt1.c0 THEN vt0.c0 END)) WHERE (json_valid(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END)) ORDER BY CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0))>=((vt0.c0))))/(CASE WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0))>=((vt0.c0))))/(CASE WHEN vt1.c0 THEN vt0.c0 END)) WHERE (json_valid(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END)) ORDER BY CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0))>=((vt0.c0))))/(CASE WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0))>=((vt0.c0))))/(CASE WHEN vt1.c0 THEN vt0.c0 END)) WHERE (json_valid(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END)) ORDER BY CASE WHEN ((vt1.c0)<(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)%(vt1.c0))) BETWEEN ((vt1.c0 IN (0.8789195725223046, vt1.c0))) AND ((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c0)))))) ORDER BY ((vt1.c0)&(vt1.c0 COLLATE NOCASE)), CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, CAST(vt1.c1 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)%(vt1.c0))) BETWEEN ((vt1.c0 IN (0.8789195725223046, vt1.c0))) AND ((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)&(vt1.c0 COLLATE NOCASE)), CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, CAST(vt1.c1 AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)%(vt1.c0))) BETWEEN ((vt1.c0 IN (0.8789195725223046, vt1.c0))) AND ((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c0)))))) ORDER BY ((vt1.c0)&(vt1.c0 COLLATE NOCASE)), CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, CAST(vt1.c1 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)%(vt1.c0))) BETWEEN ((vt1.c0 IN (0.8789195725223046, vt1.c0))) AND ((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)&(vt1.c0 COLLATE NOCASE)), CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, CAST(vt1.c1 AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)%(vt1.c0))) BETWEEN ((vt1.c0 IN (0.8789195725223046, vt1.c0))) AND ((((vt1.c1)) BETWEEN ((x'')) AND ((vt1.c0)))))) ORDER BY ((vt1.c0)&(vt1.c0 COLLATE NOCASE)), CAST((vt1.c1 IN ()) AS TEXT)  NULLS FIRST, CAST(vt1.c1 AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((- ((vt1.c1 IN ())))) ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) WHEN x'' THEN vt1.c1 WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1)|(vt1.c1)) WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) ELSE (vt1.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT (((- ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) WHEN x'' THEN vt1.c1 WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1)|(vt1.c1)) WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) ELSE (vt1.c1 IN ()) END);
SELECT COUNT(*) FROM vt1 WHERE ((- ((vt1.c1 IN ())))) ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) WHEN x'' THEN vt1.c1 WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1)|(vt1.c1)) WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) ELSE (vt1.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT (((- ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) WHEN x'' THEN vt1.c1 WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1)|(vt1.c1)) WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) ELSE (vt1.c1 IN ()) END);
SELECT COUNT(*) FROM vt1 WHERE ((- ((vt1.c1 IN ())))) ORDER BY CASE WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) WHEN x'' THEN vt1.c1 WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1)|(vt1.c1)) WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN ((vt1.c0)=(vt1.c0)) ELSE (vt1.c1 IN ()) END;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<<(vt1.c1))) NOT NULL)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<<(vt1.c1))) NOT NULL)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0)<<(vt1.c1))) NOT NULL)) ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((+ (CAST(678855611 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(678855611 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (CAST(678855611 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(678855611 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((+ (CAST(678855611 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((x'5663') IS TRUE)) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((vt1.c1 IN (vt1.c1))))) ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))==((((vt1.c0)IS(vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'5663') IS TRUE)) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((vt1.c1 IN (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))=((((vt1.c0)IS(vt1.c1))))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((x'5663') IS TRUE)) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((vt1.c1 IN (vt1.c1))))) ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))==((((vt1.c0)IS(vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'5663') IS TRUE)) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((vt1.c1 IN (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))=((((vt1.c0)IS(vt1.c1))))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((x'5663') IS TRUE)) BETWEEN (((vt1.c0)<(vt1.c0))) AND ((vt1.c1 IN (vt1.c1))))) ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))==((((vt1.c0)IS(vt1.c1))))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt0.c0  WHEN ((vt1.c1)<=(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) END) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt1.c1)<=(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c1  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt0.c0  WHEN ((vt1.c1)<=(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) END) ORDER BY vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt1.c1)<=(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c1  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE vt0.c0  WHEN ((vt1.c1)<=(vt0.c1)) THEN ((vt0.c1)%(vt0.c0)) END) ORDER BY vt1.c1  NULLS LAST;
