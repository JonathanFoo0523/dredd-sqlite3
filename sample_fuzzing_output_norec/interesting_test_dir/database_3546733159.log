-- Time: 2024/06/11 00:21:37
-- Database: database59
-- Database version: 3.40.0
-- seed value: 3546733159
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INTEGER ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 BLOB , +c4 TEXT ); -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c0) VALUES (x'8e7d', 0.580350719641564); -- 1ms;
PRAGMA recursive_triggers = true; -- 0ms;
DELETE FROM rt1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((x'')) AND ((((x'') IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1672393496 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ',Rd'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=170677921'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=170677921 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '170677921 sz=1672393496'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1987455493 0 sz=170677921 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((1.987455493E9) BETWEEN (1.70677921E8) AND (0xa2c56a1)))) AND (((0.8561295776803778 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1987455493' COLLATE BINARY) NOT BETWEEN ((NOT (0.8561295776803778))) AND ((('170677921')<=(x'8876')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1463152779 1198464970 1198464970 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1987455493') NOTNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('1463152779')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(''))>(TRIM(DISTINCT 1941215184, NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (1614225277)))>((('-356838424')-(0.8561295776803778)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'23fc')<('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1987455493'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'' ELSE x'9a29' END) BETWEEN ((('-1301897602') NOT BETWEEN (x'') AND (-2096321501))) AND ((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((IFNULL(NULL, x''), ((0.017374365655476343) BETWEEN ('0.580350719641564') AND (x'')), (NULL IN (0.704668880733734)), x'', ((((((((1675997085)AND(0.5864749068024778)))OR(0.1458651292472799)))AND(NULL)))AND(0.9090845778728076))))!=((((0.45932065512241915) BETWEEN (NULL) AND ('*7zb&┑')), ((((((((0X18a2b18)OR('')))OR('1964532370')))AND(NULL)))AND(NULL)), LOWER(DISTINCT 0x63aeb318), ((((0X71a293ec)AND(0.8345171460496723)))OR(251630759)), ((0.32666239538763187) IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN -356838424 ELSE '1463152779' END) NOT BETWEEN (NULLIF('-2096321501', x'')) AND (('1987455493' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'541aa491' IN (0x63aeb318))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2096321501 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1463152779 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('-1253485420')OR('1198464970')))OR(x'787b')))AND('2011571473')))OR(x'')))AND(NULL)))OR(NULL)))*((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-577122438 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1463152779'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '417483759 sz=1198464970 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1604587349 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 2 sz=25832216 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -356838424 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1.614225277E9) BETWEEN (NULL) AND ('')))AND(0.5864749068024778)))OR(ABS(DISTINCT x''))))OR('')))AND(((-356838424)=(0.4878973734893578)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1987455493 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=251630759 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2068651601 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, NULL, NULL, NULL, NULL))==((0.8280706722873077, x'c10f994e6d8c', 0.3592695720208592, '-2126266827', 0.8561295776803778))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-478224197 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1318216071 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=445567126 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1463152779 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=315352912 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=445567126 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-4.78224197E8 COLLATE NOCASE) NOT BETWEEN (CASE WHEN NULL THEN 0.76675423720944 ELSE x'' END) AND (((((((((x'')OR(NULL)))OR('251630759')))AND(x'a7b8')))OR(x'3d74')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1856598748'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT 'uyMAv>!', '7㌸') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)/(x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.27784766392496874 AS NUMERIC))&((('')>>(1.675997085E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('7㌸') ISNULL), ('' IN ()), CASE '1905298967'  WHEN 'n2uTYD' THEN NULL ELSE '-1530398787' END))<=(((((x'')) BETWEEN (('㽾ENU')) AND ((NULL))), 0.17542301335318544 COLLATE NOCASE, ((0.6740283820768866) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 251630759 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((x'd279' IN ()), 'Jॏ' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1618575703'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-179860944 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)AND(((0X5c2ec840)<<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '-536389958', '1913071063'))=((NULL, 'D', 1.618575703E9)))) NOT BETWEEN ('') AND (CASE WHEN '315352912' THEN NULL WHEN '445567126' THEN x'7c99' WHEN x'a6ec' THEN x'' END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') NOT BETWEEN (0x4741b50f) AND ('417483759')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('7㌸')+(0.18857036063146304)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8839358615424403))<=((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-536389958 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('')))<>(((1.618575703E9)%(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1604587349 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=417483759 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2032940297'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1518575177 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-2096321501 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0782961467127643; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1555556838) NOT NULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 872306818 THEN '뒔CA鏬(R' END)LIKE(0.32244122165615996)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 1618575703 sz=207874530 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 747953311  WHEN 'N[' THEN NULL ELSE x'' END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN ((('-1604587349') NOT BETWEEN (0.785728465409737) AND (x''))) AND (((0x7a7e39e2) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) BETWEEN ('' COLLATE BINARY) AND (0.4403618099945469)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2131187739 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')LIKE(x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN NULL COLLATE BINARY THEN ((('251630759'))>((0Xffffffffa8a86fe8))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.9122868206059848 WHEN '-1012168356' THEN '0.8280706722873077' WHEN x'22e3' THEN '170677921' END)*(((((((((1.987455493E9)AND('-407547348')))AND(0.5727341750798621)))AND(NULL)))AND(2.032940297E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1729362584 sz=1417809047 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN x'' THEN 0.031684387869551967 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=583289252 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X592cea1e)IS(NULL))))!=((((NULL)|('ggv]'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=1415559045 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN (('-1947451620')) AND ((0.851482886025926)))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-788967984 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2034165721 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')*(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=214899610 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-788967984'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '656050041 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1208757602 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2052830159 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('㩒w')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2959195708512695; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=1208757602 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1417809047 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-679292401 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '222708344 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1518575177 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '656050041'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(x''))%(x'2aa5')); -- 6ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8384347069287429) NOT NULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1913071063 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'55e4' COLLATE RTRIM)AND((((('')OR(0.037133510676889525)))OR(x'd43f')))))AND(COALESCE(NULL, 'k!&W-'))))OR(CAST('~SpﭦzesAN' AS TEXT))))OR((((x'ac59', x'', 1729362584, x'', '1956181270'))=((x'4d30', 0.17131262417343096, 0X71a293ec, NULL, x'51e1d238'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(0x24f4dab7)))OR(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-399597044 0 sz=214899610 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=950278802 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=-1394126322 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 1263870788 sz=-108361987 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR((((0.8653036579666311, 0.9531836835370987, x'')) NOT BETWEEN (('610514749', 656050041, x'')) AND (('', NULL, 0.5440031939324896))), (('-1464755421') IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.19238462819457336 COLLATE NOCASE))>=((CASE WHEN x'd896' THEN x'' ELSE '1082110956' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-478695036 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=583289252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=-646842995 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=111439990 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS INTEGER))OR(CAST(0xffffffffdc551fde AS BLOB))))AND((('-1465356312')GLOB('')))))AND((-1064332932 IN ('2100164271')))))AND(((6.56050041E8) BETWEEN (x'823e') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'10c8f321' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(x'')))AND(x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1618575703 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=251630759 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('-537565915')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1698410158') NOT BETWEEN ('1457871111') AND (1.614225277E9)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-478224197'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-895028919 1176887260 sz=757537836'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)GLOB(0.8552141862751055)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)||(-1940986488)))OR(((('B0')) BETWEEN ((x'')) AND ((0x3534e4f))))))OR(((('U/', x'', x''))<>((0.7841466459378216, x'', '93f]G9)'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1046817665 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-551420146 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-621802524 1672393496 sz=-646842995 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((NULL IN (NULL, 0x5a1fae83))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 -1971723696 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=529053174 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=496791965'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1350636640'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'c69f')IS NOT(NULL)))AND(UNLIKELY(DISTINCT 0.8653036579666311))))OR(((('0.4403618099945469'))==((' BL)Sꕺ'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-577122438 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-911282202'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(x'', NULL))<(((x'')*(x'25cc')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-10241031'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1423029386') IS TRUE))*(x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 1.70677921E8 THEN x'' ELSE '763576398' END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5501436888507049; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1530398787 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'0294') NOT NULL) THEN ((NULL) NOT BETWEEN (NULL) AND ('')) WHEN UPPER('1974724271') THEN (((NULL))=(('#&s'))) WHEN CHANGES() THEN '-269223066' COLLATE NOCASE ELSE CAST('1318460162' AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (('-1050071587') NOT BETWEEN ('1915738165') AND (x'e730'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) NOT BETWEEN ((-733947639 IN ('0.5864749068024778'))) AND (((x'') NOT BETWEEN (0.76675423720944) AND ('0.0782961467127643')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE NOCASE  WHEN IFNULL('1046817665', 0.17131262417343096) THEN (~ (0.704668880733734)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TYPEOF(NULL)  WHEN CASE WHEN x'' THEN NULL WHEN 0x793ee7d9 THEN '(]' WHEN '1675997085' THEN '0.9122868206059848' ELSE 0.7398352598701698 END THEN ((((NULL)OR(1.70677921E8)))OR(NULL)) ELSE ((0.7331003160490668)IS('25832216')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2055092706 unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1711234182 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-537604117 950278802 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-685613868 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1818184027'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' ELSE '-639346420' END)LIKE((+ ('-1201873651')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=2034165721 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOTNULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS NUMERIC))OR((- (NULL)))))OR(0Xffffffffa09d2a73 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-899122397 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3267582413942788) IS TRUE)) NOT BETWEEN (CHAR(0.48622093638061026, NULL, x'4c05646d')) AND (((x'') BETWEEN (x'30a8') AND (x'242d')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0xfffffffff58f64bf) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.025056229837967847) NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=984437278 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1731515934 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (NULL COLLATE RTRIM) AND (((x'') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '679972434 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1913071063 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=12304646 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-2079134457 sz=-1478943965 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.5501436888507049)) BETWEEN (('[*%')) AND ((0.8803353502540878))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1151918199 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('568445031') IS TRUE))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1932142510 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<(('k!&W-')))) BETWEEN (NULL) AND ('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.785728465409737)))-(x'95e8')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-911282202' IN (x'eaf3')) IN (((('-598401058')) NOT BETWEEN ((0.5708942293800419)) AND ((0.6275961398784612))), (+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '764293913 sz=-1271160074 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1532584214 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-1115439249' THEN x'' COLLATE BINARY WHEN UNLIKELY('') THEN (('-225702942') BETWEEN (NULL) AND (0.704668880733734)) WHEN (NOT ('2120609510')) THEN ((NULL)>('1176887260')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' COLLATE BINARY THEN (0x63e5af9d IN ()) WHEN x'' THEN ((NULL)<('-1367886728')) WHEN IFNULL(DISTINCT NULL, 0x3534e4f) THEN LTRIM('z6-') WHEN (((NULL)) NOT BETWEEN ((3.15352912E8)) AND ((x'0cdd'))) THEN NULLIF(-1.464755421E9, '-724734366') WHEN (~ (0.9090845778728076)) THEN (- ('B0')) ELSE ((0.9122868206059848) NOT BETWEEN (1618575703) AND ('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1417809047 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=757537836'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-352110963 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 662787950; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1076506278 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=566441816 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-269223066 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7277339926497566) NOT NULL)) NOT BETWEEN (((0.7703181472183717)/('je'))) AND ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-374607623 0 sz=-646842995 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB)) NOT BETWEEN (CASE 0x7da6b3c9  WHEN 1.19846497E9 THEN x'' WHEN NULL THEN x'' WHEN 834479236 THEN 7.47953311E8 END) AND (((((0.35369777704072636)OR(0xffffffffdc551fde)))AND('0.48622093638061026')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-598401058 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('|/dOD')*('')))=(2.0787453E8 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1761463183 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '920256779'  WHEN -8.95028919E8 THEN -1800422564 END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')/('93f]G9)')))OR(('i4Zfg' IN (NULL)))))AND((NOT (0.704668880733734)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-911282202' AS BLOB)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=872306818 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1107349252 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1192444854 315352912 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10080084852915772) NOT NULL))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT (('')=(x'')), ((NULL)+(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '''%EbKL'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '251630759'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((0Xfffffffff98a86fd)OR('2097650761')), (((NULL))>=(('838756132')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1522560590 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1191109276 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('A.') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 -1988373787 sz=-1350636640'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2041079073 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1343241265 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-988202917 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=850396477'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-1622031323 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '680572349 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1753399426 -10120704'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('Cs0m偕')AND(1913071063)))AND('1856598748')))AND('q扇3D攥')))AND(0.7267035208119574)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-34167539'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-478695036 sz=1082110956 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=55791183'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0x3089f3a7) NOT BETWEEN (0X60371f7d) AND ('-268065719')) THEN (~ ('-1253485420')) WHEN ((NULL)-(0.27734046008678237)) THEN (+ (NULL)) WHEN CAST('41' AS TEXT) THEN ((x'c9bb')<>(NULL)) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0Xfffffffff5478a30)) NOT BETWEEN ((2.51630759E8 COLLATE BINARY)) AND ((0.03571525993531466))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (('608315577')) AND ((((x'beba')-('207874530'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-734256111'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-816989527 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=1195488527'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (0.6758851872005069)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1198464970'))<=((x''))))>=(((('cs0m偕')) NOT BETWEEN (('w2kkN>a9?')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-672420493 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1753399426'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1790003376 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')<<(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=55791183 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6368176972465162)&(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-536389958'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN NULL END)+(CASE WHEN 2.5832216E7 THEN NULL WHEN x'4c6e' THEN NULL WHEN 0x7010fef4 THEN 0.785728465409737 ELSE x'601b' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2032940297 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.9706409678765986  WHEN NULL THEN NULL WHEN '0.7331003160490668' THEN '0e4' WHEN 'lⵢ\nz^&k' THEN 703296224 ELSE '55791183' END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN NULL COLLATE BINARY WHEN CASE WHEN x'11e8' THEN NULL ELSE 0.5708942293800419 END THEN CAST(2.034165721E9 AS NUMERIC) WHEN UNLIKELY(DISTINCT '{)5o+V') THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1614225277'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2088115882'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2066849954 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1665819349'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6331465600959985; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-785817541 0 sz=1906480108 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((+ (x'')), (NOT ('780618895'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1672393496 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL('1417809047', '-1667731246') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-89967436'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN 0.5844602217747935 ELSE 0.4182562493492148 END) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1117242150 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-729739226 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1913071063 sz=-2011782363 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 'xxG'  WHEN x'' THEN 0.3461655737165338 WHEN x'5c1fa630' THEN '1964532370' WHEN '-911282202' THEN NULL ELSE 0X7f72ceb3 END THEN NULL ELSE (NULL IN (NULL, 0.16934409839296183)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(NULL COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=610514749 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1130242017 sz=1883146580 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0xffffffffa8b19b23 IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-837043821 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=950278802 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=25832216 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=879626575'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-2038520866 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -215793533 sz=-163805739 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '869632736 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2028010597 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (1546569792))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1361983266'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1368024126'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY(x'520e', '-2126266827', '')) NOT BETWEEN (((x'94e9')OR(1.496115742E9))) AND ((((1457871111)) NOT BETWEEN (('LwzJ')) AND ((0.76675423720944))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.6063828168843562)OR(SQLITE_SOURCE_ID())))OR(0.19238462819457336)))OR((+ ('1496428808')))))AND((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((+ (NULL)), IFNULL(NULL, 0.5913985072188005)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1569859818'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1890517246 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4072')AND(x'')))IS((((0Xffffffffe7b5522c))<=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1245432199 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1770096641 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.7398352598701698)))/(((x'1ff6')>>(0.7890048906960139)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(1463152779)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '733908316 0 1614225277 sz=-399040512 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2063442819 -1068784674 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=691302419 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('879626575') NOT BETWEEN (x'eedf') AND (0x33fe8d06))))!=((('[]' IN ('0k)Ob9xHG', -997616669))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffff99be8891; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1937885925 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '351273987 1913071063 0 sz=222708344 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1097712674 sz=89621851 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=978719102 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ ('R'))  WHEN ((0.36352907817166713) NOT BETWEEN ('') AND ('XQ')) THEN (((NULL)) NOT BETWEEN (('')) AND ((0.04323642584544607))) ELSE ((0.8498755328120854) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1517039384 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-681361915 -482996723 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-141632652 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((MAX(x'', x'', 0.32685494757801825, '-1909039204')) NOT BETWEEN (TIME(NULL, 'uyMAv>!', '')) AND ('XXG')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-356838424 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1971723696'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2107444289 sz=-986025966 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST('/%' AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1770482816 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.40604531200332195 AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS TEXT) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xc63e9e2; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-43150922 0 sz=-1697741037'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(((NULL) NOT BETWEEN ('-269223066') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN NULL THEN '41' END)AND(((x'53563157') BETWEEN ('1653678910') AND (NULL)))))OR(TYPEOF('szS'))))AND(UPPER(DISTINCT NULL))))OR(((NULL)==(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1463152779'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1259020328'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-399597044 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x6500391f) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=340755384 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (0.2605078604681109)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1672393496)) BETWEEN ((IFNULL('', '0.19238462819457336'))) AND ((TRIM(x'ee112107', '868537379')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1433180149'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=364489029'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1790256436')AND('')))AND(x'9c73'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-943500753'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('G鬣븵I|  ')IS(NULL)) THEN ((('', '-1735577665', 0.9621952182423432))<=((x'', NULL, NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2034165721 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(x'')))>=(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-167400066 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-621802524 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-331183135 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(NULL)))AND(0.39725425715447404)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1493721268'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2.011571473E9)!=('2017884603'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-9223372036854775808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1386772824 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=973201649'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('''%ebkl') NOT BETWEEN (x'54d0') AND (0.7832787763562629)))OR(CAST(0.10629945617638492 AS TEXT))))OR(((x'') NOT BETWEEN (0x3b017d0c) AND (NULL)))))AND(TRIM(NULL))))OR(((('757537836', 0.8050686295238454, ''))>((x'04df', 0.5743626032840272, NULL))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-183303470 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=808732598 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-16095373 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1618575703 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)*(0.4144119885511224)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1465356312'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=55791183 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-537611483 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (ABS('-1233962483'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ('0.5743626032840272') AND ('-1907112350')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X2cea075b) BETWEEN (NULL) AND (x'3b4a')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1198464970 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE((- (4.45567126E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1103543338 sz=757537836 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-428717504 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-213168798 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_object('', '0.6368176972465162', x'', 0.5791954720039946)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1318216071'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.975886347842985) BETWEEN ((- (x'6de2'))) AND (CASE WHEN 0.5274786386815463 THEN 0.18857036063146304 ELSE '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1051834985 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2100493258 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('ᮚ[<L')>(x'')))OR(((NULL) BETWEEN (NULL) AND (x'fa50')))))OR((((0.4522509953216114, NULL, 'vXM~9MBU6')) NOT BETWEEN (('YlmIXJS', '656050041', '-983198068')) AND ((0.922908159092475, '{', 0.7253406076894264))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('-1012168356'))=((x'c854'))) THEN -1e500 ELSE NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-2068651601 -621793769'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1068368842 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-700259271 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-1012168356'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2095383972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=170677921 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=25832216 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1359892659 sz=1546128110'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')>=(-1.318216071E9)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1393575587 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1464755421 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1247741785 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2032940297 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER)) BETWEEN ((((0xffffffffa1537be8, '.g', NULL)) NOT BETWEEN ((x'', 0.27784766392496874, x'')) AND (('1518575177', NULL, '')))) AND (((((((((0.8561295776803778)AND(x'')))AND('FALSE')))AND('2055846090')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1027646873 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1405446115 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6378479729481984; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=-1706175676 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=331103926'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-621802524 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((x'') IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.31815127805632404)) NOT BETWEEN (((('1466830039')-('')))) AND (((('2011571473') BETWEEN (0.867982904269427) AND ('1463152779'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-220038666)) NOT BETWEEN ((ABS(NULL))) AND ((((NULL)+(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(0.9784644899813545)))OR(6.10514749E8)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '444937090 sz=-871799056 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('iBeK>' IN ()))LIKE((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.913071063E9; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x5d9cb40b)+(0.1730228863288814)), ((((x'')OR('rIN')))OR(0X1f8314b6)), json_array(x'', '1492977458', '-269223066', 0.3759922825366375)))==(((('EIB')GLOB(0.6708614775499293)), (((((((('-523946391')OR('(3|F(67W')))OR(x'')))OR(0.5740248931782899)))OR(x'9ebb99c0')), ('-1012168356' IN (NULL, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)<<(1.856598748E9)))AND(((('315352912')) NOT BETWEEN (('{')) AND ((0.5799197991010707))))))OR(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '445567126 sz=-871137831 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1740662232')OR('529053174')))AND('950278802'))) BETWEEN (((NULL) IS FALSE)) AND (LIKELIHOOD(NULL, 0.34752498473929616))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-2094648776 sz=1913071063 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1087650569 sz=1582497624 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('(#GGQD㩒')GLOB(x''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (UNICODE(-568639154))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2131187739 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=362218279 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1964532370 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1152471804') NOT BETWEEN (0.2593982984694656) AND (NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=465884759'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-25417743 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1857881643'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1913071063 0 sz=1046817665 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=476049369'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2096321501 sz=-895028919 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TOTAL_CHANGES())<(TRIM(DISTINCT x'fa18', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-577122438 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((0.1830846903010669)) BETWEEN (('-407547348')) AND ((-3.99597044E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-747926050'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1266384013 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=119849448 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.9531836835370987 THEN 0xd84ff8 END)OR(NULL COLLATE RTRIM)))OR(((x'') BETWEEN ('2067553079') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=794575729'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE '?~돬&'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-931605279 sz=1073453546'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-246246764 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')%(0.37856675056205313))) BETWEEN (x'') AND ((((0.8785069027048777)) NOT BETWEEN ((-698567612)) AND ((0.5522726843672139))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')>=(x'')) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR('')))AND(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1 sz=824849448'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1945636235')) NOT BETWEEN ((((NULL)&(0x6901d134)))) AND ((UNICODE(0x7241be94)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=1208757602 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-96140243 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-237546239 sz=-1856654751 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'6d5d' IN ())  WHEN 'k8\r9' COLLATE BINARY THEN ((x'')<(NULL)) WHEN CASE WHEN '-356838424' THEN x'64b9' END THEN ((-1469757427)IS NOT('Hm')) WHEN (((NULL, '1546569792', NULL))>((NULL, 'y蝀', '-478224197'))) THEN ('n[' IN ()) WHEN (((('}KD-AcJ-R')AND(1.1143999E8)))OR('-421721507')) THEN ((0.26695396676447314) NOT BETWEEN (0.87155663113499) AND ('0.2959195708512695')) WHEN CASE 'Gn1L'  WHEN NULL THEN '' WHEN 0Xffffffffad7f5832 THEN 0.580350719641564 WHEN NULL THEN 0X1d0fd50b ELSE 0Xffffffffbea13e15 END THEN (('-1812381809')||(0.8387433634206305)) ELSE ((NULL)+(1810723175)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2036233914 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=111439990 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1064332932 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-251991530 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((('41'))==((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1971723696 sz=382037722 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6421138465638697; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)AND(-4.78695036E8)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-35871354 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.6368176972465162 THEN 0.45932065512241915 ELSE 70902628 END)<=('-1318216071' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1176887260'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2100164271 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('}9bA') BETWEEN (x'') AND ('lJ,kNMQ[N')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'')AND('-407547348')))OR(NULL)))AND((('1596428318') IS TRUE))))AND((NOT (0.3759922825366375)))))AND(CASE '0뒔Ce#A'  WHEN '1154965603' THEN NULL ELSE '0.8561295776803778' END)))OR((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9531836835370987)IS('xC|KM*')))AND((((0x793c0b9)) NOT BETWEEN ((0x699e5257)) AND ((0.4799550333273517))))))OR((((('')AND(0.5642343087228813)))OR(-1604726516)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=879626575'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)AND(CASE x''  WHEN '1208757602' THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')AND('0.5743626032840272')))AND(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 409035083 THEN 0.29584751184602265 ELSE NULL END IN (UPPER(DISTINCT 0.05839593908610474))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=251630759 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE json_array_length(NULL)  WHEN CAST(0.42633643111040953 AS INTEGER) THEN (+ (-679292401)) WHEN ('R/Jꕺ&]' IN (x'11d4')) THEN (~ ('!C')) WHEN (NOT (x'')) THEN NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1971723696')OR('-963815419')))OR(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-911282202' COLLATE NOCASE)OR((('')<=(x'')))))OR(((((((((x'acaa')AND('-679292401')))OR(NULL)))OR('1546569792')))OR('vxm~9mbu6')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=610514749 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1934587192'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-399597044')AND(NULL)))OR('746782207'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1524123923 sz=-356838424 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-37497463 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-2546352 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1815399709 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'' IN ())  WHEN x'' COLLATE RTRIM THEN (0.3541474364938809 IN ()) ELSE CASE ''  WHEN 0.590582230375332 THEN x'' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8387433634206305; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1748632895'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF('445567126', ((('', 0.8894222380987271, 0x18e24bef)) BETWEEN ((x'', 0.965050621006402, NULL)) AND ((NULL, 1614225277, NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1910000928 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND('-1282184661')))AND(NULL)))AND(NULL)))AND(191297125)))OR(INSTR('', 0.808098133504443))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.23800810785743254)) NOT BETWEEN ((-788967984)) AND ((0.04299208599740356)))) BETWEEN (CAST('' AS NUMERIC)) AND (CASE NULL  WHEN '' THEN 315352912 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ (NULL)))AND('2011571473' COLLATE RTRIM)))OR(NULL)))OR(((('')) BETWEEN ((NULL)) AND ((NULL))))))OR((((0.9128496152994438)) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=799008033'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-601015551 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'f1f4'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X3332700b)<=((((('JX*X>(2h ')AND(0.1710963020401618)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-356838424' AS INTEGER))<(UNICODE(0.19115408973642778))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.2920075423303924)/(x'2a28')))AND((((('-1603996168')AND('-212829031')))AND('170677921')))))AND(CASE x'dae6'  WHEN NULL THEN 'lῊO}te' WHEN NULL THEN '' WHEN '{' THEN 0.025056229837967847 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1245002514 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-199796526 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -687996428 sz=2055092706 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1783900245' IN ()))AND((((('m喿Z*Cz#峊')AND(NULL)))AND('1496115742')))))AND(NULLIF(DISTINCT 1987455493, x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((NULLIF(DISTINCT -5.36389958E8, 1.698410158E9))) AND ((((-399597044) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1530398787'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')<(0.5372393692634533)))OR(x'')))AND('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=67253044 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.675997085E9)LIKE('oH⮁.g'))) NOT BETWEEN (0.4562281198778766 COLLATE RTRIM) AND (0x7f07581b)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1604587349'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(('251630759' IN ()), ((x'') NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-537565915 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '872306818 sz=-324033097 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x4b552344; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1309604868')>((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')-('-1000774047')))IS(((NULL) BETWEEN (0.8803353502540878) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -2114467118'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(DISTINCT 0.3964259620662971, '⥡%NB-	+0￿'))AND(((1998370796)=(0.26456838974408337)))))AND((((x'')) BETWEEN ((x'00aa')) AND ((0x3a76ad10))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-404245961 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '0.40604531200332195' THEN NULL END)<=(CASE 1.415559045E9  WHEN '-536389958' THEN '0.17131262417343096' WHEN '-1434371502' THEN '~jgbmZ' WHEN x'' THEN 0.9325000215709423 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1114401590 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-1064332932') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)!=(x''))) NOT BETWEEN (((x'6054') ISNULL)) AND (((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('258660767' COLLATE BINARY)*((('FALSE') BETWEEN (NULL) AND ('1X9j5&w共f')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1630287073 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS INTEGER) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1518575177 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2066815167'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=2011571473 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=2032940297 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((((((('&lK')AND(x'')))AND(x'65a8')))AND(0X22d14021)))OR(NULL))  WHEN NULL COLLATE RTRIM THEN (('') NOT BETWEEN (0xffffffffb2669e7e) AND ('-779830119')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=102302947 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('t1&' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-1464755421'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1380349611'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-290407021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2053750687 sz=324575800 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.21354923714040974; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1496115742 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ('0.9706409678765986')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-1881366409 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=485581567'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1698410158') BETWEEN (NULL) AND (NULL)))LIKE(((((-2.126266827E9)AND(x'8484')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=237919270 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0.9221603961641652  WHEN '-1012168356' THEN '&z0EF~y' WHEN '' THEN 'i哵' WHEN '' THEN 'g^x-/3-	' ELSE '' END  WHEN TRIM(DISTINCT 0xffffffffd0f94dd0, x'6009') THEN (('0.704668880733734') BETWEEN ('ubp9r\') AND ('u&,/NbX	)')) ELSE (((((((('1263870788')OR('Tx(l')))AND(NULL)))OR(-1215001350)))AND(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1161404550 -611485199 sz=2100164271 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-894100668 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2064990830 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (x'e8f6' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1325285582 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
PRAGMA main.ignore_check_constraints = true; -- 1ms;
UPDATE OR IGNORE rt1 SET (c1)=(1698410158) WHERE CAST((rt1.c2 IN (rt1.c4, x'')) AS TEXT); -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA main.cache_size = -8905864223495779151; -- 0ms;
INSERT OR IGNORE INTO rt1(c4) VALUES (1512025731); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.threads = 5477119444057693488; -- 0ms;
UPDATE rt0 SET c2=x''; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1, c3) VALUES ('G鬣븵I|  ', 'MFX1U&d4l', 'Lu5'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (0.7718826117852353, 0.27734046008678237, '0.6758851872005069', '襜D>Js', 0x966e700); -- 0ms;
END; -- 0ms;
PRAGMA temp.stats; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x'5c15'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c3, c0, c4, c2) VALUES (x'', '', '-1157507078', x'', x'4846'); -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('-1200659070', 0.21052444266867776, '', NULL, '222708344'), (x'', '-31214444', -5.98401058E8, x'', x''), (1, 0.9600645716094407, NULL, x'', '2'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES (x'', x''); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=('-876203488'); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR REPLACE rt0 SET c2=NULL; -- 1ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
REINDEX  rt1; -- 0ms;
PRAGMA incremental_vacuum(-1318216071); -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT rt1 SET (c4, c3)=(NULL, -1044278475) WHERE (((((rt1.c1 IN ()))AND('i1')))AND((rt1.c3 IN ()))); -- 0ms;
UPDATE OR IGNORE rt0 SET c3='', c3=NULL; -- 0ms;
PRAGMA wal_autocheckpoint = 9033820239154029977; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3)=(NULL); -- 1ms;
ANALYZE; -- 1ms;
UPDATE rt0 SET c2=x'5dff'; -- 0ms;
CREATE VIRTUAL TABLE vt38 USING fts5(c0 UNINDEXED); -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c0, c2) VALUES (x'b3d6', 'JIW', 0x3c389f62); -- 0ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (x''); -- 0ms;
CREATE VIRTUAL TABLE rt2 USING rtree_i32(c0, c1, c2); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1='-1394126322'; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt38(vt38) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES ('~}w<', NULL); -- 0ms;
UPDATE rt1 SET (c2)=(0.059972458412194896); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt38(vt38, rank) VALUES('usermerge', 11); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE rt0 SET c0=NULL; -- 0ms;
UPDATE rt0 SET c0=117862310, c1=NULL WHERE '0.37856675056205313'; -- 1ms;
UPDATE rt0 SET c2=NULL WHERE 0X5930d37a; -- 0ms;
INSERT OR IGNORE INTO vt38(c0) VALUES (x''), (NULL), ('-1092780074'); -- 1ms;
INSERT INTO vt38(vt38, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt38(vt38) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 4ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.stats; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt1 WHERE (UPPER(DISTINCT ((((rt1.c4)OR(rt1.c1)))OR(rt1.c2)))) ORDER BY (((rt1.c4 IN ()))OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))))  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((rt1.c4)OR(rt1.c1)))OR(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4 IN ()))OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))))  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC)) IS FALSE) DESC);
SELECT ALL * FROM rt1 WHERE (UPPER(DISTINCT ((((rt1.c4)OR(rt1.c1)))OR(rt1.c2)))) ORDER BY (((rt1.c4 IN ()))OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))))  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((((rt1.c4)OR(rt1.c1)))OR(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4 IN ()))OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))))  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC)) IS FALSE) DESC);
SELECT ALL * FROM rt1 WHERE (UPPER(DISTINCT ((((rt1.c4)OR(rt1.c1)))OR(rt1.c2)))) ORDER BY (((rt1.c4 IN ()))OR(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3))))  NULLS FIRST, ((CAST(rt1.c2 AS NUMERIC)) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM vt38, rt0, rt2, rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt38, rt0, rt2, rt1);
SELECT ALL COUNT(*) FROM vt38, rt0, rt2, rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM vt38, rt0, rt2, rt1);
SELECT ALL COUNT(*) FROM vt38, rt0, rt2, rt1 WHERE (rt1.c4);
SELECT ALL * FROM rt0, rt2 WHERE ((- (rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE ((- (rt0.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE ((- (rt0.c3)) COLLATE NOCASE);
SELECT * FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN rt2 ON ((((((rt2.c0)AND(x'2426')))AND(rt2.c0)))AND((+ (vt38.c0)))) WHERE (1964532370);
SELECT SUM(count) FROM (SELECT ALL ((1964532370) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN rt2 ON ((((((rt2.c0)AND(x'2426')))AND(rt2.c0)))AND((+ (vt38.c0)))));
SELECT * FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN rt2 ON ((((((rt2.c0)AND(x'2426')))AND(rt2.c0)))AND((+ (vt38.c0)))) WHERE (1964532370);
SELECT SUM(count) FROM (SELECT ALL ((1964532370) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN rt2 ON ((((((rt2.c0)AND(x'2426')))AND(rt2.c0)))AND((+ (vt38.c0)))));
SELECT * FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c3 IN ()) IN ()) LEFT OUTER JOIN rt2 ON ((((((rt2.c0)AND(x'2426')))AND(rt2.c0)))AND((+ (vt38.c0)))) WHERE (1964532370);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (TRIM(DISTINCT (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c0))), (NOT ('>'))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c0))), (NOT ('>')))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (TRIM(DISTINCT (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c0))), (NOT ('>'))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c0))), (NOT ('>')))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL COUNT(*) FROM rt0, rt2 WHERE (TRIM(DISTINCT (((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c0))), (NOT ('>'))));
SELECT * FROM rt2, rt0, rt1 WHERE ((- (((rt0.c0)>=(rt1.c1))))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)>=(rt1.c1))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ()) ASC  NULLS LAST);
SELECT * FROM rt2, rt0, rt1 WHERE ((- (((rt0.c0)>=(rt1.c1))))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)>=(rt1.c1))))) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ()) ASC  NULLS LAST);
SELECT * FROM rt2, rt0, rt1 WHERE ((- (((rt0.c0)>=(rt1.c1))))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 END IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS TRUE)) BETWEEN (((rt0.c0)-(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (~ ((((0X71cfc67b, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE)) BETWEEN (((rt0.c0)-(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((0X71cfc67b, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS TRUE)) BETWEEN (((rt0.c0)-(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (~ ((((0X71cfc67b, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE)) BETWEEN (((rt0.c0)-(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((0X71cfc67b, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) IS TRUE)) BETWEEN (((rt0.c0)-(rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c3 THEN x'' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (~ ((((0X71cfc67b, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM vt38, rt0, rt1 WHERE (CHANGES()) ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt1.c0))), ((((((rt1.c0) ISNULL))AND(HEX(rt0.c2))))OR(CAST(rt1.c3 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt38, rt0, rt1 ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt1.c0))), ((((((rt1.c0) ISNULL))AND(HEX(rt0.c2))))OR(CAST(rt1.c3 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt38, rt0, rt1 WHERE (CHANGES()) ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt1.c0))), ((((((rt1.c0) ISNULL))AND(HEX(rt0.c2))))OR(CAST(rt1.c3 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt38, rt0, rt1 ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt1.c0))), ((((((rt1.c0) ISNULL))AND(HEX(rt0.c2))))OR(CAST(rt1.c3 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt38, rt0, rt1 WHERE (CHANGES()) ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt1.c1 AS INTEGER))) AND ((rt1.c0))), ((((((rt1.c0) ISNULL))AND(HEX(rt0.c2))))OR(CAST(rt1.c3 AS INTEGER)))  NULLS FIRST;
SELECT * FROM vt38 FULL OUTER JOIN rt1 ON (((NULL))<((rt1.c2 COLLATE BINARY))) WHERE ((((rt1.c2)||(rt1.c1)) IN ())) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.72611971250002))>=((~ (rt1.c4))))  NULLS FIRST, (NOT (rt1.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)||(rt1.c1)) IN ())) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt1 ON (((NULL))<((rt1.c2 COLLATE BINARY))) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.72611971250002))>=((~ (rt1.c4))))  NULLS FIRST, (NOT (rt1.c3))  NULLS LAST);
SELECT * FROM vt38 FULL OUTER JOIN rt1 ON (((NULL))<((rt1.c2 COLLATE BINARY))) WHERE ((((rt1.c2)||(rt1.c1)) IN ())) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.72611971250002))>=((~ (rt1.c4))))  NULLS FIRST, (NOT (rt1.c3))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)||(rt1.c1)) IN ())) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt1 ON (((NULL))<((rt1.c2 COLLATE BINARY))) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.72611971250002))>=((~ (rt1.c4))))  NULLS FIRST, (NOT (rt1.c3))  NULLS LAST);
SELECT * FROM vt38 FULL OUTER JOIN rt1 ON (((NULL))<((rt1.c2 COLLATE BINARY))) WHERE ((((rt1.c2)||(rt1.c1)) IN ())) ORDER BY ((LIKELIHOOD(DISTINCT rt1.c1, 0.72611971250002))>=((~ (rt1.c4))))  NULLS FIRST, (NOT (rt1.c3))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2, vt38 RIGHT OUTER JOIN rt1 ON rt1.c1 FULL OUTER JOIN rt0 ON SUBSTR(((((0.8571981584201083)OR(rt0.c2)))OR(0.8908672285236193)), ((((rt0.c1)OR(NULL)))OR(rt1.c2))) WHERE (((rt2.c0) BETWEEN ((((rt1.c2, rt1.c2, vt38.c0))>=((rt0.c2, x'', rt1.c2)))) AND (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c0) BETWEEN ((((rt1.c2, rt1.c2, vt38.c0))>=((rt0.c2, x'', rt1.c2)))) AND (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt2, vt38 RIGHT OUTER JOIN rt1 ON rt1.c1 FULL OUTER JOIN rt0 ON SUBSTR(((((0.8571981584201083)OR(rt0.c2)))OR(0.8908672285236193)), ((((rt0.c1)OR(NULL)))OR(rt1.c2))));
SELECT ALL COUNT(*) FROM rt2, vt38 RIGHT OUTER JOIN rt1 ON rt1.c1 FULL OUTER JOIN rt0 ON SUBSTR(((((0.8571981584201083)OR(rt0.c2)))OR(0.8908672285236193)), ((((rt0.c1)OR(NULL)))OR(rt1.c2))) WHERE (((rt2.c0) BETWEEN ((((rt1.c2, rt1.c2, vt38.c0))>=((rt0.c2, x'', rt1.c2)))) AND (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c0) BETWEEN ((((rt1.c2, rt1.c2, vt38.c0))>=((rt0.c2, x'', rt1.c2)))) AND (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt2, vt38 RIGHT OUTER JOIN rt1 ON rt1.c1 FULL OUTER JOIN rt0 ON SUBSTR(((((0.8571981584201083)OR(rt0.c2)))OR(0.8908672285236193)), ((((rt0.c1)OR(NULL)))OR(rt1.c2))));
SELECT ALL COUNT(*) FROM rt2, vt38 RIGHT OUTER JOIN rt1 ON rt1.c1 FULL OUTER JOIN rt0 ON SUBSTR(((((0.8571981584201083)OR(rt0.c2)))OR(0.8908672285236193)), ((((rt0.c1)OR(NULL)))OR(rt1.c2))) WHERE (((rt2.c0) BETWEEN ((((rt1.c2, rt1.c2, vt38.c0))>=((rt0.c2, x'', rt1.c2)))) AND (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE ((((rt0.c0)*(rt1.c1)) IN ())) ORDER BY (~ (CAST(rt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)*(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY (~ (CAST(rt1.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE ((((rt0.c0)*(rt1.c1)) IN ())) ORDER BY (~ (CAST(rt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)*(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, rt0, rt2 ORDER BY (~ (CAST(rt1.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM rt1, rt0, rt2 WHERE ((((rt0.c0)*(rt1.c1)) IN ())) ORDER BY (~ (CAST(rt1.c1 AS BLOB)));
SELECT * FROM vt38, rt2, rt0 WHERE (((((rt2.c2)!=(vt38.c0)))OR(((rt0.c2) NOT BETWEEN (vt38.c0) AND (rt0.c1))))) ORDER BY CAST(LIKE(rt0.c2, vt38.c0, 'M') AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)<>(vt38.c0)))OR(((rt0.c2) NOT BETWEEN (vt38.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt38, rt2, rt0 ORDER BY CAST(LIKE(rt0.c2, vt38.c0, 'M') AS BLOB) DESC  NULLS FIRST);
SELECT * FROM vt38, rt2, rt0 WHERE (((((rt2.c2)!=(vt38.c0)))OR(((rt0.c2) NOT BETWEEN (vt38.c0) AND (rt0.c1))))) ORDER BY CAST(LIKE(rt0.c2, vt38.c0, 'M') AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)<>(vt38.c0)))OR(((rt0.c2) NOT BETWEEN (vt38.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt38, rt2, rt0 ORDER BY CAST(LIKE(rt0.c2, vt38.c0, 'M') AS BLOB) DESC  NULLS FIRST);
SELECT * FROM vt38, rt2, rt0 WHERE (((((rt2.c2)!=(vt38.c0)))OR(((rt0.c2) NOT BETWEEN (vt38.c0) AND (rt0.c1))))) ORDER BY CAST(LIKE(rt0.c2, vt38.c0, 'M') AS BLOB) DESC  NULLS FIRST;
SELECT * FROM rt2, vt38 WHERE ((NOT ((((rt2.c2, vt38.c0, rt2.c2)) BETWEEN ((rt2.c0, rt2.c0, rt2.c1)) AND ((vt38.c0, NULL, rt2.c1))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt2.c2, vt38.c0, rt2.c2)) BETWEEN ((rt2.c0, rt2.c0, rt2.c1)) AND ((vt38.c0, NULL, rt2.c1)))))) IS TRUE)  as count FROM rt2, vt38);
SELECT * FROM rt2, vt38 WHERE ((NOT ((((rt2.c2, vt38.c0, rt2.c2)) BETWEEN ((rt2.c0, rt2.c0, rt2.c1)) AND ((vt38.c0, NULL, rt2.c1))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt2.c2, vt38.c0, rt2.c2)) BETWEEN ((rt2.c0, rt2.c0, rt2.c1)) AND ((vt38.c0, NULL, rt2.c1)))))) IS TRUE)  as count FROM rt2, vt38);
SELECT * FROM rt2, vt38 WHERE ((NOT ((((rt2.c2, vt38.c0, rt2.c2)) BETWEEN ((rt2.c0, rt2.c0, rt2.c1)) AND ((vt38.c0, NULL, rt2.c1))))));
SELECT ALL * FROM rt0, rt1 WHERE (((CAST(rt0.c1 AS TEXT))>(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))>(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((CAST(rt0.c1 AS TEXT))>(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT))>(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((CAST(rt0.c1 AS TEXT))>(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c0)))AND(rt0.c1)))));
SELECT ALL * FROM rt1, rt2 WHERE (((((((((((((rt2.c2)AND(rt2.c1)))OR(rt1.c0)))AND(rt2.c2)))AND(x'')))AND(((rt1.c4) IS FALSE))))AND(((rt1.c2)+(NULL))))) ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt2.c2)AND(rt2.c1)))OR(rt1.c0)))AND(rt2.c2)))AND(x'')))AND(((rt1.c4) IS FALSE))))AND(((rt1.c2)+(NULL))))) IS TRUE)  as count FROM rt1, rt2 ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt2 WHERE (((((((((((((rt2.c2)AND(rt2.c1)))OR(rt1.c0)))AND(rt2.c2)))AND(x'')))AND(((rt1.c4) IS FALSE))))AND(((rt1.c2)+(NULL))))) ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt2.c2)AND(rt2.c1)))OR(rt1.c0)))AND(rt2.c2)))AND(x'')))AND(((rt1.c4) IS FALSE))))AND(((rt1.c2)+(NULL))))) IS TRUE)  as count FROM rt1, rt2 ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt2 WHERE (((((((((((((rt2.c2)AND(rt2.c1)))OR(rt1.c0)))AND(rt2.c2)))AND(x'')))AND(((rt1.c4) IS FALSE))))AND(((rt1.c2)+(NULL))))) ORDER BY CAST(rt1.c1 AS INTEGER) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))<>((CASE WHEN rt0.c1 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE NOCASE))<>((CASE WHEN rt0.c1 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))<>((CASE WHEN rt0.c1 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE NOCASE))<>((CASE WHEN rt0.c1 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 COLLATE NOCASE))<>((CASE WHEN rt0.c1 THEN rt0.c0 END))));
SELECT ALL * FROM vt38 WHERE (CASE CASE WHEN vt38.c0 THEN vt38.c0 END  WHEN ((vt38.c0)IS(vt38.c0)) THEN x'' COLLATE RTRIM WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END THEN ((((vt38.c0)OR(vt38.c0)))OR(NULL)) WHEN ((((vt38.c0)AND(vt38.c0)))OR(vt38.c0)) THEN vt38.c0 COLLATE NOCASE ELSE ((vt38.c0)IS NOT(vt38.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt38.c0 THEN vt38.c0 END  WHEN ((vt38.c0)IS(vt38.c0)) THEN x'' COLLATE RTRIM WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END THEN ((((vt38.c0)OR(vt38.c0)))OR(NULL)) WHEN ((((vt38.c0)AND(vt38.c0)))OR(vt38.c0)) THEN vt38.c0 COLLATE NOCASE ELSE ((vt38.c0)IS NOT(vt38.c0)) END) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE (CASE CASE WHEN vt38.c0 THEN vt38.c0 END  WHEN ((vt38.c0)IS(vt38.c0)) THEN x'' COLLATE RTRIM WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END THEN ((((vt38.c0)OR(vt38.c0)))OR(NULL)) WHEN ((((vt38.c0)AND(vt38.c0)))OR(vt38.c0)) THEN vt38.c0 COLLATE NOCASE ELSE ((vt38.c0)IS NOT(vt38.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt38.c0 THEN vt38.c0 END  WHEN ((vt38.c0)IS(vt38.c0)) THEN x'' COLLATE RTRIM WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END THEN ((((vt38.c0)OR(vt38.c0)))OR(NULL)) WHEN ((((vt38.c0)AND(vt38.c0)))OR(vt38.c0)) THEN vt38.c0 COLLATE NOCASE ELSE ((vt38.c0)IS NOT(vt38.c0)) END) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE (CASE CASE WHEN vt38.c0 THEN vt38.c0 END  WHEN ((vt38.c0)IS(vt38.c0)) THEN x'' COLLATE RTRIM WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END THEN ((((vt38.c0)OR(vt38.c0)))OR(NULL)) WHEN ((((vt38.c0)AND(vt38.c0)))OR(vt38.c0)) THEN vt38.c0 COLLATE NOCASE ELSE ((vt38.c0)IS NOT(vt38.c0)) END);
SELECT ALL COUNT(*) FROM rt0, rt2, vt38, rt1 WHERE (((((((((((((rt1.c2)AND(rt2.c0)))AND(rt1.c4)))OR(rt2.c1)))AND(rt2.c1)))OR(TYPEOF(rt1.c0))))AND((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c2)AND(rt2.c0)))AND(rt1.c4)))OR(rt2.c1)))AND(rt2.c1)))OR(TYPEOF(rt1.c0))))AND((NULL IN ())))) IS TRUE)  as count FROM rt0, rt2, vt38, rt1);
SELECT ALL COUNT(*) FROM rt0, rt2, vt38, rt1 WHERE (((((((((((((rt1.c2)AND(rt2.c0)))AND(rt1.c4)))OR(rt2.c1)))AND(rt2.c1)))OR(TYPEOF(rt1.c0))))AND((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c2)AND(rt2.c0)))AND(rt1.c4)))OR(rt2.c1)))AND(rt2.c1)))OR(TYPEOF(rt1.c0))))AND((NULL IN ())))) IS TRUE)  as count FROM rt0, rt2, vt38, rt1);
SELECT ALL COUNT(*) FROM rt0, rt2, vt38, rt1 WHERE (((((((((((((rt1.c2)AND(rt2.c0)))AND(rt1.c4)))OR(rt2.c1)))AND(rt2.c1)))OR(TYPEOF(rt1.c0))))AND((NULL IN ()))));
SELECT * FROM rt1 RIGHT OUTER JOIN vt38 ON ((((CASE WHEN rt2.c1 THEN rt1.c2 END)AND(CAST(rt2.c1 AS BLOB))))AND(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt2.c2 END)) RIGHT OUTER JOIN rt2 ON (NOT (((rt2.c1)%(rt1.c3)))) WHERE (2.052830159E9) ORDER BY (((((((((('gU3콺''')AND(rt1.c2)))OR(vt38.c0)))AND(x'')))AND(x''))) IS TRUE) ASC, ((TRIM(DISTINCT rt2.c1, NULL))<<(CHAR(rt2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((2.052830159E9) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt38 ON ((((CASE WHEN rt2.c1 THEN rt1.c2 END)AND(CAST(rt2.c1 AS BLOB))))AND(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt2.c2 END)) RIGHT OUTER JOIN rt2 ON (NOT (((rt2.c1)%(rt1.c3)))) ORDER BY (((((((((('gU3콺''')AND(rt1.c2)))OR(vt38.c0)))AND(x'')))AND(x''))) IS TRUE) ASC, ((TRIM(DISTINCT rt2.c1, NULL))<<(CHAR(rt2.c0))) DESC);
SELECT * FROM rt1 RIGHT OUTER JOIN vt38 ON ((((CASE WHEN rt2.c1 THEN rt1.c2 END)AND(CAST(rt2.c1 AS BLOB))))AND(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt2.c2 END)) RIGHT OUTER JOIN rt2 ON (NOT (((rt2.c1)%(rt1.c3)))) WHERE (2.052830159E9) ORDER BY (((((((((('gU3콺''')AND(rt1.c2)))OR(vt38.c0)))AND(x'')))AND(x''))) IS TRUE) ASC, ((TRIM(DISTINCT rt2.c1, NULL))<<(CHAR(rt2.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((2.052830159E9) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt38 ON ((((CASE WHEN rt2.c1 THEN rt1.c2 END)AND(CAST(rt2.c1 AS BLOB))))AND(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt2.c2 END)) RIGHT OUTER JOIN rt2 ON (NOT (((rt2.c1)%(rt1.c3)))) ORDER BY (((((((((('gU3콺''')AND(rt1.c2)))OR(vt38.c0)))AND(x'')))AND(x''))) IS TRUE) ASC, ((TRIM(DISTINCT rt2.c1, NULL))<<(CHAR(rt2.c0))) DESC);
SELECT COUNT(*) FROM rt1 INNER JOIN vt38 ON CAST(highlight(vt38.c0, rt1.c3, rt2.c0, rt0.c0) AS INTEGER) RIGHT OUTER JOIN rt2 ON rt1.c3 RIGHT OUTER JOIN rt0 ON rt1.c0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt1 INNER JOIN vt38 ON CAST(highlight(vt38.c0, rt1.c3, rt2.c0, rt0.c0) AS INTEGER) RIGHT OUTER JOIN rt2 ON rt1.c3 RIGHT OUTER JOIN rt0 ON rt1.c0);
SELECT COUNT(*) FROM rt1 INNER JOIN vt38 ON CAST(highlight(vt38.c0, rt1.c3, rt2.c0, rt0.c0) AS INTEGER) RIGHT OUTER JOIN rt2 ON rt1.c3 RIGHT OUTER JOIN rt0 ON rt1.c0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt1 INNER JOIN vt38 ON CAST(highlight(vt38.c0, rt1.c3, rt2.c0, rt0.c0) AS INTEGER) RIGHT OUTER JOIN rt2 ON rt1.c3 RIGHT OUTER JOIN rt0 ON rt1.c0);
SELECT ALL COUNT(*) FROM vt38 CROSS JOIN rt2 ON CASE ((((((((rt0.c3)OR(rt2.c0)))AND(rt2.c2)))AND(rt0.c1)))AND(rt2.c2))  WHEN ((rt0.c1)>=(rt0.c3)) THEN rt0.c0 ELSE ((rt2.c0)||(rt0.c3)) END LEFT OUTER JOIN rt0 ON ((((rt0.c0)GLOB(rt0.c3)))|(((rt2.c0) ISNULL))) WHERE (((((rt2.c1, rt2.c0, NULL, rt2.c1, rt2.c2))==((rt2.c1, vt38.c0, '', rt2.c2, rt0.c0))) IN (((vt38.c0)OR(rt0.c0))))) ORDER BY DATETIME(((rt0.c0) ISNULL), rt0.c1, (rt0.c0 IN ()))  NULLS FIRST, -1544268027 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt2.c1, rt2.c0, NULL, rt2.c1, rt2.c2))==((rt2.c1, vt38.c0, '', rt2.c2, rt0.c0))) IN (((vt38.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt38 CROSS JOIN rt2 ON CASE ((((((((rt0.c3)OR(rt2.c0)))AND(rt2.c2)))AND(rt0.c1)))AND(rt2.c2))  WHEN ((rt0.c1)>=(rt0.c3)) THEN rt0.c0 ELSE ((rt2.c0)||(rt0.c3)) END LEFT OUTER JOIN rt0 ON ((((rt0.c0)GLOB(rt0.c3)))|(((rt2.c0) ISNULL))) ORDER BY DATETIME(((rt0.c0) ISNULL), rt0.c1, (rt0.c0 IN ()))  NULLS FIRST, -1544268027 ASC);
SELECT ALL COUNT(*) FROM vt38 CROSS JOIN rt2 ON CASE ((((((((rt0.c3)OR(rt2.c0)))AND(rt2.c2)))AND(rt0.c1)))AND(rt2.c2))  WHEN ((rt0.c1)>=(rt0.c3)) THEN rt0.c0 ELSE ((rt2.c0)||(rt0.c3)) END LEFT OUTER JOIN rt0 ON ((((rt0.c0)GLOB(rt0.c3)))|(((rt2.c0) ISNULL))) WHERE (((((rt2.c1, rt2.c0, NULL, rt2.c1, rt2.c2))==((rt2.c1, vt38.c0, '', rt2.c2, rt0.c0))) IN (((vt38.c0)OR(rt0.c0))))) ORDER BY DATETIME(((rt0.c0) ISNULL), rt0.c1, (rt0.c0 IN ()))  NULLS FIRST, -1544268027 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt2.c1, rt2.c0, NULL, rt2.c1, rt2.c2))==((rt2.c1, vt38.c0, '', rt2.c2, rt0.c0))) IN (((vt38.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt38 CROSS JOIN rt2 ON CASE ((((((((rt0.c3)OR(rt2.c0)))AND(rt2.c2)))AND(rt0.c1)))AND(rt2.c2))  WHEN ((rt0.c1)>=(rt0.c3)) THEN rt0.c0 ELSE ((rt2.c0)||(rt0.c3)) END LEFT OUTER JOIN rt0 ON ((((rt0.c0)GLOB(rt0.c3)))|(((rt2.c0) ISNULL))) ORDER BY DATETIME(((rt0.c0) ISNULL), rt0.c1, (rt0.c0 IN ()))  NULLS FIRST, -1544268027 ASC);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2)))) AND ((((rt2.c0) BETWEEN (rt2.c0) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2)))) AND ((((rt2.c0) BETWEEN (rt2.c0) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2)))) AND ((((rt2.c0) BETWEEN (rt2.c0) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2)))) AND ((((rt2.c0) BETWEEN (rt2.c0) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0, rt2, rt1);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1 WHERE ((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2)))) AND ((((rt2.c0) BETWEEN (rt2.c0) AND (rt0.c3))))));
SELECT * FROM rt0, rt2, vt38 WHERE (((((vt38.c0)GLOB('25832216'))) NOT BETWEEN (((((((((x'd354')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)GLOB('25832216'))) NOT BETWEEN (((((((((x'd354')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, rt2, vt38);
SELECT * FROM rt0, rt2, vt38 WHERE (((((vt38.c0)GLOB('25832216'))) NOT BETWEEN (((((((((x'd354')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)GLOB('25832216'))) NOT BETWEEN (((((((((x'd354')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, rt2, vt38);
SELECT * FROM rt0, rt2, vt38 WHERE (((((vt38.c0)GLOB('25832216'))) NOT BETWEEN (((((((((x'd354')AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c2))) AND (rt0.c0)));
SELECT ALL * FROM rt1, vt38, rt2, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt1.c2)) AND (((NOT (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((rt1.c2)) AND (((NOT (rt1.c1)))))) IS TRUE)  as count FROM rt1, vt38, rt2, rt0);
SELECT ALL * FROM rt1, vt38, rt2, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt1.c2)) AND (((NOT (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((rt1.c2)) AND (((NOT (rt1.c1)))))) IS TRUE)  as count FROM rt1, vt38, rt2, rt0);
SELECT ALL * FROM rt1, vt38, rt2, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt1.c2)) AND (((NOT (rt1.c1))))));
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(DISTINCT CAST(rt0.c1 AS REAL)));
SELECT * FROM rt1 WHERE (rt1.c4 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4 COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c4 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4 COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c4 COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2) IS FALSE)))>((((rt0.c0)-(0.21665553440780105)))))) ORDER BY CASE WHEN ((rt0.c1)==(rt0.c2)) THEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)) WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(rt0.c0) THEN ('-1489233072' IN (rt0.c1)) ELSE ((rt0.c1)%(rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE)))>((((rt0.c0)-(0.21665553440780105)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1)==(rt0.c2)) THEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)) WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(rt0.c0) THEN ('-1489233072' IN (rt0.c1)) ELSE ((rt0.c1)%(rt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2) IS FALSE)))>((((rt0.c0)-(0.21665553440780105)))))) ORDER BY CASE WHEN ((rt0.c1)==(rt0.c2)) THEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)) WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(rt0.c0) THEN ('-1489233072' IN (rt0.c1)) ELSE ((rt0.c1)%(rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE)))>((((rt0.c0)-(0.21665553440780105)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1)==(rt0.c2)) THEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)) WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(rt0.c0) THEN ('-1489233072' IN (rt0.c1)) ELSE ((rt0.c1)%(rt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2) IS FALSE)))>((((rt0.c0)-(0.21665553440780105)))))) ORDER BY CASE WHEN ((rt0.c1)==(rt0.c2)) THEN ((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)) WHEN rt0.c1 THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(rt0.c0) THEN ('-1489233072' IN (rt0.c1)) ELSE ((rt0.c1)%(rt0.c0)) END  NULLS FIRST;
SELECT * FROM rt1, vt38 RIGHT OUTER JOIN rt0 ON CAST((rt1.c2 IN ()) AS INTEGER) WHERE ((CAST(rt1.c2 AS NUMERIC) IN ())) ORDER BY CASE (~ (rt1.c4))  WHEN rt0.c1 THEN (+ (vt38.c0)) ELSE ((rt0.c0)<<(vt38.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, vt38 RIGHT OUTER JOIN rt0 ON CAST((rt1.c2 IN ()) AS INTEGER) ORDER BY CASE (~ (rt1.c4))  WHEN rt0.c1 THEN (+ (vt38.c0)) ELSE ((rt0.c0)<<(vt38.c0)) END);
SELECT * FROM rt1, vt38 RIGHT OUTER JOIN rt0 ON CAST((rt1.c2 IN ()) AS INTEGER) WHERE ((CAST(rt1.c2 AS NUMERIC) IN ())) ORDER BY CASE (~ (rt1.c4))  WHEN rt0.c1 THEN (+ (vt38.c0)) ELSE ((rt0.c0)<<(vt38.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt1, vt38 RIGHT OUTER JOIN rt0 ON CAST((rt1.c2 IN ()) AS INTEGER) ORDER BY CASE (~ (rt1.c4))  WHEN rt0.c1 THEN (+ (vt38.c0)) ELSE ((rt0.c0)<<(vt38.c0)) END);
SELECT * FROM rt1, vt38 RIGHT OUTER JOIN rt0 ON CAST((rt1.c2 IN ()) AS INTEGER) WHERE ((CAST(rt1.c2 AS NUMERIC) IN ())) ORDER BY CASE (~ (rt1.c4))  WHEN rt0.c1 THEN (+ (vt38.c0)) ELSE ((rt0.c0)<<(vt38.c0)) END;
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c1) ORDER BY CAST((NOT (rt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((NOT (rt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c1) ORDER BY CAST((NOT (rt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((NOT (rt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (rt1.c1) ORDER BY CAST((NOT (rt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, rt2, vt38 WHERE ('땁.');
SELECT SUM(count) FROM (SELECT ALL (('땁.') IS TRUE)  as count FROM rt0, rt1, rt2, vt38);
SELECT COUNT(*) FROM rt0, rt1, rt2, vt38 WHERE ('땁.');
SELECT SUM(count) FROM (SELECT ALL (('땁.') IS TRUE)  as count FROM rt0, rt1, rt2, vt38);
SELECT COUNT(*) FROM rt0, rt1, rt2, vt38 WHERE ('땁.');
SELECT COUNT(*) FROM rt2 NOT INDEXED, vt38 WHERE ((((~ (x'8971078f'))) BETWEEN (LTRIM(rt2.c2, vt38.c0)) AND ((+ (rt2.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (x'8971078f'))) BETWEEN (LTRIM(rt2.c2, vt38.c0)) AND ((+ (rt2.c2))))) IS TRUE)  as count FROM rt2, vt38);
SELECT COUNT(*) FROM rt2 NOT INDEXED, vt38 WHERE ((((~ (x'8971078f'))) BETWEEN (LTRIM(rt2.c2, vt38.c0)) AND ((+ (rt2.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (x'8971078f'))) BETWEEN (LTRIM(rt2.c2, vt38.c0)) AND ((+ (rt2.c2))))) IS TRUE)  as count FROM rt2, vt38);
SELECT COUNT(*) FROM rt2 NOT INDEXED, vt38 WHERE ((((~ (x'8971078f'))) BETWEEN (LTRIM(rt2.c2, vt38.c0)) AND ((+ (rt2.c2)))));
SELECT ALL COUNT(*) FROM vt38, rt0, rt2 WHERE ((((rt0.c1)) BETWEEN (('-269223066')) AND ((vt38.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('-269223066')) AND ((vt38.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt38, rt0, rt2);
SELECT ALL COUNT(*) FROM vt38, rt0, rt2 WHERE ((((rt0.c1)) BETWEEN (('-269223066')) AND ((vt38.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('-269223066')) AND ((vt38.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt38, rt0, rt2);
SELECT ALL COUNT(*) FROM vt38, rt0, rt2 WHERE ((((rt0.c1)) BETWEEN (('-269223066')) AND ((vt38.c0))) COLLATE BINARY);
SELECT * FROM rt2 WHERE (((rt2.c0) NOT BETWEEN (rt2.c0 COLLATE BINARY) AND (((rt2.c0)>(rt2.c0))))) ORDER BY ((rt2.c0 COLLATE NOCASE) NOTNULL) ASC, ((rt2.c2 COLLATE NOCASE) NOT BETWEEN (rt2.c1 COLLATE RTRIM) AND (((rt2.c1) NOT BETWEEN (rt2.c2) AND (rt2.c2))));
SELECT SUM(count) FROM (SELECT ((((rt2.c0) NOT BETWEEN (rt2.c0 COLLATE BINARY) AND (((rt2.c0)>(rt2.c0))))) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c0 COLLATE NOCASE) NOTNULL) ASC, ((rt2.c2 COLLATE NOCASE) NOT BETWEEN (rt2.c1 COLLATE RTRIM) AND (((rt2.c1) NOT BETWEEN (rt2.c2) AND (rt2.c2)))));
SELECT * FROM rt2 WHERE (((rt2.c0) NOT BETWEEN (rt2.c0 COLLATE BINARY) AND (((rt2.c0)>(rt2.c0))))) ORDER BY ((rt2.c0 COLLATE NOCASE) NOTNULL) ASC, ((rt2.c2 COLLATE NOCASE) NOT BETWEEN (rt2.c1 COLLATE RTRIM) AND (((rt2.c1) NOT BETWEEN (rt2.c2) AND (rt2.c2))));
SELECT SUM(count) FROM (SELECT ((((rt2.c0) NOT BETWEEN (rt2.c0 COLLATE BINARY) AND (((rt2.c0)>(rt2.c0))))) IS TRUE)  as count FROM rt2 ORDER BY ((rt2.c0 COLLATE NOCASE) NOTNULL) ASC, ((rt2.c2 COLLATE NOCASE) NOT BETWEEN (rt2.c1 COLLATE RTRIM) AND (((rt2.c1) NOT BETWEEN (rt2.c2) AND (rt2.c2)))));
SELECT * FROM rt2 WHERE (((rt2.c0) NOT BETWEEN (rt2.c0 COLLATE BINARY) AND (((rt2.c0)>(rt2.c0))))) ORDER BY ((rt2.c0 COLLATE NOCASE) NOTNULL) ASC, ((rt2.c2 COLLATE NOCASE) NOT BETWEEN (rt2.c1 COLLATE RTRIM) AND (((rt2.c1) NOT BETWEEN (rt2.c2) AND (rt2.c2))));
SELECT * FROM rt1, vt38 WHERE ('	7') ORDER BY TYPEOF((rt1.c3 IN ())) DESC;
SELECT SUM(count) FROM (SELECT (('	7') IS TRUE)  as count FROM rt1, vt38 ORDER BY TYPEOF((rt1.c3 IN ())) DESC);
SELECT * FROM rt1, vt38 WHERE ('	7') ORDER BY TYPEOF((rt1.c3 IN ())) DESC;
SELECT SUM(count) FROM (SELECT (('	7') IS TRUE)  as count FROM rt1, vt38 ORDER BY TYPEOF((rt1.c3 IN ())) DESC);
SELECT * FROM rt1, vt38 WHERE ('	7') ORDER BY TYPEOF((rt1.c3 IN ())) DESC;
SELECT COUNT(*) FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(((rt0.c3)<=(rt0.c3)))) WHERE (CASE ((NULL)|(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (((rt0.c3, rt0.c0, vt38.c0)) BETWEEN ((rt0.c0, rt0.c0, vt38.c0)) AND (('08P%m*+', rt0.c0, rt0.c3))) THEN (~ (rt0.c2)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN CAST(rt0.c1 AS INTEGER) THEN '-679292401' WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt0.c0)AND(vt38.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL)|(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (((rt0.c3, rt0.c0, vt38.c0)) BETWEEN ((rt0.c0, rt0.c0, vt38.c0)) AND (('08P%m*+', rt0.c0, rt0.c3))) THEN (~ (rt0.c2)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN CAST(rt0.c1 AS INTEGER) THEN '-679292401' WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt0.c0)AND(vt38.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(((rt0.c3)<=(rt0.c3)))));
SELECT COUNT(*) FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(((rt0.c3)<=(rt0.c3)))) WHERE (CASE ((NULL)|(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (((rt0.c3, rt0.c0, vt38.c0)) BETWEEN ((rt0.c0, rt0.c0, vt38.c0)) AND (('08P%m*+', rt0.c0, rt0.c3))) THEN (~ (rt0.c2)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN CAST(rt0.c1 AS INTEGER) THEN '-679292401' WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt0.c0)AND(vt38.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((NULL)|(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (((rt0.c3, rt0.c0, vt38.c0)) BETWEEN ((rt0.c0, rt0.c0, vt38.c0)) AND (('08P%m*+', rt0.c0, rt0.c3))) THEN (~ (rt0.c2)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN CAST(rt0.c1 AS INTEGER) THEN '-679292401' WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt0.c0)AND(vt38.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(((rt0.c3)<=(rt0.c3)))));
SELECT COUNT(*) FROM vt38 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(((rt0.c3)<=(rt0.c3)))) WHERE (CASE ((NULL)|(rt0.c1))  WHEN (+ (rt0.c1)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (((rt0.c3, rt0.c0, vt38.c0)) BETWEEN ((rt0.c0, rt0.c0, vt38.c0)) AND (('08P%m*+', rt0.c0, rt0.c3))) THEN (~ (rt0.c2)) WHEN IFNULL(DISTINCT rt0.c1, rt0.c2) THEN ((rt0.c0) IS TRUE) WHEN CAST(rt0.c1 AS INTEGER) THEN '-679292401' WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt0.c0)AND(vt38.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END);
SELECT * FROM rt1, rt0, vt38, rt2 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, rt0, vt38, rt2);
SELECT * FROM rt1, rt0, vt38, rt2 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, rt0, vt38, rt2);
SELECT * FROM rt1, rt0, vt38, rt2 WHERE (rt0.c1);
SELECT * FROM rt2 WHERE ((((rt2.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL))) AND ((x'')))) ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c2)))OR(rt2.c1)))OR('1956181270')) DESC, ((rt2.c2 COLLATE RTRIM)>(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c1 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL))) AND ((x'')))) IS TRUE)  as count FROM rt2 ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c2)))OR(rt2.c1)))OR('1956181270')) DESC, ((rt2.c2 COLLATE RTRIM)>(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c1 THEN NULL END)));
SELECT * FROM rt2 WHERE ((((rt2.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL))) AND ((x'')))) ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c2)))OR(rt2.c1)))OR('1956181270')) DESC, ((rt2.c2 COLLATE RTRIM)>(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c1 THEN NULL END));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL))) AND ((x'')))) IS TRUE)  as count FROM rt2 ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c2)))OR(rt2.c1)))OR('1956181270')) DESC, ((rt2.c2 COLLATE RTRIM)>(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c1 THEN NULL END)));
SELECT * FROM rt2 WHERE ((((rt2.c2)) NOT BETWEEN ((((rt2.c2) NOTNULL))) AND ((x'')))) ORDER BY ((((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c2)))OR(rt2.c1)))OR('1956181270')) DESC, ((rt2.c2 COLLATE RTRIM)>(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c1 THEN NULL END));
SELECT ALL * FROM rt2, rt1 FULL OUTER JOIN vt38 ON ((((((((((((rt1.c2)AND(rt2.c2)))AND(rt1.c2)))AND(((rt1.c2) NOT BETWEEN ('-788967984') AND (rt1.c4)))))OR(rt1.c0 COLLATE BINARY)))AND(0.714613126892291)))OR(vt38.c0)) WHERE (((((rt2.c0)!=(rt1.c1))) IS FALSE)) ORDER BY CASE WHEN ((vt38.c0) IS TRUE) THEN UPPER(rt1.c3) ELSE CASE 'RD'  WHEN rt1.c0 THEN rt2.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0)!=(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt2, rt1 FULL OUTER JOIN vt38 ON ((((((((((((rt1.c2)AND(rt2.c2)))AND(rt1.c2)))AND(((rt1.c2) NOT BETWEEN ('-788967984') AND (rt1.c4)))))OR(rt1.c0 COLLATE BINARY)))AND(0.714613126892291)))OR(vt38.c0)) ORDER BY CASE WHEN ((vt38.c0) IS TRUE) THEN UPPER(rt1.c3) ELSE CASE 'RD'  WHEN rt1.c0 THEN rt2.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS LAST);
SELECT ALL * FROM rt2, rt1 FULL OUTER JOIN vt38 ON ((((((((((((rt1.c2)AND(rt2.c2)))AND(rt1.c2)))AND(((rt1.c2) NOT BETWEEN ('-788967984') AND (rt1.c4)))))OR(rt1.c0 COLLATE BINARY)))AND(0.714613126892291)))OR(vt38.c0)) WHERE (((((rt2.c0)!=(rt1.c1))) IS FALSE)) ORDER BY CASE WHEN ((vt38.c0) IS TRUE) THEN UPPER(rt1.c3) ELSE CASE 'RD'  WHEN rt1.c0 THEN rt2.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0)!=(rt1.c1))) IS FALSE)) IS TRUE)  as count FROM rt2, rt1 FULL OUTER JOIN vt38 ON ((((((((((((rt1.c2)AND(rt2.c2)))AND(rt1.c2)))AND(((rt1.c2) NOT BETWEEN ('-788967984') AND (rt1.c4)))))OR(rt1.c0 COLLATE BINARY)))AND(0.714613126892291)))OR(vt38.c0)) ORDER BY CASE WHEN ((vt38.c0) IS TRUE) THEN UPPER(rt1.c3) ELSE CASE 'RD'  WHEN rt1.c0 THEN rt2.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS LAST);
SELECT ALL * FROM rt2, rt1 FULL OUTER JOIN vt38 ON ((((((((((((rt1.c2)AND(rt2.c2)))AND(rt1.c2)))AND(((rt1.c2) NOT BETWEEN ('-788967984') AND (rt1.c4)))))OR(rt1.c0 COLLATE BINARY)))AND(0.714613126892291)))OR(vt38.c0)) WHERE (((((rt2.c0)!=(rt1.c1))) IS FALSE)) ORDER BY CASE WHEN ((vt38.c0) IS TRUE) THEN UPPER(rt1.c3) ELSE CASE 'RD'  WHEN rt1.c0 THEN rt2.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c1 ELSE rt1.c0 END END  NULLS LAST;
SELECT * FROM rt2, vt38 WHERE (((((vt38.c0) NOT BETWEEN (rt2.c1) AND (x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt38.c0) NOT BETWEEN (rt2.c1) AND (x''))) NOTNULL)) IS TRUE)  as count FROM rt2, vt38);
SELECT * FROM rt2, vt38 WHERE (((((vt38.c0) NOT BETWEEN (rt2.c1) AND (x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt38.c0) NOT BETWEEN (rt2.c1) AND (x''))) NOTNULL)) IS TRUE)  as count FROM rt2, vt38);
SELECT * FROM rt2, vt38 WHERE (((((vt38.c0) NOT BETWEEN (rt2.c1) AND (x''))) NOTNULL));
SELECT * FROM rt0, rt1, rt2 WHERE ((((rt2.c0)) NOT BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c2 END)) AND (((- (rt2.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt2.c0)) NOT BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c2 END)) AND (((- (rt2.c1)))))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT * FROM rt0, rt1, rt2 WHERE ((((rt2.c0)) NOT BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c2 END)) AND (((- (rt2.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt2.c0)) NOT BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c2 END)) AND (((- (rt2.c1)))))) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT * FROM rt0, rt1, rt2 WHERE ((((rt2.c0)) NOT BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c2 END)) AND (((- (rt2.c1))))));
SELECT ALL COUNT(*) FROM vt38 CROSS JOIN rt2 ON (NOT ((rt2.c0 IN ()))) WHERE ((((x'') BETWEEN (rt2.c2) AND (vt38.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'') BETWEEN (rt2.c2) AND (vt38.c0)) IN ())) IS TRUE)  as count FROM vt38 CROSS JOIN rt2 ON (NOT ((rt2.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt38 CROSS JOIN rt2 ON (NOT ((rt2.c0 IN ()))) WHERE ((((x'') BETWEEN (rt2.c2) AND (vt38.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'') BETWEEN (rt2.c2) AND (vt38.c0)) IN ())) IS TRUE)  as count FROM vt38 CROSS JOIN rt2 ON (NOT ((rt2.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt38 CROSS JOIN rt2 ON (NOT ((rt2.c0 IN ()))) WHERE ((((x'') BETWEEN (rt2.c2) AND (vt38.c0)) IN ()));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END AS NUMERIC));
SELECT COUNT(*) FROM vt38, rt1 WHERE (((((rt1.c3) IS FALSE))GLOB(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS FALSE))GLOB(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM vt38, rt1);
SELECT COUNT(*) FROM vt38, rt1 WHERE (((((rt1.c3) IS FALSE))GLOB(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS FALSE))GLOB(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM vt38, rt1);
SELECT COUNT(*) FROM vt38, rt1 WHERE (((((rt1.c3) IS FALSE))GLOB(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL * FROM rt2, rt0, rt1 WHERE ((((NOT (rt1.c2))) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0))))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE ((((NOT (rt1.c2))) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0))))) IS TRUE)  as count FROM rt2, rt0, rt1);
SELECT ALL * FROM rt2, rt0, rt1 WHERE ((((NOT (rt1.c2))) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0)))));
SELECT ALL * FROM rt2 WHERE ((- (x'ece0')));
SELECT SUM(count) FROM (SELECT (((- (x'ece0'))) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE ((- (x'ece0')));
SELECT SUM(count) FROM (SELECT (((- (x'ece0'))) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE ((- (x'ece0')));
SELECT COUNT(*) FROM vt38, rt1, rt2 WHERE (((rt1.c3) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt38, rt1, rt2);
SELECT COUNT(*) FROM vt38, rt1, rt2 WHERE (((rt1.c3) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt38, rt1, rt2);
SELECT COUNT(*) FROM vt38, rt1, rt2 WHERE (((rt1.c3) IS TRUE) COLLATE BINARY);
SELECT * FROM vt38, rt0, rt2, rt1 WHERE (((rt0.c2 IN (rt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt2.c0)) IN ())) IS TRUE)  as count FROM vt38, rt0, rt2, rt1);
SELECT * FROM vt38, rt0, rt2, rt1 WHERE (((rt0.c2 IN (rt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt2.c0)) IN ())) IS TRUE)  as count FROM vt38, rt0, rt2, rt1);
SELECT * FROM vt38, rt0, rt2, rt1 WHERE (((rt0.c2 IN (rt2.c0)) IN ()));
SELECT ALL * FROM rt2, rt1, vt38 WHERE (((((rt2.c2)LIKE('-1722424214'))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt1.c4 AS INTEGER)))) ORDER BY x'9354';
SELECT SUM(count) FROM (SELECT ((((((rt2.c2)LIKE('-1722424214'))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt1.c4 AS INTEGER)))) IS TRUE)  as count FROM rt2, rt1, vt38 ORDER BY x'9354');
SELECT ALL * FROM rt2, rt1, vt38 WHERE (((((rt2.c2)LIKE('-1722424214'))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt1.c4 AS INTEGER)))) ORDER BY x'9354';
SELECT SUM(count) FROM (SELECT ((((((rt2.c2)LIKE('-1722424214'))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt1.c4 AS INTEGER)))) IS TRUE)  as count FROM rt2, rt1, vt38 ORDER BY x'9354');
SELECT ALL * FROM rt2, rt1, vt38 WHERE (((((rt2.c2)LIKE('-1722424214'))) BETWEEN ((~ (rt1.c2))) AND (CAST(rt1.c4 AS INTEGER)))) ORDER BY x'9354';
SELECT COUNT(*) FROM rt2, vt38, rt1 WHERE (((vt38.c0) BETWEEN (rt1.c3) AND (rt2.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt38.c0) BETWEEN (rt1.c3) AND (rt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt2, vt38, rt1);
SELECT COUNT(*) FROM rt2, vt38, rt1 WHERE (((vt38.c0) BETWEEN (rt1.c3) AND (rt2.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt38.c0) BETWEEN (rt1.c3) AND (rt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt2, vt38, rt1);
SELECT COUNT(*) FROM rt2, vt38, rt1 WHERE (((vt38.c0) BETWEEN (rt1.c3) AND (rt2.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt38, rt2 WHERE (CAST((NOT (rt2.c0)) AS TEXT)) ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) ASC, vt38.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt2.c0)) AS TEXT)) IS TRUE)  as count FROM vt38, rt2 ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) ASC, vt38.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt38, rt2 WHERE (CAST((NOT (rt2.c0)) AS TEXT)) ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) ASC, vt38.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt2.c0)) AS TEXT)) IS TRUE)  as count FROM vt38, rt2 ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) ASC, vt38.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt38, rt2 WHERE (CAST((NOT (rt2.c0)) AS TEXT)) ORDER BY CAST(CAST(rt2.c1 AS REAL) AS REAL) ASC, vt38.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt2 WHERE ((((- (rt2.c1)))*(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt2.c1)))*(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt2);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt2 WHERE ((((- (rt2.c1)))*(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt2.c1)))*(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt2);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt2 WHERE ((((- (rt2.c1)))*(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c0)OR(rt1.c3)))OR(rt0.c3))) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 END) AND (LIKELIHOOD(DISTINCT rt0.c0, 0.7651243072697684)))) ORDER BY CAST('a' AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt1.c3)))OR(rt0.c3))) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 END) AND (LIKELIHOOD(DISTINCT rt0.c0, 0.7651243072697684)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST('a' AS TEXT) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c0)OR(rt1.c3)))OR(rt0.c3))) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 END) AND (LIKELIHOOD(DISTINCT rt0.c0, 0.7651243072697684)))) ORDER BY CAST('a' AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt1.c3)))OR(rt0.c3))) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 END) AND (LIKELIHOOD(DISTINCT rt0.c0, 0.7651243072697684)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST('a' AS TEXT) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c0)OR(rt1.c3)))OR(rt0.c3))) NOT BETWEEN (CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 END) AND (LIKELIHOOD(DISTINCT rt0.c0, 0.7651243072697684)))) ORDER BY CAST('a' AS TEXT) ASC;
SELECT COUNT(*) FROM rt2, rt1, rt0, vt38 WHERE (((vt38.c0 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (CASE WHEN rt1.c4 THEN rt2.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END))) ORDER BY ((((UNLIKELY(rt1.c1))AND('1198464970')))OR(((rt1.c4)>=(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt38.c0 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (CASE WHEN rt1.c4 THEN rt2.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM rt2, rt1, rt0, vt38 ORDER BY ((((UNLIKELY(rt1.c1))AND('1198464970')))OR(((rt1.c4)>=(rt1.c3))))  NULLS LAST);
SELECT COUNT(*) FROM rt2, rt1, rt0, vt38 WHERE (((vt38.c0 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (CASE WHEN rt1.c4 THEN rt2.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END))) ORDER BY ((((UNLIKELY(rt1.c1))AND('1198464970')))OR(((rt1.c4)>=(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt38.c0 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (CASE WHEN rt1.c4 THEN rt2.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM rt2, rt1, rt0, vt38 ORDER BY ((((UNLIKELY(rt1.c1))AND('1198464970')))OR(((rt1.c4)>=(rt1.c3))))  NULLS LAST);
SELECT COUNT(*) FROM rt2, rt1, rt0, vt38 WHERE (((vt38.c0 COLLATE RTRIM) NOT BETWEEN ((rt1.c2 IN ())) AND (CASE WHEN rt1.c4 THEN rt2.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END))) ORDER BY ((((UNLIKELY(rt1.c1))AND('1198464970')))OR(((rt1.c4)>=(rt1.c3))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt38 WHERE (((CAST(vt38.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt38.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt38);
SELECT ALL COUNT(*) FROM vt38 WHERE (((CAST(vt38.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt38.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt38);
SELECT ALL COUNT(*) FROM vt38 WHERE (((CAST(vt38.c0 AS NUMERIC)) ISNULL));
SELECT * FROM vt38 WHERE ('LwzJ') ORDER BY CASE WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) ELSE ((vt38.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('LwzJ') IS TRUE)  as count FROM vt38 ORDER BY CASE WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) ELSE ((vt38.c0) NOT NULL) END  NULLS FIRST);
SELECT * FROM vt38 WHERE ('LwzJ') ORDER BY CASE WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) ELSE ((vt38.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('LwzJ') IS TRUE)  as count FROM vt38 ORDER BY CASE WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) ELSE ((vt38.c0) NOT NULL) END  NULLS FIRST);
SELECT * FROM vt38 WHERE ('LwzJ') ORDER BY CASE WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) ELSE ((vt38.c0) NOT NULL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt38, rt2 WHERE (((rt2.c1 COLLATE BINARY)IS NOT(((rt2.c1)OR(vt38.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt2.c1 COLLATE BINARY)IS NOT(((rt2.c1)OR(vt38.c0))))) IS TRUE)  as count FROM rt0, vt38, rt2);
SELECT ALL COUNT(*) FROM rt0, vt38, rt2 WHERE (((rt2.c1 COLLATE BINARY)IS NOT(((rt2.c1)OR(vt38.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt2.c1 COLLATE BINARY)IS NOT(((rt2.c1)OR(vt38.c0))))) IS TRUE)  as count FROM rt0, vt38, rt2);
SELECT ALL COUNT(*) FROM rt0, vt38, rt2 WHERE (((rt2.c1 COLLATE BINARY)IS NOT(((rt2.c1)OR(vt38.c0)))));
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (((rt0.c1)&(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)&(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt2, vt38, rt1);
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (((rt0.c1)&(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)&(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt2, vt38, rt1);
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (((rt0.c1)&(rt1.c2)) COLLATE RTRIM);
SELECT * FROM vt38 WHERE (NULL COLLATE BINARY) ORDER BY x'e119'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt38 NOT INDEXED ORDER BY x'e119'  NULLS FIRST);
SELECT * FROM vt38 WHERE (NULL COLLATE BINARY) ORDER BY x'e119'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt38 NOT INDEXED ORDER BY x'e119'  NULLS FIRST);
SELECT * FROM vt38 WHERE (NULL COLLATE BINARY) ORDER BY x'e119'  NULLS FIRST;
SELECT * FROM rt2 WHERE ((((CASE WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c0 THEN x'' WHEN rt2.c2 THEN rt2.c0 END))!=((-1.971723696E9))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c0 THEN x'' WHEN rt2.c2 THEN rt2.c0 END))!=((-1.971723696E9)))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ((((CASE WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c0 THEN x'' WHEN rt2.c2 THEN rt2.c0 END))!=((-1.971723696E9))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c0 THEN x'' WHEN rt2.c2 THEN rt2.c0 END))!=((-1.971723696E9)))) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ((((CASE WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c1 WHEN rt2.c0 THEN x'' WHEN rt2.c2 THEN rt2.c0 END))!=((-1.971723696E9))));
SELECT COUNT(*) FROM rt2 WHERE ((((((((((NOT (rt2.c0)))OR(LOWER(rt2.c0))))OR(((x'') ISNULL))))AND((NOT (rt2.c2)))))AND(((rt2.c2) IS TRUE)))) ORDER BY ((((rt2.c2)>=(rt2.c1)))/(CASE rt2.c2  WHEN rt2.c2 THEN rt2.c0 ELSE 0xffffffffb2ae1b18 END)) DESC  NULLS FIRST, ((rt2.c1)>(rt2.c1)) DESC  NULLS FIRST, ((((rt2.c1)-(rt2.c0)))/(rt2.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt2.c0)))OR(LOWER(rt2.c0))))OR(((x'') ISNULL))))AND((NOT (rt2.c2)))))AND(((rt2.c2) IS TRUE)))) IS TRUE)  as count FROM rt2 ORDER BY ((((rt2.c2)>=(rt2.c1)))/(CASE rt2.c2  WHEN rt2.c2 THEN rt2.c0 ELSE 0Xffffffffb2ae1b18 END)) DESC  NULLS FIRST, ((rt2.c1)>(rt2.c1)) DESC  NULLS FIRST, ((((rt2.c1)-(rt2.c0)))/(rt2.c2 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE ((((((((((NOT (rt2.c0)))OR(LOWER(rt2.c0))))OR(((x'') ISNULL))))AND((NOT (rt2.c2)))))AND(((rt2.c2) IS TRUE)))) ORDER BY ((((rt2.c2)>=(rt2.c1)))/(CASE rt2.c2  WHEN rt2.c2 THEN rt2.c0 ELSE 0xffffffffb2ae1b18 END)) DESC  NULLS FIRST, ((rt2.c1)>(rt2.c1)) DESC  NULLS FIRST, ((((rt2.c1)-(rt2.c0)))/(rt2.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt2.c0)))OR(LOWER(rt2.c0))))OR(((x'') ISNULL))))AND((NOT (rt2.c2)))))AND(((rt2.c2) IS TRUE)))) IS TRUE)  as count FROM rt2 ORDER BY ((((rt2.c2)>=(rt2.c1)))/(CASE rt2.c2  WHEN rt2.c2 THEN rt2.c0 ELSE 0Xffffffffb2ae1b18 END)) DESC  NULLS FIRST, ((rt2.c1)>(rt2.c1)) DESC  NULLS FIRST, ((((rt2.c1)-(rt2.c0)))/(rt2.c2 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE ((((((((((NOT (rt2.c0)))OR(LOWER(rt2.c0))))OR(((x'') ISNULL))))AND((NOT (rt2.c2)))))AND(((rt2.c2) IS TRUE)))) ORDER BY ((((rt2.c2)>=(rt2.c1)))/(CASE rt2.c2  WHEN rt2.c2 THEN rt2.c0 ELSE 0xffffffffb2ae1b18 END)) DESC  NULLS FIRST, ((rt2.c1)>(rt2.c1)) DESC  NULLS FIRST, ((((rt2.c1)-(rt2.c0)))/(rt2.c2 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM rt2 WHERE (((((rt2.c2)OR(rt2.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)OR(rt2.c0))) ISNULL)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (((((rt2.c2)OR(rt2.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)OR(rt2.c0))) ISNULL)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (((((rt2.c2)OR(rt2.c0))) ISNULL));
SELECT * FROM rt2 WHERE ((((LIKELY(rt2.c1), ((((rt2.c0)OR(rt2.c1)))AND(rt2.c1)), rt2.c2))<((((rt2.c2)&(rt2.c2)), ((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c0)), CAST(rt2.c0 AS TEXT))))) ORDER BY (((((~ (rt2.c2)))OR('595566263')))OR(((rt2.c0)*(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(rt2.c1), ((((rt2.c0)OR(rt2.c1)))AND(rt2.c1)), rt2.c2))<((((rt2.c2)&(rt2.c2)), ((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c0)), CAST(rt2.c0 AS TEXT))))) IS TRUE)  as count FROM rt2 ORDER BY (((((~ (rt2.c2)))OR('595566263')))OR(((rt2.c0)*(x''))))  NULLS FIRST);
SELECT * FROM rt2 WHERE ((((LIKELY(rt2.c1), ((((rt2.c0)OR(rt2.c1)))AND(rt2.c1)), rt2.c2))<((((rt2.c2)&(rt2.c2)), ((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c0)), CAST(rt2.c0 AS TEXT))))) ORDER BY (((((~ (rt2.c2)))OR('595566263')))OR(((rt2.c0)*(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(rt2.c1), ((((rt2.c0)OR(rt2.c1)))AND(rt2.c1)), rt2.c2))<((((rt2.c2)&(rt2.c2)), ((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c0)), CAST(rt2.c0 AS TEXT))))) IS TRUE)  as count FROM rt2 ORDER BY (((((~ (rt2.c2)))OR('595566263')))OR(((rt2.c0)*(x''))))  NULLS FIRST);
SELECT * FROM rt2 WHERE ((((LIKELY(rt2.c1), ((((rt2.c0)OR(rt2.c1)))AND(rt2.c1)), rt2.c2))<((((rt2.c2)&(rt2.c2)), ((rt2.c0) NOT BETWEEN (rt2.c2) AND (rt2.c0)), CAST(rt2.c0 AS TEXT))))) ORDER BY (((((~ (rt2.c2)))OR('595566263')))OR(((rt2.c0)*(x''))))  NULLS FIRST;
SELECT * FROM vt38, rt1 WHERE (STRFTIME(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)), (rt1.c0 IN ()), ROUND(rt1.c4, rt1.c0), ((rt1.c3) IS FALSE), CAST(vt38.c0 AS TEXT))) ORDER BY ((LOWER(DISTINCT rt1.c2)) BETWEEN (UPPER(vt38.c0)) AND (((rt1.c0)OR(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)), (rt1.c0 IN ()), ROUND(rt1.c4, rt1.c0), ((rt1.c3) IS FALSE), CAST(vt38.c0 AS TEXT))) IS TRUE)  as count FROM vt38, rt1 ORDER BY ((LOWER(DISTINCT rt1.c2)) BETWEEN (UPPER(vt38.c0)) AND (((rt1.c0)OR(rt1.c1))))  NULLS FIRST);
SELECT * FROM vt38, rt1 WHERE (STRFTIME(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)), (rt1.c0 IN ()), ROUND(rt1.c4, rt1.c0), ((rt1.c3) IS FALSE), CAST(vt38.c0 AS TEXT))) ORDER BY ((LOWER(DISTINCT rt1.c2)) BETWEEN (UPPER(vt38.c0)) AND (((rt1.c0)OR(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)), (rt1.c0 IN ()), ROUND(rt1.c4, rt1.c0), ((rt1.c3) IS FALSE), CAST(vt38.c0 AS TEXT))) IS TRUE)  as count FROM vt38, rt1 ORDER BY ((LOWER(DISTINCT rt1.c2)) BETWEEN (UPPER(vt38.c0)) AND (((rt1.c0)OR(rt1.c1))))  NULLS FIRST);
SELECT * FROM vt38, rt1 WHERE (STRFTIME(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)), (rt1.c0 IN ()), ROUND(rt1.c4, rt1.c0), ((rt1.c3) IS FALSE), CAST(vt38.c0 AS TEXT))) ORDER BY ((LOWER(DISTINCT rt1.c2)) BETWEEN (UPPER(vt38.c0)) AND (((rt1.c0)OR(rt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0, rt2 WHERE (UPPER((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE (UPPER((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, rt2);
SELECT ALL * FROM rt0, rt2 WHERE (UPPER((rt0.c0 IN ())));
SELECT COUNT(*) FROM vt38, rt0 WHERE (((((rt0.c0)<(rt0.c2))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (926387219)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c2))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (926387219))) IS TRUE)  as count FROM vt38, rt0);
SELECT COUNT(*) FROM vt38, rt0 WHERE (((((rt0.c0)<(rt0.c2))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (926387219)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<(rt0.c2))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (926387219))) IS TRUE)  as count FROM vt38, rt0);
SELECT COUNT(*) FROM vt38, rt0 WHERE (((((rt0.c0)<(rt0.c2))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND (926387219)));
SELECT COUNT(*) FROM vt38, rt1, rt2, rt0 WHERE (((CASE rt2.c2  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) IS TRUE)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) IS TRUE)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt38, rt1, rt2, rt0);
SELECT COUNT(*) FROM vt38, rt1, rt2, rt0 WHERE (((CASE rt2.c2  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) IS TRUE)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) IS TRUE)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt38, rt1, rt2, rt0);
SELECT COUNT(*) FROM vt38, rt1, rt2, rt0 WHERE (((CASE rt2.c2  WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (((rt0.c2) IS TRUE)) AND ((rt0.c0 IN ()))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt2 ON UNLIKELY(((((rt0.c1)AND(rt0.c2)))AND(rt2.c1))) FULL OUTER JOIN rt0 ON (((rt2.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt2.c2 COLLATE RTRIM, ((rt2.c0) IS FALSE), (((rt2.c0)) BETWEEN ((rt2.c2)) AND ((vt38.c0))))) AND (((((rt0.c0, rt0.c2, vt38.c0))==((rt1.c3, rt1.c0, rt0.c0))), rt0.c3, ((rt2.c2) IS TRUE)))) RIGHT OUTER JOIN vt38 ON '' WHERE (vt38.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt38.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON UNLIKELY(((((rt0.c1)AND(rt0.c2)))AND(rt2.c1))) FULL OUTER JOIN rt0 ON (((rt2.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt2.c2 COLLATE RTRIM, ((rt2.c0) IS FALSE), (((rt2.c0)) BETWEEN ((rt2.c2)) AND ((vt38.c0))))) AND (((((rt0.c0, rt0.c2, vt38.c0))==((rt1.c3, rt1.c0, rt0.c0))), rt0.c3, ((rt2.c2) IS TRUE)))) RIGHT OUTER JOIN vt38 ON '');
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt2 ON UNLIKELY(((((rt0.c1)AND(rt0.c2)))AND(rt2.c1))) FULL OUTER JOIN rt0 ON (((rt2.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt2.c2 COLLATE RTRIM, ((rt2.c0) IS FALSE), (((rt2.c0)) BETWEEN ((rt2.c2)) AND ((vt38.c0))))) AND (((((rt0.c0, rt0.c2, vt38.c0))==((rt1.c3, rt1.c0, rt0.c0))), rt0.c3, ((rt2.c2) IS TRUE)))) RIGHT OUTER JOIN vt38 ON '' WHERE (vt38.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt38.c0) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON UNLIKELY(((((rt0.c1)AND(rt0.c2)))AND(rt2.c1))) FULL OUTER JOIN rt0 ON (((rt2.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt2.c2 COLLATE RTRIM, ((rt2.c0) IS FALSE), (((rt2.c0)) BETWEEN ((rt2.c2)) AND ((vt38.c0))))) AND (((((rt0.c0, rt0.c2, vt38.c0))==((rt1.c3, rt1.c0, rt0.c0))), rt0.c3, ((rt2.c2) IS TRUE)))) RIGHT OUTER JOIN vt38 ON '');
SELECT ALL COUNT(*) FROM rt0, rt1, vt38 CROSS JOIN rt2 ON ((+ (0xffffffffa98e51f0)) IN ()) WHERE (CASE WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt2.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt2.c0)) WHEN (((rt0.c0)) BETWEEN ((-1.94745162E9)) AND ((rt1.c4))) THEN ((((rt0.c1)OR(0.05221333341172607)))AND(rt0.c1)) WHEN CHAR(vt38.c0, rt0.c3, rt0.c3) THEN ((('^d')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) END) ORDER BY (NOT (((rt2.c2)&(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt2.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt2.c0)) WHEN (((rt0.c0)) BETWEEN ((-1.94745162E9)) AND ((rt1.c4))) THEN ((((rt0.c1)OR(0.05221333341172607)))AND(rt0.c1)) WHEN CHAR(vt38.c0, rt0.c3, rt0.c3) THEN ((('^d')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0, rt1, vt38 CROSS JOIN rt2 ON ((+ (0Xffffffffa98e51f0)) IN ()) ORDER BY (NOT (((rt2.c2)&(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt38 CROSS JOIN rt2 ON ((+ (0xffffffffa98e51f0)) IN ()) WHERE (CASE WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt2.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt2.c0)) WHEN (((rt0.c0)) BETWEEN ((-1.94745162E9)) AND ((rt1.c4))) THEN ((((rt0.c1)OR(0.05221333341172607)))AND(rt0.c1)) WHEN CHAR(vt38.c0, rt0.c3, rt0.c3) THEN ((('^d')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) END) ORDER BY (NOT (((rt2.c2)&(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt2.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt2.c0)) WHEN (((rt0.c0)) BETWEEN ((-1.94745162E9)) AND ((rt1.c4))) THEN ((((rt0.c1)OR(0.05221333341172607)))AND(rt0.c1)) WHEN CHAR(vt38.c0, rt0.c3, rt0.c3) THEN ((('^d')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0, rt1, vt38 CROSS JOIN rt2 ON ((+ (0Xffffffffa98e51f0)) IN ()) ORDER BY (NOT (((rt2.c2)&(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt38 CROSS JOIN rt2 ON ((+ (0xffffffffa98e51f0)) IN ()) WHERE (CASE WHEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt2.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt2.c0)) WHEN (((rt0.c0)) BETWEEN ((-1.94745162E9)) AND ((rt1.c4))) THEN ((((rt0.c1)OR(0.05221333341172607)))AND(rt0.c1)) WHEN CHAR(vt38.c0, rt0.c3, rt0.c3) THEN ((('^d')) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) END) ORDER BY (NOT (((rt2.c2)&(rt0.c1))))  NULLS LAST;
SELECT * FROM rt1, rt0, vt38 RIGHT OUTER JOIN rt2 ON (((((rt1.c4)||(rt2.c1)), rt0.c0, ((x'') BETWEEN (rt1.c4) AND (rt2.c2))))==((((0.992747064020896)+(rt2.c2)), ((rt0.c0)%(rt2.c1)), (rt1.c3 IN ())))) WHERE ((- (((rt0.c3)IS(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)IS(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, vt38 RIGHT OUTER JOIN rt2 ON (((((rt1.c4)||(rt2.c1)), rt0.c0, ((x'') BETWEEN (rt1.c4) AND (rt2.c2))))==((((0.992747064020896)+(rt2.c2)), ((rt0.c0)%(rt2.c1)), (rt1.c3 IN ())))));
SELECT * FROM rt1, rt0, vt38 RIGHT OUTER JOIN rt2 ON (((((rt1.c4)||(rt2.c1)), rt0.c0, ((x'') BETWEEN (rt1.c4) AND (rt2.c2))))==((((0.992747064020896)+(rt2.c2)), ((rt0.c0)%(rt2.c1)), (rt1.c3 IN ())))) WHERE ((- (((rt0.c3)IS(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)IS(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, vt38 RIGHT OUTER JOIN rt2 ON (((((rt1.c4)||(rt2.c1)), rt0.c0, ((x'') BETWEEN (rt1.c4) AND (rt2.c2))))==((((0.992747064020896)+(rt2.c2)), ((rt0.c0)%(rt2.c1)), (rt1.c3 IN ())))));
SELECT * FROM rt1, rt0, vt38 RIGHT OUTER JOIN rt2 ON (((((rt1.c4)||(rt2.c1)), rt0.c0, ((x'') BETWEEN (rt1.c4) AND (rt2.c2))))==((((0.992747064020896)+(rt2.c2)), ((rt0.c0)%(rt2.c1)), (rt1.c3 IN ())))) WHERE ((- (((rt0.c3)IS(rt1.c3)))));
SELECT COUNT(*) FROM vt38 WHERE (((CASE WHEN vt38.c0 THEN vt38.c0 END) NOTNULL)) ORDER BY (((((((vt38.c0))<((vt38.c0))))OR(((vt38.c0) ISNULL))))AND(LIKELY(DISTINCT vt38.c0))) ASC  NULLS LAST, ((((((vt38.c0)||(vt38.c0)))AND(((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))))AND(vt38.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt38.c0 THEN vt38.c0 END) NOTNULL)) IS TRUE)  as count FROM vt38 ORDER BY (((((((vt38.c0))<((vt38.c0))))OR(((vt38.c0) ISNULL))))AND(LIKELY(DISTINCT vt38.c0))) ASC  NULLS LAST, ((((((vt38.c0)||(vt38.c0)))AND(((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))))AND(vt38.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt38 WHERE (((CASE WHEN vt38.c0 THEN vt38.c0 END) NOTNULL)) ORDER BY (((((((vt38.c0))<((vt38.c0))))OR(((vt38.c0) ISNULL))))AND(LIKELY(DISTINCT vt38.c0))) ASC  NULLS LAST, ((((((vt38.c0)||(vt38.c0)))AND(((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))))AND(vt38.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt38.c0 THEN vt38.c0 END) NOTNULL)) IS TRUE)  as count FROM vt38 ORDER BY (((((((vt38.c0))<((vt38.c0))))OR(((vt38.c0) ISNULL))))AND(LIKELY(DISTINCT vt38.c0))) ASC  NULLS LAST, ((((((vt38.c0)||(vt38.c0)))AND(((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))))AND(vt38.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt38 WHERE (((CASE WHEN vt38.c0 THEN vt38.c0 END) NOTNULL)) ORDER BY (((((((vt38.c0))<((vt38.c0))))OR(((vt38.c0) ISNULL))))AND(LIKELY(DISTINCT vt38.c0))) ASC  NULLS LAST, ((((((vt38.c0)||(vt38.c0)))AND(((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))))AND(vt38.c0 COLLATE BINARY));
SELECT COUNT(*) FROM rt1 WHERE (CAST(UPPER(rt1.c4) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt1.c4) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(UPPER(rt1.c4) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt1.c4) AS REAL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(UPPER(rt1.c4) AS REAL));
SELECT COUNT(*) FROM rt1 WHERE (-451060187) ORDER BY ((((rt1.c4)AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c3)+(rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-451060187) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c3)+(rt1.c3)))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (-451060187) ORDER BY ((((rt1.c4)AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c3)+(rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((-451060187) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c3)+(rt1.c3)))) ASC);
SELECT COUNT(*) FROM rt1 WHERE (-451060187) ORDER BY ((((rt1.c4)AND(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c3)+(rt1.c3)))) ASC;
SELECT * FROM rt0 INNER JOIN rt2 ON (((((~ (rt0.c3)))OR(((((rt2.c2)AND(rt1.c0)))AND(rt0.c3)))))AND(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)) RIGHT OUTER JOIN rt1 ON CAST(((rt1.c1) NOT BETWEEN (rt1.c3) AND ('1195488527')) AS INTEGER) WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON (((((~ (rt0.c3)))OR(((((rt2.c2)AND(rt1.c0)))AND(rt0.c3)))))AND(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)) RIGHT OUTER JOIN rt1 ON CAST(((rt1.c1) NOT BETWEEN (rt1.c3) AND ('1195488527')) AS INTEGER));
SELECT * FROM rt0 INNER JOIN rt2 ON (((((~ (rt0.c3)))OR(((((rt2.c2)AND(rt1.c0)))AND(rt0.c3)))))AND(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)) RIGHT OUTER JOIN rt1 ON CAST(((rt1.c1) NOT BETWEEN (rt1.c3) AND ('1195488527')) AS INTEGER) WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN rt2 ON (((((~ (rt0.c3)))OR(((((rt2.c2)AND(rt1.c0)))AND(rt0.c3)))))AND(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)) RIGHT OUTER JOIN rt1 ON CAST(((rt1.c1) NOT BETWEEN (rt1.c3) AND ('1195488527')) AS INTEGER));
SELECT ALL * FROM rt0, rt1, rt2 WHERE ('.F펅');
SELECT SUM(count) FROM (SELECT (('.F펅') IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL * FROM rt0, rt1, rt2 WHERE ('.F펅');
SELECT SUM(count) FROM (SELECT (('.F펅') IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT ALL * FROM rt0, rt1, rt2 WHERE ('.F펅');
SELECT * FROM vt38, rt1, rt0, rt2 WHERE ((~ (LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt38, rt1, rt0, rt2);
SELECT * FROM vt38, rt1, rt0, rt2 WHERE ((~ (LOWER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (LOWER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt38, rt1, rt0, rt2);
SELECT * FROM vt38, rt1, rt0, rt2 WHERE ((~ (LOWER(DISTINCT rt0.c2))));
SELECT * FROM rt1, rt0, vt38 LEFT OUTER JOIN rt2 ON CASE NULL  WHEN CASE rt0.c2  WHEN rt2.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END THEN rt1.c4 ELSE (0.7518092653630564 IN ()) END WHERE (((((CASE rt2.c2  WHEN vt38.c0 THEN rt0.c2 ELSE rt0.c3 END)OR((((rt0.c3, rt0.c1, vt38.c0)) BETWEEN ((rt1.c1, rt2.c2, rt2.c2)) AND ((NULL, vt38.c0, rt1.c2))))))OR((((rt2.c2)) BETWEEN ((3.15352912E8)) AND ((rt2.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt2.c2  WHEN vt38.c0 THEN rt0.c2 ELSE rt0.c3 END)OR((((rt0.c3, rt0.c1, vt38.c0)) BETWEEN ((rt1.c1, rt2.c2, rt2.c2)) AND ((NULL, vt38.c0, rt1.c2))))))OR((((rt2.c2)) BETWEEN ((3.15352912E8)) AND ((rt2.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt38 LEFT OUTER JOIN rt2 ON CASE NULL  WHEN CASE rt0.c2  WHEN rt2.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END THEN rt1.c4 ELSE (0.7518092653630564 IN ()) END);
SELECT * FROM rt1, rt0, vt38 LEFT OUTER JOIN rt2 ON CASE NULL  WHEN CASE rt0.c2  WHEN rt2.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END THEN rt1.c4 ELSE (0.7518092653630564 IN ()) END WHERE (((((CASE rt2.c2  WHEN vt38.c0 THEN rt0.c2 ELSE rt0.c3 END)OR((((rt0.c3, rt0.c1, vt38.c0)) BETWEEN ((rt1.c1, rt2.c2, rt2.c2)) AND ((NULL, vt38.c0, rt1.c2))))))OR((((rt2.c2)) BETWEEN ((3.15352912E8)) AND ((rt2.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt2.c2  WHEN vt38.c0 THEN rt0.c2 ELSE rt0.c3 END)OR((((rt0.c3, rt0.c1, vt38.c0)) BETWEEN ((rt1.c1, rt2.c2, rt2.c2)) AND ((NULL, vt38.c0, rt1.c2))))))OR((((rt2.c2)) BETWEEN ((3.15352912E8)) AND ((rt2.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt38 LEFT OUTER JOIN rt2 ON CASE NULL  WHEN CASE rt0.c2  WHEN rt2.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END THEN rt1.c4 ELSE (0.7518092653630564 IN ()) END);
SELECT * FROM rt1, rt0, vt38 LEFT OUTER JOIN rt2 ON CASE NULL  WHEN CASE rt0.c2  WHEN rt2.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END THEN rt1.c4 ELSE (0.7518092653630564 IN ()) END WHERE (((((CASE rt2.c2  WHEN vt38.c0 THEN rt0.c2 ELSE rt0.c3 END)OR((((rt0.c3, rt0.c1, vt38.c0)) BETWEEN ((rt1.c1, rt2.c2, rt2.c2)) AND ((NULL, vt38.c0, rt1.c2))))))OR((((rt2.c2)) BETWEEN ((3.15352912E8)) AND ((rt2.c2))))));
SELECT ALL * FROM rt0, rt2, rt1 WHERE (CAST((NOT ('ta')) AS BLOB)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT ('ta')) AS BLOB)) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0, rt2, rt1 WHERE (CAST((NOT ('ta')) AS BLOB)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT ('ta')) AS BLOB)) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0, rt2, rt1 WHERE (CAST((NOT ('ta')) AS BLOB)) ORDER BY NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2 WHERE (rt2.c1) ORDER BY 7.47953311E8  NULLS FIRST, (rt2.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt2.c1) IS TRUE)  as count FROM rt2 ORDER BY 7.47953311E8  NULLS FIRST, (rt2.c1 IN ()) ASC);
SELECT ALL COUNT(*) FROM rt2 WHERE (rt2.c1) ORDER BY 7.47953311E8  NULLS FIRST, (rt2.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt2.c1) IS TRUE)  as count FROM rt2 ORDER BY 7.47953311E8  NULLS FIRST, (rt2.c1 IN ()) ASC);
SELECT ALL COUNT(*) FROM rt2 WHERE (rt2.c1) ORDER BY 7.47953311E8  NULLS FIRST, (rt2.c1 IN ()) ASC;
SELECT ALL * FROM vt38 RIGHT OUTER JOIN rt0 ON 0.36724707793025413 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt1.c1)OR(rt1.c2)))AND(rt0.c2)) END WHERE (COALESCE(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c4)), (rt1.c0 IN ()), (('-2068651601')LIKE(rt1.c3)), ((rt1.c1)GLOB(rt1.c1)))) ORDER BY vt38.c0 DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c4)), (rt1.c0 IN ()), (('-2068651601')LIKE(rt1.c3)), ((rt1.c1)GLOB(rt1.c1)))) IS TRUE)  as count FROM vt38 RIGHT OUTER JOIN rt0 ON 0.36724707793025413 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt1.c1)OR(rt1.c2)))AND(rt0.c2)) END ORDER BY vt38.c0 DESC);
SELECT ALL * FROM vt38 RIGHT OUTER JOIN rt0 ON 0.36724707793025413 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt1.c1)OR(rt1.c2)))AND(rt0.c2)) END WHERE (COALESCE(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c4)), (rt1.c0 IN ()), (('-2068651601')LIKE(rt1.c3)), ((rt1.c1)GLOB(rt1.c1)))) ORDER BY vt38.c0 DESC;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c4)), (rt1.c0 IN ()), (('-2068651601')LIKE(rt1.c3)), ((rt1.c1)GLOB(rt1.c1)))) IS TRUE)  as count FROM vt38 RIGHT OUTER JOIN rt0 ON 0.36724707793025413 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt1.c1)OR(rt1.c2)))AND(rt0.c2)) END ORDER BY vt38.c0 DESC);
SELECT ALL * FROM vt38 RIGHT OUTER JOIN rt0 ON 0.36724707793025413 RIGHT OUTER JOIN rt1 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((((rt1.c1)OR(rt1.c2)))AND(rt0.c2)) END WHERE (COALESCE(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c4)), (rt1.c0 IN ()), (('-2068651601')LIKE(rt1.c3)), ((rt1.c1)GLOB(rt1.c1)))) ORDER BY vt38.c0 DESC;
SELECT ALL COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE ((((vt38.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt1.c2))) COLLATE NOCASE) ORDER BY ((((rt0.c3)OR(rt1.c3)))OR(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt38.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt0, rt1, rt2 ORDER BY ((((rt0.c3)OR(rt1.c3)))OR(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE ((((vt38.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt1.c2))) COLLATE NOCASE) ORDER BY ((((rt0.c3)OR(rt1.c3)))OR(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((vt38.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt0, rt1, rt2 ORDER BY ((((rt0.c3)OR(rt1.c3)))OR(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE ((((vt38.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt1.c2))) COLLATE NOCASE) ORDER BY ((((rt0.c3)OR(rt1.c3)))OR(rt0.c1)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL)) ORDER BY LIKELIHOOD(ABS(DISTINCT rt0.c0), 0.23592531481069812)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(ABS(DISTINCT rt0.c0), 0.23592531481069812)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL)) ORDER BY LIKELIHOOD(ABS(DISTINCT rt0.c0), 0.23592531481069812)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(ABS(DISTINCT rt0.c0), 0.23592531481069812)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT NULL)) ORDER BY LIKELIHOOD(ABS(DISTINCT rt0.c0), 0.23592531481069812)  NULLS LAST;
SELECT COUNT(*) FROM rt2, vt38, rt1 WHERE (((((rt1.c2)%(rt2.c1))) IS FALSE)) ORDER BY LIKELIHOOD(CAST(rt1.c0 AS TEXT), 0.7364065832079927) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)%(rt2.c1))) IS FALSE)) IS TRUE)  as count FROM rt2, vt38, rt1 ORDER BY LIKELIHOOD(CAST(rt1.c0 AS TEXT), 0.7364065832079927) DESC);
SELECT COUNT(*) FROM rt2, vt38, rt1 WHERE (((((rt1.c2)%(rt2.c1))) IS FALSE)) ORDER BY LIKELIHOOD(CAST(rt1.c0 AS TEXT), 0.7364065832079927) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)%(rt2.c1))) IS FALSE)) IS TRUE)  as count FROM rt2, vt38, rt1 ORDER BY LIKELIHOOD(CAST(rt1.c0 AS TEXT), 0.7364065832079927) DESC);
SELECT COUNT(*) FROM rt2, vt38, rt1 WHERE (((((rt1.c2)%(rt2.c1))) IS FALSE)) ORDER BY LIKELIHOOD(CAST(rt1.c0 AS TEXT), 0.7364065832079927) DESC;
SELECT * FROM vt38 WHERE (CASE WHEN (+ (vt38.c0)) THEN (vt38.c0 IN (vt38.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt38.c0)) THEN (vt38.c0 IN (vt38.c0)) END) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (CASE WHEN (+ (vt38.c0)) THEN (vt38.c0 IN (vt38.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt38.c0)) THEN (vt38.c0 IN (vt38.c0)) END) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (CASE WHEN (+ (vt38.c0)) THEN (vt38.c0 IN (vt38.c0)) END);
SELECT ALL * FROM rt1 NOT INDEXED, vt38 FULL OUTER JOIN rt2 ON ((NULL COLLATE BINARY) BETWEEN ((rt0.c1 IN (rt1.c0))) AND (rt1.c2 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON ((((rt1.c3)OR(rt1.c2)))OR(rt0.c1)) COLLATE NOCASE WHERE (CAST('1342170113' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('1342170113' AS NUMERIC)) IS TRUE)  as count FROM rt1, vt38 FULL OUTER JOIN rt2 ON ((NULL COLLATE BINARY) BETWEEN ((rt0.c1 IN (rt1.c0))) AND (rt1.c2 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON ((((rt1.c3)OR(rt1.c2)))OR(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt1 NOT INDEXED, vt38 FULL OUTER JOIN rt2 ON ((NULL COLLATE BINARY) BETWEEN ((rt0.c1 IN (rt1.c0))) AND (rt1.c2 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON ((((rt1.c3)OR(rt1.c2)))OR(rt0.c1)) COLLATE NOCASE WHERE (CAST('1342170113' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('1342170113' AS NUMERIC)) IS TRUE)  as count FROM rt1, vt38 FULL OUTER JOIN rt2 ON ((NULL COLLATE BINARY) BETWEEN ((rt0.c1 IN (rt1.c0))) AND (rt1.c2 COLLATE BINARY)) LEFT OUTER JOIN rt0 ON ((((rt1.c3)OR(rt1.c2)))OR(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt38 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (vt38.c0) AND (rt0.c0))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (vt38.c0) AND (rt0.c0))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL * FROM rt0, vt38 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (vt38.c0) AND (rt0.c0))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (vt38.c0) AND (rt0.c0))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL * FROM rt0, vt38 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOT BETWEEN (vt38.c0) AND (rt0.c0))) AND (rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c2)))OR(-903830595)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c2)))OR(-903830595)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c2)))OR(-903830595)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c2)))OR(-903830595)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c2)))OR(-903830595)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt2, vt38, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT COUNT(*) FROM rt2, vt38, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT COUNT(*) FROM rt2, vt38, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN vt38 ON TYPEOF((- (rt1.c0))) FULL OUTER JOIN rt1 ON 0.8589360935255392 COLLATE BINARY WHERE (CASE (((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4)))  WHEN x'' THEN ((rt1.c2)+(rt2.c0)) ELSE (rt1.c4 IN (rt2.c2, vt38.c0)) END) ORDER BY rt2.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4)))  WHEN x'' THEN ((rt1.c2)+(rt2.c0)) ELSE (rt1.c4 IN (rt2.c2, vt38.c0)) END) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN vt38 ON TYPEOF((- (rt1.c0))) FULL OUTER JOIN rt1 ON 0.8589360935255392 COLLATE BINARY ORDER BY rt2.c2);
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN vt38 ON TYPEOF((- (rt1.c0))) FULL OUTER JOIN rt1 ON 0.8589360935255392 COLLATE BINARY WHERE (CASE (((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4)))  WHEN x'' THEN ((rt1.c2)+(rt2.c0)) ELSE (rt1.c4 IN (rt2.c2, vt38.c0)) END) ORDER BY rt2.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4)))  WHEN x'' THEN ((rt1.c2)+(rt2.c0)) ELSE (rt1.c4 IN (rt2.c2, vt38.c0)) END) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN vt38 ON TYPEOF((- (rt1.c0))) FULL OUTER JOIN rt1 ON 0.8589360935255392 COLLATE BINARY ORDER BY rt2.c2);
SELECT ALL COUNT(*) FROM rt2, vt38 WHERE (HEX(DISTINCT (NOT (rt2.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (NOT (rt2.c0)))) IS TRUE)  as count FROM rt2, vt38);
SELECT ALL COUNT(*) FROM rt2, vt38 WHERE (HEX(DISTINCT (NOT (rt2.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (NOT (rt2.c0)))) IS TRUE)  as count FROM rt2, vt38);
SELECT ALL COUNT(*) FROM rt2, vt38 WHERE (HEX(DISTINCT (NOT (rt2.c0))));
SELECT ALL COUNT(*) FROM rt2, rt1, rt0, vt38 WHERE (((LENGTH(vt38.c0))%(((((rt0.c1)AND(rt0.c3)))OR(0Xffffffff8c87f331))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt2.c2))) BETWEEN (LIKE(rt0.c0, rt0.c0)) AND (TRIM(rt0.c0, NULL))), TOTAL_CHANGES() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LENGTH(vt38.c0))%(((((rt0.c1)AND(rt0.c3)))OR(0xffffffff8c87f331))))) IS TRUE)  as count FROM rt2, rt1, rt0, vt38 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt2.c2))) BETWEEN (LIKE(rt0.c0, rt0.c0)) AND (TRIM(rt0.c0, NULL))), TOTAL_CHANGES() DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0, vt38 WHERE (((LENGTH(vt38.c0))%(((((rt0.c1)AND(rt0.c3)))OR(0Xffffffff8c87f331))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt2.c2))) BETWEEN (LIKE(rt0.c0, rt0.c0)) AND (TRIM(rt0.c0, NULL))), TOTAL_CHANGES() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LENGTH(vt38.c0))%(((((rt0.c1)AND(rt0.c3)))OR(0xffffffff8c87f331))))) IS TRUE)  as count FROM rt2, rt1, rt0, vt38 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt2.c2))) BETWEEN (LIKE(rt0.c0, rt0.c0)) AND (TRIM(rt0.c0, NULL))), TOTAL_CHANGES() DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0, vt38 WHERE (((LENGTH(vt38.c0))%(((((rt0.c1)AND(rt0.c3)))OR(0Xffffffff8c87f331))))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt2.c2))) BETWEEN (LIKE(rt0.c0, rt0.c0)) AND (TRIM(rt0.c0, NULL))), TOTAL_CHANGES() DESC  NULLS LAST;
SELECT * FROM rt2 WHERE (rt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c0);
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt2 ON ((TYPEOF(DISTINCT rt2.c0))LIKE(((rt2.c1)!=(rt2.c0)))) WHERE (vt38.c0) ORDER BY CAST(vt38.c0 AS REAL) DESC, ((rt2.c1)<((rt2.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt38.c0) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt2 ON ((TYPEOF(DISTINCT rt2.c0))LIKE(((rt2.c1)<>(rt2.c0)))) ORDER BY CAST(vt38.c0 AS REAL) DESC, ((rt2.c1)<((rt2.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt2 ON ((TYPEOF(DISTINCT rt2.c0))LIKE(((rt2.c1)!=(rt2.c0)))) WHERE (vt38.c0) ORDER BY CAST(vt38.c0 AS REAL) DESC, ((rt2.c1)<((rt2.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt38.c0) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt2 ON ((TYPEOF(DISTINCT rt2.c0))LIKE(((rt2.c1)<>(rt2.c0)))) ORDER BY CAST(vt38.c0 AS REAL) DESC, ((rt2.c1)<((rt2.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt2 ON ((TYPEOF(DISTINCT rt2.c0))LIKE(((rt2.c1)!=(rt2.c0)))) WHERE (vt38.c0) ORDER BY CAST(vt38.c0 AS REAL) DESC, ((rt2.c1)<((rt2.c1 IN ())));
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)) THEN DATETIME(rt1.c1, rt0.c0, rt1.c2) WHEN ((x'')+(rt1.c4)) THEN ((rt0.c3)/(rt1.c3)) WHEN rt1.c4 THEN ((rt1.c3)/(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)) THEN DATETIME(rt1.c1, rt0.c0, rt1.c2) WHEN ((x'')+(rt1.c4)) THEN ((rt0.c3)/(rt1.c3)) WHEN rt1.c4 THEN ((rt1.c3)/(rt1.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)) THEN DATETIME(rt1.c1, rt0.c0, rt1.c2) WHEN ((x'')+(rt1.c4)) THEN ((rt0.c3)/(rt1.c3)) WHEN rt1.c4 THEN ((rt1.c3)/(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)) THEN DATETIME(rt1.c1, rt0.c0, rt1.c2) WHEN ((x'')+(rt1.c4)) THEN ((rt0.c3)/(rt1.c3)) WHEN rt1.c4 THEN ((rt1.c3)/(rt1.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1)) THEN DATETIME(rt1.c1, rt0.c0, rt1.c2) WHEN ((x'')+(rt1.c4)) THEN ((rt0.c3)/(rt1.c3)) WHEN rt1.c4 THEN ((rt1.c3)/(rt1.c0)) END);
SELECT ALL * FROM rt2 WHERE ('747953311') ORDER BY (- (((-1.301897602E9) NOT BETWEEN (rt2.c2) AND (rt2.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('747953311') IS TRUE)  as count FROM rt2 ORDER BY (- (((-1.301897602E9) NOT BETWEEN (rt2.c2) AND (rt2.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM rt2 WHERE ('747953311') ORDER BY (- (((-1.301897602E9) NOT BETWEEN (rt2.c2) AND (rt2.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('747953311') IS TRUE)  as count FROM rt2 ORDER BY (- (((-1.301897602E9) NOT BETWEEN (rt2.c2) AND (rt2.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM rt2 WHERE ('747953311') ORDER BY (- (((-1.301897602E9) NOT BETWEEN (rt2.c2) AND (rt2.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((((rt2.c0) IS TRUE) IN ())) ORDER BY CAST(HEX(x'') AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((rt2.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY CAST(HEX(x'') AS INTEGER) ASC);
SELECT COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((((rt2.c0) IS TRUE) IN ())) ORDER BY CAST(HEX(x'') AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT (((((rt2.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY CAST(HEX(x'') AS INTEGER) ASC);
SELECT COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((((rt2.c0) IS TRUE) IN ())) ORDER BY CAST(HEX(x'') AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt38 ON (((rt1.c1) IS FALSE) IN ()) INNER JOIN rt2 ON CAST((((((((('')AND(rt2.c0)))OR(vt38.c0)))AND(NULL)))OR(rt1.c4)) AS REAL) WHERE (rt1.c2) ORDER BY CAST((((rt2.c0, rt1.c3, rt1.c2))>((rt1.c4, vt38.c0, '-536389958'))) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt38 ON (((rt1.c1) IS FALSE) IN ()) INNER JOIN rt2 ON CAST((((((((('')AND(rt2.c0)))OR(vt38.c0)))AND(NULL)))OR(rt1.c4)) AS REAL) ORDER BY CAST((((rt2.c0, rt1.c3, rt1.c2))>((rt1.c4, vt38.c0, '-536389958'))) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt38 ON (((rt1.c1) IS FALSE) IN ()) INNER JOIN rt2 ON CAST((((((((('')AND(rt2.c0)))OR(vt38.c0)))AND(NULL)))OR(rt1.c4)) AS REAL) WHERE (rt1.c2) ORDER BY CAST((((rt2.c0, rt1.c3, rt1.c2))>((rt1.c4, vt38.c0, '-536389958'))) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt38 ON (((rt1.c1) IS FALSE) IN ()) INNER JOIN rt2 ON CAST((((((((('')AND(rt2.c0)))OR(vt38.c0)))AND(NULL)))OR(rt1.c4)) AS REAL) ORDER BY CAST((((rt2.c0, rt1.c3, rt1.c2))>((rt1.c4, vt38.c0, '-536389958'))) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt38 ON (((rt1.c1) IS FALSE) IN ()) INNER JOIN rt2 ON CAST((((((((('')AND(rt2.c0)))OR(vt38.c0)))AND(NULL)))OR(rt1.c4)) AS REAL) WHERE (rt1.c2) ORDER BY CAST((((rt2.c0, rt1.c3, rt1.c2))>((rt1.c4, vt38.c0, '-536389958'))) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON (((((rt1.c4) BETWEEN (rt0.c3) AND (rt0.c3))))>=((rt2.c2 COLLATE NOCASE))) WHERE ((((NOT (rt2.c0)))&(((-1555556838)-(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt2.c0)))&(((-1555556838)-(rt0.c3))))) IS TRUE)  as count FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON (((((rt1.c4) BETWEEN (rt0.c3) AND (rt0.c3))))>=((rt2.c2 COLLATE NOCASE))));
SELECT * FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON (((((rt1.c4) BETWEEN (rt0.c3) AND (rt0.c3))))>=((rt2.c2 COLLATE NOCASE))) WHERE ((((NOT (rt2.c0)))&(((-1555556838)-(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt2.c0)))&(((-1555556838)-(rt0.c3))))) IS TRUE)  as count FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON (((((rt1.c4) BETWEEN (rt0.c3) AND (rt0.c3))))>=((rt2.c2 COLLATE NOCASE))));
SELECT * FROM rt0, rt2 RIGHT OUTER JOIN rt1 ON (((((rt1.c4) BETWEEN (rt0.c3) AND (rt0.c3))))>=((rt2.c2 COLLATE NOCASE))) WHERE ((((NOT (rt2.c0)))&(((-1555556838)-(rt0.c3)))));
SELECT * FROM rt2, rt1 NOT INDEXED, rt0, vt38 WHERE ((CAST(rt2.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt2.c2 AS REAL) IN ())) IS TRUE)  as count FROM rt2, rt1, rt0, vt38);
SELECT * FROM rt2, rt1 NOT INDEXED, rt0, vt38 WHERE ((CAST(rt2.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt2.c2 AS REAL) IN ())) IS TRUE)  as count FROM rt2, rt1, rt0, vt38);
SELECT * FROM rt2, rt1 NOT INDEXED, rt0, vt38 WHERE ((CAST(rt2.c2 AS REAL) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (LOWER(TRIM(DISTINCT rt1.c1, rt1.c1)));
SELECT SUM(count) FROM (SELECT ((LOWER(TRIM(DISTINCT rt1.c1, rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LOWER(TRIM(DISTINCT rt1.c1, rt1.c1)));
SELECT SUM(count) FROM (SELECT ((LOWER(TRIM(DISTINCT rt1.c1, rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (LOWER(TRIM(DISTINCT rt1.c1, rt1.c1)));
SELECT ALL COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE (((((((0Xffffffff9b69c47b)OR(rt0.c3)))AND(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((0Xffffffff9b69c47b)OR(rt0.c3)))AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt38, rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE (((((((0Xffffffff9b69c47b)OR(rt0.c3)))AND(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((0Xffffffff9b69c47b)OR(rt0.c3)))AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt38, rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE (((((((0Xffffffff9b69c47b)OR(rt0.c3)))AND(rt0.c2))) IS TRUE));
SELECT * FROM vt38, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt38, rt0);
SELECT * FROM vt38, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt38, rt0);
SELECT * FROM vt38, rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt2, rt1, vt38 WHERE ((((rt2.c1))>((rt1.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt2.c1))>((rt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, vt38);
SELECT COUNT(*) FROM rt2, rt1, vt38 WHERE ((((rt2.c1))>((rt1.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt2.c1))>((rt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, vt38);
SELECT COUNT(*) FROM rt2, rt1, vt38 WHERE ((((rt2.c1))>((rt1.c1))) COLLATE RTRIM);
SELECT ALL * FROM rt2, vt38, rt1, rt0 WHERE (CASE (vt38.c0 IN ())  WHEN ((0.30782653865602505) BETWEEN (rt1.c1) AND (rt2.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE (vt38.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt38.c0 IN ())  WHEN ((0.30782653865602505) BETWEEN (rt1.c1) AND (rt2.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE (vt38.c0 IN ()) END) IS TRUE)  as count FROM rt2, vt38, rt1, rt0);
SELECT ALL * FROM rt2, vt38, rt1, rt0 WHERE (CASE (vt38.c0 IN ())  WHEN ((0.30782653865602505) BETWEEN (rt1.c1) AND (rt2.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE (vt38.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt38.c0 IN ())  WHEN ((0.30782653865602505) BETWEEN (rt1.c1) AND (rt2.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE (vt38.c0 IN ()) END) IS TRUE)  as count FROM rt2, vt38, rt1, rt0);
SELECT ALL * FROM rt2, vt38, rt1, rt0 WHERE (CASE (vt38.c0 IN ())  WHEN ((0.30782653865602505) BETWEEN (rt1.c1) AND (rt2.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) ELSE (vt38.c0 IN ()) END);
SELECT COUNT(*) FROM vt38 NOT INDEXED, rt1, rt0 WHERE ((NOT (vt38.c0)) COLLATE BINARY) ORDER BY rt0.c0, ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt38.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt38, rt1, rt0 ORDER BY rt0.c0, ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) IS TRUE) DESC);
SELECT COUNT(*) FROM vt38 NOT INDEXED, rt1, rt0 WHERE ((NOT (vt38.c0)) COLLATE BINARY) ORDER BY rt0.c0, ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt38.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt38, rt1, rt0 ORDER BY rt0.c0, ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) IS TRUE) DESC);
SELECT COUNT(*) FROM vt38 NOT INDEXED, rt1, rt0 WHERE ((NOT (vt38.c0)) COLLATE BINARY) ORDER BY rt0.c0, ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) IS TRUE) DESC;
SELECT * FROM vt38, rt2 WHERE (((((rt2.c0)&(rt2.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c0)&(rt2.c1))) ISNULL)) IS TRUE)  as count FROM vt38, rt2);
SELECT * FROM vt38, rt2 WHERE (((((rt2.c0)&(rt2.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c0)&(rt2.c1))) ISNULL)) IS TRUE)  as count FROM vt38, rt2);
SELECT * FROM vt38, rt2 WHERE (((((rt2.c0)&(rt2.c1))) ISNULL));
SELECT * FROM rt1, rt0, rt2, vt38 WHERE (CAST(CASE rt1.c1  WHEN rt2.c0 THEN rt1.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt2.c0 THEN rt1.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, rt2, vt38);
SELECT * FROM rt1, rt0, rt2, vt38 WHERE (CAST(CASE rt1.c1  WHEN rt2.c0 THEN rt1.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt2.c0 THEN rt1.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, rt2, vt38);
SELECT * FROM rt1, rt0, rt2, vt38 WHERE (CAST(CASE rt1.c1  WHEN rt2.c0 THEN rt1.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c2 END AS INTEGER));
SELECT * FROM rt2 CROSS JOIN rt0 ON ((((((rt2.c1)LIKE(rt0.c3)))AND(((rt0.c3)&('-1652943806')))))OR(rt2.c1)) WHERE (((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON ((((((rt2.c1)LIKE(rt0.c3)))AND(((rt0.c3)&('-1652943806')))))OR(rt2.c1)));
SELECT * FROM rt2 CROSS JOIN rt0 ON ((((((rt2.c1)LIKE(rt0.c3)))AND(((rt0.c3)&('-1652943806')))))OR(rt2.c1)) WHERE (((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON ((((((rt2.c1)LIKE(rt0.c3)))AND(((rt0.c3)&('-1652943806')))))OR(rt2.c1)));
SELECT * FROM rt2 CROSS JOIN rt0 ON ((((((rt2.c1)LIKE(rt0.c3)))AND(((rt0.c3)&('-1652943806')))))OR(rt2.c1)) WHERE (((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt2, rt1, vt38 NATURAL JOIN rt0 WHERE (((((((NULL)AND(rt2.c2)))OR(rt1.c0)))==(CAST(rt1.c2 AS BLOB)))) ORDER BY NULL ASC  NULLS FIRST, ((((((((((rt0.c3)<>(rt1.c4)))OR(((((rt0.c2)AND(rt1.c0)))AND(0.10456347062112781)))))OR(CASE rt2.c0  WHEN rt1.c0 THEN rt1.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1)))))AND(CAST(0.4544927588496559 AS NUMERIC))), ((((NULL)>>(rt0.c2))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE WHEN rt0.c3 THEN rt2.c1 WHEN -179860944 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c4 ELSE rt2.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(rt2.c2)))OR(rt1.c0)))=(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt2, rt1, vt38 NATURAL JOIN rt0 ORDER BY NULL ASC  NULLS FIRST, ((((((((((rt0.c3)<>(rt1.c4)))OR(((((rt0.c2)AND(rt1.c0)))AND(0.10456347062112781)))))OR(CASE rt2.c0  WHEN rt1.c0 THEN rt1.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1)))))AND(CAST(0.4544927588496559 AS NUMERIC))), ((((NULL)>>(rt0.c2))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE WHEN rt0.c3 THEN rt2.c1 WHEN -179860944 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c4 ELSE rt2.c2 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt2, rt1, vt38 NATURAL JOIN rt0 WHERE (((((((NULL)AND(rt2.c2)))OR(rt1.c0)))==(CAST(rt1.c2 AS BLOB)))) ORDER BY NULL ASC  NULLS FIRST, ((((((((((rt0.c3)<>(rt1.c4)))OR(((((rt0.c2)AND(rt1.c0)))AND(0.10456347062112781)))))OR(CASE rt2.c0  WHEN rt1.c0 THEN rt1.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1)))))AND(CAST(0.4544927588496559 AS NUMERIC))), ((((NULL)>>(rt0.c2))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE WHEN rt0.c3 THEN rt2.c1 WHEN -179860944 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c4 ELSE rt2.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(rt2.c2)))OR(rt1.c0)))=(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt2, rt1, vt38 NATURAL JOIN rt0 ORDER BY NULL ASC  NULLS FIRST, ((((((((((rt0.c3)<>(rt1.c4)))OR(((((rt0.c2)AND(rt1.c0)))AND(0.10456347062112781)))))OR(CASE rt2.c0  WHEN rt1.c0 THEN rt1.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1)))))AND(CAST(0.4544927588496559 AS NUMERIC))), ((((NULL)>>(rt0.c2))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE WHEN rt0.c3 THEN rt2.c1 WHEN -179860944 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c4 ELSE rt2.c2 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt2, rt1, vt38 NATURAL JOIN rt0 WHERE (((((((NULL)AND(rt2.c2)))OR(rt1.c0)))==(CAST(rt1.c2 AS BLOB)))) ORDER BY NULL ASC  NULLS FIRST, ((((((((((rt0.c3)<>(rt1.c4)))OR(((((rt0.c2)AND(rt1.c0)))AND(0.10456347062112781)))))OR(CASE rt2.c0  WHEN rt1.c0 THEN rt1.c1 END)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1)))))AND(CAST(0.4544927588496559 AS NUMERIC))), ((((NULL)>>(rt0.c2))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE WHEN rt0.c3 THEN rt2.c1 WHEN -179860944 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c4 ELSE rt2.c2 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt2 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2)&(rt2.c2))  WHEN ((rt0.c1) IS FALSE) THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c3) NOT NULL) WHEN NULL THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt2.c2)) END WHERE (json_patch(CAST(rt2.c0 AS REAL), rt2.c0));
SELECT SUM(count) FROM (SELECT ((json_patch(CAST(rt2.c0 AS REAL), rt2.c0)) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2)&(rt2.c2))  WHEN ((rt0.c1) IS FALSE) THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c3) NOT NULL) WHEN NULL THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt2.c2)) END);
SELECT COUNT(*) FROM rt2 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2)&(rt2.c2))  WHEN ((rt0.c1) IS FALSE) THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c3) NOT NULL) WHEN NULL THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt2.c2)) END WHERE (json_patch(CAST(rt2.c0 AS REAL), rt2.c0));
SELECT SUM(count) FROM (SELECT ((json_patch(CAST(rt2.c0 AS REAL), rt2.c0)) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2)&(rt2.c2))  WHEN ((rt0.c1) IS FALSE) THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c3) NOT NULL) WHEN NULL THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt2.c2)) END);
SELECT COUNT(*) FROM rt2 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2)&(rt2.c2))  WHEN ((rt0.c1) IS FALSE) THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c3) NOT NULL) WHEN NULL THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c0)AND(rt0.c2)))OR(rt2.c2)) END WHERE (json_patch(CAST(rt2.c0 AS REAL), rt2.c0));
SELECT COUNT(*) FROM vt38 WHERE ((vt38.c0 IN ()) COLLATE BINARY) ORDER BY (+ ('' COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt38.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt38 ORDER BY (+ ('' COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt38 WHERE ((vt38.c0 IN ()) COLLATE BINARY) ORDER BY (+ ('' COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt38.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt38 ORDER BY (+ ('' COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt38 WHERE ((vt38.c0 IN ()) COLLATE BINARY) ORDER BY (+ ('' COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt38, rt2 WHERE (((rt2.c0 COLLATE NOCASE)OR(((rt2.c0) NOT BETWEEN (vt38.c0) AND (rt2.c0))))) ORDER BY ((vt38.c0 COLLATE RTRIM) NOTNULL) DESC, (((((('25832216')>(vt38.c0)))AND(((NULL)&(vt38.c0)))))AND((((rt2.c0))>=((vt38.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt2.c0 COLLATE NOCASE)OR(((rt2.c0) NOT BETWEEN (vt38.c0) AND (rt2.c0))))) IS TRUE)  as count FROM vt38, rt2 ORDER BY ((vt38.c0 COLLATE RTRIM) NOTNULL) DESC, (((((('25832216')>(vt38.c0)))AND(((NULL)&(vt38.c0)))))AND((((rt2.c0))>=((vt38.c0))))));
SELECT ALL COUNT(*) FROM vt38, rt2 WHERE (((rt2.c0 COLLATE NOCASE)OR(((rt2.c0) NOT BETWEEN (vt38.c0) AND (rt2.c0))))) ORDER BY ((vt38.c0 COLLATE RTRIM) NOTNULL) DESC, (((((('25832216')>(vt38.c0)))AND(((NULL)&(vt38.c0)))))AND((((rt2.c0))>=((vt38.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt2.c0 COLLATE NOCASE)OR(((rt2.c0) NOT BETWEEN (vt38.c0) AND (rt2.c0))))) IS TRUE)  as count FROM vt38, rt2 ORDER BY ((vt38.c0 COLLATE RTRIM) NOTNULL) DESC, (((((('25832216')>(vt38.c0)))AND(((NULL)&(vt38.c0)))))AND((((rt2.c0))>=((vt38.c0))))));
SELECT ALL COUNT(*) FROM vt38, rt2 WHERE (((rt2.c0 COLLATE NOCASE)OR(((rt2.c0) NOT BETWEEN (vt38.c0) AND (rt2.c0))))) ORDER BY ((vt38.c0 COLLATE RTRIM) NOTNULL) DESC, (((((('25832216')>(vt38.c0)))AND(((NULL)&(vt38.c0)))))AND((((rt2.c0))>=((vt38.c0)))));
SELECT ALL * FROM vt38 WHERE ((NOT (((((((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0))))) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE ((NOT (((((((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0))))) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE ((NOT (((((((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))));
SELECT ALL COUNT(*) FROM rt2 WHERE (CAST((('-1434371502') BETWEEN (rt2.c2) AND (rt2.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((('-1434371502') BETWEEN (rt2.c2) AND (rt2.c2)) AS TEXT)) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (CAST((('-1434371502') BETWEEN (rt2.c2) AND (rt2.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((('-1434371502') BETWEEN (rt2.c2) AND (rt2.c2)) AS TEXT)) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (CAST((('-1434371502') BETWEEN (rt2.c2) AND (rt2.c2)) AS TEXT));
SELECT ALL * FROM rt0, vt38, rt1 WHERE (NULL) ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt38, rt1 ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt38, rt1 WHERE (NULL) ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt38, rt1 ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt38, rt1 WHERE (NULL) ORDER BY ((rt0.c2 IN ()) IN ()) ASC  NULLS LAST;
SELECT * FROM vt38 WHERE ((((vt38.c0)) BETWEEN (((vt38.c0 IN ()))) AND ((((vt38.c0)&(vt38.c0)))))) ORDER BY ((vt38.c0)AND(vt38.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt38.c0)) BETWEEN (((vt38.c0 IN ()))) AND ((((vt38.c0)&(vt38.c0)))))) IS TRUE)  as count FROM vt38 ORDER BY ((vt38.c0)AND(vt38.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM vt38 WHERE ((((vt38.c0)) BETWEEN (((vt38.c0 IN ()))) AND ((((vt38.c0)&(vt38.c0)))))) ORDER BY ((vt38.c0)AND(vt38.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt38.c0)) BETWEEN (((vt38.c0 IN ()))) AND ((((vt38.c0)&(vt38.c0)))))) IS TRUE)  as count FROM vt38 ORDER BY ((vt38.c0)AND(vt38.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM vt38 WHERE ((((vt38.c0)) BETWEEN (((vt38.c0 IN ()))) AND ((((vt38.c0)&(vt38.c0)))))) ORDER BY ((vt38.c0)AND(vt38.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt38 WHERE (rt1.c0 COLLATE NOCASE) ORDER BY SUBSTR(CAST(rt1.c2 AS NUMERIC), (NOT (rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN vt38 ORDER BY SUBSTR(CAST(rt1.c2 AS NUMERIC), (NOT (rt1.c3))) ASC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt38 WHERE (rt1.c0 COLLATE NOCASE) ORDER BY SUBSTR(CAST(rt1.c2 AS NUMERIC), (NOT (rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN vt38 ORDER BY SUBSTR(CAST(rt1.c2 AS NUMERIC), (NOT (rt1.c3))) ASC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt38 WHERE (rt1.c0 COLLATE NOCASE) ORDER BY SUBSTR(CAST(rt1.c2 AS NUMERIC), (NOT (rt1.c3))) ASC;
SELECT * FROM vt38, rt2, rt1 WHERE (CAST(((rt2.c1)||(rt1.c1)) AS NUMERIC)) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt2.c1)||(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt38, rt2, rt1 ORDER BY rt1.c0);
SELECT * FROM vt38, rt2, rt1 WHERE (CAST(((rt2.c1)||(rt1.c1)) AS NUMERIC)) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt2.c1)||(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt38, rt2, rt1 ORDER BY rt1.c0);
SELECT * FROM vt38, rt2, rt1 WHERE (CAST(((rt2.c1)||(rt1.c1)) AS NUMERIC)) ORDER BY rt1.c0;
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT * FROM rt1 WHERE ((((rt1.c4) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4) IS TRUE) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c4) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4) IS TRUE) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c4) IS TRUE) IN ()));
SELECT * FROM rt1, rt0, vt38 NOT INDEXED LEFT OUTER JOIN rt2 ON (((((rt0.c1, rt2.c0, rt1.c2, rt0.c0, rt2.c0))<>((rt2.c2, rt0.c3, rt1.c4, rt2.c1, rt1.c0)))) BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt2.c1)) WHERE (((((-1544784112)&(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('1987455493') ISNULL)))) ORDER BY ((((((((((rt2.c1)OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c1)))OR(vt38.c0))) NOT BETWEEN ((NOT ('g鬣븵i|  '))) AND ((NULL IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((-1544784112)&(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('1987455493') ISNULL)))) IS TRUE)  as count FROM rt1, rt0, vt38 LEFT OUTER JOIN rt2 ON (((((rt0.c1, rt2.c0, rt1.c2, rt0.c0, rt2.c0))<>((rt2.c2, rt0.c3, rt1.c4, rt2.c1, rt1.c0)))) BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt2.c1)) ORDER BY ((((((((((rt2.c1)OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c1)))OR(vt38.c0))) NOT BETWEEN ((NOT ('g鬣븵i|  '))) AND ((NULL IN ())))  NULLS FIRST);
SELECT * FROM rt1, rt0, vt38 NOT INDEXED LEFT OUTER JOIN rt2 ON (((((rt0.c1, rt2.c0, rt1.c2, rt0.c0, rt2.c0))<>((rt2.c2, rt0.c3, rt1.c4, rt2.c1, rt1.c0)))) BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt2.c1)) WHERE (((((-1544784112)&(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('1987455493') ISNULL)))) ORDER BY ((((((((((rt2.c1)OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c1)))OR(vt38.c0))) NOT BETWEEN ((NOT ('g鬣븵i|  '))) AND ((NULL IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((-1544784112)&(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('1987455493') ISNULL)))) IS TRUE)  as count FROM rt1, rt0, vt38 LEFT OUTER JOIN rt2 ON (((((rt0.c1, rt2.c0, rt1.c2, rt0.c0, rt2.c0))<>((rt2.c2, rt0.c3, rt1.c4, rt2.c1, rt1.c0)))) BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt2.c1)) ORDER BY ((((((((((rt2.c1)OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c1)))OR(vt38.c0))) NOT BETWEEN ((NOT ('g鬣븵i|  '))) AND ((NULL IN ())))  NULLS FIRST);
SELECT * FROM rt1, rt0, vt38 NOT INDEXED LEFT OUTER JOIN rt2 ON (((((rt0.c1, rt2.c0, rt1.c2, rt0.c0, rt2.c0))<>((rt2.c2, rt0.c3, rt1.c4, rt2.c1, rt1.c0)))) BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt2.c1)) WHERE (((((-1544784112)&(rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((('1987455493') ISNULL)))) ORDER BY ((((((((((rt2.c1)OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c1)))OR(vt38.c0))) NOT BETWEEN ((NOT ('g鬣븵i|  '))) AND ((NULL IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt38, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt38, rt0);
SELECT COUNT(*) FROM vt38, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt38, rt0);
SELECT COUNT(*) FROM vt38, rt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), 0.016506380312346636)) ORDER BY CAST('z' AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), 0.016506380312346636)) IS TRUE)  as count FROM rt0 ORDER BY CAST('z' AS TEXT) DESC);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), 0.016506380312346636)) ORDER BY CAST('z' AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), 0.016506380312346636)) IS TRUE)  as count FROM rt0 ORDER BY CAST('z' AS TEXT) DESC);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)), 0.016506380312346636)) ORDER BY CAST('z' AS TEXT) DESC;
SELECT ALL COUNT(*) FROM rt1, vt38, rt2 WHERE ((((((((((rt1.c3 IN (rt1.c2)))OR(CASE rt2.c0  WHEN rt2.c1 THEN rt1.c3 ELSE 0.17418249414539855 END)))AND(CAST(0.8800455761465344 AS NUMERIC))))AND(((rt1.c3) NOTNULL))))AND(ABS(rt2.c2)))) ORDER BY ((CAST('1850008367' AS TEXT))-((((rt2.c2))!=((rt2.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c3 IN (rt1.c2)))OR(CASE rt2.c0  WHEN rt2.c1 THEN rt1.c3 ELSE 0.17418249414539855 END)))AND(CAST(0.8800455761465344 AS NUMERIC))))AND(((rt1.c3) NOTNULL))))AND(ABS(rt2.c2)))) IS TRUE)  as count FROM rt1, vt38, rt2 ORDER BY ((CAST('1850008367' AS TEXT))-((((rt2.c2))!=((rt2.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt38, rt2 WHERE ((((((((((rt1.c3 IN (rt1.c2)))OR(CASE rt2.c0  WHEN rt2.c1 THEN rt1.c3 ELSE 0.17418249414539855 END)))AND(CAST(0.8800455761465344 AS NUMERIC))))AND(((rt1.c3) NOTNULL))))AND(ABS(rt2.c2)))) ORDER BY ((CAST('1850008367' AS TEXT))-((((rt2.c2))!=((rt2.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c3 IN (rt1.c2)))OR(CASE rt2.c0  WHEN rt2.c1 THEN rt1.c3 ELSE 0.17418249414539855 END)))AND(CAST(0.8800455761465344 AS NUMERIC))))AND(((rt1.c3) NOTNULL))))AND(ABS(rt2.c2)))) IS TRUE)  as count FROM rt1, vt38, rt2 ORDER BY ((CAST('1850008367' AS TEXT))-((((rt2.c2))!=((rt2.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt38, rt2 WHERE ((((((((((rt1.c3 IN (rt1.c2)))OR(CASE rt2.c0  WHEN rt2.c1 THEN rt1.c3 ELSE 0.17418249414539855 END)))AND(CAST(0.8800455761465344 AS NUMERIC))))AND(((rt1.c3) NOTNULL))))AND(ABS(rt2.c2)))) ORDER BY ((CAST('1850008367' AS TEXT))-((((rt2.c2))!=((rt2.c0))))) DESC;
SELECT * FROM rt1 WHERE (UNLIKELY(rt1.c1 COLLATE RTRIM)) ORDER BY (((((rt1.c2 IN ()))OR(((rt1.c2) NOTNULL))))AND((- (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2 IN ()))OR(((rt1.c2) NOTNULL))))AND((- (rt1.c2)))));
SELECT * FROM rt1 WHERE (UNLIKELY(rt1.c1 COLLATE RTRIM)) ORDER BY (((((rt1.c2 IN ()))OR(((rt1.c2) NOTNULL))))AND((- (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2 IN ()))OR(((rt1.c2) NOTNULL))))AND((- (rt1.c2)))));
SELECT * FROM rt1 WHERE (UNLIKELY(rt1.c1 COLLATE RTRIM)) ORDER BY (((((rt1.c2 IN ()))OR(((rt1.c2) NOTNULL))))AND((- (rt1.c2))));
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt38 WHERE (CAST(rt1.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 AS BLOB)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt38);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt38 WHERE (CAST(rt1.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c4 AS BLOB)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt38);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt38 WHERE (CAST(rt1.c4 AS BLOB));
SELECT COUNT(*) FROM rt1 WHERE ((((((~ ('1쵡)B+su*')))AND('1666038847')))AND((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((~ ('1쵡)B+su*')))AND('1666038847')))AND((~ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((~ ('1쵡)B+su*')))AND('1666038847')))AND((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((~ ('1쵡)B+su*')))AND('1666038847')))AND((~ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((~ ('1쵡)B+su*')))AND('1666038847')))AND((~ (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (CAST(((rt2.c0)IS NOT(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt2.c0)IS NOT(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt2 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (CAST(((rt2.c0)IS NOT(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt2.c0)IS NOT(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt2 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE (CAST(((rt2.c0)IS NOT(rt1.c0)) AS NUMERIC));
SELECT ALL * FROM vt38 WHERE (IFNULL(DISTINCT (vt38.c0 IN ()), vt38.c0)) ORDER BY LIKELIHOOD(((((((((vt38.c0)OR(0.7029835837793341)))OR(vt38.c0)))AND(vt38.c0)))OR(vt38.c0)), 0.8318098793037322)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (vt38.c0 IN ()), vt38.c0)) IS TRUE)  as count FROM vt38 ORDER BY LIKELIHOOD(((((((((vt38.c0)OR(0.7029835837793341)))OR(vt38.c0)))AND(vt38.c0)))OR(vt38.c0)), 0.8318098793037322)  NULLS FIRST);
SELECT ALL * FROM vt38 WHERE (IFNULL(DISTINCT (vt38.c0 IN ()), vt38.c0)) ORDER BY LIKELIHOOD(((((((((vt38.c0)OR(0.7029835837793341)))OR(vt38.c0)))AND(vt38.c0)))OR(vt38.c0)), 0.8318098793037322)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (vt38.c0 IN ()), vt38.c0)) IS TRUE)  as count FROM vt38 ORDER BY LIKELIHOOD(((((((((vt38.c0)OR(0.7029835837793341)))OR(vt38.c0)))AND(vt38.c0)))OR(vt38.c0)), 0.8318098793037322)  NULLS FIRST);
SELECT ALL * FROM vt38 WHERE (IFNULL(DISTINCT (vt38.c0 IN ()), vt38.c0)) ORDER BY LIKELIHOOD(((((((((vt38.c0)OR(0.7029835837793341)))OR(vt38.c0)))AND(vt38.c0)))OR(vt38.c0)), 0.8318098793037322)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))) NOTNULL));
SELECT ALL * FROM vt38 LEFT OUTER JOIN rt2 ON (((rt2.c0)) NOT BETWEEN ((0.7023269751001239)) AND ((((rt2.c1) BETWEEN (vt38.c0) AND (rt2.c0))))) WHERE (CAST(rt2.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt2.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt38 LEFT OUTER JOIN rt2 ON (((rt2.c0)) NOT BETWEEN ((0.7023269751001239)) AND ((((rt2.c1) BETWEEN (vt38.c0) AND (rt2.c0))))));
SELECT ALL * FROM vt38 LEFT OUTER JOIN rt2 ON (((rt2.c0)) NOT BETWEEN ((0.7023269751001239)) AND ((((rt2.c1) BETWEEN (vt38.c0) AND (rt2.c0))))) WHERE (CAST(rt2.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt2.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt38 LEFT OUTER JOIN rt2 ON (((rt2.c0)) NOT BETWEEN ((0.7023269751001239)) AND ((((rt2.c1) BETWEEN (vt38.c0) AND (rt2.c0))))));
SELECT ALL * FROM vt38 LEFT OUTER JOIN rt2 ON (((rt2.c0)) NOT BETWEEN ((0.7023269751001239)) AND ((((rt2.c1) BETWEEN (vt38.c0) AND (rt2.c0))))) WHERE (CAST(rt2.c0 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, rt2 CROSS JOIN rt0 ON rt1.c2 WHERE ((((-6.21802524E8, ((((rt1.c3)OR(rt1.c2)))AND(rt0.c2)), ((rt2.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)), (rt1.c2 IN ()), (((rt2.c1, rt2.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt1.c1, rt0.c1)) AND ((rt1.c4, rt2.c1, rt2.c2)))))!=((rt1.c2, ((rt2.c2)GLOB(rt2.c1)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt2.c1)), CASE rt0.c2  WHEN rt2.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END, (~ (NULL)))))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c0))) IS FALSE), CASE (('583289252')IS NOT(rt1.c4))  WHEN ((rt1.c0) ISNULL) THEN (rt0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-6.21802524E8, ((((rt1.c3)OR(rt1.c2)))AND(rt0.c2)), ((rt2.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)), (rt1.c2 IN ()), (((rt2.c1, rt2.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt1.c1, rt0.c1)) AND ((rt1.c4, rt2.c1, rt2.c2)))))<>((rt1.c2, ((rt2.c2)GLOB(rt2.c1)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt2.c1)), CASE rt0.c2  WHEN rt2.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END, (~ (NULL)))))) IS TRUE)  as count FROM rt1, rt2 CROSS JOIN rt0 ON rt1.c2 ORDER BY ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c0))) IS FALSE), CASE (('583289252')IS NOT(rt1.c4))  WHEN ((rt1.c0) ISNULL) THEN (rt0.c1 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2 CROSS JOIN rt0 ON rt1.c2 WHERE ((((-6.21802524E8, ((((rt1.c3)OR(rt1.c2)))AND(rt0.c2)), ((rt2.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)), (rt1.c2 IN ()), (((rt2.c1, rt2.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt1.c1, rt0.c1)) AND ((rt1.c4, rt2.c1, rt2.c2)))))!=((rt1.c2, ((rt2.c2)GLOB(rt2.c1)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt2.c1)), CASE rt0.c2  WHEN rt2.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END, (~ (NULL)))))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c0))) IS FALSE), CASE (('583289252')IS NOT(rt1.c4))  WHEN ((rt1.c0) ISNULL) THEN (rt0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-6.21802524E8, ((((rt1.c3)OR(rt1.c2)))AND(rt0.c2)), ((rt2.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)), (rt1.c2 IN ()), (((rt2.c1, rt2.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt1.c1, rt0.c1)) AND ((rt1.c4, rt2.c1, rt2.c2)))))<>((rt1.c2, ((rt2.c2)GLOB(rt2.c1)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt2.c1)), CASE rt0.c2  WHEN rt2.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END, (~ (NULL)))))) IS TRUE)  as count FROM rt1, rt2 CROSS JOIN rt0 ON rt1.c2 ORDER BY ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c0))) IS FALSE), CASE (('583289252')IS NOT(rt1.c4))  WHEN ((rt1.c0) ISNULL) THEN (rt0.c1 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2 CROSS JOIN rt0 ON rt1.c2 WHERE ((((-6.21802524E8, ((((rt1.c3)OR(rt1.c2)))AND(rt0.c2)), ((rt2.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)), (rt1.c2 IN ()), (((rt2.c1, rt2.c0, rt0.c0)) NOT BETWEEN ((rt0.c3, rt1.c1, rt0.c1)) AND ((rt1.c4, rt2.c1, rt2.c2)))))!=((rt1.c2, ((rt2.c2)GLOB(rt2.c1)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt2.c1)), CASE rt0.c2  WHEN rt2.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c3 ELSE rt0.c3 END, (~ (NULL)))))) ORDER BY ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c0))) IS FALSE), CASE (('583289252')IS NOT(rt1.c4))  WHEN ((rt1.c0) ISNULL) THEN (rt0.c1 IN ()) END  NULLS FIRST;
SELECT ALL * FROM vt38 WHERE (json_valid(((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)))) ORDER BY (((NOT (vt38.c0))) NOT BETWEEN (((((((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)))AND(vt38.c0)))OR(vt38.c0))) AND (vt38.c0 COLLATE NOCASE)), CASE WHEN ((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((x'') NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)))) IS TRUE)  as count FROM vt38 ORDER BY (((NOT (vt38.c0))) NOT BETWEEN (((((((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)))AND(vt38.c0)))OR(vt38.c0))) AND (vt38.c0 COLLATE NOCASE)), CASE WHEN ((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((x'') NOT NULL) END);
SELECT ALL * FROM vt38 WHERE (json_valid(((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)))) ORDER BY (((NOT (vt38.c0))) NOT BETWEEN (((((((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)))AND(vt38.c0)))OR(vt38.c0))) AND (vt38.c0 COLLATE NOCASE)), CASE WHEN ((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((x'') NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)))) IS TRUE)  as count FROM vt38 ORDER BY (((NOT (vt38.c0))) NOT BETWEEN (((((((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)))AND(vt38.c0)))OR(vt38.c0))) AND (vt38.c0 COLLATE NOCASE)), CASE WHEN ((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((x'') NOT NULL) END);
SELECT ALL * FROM vt38 WHERE (json_valid(((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)))) ORDER BY (((NOT (vt38.c0))) NOT BETWEEN (((((((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)))AND(vt38.c0)))OR(vt38.c0))) AND (vt38.c0 COLLATE NOCASE)), CASE WHEN ((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((x'') NOT NULL) END;
SELECT ALL COUNT(*) FROM rt0, vt38 WHERE ((~ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL COUNT(*) FROM rt0, vt38 WHERE ((~ ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL COUNT(*) FROM rt0, vt38 WHERE ((~ ((~ (rt0.c0)))));
SELECT * FROM vt38 LEFT OUTER JOIN rt2 ON UPPER(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE BINARY IN ()) WHERE (STRFTIME((~ (rt0.c3)), (- (vt38.c0)), ((rt2.c1)>=(rt0.c1)), rtreenode(rt0.c1, rt0.c0), HEX(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((STRFTIME((~ (rt0.c3)), (- (vt38.c0)), ((rt2.c1)>=(rt0.c1)), rtreenode(rt0.c1, rt0.c0), HEX(DISTINCT rt0.c1))) IS TRUE)  as count FROM vt38 LEFT OUTER JOIN rt2 ON UPPER(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE BINARY IN ()));
SELECT * FROM vt38 LEFT OUTER JOIN rt2 ON UPPER(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE BINARY IN ()) WHERE (STRFTIME((~ (rt0.c3)), (- (vt38.c0)), ((rt2.c1)>=(rt0.c1)), rtreenode(rt0.c1, rt0.c0), HEX(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((STRFTIME((~ (rt0.c3)), (- (vt38.c0)), ((rt2.c1)>=(rt0.c1)), rtreenode(rt0.c1, rt0.c0), HEX(DISTINCT rt0.c1))) IS TRUE)  as count FROM vt38 LEFT OUTER JOIN rt2 ON UPPER(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) FULL OUTER JOIN rt0 ON (rt0.c1 COLLATE BINARY IN ()));
SELECT ALL * FROM rt1, rt0, vt38, rt2 WHERE ((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN (((rt1.c3 IN ()), x'b9f31d63', (~ (rt2.c1)))) AND ((((((rt0.c3)OR(rt2.c0)))OR(rt1.c0)), ((rt0.c0) ISNULL), ((rt0.c2)<>(rt1.c0)))))) ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST, (~ ((- (rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN (((rt1.c3 IN ()), x'b9f31d63', (~ (rt2.c1)))) AND ((((((rt0.c3)OR(rt2.c0)))OR(rt1.c0)), ((rt0.c0) ISNULL), ((rt0.c2)!=(rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0, vt38, rt2 ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST, (~ ((- (rt1.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt38, rt2 WHERE ((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN (((rt1.c3 IN ()), x'b9f31d63', (~ (rt2.c1)))) AND ((((((rt0.c3)OR(rt2.c0)))OR(rt1.c0)), ((rt0.c0) ISNULL), ((rt0.c2)<>(rt1.c0)))))) ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST, (~ ((- (rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN (((rt1.c3 IN ()), x'b9f31d63', (~ (rt2.c1)))) AND ((((((rt0.c3)OR(rt2.c0)))OR(rt1.c0)), ((rt0.c0) ISNULL), ((rt0.c2)!=(rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0, vt38, rt2 ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST, (~ ((- (rt1.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt38, rt2 WHERE ((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN (((rt1.c3 IN ()), x'b9f31d63', (~ (rt2.c1)))) AND ((((((rt0.c3)OR(rt2.c0)))OR(rt1.c0)), ((rt0.c0) ISNULL), ((rt0.c2)<>(rt1.c0)))))) ORDER BY ((rt0.c1 IN ()) IN ()) ASC  NULLS FIRST, (~ ((- (rt1.c4)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt38, rt2, rt1 WHERE ((((vt38.c0 IN ())) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((((rt2.c2)OR(rt2.c2)))AND(rt1.c0))))) ORDER BY SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ALL (((((vt38.c0 IN ())) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((((rt2.c2)OR(rt2.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM vt38, rt2, rt1 ORDER BY SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt38, rt2, rt1 WHERE ((((vt38.c0 IN ())) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((((rt2.c2)OR(rt2.c2)))AND(rt1.c0))))) ORDER BY SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ALL (((((vt38.c0 IN ())) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((((rt2.c2)OR(rt2.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM vt38, rt2, rt1 ORDER BY SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt38, rt2, rt1 WHERE ((((vt38.c0 IN ())) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (((((rt2.c2)OR(rt2.c2)))AND(rt1.c0))))) ORDER BY SQLITE_VERSION();
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE BINARY IN ('-1434371502'))) ORDER BY CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ('-1434371502'))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE BINARY IN ('-1434371502'))) ORDER BY CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ('-1434371502'))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c0 COLLATE BINARY IN ('-1434371502'))) ORDER BY CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt2, rt1 WHERE (((NULL) IS TRUE) COLLATE RTRIM) ORDER BY ((~ (rt2.c2)) IN (((rt1.c3)<(rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((~ (rt2.c2)) IN (((rt1.c3)<(rt1.c4)))) DESC);
SELECT ALL * FROM rt0, rt2, rt1 WHERE (((NULL) IS TRUE) COLLATE RTRIM) ORDER BY ((~ (rt2.c2)) IN (((rt1.c3)<(rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt2, rt1 ORDER BY ((~ (rt2.c2)) IN (((rt1.c3)<(rt1.c4)))) DESC);
SELECT ALL * FROM rt0, rt2, rt1 WHERE (((NULL) IS TRUE) COLLATE RTRIM) ORDER BY ((~ (rt2.c2)) IN (((rt1.c3)<(rt1.c4)))) DESC;
SELECT * FROM rt2, vt38 INNER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (TIME((+ (rt1.c0)), ((rt1.c0)>>(rt1.c3)), (- (rt2.c2)), (((rt1.c2, '55791183', '')) NOT BETWEEN ((rt1.c4, rt2.c2, rt1.c4)) AND ((vt38.c0, rt2.c0, rt2.c1))), rt2.c2 COLLATE RTRIM)) ORDER BY (~ (rt1.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TIME((+ (rt1.c0)), ((rt1.c0)>>(rt1.c3)), (- (rt2.c2)), (((rt1.c2, '55791183', '')) NOT BETWEEN ((rt1.c4, rt2.c2, rt1.c4)) AND ((vt38.c0, rt2.c0, rt2.c1))), rt2.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt2, vt38 INNER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ()) ORDER BY (~ (rt1.c4 COLLATE BINARY)));
SELECT * FROM rt2, vt38 INNER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (TIME((+ (rt1.c0)), ((rt1.c0)>>(rt1.c3)), (- (rt2.c2)), (((rt1.c2, '55791183', '')) NOT BETWEEN ((rt1.c4, rt2.c2, rt1.c4)) AND ((vt38.c0, rt2.c0, rt2.c1))), rt2.c2 COLLATE RTRIM)) ORDER BY (~ (rt1.c4 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TIME((+ (rt1.c0)), ((rt1.c0)>>(rt1.c3)), (- (rt2.c2)), (((rt1.c2, '55791183', '')) NOT BETWEEN ((rt1.c4, rt2.c2, rt1.c4)) AND ((vt38.c0, rt2.c0, rt2.c1))), rt2.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt2, vt38 INNER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ()) ORDER BY (~ (rt1.c4 COLLATE BINARY)));
SELECT * FROM rt2, vt38 INNER JOIN rt1 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (TIME((+ (rt1.c0)), ((rt1.c0)>>(rt1.c3)), (- (rt2.c2)), (((rt1.c2, '55791183', '')) NOT BETWEEN ((rt1.c4, rt2.c2, rt1.c4)) AND ((vt38.c0, rt2.c0, rt2.c1))), rt2.c2 COLLATE RTRIM)) ORDER BY (~ (rt1.c4 COLLATE BINARY));
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((222708344)) AND ((((rt0.c0)!=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((222708344)) AND ((((rt0.c0)!=(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((222708344)) AND ((((rt0.c0)!=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((222708344)) AND ((((rt0.c0)!=(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((222708344)) AND ((((rt0.c0)!=(rt0.c0))))));
SELECT ALL * FROM vt38, rt1 WHERE (CASE (((rt1.c2, vt38.c0, -1488820812))<((rt1.c4, vt38.c0, rt1.c2)))  WHEN (- (rt1.c1)) THEN CASE WHEN 0.07112728483853104 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c2, vt38.c0, -1488820812))<((rt1.c4, vt38.c0, rt1.c2)))  WHEN (- (rt1.c1)) THEN CASE WHEN 0.07112728483853104 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END END) IS TRUE)  as count FROM vt38, rt1);
SELECT ALL * FROM vt38, rt1 WHERE (CASE (((rt1.c2, vt38.c0, -1488820812))<((rt1.c4, vt38.c0, rt1.c2)))  WHEN (- (rt1.c1)) THEN CASE WHEN 0.07112728483853104 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c2, vt38.c0, -1488820812))<((rt1.c4, vt38.c0, rt1.c2)))  WHEN (- (rt1.c1)) THEN CASE WHEN 0.07112728483853104 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END END) IS TRUE)  as count FROM vt38, rt1);
SELECT ALL * FROM vt38, rt1 WHERE (CASE (((rt1.c2, vt38.c0, -1488820812))<((rt1.c4, vt38.c0, rt1.c2)))  WHEN (- (rt1.c1)) THEN CASE WHEN 0.07112728483853104 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END END);
SELECT ALL COUNT(*) FROM rt2 WHERE (((rt2.c2)&(LIKELIHOOD(rt2.c0, 0.9388593590224764))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2)&(LIKELIHOOD(rt2.c0, 0.9388593590224764)))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((rt2.c2)&(LIKELIHOOD(rt2.c0, 0.9388593590224764))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2)&(LIKELIHOOD(rt2.c0, 0.9388593590224764)))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((rt2.c2)&(LIKELIHOOD(rt2.c0, 0.9388593590224764))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt2 ON (~ (CASE rt1.c4  WHEN rt0.c1 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c2 ELSE rt1.c3 END)) LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (((((rt0.c2) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN rt2 ON (~ (CASE rt1.c4  WHEN rt0.c1 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c2 ELSE rt1.c3 END)) LEFT OUTER JOIN rt1 ON rt1.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt2 ON (~ (CASE rt1.c4  WHEN rt0.c1 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c2 ELSE rt1.c3 END)) LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (((((rt0.c2) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN rt2 ON (~ (CASE rt1.c4  WHEN rt0.c1 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c2 ELSE rt1.c3 END)) LEFT OUTER JOIN rt1 ON rt1.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt2 ON (~ (CASE rt1.c4  WHEN rt0.c1 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt2.c2 ELSE rt1.c3 END)) LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (((((rt0.c2) IS FALSE)) IS FALSE));
SELECT COUNT(*) FROM vt38 FULL OUTER JOIN rt2 ON (((rt2.c1 IN ())) NOTNULL) WHERE (CASE WHEN rt2.c0 THEN rt2.c0 ELSE vt38.c0 END COLLATE NOCASE) ORDER BY ((NULL) BETWEEN ((((vt38.c0))==((rt2.c2)))) AND (((vt38.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt2.c0 THEN rt2.c0 ELSE vt38.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt2 ON (((rt2.c1 IN ())) NOTNULL) ORDER BY ((NULL) BETWEEN ((((vt38.c0))=((rt2.c2)))) AND (((vt38.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt38 FULL OUTER JOIN rt2 ON (((rt2.c1 IN ())) NOTNULL) WHERE (CASE WHEN rt2.c0 THEN rt2.c0 ELSE vt38.c0 END COLLATE NOCASE) ORDER BY ((NULL) BETWEEN ((((vt38.c0))==((rt2.c2)))) AND (((vt38.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt2.c0 THEN rt2.c0 ELSE vt38.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt2 ON (((rt2.c1 IN ())) NOTNULL) ORDER BY ((NULL) BETWEEN ((((vt38.c0))=((rt2.c2)))) AND (((vt38.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt38 FULL OUTER JOIN rt2 ON (((rt2.c1 IN ())) NOTNULL) WHERE (CASE WHEN rt2.c0 THEN rt2.c0 ELSE vt38.c0 END COLLATE NOCASE) ORDER BY ((NULL) BETWEEN ((((vt38.c0))==((rt2.c2)))) AND (((vt38.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM vt38 WHERE (((HEX(DISTINCT vt38.c0))-(((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt38.c0))-(((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0))))) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE (((HEX(DISTINCT vt38.c0))-(((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt38.c0))-(((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0))))) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE (((HEX(DISTINCT vt38.c0))-(((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)))));
SELECT ALL * FROM rt1 NOT INDEXED WHERE (((0.5486055980142124)==(SUBSTR(rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((0.5486055980142124)==(SUBSTR(rt1.c0, rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 NOT INDEXED WHERE (((0.5486055980142124)==(SUBSTR(rt1.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((0.5486055980142124)==(SUBSTR(rt1.c0, rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 NOT INDEXED WHERE (((0.5486055980142124)==(SUBSTR(rt1.c0, rt1.c1))));
SELECT * FROM rt0, rt1, rt2, vt38 WHERE ('-895028919');
SELECT SUM(count) FROM (SELECT (('-895028919') IS TRUE)  as count FROM rt0, rt1, rt2, vt38);
SELECT * FROM rt0, rt1, rt2, vt38 WHERE ('-895028919');
SELECT SUM(count) FROM (SELECT (('-895028919') IS TRUE)  as count FROM rt0, rt1, rt2, vt38);
SELECT * FROM rt0, rt1, rt2, vt38 WHERE ('-895028919');
SELECT COUNT(*) FROM vt38 WHERE (((vt38.c0) NOT BETWEEN (CAST(vt38.c0 AS INTEGER)) AND (((((vt38.c0)OR(vt38.c0)))OR(vt38.c0))))) ORDER BY CASE ((vt38.c0)>(vt38.c0))  WHEN ((vt38.c0)!=(0.6486159022238128)) THEN (~ (vt38.c0)) END;
SELECT SUM(count) FROM (SELECT ((((vt38.c0) NOT BETWEEN (CAST(vt38.c0 AS INTEGER)) AND (((((vt38.c0)OR(vt38.c0)))OR(vt38.c0))))) IS TRUE)  as count FROM vt38 ORDER BY CASE ((vt38.c0)>(vt38.c0))  WHEN ((vt38.c0)<>(0.6486159022238128)) THEN (~ (vt38.c0)) END);
SELECT COUNT(*) FROM vt38 WHERE (((vt38.c0) NOT BETWEEN (CAST(vt38.c0 AS INTEGER)) AND (((((vt38.c0)OR(vt38.c0)))OR(vt38.c0))))) ORDER BY CASE ((vt38.c0)>(vt38.c0))  WHEN ((vt38.c0)!=(0.6486159022238128)) THEN (~ (vt38.c0)) END;
SELECT SUM(count) FROM (SELECT ((((vt38.c0) NOT BETWEEN (CAST(vt38.c0 AS INTEGER)) AND (((((vt38.c0)OR(vt38.c0)))OR(vt38.c0))))) IS TRUE)  as count FROM vt38 ORDER BY CASE ((vt38.c0)>(vt38.c0))  WHEN ((vt38.c0)<>(0.6486159022238128)) THEN (~ (vt38.c0)) END);
SELECT COUNT(*) FROM vt38 WHERE (((vt38.c0) NOT BETWEEN (CAST(vt38.c0 AS INTEGER)) AND (((((vt38.c0)OR(vt38.c0)))OR(vt38.c0))))) ORDER BY CASE ((vt38.c0)>(vt38.c0))  WHEN ((vt38.c0)!=(0.6486159022238128)) THEN (~ (vt38.c0)) END;
SELECT ALL COUNT(*) FROM rt2, vt38, rt0 WHERE ((((CAST(rt0.c1 AS TEXT), (((rt2.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), rt0.c3 COLLATE BINARY))=((((((((((rt2.c2)AND(rt0.c1)))OR(rt2.c0)))OR(vt38.c0)))OR(rt2.c0)), CASE rt0.c2  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c2 END, (rt2.c2 IN (x'2c78'))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS TEXT), (((rt2.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), rt0.c3 COLLATE BINARY))==((((((((((rt2.c2)AND(rt0.c1)))OR(rt2.c0)))OR(vt38.c0)))OR(rt2.c0)), CASE rt0.c2  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c2 END, (rt2.c2 IN (x'2c78')))))) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT ALL COUNT(*) FROM rt2, vt38, rt0 WHERE ((((CAST(rt0.c1 AS TEXT), (((rt2.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), rt0.c3 COLLATE BINARY))=((((((((((rt2.c2)AND(rt0.c1)))OR(rt2.c0)))OR(vt38.c0)))OR(rt2.c0)), CASE rt0.c2  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c2 END, (rt2.c2 IN (x'2c78'))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS TEXT), (((rt2.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), rt0.c3 COLLATE BINARY))==((((((((((rt2.c2)AND(rt0.c1)))OR(rt2.c0)))OR(vt38.c0)))OR(rt2.c0)), CASE rt0.c2  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c2 END, (rt2.c2 IN (x'2c78')))))) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT ALL COUNT(*) FROM rt2, vt38, rt0 WHERE ((((CAST(rt0.c1 AS TEXT), (((rt2.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), rt0.c3 COLLATE BINARY))=((((((((((rt2.c2)AND(rt0.c1)))OR(rt2.c0)))OR(vt38.c0)))OR(rt2.c0)), CASE rt0.c2  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c2 END, (rt2.c2 IN (x'2c78'))))));
SELECT ALL * FROM vt38, rt2, rt1, rt0 WHERE (((rt1.c2) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt2, rt1, rt0);
SELECT ALL * FROM vt38, rt2, rt1, rt0 WHERE (((rt1.c2) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt2, rt1, rt0);
SELECT ALL * FROM vt38, rt2, rt1, rt0 WHERE (((rt1.c2) IS FALSE) COLLATE NOCASE);
SELECT COUNT(*) FROM vt38 WHERE (CAST(CAST(vt38.c0 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt38.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE (CAST(CAST(vt38.c0 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt38.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE (CAST(CAST(vt38.c0 AS BLOB) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, rt2, vt38 FULL OUTER JOIN rt1 ON ((rt1.c2)%(rt0.c3)) WHERE (CASE NULL  WHEN rt0.c2 COLLATE BINARY THEN ((rt2.c0) IS FALSE) ELSE rt2.c2 COLLATE RTRIM END) ORDER BY ((LIKE(rt0.c0, rt1.c1))<=(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c2 COLLATE BINARY THEN ((rt2.c0) IS FALSE) ELSE rt2.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, rt2, vt38 FULL OUTER JOIN rt1 ON ((rt1.c2)%(rt0.c3)) ORDER BY ((LIKE(rt0.c0, rt1.c1))<=(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2, vt38 FULL OUTER JOIN rt1 ON ((rt1.c2)%(rt0.c3)) WHERE (CASE NULL  WHEN rt0.c2 COLLATE BINARY THEN ((rt2.c0) IS FALSE) ELSE rt2.c2 COLLATE RTRIM END) ORDER BY ((LIKE(rt0.c0, rt1.c1))<=(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c2 COLLATE BINARY THEN ((rt2.c0) IS FALSE) ELSE rt2.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, rt2, vt38 FULL OUTER JOIN rt1 ON ((rt1.c2)%(rt0.c3)) ORDER BY ((LIKE(rt0.c0, rt1.c1))<=(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2, vt38 FULL OUTER JOIN rt1 ON ((rt1.c2)%(rt0.c3)) WHERE (CASE NULL  WHEN rt0.c2 COLLATE BINARY THEN ((rt2.c0) IS FALSE) ELSE rt2.c2 COLLATE RTRIM END) ORDER BY ((LIKE(rt0.c0, rt1.c1))<=(CAST(rt0.c1 AS INTEGER)))  NULLS LAST, CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt38 NATURAL JOIN rt1 WHERE (((((rt1.c1)<=(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<=(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt38 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt38 NATURAL JOIN rt1 WHERE (((((rt1.c1)<=(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<=(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt38 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt38 NATURAL JOIN rt1 WHERE (((((rt1.c1)<=(rt1.c2))) IS TRUE));
SELECT ALL * FROM vt38 CROSS JOIN rt0 ON (CAST(rt1.c4 AS NUMERIC) IN ()) CROSS JOIN rt2 ON ((CASE WHEN rt0.c0 THEN rt2.c1 ELSE rt0.c3 END) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c4 WHEN rt2.c0 THEN rt0.c2 ELSE vt38.c0 END)) FULL OUTER JOIN rt1 ON (((((((((rt0.c3)OR(rt0.c3)))OR(rt1.c1)))OR(rt0.c3)))OR(rt1.c0)) IN (((((rt0.c1)AND(vt38.c0)))AND(rt0.c0)), ((((rt2.c2)OR(rt0.c2)))AND(rt2.c2)))) WHERE ((- (((rt2.c1)>(x'de4d2e41'))))) ORDER BY (((rt1.c1) BETWEEN (rt1.c1) AND (rt2.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt2.c1)>(x'de4d2e41'))))) IS TRUE)  as count FROM vt38 CROSS JOIN rt0 ON (CAST(rt1.c4 AS NUMERIC) IN ()) CROSS JOIN rt2 ON ((CASE WHEN rt0.c0 THEN rt2.c1 ELSE rt0.c3 END) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c4 WHEN rt2.c0 THEN rt0.c2 ELSE vt38.c0 END)) FULL OUTER JOIN rt1 ON (((((((((rt0.c3)OR(rt0.c3)))OR(rt1.c1)))OR(rt0.c3)))OR(rt1.c0)) IN (((((rt0.c1)AND(vt38.c0)))AND(rt0.c0)), ((((rt2.c2)OR(rt0.c2)))AND(rt2.c2)))) ORDER BY (((rt1.c1) BETWEEN (rt1.c1) AND (rt2.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt38 CROSS JOIN rt0 ON (CAST(rt1.c4 AS NUMERIC) IN ()) CROSS JOIN rt2 ON ((CASE WHEN rt0.c0 THEN rt2.c1 ELSE rt0.c3 END) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c4 WHEN rt2.c0 THEN rt0.c2 ELSE vt38.c0 END)) FULL OUTER JOIN rt1 ON (((((((((rt0.c3)OR(rt0.c3)))OR(rt1.c1)))OR(rt0.c3)))OR(rt1.c0)) IN (((((rt0.c1)AND(vt38.c0)))AND(rt0.c0)), ((((rt2.c2)OR(rt0.c2)))AND(rt2.c2)))) WHERE ((- (((rt2.c1)>(x'de4d2e41'))))) ORDER BY (((rt1.c1) BETWEEN (rt1.c1) AND (rt2.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt2.c1)>(x'de4d2e41'))))) IS TRUE)  as count FROM vt38 CROSS JOIN rt0 ON (CAST(rt1.c4 AS NUMERIC) IN ()) CROSS JOIN rt2 ON ((CASE WHEN rt0.c0 THEN rt2.c1 ELSE rt0.c3 END) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c4 WHEN rt2.c0 THEN rt0.c2 ELSE vt38.c0 END)) FULL OUTER JOIN rt1 ON (((((((((rt0.c3)OR(rt0.c3)))OR(rt1.c1)))OR(rt0.c3)))OR(rt1.c0)) IN (((((rt0.c1)AND(vt38.c0)))AND(rt0.c0)), ((((rt2.c2)OR(rt0.c2)))AND(rt2.c2)))) ORDER BY (((rt1.c1) BETWEEN (rt1.c1) AND (rt2.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt38 CROSS JOIN rt0 ON (CAST(rt1.c4 AS NUMERIC) IN ()) CROSS JOIN rt2 ON ((CASE WHEN rt0.c0 THEN rt2.c1 ELSE rt0.c3 END) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c3 THEN rt1.c4 WHEN rt2.c0 THEN rt0.c2 ELSE vt38.c0 END)) FULL OUTER JOIN rt1 ON (((((((((rt0.c3)OR(rt0.c3)))OR(rt1.c1)))OR(rt0.c3)))OR(rt1.c0)) IN (((((rt0.c1)AND(vt38.c0)))AND(rt0.c0)), ((((rt2.c2)OR(rt0.c2)))AND(rt2.c2)))) WHERE ((- (((rt2.c1)>(x'de4d2e41'))))) ORDER BY (((rt1.c1) BETWEEN (rt1.c1) AND (rt2.c1)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt38 NOT INDEXED, rt0, rt1 WHERE (CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt38.c0)AND(rt0.c1)))AND(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)) WHEN STRFTIME(rt0.c0, rt0.c2, rt0.c3) THEN ((((rt1.c2)AND(vt38.c0)))OR(rt0.c2)) ELSE (NOT (rt0.c2)) END) ORDER BY ((LOWER(DISTINCT vt38.c0))/((rt0.c3 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt38.c0)AND(rt0.c1)))AND(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)) WHEN STRFTIME(rt0.c0, rt0.c2, rt0.c3) THEN ((((rt1.c2)AND(vt38.c0)))OR(rt0.c2)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM vt38, rt0, rt1 ORDER BY ((LOWER(DISTINCT vt38.c0))/((rt0.c3 IN ()))) ASC);
SELECT COUNT(*) FROM vt38 NOT INDEXED, rt0, rt1 WHERE (CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt38.c0)AND(rt0.c1)))AND(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)) WHEN STRFTIME(rt0.c0, rt0.c2, rt0.c3) THEN ((((rt1.c2)AND(vt38.c0)))OR(rt0.c2)) ELSE (NOT (rt0.c2)) END) ORDER BY ((LOWER(DISTINCT vt38.c0))/((rt0.c3 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt38.c0)AND(rt0.c1)))AND(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)) WHEN STRFTIME(rt0.c0, rt0.c2, rt0.c3) THEN ((((rt1.c2)AND(vt38.c0)))OR(rt0.c2)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM vt38, rt0, rt1 ORDER BY ((LOWER(DISTINCT vt38.c0))/((rt0.c3 IN ()))) ASC);
SELECT COUNT(*) FROM vt38 NOT INDEXED, rt0, rt1 WHERE (CASE ((rt1.c2) BETWEEN (rt1.c3) AND (rt0.c2))  WHEN CAST(rt0.c3 AS TEXT) THEN ((((vt38.c0)AND(rt0.c1)))AND(NULL)) WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)) WHEN STRFTIME(rt0.c0, rt0.c2, rt0.c3) THEN ((((rt1.c2)AND(vt38.c0)))OR(rt0.c2)) ELSE (NOT (rt0.c2)) END) ORDER BY ((LOWER(DISTINCT vt38.c0))/((rt0.c3 IN ()))) ASC;
SELECT COUNT(*) FROM rt2 WHERE (CASE ((1378944364) BETWEEN (rt2.c1) AND (rt2.c2))  WHEN PRINTF(rt2.c2) THEN ((rt2.c0)/(rt2.c0)) WHEN ((rt2.c0) IS TRUE) THEN rt2.c2 COLLATE BINARY WHEN (rt2.c2 IN ()) THEN ((((rt2.c1)AND(rt2.c0)))OR(rt2.c1)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)&(rt2.c0)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)<=(rt2.c2)) END) ORDER BY (((rt2.c2 IN ())) BETWEEN (CAST(rt2.c0 AS INTEGER)) AND (rt2.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((1378944364) BETWEEN (rt2.c1) AND (rt2.c2))  WHEN PRINTF(rt2.c2) THEN ((rt2.c0)/(rt2.c0)) WHEN ((rt2.c0) IS TRUE) THEN rt2.c2 COLLATE BINARY WHEN (rt2.c2 IN ()) THEN ((((rt2.c1)AND(rt2.c0)))OR(rt2.c1)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)&(rt2.c0)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)<=(rt2.c2)) END) IS TRUE)  as count FROM rt2 ORDER BY (((rt2.c2 IN ())) BETWEEN (CAST(rt2.c0 AS INTEGER)) AND (rt2.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt2 WHERE (CASE ((1378944364) BETWEEN (rt2.c1) AND (rt2.c2))  WHEN PRINTF(rt2.c2) THEN ((rt2.c0)/(rt2.c0)) WHEN ((rt2.c0) IS TRUE) THEN rt2.c2 COLLATE BINARY WHEN (rt2.c2 IN ()) THEN ((((rt2.c1)AND(rt2.c0)))OR(rt2.c1)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)&(rt2.c0)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)<=(rt2.c2)) END) ORDER BY (((rt2.c2 IN ())) BETWEEN (CAST(rt2.c0 AS INTEGER)) AND (rt2.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((1378944364) BETWEEN (rt2.c1) AND (rt2.c2))  WHEN PRINTF(rt2.c2) THEN ((rt2.c0)/(rt2.c0)) WHEN ((rt2.c0) IS TRUE) THEN rt2.c2 COLLATE BINARY WHEN (rt2.c2 IN ()) THEN ((((rt2.c1)AND(rt2.c0)))OR(rt2.c1)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)&(rt2.c0)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)<=(rt2.c2)) END) IS TRUE)  as count FROM rt2 ORDER BY (((rt2.c2 IN ())) BETWEEN (CAST(rt2.c0 AS INTEGER)) AND (rt2.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt2 WHERE (CASE ((1378944364) BETWEEN (rt2.c1) AND (rt2.c2))  WHEN PRINTF(rt2.c2) THEN ((rt2.c0)/(rt2.c0)) WHEN ((rt2.c0) IS TRUE) THEN rt2.c2 COLLATE BINARY WHEN (rt2.c2 IN ()) THEN ((((rt2.c1)AND(rt2.c0)))OR(rt2.c1)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)&(rt2.c0)) WHEN ((rt2.c1) IS TRUE) THEN ((rt2.c1)<=(rt2.c2)) END) ORDER BY (((rt2.c2 IN ())) BETWEEN (CAST(rt2.c0 AS INTEGER)) AND (rt2.c1 COLLATE NOCASE));
SELECT COUNT(*) FROM rt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (x'');
SELECT ALL COUNT(*) FROM vt38, rt0 WHERE (STRFTIME(((NULL) IS FALSE), ((rt0.c2) IS TRUE), ((x'23f5')&(rt0.c2)))) ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)), TYPEOF(DISTINCT rt0.c1), (((rt0.c1))>((rt0.c2))))  NULLS LAST, CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((NULL) IS FALSE), ((rt0.c2) IS TRUE), ((x'23f5')&(rt0.c2)))) IS TRUE)  as count FROM vt38, rt0 ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)), TYPEOF(DISTINCT rt0.c1), (((rt0.c1))>((rt0.c2))))  NULLS LAST, CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38, rt0 WHERE (STRFTIME(((NULL) IS FALSE), ((rt0.c2) IS TRUE), ((x'23f5')&(rt0.c2)))) ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)), TYPEOF(DISTINCT rt0.c1), (((rt0.c1))>((rt0.c2))))  NULLS LAST, CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((NULL) IS FALSE), ((rt0.c2) IS TRUE), ((x'23f5')&(rt0.c2)))) IS TRUE)  as count FROM vt38, rt0 ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)), TYPEOF(DISTINCT rt0.c1), (((rt0.c1))>((rt0.c2))))  NULLS LAST, CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38, rt0 WHERE (STRFTIME(((NULL) IS FALSE), ((rt0.c2) IS TRUE), ((x'23f5')&(rt0.c2)))) ORDER BY COALESCE(DISTINCT rt0.c0 COLLATE BINARY, ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)), TYPEOF(DISTINCT rt0.c1), (((rt0.c1))>((rt0.c2))))  NULLS LAST, CAST(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((((0.6740283820768866) IS TRUE))>(CASE rt1.c4  WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt2.c2 END))) ORDER BY (((rt2.c1)*(0.8126808089343531)) IN ((rt1.c3 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.6740283820768866) IS TRUE))>(CASE rt1.c4  WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt2.c2 END))) IS TRUE)  as count FROM rt2, rt1 NOT INDEXED ORDER BY (((rt2.c1)*(0.8126808089343531)) IN ((rt1.c3 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((((0.6740283820768866) IS TRUE))>(CASE rt1.c4  WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt2.c2 END))) ORDER BY (((rt2.c1)*(0.8126808089343531)) IN ((rt1.c3 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.6740283820768866) IS TRUE))>(CASE rt1.c4  WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt2.c2 END))) IS TRUE)  as count FROM rt2, rt1 NOT INDEXED ORDER BY (((rt2.c1)*(0.8126808089343531)) IN ((rt1.c3 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((((0.6740283820768866) IS TRUE))>(CASE rt1.c4  WHEN rt1.c0 THEN x'' WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 ELSE rt2.c2 END))) ORDER BY (((rt2.c1)*(0.8126808089343531)) IN ((rt1.c3 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2 INNER JOIN vt38 ON ((CASE WHEN rt2.c0 THEN rt2.c0 END)>=((rt2.c0 IN ()))) WHERE (CASE ((rt2.c0) IS TRUE)  WHEN rt2.c2 COLLATE NOCASE THEN CAST(rt2.c0 AS BLOB) WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (vt38.c0)) THEN rt2.c0 COLLATE RTRIM WHEN '''UL\nG' THEN (((rt2.c0))>=((vt38.c0))) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt2.c0) IS TRUE)  WHEN rt2.c2 COLLATE NOCASE THEN CAST(rt2.c0 AS BLOB) WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (vt38.c0)) THEN rt2.c0 COLLATE RTRIM WHEN '''UL\nG' THEN (((rt2.c0))>=((vt38.c0))) ELSE NULL END) IS TRUE)  as count FROM rt2 INNER JOIN vt38 ON ((CASE WHEN rt2.c0 THEN rt2.c0 END)>=((rt2.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt2 INNER JOIN vt38 ON ((CASE WHEN rt2.c0 THEN rt2.c0 END)>=((rt2.c0 IN ()))) WHERE (CASE ((rt2.c0) IS TRUE)  WHEN rt2.c2 COLLATE NOCASE THEN CAST(rt2.c0 AS BLOB) WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (vt38.c0)) THEN rt2.c0 COLLATE RTRIM WHEN '''UL\nG' THEN (((rt2.c0))>=((vt38.c0))) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt2.c0) IS TRUE)  WHEN rt2.c2 COLLATE NOCASE THEN CAST(rt2.c0 AS BLOB) WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (vt38.c0)) THEN rt2.c0 COLLATE RTRIM WHEN '''UL\nG' THEN (((rt2.c0))>=((vt38.c0))) ELSE NULL END) IS TRUE)  as count FROM rt2 INNER JOIN vt38 ON ((CASE WHEN rt2.c0 THEN rt2.c0 END)>=((rt2.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt2 INNER JOIN vt38 ON ((CASE WHEN rt2.c0 THEN rt2.c0 END)>=((rt2.c0 IN ()))) WHERE (CASE ((rt2.c0) IS TRUE)  WHEN rt2.c2 COLLATE NOCASE THEN CAST(rt2.c0 AS BLOB) WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (vt38.c0)) THEN rt2.c0 COLLATE RTRIM WHEN '''UL\nG' THEN (((rt2.c0))>=((vt38.c0))) ELSE NULL END);
SELECT ALL COUNT(*) FROM rt1, rt0, vt38, rt2 WHERE (CASE rt1.c3 COLLATE RTRIM  WHEN (~ (rt2.c0)) THEN ((rt0.c3)||(rt0.c3)) WHEN CASE WHEN rt2.c0 THEN rt1.c3 END THEN CASE WHEN rt2.c2 THEN vt38.c0 END WHEN CASE WHEN rt2.c2 THEN rt1.c4 END THEN vt38.c0 ELSE rt2.c0 END) ORDER BY (((~ (rt2.c0)))>=(CAST(rt2.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3 COLLATE RTRIM  WHEN (~ (rt2.c0)) THEN ((rt0.c3)||(rt0.c3)) WHEN CASE WHEN rt2.c0 THEN rt1.c3 END THEN CASE WHEN rt2.c2 THEN vt38.c0 END WHEN CASE WHEN rt2.c2 THEN rt1.c4 END THEN vt38.c0 ELSE rt2.c0 END) IS TRUE)  as count FROM rt1, rt0, vt38, rt2 ORDER BY (((~ (rt2.c0)))>=(CAST(rt2.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt38, rt2 WHERE (CASE rt1.c3 COLLATE RTRIM  WHEN (~ (rt2.c0)) THEN ((rt0.c3)||(rt0.c3)) WHEN CASE WHEN rt2.c0 THEN rt1.c3 END THEN CASE WHEN rt2.c2 THEN vt38.c0 END WHEN CASE WHEN rt2.c2 THEN rt1.c4 END THEN vt38.c0 ELSE rt2.c0 END) ORDER BY (((~ (rt2.c0)))>=(CAST(rt2.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3 COLLATE RTRIM  WHEN (~ (rt2.c0)) THEN ((rt0.c3)||(rt0.c3)) WHEN CASE WHEN rt2.c0 THEN rt1.c3 END THEN CASE WHEN rt2.c2 THEN vt38.c0 END WHEN CASE WHEN rt2.c2 THEN rt1.c4 END THEN vt38.c0 ELSE rt2.c0 END) IS TRUE)  as count FROM rt1, rt0, vt38, rt2 ORDER BY (((~ (rt2.c0)))>=(CAST(rt2.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt38, rt2 WHERE (CASE rt1.c3 COLLATE RTRIM  WHEN (~ (rt2.c0)) THEN ((rt0.c3)||(rt0.c3)) WHEN CASE WHEN rt2.c0 THEN rt1.c3 END THEN CASE WHEN rt2.c2 THEN vt38.c0 END WHEN CASE WHEN rt2.c2 THEN rt1.c4 END THEN vt38.c0 ELSE rt2.c0 END) ORDER BY (((~ (rt2.c0)))>=(CAST(rt2.c0 AS BLOB)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt38 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (((rt1.c3)|(rt0.c1))) AND ((NOT (vt38.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM)+(CAST(0.5844602217747935 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) BETWEEN (((rt1.c3)|(rt0.c1))) AND ((NOT (vt38.c0))))) IS TRUE)  as count FROM rt0, rt1, vt38 ORDER BY ((rt1.c1 COLLATE RTRIM)+(CAST(0.5844602217747935 AS BLOB))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt38 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (((rt1.c3)|(rt0.c1))) AND ((NOT (vt38.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM)+(CAST(0.5844602217747935 AS BLOB))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) BETWEEN (((rt1.c3)|(rt0.c1))) AND ((NOT (vt38.c0))))) IS TRUE)  as count FROM rt0, rt1, vt38 ORDER BY ((rt1.c1 COLLATE RTRIM)+(CAST(0.5844602217747935 AS BLOB))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt38 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (((rt1.c3)|(rt0.c1))) AND ((NOT (vt38.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM)+(CAST(0.5844602217747935 AS BLOB))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON CASE WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt1.c4)) THEN CASE rt1.c3  WHEN rt0.c3 THEN rt0.c1 END END WHERE (((((((rt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))<((((rt0.c1)*(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))<((((rt0.c1)*(rt0.c1)))))) IS TRUE)  as count FROM rt1, rt2 INNER JOIN rt0 ON CASE WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt1.c4)) THEN CASE rt1.c3  WHEN rt0.c3 THEN rt0.c1 END END);
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON CASE WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt1.c4)) THEN CASE rt1.c3  WHEN rt0.c3 THEN rt0.c1 END END WHERE (((((((rt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))<((((rt0.c1)*(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))<((((rt0.c1)*(rt0.c1)))))) IS TRUE)  as count FROM rt1, rt2 INNER JOIN rt0 ON CASE WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt1.c4)) THEN CASE rt1.c3  WHEN rt0.c3 THEN rt0.c1 END END);
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON CASE WHEN ((rt2.c0) NOT BETWEEN (rt2.c1) AND (rt1.c4)) THEN CASE rt1.c3  WHEN rt0.c3 THEN rt0.c1 END END WHERE (((((((rt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))<((((rt0.c1)*(rt0.c1))))));
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (((rt2.c2) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt2.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt2, vt38, rt1);
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (((rt2.c2) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt2.c2) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt2, vt38, rt1);
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (((rt2.c2) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM rt2 WHERE (('-591271846' IN ((- (rt2.c1)), ((rt2.c2)<(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((('-591271846' IN ((- (rt2.c1)), ((rt2.c2)<(rt2.c0))))) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (('-591271846' IN ((- (rt2.c1)), ((rt2.c2)<(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((('-591271846' IN ((- (rt2.c1)), ((rt2.c2)<(rt2.c0))))) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (('-591271846' IN ((- (rt2.c1)), ((rt2.c2)<(rt2.c0)))));
SELECT ALL * FROM rt1, rt0 WHERE (x'c315') ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((x'c315') IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT ALL * FROM rt1, rt0 WHERE (x'c315') ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((x'c315') IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT ALL * FROM rt1, rt0 WHERE (x'c315') ORDER BY ((((((rt1.c1)AND(rt1.c1)))OR(rt0.c3))) BETWEEN (CAST(rt1.c2 AS TEXT)) AND ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c4)) AS INTEGER));
SELECT * FROM rt1, rt2, vt38, rt0 WHERE (((((147520796)OR(rt2.c1)))IS(((rt0.c0) NOTNULL)))) ORDER BY CAST((- (rt2.c2)) AS INTEGER)  NULLS LAST, ((rt2.c0)<(rt1.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((147520796)OR(rt2.c1)))IS(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, rt2, vt38, rt0 ORDER BY CAST((- (rt2.c2)) AS INTEGER)  NULLS LAST, ((rt2.c0)<(rt1.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt1, rt2, vt38, rt0 WHERE (((((147520796)OR(rt2.c1)))IS(((rt0.c0) NOTNULL)))) ORDER BY CAST((- (rt2.c2)) AS INTEGER)  NULLS LAST, ((rt2.c0)<(rt1.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((147520796)OR(rt2.c1)))IS(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, rt2, vt38, rt0 ORDER BY CAST((- (rt2.c2)) AS INTEGER)  NULLS LAST, ((rt2.c0)<(rt1.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt1, rt2, vt38, rt0 WHERE (((((147520796)OR(rt2.c1)))IS(((rt0.c0) NOTNULL)))) ORDER BY CAST((- (rt2.c2)) AS INTEGER)  NULLS LAST, ((rt2.c0)<(rt1.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM rt2, vt38, rt0 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT * FROM rt2, vt38, rt0 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT * FROM rt2, vt38, rt0 WHERE ((rt0.c2 IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x'0b82'))))GLOB(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x'0b82'))))GLOB(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x'0b82'))))GLOB(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x'0b82'))))GLOB(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((x'0b82'))))GLOB(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY rt1.c1 ASC;
SELECT ALL * FROM rt0, rt1, rt2 CROSS JOIN vt38 ON CASE WHEN LIKELIHOOD(rt2.c1, 0.5193694553551396) THEN CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c3 WHEN rt0.c0 THEN vt38.c0 END END WHERE ((((((rt0.c0))!=((vt38.c0))))%(((rt0.c1)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))!=((vt38.c0))))%(((rt0.c1)!=(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, rt2 CROSS JOIN vt38 ON CASE WHEN LIKELIHOOD(rt2.c1, 0.5193694553551396) THEN CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c3 WHEN rt0.c0 THEN vt38.c0 END END);
SELECT ALL * FROM rt0, rt1, rt2 CROSS JOIN vt38 ON CASE WHEN LIKELIHOOD(rt2.c1, 0.5193694553551396) THEN CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c3 WHEN rt0.c0 THEN vt38.c0 END END WHERE ((((((rt0.c0))!=((vt38.c0))))%(((rt0.c1)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))!=((vt38.c0))))%(((rt0.c1)!=(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, rt2 CROSS JOIN vt38 ON CASE WHEN LIKELIHOOD(rt2.c1, 0.5193694553551396) THEN CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c3 WHEN rt0.c0 THEN vt38.c0 END END);
SELECT ALL * FROM rt0, rt1, rt2 CROSS JOIN vt38 ON CASE WHEN LIKELIHOOD(rt2.c1, 0.5193694553551396) THEN CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c3 WHEN rt0.c0 THEN vt38.c0 END END WHERE ((((((rt0.c0))!=((vt38.c0))))%(((rt0.c1)!=(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1, rt2, vt38 WHERE ((~ ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, rt2, vt38);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2, vt38 WHERE ((~ ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, rt2, vt38);
SELECT ALL COUNT(*) FROM rt0, rt1, rt2, vt38 WHERE ((~ ((NOT (rt1.c0)))));
SELECT ALL * FROM rt1 NATURAL JOIN rt2 WHERE (rt2.c1) ORDER BY ((rt1.c4)<>(rt1.c4)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2 ORDER BY ((rt1.c4)!=(rt1.c4)) ASC);
SELECT ALL * FROM rt1 NATURAL JOIN rt2 WHERE (rt2.c1) ORDER BY ((rt1.c4)<>(rt1.c4)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2 ORDER BY ((rt1.c4)!=(rt1.c4)) ASC);
SELECT ALL * FROM rt1 NATURAL JOIN rt2 WHERE (rt2.c1) ORDER BY ((rt1.c4)<>(rt1.c4)) ASC;
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((1.457871111E9) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((1.457871111E9) IS TRUE)) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((1.457871111E9) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((1.457871111E9) IS TRUE)) IS TRUE)  as count FROM rt2, rt1);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((1.457871111E9) IS TRUE));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))||(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((((('￿FW\')AND(rt0.c0)))OR(rt0.c1)))<>(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))||(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((('￿FW\')AND(rt0.c0)))OR(rt0.c1)))!=(rt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))||(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((((('￿FW\')AND(rt0.c0)))OR(rt0.c1)))<>(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))||(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((('￿FW\')AND(rt0.c0)))OR(rt0.c1)))!=(rt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))||(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((((('￿FW\')AND(rt0.c0)))OR(rt0.c1)))<>(rt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt2 ON (((x''))<=((rt2.c2))) COLLATE RTRIM WHERE ((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ())) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON (((x''))<=((rt2.c2))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt2 ON (((x''))<=((rt2.c2))) COLLATE RTRIM WHERE ((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c0 IN ())) IS TRUE)  as count FROM rt1 INNER JOIN rt2 ON (((x''))<=((rt2.c2))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt2 ON (((x''))<=((rt2.c2))) COLLATE RTRIM WHERE ((rt1.c0 IN ()));
SELECT ALL COUNT(*) FROM rt1, rt2 CROSS JOIN vt38 ON CAST(rt0.c2 AS TEXT) COLLATE NOCASE INNER JOIN rt0 ON (- (rt1.c2)) WHERE (NULL) ORDER BY CASE WHEN rt2.c1 COLLATE NOCASE THEN -2088691048 WHEN rt1.c4 THEN IFNULL(rt0.c3, rt0.c1) WHEN rt1.c0 THEN ((rt0.c1)/(rt1.c3)) END  NULLS FIRST, (((rt1.c3)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt1.c2)<=(0.4354870367724467)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt2 CROSS JOIN vt38 ON CAST(rt0.c2 AS TEXT) COLLATE NOCASE INNER JOIN rt0 ON (- (rt1.c2)) ORDER BY CASE WHEN rt2.c1 COLLATE NOCASE THEN -2088691048 WHEN rt1.c4 THEN IFNULL(rt0.c3, rt0.c1) WHEN rt1.c0 THEN ((rt0.c1)/(rt1.c3)) END  NULLS FIRST, (((rt1.c3)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt1.c2)<=(0.4354870367724467)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt2 CROSS JOIN vt38 ON CAST(rt0.c2 AS TEXT) COLLATE NOCASE INNER JOIN rt0 ON (- (rt1.c2)) WHERE (NULL) ORDER BY CASE WHEN rt2.c1 COLLATE NOCASE THEN -2088691048 WHEN rt1.c4 THEN IFNULL(rt0.c3, rt0.c1) WHEN rt1.c0 THEN ((rt0.c1)/(rt1.c3)) END  NULLS FIRST, (((rt1.c3)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt1.c2)<=(0.4354870367724467)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt2 CROSS JOIN vt38 ON CAST(rt0.c2 AS TEXT) COLLATE NOCASE INNER JOIN rt0 ON (- (rt1.c2)) ORDER BY CASE WHEN rt2.c1 COLLATE NOCASE THEN -2088691048 WHEN rt1.c4 THEN IFNULL(rt0.c3, rt0.c1) WHEN rt1.c0 THEN ((rt0.c1)/(rt1.c3)) END  NULLS FIRST, (((rt1.c3)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt1.c2)<=(0.4354870367724467)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt2 CROSS JOIN vt38 ON CAST(rt0.c2 AS TEXT) COLLATE NOCASE INNER JOIN rt0 ON (- (rt1.c2)) WHERE (NULL) ORDER BY CASE WHEN rt2.c1 COLLATE NOCASE THEN -2088691048 WHEN rt1.c4 THEN IFNULL(rt0.c3, rt0.c1) WHEN rt1.c0 THEN ((rt0.c1)/(rt1.c3)) END  NULLS FIRST, (((rt1.c3)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((rt1.c2)<=(0.4354870367724467)))))  NULLS LAST;
SELECT COUNT(*) FROM vt38 NOT INDEXED INNER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1)))) BETWEEN (((rt1.c3) BETWEEN (rt2.c1) AND (rt0.c0))) AND (((((rt1.c1)AND(vt38.c0)))OR(rt1.c2)))) RIGHT OUTER JOIN rt1 ON ((vt38.c0 IN (rt0.c1)) IN ()) CROSS JOIN rt2 ON ((rt1.c4) IS FALSE) COLLATE NOCASE COLLATE BINARY WHERE (((CAST(rt2.c0 AS TEXT))>(((rt2.c2) BETWEEN (rt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt2.c0 AS TEXT))>(((rt2.c2) BETWEEN (rt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt38 INNER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1)))) BETWEEN (((rt1.c3) BETWEEN (rt2.c1) AND (rt0.c0))) AND (((((rt1.c1)AND(vt38.c0)))OR(rt1.c2)))) RIGHT OUTER JOIN rt1 ON ((vt38.c0 IN (rt0.c1)) IN ()) CROSS JOIN rt2 ON ((rt1.c4) IS FALSE) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM vt38 NOT INDEXED INNER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1)))) BETWEEN (((rt1.c3) BETWEEN (rt2.c1) AND (rt0.c0))) AND (((((rt1.c1)AND(vt38.c0)))OR(rt1.c2)))) RIGHT OUTER JOIN rt1 ON ((vt38.c0 IN (rt0.c1)) IN ()) CROSS JOIN rt2 ON ((rt1.c4) IS FALSE) COLLATE NOCASE COLLATE BINARY WHERE (((CAST(rt2.c0 AS TEXT))>(((rt2.c2) BETWEEN (rt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt2.c0 AS TEXT))>(((rt2.c2) BETWEEN (rt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt38 INNER JOIN rt0 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1)))) BETWEEN (((rt1.c3) BETWEEN (rt2.c1) AND (rt0.c0))) AND (((((rt1.c1)AND(vt38.c0)))OR(rt1.c2)))) RIGHT OUTER JOIN rt1 ON ((vt38.c0 IN (rt0.c1)) IN ()) CROSS JOIN rt2 ON ((rt1.c4) IS FALSE) COLLATE NOCASE COLLATE BINARY);
SELECT COUNT(*) FROM rt2 WHERE (rt2.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt2.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (rt2.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt2.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (rt2.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM rt2, vt38, rt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN (((((rt1.c1, vt38.c0, rt1.c0))>((rt0.c2, rt1.c1, rt2.c0))))) AND ((json_array_length('Hm', rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN (((((rt1.c1, vt38.c0, rt1.c0))>((rt0.c2, rt1.c1, rt2.c0))))) AND ((json_array_length('Hm', rt0.c1))))) IS TRUE)  as count FROM rt2, vt38, rt0, rt1);
SELECT COUNT(*) FROM rt2, vt38, rt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN (((((rt1.c1, vt38.c0, rt1.c0))>((rt0.c2, rt1.c1, rt2.c0))))) AND ((json_array_length('Hm', rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN (((((rt1.c1, vt38.c0, rt1.c0))>((rt0.c2, rt1.c1, rt2.c0))))) AND ((json_array_length('Hm', rt0.c1))))) IS TRUE)  as count FROM rt2, vt38, rt0, rt1);
SELECT COUNT(*) FROM rt2, vt38, rt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN (((((rt1.c1, vt38.c0, rt1.c0))>((rt0.c2, rt1.c1, rt2.c0))))) AND ((json_array_length('Hm', rt0.c1)))));
SELECT ALL COUNT(*) FROM vt38, rt2, rt1, rt0 WHERE ((((rt1.c3, rt0.c1, rt0.c2)) BETWEEN ((NULL, '	7', ((rt0.c1) IS FALSE))) AND (((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt1.c2) IS TRUE))))) ORDER BY CASE rt2.c2 COLLATE BINARY  WHEN rt1.c3 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE ((rt1.c1)<=(0.8136372829234307)) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt0.c1, rt0.c2)) BETWEEN ((NULL, '	7', ((rt0.c1) IS FALSE))) AND (((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt1.c2) IS TRUE))))) IS TRUE)  as count FROM vt38, rt2, rt1, rt0 ORDER BY CASE rt2.c2 COLLATE BINARY  WHEN rt1.c3 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE ((rt1.c1)<=(0.8136372829234307)) END DESC);
SELECT ALL COUNT(*) FROM vt38, rt2, rt1, rt0 WHERE ((((rt1.c3, rt0.c1, rt0.c2)) BETWEEN ((NULL, '	7', ((rt0.c1) IS FALSE))) AND (((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt1.c2) IS TRUE))))) ORDER BY CASE rt2.c2 COLLATE BINARY  WHEN rt1.c3 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE ((rt1.c1)<=(0.8136372829234307)) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt0.c1, rt0.c2)) BETWEEN ((NULL, '	7', ((rt0.c1) IS FALSE))) AND (((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt1.c2) IS TRUE))))) IS TRUE)  as count FROM vt38, rt2, rt1, rt0 ORDER BY CASE rt2.c2 COLLATE BINARY  WHEN rt1.c3 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE ((rt1.c1)<=(0.8136372829234307)) END DESC);
SELECT ALL COUNT(*) FROM vt38, rt2, rt1, rt0 WHERE ((((rt1.c3, rt0.c1, rt0.c2)) BETWEEN ((NULL, '	7', ((rt0.c1) IS FALSE))) AND (((((rt0.c1))<((rt0.c0))), CAST(rt0.c3 AS NUMERIC), ((rt1.c2) IS TRUE))))) ORDER BY CASE rt2.c2 COLLATE BINARY  WHEN rt1.c3 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE ((rt1.c1)<=(0.8136372829234307)) END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c1 COLLATE NOCASE)))AND('#&s')))OR(((rt0.c0)IS NOT(rt0.c1)))))AND((rt0.c0 IN ())))) ORDER BY CAST(((((((((((((rt0.c2)AND('-1394126322')))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(NULL)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c1 COLLATE NOCASE)))AND('#&s')))OR(((rt0.c0)IS NOT(rt0.c1)))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((((((rt0.c2)AND('-1394126322')))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(NULL)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c1 COLLATE NOCASE)))AND('#&s')))OR(((rt0.c0)IS NOT(rt0.c1)))))AND((rt0.c0 IN ())))) ORDER BY CAST(((((((((((((rt0.c2)AND('-1394126322')))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(NULL)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c1 COLLATE NOCASE)))AND('#&s')))OR(((rt0.c0)IS NOT(rt0.c1)))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((((((rt0.c2)AND('-1394126322')))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(NULL)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c1 COLLATE NOCASE)))AND('#&s')))OR(((rt0.c0)IS NOT(rt0.c1)))))AND((rt0.c0 IN ())))) ORDER BY CAST(((((((((((((rt0.c2)AND('-1394126322')))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(NULL)) AS BLOB) ASC;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1) COLLATE NOCASE WHERE ((((rt1.c3 IN (rt1.c1, rt1.c4)))LIKE(CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN (rt1.c1, rt1.c4)))LIKE(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1) COLLATE NOCASE WHERE ((((rt1.c3 IN (rt1.c1, rt1.c4)))LIKE(CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN (rt1.c1, rt1.c4)))LIKE(CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON LOWER(DISTINCT rt0.c1) COLLATE NOCASE WHERE ((((rt1.c3 IN (rt1.c1, rt1.c4)))LIKE(CAST(rt1.c3 AS BLOB))));
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c4)OR(rt1.c0)))AND(rt1.c3)) AS NUMERIC));
SELECT ALL * FROM vt38, rt0, rt1 NOT INDEXED WHERE (CAST(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)) AS TEXT)) ORDER BY ((((((rt1.c3))<=((rt1.c3)))))<((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt38, rt0, rt1 ORDER BY ((((((rt1.c3))<=((rt1.c3)))))<((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0))))));
SELECT ALL * FROM vt38, rt0, rt1 NOT INDEXED WHERE (CAST(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)) AS TEXT)) ORDER BY ((((((rt1.c3))<=((rt1.c3)))))<((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt38, rt0, rt1 ORDER BY ((((((rt1.c3))<=((rt1.c3)))))<((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0))))));
SELECT ALL * FROM vt38, rt0, rt1 NOT INDEXED WHERE (CAST(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)) AS TEXT)) ORDER BY ((((((rt1.c3))<=((rt1.c3)))))<((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c0)))));
SELECT COUNT(*) FROM vt38, rt0 WHERE (((vt38.c0)/(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((vt38.c0)/(rt0.c3))) IS TRUE)  as count FROM vt38, rt0);
SELECT COUNT(*) FROM vt38, rt0 WHERE (((vt38.c0)/(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((vt38.c0)/(rt0.c3))) IS TRUE)  as count FROM vt38, rt0);
SELECT COUNT(*) FROM vt38, rt0 WHERE (((vt38.c0)/(rt0.c3)));
SELECT COUNT(*) FROM vt38, rt1 WHERE ((((('5trule')<=(vt38.c0))) IS TRUE)) ORDER BY ((((((((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(0.40156570773154443)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (NULL) AND (((rt1.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((('5trule')<=(vt38.c0))) IS TRUE)) IS TRUE)  as count FROM vt38, rt1 ORDER BY ((((((((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(0.40156570773154443)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (NULL) AND (((rt1.c2) NOTNULL))));
SELECT COUNT(*) FROM vt38, rt1 WHERE ((((('5trule')<=(vt38.c0))) IS TRUE)) ORDER BY ((((((((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(0.40156570773154443)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (NULL) AND (((rt1.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL (((((('5trule')<=(vt38.c0))) IS TRUE)) IS TRUE)  as count FROM vt38, rt1 ORDER BY ((((((((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(0.40156570773154443)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (NULL) AND (((rt1.c2) NOTNULL))));
SELECT COUNT(*) FROM vt38, rt1 WHERE ((((('5trule')<=(vt38.c0))) IS TRUE)) ORDER BY ((((((((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c2)))OR(0.40156570773154443)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (NULL) AND (((rt1.c2) NOTNULL)));
SELECT ALL * FROM rt2 WHERE (rt2.c0) ORDER BY ((((((((rt2.c0 COLLATE RTRIM)AND(NULL)))AND((((rt2.c1, rt2.c0, rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((rt2.c1, rt2.c0, rt2.c1, rt2.c0, rt2.c1)) AND ((rt2.c0, rt2.c2, rt2.c1, rt2.c0, rt2.c1))))))AND(((((((((rt2.c1)AND(rt2.c0)))OR(rt2.c2)))OR(rt2.c0)))OR(rt2.c1)))))AND((- (rt2.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM rt2 ORDER BY ((((((((rt2.c0 COLLATE RTRIM)AND(NULL)))AND((((rt2.c1, rt2.c0, rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((rt2.c1, rt2.c0, rt2.c1, rt2.c0, rt2.c1)) AND ((rt2.c0, rt2.c2, rt2.c1, rt2.c0, rt2.c1))))))AND(((((((((rt2.c1)AND(rt2.c0)))OR(rt2.c2)))OR(rt2.c0)))OR(rt2.c1)))))AND((- (rt2.c1)))));
SELECT ALL * FROM rt2 WHERE (rt2.c0) ORDER BY ((((((((rt2.c0 COLLATE RTRIM)AND(NULL)))AND((((rt2.c1, rt2.c0, rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((rt2.c1, rt2.c0, rt2.c1, rt2.c0, rt2.c1)) AND ((rt2.c0, rt2.c2, rt2.c1, rt2.c0, rt2.c1))))))AND(((((((((rt2.c1)AND(rt2.c0)))OR(rt2.c2)))OR(rt2.c0)))OR(rt2.c1)))))AND((- (rt2.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM rt2 ORDER BY ((((((((rt2.c0 COLLATE RTRIM)AND(NULL)))AND((((rt2.c1, rt2.c0, rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((rt2.c1, rt2.c0, rt2.c1, rt2.c0, rt2.c1)) AND ((rt2.c0, rt2.c2, rt2.c1, rt2.c0, rt2.c1))))))AND(((((((((rt2.c1)AND(rt2.c0)))OR(rt2.c2)))OR(rt2.c0)))OR(rt2.c1)))))AND((- (rt2.c1)))));
SELECT ALL * FROM rt2 WHERE (rt2.c0) ORDER BY ((((((((rt2.c0 COLLATE RTRIM)AND(NULL)))AND((((rt2.c1, rt2.c0, rt2.c2, rt2.c0, rt2.c2)) BETWEEN ((rt2.c1, rt2.c0, rt2.c1, rt2.c0, rt2.c1)) AND ((rt2.c0, rt2.c2, rt2.c1, rt2.c0, rt2.c1))))))AND(((((((((rt2.c1)AND(rt2.c0)))OR(rt2.c2)))OR(rt2.c0)))OR(rt2.c1)))))AND((- (rt2.c1))));
SELECT ALL * FROM rt1, rt0 WHERE (1.415559045E9) ORDER BY (~ (CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((1.415559045E9) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt1, rt0 WHERE (1.415559045E9) ORDER BY (~ (CAST(rt0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((1.415559045E9) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt1, rt0 WHERE (1.415559045E9) ORDER BY (~ (CAST(rt0.c2 AS TEXT)));
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (((((((((rt1.c0)AND(rt2.c2)))AND(NULL)))OR(((rt2.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))AND(((rt2.c2)==(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)AND(rt2.c2)))AND(NULL)))OR(((rt2.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))AND(((rt2.c2)=(rt2.c0))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (((((((((rt1.c0)AND(rt2.c2)))AND(NULL)))OR(((rt2.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))AND(((rt2.c2)==(rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)AND(rt2.c2)))AND(NULL)))OR(((rt2.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))AND(((rt2.c2)=(rt2.c0))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (((((((((rt1.c0)AND(rt2.c2)))AND(NULL)))OR(((rt2.c0) BETWEEN (rt1.c3) AND (rt1.c2)))))AND(((rt2.c2)==(rt2.c0)))));
SELECT ALL * FROM rt1, rt0 WHERE ('1457871111') ORDER BY CAST((rt1.c1 IN ()) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1457871111') IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((rt1.c1 IN ()) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ('1457871111') ORDER BY CAST((rt1.c1 IN ()) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1457871111') IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((rt1.c1 IN ()) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ('1457871111') ORDER BY CAST((rt1.c1 IN ()) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((TRIM(rt1.c2))OR((NOT (rt1.c4)))))AND(((rt1.c0)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(rt1.c2))OR((NOT (rt1.c4)))))AND(((rt1.c0)IS(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((TRIM(rt1.c2))OR((NOT (rt1.c4)))))AND(((rt1.c0)IS(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(rt1.c2))OR((NOT (rt1.c4)))))AND(((rt1.c0)IS(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((TRIM(rt1.c2))OR((NOT (rt1.c4)))))AND(((rt1.c0)IS(rt1.c0)))));
SELECT ALL * FROM rt2 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)<=(((((((((rt0.c0)OR(rt0.c3)))AND(rt2.c2)))AND(x'4b19')))OR(rt0.c3)))) WHERE (NULL) ORDER BY 0.9176095397457584  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)<=(((((((((rt0.c0)OR(rt0.c3)))AND(rt2.c2)))AND(x'4b19')))OR(rt0.c3)))) ORDER BY 0.9176095397457584  NULLS LAST);
SELECT ALL * FROM rt2 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)<=(((((((((rt0.c0)OR(rt0.c3)))AND(rt2.c2)))AND(x'4b19')))OR(rt0.c3)))) WHERE (NULL) ORDER BY 0.9176095397457584  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)<=(((((((((rt0.c0)OR(rt0.c3)))AND(rt2.c2)))AND(x'4b19')))OR(rt0.c3)))) ORDER BY 0.9176095397457584  NULLS LAST);
SELECT ALL * FROM rt2 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)<=(((((((((rt0.c0)OR(rt0.c3)))AND(rt2.c2)))AND(x'4b19')))OR(rt0.c3)))) WHERE (NULL) ORDER BY 0.9176095397457584  NULLS LAST;
SELECT ALL * FROM rt0, rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c2)%(rt2.c2)))||(((rt2.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) WHERE (LTRIM(((rt1.c2)*(rt2.c0)), ((('-867448888', rt0.c0, rt2.c2)) BETWEEN ((rt0.c1, rt0.c2, rt2.c1)) AND ((rt0.c1, rt0.c1, rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt1.c2)*(rt2.c0)), ((('-867448888', rt0.c0, rt2.c2)) BETWEEN ((rt0.c1, rt0.c2, rt2.c1)) AND ((rt0.c1, rt0.c1, rt1.c0))))) IS TRUE)  as count FROM rt0, rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c2)%(rt2.c2)))||(((rt2.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL * FROM rt0, rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c2)%(rt2.c2)))||(((rt2.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) WHERE (LTRIM(((rt1.c2)*(rt2.c0)), ((('-867448888', rt0.c0, rt2.c2)) BETWEEN ((rt0.c1, rt0.c2, rt2.c1)) AND ((rt0.c1, rt0.c1, rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt1.c2)*(rt2.c0)), ((('-867448888', rt0.c0, rt2.c2)) BETWEEN ((rt0.c1, rt0.c2, rt2.c1)) AND ((rt0.c1, rt0.c1, rt1.c0))))) IS TRUE)  as count FROM rt0, rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c2)%(rt2.c2)))||(((rt2.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL * FROM rt0, rt2 LEFT OUTER JOIN rt1 ON ((((rt2.c2)%(rt2.c2)))||(((rt2.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) WHERE (LTRIM(((rt1.c2)*(rt2.c0)), ((('-867448888', rt0.c0, rt2.c2)) BETWEEN ((rt0.c1, rt0.c2, rt2.c1)) AND ((rt0.c1, rt0.c1, rt1.c0)))));
SELECT COUNT(*) FROM vt38, rt2, rt1 WHERE ((((((rt2.c1)OR(rt2.c2)))AND(rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt2.c1)OR(rt2.c2)))AND(rt1.c3)) IN ())) IS TRUE)  as count FROM vt38, rt2, rt1);
SELECT COUNT(*) FROM vt38, rt2, rt1 WHERE ((((((rt2.c1)OR(rt2.c2)))AND(rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt2.c1)OR(rt2.c2)))AND(rt1.c3)) IN ())) IS TRUE)  as count FROM vt38, rt2, rt1);
SELECT COUNT(*) FROM vt38, rt2, rt1 WHERE ((((((rt2.c1)OR(rt2.c2)))AND(rt1.c3)) IN ()));
SELECT ALL * FROM rt1 NATURAL JOIN rt2 WHERE (((((rt2.c0) NOTNULL)) NOT NULL)) ORDER BY (((rt2.c0 IN ())) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2 ORDER BY (((rt2.c0 IN ())) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt1 NATURAL JOIN rt2 WHERE (((((rt2.c0) NOTNULL)) NOT NULL)) ORDER BY (((rt2.c0 IN ())) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2 ORDER BY (((rt2.c0 IN ())) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt1 NATURAL JOIN rt2 WHERE (((((rt2.c0) NOTNULL)) NOT NULL)) ORDER BY (((rt2.c0 IN ())) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt38, rt2, rt0 WHERE (CAST((rt0.c0 IN (rt2.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt2.c0)) AS TEXT)) IS TRUE)  as count FROM vt38, rt2, rt0);
SELECT COUNT(*) FROM vt38, rt2, rt0 WHERE (CAST((rt0.c0 IN (rt2.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt2.c0)) AS TEXT)) IS TRUE)  as count FROM vt38, rt2, rt0);
SELECT COUNT(*) FROM vt38, rt2, rt0 WHERE (CAST((rt0.c0 IN (rt2.c0)) AS TEXT));
SELECT ALL * FROM vt38, rt2, rt1 WHERE ((((rt2.c1)) BETWEEN ((0.7834144109778373)) AND ((((((rt1.c1)OR(rt2.c0)))AND(rt2.c2)))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((rt2.c1)) BETWEEN ((0.7834144109778373)) AND ((((((rt1.c1)OR(rt2.c0)))AND(rt2.c2)))))) IS TRUE)  as count FROM vt38, rt2, rt1 ORDER BY x'');
SELECT ALL * FROM vt38, rt2, rt1 WHERE ((((rt2.c1)) BETWEEN ((0.7834144109778373)) AND ((((((rt1.c1)OR(rt2.c0)))AND(rt2.c2)))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((rt2.c1)) BETWEEN ((0.7834144109778373)) AND ((((((rt1.c1)OR(rt2.c0)))AND(rt2.c2)))))) IS TRUE)  as count FROM vt38, rt2, rt1 ORDER BY x'');
SELECT ALL * FROM vt38, rt2, rt1 WHERE ((((rt2.c1)) BETWEEN ((0.7834144109778373)) AND ((((((rt1.c1)OR(rt2.c0)))AND(rt2.c2)))))) ORDER BY x'';
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c3) IS TRUE))*(((((rt0.c1)AND('')))OR(rt0.c0))))) ORDER BY 0x18e24bef;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE))*(((((rt0.c1)AND('')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0x18e24bef);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c3) IS TRUE))*(((((rt0.c1)AND('')))OR(rt0.c0))))) ORDER BY 0x18e24bef;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE))*(((((rt0.c1)AND('')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0x18e24bef);
SELECT COUNT(*) FROM rt1, vt38, rt0, rt2 WHERE (x'') ORDER BY ((CASE WHEN '64219982' THEN rt1.c1 ELSE rt0.c3 END) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt38, rt0, rt2 ORDER BY ((CASE WHEN '64219982' THEN rt1.c1 ELSE rt0.c3 END) IS TRUE) ASC);
SELECT COUNT(*) FROM rt1, vt38, rt0, rt2 WHERE (x'') ORDER BY ((CASE WHEN '64219982' THEN rt1.c1 ELSE rt0.c3 END) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, vt38, rt0, rt2 ORDER BY ((CASE WHEN '64219982' THEN rt1.c1 ELSE rt0.c3 END) IS TRUE) ASC);
SELECT COUNT(*) FROM rt1, vt38, rt0, rt2 WHERE (x'') ORDER BY ((CASE WHEN '64219982' THEN rt1.c1 ELSE rt0.c3 END) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt38, rt1, rt2 WHERE (((((((rt2.c0) NOT NULL))OR(((rt2.c2) BETWEEN (rt1.c4) AND (rt2.c0)))))OR(((rt1.c3) BETWEEN (0X63e5af9d) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c0) NOT NULL))OR(((rt2.c2) BETWEEN (rt1.c4) AND (rt2.c0)))))OR(((rt1.c3) BETWEEN (0X63e5af9d) AND (rt1.c2))))) IS TRUE)  as count FROM vt38, rt1, rt2);
SELECT ALL COUNT(*) FROM vt38, rt1, rt2 WHERE (((((((rt2.c0) NOT NULL))OR(((rt2.c2) BETWEEN (rt1.c4) AND (rt2.c0)))))OR(((rt1.c3) BETWEEN (0X63e5af9d) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c0) NOT NULL))OR(((rt2.c2) BETWEEN (rt1.c4) AND (rt2.c0)))))OR(((rt1.c3) BETWEEN (0X63e5af9d) AND (rt1.c2))))) IS TRUE)  as count FROM vt38, rt1, rt2);
SELECT ALL COUNT(*) FROM vt38, rt1, rt2 WHERE (((((((rt2.c0) NOT NULL))OR(((rt2.c2) BETWEEN (rt1.c4) AND (rt2.c0)))))OR(((rt1.c3) BETWEEN (0X63e5af9d) AND (rt1.c2)))));
SELECT ALL * FROM rt2, rt0, vt38, rt1 WHERE ((CAST(rt1.c2 AS BLOB) IN (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS BLOB) IN (rt1.c0))) IS TRUE)  as count FROM rt2, rt0, vt38, rt1);
SELECT ALL * FROM rt2, rt0, vt38, rt1 WHERE ((CAST(rt1.c2 AS BLOB) IN (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS BLOB) IN (rt1.c0))) IS TRUE)  as count FROM rt2, rt0, vt38, rt1);
SELECT ALL * FROM rt2, rt0, vt38, rt1 WHERE ((CAST(rt1.c2 AS BLOB) IN (rt1.c0)));
SELECT * FROM vt38, rt2, rt0 WHERE (((((((rt2.c1)OR(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt2.c0))=((rt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c1)OR(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt2.c0))=((rt2.c1)))))) IS TRUE)  as count FROM vt38, rt2, rt0);
SELECT * FROM vt38, rt2, rt0 WHERE (((((((rt2.c1)OR(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt2.c0))=((rt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c1)OR(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt2.c0))=((rt2.c1)))))) IS TRUE)  as count FROM vt38, rt2, rt0);
SELECT * FROM vt38, rt2, rt0 WHERE (((((((rt2.c1)OR(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt2.c0))=((rt2.c1))))));
SELECT * FROM rt2 RIGHT OUTER JOIN rt1 ON CAST('\r}' AS BLOB) WHERE ((- (((0.6378479729481984) NOT BETWEEN (rt2.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((0.6378479729481984) NOT BETWEEN (rt2.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt1 ON CAST('\r}' AS BLOB));
SELECT * FROM rt2 RIGHT OUTER JOIN rt1 ON CAST('\r}' AS BLOB) WHERE ((- (((0.6378479729481984) NOT BETWEEN (rt2.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((0.6378479729481984) NOT BETWEEN (rt2.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt1 ON CAST('\r}' AS BLOB));
SELECT * FROM rt2 RIGHT OUTER JOIN rt1 ON CAST('\r}' AS BLOB) WHERE ((- (((0.6378479729481984) NOT BETWEEN (rt2.c0) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1, vt38, rt0 WHERE (((1.672393496E9) BETWEEN (((rt0.c0) NOTNULL)) AND (x''))) ORDER BY CASE ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN json_array(rt0.c1, rt1.c3) WHEN 'B<5Q	Bl' THEN ((rt1.c0)<>(rt1.c3)) WHEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(0Xffffffffb2483605)))AND(0x1f1cb04d)) THEN IFNULL(vt38.c0, rt1.c3) END  NULLS LAST, (((((rt1.c1))<((rt1.c2)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((1.672393496E9) BETWEEN (((rt0.c0) NOTNULL)) AND (x''))) IS TRUE)  as count FROM rt1, vt38, rt0 ORDER BY CASE ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN json_array(rt0.c1, rt1.c3) WHEN 'B<5Q	Bl' THEN ((rt1.c0)!=(rt1.c3)) WHEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(0xffffffffb2483605)))AND(0x1f1cb04d)) THEN IFNULL(vt38.c0, rt1.c3) END  NULLS LAST, (((((rt1.c1))<((rt1.c2)))) ISNULL));
SELECT COUNT(*) FROM rt1, vt38, rt0 WHERE (((1.672393496E9) BETWEEN (((rt0.c0) NOTNULL)) AND (x''))) ORDER BY CASE ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN json_array(rt0.c1, rt1.c3) WHEN 'B<5Q	Bl' THEN ((rt1.c0)<>(rt1.c3)) WHEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(0Xffffffffb2483605)))AND(0x1f1cb04d)) THEN IFNULL(vt38.c0, rt1.c3) END  NULLS LAST, (((((rt1.c1))<((rt1.c2)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((1.672393496E9) BETWEEN (((rt0.c0) NOTNULL)) AND (x''))) IS TRUE)  as count FROM rt1, vt38, rt0 ORDER BY CASE ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN json_array(rt0.c1, rt1.c3) WHEN 'B<5Q	Bl' THEN ((rt1.c0)!=(rt1.c3)) WHEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))AND(0xffffffffb2483605)))AND(0x1f1cb04d)) THEN IFNULL(vt38.c0, rt1.c3) END  NULLS LAST, (((((rt1.c1))<((rt1.c2)))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, rt2, rt1, vt38 WHERE (rt0.c1) ORDER BY rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, rt2, rt1, vt38 ORDER BY rt1.c4  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1, vt38 WHERE (rt0.c1) ORDER BY rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, rt2, rt1, vt38 ORDER BY rt1.c4  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt2, rt1, vt38 WHERE (rt0.c1) ORDER BY rt1.c4  NULLS FIRST;
SELECT ALL * FROM rt1, vt38 WHERE ((- (LIKELIHOOD(rt1.c1, 0.38879392719064587))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(rt1.c1, 0.38879392719064587)))) IS TRUE)  as count FROM rt1, vt38);
SELECT ALL * FROM rt1, vt38 WHERE ((- (LIKELIHOOD(rt1.c1, 0.38879392719064587))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(rt1.c1, 0.38879392719064587)))) IS TRUE)  as count FROM rt1, vt38);
SELECT ALL * FROM rt1, vt38 WHERE ((- (LIKELIHOOD(rt1.c1, 0.38879392719064587))));
SELECT ALL * FROM rt2, rt0 INNER JOIN vt38 ON ((((- (rt2.c2))))!=((((rt2.c2)>>('BV'))))) WHERE ((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt2, rt0 INNER JOIN vt38 ON ((((- (rt2.c2))))!=((((rt2.c2)>>('BV'))))) ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM rt2, rt0 INNER JOIN vt38 ON ((((- (rt2.c2))))!=((((rt2.c2)>>('BV'))))) WHERE ((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt2, rt0 INNER JOIN vt38 ON ((((- (rt2.c2))))!=((((rt2.c2)>>('BV'))))) ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM rt2, rt0 INNER JOIN vt38 ON ((((- (rt2.c2))))!=((((rt2.c2)>>('BV'))))) WHERE ((- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM rt2, rt0 INNER JOIN rt1 ON (((rt0.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, ROUND(rt1.c4, rt0.c1), ((rt1.c4)>=(rt0.c0)))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt2.c1 WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c0 END, ((rt1.c1) ISNULL), (rt1.c1 IN (rt2.c2))))) INNER JOIN vt38 ON ((((NULL) NOTNULL))IS NOT(NULL)) WHERE (CAST('' AS BLOB)) ORDER BY ((((rt2.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)))-(rt0.c3 COLLATE BINARY)) DESC  NULLS LAST, CAST(TRIM(rt0.c2, rt2.c0) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS BLOB)) IS TRUE)  as count FROM rt2, rt0 INNER JOIN rt1 ON (((rt0.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, ROUND(rt1.c4, rt0.c1), ((rt1.c4)>=(rt0.c0)))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt2.c1 WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c0 END, ((rt1.c1) ISNULL), (rt1.c1 IN (rt2.c2))))) INNER JOIN vt38 ON ((((NULL) NOTNULL))IS NOT(NULL)) ORDER BY ((((rt2.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)))-(rt0.c3 COLLATE BINARY)) DESC  NULLS LAST, CAST(TRIM(rt0.c2, rt2.c0) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt2, rt0 INNER JOIN rt1 ON (((rt0.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, ROUND(rt1.c4, rt0.c1), ((rt1.c4)>=(rt0.c0)))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt2.c1 WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c0 END, ((rt1.c1) ISNULL), (rt1.c1 IN (rt2.c2))))) INNER JOIN vt38 ON ((((NULL) NOTNULL))IS NOT(NULL)) WHERE (CAST('' AS BLOB)) ORDER BY ((((rt2.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)))-(rt0.c3 COLLATE BINARY)) DESC  NULLS LAST, CAST(TRIM(rt0.c2, rt2.c0) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS BLOB)) IS TRUE)  as count FROM rt2, rt0 INNER JOIN rt1 ON (((rt0.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, ROUND(rt1.c4, rt0.c1), ((rt1.c4)>=(rt0.c0)))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt2.c1 WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c0 END, ((rt1.c1) ISNULL), (rt1.c1 IN (rt2.c2))))) INNER JOIN vt38 ON ((((NULL) NOTNULL))IS NOT(NULL)) ORDER BY ((((rt2.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)))-(rt0.c3 COLLATE BINARY)) DESC  NULLS LAST, CAST(TRIM(rt0.c2, rt2.c0) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt2, rt0 INNER JOIN rt1 ON (((rt0.c1, rt1.c1, rt0.c1)) NOT BETWEEN ((NULL, ROUND(rt1.c4, rt0.c1), ((rt1.c4)>=(rt0.c0)))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt2.c1 WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c0 END, ((rt1.c1) ISNULL), (rt1.c1 IN (rt2.c2))))) INNER JOIN vt38 ON ((((NULL) NOTNULL))IS NOT(NULL)) WHERE (CAST('' AS BLOB)) ORDER BY ((((rt2.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)))-(rt0.c3 COLLATE BINARY)) DESC  NULLS LAST, CAST(TRIM(rt0.c2, rt2.c0) AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM vt38, rt0 CROSS JOIN rt2 ON (- ((rt1.c1 IN ()))) LEFT OUTER JOIN rt1 ON (- ((rt1.c1 IN (rt1.c3)))) WHERE ((rt1.c0 COLLATE BINARY IN ())) ORDER BY ((((rt1.c0)<>(rt2.c1)))<=(CASE WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt38, rt0 CROSS JOIN rt2 ON (- ((rt1.c1 IN ()))) LEFT OUTER JOIN rt1 ON (- ((rt1.c1 IN (rt1.c3)))) ORDER BY ((((rt1.c0)<>(rt2.c1)))<=(CASE WHEN rt0.c2 THEN rt0.c1 END)));
SELECT * FROM vt38, rt0 CROSS JOIN rt2 ON (- ((rt1.c1 IN ()))) LEFT OUTER JOIN rt1 ON (- ((rt1.c1 IN (rt1.c3)))) WHERE ((rt1.c0 COLLATE BINARY IN ())) ORDER BY ((((rt1.c0)<>(rt2.c1)))<=(CASE WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt38, rt0 CROSS JOIN rt2 ON (- ((rt1.c1 IN ()))) LEFT OUTER JOIN rt1 ON (- ((rt1.c1 IN (rt1.c3)))) ORDER BY ((((rt1.c0)<>(rt2.c1)))<=(CASE WHEN rt0.c2 THEN rt0.c1 END)));
SELECT * FROM vt38, rt0 CROSS JOIN rt2 ON (- ((rt1.c1 IN ()))) LEFT OUTER JOIN rt1 ON (- ((rt1.c1 IN (rt1.c3)))) WHERE ((rt1.c0 COLLATE BINARY IN ())) ORDER BY ((((rt1.c0)<>(rt2.c1)))<=(CASE WHEN rt0.c2 THEN rt0.c1 END));
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE ((((rt1.c1 IN ())) NOT BETWEEN ((rt1.c4 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3))))) ORDER BY TRIM((((rt2.c2))<=((rt1.c1))), ((rt1.c4)<<(rt1.c0))) ASC, TRIM(((rt1.c3)IS(rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) NOT BETWEEN ((rt1.c4 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, rt2 ORDER BY TRIM((((rt2.c2))<=((rt1.c1))), ((rt1.c4)<<(rt1.c0))) ASC, TRIM(((rt1.c3)IS(rt1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE ((((rt1.c1 IN ())) NOT BETWEEN ((rt1.c4 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3))))) ORDER BY TRIM((((rt2.c2))<=((rt1.c1))), ((rt1.c4)<<(rt1.c0))) ASC, TRIM(((rt1.c3)IS(rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN ())) NOT BETWEEN ((rt1.c4 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, rt2 ORDER BY TRIM((((rt2.c2))<=((rt1.c1))), ((rt1.c4)<<(rt1.c0))) ASC, TRIM(((rt1.c3)IS(rt1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt2 WHERE ((((rt1.c1 IN ())) NOT BETWEEN ((rt1.c4 IN ())) AND (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3))))) ORDER BY TRIM((((rt2.c2))<=((rt1.c1))), ((rt1.c4)<<(rt1.c0))) ASC, TRIM(((rt1.c3)IS(rt1.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM rt2 WHERE (CAST(json_array_length(rt2.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(json_array_length(rt2.c1) AS TEXT)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (CAST(json_array_length(rt2.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(json_array_length(rt2.c1) AS TEXT)) IS TRUE)  as count FROM rt2);
SELECT ALL * FROM rt2 WHERE (CAST(json_array_length(rt2.c1) AS TEXT));
SELECT * FROM vt38 WHERE (CAST(vt38.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt38.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (CAST(vt38.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt38.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (CAST(vt38.c0 AS TEXT) COLLATE NOCASE);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (CASE WHEN CASE WHEN rt1.c4 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c0 END THEN (rt2.c1 IN (rt1.c0)) ELSE (+ (rt2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c4 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c0 END THEN (rt2.c1 IN (rt1.c0)) ELSE (+ (rt2.c0)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (CASE WHEN CASE WHEN rt1.c4 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c0 END THEN (rt2.c1 IN (rt1.c0)) ELSE (+ (rt2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c4 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c0 END THEN (rt2.c1 IN (rt1.c0)) ELSE (+ (rt2.c0)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN rt2);
SELECT * FROM rt1 NATURAL JOIN rt2 WHERE (CASE WHEN CASE WHEN rt1.c4 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c3 ELSE rt1.c0 END THEN (rt2.c1 IN (rt1.c0)) ELSE (+ (rt2.c0)) END);
SELECT COUNT(*) FROM rt1, rt2, vt38 WHERE ((~ (CAST(rt1.c4 AS INTEGER)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c4 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt2, vt38 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2, vt38 WHERE ((~ (CAST(rt1.c4 AS INTEGER)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c4 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt2, vt38 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2, vt38 WHERE ((~ (CAST(rt1.c4 AS INTEGER)))) ORDER BY x''  NULLS FIRST;
SELECT * FROM rt0, rt2 WHERE (NULL) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt2.c1 END AS TEXT) DESC, ((((rt2.c1)OR(CAST(rt0.c0 AS NUMERIC))))OR((((0.8839358615424403)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt2 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt2.c1 END AS TEXT) DESC, ((((rt2.c1)OR(CAST(rt0.c0 AS NUMERIC))))OR((((0.8839358615424403)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1))))));
SELECT * FROM rt0, rt2 WHERE (NULL) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt2.c1 END AS TEXT) DESC, ((((rt2.c1)OR(CAST(rt0.c0 AS NUMERIC))))OR((((0.8839358615424403)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt2 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt2.c1 END AS TEXT) DESC, ((((rt2.c1)OR(CAST(rt0.c0 AS NUMERIC))))OR((((0.8839358615424403)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1))))));
SELECT * FROM rt0, rt2 WHERE (NULL) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt2.c1 END AS TEXT) DESC, ((((rt2.c1)OR(CAST(rt0.c0 AS NUMERIC))))OR((((0.8839358615424403)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1)))));
SELECT ALL * FROM rt0, vt38, rt2 WHERE (((((vt38.c0)LIKE(rt2.c0))) IS TRUE)) ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (NULLIF(rt0.c1, rt2.c1)) AND (CASE WHEN rt0.c0 THEN rt2.c2 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)LIKE(rt2.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt38, rt2 ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (NULLIF(rt0.c1, rt2.c1)) AND (CASE WHEN rt0.c0 THEN rt2.c2 ELSE rt0.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt38, rt2 WHERE (((((vt38.c0)LIKE(rt2.c0))) IS TRUE)) ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (NULLIF(rt0.c1, rt2.c1)) AND (CASE WHEN rt0.c0 THEN rt2.c2 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)LIKE(rt2.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt38, rt2 ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (NULLIF(rt0.c1, rt2.c1)) AND (CASE WHEN rt0.c0 THEN rt2.c2 ELSE rt0.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt38, rt2 WHERE (((((vt38.c0)LIKE(rt2.c0))) IS TRUE)) ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (NULLIF(rt0.c1, rt2.c1)) AND (CASE WHEN rt0.c0 THEN rt2.c2 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT ALL * FROM rt2 LEFT OUTER JOIN rt1 ON CAST(0.7850909929838773 AS REAL) FULL OUTER JOIN vt38 ON NULLIF(DISTINCT rt2.c1, ((rt1.c3)<=(NULL))) WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4))) BETWEEN (rt2.c1 COLLATE RTRIM) AND ('106971443')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4))) BETWEEN (rt2.c1 COLLATE RTRIM) AND ('106971443'))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON CAST(0.7850909929838773 AS REAL) FULL OUTER JOIN vt38 ON NULLIF(DISTINCT rt2.c1, ((rt1.c3)<=(NULL))));
SELECT ALL * FROM rt2 LEFT OUTER JOIN rt1 ON CAST(0.7850909929838773 AS REAL) FULL OUTER JOIN vt38 ON NULLIF(DISTINCT rt2.c1, ((rt1.c3)<=(NULL))) WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4))) BETWEEN (rt2.c1 COLLATE RTRIM) AND ('106971443')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4))) BETWEEN (rt2.c1 COLLATE RTRIM) AND ('106971443'))) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON CAST(0.7850909929838773 AS REAL) FULL OUTER JOIN vt38 ON NULLIF(DISTINCT rt2.c1, ((rt1.c3)<=(NULL))));
SELECT ALL * FROM rt2 LEFT OUTER JOIN rt1 ON CAST(0.7850909929838773 AS REAL) FULL OUTER JOIN vt38 ON NULLIF(DISTINCT rt2.c1, ((rt1.c3)<=(NULL))) WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4))) BETWEEN (rt2.c1 COLLATE RTRIM) AND ('106971443')));
SELECT ALL COUNT(*) FROM rt2 WHERE (((((((((((rt2.c1)&(x'')))OR(CAST(rt2.c2 AS REAL))))OR(x'')))OR(((rt2.c2)%(rt2.c0)))))OR(CASE rt2.c0  WHEN NULL THEN rt2.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt2.c1)&(x'')))OR(CAST(rt2.c2 AS REAL))))OR(x'')))OR(((rt2.c2)%(rt2.c0)))))OR(CASE rt2.c0  WHEN NULL THEN rt2.c2 END))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((((((((((rt2.c1)&(x'')))OR(CAST(rt2.c2 AS REAL))))OR(x'')))OR(((rt2.c2)%(rt2.c0)))))OR(CASE rt2.c0  WHEN NULL THEN rt2.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt2.c1)&(x'')))OR(CAST(rt2.c2 AS REAL))))OR(x'')))OR(((rt2.c2)%(rt2.c0)))))OR(CASE rt2.c0  WHEN NULL THEN rt2.c2 END))) IS TRUE)  as count FROM rt2);
SELECT ALL COUNT(*) FROM rt2 WHERE (((((((((((rt2.c1)&(x'')))OR(CAST(rt2.c2 AS REAL))))OR(x'')))OR(((rt2.c2)%(rt2.c0)))))OR(CASE rt2.c0  WHEN NULL THEN rt2.c2 END)));
SELECT * FROM rt1, rt0 NOT INDEXED, vt38, rt2 WHERE (CASE MIN(rt1.c3, rt1.c3)  WHEN (('')||(rt1.c4)) THEN ((rt1.c2)&(rt0.c3)) WHEN ((rt1.c0)>(rt2.c0)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c2))<((rt1.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE MIN(rt1.c3, rt1.c3)  WHEN (('')||(rt1.c4)) THEN ((rt1.c2)&(rt0.c3)) WHEN ((rt1.c0)>(rt2.c0)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c2))<((rt1.c3))) END) IS TRUE)  as count FROM rt1, rt0, vt38, rt2);
SELECT * FROM rt1, rt0 NOT INDEXED, vt38, rt2 WHERE (CASE MIN(rt1.c3, rt1.c3)  WHEN (('')||(rt1.c4)) THEN ((rt1.c2)&(rt0.c3)) WHEN ((rt1.c0)>(rt2.c0)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c2))<((rt1.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE MIN(rt1.c3, rt1.c3)  WHEN (('')||(rt1.c4)) THEN ((rt1.c2)&(rt0.c3)) WHEN ((rt1.c0)>(rt2.c0)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c2))<((rt1.c3))) END) IS TRUE)  as count FROM rt1, rt0, vt38, rt2);
SELECT * FROM rt1, rt0 NOT INDEXED, vt38, rt2 WHERE (CASE MIN(rt1.c3, rt1.c3)  WHEN (('')||(rt1.c4)) THEN ((rt1.c2)&(rt0.c3)) WHEN ((rt1.c0)>(rt2.c0)) THEN rt1.c1 COLLATE BINARY WHEN rt1.c0 COLLATE NOCASE THEN (((rt1.c2))<((rt1.c3))) END);
SELECT COUNT(*) FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c4)/(rt0.c1)))AND((NOT (rt1.c0)))))OR(((((rt0.c0)AND(0.5895328857172354)))OR(rt1.c4)))) INNER JOIN vt38 ON ((((((((rt0.c0)OR(((rt1.c0)|(rt1.c0)))))AND(0.983037842886064)))AND(((rt2.c2) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((vt38.c0)>(rt1.c2)))) WHERE (((0.8993694835840818)AND(rt0.c2)) COLLATE RTRIM) ORDER BY json_array_length((('?mcOwh') NOT BETWEEN (0.32940170786816336) AND (rt1.c2)), LOWER(vt38.c0)), rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.8993694835840818)AND(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c4)/(rt0.c1)))AND((NOT (rt1.c0)))))OR(((((rt0.c0)AND(0.5895328857172354)))OR(rt1.c4)))) INNER JOIN vt38 ON ((((((((rt0.c0)OR(((rt1.c0)|(rt1.c0)))))AND(0.983037842886064)))AND(((rt2.c2) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((vt38.c0)>(rt1.c2)))) ORDER BY json_array_length((('?mcOwh') NOT BETWEEN (0.32940170786816336) AND (rt1.c2)), LOWER(vt38.c0)), rt1.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c4)/(rt0.c1)))AND((NOT (rt1.c0)))))OR(((((rt0.c0)AND(0.5895328857172354)))OR(rt1.c4)))) INNER JOIN vt38 ON ((((((((rt0.c0)OR(((rt1.c0)|(rt1.c0)))))AND(0.983037842886064)))AND(((rt2.c2) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((vt38.c0)>(rt1.c2)))) WHERE (((0.8993694835840818)AND(rt0.c2)) COLLATE RTRIM) ORDER BY json_array_length((('?mcOwh') NOT BETWEEN (0.32940170786816336) AND (rt1.c2)), LOWER(vt38.c0)), rt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.8993694835840818)AND(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c4)/(rt0.c1)))AND((NOT (rt1.c0)))))OR(((((rt0.c0)AND(0.5895328857172354)))OR(rt1.c4)))) INNER JOIN vt38 ON ((((((((rt0.c0)OR(((rt1.c0)|(rt1.c0)))))AND(0.983037842886064)))AND(((rt2.c2) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((vt38.c0)>(rt1.c2)))) ORDER BY json_array_length((('?mcOwh') NOT BETWEEN (0.32940170786816336) AND (rt1.c2)), LOWER(vt38.c0)), rt1.c2  NULLS FIRST);
SELECT COUNT(*) FROM rt2, rt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c4)/(rt0.c1)))AND((NOT (rt1.c0)))))OR(((((rt0.c0)AND(0.5895328857172354)))OR(rt1.c4)))) INNER JOIN vt38 ON ((((((((rt0.c0)OR(((rt1.c0)|(rt1.c0)))))AND(0.983037842886064)))AND(((rt2.c2) NOT BETWEEN (rt0.c3) AND (rt1.c4)))))AND(((vt38.c0)>(rt1.c2)))) WHERE (((0.8993694835840818)AND(rt0.c2)) COLLATE RTRIM) ORDER BY json_array_length((('?mcOwh') NOT BETWEEN (0.32940170786816336) AND (rt1.c2)), LOWER(vt38.c0)), rt1.c2  NULLS FIRST;
SELECT * FROM rt1, rt0 CROSS JOIN rt2 ON (CAST(rt2.c0 AS INTEGER) IN ((rt1.c4 IN ()))) CROSS JOIN vt38 ON (~ (((vt38.c0)*(rt1.c4)))) WHERE (((((rt0.c0)AND(rt0.c0)))*(rt1.c3 COLLATE BINARY))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt0.c0)))*(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN rt2 ON (CAST(rt2.c0 AS INTEGER) IN ((rt1.c4 IN ()))) CROSS JOIN vt38 ON (~ (((vt38.c0)*(rt1.c4)))) ORDER BY rt1.c2);
SELECT * FROM rt1, rt0 CROSS JOIN rt2 ON (CAST(rt2.c0 AS INTEGER) IN ((rt1.c4 IN ()))) CROSS JOIN vt38 ON (~ (((vt38.c0)*(rt1.c4)))) WHERE (((((rt0.c0)AND(rt0.c0)))*(rt1.c3 COLLATE BINARY))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(rt0.c0)))*(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN rt2 ON (CAST(rt2.c0 AS INTEGER) IN ((rt1.c4 IN ()))) CROSS JOIN vt38 ON (~ (((vt38.c0)*(rt1.c4)))) ORDER BY rt1.c2);
SELECT * FROM rt1, rt0 CROSS JOIN rt2 ON (CAST(rt2.c0 AS INTEGER) IN ((rt1.c4 IN ()))) CROSS JOIN vt38 ON (~ (((vt38.c0)*(rt1.c4)))) WHERE (((((rt0.c0)AND(rt0.c0)))*(rt1.c3 COLLATE BINARY))) ORDER BY rt1.c2;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) WHERE ('4m') ORDER BY ((((((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))OR(((rt0.c3) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('4m') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) ORDER BY ((((((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))OR(((rt0.c3) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) WHERE ('4m') ORDER BY ((((((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))OR(((rt0.c3) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('4m') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) ORDER BY ((((((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))OR(((rt0.c3) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) WHERE ('4m') ORDER BY ((((((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1)))OR(((rt0.c3) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) ASC;
SELECT COUNT(*) FROM vt38, rt1, rt2 WHERE (((rt1.c0 COLLATE RTRIM)AND(CAST(vt38.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM)AND(CAST(vt38.c0 AS REAL)))) IS TRUE)  as count FROM vt38, rt1, rt2);
SELECT COUNT(*) FROM vt38, rt1, rt2 WHERE (((rt1.c0 COLLATE RTRIM)AND(CAST(vt38.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM)AND(CAST(vt38.c0 AS REAL)))) IS TRUE)  as count FROM vt38, rt1, rt2);
SELECT COUNT(*) FROM vt38, rt1, rt2 WHERE (((rt1.c0 COLLATE RTRIM)AND(CAST(vt38.c0 AS REAL))));
SELECT * FROM vt38, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt38, rt1);
SELECT * FROM vt38, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt38, rt1);
SELECT * FROM vt38, rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c2 COLLATE NOCASE) IS TRUE)) ORDER BY (NOT (((rt2.c1)&(rt2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt2 ORDER BY (NOT (((rt2.c1)&(rt2.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c2 COLLATE NOCASE) IS TRUE)) ORDER BY (NOT (((rt2.c1)&(rt2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt2 ORDER BY (NOT (((rt2.c1)&(rt2.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c2 COLLATE NOCASE) IS TRUE)) ORDER BY (NOT (((rt2.c1)&(rt2.c1)))) DESC  NULLS FIRST;
SELECT * FROM rt2 WHERE ('d') ORDER BY CASE WHEN ((rt2.c1)<>(rt2.c0)) THEN (((rt2.c0))>=((rt2.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('d') IS TRUE)  as count FROM rt2 ORDER BY CASE WHEN ((rt2.c1)<>(rt2.c0)) THEN (((rt2.c0))>=((rt2.c0))) END  NULLS FIRST);
SELECT * FROM rt2 WHERE ('d') ORDER BY CASE WHEN ((rt2.c1)<>(rt2.c0)) THEN (((rt2.c0))>=((rt2.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('d') IS TRUE)  as count FROM rt2 ORDER BY CASE WHEN ((rt2.c1)<>(rt2.c0)) THEN (((rt2.c0))>=((rt2.c0))) END  NULLS FIRST);
SELECT * FROM rt2 WHERE ('d') ORDER BY CASE WHEN ((rt2.c1)<>(rt2.c0)) THEN (((rt2.c0))>=((rt2.c0))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt38, rt2, rt0 WHERE (((rt2.c1)>=(((vt38.c0)%(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1)>=(((vt38.c0)%(rt2.c1))))) IS TRUE)  as count FROM vt38, rt2, rt0);
SELECT ALL COUNT(*) FROM vt38, rt2, rt0 WHERE (((rt2.c1)>=(((vt38.c0)%(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1)>=(((vt38.c0)%(rt2.c1))))) IS TRUE)  as count FROM vt38, rt2, rt0);
SELECT ALL COUNT(*) FROM vt38, rt2, rt0 WHERE (((rt2.c1)>=(((vt38.c0)%(rt2.c1)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)<=(rt0.c2)))<(CAST(rt0.c0 AS REAL)))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(rt0.c2)))<(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT * FROM rt0 WHERE (((((rt0.c2)<=(rt0.c2)))<(CAST(rt0.c0 AS REAL)))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<=(rt0.c2)))<(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT * FROM rt0 WHERE (((((rt0.c2)<=(rt0.c2)))<(CAST(rt0.c0 AS REAL)))) ORDER BY rt0.c1 ASC;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt2 ON CASE WHEN (((0.9776223466009736)) NOT BETWEEN ((rt2.c0)) AND ((rt0.c3))) THEN ((0.818737656154893) NOT NULL) WHEN ((('')) NOT BETWEEN ((rt1.c3)) AND ((rt2.c1))) THEN ((rt0.c3)&(rt1.c4)) WHEN LIKELY(DISTINCT rt1.c2) THEN ((((((((rt2.c1)OR(rt1.c4)))OR(vt38.c0)))OR(rt1.c4)))OR(rt0.c3)) ELSE LOWER(DISTINCT rt0.c3) END LEFT OUTER JOIN rt0 ON rt2.c1 LEFT OUTER JOIN vt38 ON ABS(((rt1.c3) NOTNULL)) WHERE (CAST('-1434371502' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1434371502' AS TEXT)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON CASE WHEN (((0.9776223466009736)) NOT BETWEEN ((rt2.c0)) AND ((rt0.c3))) THEN ((0.818737656154893) NOT NULL) WHEN ((('')) NOT BETWEEN ((rt1.c3)) AND ((rt2.c1))) THEN ((rt0.c3)&(rt1.c4)) WHEN LIKELY(DISTINCT rt1.c2) THEN ((((((((rt2.c1)OR(rt1.c4)))OR(vt38.c0)))OR(rt1.c4)))OR(rt0.c3)) ELSE LOWER(DISTINCT rt0.c3) END LEFT OUTER JOIN rt0 ON rt2.c1 LEFT OUTER JOIN vt38 ON ABS(((rt1.c3) NOTNULL)));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt2 ON CASE WHEN (((0.9776223466009736)) NOT BETWEEN ((rt2.c0)) AND ((rt0.c3))) THEN ((0.818737656154893) NOT NULL) WHEN ((('')) NOT BETWEEN ((rt1.c3)) AND ((rt2.c1))) THEN ((rt0.c3)&(rt1.c4)) WHEN LIKELY(DISTINCT rt1.c2) THEN ((((((((rt2.c1)OR(rt1.c4)))OR(vt38.c0)))OR(rt1.c4)))OR(rt0.c3)) ELSE LOWER(DISTINCT rt0.c3) END LEFT OUTER JOIN rt0 ON rt2.c1 LEFT OUTER JOIN vt38 ON ABS(((rt1.c3) NOTNULL)) WHERE (CAST('-1434371502' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1434371502' AS TEXT)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt2 ON CASE WHEN (((0.9776223466009736)) NOT BETWEEN ((rt2.c0)) AND ((rt0.c3))) THEN ((0.818737656154893) NOT NULL) WHEN ((('')) NOT BETWEEN ((rt1.c3)) AND ((rt2.c1))) THEN ((rt0.c3)&(rt1.c4)) WHEN LIKELY(DISTINCT rt1.c2) THEN ((((((((rt2.c1)OR(rt1.c4)))OR(vt38.c0)))OR(rt1.c4)))OR(rt0.c3)) ELSE LOWER(DISTINCT rt0.c3) END LEFT OUTER JOIN rt0 ON rt2.c1 LEFT OUTER JOIN vt38 ON ABS(((rt1.c3) NOTNULL)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((~ (rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((~ (rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((~ (rt1.c2))) NOTNULL));
SELECT * FROM rt0, vt38 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)|(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, vt38 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)|(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt38 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)|(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0, vt38 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)|(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt38 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c1)|(rt0.c1))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) DESC  NULLS FIRST;
SELECT * FROM rt1, rt2, rt0 WHERE ('-1253485420') ORDER BY rt1.c4 ASC  NULLS LAST, ((((rt1.c3) IS TRUE)) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c3)))) ASC  NULLS FIRST, rt1.c0;
SELECT SUM(count) FROM (SELECT ALL (('-1253485420') IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY rt1.c4 ASC  NULLS LAST, ((((rt1.c3) IS TRUE)) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c3)))) ASC  NULLS FIRST, rt1.c0);
SELECT * FROM rt1, rt2, rt0 WHERE ('-1253485420') ORDER BY rt1.c4 ASC  NULLS LAST, ((((rt1.c3) IS TRUE)) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c3)))) ASC  NULLS FIRST, rt1.c0;
SELECT SUM(count) FROM (SELECT ALL (('-1253485420') IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY rt1.c4 ASC  NULLS LAST, ((((rt1.c3) IS TRUE)) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c3)))) ASC  NULLS FIRST, rt1.c0);
SELECT * FROM rt1, rt2, rt0 WHERE ('-1253485420') ORDER BY rt1.c4 ASC  NULLS LAST, ((((rt1.c3) IS TRUE)) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c3)))) ASC  NULLS FIRST, rt1.c0;
SELECT COUNT(*) FROM rt2, rt0 WHERE (((rt0.c3 COLLATE RTRIM)/((~ (rt2.c2))))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM)/((~ (rt2.c2))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST(((rt0.c2)LIKE(rt0.c2)) AS REAL) ASC);
SELECT COUNT(*) FROM rt2, rt0 WHERE (((rt0.c3 COLLATE RTRIM)/((~ (rt2.c2))))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM)/((~ (rt2.c2))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST(((rt0.c2)LIKE(rt0.c2)) AS REAL) ASC);
SELECT COUNT(*) FROM rt2, rt0 WHERE (((rt0.c3 COLLATE RTRIM)/((~ (rt2.c2))))) ORDER BY CAST(((rt0.c2)LIKE(rt0.c2)) AS REAL) ASC;
SELECT * FROM rt1 WHERE ((((((rt1.c1 IN (rt1.c4, rt1.c1, rt1.c3)))AND(CAST(rt1.c2 AS INTEGER))))OR(x'922c'))) ORDER BY (rt1.c3 COLLATE RTRIM IN ())  NULLS FIRST, CASE (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))  WHEN RTRIM(rt1.c4) THEN ((rt1.c0)<<(rt1.c2)) ELSE ((rt1.c0) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1 IN (rt1.c4, rt1.c1, rt1.c3)))AND(CAST(rt1.c2 AS INTEGER))))OR(x'922c'))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 COLLATE RTRIM IN ())  NULLS FIRST, CASE (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))  WHEN RTRIM(rt1.c4) THEN ((rt1.c0)<<(rt1.c2)) ELSE ((rt1.c0) IS TRUE) END DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((((rt1.c1 IN (rt1.c4, rt1.c1, rt1.c3)))AND(CAST(rt1.c2 AS INTEGER))))OR(x'922c'))) ORDER BY (rt1.c3 COLLATE RTRIM IN ())  NULLS FIRST, CASE (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))  WHEN RTRIM(rt1.c4) THEN ((rt1.c0)<<(rt1.c2)) ELSE ((rt1.c0) IS TRUE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1 IN (rt1.c4, rt1.c1, rt1.c3)))AND(CAST(rt1.c2 AS INTEGER))))OR(x'922c'))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 COLLATE RTRIM IN ())  NULLS FIRST, CASE (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))  WHEN RTRIM(rt1.c4) THEN ((rt1.c0)<<(rt1.c2)) ELSE ((rt1.c0) IS TRUE) END DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((((rt1.c1 IN (rt1.c4, rt1.c1, rt1.c3)))AND(CAST(rt1.c2 AS INTEGER))))OR(x'922c'))) ORDER BY (rt1.c3 COLLATE RTRIM IN ())  NULLS FIRST, CASE (((rt1.c2, rt1.c1, rt1.c4)) BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c1, NULL, rt1.c0)))  WHEN RTRIM(rt1.c4) THEN ((rt1.c0)<<(rt1.c2)) ELSE ((rt1.c0) IS TRUE) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt38 WHERE ((((vt38.c0) ISNULL) IN ())) ORDER BY ((CASE WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END) NOT BETWEEN (NULL) AND (((vt38.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt38.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt38 ORDER BY ((CASE WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END) NOT BETWEEN (NULL) AND (((vt38.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38 WHERE ((((vt38.c0) ISNULL) IN ())) ORDER BY ((CASE WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END) NOT BETWEEN (NULL) AND (((vt38.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt38.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt38 ORDER BY ((CASE WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END) NOT BETWEEN (NULL) AND (((vt38.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38 WHERE ((((vt38.c0) ISNULL) IN ())) ORDER BY ((CASE WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END) NOT BETWEEN (NULL) AND (((vt38.c0) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN vt38 ON ((vt38.c0)OR(rt2.c2)) WHERE ((((rt2.c2)) NOT BETWEEN ((rt2.c2)) AND (((- (vt38.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2)) NOT BETWEEN ((rt2.c2)) AND (((- (vt38.c0)))))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN vt38 ON ((vt38.c0)OR(rt2.c2)));
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN vt38 ON ((vt38.c0)OR(rt2.c2)) WHERE ((((rt2.c2)) NOT BETWEEN ((rt2.c2)) AND (((- (vt38.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2)) NOT BETWEEN ((rt2.c2)) AND (((- (vt38.c0)))))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN vt38 ON ((vt38.c0)OR(rt2.c2)));
SELECT ALL COUNT(*) FROM rt2 RIGHT OUTER JOIN vt38 ON ((vt38.c0)OR(rt2.c2)) WHERE ((((rt2.c2)) NOT BETWEEN ((rt2.c2)) AND (((- (vt38.c0))))));
SELECT ALL * FROM rt1, vt38, rt2, rt0 WHERE (CASE WHEN ((rt2.c0) BETWEEN (0.21232653214119324) AND (rt1.c1)) THEN CAST(-1268302597 AS TEXT) ELSE (rt1.c4 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt2.c0) BETWEEN (0.21232653214119324) AND (rt1.c1)) THEN CAST(-1268302597 AS TEXT) ELSE (rt1.c4 IN ()) END) IS TRUE)  as count FROM rt1, vt38, rt2, rt0);
SELECT ALL * FROM rt1, vt38, rt2, rt0 WHERE (CASE WHEN ((rt2.c0) BETWEEN (0.21232653214119324) AND (rt1.c1)) THEN CAST(-1268302597 AS TEXT) ELSE (rt1.c4 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt2.c0) BETWEEN (0.21232653214119324) AND (rt1.c1)) THEN CAST(-1268302597 AS TEXT) ELSE (rt1.c4 IN ()) END) IS TRUE)  as count FROM rt1, vt38, rt2, rt0);
SELECT ALL * FROM rt1, vt38, rt2, rt0 WHERE (CASE WHEN ((rt2.c0) BETWEEN (0.21232653214119324) AND (rt1.c1)) THEN CAST(-1268302597 AS TEXT) ELSE (rt1.c4 IN ()) END);
SELECT ALL * FROM vt38 WHERE (CASE WHEN x'' THEN ((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)) END) ORDER BY vt38.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)) END) IS TRUE)  as count FROM vt38 ORDER BY vt38.c0);
SELECT ALL * FROM vt38 WHERE (CASE WHEN x'' THEN ((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)) END) ORDER BY vt38.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)) END) IS TRUE)  as count FROM vt38 ORDER BY vt38.c0);
SELECT ALL * FROM vt38 WHERE (CASE WHEN x'' THEN ((((vt38.c0)OR(vt38.c0)))AND(vt38.c0)) END) ORDER BY vt38.c0;
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN (rt2.c1 IN ()) THEN ((rt2.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt2.c1 IN ()) THEN ((rt2.c2) NOTNULL) END) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN (rt2.c1 IN ()) THEN ((rt2.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt2.c1 IN ()) THEN ((rt2.c2) NOTNULL) END) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (CASE WHEN (rt2.c1 IN ()) THEN ((rt2.c2) NOTNULL) END);
SELECT ALL * FROM rt2 WHERE (NULL) ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c1 ELSE rt2.c1 END) ISNULL), CAST((rt2.c2 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2 ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c1 ELSE rt2.c1 END) ISNULL), CAST((rt2.c2 IN ()) AS TEXT) DESC);
SELECT ALL * FROM rt2 WHERE (NULL) ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c1 ELSE rt2.c1 END) ISNULL), CAST((rt2.c2 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2 ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c1 ELSE rt2.c1 END) ISNULL), CAST((rt2.c2 IN ()) AS TEXT) DESC);
SELECT ALL * FROM rt2 WHERE (NULL) ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c1 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c2 THEN rt2.c0 WHEN rt2.c0 THEN rt2.c1 ELSE rt2.c1 END) ISNULL), CAST((rt2.c2 IN ()) AS TEXT) DESC;
SELECT ALL * FROM rt2 WHERE ((((rt2.c2) NOTNULL) IN ((((rt2.c0))<((rt2.c2)))))) ORDER BY rt2.c1 ASC  NULLS FIRST, rt2.c2  NULLS LAST, ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt2.c2) NOTNULL) IN ((((rt2.c0))<((rt2.c2)))))) IS TRUE)  as count FROM rt2 ORDER BY rt2.c1 ASC  NULLS FIRST, rt2.c2  NULLS LAST, ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt2 WHERE ((((rt2.c2) NOTNULL) IN ((((rt2.c0))<((rt2.c2)))))) ORDER BY rt2.c1 ASC  NULLS FIRST, rt2.c2  NULLS LAST, ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt2.c2) NOTNULL) IN ((((rt2.c0))<((rt2.c2)))))) IS TRUE)  as count FROM rt2 ORDER BY rt2.c1 ASC  NULLS FIRST, rt2.c2  NULLS LAST, ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt2 WHERE ((((rt2.c2) NOTNULL) IN ((((rt2.c0))<((rt2.c2)))))) ORDER BY rt2.c1 ASC  NULLS FIRST, rt2.c2  NULLS LAST, ((rt2.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM rt2, rt0, vt38 WHERE ((((rt2.c0 IN ()))IS NOT(rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((rt2.c0 IN ()))IS NOT(rt0.c3))) IS TRUE)  as count FROM rt2, rt0, vt38);
SELECT ALL * FROM rt2, rt0, vt38 WHERE ((((rt2.c0 IN ()))IS NOT(rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((rt2.c0 IN ()))IS NOT(rt0.c3))) IS TRUE)  as count FROM rt2, rt0, vt38);
SELECT ALL * FROM rt2, rt0, vt38 WHERE ((((rt2.c0 IN ()))IS NOT(rt0.c3)));
SELECT COUNT(*) FROM rt0 WHERE ((((x''))!=((((('+p\r', '1614225277', x'6181'))<((rt0.c2, rt0.c1, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((x''))!=((((('+p\r', '1614225277', x'6181'))<((rt0.c2, rt0.c1, rt0.c0))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((x''))!=((((('+p\r', '1614225277', x'6181'))<((rt0.c2, rt0.c1, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((x''))!=((((('+p\r', '1614225277', x'6181'))<((rt0.c2, rt0.c1, rt0.c0))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((x''))!=((((('+p\r', '1614225277', x'6181'))<((rt0.c2, rt0.c1, rt0.c0)))))));
SELECT COUNT(*) FROM vt38 WHERE ((((((vt38.c0))<((vt38.c0)))) BETWEEN ((vt38.c0 IN (x''))) AND (((vt38.c0)||(vt38.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt38.c0))<((vt38.c0)))) BETWEEN ((vt38.c0 IN (x''))) AND (((vt38.c0)||(vt38.c0))))) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE ((((((vt38.c0))<((vt38.c0)))) BETWEEN ((vt38.c0 IN (x''))) AND (((vt38.c0)||(vt38.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt38.c0))<((vt38.c0)))) BETWEEN ((vt38.c0 IN (x''))) AND (((vt38.c0)||(vt38.c0))))) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE ((((((vt38.c0))<((vt38.c0)))) BETWEEN ((vt38.c0 IN (x''))) AND (((vt38.c0)||(vt38.c0)))));
SELECT ALL * FROM rt1 WHERE ((~ ((('524173927') BETWEEN (rt1.c1) AND ('-972021884')))));
SELECT SUM(count) FROM (SELECT (((~ ((('524173927') BETWEEN (rt1.c1) AND ('-972021884'))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ ((('524173927') BETWEEN (rt1.c1) AND ('-972021884')))));
SELECT SUM(count) FROM (SELECT (((~ ((('524173927') BETWEEN (rt1.c1) AND ('-972021884'))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ ((('524173927') BETWEEN (rt1.c1) AND ('-972021884')))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((0.9233167821643553) NOTNULL) LEFT OUTER JOIN vt38 ON ((((rt0.c0)<<(rt1.c0)))>(CASE WHEN rt0.c2 THEN rt0.c1 END)) WHERE (((((rt1.c3 IN ())))<=((IFNULL(DISTINCT rt1.c0, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3 IN ())))<=((IFNULL(DISTINCT rt1.c0, rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((0.9233167821643553) NOTNULL) LEFT OUTER JOIN vt38 ON ((((rt0.c0)<<(rt1.c0)))>(CASE WHEN rt0.c2 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((0.9233167821643553) NOTNULL) LEFT OUTER JOIN vt38 ON ((((rt0.c0)<<(rt1.c0)))>(CASE WHEN rt0.c2 THEN rt0.c1 END)) WHERE (((((rt1.c3 IN ())))<=((IFNULL(DISTINCT rt1.c0, rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3 IN ())))<=((IFNULL(DISTINCT rt1.c0, rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((0.9233167821643553) NOTNULL) LEFT OUTER JOIN vt38 ON ((((rt0.c0)<<(rt1.c0)))>(CASE WHEN rt0.c2 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((0.9233167821643553) NOTNULL) LEFT OUTER JOIN vt38 ON ((((rt0.c0)<<(rt1.c0)))>(CASE WHEN rt0.c2 THEN rt0.c1 END)) WHERE (((((rt1.c3 IN ())))<=((IFNULL(DISTINCT rt1.c0, rt0.c3)))));
SELECT ALL * FROM vt38, rt0, rt2, rt1 WHERE ((('-1604587349')<=((((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((('-1604587349')<=((((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt1.c4)))))) IS TRUE)  as count FROM vt38, rt0, rt2, rt1);
SELECT ALL * FROM vt38, rt0, rt2, rt1 WHERE ((('-1604587349')<=((((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((('-1604587349')<=((((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt1.c4)))))) IS TRUE)  as count FROM vt38, rt0, rt2, rt1);
SELECT ALL * FROM vt38, rt0, rt2, rt1 WHERE ((('-1604587349')<=((((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt1.c4))))));
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (rt1.c1) ORDER BY ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (rt1.c1) ORDER BY ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, rt2, rt0 ORDER BY ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt2, rt0 WHERE (rt1.c1) ORDER BY ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt38 WHERE ((+ (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, vt38);
SELECT ALL COUNT(*) FROM rt0, rt1, vt38 WHERE ((+ (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, vt38);
SELECT ALL COUNT(*) FROM rt0, rt1, vt38 WHERE ((+ (rt1.c2 COLLATE NOCASE)));
SELECT * FROM rt2, rt0 WHERE (((x'5a2c')<(((rt0.c0)/(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'5a2c')<(((rt0.c0)/(rt2.c1))))) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (((x'5a2c')<(((rt0.c0)/(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'5a2c')<(((rt0.c0)/(rt2.c1))))) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (((x'5a2c')<(((rt0.c0)/(rt2.c1)))));
SELECT ALL * FROM vt38 WHERE ((((vt38.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt38.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE ((((vt38.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt38.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE ((((vt38.c0) IS TRUE) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY);
SELECT * FROM rt1, rt0, rt2, vt38 WHERE (((((((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c2)))OR(rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c2)))OR(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, rt2, vt38);
SELECT * FROM rt1, rt0, rt2, vt38 WHERE (((((((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c2)))OR(rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c2)))OR(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, rt2, vt38);
SELECT * FROM rt1, rt0, rt2, vt38 WHERE (((((((((((rt1.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt1.c2)))OR(rt1.c3))) IS TRUE));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) IN ())) ORDER BY ((((('', rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c1, x''))))<=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS LAST, '1046817665' ASC, ((json_array_length(rt0.c0, rt0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((('', rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c1, x''))))<=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS LAST, '1046817665' ASC, ((json_array_length(rt0.c0, rt0.c0)) NOTNULL) ASC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) IN ())) ORDER BY ((((('', rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c1, x''))))<=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS LAST, '1046817665' ASC, ((json_array_length(rt0.c0, rt0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((('', rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c1, x''))))<=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))  NULLS LAST, '1046817665' ASC, ((json_array_length(rt0.c0, rt0.c0)) NOTNULL) ASC);
SELECT * FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('');
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((0xffffffffa31d6d65)*(rt2.c1 COLLATE RTRIM)) RIGHT OUTER JOIN rt2 ON ((json_remove(rt1.c2, rt1.c3))LIKE((((rt1.c3))<((rt2.c0))))) CROSS JOIN vt38 ON CASE WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3)) THEN ((NULL)*(rt2.c2)) WHEN (rt1.c3 IN (rt0.c2, rt2.c2)) THEN ((NULL)!=(rt2.c0)) WHEN rt2.c2 COLLATE BINARY THEN vt38.c0 COLLATE BINARY END WHERE (((DATETIME('', rt0.c1, rt2.c1, rt0.c0, rt0.c2))OR((((rt2.c2))>((rt1.c1)))))) ORDER BY CASE WHEN (((rt2.c1, rt0.c0, rt2.c2, rt1.c3, rt2.c1))<=((vt38.c0, rt0.c3, rt0.c2, rt1.c2, rt2.c0))) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c3 THEN vt38.c0 WHEN rt1.c3 THEN rt1.c4 END WHEN NULL THEN ((1.70677921E8)+(rt2.c0)) WHEN (((vt38.c0, rt0.c3, rt1.c4))>((rt1.c0, rt1.c0, rt1.c1))) THEN (rt0.c2 IN ()) ELSE '\n>E(h3s' END;
SELECT SUM(count) FROM (SELECT ((((DATETIME('', rt0.c1, rt2.c1, rt0.c0, rt0.c2))OR((((rt2.c2))>((rt1.c1)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((0Xffffffffa31d6d65)*(rt2.c1 COLLATE RTRIM)) RIGHT OUTER JOIN rt2 ON ((json_remove(rt1.c2, rt1.c3))LIKE((((rt1.c3))<((rt2.c0))))) CROSS JOIN vt38 ON CASE WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3)) THEN ((NULL)*(rt2.c2)) WHEN (rt1.c3 IN (rt0.c2, rt2.c2)) THEN ((NULL)<>(rt2.c0)) WHEN rt2.c2 COLLATE BINARY THEN vt38.c0 COLLATE BINARY END ORDER BY CASE WHEN (((rt2.c1, rt0.c0, rt2.c2, rt1.c3, rt2.c1))<=((vt38.c0, rt0.c3, rt0.c2, rt1.c2, rt2.c0))) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c3 THEN vt38.c0 WHEN rt1.c3 THEN rt1.c4 END WHEN NULL THEN ((1.70677921E8)+(rt2.c0)) WHEN (((vt38.c0, rt0.c3, rt1.c4))>((rt1.c0, rt1.c0, rt1.c1))) THEN (rt0.c2 IN ()) ELSE '\n>E(h3s' END);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((0xffffffffa31d6d65)*(rt2.c1 COLLATE RTRIM)) RIGHT OUTER JOIN rt2 ON ((json_remove(rt1.c2, rt1.c3))LIKE((((rt1.c3))<((rt2.c0))))) CROSS JOIN vt38 ON CASE WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3)) THEN ((NULL)*(rt2.c2)) WHEN (rt1.c3 IN (rt0.c2, rt2.c2)) THEN ((NULL)!=(rt2.c0)) WHEN rt2.c2 COLLATE BINARY THEN vt38.c0 COLLATE BINARY END WHERE (((DATETIME('', rt0.c1, rt2.c1, rt0.c0, rt0.c2))OR((((rt2.c2))>((rt1.c1)))))) ORDER BY CASE WHEN (((rt2.c1, rt0.c0, rt2.c2, rt1.c3, rt2.c1))<=((vt38.c0, rt0.c3, rt0.c2, rt1.c2, rt2.c0))) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c3 THEN vt38.c0 WHEN rt1.c3 THEN rt1.c4 END WHEN NULL THEN ((1.70677921E8)+(rt2.c0)) WHEN (((vt38.c0, rt0.c3, rt1.c4))>((rt1.c0, rt1.c0, rt1.c1))) THEN (rt0.c2 IN ()) ELSE '\n>E(h3s' END;
SELECT SUM(count) FROM (SELECT ((((DATETIME('', rt0.c1, rt2.c1, rt0.c0, rt0.c2))OR((((rt2.c2))>((rt1.c1)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((0Xffffffffa31d6d65)*(rt2.c1 COLLATE RTRIM)) RIGHT OUTER JOIN rt2 ON ((json_remove(rt1.c2, rt1.c3))LIKE((((rt1.c3))<((rt2.c0))))) CROSS JOIN vt38 ON CASE WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3)) THEN ((NULL)*(rt2.c2)) WHEN (rt1.c3 IN (rt0.c2, rt2.c2)) THEN ((NULL)<>(rt2.c0)) WHEN rt2.c2 COLLATE BINARY THEN vt38.c0 COLLATE BINARY END ORDER BY CASE WHEN (((rt2.c1, rt0.c0, rt2.c2, rt1.c3, rt2.c1))<=((vt38.c0, rt0.c3, rt0.c2, rt1.c2, rt2.c0))) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c3 THEN vt38.c0 WHEN rt1.c3 THEN rt1.c4 END WHEN NULL THEN ((1.70677921E8)+(rt2.c0)) WHEN (((vt38.c0, rt0.c3, rt1.c4))>((rt1.c0, rt1.c0, rt1.c1))) THEN (rt0.c2 IN ()) ELSE '\n>E(h3s' END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt38 ON (((rt0.c3 IN (rt0.c2, vt38.c0))) NOTNULL) WHERE (((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt38 ON (((rt0.c3 IN (rt0.c2, vt38.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt38 ON (((rt0.c3 IN (rt0.c2, vt38.c0))) NOTNULL) WHERE (((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt38 ON (((rt0.c3 IN (rt0.c2, vt38.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt38 ON (((rt0.c3 IN (rt0.c2, vt38.c0))) NOTNULL) WHERE (((((((rt0.c2) IS TRUE))AND(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CAST(rt0.c1 AS BLOB))));
SELECT COUNT(*) FROM rt2 WHERE ((((((x'69c3', rt2.c2, rt2.c1)) BETWEEN ((rt2.c0, rt2.c2, rt2.c1)) AND ((rt2.c1, rt2.c1, rt2.c0))))==(((((((((rt2.c1)AND(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'69c3', rt2.c2, rt2.c1)) BETWEEN ((rt2.c0, rt2.c2, rt2.c1)) AND ((rt2.c1, rt2.c1, rt2.c0))))==(((((((((rt2.c1)AND(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c2))))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE ((((((x'69c3', rt2.c2, rt2.c1)) BETWEEN ((rt2.c0, rt2.c2, rt2.c1)) AND ((rt2.c1, rt2.c1, rt2.c0))))==(((((((((rt2.c1)AND(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'69c3', rt2.c2, rt2.c1)) BETWEEN ((rt2.c0, rt2.c2, rt2.c1)) AND ((rt2.c1, rt2.c1, rt2.c0))))==(((((((((rt2.c1)AND(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c2))))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE ((((((x'69c3', rt2.c2, rt2.c1)) BETWEEN ((rt2.c0, rt2.c2, rt2.c1)) AND ((rt2.c1, rt2.c1, rt2.c0))))==(((((((((rt2.c1)AND(rt2.c1)))AND(rt2.c2)))AND(rt2.c1)))AND(rt2.c2)))));
SELECT * FROM vt38 FULL OUTER JOIN rt2 ON CASE (- (rt0.c2))  WHEN '7O*#!n줲T9' THEN (NOT (rt0.c0)) WHEN CASE WHEN 1.417809047E9 THEN rt1.c0 END THEN ((rt2.c2)IS NOT(rt2.c1)) WHEN x'' THEN rt1.c2 ELSE ((rt1.c1) BETWEEN (rt2.c1) AND (rt2.c0)) END CROSS JOIN rt1 ON (- (rt1.c4)) FULL OUTER JOIN rt0 ON ((rt0.c2 IN (rt1.c4, rt2.c2)) IN ()) WHERE ((((- (rt2.c0)))<(''))) ORDER BY CAST((rt0.c3 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt2.c0)))<(''))) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt2 ON CASE (- (rt0.c2))  WHEN '7O*#!n줲T9' THEN (NOT (rt0.c0)) WHEN CASE WHEN 1.417809047E9 THEN rt1.c0 END THEN ((rt2.c2)IS NOT(rt2.c1)) WHEN x'' THEN rt1.c2 ELSE ((rt1.c1) BETWEEN (rt2.c1) AND (rt2.c0)) END CROSS JOIN rt1 ON (- (rt1.c4)) FULL OUTER JOIN rt0 ON ((rt0.c2 IN (rt1.c4, rt2.c2)) IN ()) ORDER BY CAST((rt0.c3 IN ()) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt38 FULL OUTER JOIN rt2 ON CASE (- (rt0.c2))  WHEN '7O*#!n줲T9' THEN (NOT (rt0.c0)) WHEN CASE WHEN 1.417809047E9 THEN rt1.c0 END THEN ((rt2.c2)IS NOT(rt2.c1)) WHEN x'' THEN rt1.c2 ELSE ((rt1.c1) BETWEEN (rt2.c1) AND (rt2.c0)) END CROSS JOIN rt1 ON (- (rt1.c4)) FULL OUTER JOIN rt0 ON ((rt0.c2 IN (rt1.c4, rt2.c2)) IN ()) WHERE ((((- (rt2.c0)))<(''))) ORDER BY CAST((rt0.c3 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt2.c0)))<(''))) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt2 ON CASE (- (rt0.c2))  WHEN '7O*#!n줲T9' THEN (NOT (rt0.c0)) WHEN CASE WHEN 1.417809047E9 THEN rt1.c0 END THEN ((rt2.c2)IS NOT(rt2.c1)) WHEN x'' THEN rt1.c2 ELSE ((rt1.c1) BETWEEN (rt2.c1) AND (rt2.c0)) END CROSS JOIN rt1 ON (- (rt1.c4)) FULL OUTER JOIN rt0 ON ((rt0.c2 IN (rt1.c4, rt2.c2)) IN ()) ORDER BY CAST((rt0.c3 IN ()) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt38, rt1, rt2 WHERE (NULL) ORDER BY LENGTH(((rt2.c0) BETWEEN (rt1.c3) AND (rt2.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt38, rt1, rt2 ORDER BY LENGTH(((rt2.c0) BETWEEN (rt1.c3) AND (rt2.c0))) ASC  NULLS LAST);
SELECT * FROM vt38, rt1, rt2 WHERE (NULL) ORDER BY LENGTH(((rt2.c0) BETWEEN (rt1.c3) AND (rt2.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt38, rt1, rt2 ORDER BY LENGTH(((rt2.c0) BETWEEN (rt1.c3) AND (rt2.c0))) ASC  NULLS LAST);
SELECT * FROM vt38, rt1, rt2 WHERE (NULL) ORDER BY LENGTH(((rt2.c0) BETWEEN (rt1.c3) AND (rt2.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt38, rt0 NATURAL JOIN rt2 WHERE (((json(rt2.c2))-(SUBSTR(vt38.c0, rt0.c0)))) ORDER BY (((CASE -777640655  WHEN vt38.c0 THEN rt0.c3 END))<((CAST(rt0.c1 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json(rt2.c2))-(SUBSTR(vt38.c0, rt0.c0)))) IS TRUE)  as count FROM vt38, rt0 NATURAL JOIN rt2 ORDER BY (((CASE -777640655  WHEN vt38.c0 THEN rt0.c3 END))<((CAST(rt0.c1 AS BLOB))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38, rt0 NATURAL JOIN rt2 WHERE (((json(rt2.c2))-(SUBSTR(vt38.c0, rt0.c0)))) ORDER BY (((CASE -777640655  WHEN vt38.c0 THEN rt0.c3 END))<((CAST(rt0.c1 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json(rt2.c2))-(SUBSTR(vt38.c0, rt0.c0)))) IS TRUE)  as count FROM vt38, rt0 NATURAL JOIN rt2 ORDER BY (((CASE -777640655  WHEN vt38.c0 THEN rt0.c3 END))<((CAST(rt0.c1 AS BLOB))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38, rt0 NATURAL JOIN rt2 WHERE (((json(rt2.c2))-(SUBSTR(vt38.c0, rt0.c0)))) ORDER BY (((CASE -777640655  WHEN vt38.c0 THEN rt0.c3 END))<((CAST(rt0.c1 AS BLOB))))  NULLS FIRST;
SELECT ALL * FROM rt1, rt2, rt0 LEFT OUTER JOIN vt38 ON NULL WHERE (((CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c2 END)OR(MIN(NULL, vt38.c0, rt2.c2, rt0.c1)))) ORDER BY (NOT (rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c2 END)OR(MIN(NULL, vt38.c0, rt2.c2, rt0.c1)))) IS TRUE)  as count FROM rt1, rt2, rt0 LEFT OUTER JOIN vt38 ON NULL ORDER BY (NOT (rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt1, rt2, rt0 LEFT OUTER JOIN vt38 ON NULL WHERE (((CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c2 END)OR(MIN(NULL, vt38.c0, rt2.c2, rt0.c1)))) ORDER BY (NOT (rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c2 END)OR(MIN(NULL, vt38.c0, rt2.c2, rt0.c1)))) IS TRUE)  as count FROM rt1, rt2, rt0 LEFT OUTER JOIN vt38 ON NULL ORDER BY (NOT (rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt1, rt2, rt0 LEFT OUTER JOIN vt38 ON NULL WHERE (((CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN vt38.c0 WHEN rt2.c2 THEN rt1.c2 END)OR(MIN(NULL, vt38.c0, rt2.c2, rt0.c1)))) ORDER BY (NOT (rt0.c1 COLLATE NOCASE));
SELECT * FROM rt1, rt0, vt38 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, vt38);
SELECT * FROM rt1, rt0, vt38 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, vt38);
SELECT * FROM rt1, rt0, vt38 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM);
SELECT * FROM rt1, rt2 WHERE ((((rt2.c2)-(rt1.c3)) IN (rt1.c3, ROUND(rt1.c3, rt1.c3)))) ORDER BY ((((((rt1.c3)) BETWEEN ((rt2.c2)) AND ((NULL)))))!=((CASE rt2.c0  WHEN rt1.c4 THEN 0.35043749833476956 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2)-(rt1.c3)) IN (rt1.c3, ROUND(rt1.c3, rt1.c3)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((((rt1.c3)) BETWEEN ((rt2.c2)) AND ((NULL)))))!=((CASE rt2.c0  WHEN rt1.c4 THEN 0.35043749833476956 END))) DESC  NULLS LAST);
SELECT * FROM rt1, rt2 WHERE ((((rt2.c2)-(rt1.c3)) IN (rt1.c3, ROUND(rt1.c3, rt1.c3)))) ORDER BY ((((((rt1.c3)) BETWEEN ((rt2.c2)) AND ((NULL)))))!=((CASE rt2.c0  WHEN rt1.c4 THEN 0.35043749833476956 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2)-(rt1.c3)) IN (rt1.c3, ROUND(rt1.c3, rt1.c3)))) IS TRUE)  as count FROM rt1, rt2 ORDER BY ((((((rt1.c3)) BETWEEN ((rt2.c2)) AND ((NULL)))))!=((CASE rt2.c0  WHEN rt1.c4 THEN 0.35043749833476956 END))) DESC  NULLS LAST);
SELECT * FROM rt1, rt2 WHERE ((((rt2.c2)-(rt1.c3)) IN (rt1.c3, ROUND(rt1.c3, rt1.c3)))) ORDER BY ((((((rt1.c3)) BETWEEN ((rt2.c2)) AND ((NULL)))))!=((CASE rt2.c0  WHEN rt1.c4 THEN 0.35043749833476956 END))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (rt0.c0) ORDER BY ((NULL) ISNULL) ASC  NULLS LAST, (((rt0.c0) IS TRUE) IN ((rt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((NULL) ISNULL) ASC  NULLS LAST, (((rt0.c0) IS TRUE) IN ((rt0.c1 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (rt0.c0) ORDER BY ((NULL) ISNULL) ASC  NULLS LAST, (((rt0.c0) IS TRUE) IN ((rt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((NULL) ISNULL) ASC  NULLS LAST, (((rt0.c0) IS TRUE) IN ((rt0.c1 IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt2, rt0 WHERE (rt0.c0) ORDER BY ((NULL) ISNULL) ASC  NULLS LAST, (((rt0.c0) IS TRUE) IN ((rt0.c1 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((('-598401058')|(CASE WHEN rt2.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN 0.40833326082320187 THEN rt0.c3 END))) ORDER BY ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt2.c1 AS REAL))))AND(UPPER(rt1.c0))) DESC, CASE WHEN ((vt38.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (('170677921') NOTNULL) WHEN ((((((((rt1.c0)AND(rt2.c1)))AND(rt2.c2)))OR(rt1.c3)))OR(rt2.c0)) THEN ((rt1.c3) NOTNULL) WHEN (- (rt1.c4)) THEN '-4' END ASC;
SELECT SUM(count) FROM (SELECT (((('-598401058')|(CASE WHEN rt2.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN 0.40833326082320187 THEN rt0.c3 END))) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt2.c1 AS REAL))))AND(UPPER(rt1.c0))) DESC, CASE WHEN ((vt38.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (('170677921') NOTNULL) WHEN ((((((((rt1.c0)AND(rt2.c1)))AND(rt2.c2)))OR(rt1.c3)))OR(rt2.c0)) THEN ((rt1.c3) NOTNULL) WHEN (- (rt1.c4)) THEN '-4' END ASC);
SELECT ALL COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((('-598401058')|(CASE WHEN rt2.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN 0.40833326082320187 THEN rt0.c3 END))) ORDER BY ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt2.c1 AS REAL))))AND(UPPER(rt1.c0))) DESC, CASE WHEN ((vt38.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (('170677921') NOTNULL) WHEN ((((((((rt1.c0)AND(rt2.c1)))AND(rt2.c2)))OR(rt1.c3)))OR(rt2.c0)) THEN ((rt1.c3) NOTNULL) WHEN (- (rt1.c4)) THEN '-4' END ASC;
SELECT SUM(count) FROM (SELECT (((('-598401058')|(CASE WHEN rt2.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN 0.40833326082320187 THEN rt0.c3 END))) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt2.c1 AS REAL))))AND(UPPER(rt1.c0))) DESC, CASE WHEN ((vt38.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (('170677921') NOTNULL) WHEN ((((((((rt1.c0)AND(rt2.c1)))AND(rt2.c2)))OR(rt1.c3)))OR(rt2.c0)) THEN ((rt1.c3) NOTNULL) WHEN (- (rt1.c4)) THEN '-4' END ASC);
SELECT ALL COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((('-598401058')|(CASE WHEN rt2.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN 0.40833326082320187 THEN rt0.c3 END))) ORDER BY ((((CAST(rt1.c4 AS NUMERIC))OR(CAST(rt2.c1 AS REAL))))AND(UPPER(rt1.c0))) DESC, CASE WHEN ((vt38.c0) NOT BETWEEN (rt1.c4) AND (rt1.c1)) THEN (('170677921') NOTNULL) WHEN ((((((((rt1.c0)AND(rt2.c1)))AND(rt2.c2)))OR(rt1.c3)))OR(rt2.c0)) THEN ((rt1.c3) NOTNULL) WHEN (- (rt1.c4)) THEN '-4' END ASC;
SELECT ALL * FROM rt1, rt0, vt38 WHERE ((((((rt0.c0))<((rt1.c2))))||(((rt0.c0)<=(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<((rt1.c2))))||(((rt0.c0)<=(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, vt38);
SELECT ALL * FROM rt1, rt0, vt38 WHERE ((((((rt0.c0))<((rt1.c2))))||(((rt0.c0)<=(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<((rt1.c2))))||(((rt0.c0)<=(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0, vt38);
SELECT ALL * FROM rt1, rt0, vt38 WHERE ((((((rt0.c0))<((rt1.c2))))||(((rt0.c0)<=(rt1.c3)))));
SELECT COUNT(*) FROM rt0 WHERE ((CHANGES() IN ())) ORDER BY 0xffffffffe0e6c734 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CHANGES() IN ())) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffffe0e6c734 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((CHANGES() IN ())) ORDER BY 0xffffffffe0e6c734 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CHANGES() IN ())) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffffe0e6c734 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((CHANGES() IN ())) ORDER BY 0xffffffffe0e6c734 DESC  NULLS LAST;
SELECT * FROM rt0, rt2, rt1, vt38 WHERE (((((((((rt2.c0)AND(rt1.c4)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR((((rt2.c2, rt0.c3, '', rt2.c1, rt1.c2))<((rt1.c0, rt1.c3, rt2.c1, rt2.c0, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt2.c0)AND(rt1.c4)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR((((rt2.c2, rt0.c3, '', rt2.c1, rt1.c2))<((rt1.c0, rt1.c3, rt2.c1, rt2.c0, rt1.c2)))))) IS TRUE)  as count FROM rt0, rt2, rt1, vt38);
SELECT * FROM rt0, rt2, rt1, vt38 WHERE (((((((((rt2.c0)AND(rt1.c4)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR((((rt2.c2, rt0.c3, '', rt2.c1, rt1.c2))<((rt1.c0, rt1.c3, rt2.c1, rt2.c0, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt2.c0)AND(rt1.c4)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR((((rt2.c2, rt0.c3, '', rt2.c1, rt1.c2))<((rt1.c0, rt1.c3, rt2.c1, rt2.c0, rt1.c2)))))) IS TRUE)  as count FROM rt0, rt2, rt1, vt38);
SELECT * FROM rt0, rt2, rt1, vt38 WHERE (((((((((rt2.c0)AND(rt1.c4)))AND(rt1.c3)))AND(CAST(rt1.c1 AS NUMERIC))))OR((((rt2.c2, rt0.c3, '', rt2.c1, rt1.c2))<((rt1.c0, rt1.c3, rt2.c1, rt2.c0, rt1.c2))))));
SELECT ALL * FROM vt38, rt1 WHERE (((((rt1.c3) NOT NULL))<=(((((((((rt1.c1)OR(0.06948026301462984)))OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL))<=(((((((((rt1.c1)OR(0.06948026301462984)))OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM vt38, rt1);
SELECT ALL * FROM vt38, rt1 WHERE (((((rt1.c3) NOT NULL))<=(((((((((rt1.c1)OR(0.06948026301462984)))OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT NULL))<=(((((((((rt1.c1)OR(0.06948026301462984)))OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM vt38, rt1);
SELECT ALL * FROM vt38, rt1 WHERE (((((rt1.c3) NOT NULL))<=(((((((((rt1.c1)OR(0.06948026301462984)))OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c0)))));
SELECT * FROM vt38 WHERE (CASE WHEN ((vt38.c0)>=(vt38.c0)) THEN TRIM(DISTINCT vt38.c0, vt38.c0) WHEN vt38.c0 COLLATE BINARY THEN (+ (vt38.c0)) WHEN vt38.c0 COLLATE BINARY THEN (((vt38.c0, vt38.c0, vt38.c0))>((vt38.c0, vt38.c0, vt38.c0))) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt38.c0)>=(vt38.c0)) THEN TRIM(DISTINCT vt38.c0, vt38.c0) WHEN vt38.c0 COLLATE BINARY THEN (+ (vt38.c0)) WHEN vt38.c0 COLLATE BINARY THEN (((vt38.c0, vt38.c0, vt38.c0))>((vt38.c0, vt38.c0, vt38.c0))) ELSE NULL END) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (CASE WHEN ((vt38.c0)>=(vt38.c0)) THEN TRIM(DISTINCT vt38.c0, vt38.c0) WHEN vt38.c0 COLLATE BINARY THEN (+ (vt38.c0)) WHEN vt38.c0 COLLATE BINARY THEN (((vt38.c0, vt38.c0, vt38.c0))>((vt38.c0, vt38.c0, vt38.c0))) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt38.c0)>=(vt38.c0)) THEN TRIM(DISTINCT vt38.c0, vt38.c0) WHEN vt38.c0 COLLATE BINARY THEN (+ (vt38.c0)) WHEN vt38.c0 COLLATE BINARY THEN (((vt38.c0, vt38.c0, vt38.c0))>((vt38.c0, vt38.c0, vt38.c0))) ELSE NULL END) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (CASE WHEN ((vt38.c0)>=(vt38.c0)) THEN TRIM(DISTINCT vt38.c0, vt38.c0) WHEN vt38.c0 COLLATE BINARY THEN (+ (vt38.c0)) WHEN vt38.c0 COLLATE BINARY THEN (((vt38.c0, vt38.c0, vt38.c0))>((vt38.c0, vt38.c0, vt38.c0))) ELSE NULL END);
SELECT * FROM rt2, rt0, vt38 WHERE (((json_array_length(rt0.c2)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt0.c2)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt2, rt0, vt38);
SELECT * FROM rt2, rt0, vt38 WHERE (((json_array_length(rt0.c2)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt0.c2)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt2, rt0, vt38);
SELECT * FROM rt2, rt0, vt38 WHERE (((json_array_length(rt0.c2)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c1 IN ()))));
SELECT ALL * FROM rt2 WHERE (UNLIKELY(((rt2.c0) NOT NULL))) ORDER BY (NOT ((((rt2.c2))>=((rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt2.c0) NOT NULL))) IS TRUE)  as count FROM rt2 ORDER BY (NOT ((((rt2.c2))>=((rt2.c0))))));
SELECT ALL * FROM rt2 WHERE (UNLIKELY(((rt2.c0) NOT NULL))) ORDER BY (NOT ((((rt2.c2))>=((rt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((rt2.c0) NOT NULL))) IS TRUE)  as count FROM rt2 ORDER BY (NOT ((((rt2.c2))>=((rt2.c0))))));
SELECT ALL * FROM rt2 WHERE (UNLIKELY(((rt2.c0) NOT NULL))) ORDER BY (NOT ((((rt2.c2))>=((rt2.c0)))));
SELECT * FROM vt38, rt2 WHERE (TRIM(((vt38.c0) IS FALSE), (((rt2.c0)) BETWEEN ((vt38.c0)) AND ((vt38.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt38.c0) IS FALSE), (((rt2.c0)) BETWEEN ((vt38.c0)) AND ((vt38.c0))))) IS TRUE)  as count FROM vt38, rt2);
SELECT * FROM vt38, rt2 WHERE (TRIM(((vt38.c0) IS FALSE), (((rt2.c0)) BETWEEN ((vt38.c0)) AND ((vt38.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt38.c0) IS FALSE), (((rt2.c0)) BETWEEN ((vt38.c0)) AND ((vt38.c0))))) IS TRUE)  as count FROM vt38, rt2);
SELECT * FROM vt38, rt2 WHERE (TRIM(((vt38.c0) IS FALSE), (((rt2.c0)) BETWEEN ((vt38.c0)) AND ((vt38.c0)))));
SELECT ALL COUNT(*) FROM vt38, rt1 FULL OUTER JOIN rt2 ON (+ (QUOTE(rt2.c0))) WHERE ('33063900') ORDER BY (((rt2.c1)GLOB(rt1.c1)) IN ())  NULLS LAST, json_type(('958418693' IN ()))  NULLS FIRST, (((((('{R') NOT NULL))OR(((NULL)IS(rt2.c1)))))OR(CAST(rt2.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('33063900') IS TRUE)  as count FROM vt38, rt1 FULL OUTER JOIN rt2 ON (+ (QUOTE(rt2.c0))) ORDER BY (((rt2.c1)GLOB(rt1.c1)) IN ())  NULLS LAST, json_type(('958418693' IN ()))  NULLS FIRST, (((((('{R') NOT NULL))OR(((NULL)IS(rt2.c1)))))OR(CAST(rt2.c1 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt38, rt1 FULL OUTER JOIN rt2 ON (+ (QUOTE(rt2.c0))) WHERE ('33063900') ORDER BY (((rt2.c1)GLOB(rt1.c1)) IN ())  NULLS LAST, json_type(('958418693' IN ()))  NULLS FIRST, (((((('{R') NOT NULL))OR(((NULL)IS(rt2.c1)))))OR(CAST(rt2.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('33063900') IS TRUE)  as count FROM vt38, rt1 FULL OUTER JOIN rt2 ON (+ (QUOTE(rt2.c0))) ORDER BY (((rt2.c1)GLOB(rt1.c1)) IN ())  NULLS LAST, json_type(('958418693' IN ()))  NULLS FIRST, (((((('{R') NOT NULL))OR(((NULL)IS(rt2.c1)))))OR(CAST(rt2.c1 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt38, rt1 FULL OUTER JOIN rt2 ON (+ (QUOTE(rt2.c0))) WHERE ('33063900') ORDER BY (((rt2.c1)GLOB(rt1.c1)) IN ())  NULLS LAST, json_type(('958418693' IN ()))  NULLS FIRST, (((((('{R') NOT NULL))OR(((NULL)IS(rt2.c1)))))OR(CAST(rt2.c1 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM vt38 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE (CAST(NULL AS REAL));
SELECT ALL COUNT(*) FROM vt38 WHERE (((vt38.c0 COLLATE RTRIM)GLOB(IFNULL(DISTINCT vt38.c0, vt38.c0))));
SELECT SUM(count) FROM (SELECT ((((vt38.c0 COLLATE RTRIM)GLOB(IFNULL(DISTINCT vt38.c0, vt38.c0)))) IS TRUE)  as count FROM vt38);
SELECT ALL COUNT(*) FROM vt38 WHERE (((vt38.c0 COLLATE RTRIM)GLOB(IFNULL(DISTINCT vt38.c0, vt38.c0))));
SELECT SUM(count) FROM (SELECT ((((vt38.c0 COLLATE RTRIM)GLOB(IFNULL(DISTINCT vt38.c0, vt38.c0)))) IS TRUE)  as count FROM vt38);
SELECT ALL COUNT(*) FROM vt38 WHERE (((vt38.c0 COLLATE RTRIM)GLOB(IFNULL(DISTINCT vt38.c0, vt38.c0))));
SELECT ALL COUNT(*) FROM vt38, rt0 WHERE (LIKELY(CAST(rt0.c1 AS TEXT))) ORDER BY ((CASE WHEN vt38.c0 THEN rt0.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM vt38, rt0 ORDER BY ((CASE WHEN vt38.c0 THEN rt0.c1 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt38, rt0 WHERE (LIKELY(CAST(rt0.c1 AS TEXT))) ORDER BY ((CASE WHEN vt38.c0 THEN rt0.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM vt38, rt0 ORDER BY ((CASE WHEN vt38.c0 THEN rt0.c1 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt38, rt0 WHERE (LIKELY(CAST(rt0.c1 AS TEXT))) ORDER BY ((CASE WHEN vt38.c0 THEN rt0.c1 END) IS FALSE);
SELECT * FROM vt38, rt2 WHERE (((NULL) NOT BETWEEN (((x'')>=(rt2.c0))) AND (rt2.c0 COLLATE BINARY))) ORDER BY (((rt2.c2 IN (rt2.c1, 0xffffffffb993ef50))) NOT BETWEEN (CAST(rt2.c2 AS BLOB)) AND ((NOT (vt38.c0))))  NULLS LAST, ((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c1))) IS TRUE), ((((rt2.c0) BETWEEN (vt38.c0) AND (rt2.c2))) BETWEEN ((vt38.c0 IN (rt2.c2))) AND (rt2.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((x'')>=(rt2.c0))) AND (rt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt38, rt2 ORDER BY (((rt2.c2 IN (rt2.c1, 0Xffffffffb993ef50))) NOT BETWEEN (CAST(rt2.c2 AS BLOB)) AND ((NOT (vt38.c0))))  NULLS LAST, ((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c1))) IS TRUE), ((((rt2.c0) BETWEEN (vt38.c0) AND (rt2.c2))) BETWEEN ((vt38.c0 IN (rt2.c2))) AND (rt2.c0))  NULLS LAST);
SELECT * FROM vt38, rt2 WHERE (((NULL) NOT BETWEEN (((x'')>=(rt2.c0))) AND (rt2.c0 COLLATE BINARY))) ORDER BY (((rt2.c2 IN (rt2.c1, 0xffffffffb993ef50))) NOT BETWEEN (CAST(rt2.c2 AS BLOB)) AND ((NOT (vt38.c0))))  NULLS LAST, ((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c1))) IS TRUE), ((((rt2.c0) BETWEEN (vt38.c0) AND (rt2.c2))) BETWEEN ((vt38.c0 IN (rt2.c2))) AND (rt2.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((x'')>=(rt2.c0))) AND (rt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt38, rt2 ORDER BY (((rt2.c2 IN (rt2.c1, 0Xffffffffb993ef50))) NOT BETWEEN (CAST(rt2.c2 AS BLOB)) AND ((NOT (vt38.c0))))  NULLS LAST, ((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c1))) IS TRUE), ((((rt2.c0) BETWEEN (vt38.c0) AND (rt2.c2))) BETWEEN ((vt38.c0 IN (rt2.c2))) AND (rt2.c0))  NULLS LAST);
SELECT * FROM vt38, rt2 WHERE (((NULL) NOT BETWEEN (((x'')>=(rt2.c0))) AND (rt2.c0 COLLATE BINARY))) ORDER BY (((rt2.c2 IN (rt2.c1, 0xffffffffb993ef50))) NOT BETWEEN (CAST(rt2.c2 AS BLOB)) AND ((NOT (vt38.c0))))  NULLS LAST, ((((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c1))) IS TRUE), ((((rt2.c0) BETWEEN (vt38.c0) AND (rt2.c2))) BETWEEN ((vt38.c0 IN (rt2.c2))) AND (rt2.c0))  NULLS LAST;
SELECT * FROM rt0, vt38, rt2 WHERE (((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt2.c1)))OR(vt38.c0)))AND(rt0.c0)))AND(rt0.c1)))*(((rt2.c1) IS FALSE)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND (((+ (rt2.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt2.c1)))OR(vt38.c0)))AND(rt0.c0)))AND(rt0.c1)))*(((rt2.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt38, rt2 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND (((+ (rt2.c2)))))  NULLS FIRST);
SELECT * FROM rt0, vt38, rt2 WHERE (((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt2.c1)))OR(vt38.c0)))AND(rt0.c0)))AND(rt0.c1)))*(((rt2.c1) IS FALSE)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND (((+ (rt2.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt2.c1)))OR(vt38.c0)))AND(rt0.c0)))AND(rt0.c1)))*(((rt2.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, vt38, rt2 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND (((+ (rt2.c2)))))  NULLS FIRST);
SELECT * FROM rt0, vt38, rt2 WHERE (((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt2.c1)))OR(vt38.c0)))AND(rt0.c0)))AND(rt0.c1)))*(((rt2.c1) IS FALSE)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND (((+ (rt2.c2)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt38 LEFT OUTER JOIN rt2 ON (x'1a60783b' IN ()) WHERE ((((~ ('0.5740248931782899'))) IS TRUE)) ORDER BY -1.530398787E9 ASC  NULLS FIRST, ((((x'')AND(CAST(rt0.c3 AS INTEGER))))OR(((rt2.c0) NOTNULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((rt0.c0)/(rt0.c2)))) AND ((((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((~ ('0.5740248931782899'))) IS TRUE)) IS TRUE)  as count FROM rt0, vt38 LEFT OUTER JOIN rt2 ON (x'1a60783b' IN ()) ORDER BY -1.530398787E9 ASC  NULLS FIRST, ((((x'')AND(CAST(rt0.c3 AS INTEGER))))OR(((rt2.c0) NOTNULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((rt0.c0)/(rt0.c2)))) AND ((((rt0.c3) ISNULL)))));
SELECT COUNT(*) FROM rt0, vt38 LEFT OUTER JOIN rt2 ON (x'1a60783b' IN ()) WHERE ((((~ ('0.5740248931782899'))) IS TRUE)) ORDER BY -1.530398787E9 ASC  NULLS FIRST, ((((x'')AND(CAST(rt0.c3 AS INTEGER))))OR(((rt2.c0) NOTNULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((rt0.c0)/(rt0.c2)))) AND ((((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((~ ('0.5740248931782899'))) IS TRUE)) IS TRUE)  as count FROM rt0, vt38 LEFT OUTER JOIN rt2 ON (x'1a60783b' IN ()) ORDER BY -1.530398787E9 ASC  NULLS FIRST, ((((x'')AND(CAST(rt0.c3 AS INTEGER))))OR(((rt2.c0) NOTNULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((rt0.c0)/(rt0.c2)))) AND ((((rt0.c3) ISNULL)))));
SELECT COUNT(*) FROM rt0, vt38 LEFT OUTER JOIN rt2 ON (x'1a60783b' IN ()) WHERE ((((~ ('0.5740248931782899'))) IS TRUE)) ORDER BY -1.530398787E9 ASC  NULLS FIRST, ((((x'')AND(CAST(rt0.c3 AS INTEGER))))OR(((rt2.c0) NOTNULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((rt0.c0)/(rt0.c2)))) AND ((((rt0.c3) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, rt2, vt38 WHERE ((~ (((rt2.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((rt2.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, rt2, vt38);
SELECT ALL COUNT(*) FROM rt0, rt2, vt38 WHERE ((~ (((rt2.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((rt2.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, rt2, vt38);
SELECT ALL COUNT(*) FROM rt0, rt2, vt38 WHERE ((~ (((rt2.c1) IS FALSE))));
SELECT * FROM rt2, vt38, rt0 WHERE (CAST(CASE vt38.c0  WHEN rt2.c1 THEN 0.5138572679247094 ELSE '98889947' END AS BLOB)) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE '0.7331003160490668'  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END) AND (rt2.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt38.c0  WHEN rt2.c1 THEN 0.5138572679247094 ELSE '98889947' END AS BLOB)) IS TRUE)  as count FROM rt2, vt38, rt0 ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE '0.7331003160490668'  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END) AND (rt2.c0))  NULLS FIRST);
SELECT * FROM rt2, vt38, rt0 WHERE (CAST(CASE vt38.c0  WHEN rt2.c1 THEN 0.5138572679247094 ELSE '98889947' END AS BLOB)) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE '0.7331003160490668'  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END) AND (rt2.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt38.c0  WHEN rt2.c1 THEN 0.5138572679247094 ELSE '98889947' END AS BLOB)) IS TRUE)  as count FROM rt2, vt38, rt0 ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE '0.7331003160490668'  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END) AND (rt2.c0))  NULLS FIRST);
SELECT * FROM rt2, vt38, rt0 WHERE (CAST(CASE vt38.c0  WHEN rt2.c1 THEN 0.5138572679247094 ELSE '98889947' END AS BLOB)) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (CASE '0.7331003160490668'  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END) AND (rt2.c0))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (CAST(((rt1.c1) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (CAST(((rt1.c1) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, rt2);
SELECT COUNT(*) FROM rt0, rt1, rt2 WHERE (CAST(((rt1.c1) IS TRUE) AS TEXT));
SELECT COUNT(*) FROM rt0, rt1, vt38 WHERE ((((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1, vt38);
SELECT COUNT(*) FROM rt0, rt1, vt38 WHERE ((((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1, vt38);
SELECT COUNT(*) FROM rt0, rt1, vt38 WHERE ((((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1, vt38 FULL OUTER JOIN rt2 ON (NOT (((0.3378868847190134) IS FALSE))) WHERE ((- ((((rt1.c2))=((rt1.c4)))))) ORDER BY (~ ((((rt2.c1, rt2.c0, rt2.c0, rt2.c2, vt38.c0))<>((rt2.c2, 0X653baeae, rt1.c4, rt1.c2, rt2.c0))))), (((rt1.c4)IS(rt2.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2))==((rt1.c4)))))) IS TRUE)  as count FROM rt1, vt38 FULL OUTER JOIN rt2 ON (NOT (((0.3378868847190134) IS FALSE))) ORDER BY (~ ((((rt2.c1, rt2.c0, rt2.c0, rt2.c2, vt38.c0))<>((rt2.c2, 0x653baeae, rt1.c4, rt1.c2, rt2.c0))))), (((rt1.c4)IS(rt2.c1)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt38 FULL OUTER JOIN rt2 ON (NOT (((0.3378868847190134) IS FALSE))) WHERE ((- ((((rt1.c2))=((rt1.c4)))))) ORDER BY (~ ((((rt2.c1, rt2.c0, rt2.c0, rt2.c2, vt38.c0))<>((rt2.c2, 0X653baeae, rt1.c4, rt1.c2, rt2.c0))))), (((rt1.c4)IS(rt2.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((rt1.c2))==((rt1.c4)))))) IS TRUE)  as count FROM rt1, vt38 FULL OUTER JOIN rt2 ON (NOT (((0.3378868847190134) IS FALSE))) ORDER BY (~ ((((rt2.c1, rt2.c0, rt2.c0, rt2.c2, vt38.c0))<>((rt2.c2, 0x653baeae, rt1.c4, rt1.c2, rt2.c0))))), (((rt1.c4)IS(rt2.c1)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt38 FULL OUTER JOIN rt2 ON (NOT (((0.3378868847190134) IS FALSE))) WHERE ((- ((((rt1.c2))=((rt1.c4)))))) ORDER BY (~ ((((rt2.c1, rt2.c0, rt2.c0, rt2.c2, vt38.c0))<>((rt2.c2, 0X653baeae, rt1.c4, rt1.c2, rt2.c0))))), (((rt1.c4)IS(rt2.c1)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt38, rt2, rt1 WHERE (rt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM vt38, rt2, rt1);
SELECT COUNT(*) FROM vt38, rt2, rt1 WHERE (rt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM vt38, rt2, rt1);
SELECT COUNT(*) FROM vt38, rt2, rt1 WHERE (rt2.c0);
SELECT * FROM rt2, vt38, rt0, rt1 WHERE (0Xffffffffd22f64e6) ORDER BY CASE WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt2.c1)AND(rt1.c4)))AND(rt2.c1)))OR('')))OR(NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffffd22f64e6) IS TRUE)  as count FROM rt2, vt38, rt0, rt1 ORDER BY CASE WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt2.c1)AND(rt1.c4)))AND(rt2.c1)))OR('')))OR(NULL)) END  NULLS LAST);
SELECT * FROM rt2, vt38, rt0, rt1 WHERE (0Xffffffffd22f64e6) ORDER BY CASE WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt2.c1)AND(rt1.c4)))AND(rt2.c1)))OR('')))OR(NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffffd22f64e6) IS TRUE)  as count FROM rt2, vt38, rt0, rt1 ORDER BY CASE WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt2.c1)AND(rt1.c4)))AND(rt2.c1)))OR('')))OR(NULL)) END  NULLS LAST);
SELECT * FROM rt2, vt38, rt0, rt1 WHERE (0Xffffffffd22f64e6) ORDER BY CASE WHEN ((rt0.c0)%(rt0.c2)) THEN ((((((((rt2.c1)AND(rt1.c4)))AND(rt2.c1)))OR('')))OR(NULL)) END  NULLS LAST;
SELECT * FROM rt2, rt0 WHERE (CASE WHEN ((rt2.c1) NOTNULL) THEN ((((rt2.c1)AND(rt0.c3)))OR(rt0.c2)) ELSE (NOT (rt2.c2)) END) ORDER BY ((((((((((rt2.c1) ISNULL))AND(((rt0.c3)<>(rt0.c2)))))AND(((rt0.c2)%(rt0.c0)))))OR(DATE(rt2.c2, rt2.c1, '1220136738'))))AND(((rt2.c1)<(x'')))) ASC  NULLS LAST, (((rt0.c0)*('c5\r')) IN (((rt2.c0)IS NOT(rt2.c0)), JULIANDAY(rt2.c2, -1.064332932E9, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c1) NOTNULL) THEN ((((rt2.c1)AND(rt0.c3)))OR(rt0.c2)) ELSE (NOT (rt2.c2)) END) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((((((rt2.c1) ISNULL))AND(((rt0.c3)!=(rt0.c2)))))AND(((rt0.c2)%(rt0.c0)))))OR(DATE(rt2.c2, rt2.c1, '1220136738'))))AND(((rt2.c1)<(x'')))) ASC  NULLS LAST, (((rt0.c0)*('c5\r')) IN (((rt2.c0)IS NOT(rt2.c0)), JULIANDAY(rt2.c2, -1.064332932E9, rt0.c0)))  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE (CASE WHEN ((rt2.c1) NOTNULL) THEN ((((rt2.c1)AND(rt0.c3)))OR(rt0.c2)) ELSE (NOT (rt2.c2)) END) ORDER BY ((((((((((rt2.c1) ISNULL))AND(((rt0.c3)<>(rt0.c2)))))AND(((rt0.c2)%(rt0.c0)))))OR(DATE(rt2.c2, rt2.c1, '1220136738'))))AND(((rt2.c1)<(x'')))) ASC  NULLS LAST, (((rt0.c0)*('c5\r')) IN (((rt2.c0)IS NOT(rt2.c0)), JULIANDAY(rt2.c2, -1.064332932E9, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt2.c1) NOTNULL) THEN ((((rt2.c1)AND(rt0.c3)))OR(rt0.c2)) ELSE (NOT (rt2.c2)) END) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((((((((((rt2.c1) ISNULL))AND(((rt0.c3)!=(rt0.c2)))))AND(((rt0.c2)%(rt0.c0)))))OR(DATE(rt2.c2, rt2.c1, '1220136738'))))AND(((rt2.c1)<(x'')))) ASC  NULLS LAST, (((rt0.c0)*('c5\r')) IN (((rt2.c0)IS NOT(rt2.c0)), JULIANDAY(rt2.c2, -1.064332932E9, rt0.c0)))  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE (CASE WHEN ((rt2.c1) NOTNULL) THEN ((((rt2.c1)AND(rt0.c3)))OR(rt0.c2)) ELSE (NOT (rt2.c2)) END) ORDER BY ((((((((((rt2.c1) ISNULL))AND(((rt0.c3)<>(rt0.c2)))))AND(((rt0.c2)%(rt0.c0)))))OR(DATE(rt2.c2, rt2.c1, '1220136738'))))AND(((rt2.c1)<(x'')))) ASC  NULLS LAST, (((rt0.c0)*('c5\r')) IN (((rt2.c0)IS NOT(rt2.c0)), JULIANDAY(rt2.c2, -1.064332932E9, rt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END)AND(rt0.c3 COLLATE NOCASE)))AND((((vt38.c0, vt38.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt38.c0, rt0.c1)) AND ((x'5e72', rt0.c1, rt0.c1))))) WHERE ((((CAST(rt0.c3 AS TEXT)))=(((((rt0.c0, rt0.c3, rt0.c3))<>((rt0.c1, rt0.c0, rt0.c0))))))) ORDER BY ((1.046817665E9)>=(((x'')>=(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c3 AS TEXT)))=(((((rt0.c0, rt0.c3, rt0.c3))<>((rt0.c1, rt0.c0, rt0.c0))))))) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END)AND(rt0.c3 COLLATE NOCASE)))AND((((vt38.c0, vt38.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt38.c0, rt0.c1)) AND ((x'5e72', rt0.c1, rt0.c1))))) ORDER BY ((1.046817665E9)>=(((x'')>=(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END)AND(rt0.c3 COLLATE NOCASE)))AND((((vt38.c0, vt38.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt38.c0, rt0.c1)) AND ((x'5e72', rt0.c1, rt0.c1))))) WHERE ((((CAST(rt0.c3 AS TEXT)))=(((((rt0.c0, rt0.c3, rt0.c3))<>((rt0.c1, rt0.c0, rt0.c0))))))) ORDER BY ((1.046817665E9)>=(((x'')>=(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c3 AS TEXT)))=(((((rt0.c0, rt0.c3, rt0.c3))<>((rt0.c1, rt0.c0, rt0.c0))))))) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END)AND(rt0.c3 COLLATE NOCASE)))AND((((vt38.c0, vt38.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt38.c0, rt0.c1)) AND ((x'5e72', rt0.c1, rt0.c1))))) ORDER BY ((1.046817665E9)>=(((x'')>=(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt0 ON ((((CASE rt0.c3  WHEN rt0.c3 THEN vt38.c0 ELSE vt38.c0 END)AND(rt0.c3 COLLATE NOCASE)))AND((((vt38.c0, vt38.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt38.c0, rt0.c1)) AND ((x'5e72', rt0.c1, rt0.c1))))) WHERE ((((CAST(rt0.c3 AS TEXT)))=(((((rt0.c0, rt0.c3, rt0.c3))<>((rt0.c1, rt0.c0, rt0.c0))))))) ORDER BY ((1.046817665E9)>=(((x'')>=(rt0.c3)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2 WHERE (((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 ELSE '614334447' END) NOT BETWEEN (((rt2.c0)|(rt2.c0))) AND ((rt2.c1 IN (rt2.c2))))) ORDER BY (((0.27784766392496874))=((((rt2.c2) BETWEEN (rt2.c1) AND (NULL))))) ASC, (((NOT (rt2.c2))) NOT BETWEEN (rt2.c1) AND ((((rt2.c2, rt2.c2, '1504833830')) BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c2, rt2.c0, rt2.c1))))), rt2.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 ELSE '614334447' END) NOT BETWEEN (((rt2.c0)|(rt2.c0))) AND ((rt2.c1 IN (rt2.c2))))) IS TRUE)  as count FROM rt2 ORDER BY (((0.27784766392496874))=((((rt2.c2) BETWEEN (rt2.c1) AND (NULL))))) ASC, (((NOT (rt2.c2))) NOT BETWEEN (rt2.c1) AND ((((rt2.c2, rt2.c2, '1504833830')) BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c2, rt2.c0, rt2.c1))))), rt2.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 WHERE (((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 ELSE '614334447' END) NOT BETWEEN (((rt2.c0)|(rt2.c0))) AND ((rt2.c1 IN (rt2.c2))))) ORDER BY (((0.27784766392496874))=((((rt2.c2) BETWEEN (rt2.c1) AND (NULL))))) ASC, (((NOT (rt2.c2))) NOT BETWEEN (rt2.c1) AND ((((rt2.c2, rt2.c2, '1504833830')) BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c2, rt2.c0, rt2.c1))))), rt2.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 ELSE '614334447' END) NOT BETWEEN (((rt2.c0)|(rt2.c0))) AND ((rt2.c1 IN (rt2.c2))))) IS TRUE)  as count FROM rt2 ORDER BY (((0.27784766392496874))=((((rt2.c2) BETWEEN (rt2.c1) AND (NULL))))) ASC, (((NOT (rt2.c2))) NOT BETWEEN (rt2.c1) AND ((((rt2.c2, rt2.c2, '1504833830')) BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c2, rt2.c0, rt2.c1))))), rt2.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 WHERE (((CASE rt2.c2  WHEN rt2.c0 THEN rt2.c0 ELSE '614334447' END) NOT BETWEEN (((rt2.c0)|(rt2.c0))) AND ((rt2.c1 IN (rt2.c2))))) ORDER BY (((0.27784766392496874))=((((rt2.c2) BETWEEN (rt2.c1) AND (NULL))))) ASC, (((NOT (rt2.c2))) NOT BETWEEN (rt2.c1) AND ((((rt2.c2, rt2.c2, '1504833830')) BETWEEN ((rt2.c0, rt2.c0, rt2.c2)) AND ((rt2.c2, rt2.c0, rt2.c1))))), rt2.c0 ASC  NULLS LAST;
SELECT * FROM rt2, rt0 WHERE (((rt2.c2 COLLATE BINARY) BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt2.c2 COLLATE BINARY) BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt2.c0))))) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (((rt2.c2 COLLATE BINARY) BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt2.c2 COLLATE BINARY) BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt2.c0))))) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (((rt2.c2 COLLATE BINARY) BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt2.c0)))));
SELECT * FROM vt38 WHERE ((NOT ((((vt38.c0)) NOT BETWEEN ((vt38.c0)) AND ((vt38.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt38.c0)) NOT BETWEEN ((vt38.c0)) AND ((vt38.c0)))))) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE ((NOT ((((vt38.c0)) NOT BETWEEN ((vt38.c0)) AND ((vt38.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt38.c0)) NOT BETWEEN ((vt38.c0)) AND ((vt38.c0)))))) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE ((NOT ((((vt38.c0)) NOT BETWEEN ((vt38.c0)) AND ((vt38.c0))))));
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt38 ON load_extension(0.05781670638543823 COLLATE NOCASE) WHERE ((+ (x'd3f3' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (x'd3f3' COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt38 ON load_extension(0.05781670638543823 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt38 ON load_extension(0.05781670638543823 COLLATE NOCASE) WHERE ((+ (x'd3f3' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (x'd3f3' COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt38 ON load_extension(0.05781670638543823 COLLATE NOCASE));
SELECT ALL * FROM vt38 WHERE (((((vt38.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt38.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE (((((vt38.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt38.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE (((((vt38.c0) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM vt38, rt0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt38, rt0, rt1);
SELECT ALL COUNT(*) FROM vt38, rt0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt38, rt0, rt1);
SELECT ALL COUNT(*) FROM vt38, rt0, rt1 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt38, rt2 INNER JOIN rt0 ON TYPEOF(CAST(rt0.c0 AS BLOB)) WHERE (IFNULL(DISTINCT -1301897602, rt2.c2)) ORDER BY ((((rt0.c1)IS NOT(rt2.c2))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT -1301897602, rt2.c2)) IS TRUE)  as count FROM vt38, rt2 INNER JOIN rt0 ON TYPEOF(CAST(rt0.c0 AS BLOB)) ORDER BY ((((rt0.c1)IS NOT(rt2.c2))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt38, rt2 INNER JOIN rt0 ON TYPEOF(CAST(rt0.c0 AS BLOB)) WHERE (IFNULL(DISTINCT -1301897602, rt2.c2)) ORDER BY ((((rt0.c1)IS NOT(rt2.c2))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT -1301897602, rt2.c2)) IS TRUE)  as count FROM vt38, rt2 INNER JOIN rt0 ON TYPEOF(CAST(rt0.c0 AS BLOB)) ORDER BY ((((rt0.c1)IS NOT(rt2.c2))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt38, rt2 INNER JOIN rt0 ON TYPEOF(CAST(rt0.c0 AS BLOB)) WHERE (IFNULL(DISTINCT -1301897602, rt2.c2)) ORDER BY ((((rt0.c1)IS NOT(rt2.c2))) IS TRUE) DESC;
SELECT ALL * FROM rt0, vt38, rt2, rt1 WHERE (((((0.5521808160081944)AND(rt1.c2)))OR(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((0.5521808160081944)AND(rt1.c2)))OR(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt38, rt2, rt1);
SELECT ALL * FROM rt0, vt38, rt2, rt1 WHERE (((((0.5521808160081944)AND(rt1.c2)))OR(rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((0.5521808160081944)AND(rt1.c2)))OR(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt38, rt2, rt1);
SELECT ALL * FROM rt0, vt38, rt2, rt1 WHERE (((((0.5521808160081944)AND(rt1.c2)))OR(rt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt1 NOT INDEXED WHERE ('F)|');
SELECT SUM(count) FROM (SELECT (('F)|') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 NOT INDEXED WHERE ('F)|');
SELECT SUM(count) FROM (SELECT (('F)|') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 NOT INDEXED WHERE ('F)|');
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)<>(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)<>(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)<>(CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)<>(CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)<>(CAST(rt1.c2 AS BLOB))));
SELECT * FROM rt1, rt0, rt2 NOT INDEXED WHERE ((((rt1.c4, rt1.c1, rt1.c4, rt1.c1, rt0.c2)) NOT BETWEEN ((CHAR(rt2.c0, rt0.c2, rt0.c3), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt2.c1)), rt0.c0 COLLATE BINARY, (((rt0.c3))>((rt2.c2))), (x'' IN (rt0.c3)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), ((((rt2.c2)AND(rt1.c1)))OR(rt2.c1)), ((((rt1.c2)AND(rt1.c1)))OR(rt0.c2)), CASE rt2.c1  WHEN rt1.c3 THEN rt0.c3 END, ((rt1.c3)==(rt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4, rt1.c1, rt1.c4, rt1.c1, rt0.c2)) NOT BETWEEN ((CHAR(rt2.c0, rt0.c2, rt0.c3), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt2.c1)), rt0.c0 COLLATE BINARY, (((rt0.c3))>((rt2.c2))), (x'' IN (rt0.c3)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), ((((rt2.c2)AND(rt1.c1)))OR(rt2.c1)), ((((rt1.c2)AND(rt1.c1)))OR(rt0.c2)), CASE rt2.c1  WHEN rt1.c3 THEN rt0.c3 END, ((rt1.c3)==(rt2.c1)))))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 NOT INDEXED WHERE ((((rt1.c4, rt1.c1, rt1.c4, rt1.c1, rt0.c2)) NOT BETWEEN ((CHAR(rt2.c0, rt0.c2, rt0.c3), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt2.c1)), rt0.c0 COLLATE BINARY, (((rt0.c3))>((rt2.c2))), (x'' IN (rt0.c3)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), ((((rt2.c2)AND(rt1.c1)))OR(rt2.c1)), ((((rt1.c2)AND(rt1.c1)))OR(rt0.c2)), CASE rt2.c1  WHEN rt1.c3 THEN rt0.c3 END, ((rt1.c3)==(rt2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4, rt1.c1, rt1.c4, rt1.c1, rt0.c2)) NOT BETWEEN ((CHAR(rt2.c0, rt0.c2, rt0.c3), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt2.c1)), rt0.c0 COLLATE BINARY, (((rt0.c3))>((rt2.c2))), (x'' IN (rt0.c3)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), ((((rt2.c2)AND(rt1.c1)))OR(rt2.c1)), ((((rt1.c2)AND(rt1.c1)))OR(rt0.c2)), CASE rt2.c1  WHEN rt1.c3 THEN rt0.c3 END, ((rt1.c3)==(rt2.c1)))))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 NOT INDEXED WHERE ((((rt1.c4, rt1.c1, rt1.c4, rt1.c1, rt0.c2)) NOT BETWEEN ((CHAR(rt2.c0, rt0.c2, rt0.c3), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt2.c1)), rt0.c0 COLLATE BINARY, (((rt0.c3))>((rt2.c2))), (x'' IN (rt0.c3)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))), ((((rt2.c2)AND(rt1.c1)))OR(rt2.c1)), ((((rt1.c2)AND(rt1.c1)))OR(rt0.c2)), CASE rt2.c1  WHEN rt1.c3 THEN rt0.c3 END, ((rt1.c3)==(rt2.c1))))));
SELECT ALL COUNT(*) FROM vt38, rt2 WHERE (HEX(DISTINCT rt2.c2) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((CASE rt2.c2  WHEN vt38.c0 THEN rt2.c1 END)LIKE(((rt2.c0) NOT BETWEEN (rt2.c2) AND ('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt2.c2) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt2 ORDER BY ((CASE rt2.c2  WHEN vt38.c0 THEN rt2.c1 END)LIKE(((rt2.c0) NOT BETWEEN (rt2.c2) AND ('')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38, rt2 WHERE (HEX(DISTINCT rt2.c2) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((CASE rt2.c2  WHEN vt38.c0 THEN rt2.c1 END)LIKE(((rt2.c0) NOT BETWEEN (rt2.c2) AND ('')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt2.c2) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt2 ORDER BY ((CASE rt2.c2  WHEN vt38.c0 THEN rt2.c1 END)LIKE(((rt2.c0) NOT BETWEEN (rt2.c2) AND ('')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38, rt2 WHERE (HEX(DISTINCT rt2.c2) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((CASE rt2.c2  WHEN vt38.c0 THEN rt2.c1 END)LIKE(((rt2.c0) NOT BETWEEN (rt2.c2) AND ('')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt2, vt38, rt0 WHERE ((rt1.c4 IN ())) ORDER BY ((((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt2.c1)))OR(((((x'')AND(rt1.c0)))AND(rt0.c3)))))OR(UNLIKELY(DISTINCT vt38.c0)));
SELECT SUM(count) FROM (SELECT (((rt1.c4 IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED, rt2, vt38, rt0 ORDER BY ((((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt2.c1)))OR(((((x'')AND(rt1.c0)))AND(rt0.c3)))))OR(UNLIKELY(DISTINCT vt38.c0))));
SELECT ALL COUNT(*) FROM rt1, rt2, vt38, rt0 WHERE ((rt1.c4 IN ())) ORDER BY ((((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt2.c1)))OR(((((x'')AND(rt1.c0)))AND(rt0.c3)))))OR(UNLIKELY(DISTINCT vt38.c0)));
SELECT SUM(count) FROM (SELECT (((rt1.c4 IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED, rt2, vt38, rt0 ORDER BY ((((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt2.c1)))OR(((((x'')AND(rt1.c0)))AND(rt0.c3)))))OR(UNLIKELY(DISTINCT vt38.c0))));
SELECT ALL COUNT(*) FROM rt1, rt2, vt38, rt0 WHERE ((rt1.c4 IN ())) ORDER BY ((((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt2.c1)))OR(((((x'')AND(rt1.c0)))AND(rt0.c3)))))OR(UNLIKELY(DISTINCT vt38.c0)));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((~ (ROUND(rt0.c0, rt0.c2)))) ORDER BY x'' ASC, ((((rt0.c3)||(rt1.c1))) BETWEEN ((- (rt1.c3))) AND (((rt1.c1)GLOB(rt1.c1))))  NULLS FIRST, (((((('7sT[')AND('.F펅')))AND(rt1.c1)))-('-1947451620')) ASC, ((NULL)<((((rt1.c4, 0.7476679470648522, rt1.c4))>=((rt1.c3, x'd42b', rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (ROUND(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'' ASC, ((((rt0.c3)||(rt1.c1))) BETWEEN ((- (rt1.c3))) AND (((rt1.c1)GLOB(rt1.c1))))  NULLS FIRST, (((((('7sT[')AND('.F펅')))AND(rt1.c1)))-('-1947451620')) ASC, ((NULL)<((((rt1.c4, 0.7476679470648522, rt1.c4))>=((rt1.c3, x'd42b', rt0.c3))))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((~ (ROUND(rt0.c0, rt0.c2)))) ORDER BY x'' ASC, ((((rt0.c3)||(rt1.c1))) BETWEEN ((- (rt1.c3))) AND (((rt1.c1)GLOB(rt1.c1))))  NULLS FIRST, (((((('7sT[')AND('.F펅')))AND(rt1.c1)))-('-1947451620')) ASC, ((NULL)<((((rt1.c4, 0.7476679470648522, rt1.c4))>=((rt1.c3, x'd42b', rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (ROUND(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'' ASC, ((((rt0.c3)||(rt1.c1))) BETWEEN ((- (rt1.c3))) AND (((rt1.c1)GLOB(rt1.c1))))  NULLS FIRST, (((((('7sT[')AND('.F펅')))AND(rt1.c1)))-('-1947451620')) ASC, ((NULL)<((((rt1.c4, 0.7476679470648522, rt1.c4))>=((rt1.c3, x'd42b', rt0.c3))))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((~ (ROUND(rt0.c0, rt0.c2)))) ORDER BY x'' ASC, ((((rt0.c3)||(rt1.c1))) BETWEEN ((- (rt1.c3))) AND (((rt1.c1)GLOB(rt1.c1))))  NULLS FIRST, (((((('7sT[')AND('.F펅')))AND(rt1.c1)))-('-1947451620')) ASC, ((NULL)<((((rt1.c4, 0.7476679470648522, rt1.c4))>=((rt1.c3, x'd42b', rt0.c3))))) DESC;
SELECT ALL * FROM rt1, rt0, rt2, vt38 WHERE (((rt1.c3 IN (rt1.c2)) IN (((rt0.c2) NOT BETWEEN (x'') AND (rt1.c4)), UNLIKELY(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN (rt1.c2)) IN (((rt0.c2) NOT BETWEEN (x'') AND (rt1.c4)), UNLIKELY(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0, rt2, vt38);
SELECT ALL * FROM rt1, rt0, rt2, vt38 WHERE (((rt1.c3 IN (rt1.c2)) IN (((rt0.c2) NOT BETWEEN (x'') AND (rt1.c4)), UNLIKELY(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 IN (rt1.c2)) IN (((rt0.c2) NOT BETWEEN (x'') AND (rt1.c4)), UNLIKELY(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0, rt2, vt38);
SELECT ALL * FROM rt1, rt0, rt2, vt38 WHERE (((rt1.c3 IN (rt1.c2)) IN (((rt0.c2) NOT BETWEEN (x'') AND (rt1.c4)), UNLIKELY(rt0.c1))));
SELECT * FROM rt1 WHERE ((NOT ((- (rt1.c2))))) ORDER BY ((((((rt1.c4)<=(rt1.c0)))AND(((rt1.c3)==(rt1.c3)))))AND(((rt1.c4) NOT NULL))) ASC, (- (((((rt1.c1)OR(rt1.c0)))OR(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4)<=(rt1.c0)))AND(((rt1.c3)=(rt1.c3)))))AND(((rt1.c4) NOT NULL))) ASC, (- (((((rt1.c1)OR(rt1.c0)))OR(rt1.c3))))  NULLS LAST);
SELECT * FROM rt1 WHERE ((NOT ((- (rt1.c2))))) ORDER BY ((((((rt1.c4)<=(rt1.c0)))AND(((rt1.c3)==(rt1.c3)))))AND(((rt1.c4) NOT NULL))) ASC, (- (((((rt1.c1)OR(rt1.c0)))OR(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c4)<=(rt1.c0)))AND(((rt1.c3)=(rt1.c3)))))AND(((rt1.c4) NOT NULL))) ASC, (- (((((rt1.c1)OR(rt1.c0)))OR(rt1.c3))))  NULLS LAST);
SELECT * FROM rt1 WHERE ((NOT ((- (rt1.c2))))) ORDER BY ((((((rt1.c4)<=(rt1.c0)))AND(((rt1.c3)==(rt1.c3)))))AND(((rt1.c4) NOT NULL))) ASC, (- (((((rt1.c1)OR(rt1.c0)))OR(rt1.c3))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(((rt0.c3)+(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))), ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1) IS FALSE))))AND((((rt0.c2))!=((rt0.c0))))))OR(rt0.c1)))AND(NULL)))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))OR('1417360184'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(((rt0.c3)+(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))), ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1) IS FALSE))))AND((((rt0.c2))<>((rt0.c0))))))OR(rt0.c1)))AND(NULL)))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))OR('1417360184'))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(((rt0.c3)+(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))), ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1) IS FALSE))))AND((((rt0.c2))!=((rt0.c0))))))OR(rt0.c1)))AND(NULL)))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))OR('1417360184'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(((rt0.c3)+(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))), ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1) IS FALSE))))AND((((rt0.c2))<>((rt0.c0))))))OR(rt0.c1)))AND(NULL)))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))OR('1417360184'))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((((rt0.c3)AND(rt0.c0)))OR(((rt0.c3)+(rt0.c2)))))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))), ((((((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(((rt0.c1) IS FALSE))))AND((((rt0.c2))!=((rt0.c0))))))OR(rt0.c1)))AND(NULL)))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))))OR('1417360184'))  NULLS LAST;
SELECT * FROM rt0 WHERE ('865528782') ORDER BY (((((rt0.c3, rt0.c1, rt0.c3))==((rt0.c2, rt0.c1, rt0.c1)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('865528782') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3, rt0.c1, rt0.c3))=((rt0.c2, rt0.c1, rt0.c1)))) IS FALSE)  NULLS FIRST);
SELECT * FROM rt0 WHERE ('865528782') ORDER BY (((((rt0.c3, rt0.c1, rt0.c3))==((rt0.c2, rt0.c1, rt0.c1)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('865528782') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3, rt0.c1, rt0.c3))=((rt0.c2, rt0.c1, rt0.c1)))) IS FALSE)  NULLS FIRST);
SELECT * FROM rt0 WHERE ('865528782') ORDER BY (((((rt0.c3, rt0.c1, rt0.c3))==((rt0.c2, rt0.c1, rt0.c1)))) IS FALSE)  NULLS FIRST;
SELECT * FROM rt2, rt1 WHERE (CASE ((rt2.c1)<(rt2.c0))  WHEN NULL THEN NULL ELSE CASE WHEN rt1.c4 THEN rt2.c0 ELSE rt1.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt2.c1)<(rt2.c0))  WHEN NULL THEN NULL ELSE CASE WHEN rt1.c4 THEN rt2.c0 ELSE rt1.c3 END END) IS TRUE)  as count FROM rt2, rt1);
SELECT * FROM rt2, rt1 WHERE (CASE ((rt2.c1)<(rt2.c0))  WHEN NULL THEN NULL ELSE CASE WHEN rt1.c4 THEN rt2.c0 ELSE rt1.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt2.c1)<(rt2.c0))  WHEN NULL THEN NULL ELSE CASE WHEN rt1.c4 THEN rt2.c0 ELSE rt1.c3 END END) IS TRUE)  as count FROM rt2, rt1);
SELECT * FROM rt2, rt1 WHERE (CASE ((rt2.c1)<(rt2.c0))  WHEN NULL THEN NULL ELSE CASE WHEN rt1.c4 THEN rt2.c0 ELSE rt1.c3 END END);
SELECT ALL COUNT(*) FROM vt38, rt0, rt2 WHERE (rt0.c0) ORDER BY (((((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))OR(((((((((rt2.c1)AND(-513845820)))OR(rt2.c0)))OR(rt0.c2)))AND(rt2.c1)))))AND((NOT (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt38, rt0, rt2 ORDER BY (((((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))OR(((((((((rt2.c1)AND(-513845820)))OR(rt2.c0)))OR(rt0.c2)))AND(rt2.c1)))))AND((NOT (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38, rt0, rt2 WHERE (rt0.c0) ORDER BY (((((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))OR(((((((((rt2.c1)AND(-513845820)))OR(rt2.c0)))OR(rt0.c2)))AND(rt2.c1)))))AND((NOT (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt38, rt0, rt2 ORDER BY (((((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))OR(((((((((rt2.c1)AND(-513845820)))OR(rt2.c0)))OR(rt0.c2)))AND(rt2.c1)))))AND((NOT (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt38, rt0, rt2 WHERE (rt0.c0) ORDER BY (((((((rt2.c0)) BETWEEN ((rt2.c2)) AND ((x''))))OR(((((((((rt2.c1)AND(-513845820)))OR(rt2.c0)))OR(rt0.c2)))AND(rt2.c1)))))AND((NOT (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt2 RIGHT OUTER JOIN rt0 ON (((vt38.c0 IN ())) NOT BETWEEN ('1913071063' COLLATE RTRIM) AND (CAST(rt2.c0 AS INTEGER))) CROSS JOIN vt38 ON UPPER(((rt2.c2)==(rt0.c2))) WHERE ((- (((rt0.c1)<(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)<(rt2.c1))))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt0 ON (((vt38.c0 IN ())) NOT BETWEEN ('1913071063' COLLATE RTRIM) AND (CAST(rt2.c0 AS INTEGER))) CROSS JOIN vt38 ON UPPER(((rt2.c2)==(rt0.c2))));
SELECT ALL * FROM rt2 RIGHT OUTER JOIN rt0 ON (((vt38.c0 IN ())) NOT BETWEEN ('1913071063' COLLATE RTRIM) AND (CAST(rt2.c0 AS INTEGER))) CROSS JOIN vt38 ON UPPER(((rt2.c2)==(rt0.c2))) WHERE ((- (((rt0.c1)<(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)<(rt2.c1))))) IS TRUE)  as count FROM rt2 RIGHT OUTER JOIN rt0 ON (((vt38.c0 IN ())) NOT BETWEEN ('1913071063' COLLATE RTRIM) AND (CAST(rt2.c0 AS INTEGER))) CROSS JOIN vt38 ON UPPER(((rt2.c2)==(rt0.c2))));
SELECT ALL * FROM rt2 RIGHT OUTER JOIN rt0 ON (((vt38.c0 IN ())) NOT BETWEEN ('1913071063' COLLATE RTRIM) AND (CAST(rt2.c0 AS INTEGER))) CROSS JOIN vt38 ON UPPER(((rt2.c2)==(rt0.c2))) WHERE ((- (((rt0.c1)<(rt2.c1)))));
SELECT * FROM rt2 WHERE ((((rt2.c2, rt2.c2, rt2.c0)) NOT BETWEEN ((rt2.c1, rt2.c1, rt2.c1)) AND ((rt2.c2, rt2.c0, rt2.c1))) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt2.c2, rt2.c2, rt2.c0)) NOT BETWEEN ((rt2.c1, rt2.c1, rt2.c1)) AND ((rt2.c2, rt2.c0, rt2.c1))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ((((rt2.c2, rt2.c2, rt2.c0)) NOT BETWEEN ((rt2.c1, rt2.c1, rt2.c1)) AND ((rt2.c2, rt2.c0, rt2.c1))) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt2.c2, rt2.c2, rt2.c0)) NOT BETWEEN ((rt2.c1, rt2.c1, rt2.c1)) AND ((rt2.c2, rt2.c0, rt2.c1))) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE ((((rt2.c2, rt2.c2, rt2.c0)) NOT BETWEEN ((rt2.c1, rt2.c1, rt2.c1)) AND ((rt2.c2, rt2.c0, rt2.c1))) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c2)AND(rt1.c4)))AND(rt1.c2))))) ORDER BY (NULL IN ())  NULLS LAST, SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c2)AND(rt1.c4)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (NULL IN ())  NULLS LAST, SQLITE_VERSION());
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c2)AND(rt1.c4)))AND(rt1.c2))))) ORDER BY (NULL IN ())  NULLS LAST, SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c2)AND(rt1.c4)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (NULL IN ())  NULLS LAST, SQLITE_VERSION());
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((CAST(rt0.c2 AS REAL))IS NOT(((((rt0.c2)AND(rt1.c4)))AND(rt1.c2))))) ORDER BY (NULL IN ())  NULLS LAST, SQLITE_VERSION();
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((x'')/(rt1.c1))))) ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((NOT (((x'')/(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL));
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((x'')/(rt1.c1))))) ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((NOT (((x'')/(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL));
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((x'')/(rt1.c1))))) ORDER BY ((((rt1.c1) NOT NULL)) NOT NULL);
SELECT ALL * FROM rt0, vt38 WHERE ((((((rt0.c3))==((rt0.c3)))) NOT BETWEEN ((- (0.5799197991010707))) AND (((rt0.c3)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))==((rt0.c3)))) NOT BETWEEN ((- (0.5799197991010707))) AND (((rt0.c3)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL * FROM rt0, vt38 WHERE ((((((rt0.c3))==((rt0.c3)))) NOT BETWEEN ((- (0.5799197991010707))) AND (((rt0.c3)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))==((rt0.c3)))) NOT BETWEEN ((- (0.5799197991010707))) AND (((rt0.c3)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL * FROM rt0, vt38 WHERE ((((((rt0.c3))==((rt0.c3)))) NOT BETWEEN ((- (0.5799197991010707))) AND (((rt0.c3)>=(rt0.c2)))));
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (0.36221673436988056) ORDER BY CAST(((rt0.c2)=(rt1.c3)) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(rt1.c2)))<<(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.36221673436988056) IS TRUE)  as count FROM rt0, rt2, vt38, rt1 ORDER BY CAST(((rt0.c2)==(rt1.c3)) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(rt1.c2)))<<(rt0.c0)) DESC  NULLS FIRST);
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (0.36221673436988056) ORDER BY CAST(((rt0.c2)=(rt1.c3)) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(rt1.c2)))<<(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.36221673436988056) IS TRUE)  as count FROM rt0, rt2, vt38, rt1 ORDER BY CAST(((rt0.c2)==(rt1.c3)) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(rt1.c2)))<<(rt0.c0)) DESC  NULLS FIRST);
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (0.36221673436988056) ORDER BY CAST(((rt0.c2)=(rt1.c3)) AS TEXT)  NULLS LAST, ((((rt0.c2)AND(rt1.c2)))<<(rt0.c0)) DESC  NULLS FIRST;
SELECT * FROM rt2 WHERE (rt2.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM rt2, vt38, rt1, rt0 WHERE ('SU嚺(o') ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)>>(NULL)) ELSE rt0.c0 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ALL (('SU嚺(o') IS TRUE)  as count FROM rt2, vt38, rt1, rt0 ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)>>(NULL)) ELSE rt0.c0 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM rt2, vt38, rt1, rt0 WHERE ('SU嚺(o') ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)>>(NULL)) ELSE rt0.c0 COLLATE NOCASE END ASC;
SELECT SUM(count) FROM (SELECT ALL (('SU嚺(o') IS TRUE)  as count FROM rt2, vt38, rt1, rt0 ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)>>(NULL)) ELSE rt0.c0 COLLATE NOCASE END ASC);
SELECT COUNT(*) FROM rt2, vt38, rt1, rt0 WHERE ('SU嚺(o') ORDER BY CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c3)>>(NULL)) ELSE rt0.c0 COLLATE NOCASE END ASC;
SELECT ALL COUNT(*) FROM rt2, vt38 WHERE (((((rt2.c0 IN ())))>=((((NULL) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0 IN ())))>=((((NULL) ISNULL))))) IS TRUE)  as count FROM rt2, vt38);
SELECT ALL COUNT(*) FROM rt2, vt38 WHERE (((((rt2.c0 IN ())))>=((((NULL) ISNULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c0 IN ())))>=((((NULL) ISNULL))))) IS TRUE)  as count FROM rt2, vt38);
SELECT ALL COUNT(*) FROM rt2, vt38 WHERE (((((rt2.c0 IN ())))>=((((NULL) ISNULL)))));
SELECT COUNT(*) FROM vt38 NOT INDEXED, rt0 WHERE ((((0.7518165544803804) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.7518165544803804) NOTNULL) IN ())) IS TRUE)  as count FROM vt38, rt0);
SELECT COUNT(*) FROM vt38 NOT INDEXED, rt0 WHERE ((((0.7518165544803804) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0.7518165544803804) NOTNULL) IN ())) IS TRUE)  as count FROM vt38, rt0);
SELECT COUNT(*) FROM vt38 NOT INDEXED, rt0 WHERE ((((0.7518165544803804) NOTNULL) IN ()));
SELECT * FROM rt1, rt0, rt2 WHERE (TRIM(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c1)) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 WHERE (TRIM(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c1)) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT * FROM rt1, rt0, rt2 WHERE (TRIM(rt0.c1));
SELECT ALL * FROM vt38, rt2, rt1, rt0 WHERE ((+ (0.4783174294413727))) ORDER BY 'kC|KM*' COLLATE RTRIM DESC, ((((rt1.c4)<(rt1.c1)))<>((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (0.4783174294413727))) IS TRUE)  as count FROM vt38, rt2, rt1, rt0 ORDER BY 'kC|KM*' COLLATE RTRIM DESC, ((((rt1.c4)<(rt1.c1)))<>((rt0.c0 IN ()))));
SELECT ALL * FROM vt38, rt2, rt1, rt0 WHERE ((+ (0.4783174294413727))) ORDER BY 'kC|KM*' COLLATE RTRIM DESC, ((((rt1.c4)<(rt1.c1)))<>((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((+ (0.4783174294413727))) IS TRUE)  as count FROM vt38, rt2, rt1, rt0 ORDER BY 'kC|KM*' COLLATE RTRIM DESC, ((((rt1.c4)<(rt1.c1)))<>((rt0.c0 IN ()))));
SELECT ALL * FROM vt38, rt2, rt1, rt0 WHERE ((+ (0.4783174294413727))) ORDER BY 'kC|KM*' COLLATE RTRIM DESC, ((((rt1.c4)<(rt1.c1)))<>((rt0.c0 IN ())));
SELECT * FROM rt1, vt38 LEFT OUTER JOIN rt2 ON ((((rt2.c0)-(rt1.c4))) BETWEEN (((((((((rt1.c2)AND(rt1.c3)))OR(vt38.c0)))OR('v2_1')))OR(rt2.c1))) AND (CAST(rt1.c2 AS TEXT))) WHERE (rt1.c4) ORDER BY CAST(rt1.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, vt38 LEFT OUTER JOIN rt2 ON ((((rt2.c0)-(rt1.c4))) BETWEEN (((((((((rt1.c2)AND(rt1.c3)))OR(vt38.c0)))OR('v2_1')))OR(rt2.c1))) AND (CAST(rt1.c2 AS TEXT))) ORDER BY CAST(rt1.c0 AS BLOB));
SELECT * FROM rt1, vt38 LEFT OUTER JOIN rt2 ON ((((rt2.c0)-(rt1.c4))) BETWEEN (((((((((rt1.c2)AND(rt1.c3)))OR(vt38.c0)))OR('v2_1')))OR(rt2.c1))) AND (CAST(rt1.c2 AS TEXT))) WHERE (rt1.c4) ORDER BY CAST(rt1.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1, vt38 LEFT OUTER JOIN rt2 ON ((((rt2.c0)-(rt1.c4))) BETWEEN (((((((((rt1.c2)AND(rt1.c3)))OR(vt38.c0)))OR('v2_1')))OR(rt2.c1))) AND (CAST(rt1.c2 AS TEXT))) ORDER BY CAST(rt1.c0 AS BLOB));
SELECT * FROM rt1, vt38 LEFT OUTER JOIN rt2 ON ((((rt2.c0)-(rt1.c4))) BETWEEN (((((((((rt1.c2)AND(rt1.c3)))OR(vt38.c0)))OR('v2_1')))OR(rt2.c1))) AND (CAST(rt1.c2 AS TEXT))) WHERE (rt1.c4) ORDER BY CAST(rt1.c0 AS BLOB);
SELECT ALL * FROM rt0, rt2, rt1, vt38 WHERE (json_array_length(rt1.c1 COLLATE BINARY, (vt38.c0 IN ()))) ORDER BY ((CAST('ok컋B>9_' AS NUMERIC))<<(((rt1.c3)>>(rt0.c3)))) ASC  NULLS LAST, rt2.c2, ((rt2.c2 COLLATE BINARY)>=((+ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt1.c1 COLLATE BINARY, (vt38.c0 IN ()))) IS TRUE)  as count FROM rt0, rt2, rt1, vt38 ORDER BY ((CAST('ok컋B>9_' AS NUMERIC))<<(((rt1.c3)>>(rt0.c3)))) ASC  NULLS LAST, rt2.c2, ((rt2.c2 COLLATE BINARY)>=((+ (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt2, rt1, vt38 WHERE (json_array_length(rt1.c1 COLLATE BINARY, (vt38.c0 IN ()))) ORDER BY ((CAST('ok컋B>9_' AS NUMERIC))<<(((rt1.c3)>>(rt0.c3)))) ASC  NULLS LAST, rt2.c2, ((rt2.c2 COLLATE BINARY)>=((+ (rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array_length(rt1.c1 COLLATE BINARY, (vt38.c0 IN ()))) IS TRUE)  as count FROM rt0, rt2, rt1, vt38 ORDER BY ((CAST('ok컋B>9_' AS NUMERIC))<<(((rt1.c3)>>(rt0.c3)))) ASC  NULLS LAST, rt2.c2, ((rt2.c2 COLLATE BINARY)>=((+ (rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt2, rt1, vt38 WHERE (json_array_length(rt1.c1 COLLATE BINARY, (vt38.c0 IN ()))) ORDER BY ((CAST('ok컋B>9_' AS NUMERIC))<<(((rt1.c3)>>(rt0.c3)))) ASC  NULLS LAST, rt2.c2, ((rt2.c2 COLLATE BINARY)>=((+ (rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM rt2, vt38, rt0 WHERE (((x'')&((+ ('伯Infinity濨')))));
SELECT SUM(count) FROM (SELECT ((((x'')&((+ ('伯Infinity濨'))))) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT * FROM rt2, vt38, rt0 WHERE (((x'')&((+ ('伯Infinity濨')))));
SELECT SUM(count) FROM (SELECT ((((x'')&((+ ('伯Infinity濨'))))) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT * FROM rt2, vt38, rt0 WHERE (((x'')&((+ ('伯Infinity濨')))));
SELECT ALL COUNT(*) FROM rt2, rt1, rt0, vt38 WHERE (((CASE WHEN rt1.c0 THEN rt0.c2 WHEN NULL THEN rt2.c0 WHEN rt0.c0 THEN NULL ELSE rt0.c0 END)+(''))) ORDER BY ((((('251630759'))>((rt1.c4))))<=(((rt0.c3)<<(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c2 WHEN NULL THEN rt2.c0 WHEN rt0.c0 THEN NULL ELSE rt0.c0 END)+(''))) IS TRUE)  as count FROM rt2, rt1, rt0, vt38 ORDER BY ((((('251630759'))>((rt1.c4))))<=(((rt0.c3)<<(rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0, vt38 WHERE (((CASE WHEN rt1.c0 THEN rt0.c2 WHEN NULL THEN rt2.c0 WHEN rt0.c0 THEN NULL ELSE rt0.c0 END)+(''))) ORDER BY ((((('251630759'))>((rt1.c4))))<=(((rt0.c3)<<(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c2 WHEN NULL THEN rt2.c0 WHEN rt0.c0 THEN NULL ELSE rt0.c0 END)+(''))) IS TRUE)  as count FROM rt2, rt1, rt0, vt38 ORDER BY ((((('251630759'))>((rt1.c4))))<=(((rt0.c3)<<(rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0, vt38 WHERE (((CASE WHEN rt1.c0 THEN rt0.c2 WHEN NULL THEN rt2.c0 WHEN rt0.c0 THEN NULL ELSE rt0.c0 END)+(''))) ORDER BY ((((('251630759'))>((rt1.c4))))<=(((rt0.c3)<<(rt1.c2)))) ASC;
SELECT * FROM rt0, rt2 NOT INDEXED, rt1, vt38 WHERE (SQLITE_COMPILEOPTION_GET(LIKELY(-4.78224197E8))) ORDER BY ((((rt2.c1)IS NOT(rt1.c1)))OR(((((((((rt0.c1)OR(rt1.c4)))AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(LIKELY(-4.78224197E8))) IS TRUE)  as count FROM rt0, rt2, rt1, vt38 ORDER BY ((((rt2.c1)IS NOT(rt1.c1)))OR(((((((((rt0.c1)OR(rt1.c4)))AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c2))))  NULLS LAST);
SELECT * FROM rt0, rt2 NOT INDEXED, rt1, vt38 WHERE (SQLITE_COMPILEOPTION_GET(LIKELY(-4.78224197E8))) ORDER BY ((((rt2.c1)IS NOT(rt1.c1)))OR(((((((((rt0.c1)OR(rt1.c4)))AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(LIKELY(-4.78224197E8))) IS TRUE)  as count FROM rt0, rt2, rt1, vt38 ORDER BY ((((rt2.c1)IS NOT(rt1.c1)))OR(((((((((rt0.c1)OR(rt1.c4)))AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c2))))  NULLS LAST);
SELECT * FROM rt0, rt2 NOT INDEXED, rt1, vt38 WHERE (SQLITE_COMPILEOPTION_GET(LIKELY(-4.78224197E8))) ORDER BY ((((rt2.c1)IS NOT(rt1.c1)))OR(((((((((rt0.c1)OR(rt1.c4)))AND(rt0.c3)))OR(rt1.c2)))OR(rt0.c2))))  NULLS LAST;
SELECT * FROM vt38, rt1 WHERE (((((rt1.c2) IS TRUE))/(((rt1.c0) BETWEEN (rt1.c2) AND ('2011571473')))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))/(((rt1.c0) BETWEEN (rt1.c2) AND ('2011571473'))))) IS TRUE)  as count FROM vt38, rt1);
SELECT * FROM vt38, rt1 WHERE (((((rt1.c2) IS TRUE))/(((rt1.c0) BETWEEN (rt1.c2) AND ('2011571473')))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))/(((rt1.c0) BETWEEN (rt1.c2) AND ('2011571473'))))) IS TRUE)  as count FROM vt38, rt1);
SELECT * FROM vt38, rt1 WHERE (((((rt1.c2) IS TRUE))/(((rt1.c0) BETWEEN (rt1.c2) AND ('2011571473')))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((CASE x''  WHEN rt1.c2 THEN rt1.c3 END, ((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))<=(((((rt1.c4, rt1.c1, rt1.c4)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c4))), (((rt1.c1))<=((rt1.c3))), CASE WHEN rt1.c3 THEN rt1.c4 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE x''  WHEN rt1.c2 THEN rt1.c3 END, ((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))<=(((((rt1.c4, rt1.c1, rt1.c4)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c4))), (((rt1.c1))<=((rt1.c3))), CASE WHEN rt1.c3 THEN rt1.c4 END)))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((CASE x''  WHEN rt1.c2 THEN rt1.c3 END, ((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))<=(((((rt1.c4, rt1.c1, rt1.c4)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c4))), (((rt1.c1))<=((rt1.c3))), CASE WHEN rt1.c3 THEN rt1.c4 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE x''  WHEN rt1.c2 THEN rt1.c3 END, ((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))<=(((((rt1.c4, rt1.c1, rt1.c4)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c4))), (((rt1.c1))<=((rt1.c3))), CASE WHEN rt1.c3 THEN rt1.c4 END)))) IS TRUE)  as count FROM rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((CASE x''  WHEN rt1.c2 THEN rt1.c3 END, ((rt1.c2) ISNULL), CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END))<=(((((rt1.c4, rt1.c1, rt1.c4)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c4))), (((rt1.c1))<=((rt1.c3))), CASE WHEN rt1.c3 THEN rt1.c4 END))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))IS(CASE WHEN 0.3599512092552707 THEN rt1.c0 END))) ORDER BY rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))IS(CASE WHEN 0.3599512092552707 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))IS(CASE WHEN 0.3599512092552707 THEN rt1.c0 END))) ORDER BY rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))IS(CASE WHEN 0.3599512092552707 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))IS(CASE WHEN 0.3599512092552707 THEN rt1.c0 END))) ORDER BY rt1.c1 DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c1)>>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1)>>(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c1)>>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1)>>(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((rt1.c1)>>(rt1.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY ((rt0.c3 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE NOCASE) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY ((rt0.c3 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 COLLATE NOCASE) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT NULL)) ORDER BY ((rt0.c3 COLLATE NOCASE) NOT NULL)  NULLS LAST;
SELECT ALL * FROM rt2 FULL OUTER JOIN rt1 ON (((rt1.c3) NOT BETWEEN (rt2.c1) AND (rt1.c0)) IN ()) LEFT OUTER JOIN rt0 ON (((~ (NULL))) IS TRUE) CROSS JOIN vt38 ON ((((rt1.c4)<>(vt38.c0))) NOT BETWEEN (((rt0.c3)*(rt1.c4))) AND (CAST(rt2.c2 AS NUMERIC))) WHERE (NULL) ORDER BY 2131187739 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON (((rt1.c3) NOT BETWEEN (rt2.c1) AND (rt1.c0)) IN ()) LEFT OUTER JOIN rt0 ON (((~ (NULL))) IS TRUE) CROSS JOIN vt38 ON ((((rt1.c4)!=(vt38.c0))) NOT BETWEEN (((rt0.c3)*(rt1.c4))) AND (CAST(rt2.c2 AS NUMERIC))) ORDER BY 2131187739 ASC  NULLS LAST);
SELECT ALL * FROM rt2 FULL OUTER JOIN rt1 ON (((rt1.c3) NOT BETWEEN (rt2.c1) AND (rt1.c0)) IN ()) LEFT OUTER JOIN rt0 ON (((~ (NULL))) IS TRUE) CROSS JOIN vt38 ON ((((rt1.c4)<>(vt38.c0))) NOT BETWEEN (((rt0.c3)*(rt1.c4))) AND (CAST(rt2.c2 AS NUMERIC))) WHERE (NULL) ORDER BY 2131187739 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2 FULL OUTER JOIN rt1 ON (((rt1.c3) NOT BETWEEN (rt2.c1) AND (rt1.c0)) IN ()) LEFT OUTER JOIN rt0 ON (((~ (NULL))) IS TRUE) CROSS JOIN vt38 ON ((((rt1.c4)!=(vt38.c0))) NOT BETWEEN (((rt0.c3)*(rt1.c4))) AND (CAST(rt2.c2 AS NUMERIC))) ORDER BY 2131187739 ASC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c0 WHEN rt2.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END) BETWEEN (rt0.c0) AND ('0.2605078604681109')) RIGHT OUTER JOIN rt2 ON ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c4 END)OR(((rt1.c3)-(x'')))))AND((((rt1.c4, rt1.c4, rt1.c4, rt1.c3, rt0.c1))==((rt1.c1, rt1.c0, '642515650', rt1.c0, rt1.c0))))) CROSS JOIN vt38 ON ((json_patch(rt0.c2, rt0.c2)) NOT NULL) WHERE (CASE WHEN rt2.c0 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) ELSE CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt2.c2 THEN '' WHEN rt2.c1 THEN rt0.c3 ELSE rt1.c4 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt2.c0 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) ELSE CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt2.c2 THEN '' WHEN rt2.c1 THEN rt0.c3 ELSE rt1.c4 END END) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c0 WHEN rt2.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END) BETWEEN (rt0.c0) AND ('0.2605078604681109')) RIGHT OUTER JOIN rt2 ON ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c4 END)OR(((rt1.c3)-(x'')))))AND((((rt1.c4, rt1.c4, rt1.c4, rt1.c3, rt0.c1))=((rt1.c1, rt1.c0, '642515650', rt1.c0, rt1.c0))))) CROSS JOIN vt38 ON ((json_patch(rt0.c2, rt0.c2)) NOT NULL));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c0 WHEN rt2.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END) BETWEEN (rt0.c0) AND ('0.2605078604681109')) RIGHT OUTER JOIN rt2 ON ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c4 END)OR(((rt1.c3)-(x'')))))AND((((rt1.c4, rt1.c4, rt1.c4, rt1.c3, rt0.c1))==((rt1.c1, rt1.c0, '642515650', rt1.c0, rt1.c0))))) CROSS JOIN vt38 ON ((json_patch(rt0.c2, rt0.c2)) NOT NULL) WHERE (CASE WHEN rt2.c0 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) ELSE CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt2.c2 THEN '' WHEN rt2.c1 THEN rt0.c3 ELSE rt1.c4 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt2.c0 COLLATE NOCASE THEN CAST(rt0.c2 AS INTEGER) ELSE CASE WHEN rt0.c2 THEN rt1.c4 WHEN rt2.c2 THEN '' WHEN rt2.c1 THEN rt0.c3 ELSE rt1.c4 END END) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((CASE rt0.c1  WHEN rt1.c3 THEN rt1.c0 WHEN rt2.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c3 END) BETWEEN (rt0.c0) AND ('0.2605078604681109')) RIGHT OUTER JOIN rt2 ON ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c4 END)OR(((rt1.c3)-(x'')))))AND((((rt1.c4, rt1.c4, rt1.c4, rt1.c3, rt0.c1))=((rt1.c1, rt1.c0, '642515650', rt1.c0, rt1.c0))))) CROSS JOIN vt38 ON ((json_patch(rt0.c2, rt0.c2)) NOT NULL));
SELECT * FROM rt2, rt0, vt38 WHERE (CASE (~ (0x73b497d0))  WHEN rt0.c0 THEN ((rt2.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (0X73b497d0))  WHEN rt0.c0 THEN ((rt2.c0) IS FALSE) END) IS TRUE)  as count FROM rt2, rt0, vt38);
SELECT * FROM rt2, rt0, vt38 WHERE (CASE (~ (0x73b497d0))  WHEN rt0.c0 THEN ((rt2.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (0X73b497d0))  WHEN rt0.c0 THEN ((rt2.c0) IS FALSE) END) IS TRUE)  as count FROM rt2, rt0, vt38);
SELECT * FROM rt2, rt0, vt38 WHERE (CASE (~ (0x73b497d0))  WHEN rt0.c0 THEN ((rt2.c0) IS FALSE) END);
SELECT * FROM vt38, rt1, rt0 WHERE (CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT)) ORDER BY (((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt38, rt1, rt0 ORDER BY (((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((rt1.c3))));
SELECT * FROM vt38, rt1, rt0 WHERE (CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT)) ORDER BY (((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt38, rt1, rt0 ORDER BY (((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((rt1.c3))));
SELECT * FROM vt38, rt1, rt0 WHERE (CAST(CAST(rt1.c3 AS NUMERIC) AS TEXT)) ORDER BY (((rt1.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((rt1.c3)));
SELECT * FROM rt2 WHERE (rt2.c1);
SELECT SUM(count) FROM (SELECT ((rt2.c1) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c1);
SELECT SUM(count) FROM (SELECT ((rt2.c1) IS TRUE)  as count FROM rt2);
SELECT * FROM rt2 WHERE (rt2.c1);
SELECT ALL COUNT(*) FROM rt1, rt2, vt38 WHERE ((NOT (HEX(DISTINCT rt2.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(DISTINCT rt2.c1)))) IS TRUE)  as count FROM rt1, rt2, vt38);
SELECT ALL COUNT(*) FROM rt1, rt2, vt38 WHERE ((NOT (HEX(DISTINCT rt2.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(DISTINCT rt2.c1)))) IS TRUE)  as count FROM rt1, rt2, vt38);
SELECT ALL COUNT(*) FROM rt1, rt2, vt38 WHERE ((NOT (HEX(DISTINCT rt2.c1))));
SELECT ALL COUNT(*) FROM vt38 INNER JOIN rt2 ON ((rt2.c2 COLLATE NOCASE) NOT NULL) WHERE (((((rt2.c0) NOT BETWEEN (rt2.c2) AND (vt38.c0)))AND(''))) ORDER BY (((CAST(rt2.c2 AS INTEGER), ((vt38.c0)IS NOT(vt38.c0)), ((rt2.c2)-(rt2.c1))))=((TYPEOF(DISTINCT rt2.c2), (rt2.c0 IN ()), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0) NOT BETWEEN (rt2.c2) AND (vt38.c0)))AND(''))) IS TRUE)  as count FROM vt38 INNER JOIN rt2 ON ((rt2.c2 COLLATE NOCASE) NOT NULL) ORDER BY (((CAST(rt2.c2 AS INTEGER), ((vt38.c0)IS NOT(vt38.c0)), ((rt2.c2)-(rt2.c1))))=((TYPEOF(DISTINCT rt2.c2), (rt2.c0 IN ()), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt38 INNER JOIN rt2 ON ((rt2.c2 COLLATE NOCASE) NOT NULL) WHERE (((((rt2.c0) NOT BETWEEN (rt2.c2) AND (vt38.c0)))AND(''))) ORDER BY (((CAST(rt2.c2 AS INTEGER), ((vt38.c0)IS NOT(vt38.c0)), ((rt2.c2)-(rt2.c1))))=((TYPEOF(DISTINCT rt2.c2), (rt2.c0 IN ()), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt2.c0) NOT BETWEEN (rt2.c2) AND (vt38.c0)))AND(''))) IS TRUE)  as count FROM vt38 INNER JOIN rt2 ON ((rt2.c2 COLLATE NOCASE) NOT NULL) ORDER BY (((CAST(rt2.c2 AS INTEGER), ((vt38.c0)IS NOT(vt38.c0)), ((rt2.c2)-(rt2.c1))))=((TYPEOF(DISTINCT rt2.c2), (rt2.c0 IN ()), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt38 INNER JOIN rt2 ON ((rt2.c2 COLLATE NOCASE) NOT NULL) WHERE (((((rt2.c0) NOT BETWEEN (rt2.c2) AND (vt38.c0)))AND(''))) ORDER BY (((CAST(rt2.c2 AS INTEGER), ((vt38.c0)IS NOT(vt38.c0)), ((rt2.c2)-(rt2.c1))))=((TYPEOF(DISTINCT rt2.c2), (rt2.c0 IN ()), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c0)))))  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (IFNULL(DISTINCT ((rt0.c3)LIKE(rt1.c2)), ((rt0.c3)=(rt1.c2)))) ORDER BY CAST(CASE WHEN 0.9364969231066349 THEN rt0.c1 ELSE rt0.c1 END AS NUMERIC)  NULLS LAST, ((rt0.c3)||(rt1.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c3)LIKE(rt1.c2)), ((rt0.c3)==(rt1.c2)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CASE WHEN 0.9364969231066349 THEN rt0.c1 ELSE rt0.c1 END AS NUMERIC)  NULLS LAST, ((rt0.c3)||(rt1.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (IFNULL(DISTINCT ((rt0.c3)LIKE(rt1.c2)), ((rt0.c3)=(rt1.c2)))) ORDER BY CAST(CASE WHEN 0.9364969231066349 THEN rt0.c1 ELSE rt0.c1 END AS NUMERIC)  NULLS LAST, ((rt0.c3)||(rt1.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c3)LIKE(rt1.c2)), ((rt0.c3)==(rt1.c2)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CASE WHEN 0.9364969231066349 THEN rt0.c1 ELSE rt0.c1 END AS NUMERIC)  NULLS LAST, ((rt0.c3)||(rt1.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (IFNULL(DISTINCT ((rt0.c3)LIKE(rt1.c2)), ((rt0.c3)=(rt1.c2)))) ORDER BY CAST(CASE WHEN 0.9364969231066349 THEN rt0.c1 ELSE rt0.c1 END AS NUMERIC)  NULLS LAST, ((rt0.c3)||(rt1.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE)));
SELECT * FROM rt2, vt38 WHERE (((~ (rt2.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt2.c2)) IN ())) IS TRUE)  as count FROM rt2, vt38);
SELECT * FROM rt2, vt38 WHERE (((~ (rt2.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt2.c2)) IN ())) IS TRUE)  as count FROM rt2, vt38);
SELECT * FROM rt2, vt38 WHERE (((~ (rt2.c2)) IN ()));
SELECT ALL * FROM rt2, rt1, rt0 WHERE (('㽾둒' IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((('㽾둒' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (('㽾둒' IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((('㽾둒' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT ALL * FROM rt2, rt1, rt0 WHERE (('㽾둒' IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt38, rt2 CROSS JOIN rt1 ON (((((('Y&?k੖_')AND(rt1.c2)))OR(rt2.c2))) IS TRUE) WHERE (((((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt2.c1))), ((rt2.c0) BETWEEN (rt2.c1) AND (rt1.c2)), CASE WHEN rt2.c0 THEN rt1.c2 ELSE rt1.c2 END))>((((rt1.c3) ISNULL), CHAR(rt1.c3), ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c3)))))) ORDER BY TRIM(x'64a9629c') ASC  NULLS FIRST, CASE WHEN ((rt2.c0)IS(vt38.c0)) THEN (((rt2.c2)) BETWEEN ((rt2.c0)) AND ((rt1.c2))) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt2.c1))), ((rt2.c0) BETWEEN (rt2.c1) AND (rt1.c2)), CASE WHEN rt2.c0 THEN rt1.c2 ELSE rt1.c2 END))>((((rt1.c3) ISNULL), CHAR(rt1.c3), ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c3)))))) IS TRUE)  as count FROM vt38, rt2 CROSS JOIN rt1 ON (((((('Y&?k੖_')AND(rt1.c2)))OR(rt2.c2))) IS TRUE) ORDER BY TRIM(x'64a9629c') ASC  NULLS FIRST, CASE WHEN ((rt2.c0)IS(vt38.c0)) THEN (((rt2.c2)) BETWEEN ((rt2.c0)) AND ((rt1.c2))) END);
SELECT ALL COUNT(*) FROM vt38, rt2 CROSS JOIN rt1 ON (((((('Y&?k੖_')AND(rt1.c2)))OR(rt2.c2))) IS TRUE) WHERE (((((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt2.c1))), ((rt2.c0) BETWEEN (rt2.c1) AND (rt1.c2)), CASE WHEN rt2.c0 THEN rt1.c2 ELSE rt1.c2 END))>((((rt1.c3) ISNULL), CHAR(rt1.c3), ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c3)))))) ORDER BY TRIM(x'64a9629c') ASC  NULLS FIRST, CASE WHEN ((rt2.c0)IS(vt38.c0)) THEN (((rt2.c2)) BETWEEN ((rt2.c0)) AND ((rt1.c2))) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt2.c1))), ((rt2.c0) BETWEEN (rt2.c1) AND (rt1.c2)), CASE WHEN rt2.c0 THEN rt1.c2 ELSE rt1.c2 END))>((((rt1.c3) ISNULL), CHAR(rt1.c3), ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c3)))))) IS TRUE)  as count FROM vt38, rt2 CROSS JOIN rt1 ON (((((('Y&?k੖_')AND(rt1.c2)))OR(rt2.c2))) IS TRUE) ORDER BY TRIM(x'64a9629c') ASC  NULLS FIRST, CASE WHEN ((rt2.c0)IS(vt38.c0)) THEN (((rt2.c2)) BETWEEN ((rt2.c0)) AND ((rt1.c2))) END);
SELECT ALL COUNT(*) FROM vt38, rt2 CROSS JOIN rt1 ON (((((('Y&?k੖_')AND(rt1.c2)))OR(rt2.c2))) IS TRUE) WHERE (((((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt2.c1))), ((rt2.c0) BETWEEN (rt2.c1) AND (rt1.c2)), CASE WHEN rt2.c0 THEN rt1.c2 ELSE rt1.c2 END))>((((rt1.c3) ISNULL), CHAR(rt1.c3), ((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt1.c3)))))) ORDER BY TRIM(x'64a9629c') ASC  NULLS FIRST, CASE WHEN ((rt2.c0)IS(vt38.c0)) THEN (((rt2.c2)) BETWEEN ((rt2.c0)) AND ((rt1.c2))) END;
SELECT ALL * FROM rt1 WHERE (((((((((((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(rt1.c1)))AND(((rt1.c1) ISNULL))))AND(x'')))OR((+ (rt1.c3)))))OR(IFNULL(rt1.c0, rt1.c0))))AND(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(rt1.c1)))AND(((rt1.c1) ISNULL))))AND(x'')))OR((+ (rt1.c3)))))OR(IFNULL(rt1.c0, rt1.c0))))AND(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(rt1.c1)))AND(((rt1.c1) ISNULL))))AND(x'')))OR((+ (rt1.c3)))))OR(IFNULL(rt1.c0, rt1.c0))))AND(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(rt1.c1)))AND(((rt1.c1) ISNULL))))AND(x'')))OR((+ (rt1.c3)))))OR(IFNULL(rt1.c0, rt1.c0))))AND(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((((((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(rt1.c1)))AND(((rt1.c1) ISNULL))))AND(x'')))OR((+ (rt1.c3)))))OR(IFNULL(rt1.c0, rt1.c0))))AND(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))AND(rt1.c2)))));
SELECT COUNT(*) FROM rt0, rt2 WHERE (((((rt2.c1) NOTNULL)) NOT BETWEEN (((rt2.c1)&(rt0.c2))) AND (rt2.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1) NOTNULL)) NOT BETWEEN (((rt2.c1)&(rt0.c2))) AND (rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE (((((rt2.c1) NOTNULL)) NOT BETWEEN (((rt2.c1)&(rt0.c2))) AND (rt2.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1) NOTNULL)) NOT BETWEEN (((rt2.c1)&(rt0.c2))) AND (rt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE (((((rt2.c1) NOTNULL)) NOT BETWEEN (((rt2.c1)&(rt0.c2))) AND (rt2.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (ROUND(((rt0.c2) IS FALSE), ((rt0.c3) NOT NULL))) ORDER BY (TRIM(rt0.c2, rt0.c2) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND(((rt0.c2) IS FALSE), ((rt0.c3) NOT NULL))) IS TRUE)  as count FROM rt0 ORDER BY (TRIM(rt0.c2, rt0.c2) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (ROUND(((rt0.c2) IS FALSE), ((rt0.c3) NOT NULL))) ORDER BY (TRIM(rt0.c2, rt0.c2) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ROUND(((rt0.c2) IS FALSE), ((rt0.c3) NOT NULL))) IS TRUE)  as count FROM rt0 ORDER BY (TRIM(rt0.c2, rt0.c2) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (ROUND(((rt0.c2) IS FALSE), ((rt0.c3) NOT NULL))) ORDER BY (TRIM(rt0.c2, rt0.c2) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt2 ON (((((rt2.c0, rt0.c2, rt0.c3))!=((rt0.c2, x'8fbe', rt0.c0))))>(((((rt0.c1)AND(rt0.c0)))OR(rt2.c1)))) WHERE (((('0.8653036579666311'))<=((CASE WHEN 0.11077232894174394 THEN rt0.c1 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((('0.8653036579666311'))<=((CASE WHEN 0.11077232894174394 THEN rt0.c1 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON (((((rt2.c0, rt0.c2, rt0.c3))<>((rt0.c2, x'8fbe', rt0.c0))))>(((((rt0.c1)AND(rt0.c0)))OR(rt2.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt2 ON (((((rt2.c0, rt0.c2, rt0.c3))!=((rt0.c2, x'8fbe', rt0.c0))))>(((((rt0.c1)AND(rt0.c0)))OR(rt2.c1)))) WHERE (((('0.8653036579666311'))<=((CASE WHEN 0.11077232894174394 THEN rt0.c1 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((('0.8653036579666311'))<=((CASE WHEN 0.11077232894174394 THEN rt0.c1 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt2 ON (((((rt2.c0, rt0.c2, rt0.c3))<>((rt0.c2, x'8fbe', rt0.c0))))>(((((rt0.c1)AND(rt0.c0)))OR(rt2.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt2 ON (((((rt2.c0, rt0.c2, rt0.c3))!=((rt0.c2, x'8fbe', rt0.c0))))>(((((rt0.c1)AND(rt0.c0)))OR(rt2.c1)))) WHERE (((('0.8653036579666311'))<=((CASE WHEN 0.11077232894174394 THEN rt0.c1 ELSE rt0.c0 END))));
SELECT COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE (((((((rt1.c2))!=((rt0.c2))), (((rt1.c4)) NOT BETWEEN ((vt38.c0)) AND ((rt0.c2))), ((x'') BETWEEN (rt2.c0) AND (rt2.c0))))>((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), ((rt2.c2)|(rt0.c3)))))) ORDER BY (((rt0.c2)<=(rt2.c1)) IN ())  NULLS LAST, (+ (CASE WHEN rt0.c0 THEN vt38.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2))!=((rt0.c2))), (((rt1.c4)) NOT BETWEEN ((vt38.c0)) AND ((rt0.c2))), ((x'') BETWEEN (rt2.c0) AND (rt2.c0))))>((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), ((rt2.c2)|(rt0.c3)))))) IS TRUE)  as count FROM vt38, rt0, rt1, rt2 ORDER BY (((rt0.c2)<=(rt2.c1)) IN ())  NULLS LAST, (+ (CASE WHEN rt0.c0 THEN vt38.c0 ELSE rt0.c1 END)) DESC);
SELECT COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE (((((((rt1.c2))!=((rt0.c2))), (((rt1.c4)) NOT BETWEEN ((vt38.c0)) AND ((rt0.c2))), ((x'') BETWEEN (rt2.c0) AND (rt2.c0))))>((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), ((rt2.c2)|(rt0.c3)))))) ORDER BY (((rt0.c2)<=(rt2.c1)) IN ())  NULLS LAST, (+ (CASE WHEN rt0.c0 THEN vt38.c0 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2))!=((rt0.c2))), (((rt1.c4)) NOT BETWEEN ((vt38.c0)) AND ((rt0.c2))), ((x'') BETWEEN (rt2.c0) AND (rt2.c0))))>((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), ((rt2.c2)|(rt0.c3)))))) IS TRUE)  as count FROM vt38, rt0, rt1, rt2 ORDER BY (((rt0.c2)<=(rt2.c1)) IN ())  NULLS LAST, (+ (CASE WHEN rt0.c0 THEN vt38.c0 ELSE rt0.c1 END)) DESC);
SELECT COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE (((((((rt1.c2))!=((rt0.c2))), (((rt1.c4)) NOT BETWEEN ((vt38.c0)) AND ((rt0.c2))), ((x'') BETWEEN (rt2.c0) AND (rt2.c0))))>((rt0.c1 COLLATE NOCASE, CAST(rt0.c2 AS INTEGER), ((rt2.c2)|(rt0.c3)))))) ORDER BY (((rt0.c2)<=(rt2.c1)) IN ())  NULLS LAST, (+ (CASE WHEN rt0.c0 THEN vt38.c0 ELSE rt0.c1 END)) DESC;
SELECT ALL * FROM rt2 WHERE (0.45932065512241915);
SELECT SUM(count) FROM (SELECT ALL ((0.45932065512241915) IS TRUE)  as count FROM rt2 NOT INDEXED);
SELECT ALL * FROM rt2 WHERE (0.45932065512241915);
SELECT SUM(count) FROM (SELECT ALL ((0.45932065512241915) IS TRUE)  as count FROM rt2 NOT INDEXED);
SELECT ALL * FROM rt2 WHERE (0.45932065512241915);
SELECT ALL COUNT(*) FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON rt2.c1 CROSS JOIN rt0 ON (((((rt1.c0)<>(rt1.c4))))<>((((((rt1.c1)OR(rt2.c0)))OR(0.917733352989304))))) WHERE (CAST('-536389958' AS BLOB)) ORDER BY ((~ (rt0.c1)) IN (rt2.c1, NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('-536389958' AS BLOB)) IS TRUE)  as count FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON rt2.c1 CROSS JOIN rt0 ON (((((rt1.c0)!=(rt1.c4))))<>((((((rt1.c1)OR(rt2.c0)))OR(0.917733352989304))))) ORDER BY ((~ (rt0.c1)) IN (rt2.c1, NULL)) ASC);
SELECT ALL COUNT(*) FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON rt2.c1 CROSS JOIN rt0 ON (((((rt1.c0)<>(rt1.c4))))<>((((((rt1.c1)OR(rt2.c0)))OR(0.917733352989304))))) WHERE (CAST('-536389958' AS BLOB)) ORDER BY ((~ (rt0.c1)) IN (rt2.c1, NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('-536389958' AS BLOB)) IS TRUE)  as count FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON rt2.c1 CROSS JOIN rt0 ON (((((rt1.c0)!=(rt1.c4))))<>((((((rt1.c1)OR(rt2.c0)))OR(0.917733352989304))))) ORDER BY ((~ (rt0.c1)) IN (rt2.c1, NULL)) ASC);
SELECT ALL COUNT(*) FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON rt2.c1 CROSS JOIN rt0 ON (((((rt1.c0)<>(rt1.c4))))<>((((((rt1.c1)OR(rt2.c0)))OR(0.917733352989304))))) WHERE (CAST('-536389958' AS BLOB)) ORDER BY ((~ (rt0.c1)) IN (rt2.c1, NULL)) ASC;
SELECT ALL * FROM vt38, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt38, rt0);
SELECT ALL * FROM vt38, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt38, rt0);
SELECT ALL * FROM vt38, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt2 INNER JOIN vt38 ON CAST(rt2.c2 COLLATE RTRIM AS INTEGER) WHERE ((((~ (rt2.c0)))<=(((((vt38.c0)AND(rt2.c2)))OR(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt2.c0)))<=(((((vt38.c0)AND(rt2.c2)))OR(rt2.c1))))) IS TRUE)  as count FROM rt2 INNER JOIN vt38 ON CAST(rt2.c2 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM rt2 INNER JOIN vt38 ON CAST(rt2.c2 COLLATE RTRIM AS INTEGER) WHERE ((((~ (rt2.c0)))<=(((((vt38.c0)AND(rt2.c2)))OR(rt2.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt2.c0)))<=(((((vt38.c0)AND(rt2.c2)))OR(rt2.c1))))) IS TRUE)  as count FROM rt2 INNER JOIN vt38 ON CAST(rt2.c2 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM rt2 INNER JOIN vt38 ON CAST(rt2.c2 COLLATE RTRIM AS INTEGER) WHERE ((((~ (rt2.c0)))<=(((((vt38.c0)AND(rt2.c2)))OR(rt2.c1)))));
SELECT COUNT(*) FROM vt38, rt1, rt2 WHERE (PRINTF((rt2.c2 IN (0.4585494506450871)), (vt38.c0 IN (rt1.c4)), ((rt1.c3) NOTNULL))) ORDER BY (TRIM(rt2.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((rt2.c2 IN (0.4585494506450871)), (vt38.c0 IN (rt1.c4)), ((rt1.c3) NOTNULL))) IS TRUE)  as count FROM vt38, rt1, rt2 ORDER BY (TRIM(rt2.c0) IN ()) DESC);
SELECT COUNT(*) FROM vt38, rt1, rt2 WHERE (PRINTF((rt2.c2 IN (0.4585494506450871)), (vt38.c0 IN (rt1.c4)), ((rt1.c3) NOTNULL))) ORDER BY (TRIM(rt2.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((rt2.c2 IN (0.4585494506450871)), (vt38.c0 IN (rt1.c4)), ((rt1.c3) NOTNULL))) IS TRUE)  as count FROM vt38, rt1, rt2 ORDER BY (TRIM(rt2.c0) IN ()) DESC);
SELECT COUNT(*) FROM vt38, rt1, rt2 WHERE (PRINTF((rt2.c2 IN (0.4585494506450871)), (vt38.c0 IN (rt1.c4)), ((rt1.c3) NOTNULL))) ORDER BY (TRIM(rt2.c0) IN ()) DESC;
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))OR((((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((NULL, rt0.c3, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE x'0b35' END)))OR(((rt0.c2) NOTNULL))))AND((~ (rt0.c3))))) ORDER BY ((TRIM(rt0.c2, rt0.c3)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))OR((((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((NULL, rt0.c3, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE x'0b35' END)))OR(((rt0.c2) NOTNULL))))AND((~ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(rt0.c2, rt0.c3)) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))OR((((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((NULL, rt0.c3, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE x'0b35' END)))OR(((rt0.c2) NOTNULL))))AND((~ (rt0.c3))))) ORDER BY ((TRIM(rt0.c2, rt0.c3)) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))OR((((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((NULL, rt0.c3, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE x'0b35' END)))OR(((rt0.c2) NOTNULL))))AND((~ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(rt0.c2, rt0.c3)) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))OR((((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((NULL, rt0.c3, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE x'0b35' END)))OR(((rt0.c2) NOTNULL))))AND((~ (rt0.c3))))) ORDER BY ((TRIM(rt0.c2, rt0.c3)) NOT NULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt2 NOT INDEXED, vt38 WHERE (json_valid(((rt2.c1) NOT BETWEEN (rt2.c2) AND (vt38.c0)))) ORDER BY IFNULL(x'', (x'' IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((rt2.c1) NOT BETWEEN (rt2.c2) AND (vt38.c0)))) IS TRUE)  as count FROM rt2, vt38 ORDER BY IFNULL(x'', (x'' IN ())) DESC);
SELECT ALL COUNT(*) FROM rt2 NOT INDEXED, vt38 WHERE (json_valid(((rt2.c1) NOT BETWEEN (rt2.c2) AND (vt38.c0)))) ORDER BY IFNULL(x'', (x'' IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((rt2.c1) NOT BETWEEN (rt2.c2) AND (vt38.c0)))) IS TRUE)  as count FROM rt2, vt38 ORDER BY IFNULL(x'', (x'' IN ())) DESC);
SELECT ALL COUNT(*) FROM rt2 NOT INDEXED, vt38 WHERE (json_valid(((rt2.c1) NOT BETWEEN (rt2.c2) AND (vt38.c0)))) ORDER BY IFNULL(x'', (x'' IN ())) DESC;
SELECT * FROM vt38, rt1, rt0, rt2 WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY (- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt2.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY (- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt2.c2 END))  NULLS LAST);
SELECT * FROM vt38, rt1, rt0, rt2 WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY (- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt2.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY (- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt2.c2 END))  NULLS LAST);
SELECT * FROM vt38, rt1, rt0, rt2 WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY (- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt2.c2 END))  NULLS LAST;
SELECT * FROM rt0, vt38, rt2 WHERE (((CAST(rt0.c1 AS TEXT)) BETWEEN (0.2189721019211518) AND ((((rt0.c3))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) BETWEEN (0.2189721019211518) AND ((((rt0.c3))<((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt38, rt2);
SELECT * FROM rt0, vt38, rt2 WHERE (((CAST(rt0.c1 AS TEXT)) BETWEEN (0.2189721019211518) AND ((((rt0.c3))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) BETWEEN (0.2189721019211518) AND ((((rt0.c3))<((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt38, rt2);
SELECT * FROM rt0, vt38, rt2 WHERE (((CAST(rt0.c1 AS TEXT)) BETWEEN (0.2189721019211518) AND ((((rt0.c3))<((rt0.c2))))));
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c3 END IN ())) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c1) AND (NULL)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c3 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c1) AND (NULL)) AS REAL) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c3 END IN ())) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c1) AND (NULL)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c3 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c1) AND (NULL)) AS REAL) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c3 END IN ())) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c1) AND (NULL)) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM rt1, rt0, vt38, rt2 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt2.c1) AND (vt38.c0)) THEN (rt0.c1 IN ()) WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN rt0.c0 COLLATE BINARY WHEN rt0.c0 THEN 583289252 COLLATE NOCASE ELSE rt2.c1 END) ORDER BY ((((rt1.c4)OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (rt2.c1) AND (vt38.c0)) THEN (rt0.c1 IN ()) WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN rt0.c0 COLLATE BINARY WHEN rt0.c0 THEN 583289252 COLLATE NOCASE ELSE rt2.c1 END) IS TRUE)  as count FROM rt1, rt0, vt38, rt2 ORDER BY ((((rt1.c4)OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt38, rt2 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt2.c1) AND (vt38.c0)) THEN (rt0.c1 IN ()) WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN rt0.c0 COLLATE BINARY WHEN rt0.c0 THEN 583289252 COLLATE NOCASE ELSE rt2.c1 END) ORDER BY ((((rt1.c4)OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (rt2.c1) AND (vt38.c0)) THEN (rt0.c1 IN ()) WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN rt0.c0 COLLATE BINARY WHEN rt0.c0 THEN 583289252 COLLATE NOCASE ELSE rt2.c1 END) IS TRUE)  as count FROM rt1, rt0, vt38, rt2 ORDER BY ((((rt1.c4)OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt38, rt2 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt2.c1) AND (vt38.c0)) THEN (rt0.c1 IN ()) WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN rt0.c0 COLLATE BINARY WHEN rt0.c0 THEN 583289252 COLLATE NOCASE ELSE rt2.c1 END) ORDER BY ((((rt1.c4)OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt1, vt38 WHERE ((('' COLLATE NOCASE) NOT BETWEEN (NULL) AND (((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((('' COLLATE NOCASE) NOT BETWEEN (NULL) AND (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, vt38);
SELECT ALL * FROM rt1, vt38 WHERE ((('' COLLATE NOCASE) NOT BETWEEN (NULL) AND (((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((('' COLLATE NOCASE) NOT BETWEEN (NULL) AND (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, vt38);
SELECT ALL * FROM rt1, vt38 WHERE ((('' COLLATE NOCASE) NOT BETWEEN (NULL) AND (((rt1.c1) NOTNULL))));
SELECT * FROM rt0, rt1, vt38 WHERE ((((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c3 END))>((UPPER(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c3 END))>((UPPER(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, vt38);
SELECT * FROM rt0, rt1, vt38 WHERE ((((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c3 END))>((UPPER(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c3 END))>((UPPER(rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, vt38);
SELECT * FROM rt0, rt1, vt38 WHERE ((((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c3 END))>((UPPER(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt2, vt38, rt0 WHERE (((((((rt0.c3)==(rt0.c2)))OR(((rt0.c3)%(rt2.c1)))))OR((('1518575177')=(rt2.c1))))) ORDER BY ((((x'663b')GLOB(rt0.c3)))>(0x1891625c)) ASC, CASE rt0.c3 COLLATE RTRIM  WHEN ((((rt0.c2)OR(rt0.c3)))AND(2055092706)) THEN ((vt38.c0) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)==(rt0.c2)))OR(((rt0.c3)%(rt2.c1)))))OR((('1518575177')=(rt2.c1))))) IS TRUE)  as count FROM rt2, vt38, rt0 ORDER BY ((((x'663b')GLOB(rt0.c3)))>(0x1891625c)) ASC, CASE rt0.c3 COLLATE RTRIM  WHEN ((((rt0.c2)OR(rt0.c3)))AND(2055092706)) THEN ((vt38.c0) ISNULL) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, vt38, rt0 WHERE (((((((rt0.c3)==(rt0.c2)))OR(((rt0.c3)%(rt2.c1)))))OR((('1518575177')=(rt2.c1))))) ORDER BY ((((x'663b')GLOB(rt0.c3)))>(0x1891625c)) ASC, CASE rt0.c3 COLLATE RTRIM  WHEN ((((rt0.c2)OR(rt0.c3)))AND(2055092706)) THEN ((vt38.c0) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)==(rt0.c2)))OR(((rt0.c3)%(rt2.c1)))))OR((('1518575177')=(rt2.c1))))) IS TRUE)  as count FROM rt2, vt38, rt0 ORDER BY ((((x'663b')GLOB(rt0.c3)))>(0x1891625c)) ASC, CASE rt0.c3 COLLATE RTRIM  WHEN ((((rt0.c2)OR(rt0.c3)))AND(2055092706)) THEN ((vt38.c0) ISNULL) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, vt38, rt0 WHERE (((((((rt0.c3)==(rt0.c2)))OR(((rt0.c3)%(rt2.c1)))))OR((('1518575177')=(rt2.c1))))) ORDER BY ((((x'663b')GLOB(rt0.c3)))>(0x1891625c)) ASC, CASE rt0.c3 COLLATE RTRIM  WHEN ((((rt0.c2)OR(rt0.c3)))AND(2055092706)) THEN ((vt38.c0) ISNULL) END ASC  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (x'') ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST, (NOT (LIKE(rt0.c1, rt0.c3, '0'))), (~ (CAST(rt0.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST, (NOT (LIKE(rt0.c1, rt0.c3, '0'))), (~ (CAST(rt0.c1 AS TEXT))) DESC);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (x'') ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST, (NOT (LIKE(rt0.c1, rt0.c3, '0'))), (~ (CAST(rt0.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST, (NOT (LIKE(rt0.c1, rt0.c3, '0'))), (~ (CAST(rt0.c1 AS TEXT))) DESC);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (x'') ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END  NULLS FIRST, (NOT (LIKE(rt0.c1, rt0.c3, '0'))), (~ (CAST(rt0.c1 AS TEXT))) DESC;
SELECT * FROM vt38 WHERE (((((vt38.c0)*(vt38.c0))) NOT BETWEEN (('-2118655611' IN ())) AND (CASE vt38.c0  WHEN '610514749' THEN vt38.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)*(vt38.c0))) NOT BETWEEN (('-2118655611' IN ())) AND (CASE vt38.c0  WHEN '610514749' THEN vt38.c0 END))) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (((((vt38.c0)*(vt38.c0))) NOT BETWEEN (('-2118655611' IN ())) AND (CASE vt38.c0  WHEN '610514749' THEN vt38.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)*(vt38.c0))) NOT BETWEEN (('-2118655611' IN ())) AND (CASE vt38.c0  WHEN '610514749' THEN vt38.c0 END))) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (((((vt38.c0)*(vt38.c0))) NOT BETWEEN (('-2118655611' IN ())) AND (CASE vt38.c0  WHEN '610514749' THEN vt38.c0 END)));
SELECT * FROM vt38 WHERE ((- (vt38.c0)) COLLATE NOCASE) ORDER BY CAST(((vt38.c0) IS FALSE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt38.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt38 ORDER BY CAST(((vt38.c0) IS FALSE) AS TEXT)  NULLS FIRST);
SELECT * FROM vt38 WHERE ((- (vt38.c0)) COLLATE NOCASE) ORDER BY CAST(((vt38.c0) IS FALSE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt38.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt38 ORDER BY CAST(((vt38.c0) IS FALSE) AS TEXT)  NULLS FIRST);
SELECT * FROM vt38 WHERE ((- (vt38.c0)) COLLATE NOCASE) ORDER BY CAST(((vt38.c0) IS FALSE) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt38 WHERE ((((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) IN ())) ORDER BY vt38.c0;
SELECT SUM(count) FROM (SELECT (((((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) IN ())) IS TRUE)  as count FROM vt38 ORDER BY vt38.c0);
SELECT COUNT(*) FROM vt38 WHERE ((((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) IN ())) ORDER BY vt38.c0;
SELECT SUM(count) FROM (SELECT (((((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) IN ())) IS TRUE)  as count FROM vt38 ORDER BY vt38.c0);
SELECT COUNT(*) FROM vt38 WHERE ((((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) IN ())) ORDER BY vt38.c0;
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (((((rt0.c3) NOT NULL))&(rt2.c1))) ORDER BY (~ (((rt2.c1) NOT BETWEEN (vt38.c0) AND (rt0.c2)))) DESC, (vt38.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))&(rt2.c1))) IS TRUE)  as count FROM rt0, rt2, vt38, rt1 ORDER BY (~ (((rt2.c1) NOT BETWEEN (vt38.c0) AND (rt0.c2)))) DESC, (vt38.c0 IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (((((rt0.c3) NOT NULL))&(rt2.c1))) ORDER BY (~ (((rt2.c1) NOT BETWEEN (vt38.c0) AND (rt0.c2)))) DESC, (vt38.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))&(rt2.c1))) IS TRUE)  as count FROM rt0, rt2, vt38, rt1 ORDER BY (~ (((rt2.c1) NOT BETWEEN (vt38.c0) AND (rt0.c2)))) DESC, (vt38.c0 IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0, rt2, vt38, rt1 WHERE (((((rt0.c3) NOT NULL))&(rt2.c1))) ORDER BY (~ (((rt2.c1) NOT BETWEEN (vt38.c0) AND (rt0.c2)))) DESC, (vt38.c0 IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt2 WHERE (rt2.c2);
SELECT SUM(count) FROM (SELECT ((rt2.c2) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (rt2.c2);
SELECT SUM(count) FROM (SELECT ((rt2.c2) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (rt2.c2);
SELECT ALL * FROM rt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt2 NOT INDEXED);
SELECT ALL * FROM rt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt2 NOT INDEXED);
SELECT ALL * FROM rt2 WHERE (x'');
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON NULL WHERE (CASE NULL  WHEN CAST(rt2.c2 AS TEXT) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE NOCASE THEN (NOT (rt2.c1)) WHEN ((0.1272557848777941)AND(rt2.c1)) THEN ((rt2.c2) ISNULL) ELSE CAST(rt2.c2 AS REAL) END) ORDER BY CASE CASE rt2.c0  WHEN rt2.c2 THEN rt1.c1 ELSE rt1.c4 END  WHEN ((rt1.c2)AND(-1498537505)) THEN CAST(rt2.c2 AS INTEGER) ELSE (- (rt2.c0)) END, 0.03571525993531466 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(rt2.c2 AS TEXT) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE NOCASE THEN (NOT (rt2.c1)) WHEN ((0.1272557848777941)AND(rt2.c1)) THEN ((rt2.c2) ISNULL) ELSE CAST(rt2.c2 AS REAL) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON NULL ORDER BY CASE CASE rt2.c0  WHEN rt2.c2 THEN rt1.c1 ELSE rt1.c4 END  WHEN ((rt1.c2)AND(-1498537505)) THEN CAST(rt2.c2 AS INTEGER) ELSE (- (rt2.c0)) END, 0.03571525993531466 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON NULL WHERE (CASE NULL  WHEN CAST(rt2.c2 AS TEXT) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE NOCASE THEN (NOT (rt2.c1)) WHEN ((0.1272557848777941)AND(rt2.c1)) THEN ((rt2.c2) ISNULL) ELSE CAST(rt2.c2 AS REAL) END) ORDER BY CASE CASE rt2.c0  WHEN rt2.c2 THEN rt1.c1 ELSE rt1.c4 END  WHEN ((rt1.c2)AND(-1498537505)) THEN CAST(rt2.c2 AS INTEGER) ELSE (- (rt2.c0)) END, 0.03571525993531466 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CAST(rt2.c2 AS TEXT) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE NOCASE THEN (NOT (rt2.c1)) WHEN ((0.1272557848777941)AND(rt2.c1)) THEN ((rt2.c2) ISNULL) ELSE CAST(rt2.c2 AS REAL) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON NULL ORDER BY CASE CASE rt2.c0  WHEN rt2.c2 THEN rt1.c1 ELSE rt1.c4 END  WHEN ((rt1.c2)AND(-1498537505)) THEN CAST(rt2.c2 AS INTEGER) ELSE (- (rt2.c0)) END, 0.03571525993531466 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON NULL WHERE (CASE NULL  WHEN CAST(rt2.c2 AS TEXT) THEN ((rt1.c0) IS FALSE) WHEN rt1.c0 COLLATE NOCASE THEN (NOT (rt2.c1)) WHEN ((0.1272557848777941)AND(rt2.c1)) THEN ((rt2.c2) ISNULL) ELSE CAST(rt2.c2 AS REAL) END) ORDER BY CASE CASE rt2.c0  WHEN rt2.c2 THEN rt1.c1 ELSE rt1.c4 END  WHEN ((rt1.c2)AND(-1498537505)) THEN CAST(rt2.c2 AS INTEGER) ELSE (- (rt2.c0)) END, 0.03571525993531466 COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((json_remove(rt2.c1, rt2.c0, rt2.c1, rt2.c1)) BETWEEN (rt1.c4) AND (((('-1012168356')) BETWEEN ((rt1.c1)) AND (('d')))))) ORDER BY CAST(rt1.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_remove(rt2.c1, rt2.c0, rt2.c1, rt2.c1)) BETWEEN (rt1.c4) AND (((('-1012168356')) BETWEEN ((rt1.c1)) AND (('d')))))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CAST(rt1.c0 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((json_remove(rt2.c1, rt2.c0, rt2.c1, rt2.c1)) BETWEEN (rt1.c4) AND (((('-1012168356')) BETWEEN ((rt1.c1)) AND (('d')))))) ORDER BY CAST(rt1.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_remove(rt2.c1, rt2.c0, rt2.c1, rt2.c1)) BETWEEN (rt1.c4) AND (((('-1012168356')) BETWEEN ((rt1.c1)) AND (('d')))))) IS TRUE)  as count FROM rt2, rt1 ORDER BY CAST(rt1.c0 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt1 WHERE (((json_remove(rt2.c1, rt2.c0, rt2.c1, rt2.c1)) BETWEEN (rt1.c4) AND (((('-1012168356')) BETWEEN ((rt1.c1)) AND (('d')))))) ORDER BY CAST(rt1.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT ALL * FROM vt38, rt1 WHERE (((rt1.c3 IN (rt1.c0)) IN ())) ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4))  WHEN (- (rt1.c2)) THEN (((rt1.c1)) NOT BETWEEN ((vt38.c0)) AND ((rt1.c3))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 IN (rt1.c0)) IN ())) IS TRUE)  as count FROM vt38, rt1 ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4))  WHEN (- (rt1.c2)) THEN (((rt1.c1)) NOT BETWEEN ((vt38.c0)) AND ((rt1.c3))) END  NULLS LAST);
SELECT ALL * FROM vt38, rt1 WHERE (((rt1.c3 IN (rt1.c0)) IN ())) ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4))  WHEN (- (rt1.c2)) THEN (((rt1.c1)) NOT BETWEEN ((vt38.c0)) AND ((rt1.c3))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 IN (rt1.c0)) IN ())) IS TRUE)  as count FROM vt38, rt1 ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4))  WHEN (- (rt1.c2)) THEN (((rt1.c1)) NOT BETWEEN ((vt38.c0)) AND ((rt1.c3))) END  NULLS LAST);
SELECT ALL * FROM vt38, rt1 WHERE (((rt1.c3 IN (rt1.c0)) IN ())) ORDER BY CASE ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4))  WHEN (- (rt1.c2)) THEN (((rt1.c1)) NOT BETWEEN ((vt38.c0)) AND ((rt1.c3))) END  NULLS LAST;
SELECT * FROM vt38 NATURAL JOIN rt2 WHERE (TRIM(DISTINCT rt2.c1));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt2.c1)) IS TRUE)  as count FROM vt38 NATURAL JOIN rt2);
SELECT * FROM vt38 NATURAL JOIN rt2 WHERE (TRIM(DISTINCT rt2.c1));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt2.c1)) IS TRUE)  as count FROM vt38 NATURAL JOIN rt2);
SELECT * FROM vt38 NATURAL JOIN rt2 WHERE (TRIM(DISTINCT rt2.c1));
SELECT * FROM rt1 INNER JOIN rt0 ON (((rt1.c4)) NOT BETWEEN ((vt38.c0)) AND ((rt0.c1))) COLLATE RTRIM FULL OUTER JOIN vt38 ON ((((((((((rt1.c2)OR(rt0.c0)))AND(rt1.c1)))AND(rt0.c1)))OR(rt1.c4))) ISNULL) WHERE (CAST(((rt0.c3)>(rt0.c3)) AS INTEGER)) ORDER BY (((((rt0.c3 IN (rt0.c3, rt1.c3)))OR(((rt0.c1)IS(rt0.c0)))))OR(-930971423)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)>(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((rt1.c4)) NOT BETWEEN ((vt38.c0)) AND ((rt0.c1))) COLLATE RTRIM FULL OUTER JOIN vt38 ON ((((((((((rt1.c2)OR(rt0.c0)))AND(rt1.c1)))AND(rt0.c1)))OR(rt1.c4))) ISNULL) ORDER BY (((((rt0.c3 IN (rt0.c3, rt1.c3)))OR(((rt0.c1)IS(rt0.c0)))))OR(-930971423)) ASC);
SELECT * FROM rt1 INNER JOIN rt0 ON (((rt1.c4)) NOT BETWEEN ((vt38.c0)) AND ((rt0.c1))) COLLATE RTRIM FULL OUTER JOIN vt38 ON ((((((((((rt1.c2)OR(rt0.c0)))AND(rt1.c1)))AND(rt0.c1)))OR(rt1.c4))) ISNULL) WHERE (CAST(((rt0.c3)>(rt0.c3)) AS INTEGER)) ORDER BY (((((rt0.c3 IN (rt0.c3, rt1.c3)))OR(((rt0.c1)IS(rt0.c0)))))OR(-930971423)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)>(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((rt1.c4)) NOT BETWEEN ((vt38.c0)) AND ((rt0.c1))) COLLATE RTRIM FULL OUTER JOIN vt38 ON ((((((((((rt1.c2)OR(rt0.c0)))AND(rt1.c1)))AND(rt0.c1)))OR(rt1.c4))) ISNULL) ORDER BY (((((rt0.c3 IN (rt0.c3, rt1.c3)))OR(((rt0.c1)IS(rt0.c0)))))OR(-930971423)) ASC);
SELECT COUNT(*) FROM vt38 WHERE (COALESCE(DISTINCT vt38.c0, NULL COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT vt38.c0, NULL COLLATE BINARY)) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE (COALESCE(DISTINCT vt38.c0, NULL COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT vt38.c0, NULL COLLATE BINARY)) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE (COALESCE(DISTINCT vt38.c0, NULL COLLATE BINARY));
SELECT COUNT(*) FROM rt0, rt2, rt1, vt38 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c4 AS INTEGER)) AND (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END))) ORDER BY CAST(CAST(rt1.c3 AS INTEGER) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c4 AS INTEGER)) AND (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, rt2, rt1, vt38 ORDER BY CAST(CAST(rt1.c3 AS INTEGER) AS TEXT) DESC);
SELECT COUNT(*) FROM rt0, rt2, rt1, vt38 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c4 AS INTEGER)) AND (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END))) ORDER BY CAST(CAST(rt1.c3 AS INTEGER) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c4 AS INTEGER)) AND (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, rt2, rt1, vt38 ORDER BY CAST(CAST(rt1.c3 AS INTEGER) AS TEXT) DESC);
SELECT COUNT(*) FROM rt0, rt2, rt1, vt38 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c4 AS INTEGER)) AND (CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END))) ORDER BY CAST(CAST(rt1.c3 AS INTEGER) AS TEXT) DESC;
SELECT ALL * FROM vt38, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt38, rt0);
SELECT ALL * FROM vt38, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt38, rt0);
SELECT ALL * FROM vt38, rt0 WHERE (x'');
SELECT * FROM vt38 WHERE (((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (((((vt38.c0)AND(vt38.c0)))AND(vt38.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt38 ON (- (vt38.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CAST(((rt1.c1) NOT BETWEEN (vt38.c0) AND (rt0.c3)) AS INTEGER) WHERE (0.16719985461681708);
SELECT SUM(count) FROM (SELECT ALL ((0.16719985461681708) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt38 ON (- (vt38.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CAST(((rt1.c1) NOT BETWEEN (vt38.c0) AND (rt0.c3)) AS INTEGER));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt38 ON (- (vt38.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CAST(((rt1.c1) NOT BETWEEN (vt38.c0) AND (rt0.c3)) AS INTEGER) WHERE (0.16719985461681708);
SELECT SUM(count) FROM (SELECT ALL ((0.16719985461681708) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt38 ON (- (vt38.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CAST(((rt1.c1) NOT BETWEEN (vt38.c0) AND (rt0.c3)) AS INTEGER));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt38 ON (- (vt38.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CAST(((rt1.c1) NOT BETWEEN (vt38.c0) AND (rt0.c3)) AS INTEGER) WHERE (0.16719985461681708);
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((rt1.c3 IN ())))=((''))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3 IN ())))=(('')))) IS TRUE)  as count FROM rt2, rt1);
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((rt1.c3 IN ())))=((''))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3 IN ())))=(('')))) IS TRUE)  as count FROM rt2, rt1);
SELECT COUNT(*) FROM rt2, rt1 WHERE (((((rt1.c3 IN ())))=((''))));
SELECT ALL COUNT(*) FROM vt38 WHERE ((((NULL)) BETWEEN ((CAST(vt38.c0 AS TEXT))) AND ((((((vt38.c0)AND(vt38.c0)))OR(''))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((CAST(vt38.c0 AS TEXT))) AND ((((((vt38.c0)AND(vt38.c0)))OR('')))))) IS TRUE)  as count FROM vt38);
SELECT ALL COUNT(*) FROM vt38 WHERE ((((NULL)) BETWEEN ((CAST(vt38.c0 AS TEXT))) AND ((((((vt38.c0)AND(vt38.c0)))OR(''))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((CAST(vt38.c0 AS TEXT))) AND ((((((vt38.c0)AND(vt38.c0)))OR('')))))) IS TRUE)  as count FROM vt38);
SELECT ALL COUNT(*) FROM vt38 WHERE ((((NULL)) BETWEEN ((CAST(vt38.c0 AS TEXT))) AND ((((((vt38.c0)AND(vt38.c0)))OR(''))))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<(rt1.c0)))<(CAST(rt1.c1 AS BLOB)))) ORDER BY ((((rt1.c2)<(rt1.c1)))&(rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<(rt1.c0)))<(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)<(rt1.c1)))&(rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<(rt1.c0)))<(CAST(rt1.c1 AS BLOB)))) ORDER BY ((((rt1.c2)<(rt1.c1)))&(rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<(rt1.c0)))<(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)<(rt1.c1)))&(rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<(rt1.c0)))<(CAST(rt1.c1 AS BLOB)))) ORDER BY ((((rt1.c2)<(rt1.c1)))&(rt1.c2 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt38 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (((x'e3fd') NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE 0.29647308299178776 END)) WHERE (((rt0.c3) BETWEEN (((rt0.c0) NOTNULL)) AND (TRIM(rt0.c3)))) ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((vt38.c0, ((rt0.c1)<(rt0.c0)), json_type(rt0.c3))) AND ((CAST(vt38.c0 AS BLOB), 1112901825, CAST(rt0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(rt0.c3 AS INTEGER))<<((x'13df' IN ()))) ASC  NULLS LAST, rtreenode(((0.36352907817166713) BETWEEN (rt0.c1) AND (rt0.c3)), (rt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) BETWEEN (((rt0.c0) NOTNULL)) AND (TRIM(rt0.c3)))) IS TRUE)  as count FROM vt38 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (((x'e3fd') NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE 0.29647308299178776 END)) ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((vt38.c0, ((rt0.c1)<(rt0.c0)), json_type(rt0.c3))) AND ((CAST(vt38.c0 AS BLOB), 1112901825, CAST(rt0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(rt0.c3 AS INTEGER))<<((x'13df' IN ()))) ASC  NULLS LAST, rtreenode(((0.36352907817166713) BETWEEN (rt0.c1) AND (rt0.c3)), (rt0.c1 IN ())) DESC);
SELECT ALL COUNT(*) FROM vt38 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (((x'e3fd') NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE 0.29647308299178776 END)) WHERE (((rt0.c3) BETWEEN (((rt0.c0) NOTNULL)) AND (TRIM(rt0.c3)))) ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((vt38.c0, ((rt0.c1)<(rt0.c0)), json_type(rt0.c3))) AND ((CAST(vt38.c0 AS BLOB), 1112901825, CAST(rt0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(rt0.c3 AS INTEGER))<<((x'13df' IN ()))) ASC  NULLS LAST, rtreenode(((0.36352907817166713) BETWEEN (rt0.c1) AND (rt0.c3)), (rt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) BETWEEN (((rt0.c0) NOTNULL)) AND (TRIM(rt0.c3)))) IS TRUE)  as count FROM vt38 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (((x'e3fd') NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE 0.29647308299178776 END)) ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((vt38.c0, ((rt0.c1)<(rt0.c0)), json_type(rt0.c3))) AND ((CAST(vt38.c0 AS BLOB), 1112901825, CAST(rt0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(rt0.c3 AS INTEGER))<<((x'13df' IN ()))) ASC  NULLS LAST, rtreenode(((0.36352907817166713) BETWEEN (rt0.c1) AND (rt0.c3)), (rt0.c1 IN ())) DESC);
SELECT ALL COUNT(*) FROM vt38 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (((x'e3fd') NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE 0.29647308299178776 END)) WHERE (((rt0.c3) BETWEEN (((rt0.c0) NOTNULL)) AND (TRIM(rt0.c3)))) ORDER BY (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((vt38.c0, ((rt0.c1)<(rt0.c0)), json_type(rt0.c3))) AND ((CAST(vt38.c0 AS BLOB), 1112901825, CAST(rt0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(rt0.c3 AS INTEGER))<<((x'13df' IN ()))) ASC  NULLS LAST, rtreenode(((0.36352907817166713) BETWEEN (rt0.c1) AND (rt0.c3)), (rt0.c1 IN ())) DESC;
SELECT ALL * FROM vt38, rt2, rt1 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt38, rt2, rt1);
SELECT ALL * FROM vt38, rt2, rt1 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt38, rt2, rt1);
SELECT ALL * FROM vt38, rt2, rt1 WHERE (CHANGES());
SELECT ALL COUNT(*) FROM rt0 WHERE (((- (rt0.c0)) IN (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((- (rt0.c0)) IN (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((- (rt0.c0)) IN (rt0.c2 COLLATE BINARY)));
SELECT * FROM vt38, rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt38, rt1);
SELECT * FROM vt38, rt1 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt38, rt1);
SELECT * FROM vt38, rt1 WHERE (rt1.c4);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0X2463b73d COLLATE BINARY) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0X2463b73d COLLATE BINARY) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0X2463b73d COLLATE BINARY) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0X2463b73d COLLATE BINARY) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0X2463b73d COLLATE BINARY) AND (rt0.c2 COLLATE RTRIM)));
SELECT * FROM rt2 CROSS JOIN rt0 ON ABS(DISTINCT x'') WHERE ((((('') ISNULL))<<((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('') ISNULL))<<((~ (rt0.c0))))) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON ABS(DISTINCT x''));
SELECT * FROM rt2 CROSS JOIN rt0 ON ABS(DISTINCT x'') WHERE ((((('') ISNULL))<<((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('') ISNULL))<<((~ (rt0.c0))))) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON ABS(DISTINCT x''));
SELECT * FROM rt2 CROSS JOIN rt0 ON ABS(DISTINCT x'') WHERE ((((('') ISNULL))<<((~ (rt0.c0)))));
SELECT COUNT(*) FROM rt2, vt38 NOT INDEXED, rt0, rt1 WHERE (((((('1176887260')) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2))))/((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('1176887260')) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2))))/((+ (rt0.c0))))) IS TRUE)  as count FROM rt2, vt38, rt0, rt1);
SELECT COUNT(*) FROM rt2, vt38 NOT INDEXED, rt0, rt1 WHERE (((((('1176887260')) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2))))/((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((('1176887260')) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2))))/((+ (rt0.c0))))) IS TRUE)  as count FROM rt2, vt38, rt0, rt1);
SELECT COUNT(*) FROM rt2, vt38 NOT INDEXED, rt0, rt1 WHERE (((((('1176887260')) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2))))/((+ (rt0.c0)))));
SELECT COUNT(*) FROM rt2, rt0 WHERE (((((((((((rt2.c2)<(rt0.c2)))OR(CAST(rt2.c0 AS INTEGER))))AND((rt0.c1 IN (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt0.c2)))))AND((((rt2.c0, rt2.c0, rt0.c0)) NOT BETWEEN (('!', rt2.c0, rt0.c2)) AND ((rt0.c1, rt2.c1, rt2.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt2.c2)<(rt0.c2)))OR(CAST(rt2.c0 AS INTEGER))))AND((rt0.c1 IN (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt0.c2)))))AND((((rt2.c0, rt2.c0, rt0.c0)) NOT BETWEEN (('!', rt2.c0, rt0.c2)) AND ((rt0.c1, rt2.c1, rt2.c0)))))) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE (((((((((((rt2.c2)<(rt0.c2)))OR(CAST(rt2.c0 AS INTEGER))))AND((rt0.c1 IN (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt0.c2)))))AND((((rt2.c0, rt2.c0, rt0.c0)) NOT BETWEEN (('!', rt2.c0, rt0.c2)) AND ((rt0.c1, rt2.c1, rt2.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt2.c2)<(rt0.c2)))OR(CAST(rt2.c0 AS INTEGER))))AND((rt0.c1 IN (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt0.c2)))))AND((((rt2.c0, rt2.c0, rt0.c0)) NOT BETWEEN (('!', rt2.c0, rt0.c2)) AND ((rt0.c1, rt2.c1, rt2.c0)))))) IS TRUE)  as count FROM rt2, rt0);
SELECT COUNT(*) FROM rt2, rt0 WHERE (((((((((((rt2.c2)<(rt0.c2)))OR(CAST(rt2.c0 AS INTEGER))))AND((rt0.c1 IN (rt0.c3)))))AND(((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt0.c2)))))AND((((rt2.c0, rt2.c0, rt0.c0)) NOT BETWEEN (('!', rt2.c0, rt0.c2)) AND ((rt0.c1, rt2.c1, rt2.c0))))));
SELECT COUNT(*) FROM rt2 WHERE (((((((((((((((rt2.c1)IS NOT(rt2.c0)))OR(0.6229920905026181)))AND((((rt2.c0))!=((rt2.c0))))))OR(CASE WHEN rt2.c0 THEN '-554450948' WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 END)))AND(((rt2.c1) NOTNULL))))OR(((rt2.c0)>(rt2.c1)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt2.c1)IS NOT(rt2.c0)))OR(0.6229920905026181)))AND((((rt2.c0))<>((rt2.c0))))))OR(CASE WHEN rt2.c0 THEN '-554450948' WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 END)))AND(((rt2.c1) NOTNULL))))OR(((rt2.c0)>(rt2.c1)))))AND(x''))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((((((((((((((rt2.c1)IS NOT(rt2.c0)))OR(0.6229920905026181)))AND((((rt2.c0))!=((rt2.c0))))))OR(CASE WHEN rt2.c0 THEN '-554450948' WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 END)))AND(((rt2.c1) NOTNULL))))OR(((rt2.c0)>(rt2.c1)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt2.c1)IS NOT(rt2.c0)))OR(0.6229920905026181)))AND((((rt2.c0))<>((rt2.c0))))))OR(CASE WHEN rt2.c0 THEN '-554450948' WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 END)))AND(((rt2.c1) NOTNULL))))OR(((rt2.c0)>(rt2.c1)))))AND(x''))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((((((((((((((rt2.c1)IS NOT(rt2.c0)))OR(0.6229920905026181)))AND((((rt2.c0))!=((rt2.c0))))))OR(CASE WHEN rt2.c0 THEN '-554450948' WHEN rt2.c0 THEN rt2.c1 WHEN rt2.c2 THEN rt2.c2 END)))AND(((rt2.c1) NOTNULL))))OR(((rt2.c0)>(rt2.c1)))))AND(x'')));
SELECT * FROM vt38, rt2 WHERE (rt2.c1) ORDER BY (('') BETWEEN ((- (rt2.c1))) AND (UNLIKELY(0.10392362962205082))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM vt38, rt2 ORDER BY (('') BETWEEN ((- (rt2.c1))) AND (UNLIKELY(0.10392362962205082))) ASC);
SELECT * FROM vt38, rt2 WHERE (rt2.c1) ORDER BY (('') BETWEEN ((- (rt2.c1))) AND (UNLIKELY(0.10392362962205082))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c1) IS TRUE)  as count FROM vt38, rt2 ORDER BY (('') BETWEEN ((- (rt2.c1))) AND (UNLIKELY(0.10392362962205082))) ASC);
SELECT * FROM vt38, rt2 WHERE (rt2.c1) ORDER BY (('') BETWEEN ((- (rt2.c1))) AND (UNLIKELY(0.10392362962205082))) ASC;
SELECT COUNT(*) FROM rt0, rt2 WHERE ((- (CAST(rt2.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt2.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE ((- (CAST(rt2.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt2.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE ((- (CAST(rt2.c1 AS BLOB))));
SELECT ALL * FROM vt38 WHERE ((- (vt38.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (vt38.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE ((- (vt38.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (vt38.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt38);
SELECT ALL * FROM vt38 WHERE ((- (vt38.c0)) COLLATE RTRIM);
SELECT * FROM rt0, rt1, vt38 INNER JOIN rt2 ON ((((rt0.c0)<<(rt0.c3))) NOT BETWEEN (((rt1.c3)/(rt0.c0))) AND (CASE WHEN rt1.c1 THEN '{}' WHEN rt1.c3 THEN rt0.c2 WHEN rt2.c1 THEN rt0.c3 ELSE rt1.c3 END)) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, vt38 INNER JOIN rt2 ON ((((rt0.c0)<<(rt0.c3))) NOT BETWEEN (((rt1.c3)/(rt0.c0))) AND (CASE WHEN rt1.c1 THEN '{}' WHEN rt1.c3 THEN rt0.c2 WHEN rt2.c1 THEN rt0.c3 ELSE rt1.c3 END)));
SELECT * FROM rt0, rt1, vt38 INNER JOIN rt2 ON ((((rt0.c0)<<(rt0.c3))) NOT BETWEEN (((rt1.c3)/(rt0.c0))) AND (CASE WHEN rt1.c1 THEN '{}' WHEN rt1.c3 THEN rt0.c2 WHEN rt2.c1 THEN rt0.c3 ELSE rt1.c3 END)) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, vt38 INNER JOIN rt2 ON ((((rt0.c0)<<(rt0.c3))) NOT BETWEEN (((rt1.c3)/(rt0.c0))) AND (CASE WHEN rt1.c1 THEN '{}' WHEN rt1.c3 THEN rt0.c2 WHEN rt2.c1 THEN rt0.c3 ELSE rt1.c3 END)));
SELECT * FROM rt0, rt1, vt38 INNER JOIN rt2 ON ((((rt0.c0)<<(rt0.c3))) NOT BETWEEN (((rt1.c3)/(rt0.c0))) AND (CASE WHEN rt1.c1 THEN '{}' WHEN rt1.c3 THEN rt0.c2 WHEN rt2.c1 THEN rt0.c3 ELSE rt1.c3 END)) WHERE (rt1.c0);
SELECT COUNT(*) FROM rt2 WHERE (MAX((- (rt2.c1)), ((rt2.c1)>(rt2.c0))));
SELECT SUM(count) FROM (SELECT ((MAX((- (rt2.c1)), ((rt2.c1)>(rt2.c0)))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (MAX((- (rt2.c1)), ((rt2.c1)>(rt2.c0))));
SELECT SUM(count) FROM (SELECT ((MAX((- (rt2.c1)), ((rt2.c1)>(rt2.c0)))) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (MAX((- (rt2.c1)), ((rt2.c1)>(rt2.c0))));
SELECT COUNT(*) FROM rt0, rt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt2);
SELECT COUNT(*) FROM rt0, rt2 WHERE (x'');
SELECT ALL * FROM rt1, vt38 WHERE ((vt38.c0 IN (0X531fceca)) COLLATE NOCASE) ORDER BY ((((rt1.c4) IS FALSE)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (((rt1.c2)IS NOT(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((vt38.c0 IN (0x531fceca)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt38 ORDER BY ((((rt1.c4) IS FALSE)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (((rt1.c2)IS NOT(rt1.c2)))));
SELECT ALL * FROM rt1, vt38 WHERE ((vt38.c0 IN (0X531fceca)) COLLATE NOCASE) ORDER BY ((((rt1.c4) IS FALSE)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (((rt1.c2)IS NOT(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((vt38.c0 IN (0x531fceca)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt38 ORDER BY ((((rt1.c4) IS FALSE)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (((rt1.c2)IS NOT(rt1.c2)))));
SELECT ALL * FROM rt1, vt38 WHERE ((vt38.c0 IN (0X531fceca)) COLLATE NOCASE) ORDER BY ((((rt1.c4) IS FALSE)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (((rt1.c2)IS NOT(rt1.c2))));
SELECT ALL * FROM rt1, vt38 WHERE (CASE rt1.c1  WHEN (NOT (vt38.c0)) THEN ((rt1.c3)>(rt1.c0)) END) ORDER BY CAST(vt38.c0 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN (NOT (vt38.c0)) THEN ((rt1.c3)>(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt38 ORDER BY CAST(vt38.c0 AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt38 WHERE (CASE rt1.c1  WHEN (NOT (vt38.c0)) THEN ((rt1.c3)>(rt1.c0)) END) ORDER BY CAST(vt38.c0 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1  WHEN (NOT (vt38.c0)) THEN ((rt1.c3)>(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt38 ORDER BY CAST(vt38.c0 AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt38 WHERE (CASE rt1.c1  WHEN (NOT (vt38.c0)) THEN ((rt1.c3)>(rt1.c0)) END) ORDER BY CAST(vt38.c0 AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((((0.7722296110584834) BETWEEN (rt1.c0) AND (rt1.c0)))<=((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((0.7722296110584834) BETWEEN (rt1.c0) AND (rt1.c0)))<=((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((0.7722296110584834) BETWEEN (rt1.c0) AND (rt1.c0)))<=((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((0.7722296110584834) BETWEEN (rt1.c0) AND (rt1.c0)))<=((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((0.7722296110584834) BETWEEN (rt1.c0) AND (rt1.c0)))<=((rt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (TRIM(vt38.c0))) WHERE (((CASE WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN x'' WHEN rt0.c1 THEN x'468b' ELSE rt0.c2 END)<>(UNLIKELY(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN x'' WHEN rt0.c1 THEN x'468b' ELSE rt0.c2 END)!=(UNLIKELY(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (TRIM(vt38.c0))));
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (TRIM(vt38.c0))) WHERE (((CASE WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN x'' WHEN rt0.c1 THEN x'468b' ELSE rt0.c2 END)<>(UNLIKELY(DISTINCT rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN x'' WHEN rt0.c1 THEN x'468b' ELSE rt0.c2 END)!=(UNLIKELY(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (TRIM(vt38.c0))));
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (TRIM(vt38.c0))) WHERE (((CASE WHEN rt0.c3 THEN x'' WHEN vt38.c0 THEN x'' WHEN rt0.c1 THEN x'468b' ELSE rt0.c2 END)<>(UNLIKELY(DISTINCT rt0.c3))));
SELECT * FROM vt38 INNER JOIN rt1 ON ((rt0.c0)>>('>昤''ᣢ')) LEFT OUTER JOIN rt0 ON CAST(((((((((rt1.c2)AND(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)))AND(rt1.c1)) AS NUMERIC) FULL OUTER JOIN rt2 ON rt0.c3 COLLATE BINARY WHERE (((((NULL)OR((((rt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c4))))))AND(((((rt1.c4)OR(rt0.c1)))AND(rt1.c4))))) ORDER BY (((~ (rt0.c0)))>((((rt2.c1))=((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((((rt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c4))))))AND(((((rt1.c4)OR(rt0.c1)))AND(rt1.c4))))) IS TRUE)  as count FROM vt38 INNER JOIN rt1 ON ((rt0.c0)>>('>昤''ᣢ')) LEFT OUTER JOIN rt0 ON CAST(((((((((rt1.c2)AND(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)))AND(rt1.c1)) AS NUMERIC) FULL OUTER JOIN rt2 ON rt0.c3 COLLATE BINARY ORDER BY (((~ (rt0.c0)))>((((rt2.c1))=((rt0.c0)))))  NULLS FIRST);
SELECT * FROM vt38 INNER JOIN rt1 ON ((rt0.c0)>>('>昤''ᣢ')) LEFT OUTER JOIN rt0 ON CAST(((((((((rt1.c2)AND(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)))AND(rt1.c1)) AS NUMERIC) FULL OUTER JOIN rt2 ON rt0.c3 COLLATE BINARY WHERE (((((NULL)OR((((rt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c4))))))AND(((((rt1.c4)OR(rt0.c1)))AND(rt1.c4))))) ORDER BY (((~ (rt0.c0)))>((((rt2.c1))=((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((((rt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c4))))))AND(((((rt1.c4)OR(rt0.c1)))AND(rt1.c4))))) IS TRUE)  as count FROM vt38 INNER JOIN rt1 ON ((rt0.c0)>>('>昤''ᣢ')) LEFT OUTER JOIN rt0 ON CAST(((((((((rt1.c2)AND(rt2.c0)))OR(rt2.c0)))OR(rt2.c0)))AND(rt1.c1)) AS NUMERIC) FULL OUTER JOIN rt2 ON rt0.c3 COLLATE BINARY ORDER BY (((~ (rt0.c0)))>((((rt2.c1))=((rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt38, rt0, rt2 WHERE ((((rt0.c0, rt2.c2, rt0.c2)) NOT BETWEEN ((((((rt2.c0)OR(rt2.c2)))OR(rt2.c2)), ((rt2.c2)OR(rt0.c3)), SUBSTR(rt2.c2, rt0.c1))) AND ((CASE rt2.c0  WHEN vt38.c0 THEN rt2.c2 END, CASE WHEN rt0.c3 THEN rt2.c1 END, NULLIF(DISTINCT rt2.c1, rt2.c0))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt2.c2) AND (rt0.c1))  WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt2.c1)) THEN LIKELY('ccc6\nQ') WHEN ((vt38.c0)OR(rt0.c2)) THEN vt38.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c1))<=((rt2.c1))) END, ((((((((((rt0.c0)+(rt2.c0)))AND(((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))OR(CASE 0.5960630672169737  WHEN rt2.c0 THEN rt0.c1 ELSE rt0.c3 END)))AND(rt2.c2)))OR(json_remove(-1744420045, rt2.c2))) DESC, (- (0.5480076505798005)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt2.c2, rt0.c2)) NOT BETWEEN ((((((rt2.c0)OR(rt2.c2)))OR(rt2.c2)), ((rt2.c2)OR(rt0.c3)), SUBSTR(rt2.c2, rt0.c1))) AND ((CASE rt2.c0  WHEN vt38.c0 THEN rt2.c2 END, CASE WHEN rt0.c3 THEN rt2.c1 END, NULLIF(DISTINCT rt2.c1, rt2.c0))))) IS TRUE)  as count FROM vt38, rt0, rt2 ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt2.c2) AND (rt0.c1))  WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt2.c1)) THEN LIKELY('ccc6\nQ') WHEN ((vt38.c0)OR(rt0.c2)) THEN vt38.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c1))<=((rt2.c1))) END, ((((((((((rt0.c0)+(rt2.c0)))AND(((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))OR(CASE 0.5960630672169737  WHEN rt2.c0 THEN rt0.c1 ELSE rt0.c3 END)))AND(rt2.c2)))OR(json_remove(-1744420045, rt2.c2))) DESC, (- (0.5480076505798005)) ASC  NULLS LAST);
SELECT ALL * FROM vt38, rt0, rt2 WHERE ((((rt0.c0, rt2.c2, rt0.c2)) NOT BETWEEN ((((((rt2.c0)OR(rt2.c2)))OR(rt2.c2)), ((rt2.c2)OR(rt0.c3)), SUBSTR(rt2.c2, rt0.c1))) AND ((CASE rt2.c0  WHEN vt38.c0 THEN rt2.c2 END, CASE WHEN rt0.c3 THEN rt2.c1 END, NULLIF(DISTINCT rt2.c1, rt2.c0))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt2.c2) AND (rt0.c1))  WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt2.c1)) THEN LIKELY('ccc6\nQ') WHEN ((vt38.c0)OR(rt0.c2)) THEN vt38.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c1))<=((rt2.c1))) END, ((((((((((rt0.c0)+(rt2.c0)))AND(((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))OR(CASE 0.5960630672169737  WHEN rt2.c0 THEN rt0.c1 ELSE rt0.c3 END)))AND(rt2.c2)))OR(json_remove(-1744420045, rt2.c2))) DESC, (- (0.5480076505798005)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt2.c2, rt0.c2)) NOT BETWEEN ((((((rt2.c0)OR(rt2.c2)))OR(rt2.c2)), ((rt2.c2)OR(rt0.c3)), SUBSTR(rt2.c2, rt0.c1))) AND ((CASE rt2.c0  WHEN vt38.c0 THEN rt2.c2 END, CASE WHEN rt0.c3 THEN rt2.c1 END, NULLIF(DISTINCT rt2.c1, rt2.c0))))) IS TRUE)  as count FROM vt38, rt0, rt2 ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt2.c2) AND (rt0.c1))  WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt2.c1)) THEN LIKELY('ccc6\nQ') WHEN ((vt38.c0)OR(rt0.c2)) THEN vt38.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c1))<=((rt2.c1))) END, ((((((((((rt0.c0)+(rt2.c0)))AND(((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))OR(CASE 0.5960630672169737  WHEN rt2.c0 THEN rt0.c1 ELSE rt0.c3 END)))AND(rt2.c2)))OR(json_remove(-1744420045, rt2.c2))) DESC, (- (0.5480076505798005)) ASC  NULLS LAST);
SELECT ALL * FROM vt38, rt0, rt2 WHERE ((((rt0.c0, rt2.c2, rt0.c2)) NOT BETWEEN ((((((rt2.c0)OR(rt2.c2)))OR(rt2.c2)), ((rt2.c2)OR(rt0.c3)), SUBSTR(rt2.c2, rt0.c1))) AND ((CASE rt2.c0  WHEN vt38.c0 THEN rt2.c2 END, CASE WHEN rt0.c3 THEN rt2.c1 END, NULLIF(DISTINCT rt2.c1, rt2.c0))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt2.c2) AND (rt0.c1))  WHEN ((((rt0.c3)OR(rt0.c1)))AND(rt2.c1)) THEN LIKELY('ccc6\nQ') WHEN ((vt38.c0)OR(rt0.c2)) THEN vt38.c0 COLLATE RTRIM WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c1))<=((rt2.c1))) END, ((((((((((rt0.c0)+(rt2.c0)))AND(((rt0.c2) BETWEEN (x'') AND (rt0.c2)))))OR(CASE 0.5960630672169737  WHEN rt2.c0 THEN rt0.c1 ELSE rt0.c3 END)))AND(rt2.c2)))OR(json_remove(-1744420045, rt2.c2))) DESC, (- (0.5480076505798005)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE BINARY);
SELECT * FROM rt2, rt0 WHERE (TOTAL_CHANGES() COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES() COLLATE BINARY) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (TOTAL_CHANGES() COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES() COLLATE BINARY) IS TRUE)  as count FROM rt2, rt0);
SELECT * FROM rt2, rt0 WHERE (TOTAL_CHANGES() COLLATE BINARY);
SELECT * FROM vt38, rt2, rt0 WHERE (ABS(rt2.c2) COLLATE NOCASE) ORDER BY '1434801459'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(rt2.c2) COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt2, rt0 ORDER BY '1434801459'  NULLS LAST);
SELECT * FROM vt38, rt2, rt0 WHERE (ABS(rt2.c2) COLLATE NOCASE) ORDER BY '1434801459'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(rt2.c2) COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt2, rt0 ORDER BY '1434801459'  NULLS LAST);
SELECT * FROM vt38, rt2, rt0 WHERE (ABS(rt2.c2) COLLATE NOCASE) ORDER BY '1434801459'  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((((rt1.c0)IS NOT(rt1.c0)))) AND ((CAST(rt1.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) BETWEEN ((((rt1.c0)IS NOT(rt1.c0)))) AND ((CAST(rt1.c1 AS TEXT))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((((rt1.c0)IS NOT(rt1.c0)))) AND ((CAST(rt1.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) BETWEEN ((((rt1.c0)IS NOT(rt1.c0)))) AND ((CAST(rt1.c1 AS TEXT))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c4)) BETWEEN ((((rt1.c0)IS NOT(rt1.c0)))) AND ((CAST(rt1.c1 AS TEXT)))));
SELECT COUNT(*) FROM rt1, vt38 WHERE (CASE ((rt1.c2)<(rt1.c0))  WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c3)IS NOT(rt1.c0)) WHEN ((vt38.c0)GLOB(rt1.c4)) THEN LIKELY(DISTINCT rt1.c3) WHEN CAST(0.5522726843672139 AS TEXT) THEN (- (rt1.c4)) END) ORDER BY (((rt1.c0 IN (NULL))) NOT NULL)  NULLS LAST, ((x'a7ed')!=(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)<(rt1.c0))  WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c3)IS NOT(rt1.c0)) WHEN ((vt38.c0)GLOB(rt1.c4)) THEN LIKELY(DISTINCT rt1.c3) WHEN CAST(0.5522726843672139 AS TEXT) THEN (- (rt1.c4)) END) IS TRUE)  as count FROM rt1, vt38 ORDER BY (((rt1.c0 IN (NULL))) NOT NULL)  NULLS LAST, ((x'a7ed')!=(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) DESC);
SELECT COUNT(*) FROM rt1, vt38 WHERE (CASE ((rt1.c2)<(rt1.c0))  WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c3)IS NOT(rt1.c0)) WHEN ((vt38.c0)GLOB(rt1.c4)) THEN LIKELY(DISTINCT rt1.c3) WHEN CAST(0.5522726843672139 AS TEXT) THEN (- (rt1.c4)) END) ORDER BY (((rt1.c0 IN (NULL))) NOT NULL)  NULLS LAST, ((x'a7ed')!=(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)<(rt1.c0))  WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c3)IS NOT(rt1.c0)) WHEN ((vt38.c0)GLOB(rt1.c4)) THEN LIKELY(DISTINCT rt1.c3) WHEN CAST(0.5522726843672139 AS TEXT) THEN (- (rt1.c4)) END) IS TRUE)  as count FROM rt1, vt38 ORDER BY (((rt1.c0 IN (NULL))) NOT NULL)  NULLS LAST, ((x'a7ed')!=(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) DESC);
SELECT COUNT(*) FROM rt1, vt38 WHERE (CASE ((rt1.c2)<(rt1.c0))  WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c3)IS NOT(rt1.c0)) WHEN ((vt38.c0)GLOB(rt1.c4)) THEN LIKELY(DISTINCT rt1.c3) WHEN CAST(0.5522726843672139 AS TEXT) THEN (- (rt1.c4)) END) ORDER BY (((rt1.c0 IN (NULL))) NOT NULL)  NULLS LAST, ((x'a7ed')!=(((vt38.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) DESC;
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN rt1 ON (((CAST(rt2.c0 AS REAL), CASE rt2.c1  WHEN rt1.c2 THEN rt2.c0 ELSE rt2.c2 END, -415241851))<>((((rt2.c2)GLOB(rt1.c4)), ((rt2.c2) BETWEEN ('sb') AND (x'f25c')), rt1.c2))) WHERE ('1490154370' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('1490154370' COLLATE NOCASE) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON (((CAST(rt2.c0 AS REAL), CASE rt2.c1  WHEN rt1.c2 THEN rt2.c0 ELSE rt2.c2 END, -415241851))<>((((rt2.c2)GLOB(rt1.c4)), ((rt2.c2) BETWEEN ('sb') AND (x'f25c')), rt1.c2))));
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN rt1 ON (((CAST(rt2.c0 AS REAL), CASE rt2.c1  WHEN rt1.c2 THEN rt2.c0 ELSE rt2.c2 END, -415241851))<>((((rt2.c2)GLOB(rt1.c4)), ((rt2.c2) BETWEEN ('sb') AND (x'f25c')), rt1.c2))) WHERE ('1490154370' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('1490154370' COLLATE NOCASE) IS TRUE)  as count FROM rt2 LEFT OUTER JOIN rt1 ON (((CAST(rt2.c0 AS REAL), CASE rt2.c1  WHEN rt1.c2 THEN rt2.c0 ELSE rt2.c2 END, -415241851))<>((((rt2.c2)GLOB(rt1.c4)), ((rt2.c2) BETWEEN ('sb') AND (x'f25c')), rt1.c2))));
SELECT COUNT(*) FROM rt2 LEFT OUTER JOIN rt1 ON (((CAST(rt2.c0 AS REAL), CASE rt2.c1  WHEN rt1.c2 THEN rt2.c0 ELSE rt2.c2 END, -415241851))<>((((rt2.c2)GLOB(rt1.c4)), ((rt2.c2) BETWEEN ('sb') AND (x'f25c')), rt1.c2))) WHERE ('1490154370' COLLATE NOCASE);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 WHERE ((((((rt1.c2))==((rt0.c3)))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c1)IS NOT(rt0.c3))))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))>(load_extension(rt1.c2))), rt1.c3 COLLATE RTRIM  NULLS LAST, CASE WHEN rt0.c1 THEN ((rt0.c3) NOTNULL) WHEN ((NULL)>=(rt1.c4)) THEN rt0.c1 WHEN ((rt0.c3)*(rt1.c1)) THEN rt0.c1 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))==((rt0.c3)))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c1)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))>(load_extension(rt1.c2))), rt1.c3 COLLATE RTRIM  NULLS LAST, CASE WHEN rt0.c1 THEN ((rt0.c3) NOTNULL) WHEN ((NULL)>=(rt1.c4)) THEN rt0.c1 WHEN ((rt0.c3)*(rt1.c1)) THEN rt0.c1 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 WHERE ((((((rt1.c2))==((rt0.c3)))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c1)IS NOT(rt0.c3))))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))>(load_extension(rt1.c2))), rt1.c3 COLLATE RTRIM  NULLS LAST, CASE WHEN rt0.c1 THEN ((rt0.c3) NOTNULL) WHEN ((NULL)>=(rt1.c4)) THEN rt0.c1 WHEN ((rt0.c3)*(rt1.c1)) THEN rt0.c1 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))==((rt0.c3)))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c1)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c2 ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))>(load_extension(rt1.c2))), rt1.c3 COLLATE RTRIM  NULLS LAST, CASE WHEN rt0.c1 THEN ((rt0.c3) NOTNULL) WHEN ((NULL)>=(rt1.c4)) THEN rt0.c1 WHEN ((rt0.c3)*(rt1.c1)) THEN rt0.c1 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT ALL * FROM rt2, rt1, vt38 WHERE ((((NOT (rt2.c2)))<(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c1 WHEN x'0c0c' THEN rt2.c1 WHEN rt1.c4 THEN rt2.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt2.c2 THEN rt2.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt2.c2)))<(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c1 WHEN x'0c0c' THEN rt2.c1 WHEN rt1.c4 THEN rt2.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt2.c2 THEN rt2.c1 END))) IS TRUE)  as count FROM rt2, rt1, vt38);
SELECT ALL * FROM rt2, rt1, vt38 WHERE ((((NOT (rt2.c2)))<(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c1 WHEN x'0c0c' THEN rt2.c1 WHEN rt1.c4 THEN rt2.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt2.c2 THEN rt2.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt2.c2)))<(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c1 WHEN x'0c0c' THEN rt2.c1 WHEN rt1.c4 THEN rt2.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt2.c2 THEN rt2.c1 END))) IS TRUE)  as count FROM rt2, rt1, vt38);
SELECT ALL * FROM rt2, rt1, vt38 WHERE ((((NOT (rt2.c2)))<(CASE rt2.c1  WHEN rt2.c2 THEN rt2.c1 WHEN x'0c0c' THEN rt2.c1 WHEN rt1.c4 THEN rt2.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt2.c2 THEN rt2.c1 END)));
SELECT COUNT(*) FROM rt2 WHERE (((0.6204854889377497) IS TRUE)) ORDER BY (NOT (CASE rt2.c1  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c1 END));
SELECT SUM(count) FROM (SELECT ((((0.6204854889377497) IS TRUE)) IS TRUE)  as count FROM rt2 ORDER BY (NOT (CASE rt2.c1  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c1 END)));
SELECT COUNT(*) FROM rt2 WHERE (((0.6204854889377497) IS TRUE)) ORDER BY (NOT (CASE rt2.c1  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c1 END));
SELECT SUM(count) FROM (SELECT ((((0.6204854889377497) IS TRUE)) IS TRUE)  as count FROM rt2 ORDER BY (NOT (CASE rt2.c1  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c1 END)));
SELECT COUNT(*) FROM rt2 WHERE (((0.6204854889377497) IS TRUE)) ORDER BY (NOT (CASE rt2.c1  WHEN rt2.c0 THEN rt2.c2 ELSE rt2.c1 END));
SELECT * FROM rt1, rt0, vt38, rt2 WHERE (CASE (((rt1.c3))<((rt2.c1)))  WHEN (+ (rt0.c2)) THEN '2055092706' ELSE '' END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c3))<((rt2.c1)))  WHEN (+ (rt0.c2)) THEN '2055092706' ELSE '' END) IS TRUE)  as count FROM rt1, rt0, vt38, rt2);
SELECT * FROM rt1, rt0, vt38, rt2 WHERE (CASE (((rt1.c3))<((rt2.c1)))  WHEN (+ (rt0.c2)) THEN '2055092706' ELSE '' END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c3))<((rt2.c1)))  WHEN (+ (rt0.c2)) THEN '2055092706' ELSE '' END) IS TRUE)  as count FROM rt1, rt0, vt38, rt2);
SELECT * FROM rt1, rt0, vt38, rt2 WHERE (CASE (((rt1.c3))<((rt2.c1)))  WHEN (+ (rt0.c2)) THEN '2055092706' ELSE '' END);
SELECT * FROM rt2, rt1, vt38 FULL OUTER JOIN rt0 ON json_insert(CAST(x'' AS INTEGER), ((rt1.c2) NOT NULL), rt0.c0 COLLATE BINARY) WHERE ((((NOT (rt2.c2)))<>((- (vt38.c0))))) ORDER BY '', ((rt2.c1 IN ()) IN (IFNULL(DISTINCT rt1.c3, rt2.c1), CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt2.c2)))<>((- (vt38.c0))))) IS TRUE)  as count FROM rt2, rt1, vt38 FULL OUTER JOIN rt0 ON json_insert(CAST(x'' AS INTEGER), ((rt1.c2) NOT NULL), rt0.c0 COLLATE BINARY) ORDER BY '', ((rt2.c1 IN ()) IN (IFNULL(DISTINCT rt1.c3, rt2.c1), CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST);
SELECT * FROM rt2, rt1, vt38 FULL OUTER JOIN rt0 ON json_insert(CAST(x'' AS INTEGER), ((rt1.c2) NOT NULL), rt0.c0 COLLATE BINARY) WHERE ((((NOT (rt2.c2)))<>((- (vt38.c0))))) ORDER BY '', ((rt2.c1 IN ()) IN (IFNULL(DISTINCT rt1.c3, rt2.c1), CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt2.c2)))<>((- (vt38.c0))))) IS TRUE)  as count FROM rt2, rt1, vt38 FULL OUTER JOIN rt0 ON json_insert(CAST(x'' AS INTEGER), ((rt1.c2) NOT NULL), rt0.c0 COLLATE BINARY) ORDER BY '', ((rt2.c1 IN ()) IN (IFNULL(DISTINCT rt1.c3, rt2.c1), CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST);
SELECT * FROM rt2, rt1, vt38 FULL OUTER JOIN rt0 ON json_insert(CAST(x'' AS INTEGER), ((rt1.c2) NOT NULL), rt0.c0 COLLATE BINARY) WHERE ((((NOT (rt2.c2)))<>((- (vt38.c0))))) ORDER BY '', ((rt2.c1 IN ()) IN (IFNULL(DISTINCT rt1.c3, rt2.c1), CAST(rt0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c1 AS TEXT)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS TEXT)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c1 AS TEXT)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS TEXT)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c1 AS TEXT)) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt38, rt2, rt0 WHERE (((CASE 0.6860431402649263  WHEN rt0.c0 THEN rt2.c1 ELSE rt2.c0 END)%(((rt2.c0) IS TRUE)))) ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.6860431402649263  WHEN rt0.c0 THEN rt2.c1 ELSE rt2.c0 END)%(((rt2.c0) IS TRUE)))) IS TRUE)  as count FROM vt38, rt2, rt0 ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT) ASC);
SELECT ALL * FROM vt38, rt2, rt0 WHERE (((CASE 0.6860431402649263  WHEN rt0.c0 THEN rt2.c1 ELSE rt2.c0 END)%(((rt2.c0) IS TRUE)))) ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE 0.6860431402649263  WHEN rt0.c0 THEN rt2.c1 ELSE rt2.c0 END)%(((rt2.c0) IS TRUE)))) IS TRUE)  as count FROM vt38, rt2, rt0 ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT) ASC);
SELECT ALL * FROM vt38, rt2, rt0 WHERE (((CASE 0.6860431402649263  WHEN rt0.c0 THEN rt2.c1 ELSE rt2.c0 END)%(((rt2.c0) IS TRUE)))) ORDER BY CAST(((rt2.c2) IS FALSE) AS TEXT) ASC;
SELECT ALL * FROM rt2, rt0 WHERE (((-686420799 COLLATE RTRIM) NOT BETWEEN (((rt2.c0)>(rt0.c0))) AND (CAST(rt0.c3 AS INTEGER)))) ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((-686420799 COLLATE RTRIM) NOT BETWEEN (((rt2.c0)>(rt0.c0))) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM DESC);
SELECT ALL * FROM rt2, rt0 WHERE (((-686420799 COLLATE RTRIM) NOT BETWEEN (((rt2.c0)>(rt0.c0))) AND (CAST(rt0.c3 AS INTEGER)))) ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((-686420799 COLLATE RTRIM) NOT BETWEEN (((rt2.c0)>(rt0.c0))) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt2, rt0 ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM DESC);
SELECT ALL * FROM rt2, rt0 WHERE (((-686420799 COLLATE RTRIM) NOT BETWEEN (((rt2.c0)>(rt0.c0))) AND (CAST(rt0.c3 AS INTEGER)))) ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM DESC;
SELECT * FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1))) IS TRUE) LEFT OUTER JOIN rt0 ON (~ (((rt2.c1) NOTNULL))) WHERE ('-1350636640' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('-1350636640' COLLATE BINARY) IS TRUE)  as count FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1))) IS TRUE) LEFT OUTER JOIN rt0 ON (~ (((rt2.c1) NOTNULL))));
SELECT * FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1))) IS TRUE) LEFT OUTER JOIN rt0 ON (~ (((rt2.c1) NOTNULL))) WHERE ('-1350636640' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('-1350636640' COLLATE BINARY) IS TRUE)  as count FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1))) IS TRUE) LEFT OUTER JOIN rt0 ON (~ (((rt2.c1) NOTNULL))));
SELECT * FROM rt2, rt1 RIGHT OUTER JOIN vt38 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt2.c1))) IS TRUE) LEFT OUTER JOIN rt0 ON (~ (((rt2.c1) NOTNULL))) WHERE ('-1350636640' COLLATE BINARY);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT NULL))OR(rt0.c1))) ORDER BY (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c1)) BETWEEN ((x'1097')) AND ((rt0.c1))))) ASC, CAST((rt0.c2 IN ()) AS TEXT)  NULLS LAST, (MAX(rt0.c3, rt0.c1, rt0.c1, rt0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))OR(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c1)) BETWEEN ((x'1097')) AND ((rt0.c1))))) ASC, CAST((rt0.c2 IN ()) AS TEXT)  NULLS LAST, (MAX(rt0.c3, rt0.c1, rt0.c1, rt0.c0) IN ())  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT NULL))OR(rt0.c1))) ORDER BY (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c1)) BETWEEN ((x'1097')) AND ((rt0.c1))))) ASC, CAST((rt0.c2 IN ()) AS TEXT)  NULLS LAST, (MAX(rt0.c3, rt0.c1, rt0.c1, rt0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL))OR(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c1)) BETWEEN ((x'1097')) AND ((rt0.c1))))) ASC, CAST((rt0.c2 IN ()) AS TEXT)  NULLS LAST, (MAX(rt0.c3, rt0.c1, rt0.c1, rt0.c0) IN ())  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT NULL))OR(rt0.c1))) ORDER BY (((rt0.c1 IN (rt0.c3))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c1)) BETWEEN ((x'1097')) AND ((rt0.c1))))) ASC, CAST((rt0.c2 IN ()) AS TEXT)  NULLS LAST, (MAX(rt0.c3, rt0.c1, rt0.c1, rt0.c0) IN ())  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (0.2583274292895894);
SELECT SUM(count) FROM (SELECT ((0.2583274292895894) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (0.2583274292895894);
SELECT SUM(count) FROM (SELECT ((0.2583274292895894) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (0.2583274292895894);
SELECT ALL * FROM vt38 WHERE (vt38.c0) ORDER BY (CAST(vt38.c0 AS NUMERIC) IN (((vt38.c0) NOT NULL), ((x'') NOT BETWEEN (x'') AND (vt38.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt38.c0) IS TRUE)  as count FROM vt38 ORDER BY (CAST(vt38.c0 AS NUMERIC) IN (((vt38.c0) NOT NULL), ((x'') NOT BETWEEN (x'') AND (vt38.c0)))) ASC);
SELECT ALL * FROM vt38 WHERE (vt38.c0) ORDER BY (CAST(vt38.c0 AS NUMERIC) IN (((vt38.c0) NOT NULL), ((x'') NOT BETWEEN (x'') AND (vt38.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt38.c0) IS TRUE)  as count FROM vt38 ORDER BY (CAST(vt38.c0 AS NUMERIC) IN (((vt38.c0) NOT NULL), ((x'') NOT BETWEEN (x'') AND (vt38.c0)))) ASC);
SELECT ALL * FROM vt38 WHERE (vt38.c0) ORDER BY (CAST(vt38.c0 AS NUMERIC) IN (((vt38.c0) NOT NULL), ((x'') NOT BETWEEN (x'') AND (vt38.c0)))) ASC;
SELECT * FROM rt2, vt38, rt0 WHERE (((((rt2.c2)=(rt2.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)=(rt2.c1))) NOTNULL)) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT * FROM rt2, vt38, rt0 WHERE (((((rt2.c2)=(rt2.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2)=(rt2.c1))) NOTNULL)) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT * FROM rt2, vt38, rt0 WHERE (((((rt2.c2)=(rt2.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0, vt38, rt2 WHERE ((- (CASE vt38.c0  WHEN rt2.c1 THEN rt2.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt38.c0  WHEN rt2.c1 THEN rt2.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt38, rt2);
SELECT * FROM rt0, vt38, rt2 WHERE ((- (CASE vt38.c0  WHEN rt2.c1 THEN rt2.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt38.c0  WHEN rt2.c1 THEN rt2.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt38, rt2);
SELECT * FROM rt0, vt38, rt2 WHERE ((- (CASE vt38.c0  WHEN rt2.c1 THEN rt2.c2 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (CAST(LTRIM(rt2.c0) AS REAL)) ORDER BY ((((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>((((rt0.c2)+(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LTRIM(rt2.c0) AS REAL)) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY ((((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>((((rt0.c2)+(rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (CAST(LTRIM(rt2.c0) AS REAL)) ORDER BY ((((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>((((rt0.c2)+(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(LTRIM(rt2.c0) AS REAL)) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY ((((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>((((rt0.c2)+(rt0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt0, rt1 WHERE (CAST(LTRIM(rt2.c0) AS REAL)) ORDER BY ((((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))>((((rt0.c2)+(rt0.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c1)<>(rt2.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1)<>(rt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c1)<>(rt2.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt2.c1)<>(rt2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (((rt2.c1)<>(rt2.c1)) COLLATE RTRIM);
SELECT * FROM rt2, rt0 WHERE (((rt0.c1)<=(rt0.c2)) COLLATE NOCASE) ORDER BY ((rt2.c2 COLLATE NOCASE)IS NOT(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((rt2.c2 COLLATE NOCASE)IS NOT(rt0.c0))  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE (((rt0.c1)<=(rt0.c2)) COLLATE NOCASE) ORDER BY ((rt2.c2 COLLATE NOCASE)IS NOT(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt2, rt0 ORDER BY ((rt2.c2 COLLATE NOCASE)IS NOT(rt0.c0))  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE (((rt0.c1)<=(rt0.c2)) COLLATE NOCASE) ORDER BY ((rt2.c2 COLLATE NOCASE)IS NOT(rt0.c0))  NULLS FIRST;
SELECT ALL * FROM rt2, vt38 WHERE (rt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2) IS TRUE)  as count FROM rt2, vt38);
SELECT ALL * FROM rt2, vt38 WHERE (rt2.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt2.c2) IS TRUE)  as count FROM rt2, vt38);
SELECT ALL * FROM rt2, vt38 WHERE (rt2.c2);
SELECT ALL * FROM rt1, rt2, vt38 WHERE (((LIKELIHOOD(rt1.c1, 0.32317943165160945))|(((vt38.c0)OR(0xffffffffdaf00be4)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt1.c1, 0.32317943165160945))|(((vt38.c0)OR(0xffffffffdaf00be4))))) IS TRUE)  as count FROM rt1, rt2, vt38);
SELECT ALL * FROM rt1, rt2, vt38 WHERE (((LIKELIHOOD(rt1.c1, 0.32317943165160945))|(((vt38.c0)OR(0xffffffffdaf00be4)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt1.c1, 0.32317943165160945))|(((vt38.c0)OR(0xffffffffdaf00be4))))) IS TRUE)  as count FROM rt1, rt2, vt38);
SELECT ALL * FROM rt1, rt2, vt38 WHERE (((LIKELIHOOD(rt1.c1, 0.32317943165160945))|(((vt38.c0)OR(0xffffffffdaf00be4)))));
SELECT ALL * FROM rt0, vt38, rt2, rt1 WHERE (CAST(rt1.c0 AS INTEGER)) ORDER BY '-570285318' DESC  NULLS LAST, ((0.669232701464523) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt38, rt2, rt1 ORDER BY '-570285318' DESC  NULLS LAST, ((0.669232701464523) NOT NULL));
SELECT ALL * FROM rt0, vt38, rt2, rt1 WHERE (CAST(rt1.c0 AS INTEGER)) ORDER BY '-570285318' DESC  NULLS LAST, ((0.669232701464523) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, vt38, rt2, rt1 ORDER BY '-570285318' DESC  NULLS LAST, ((0.669232701464523) NOT NULL));
SELECT ALL * FROM rt0, vt38, rt2, rt1 WHERE (CAST(rt1.c0 AS INTEGER)) ORDER BY '-570285318' DESC  NULLS LAST, ((0.669232701464523) NOT NULL);
SELECT * FROM rt0, vt38, rt2, rt1 WHERE ((((rt1.c4 IN ()))!=(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ()))<>(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt38, rt2, rt1);
SELECT * FROM rt0, vt38, rt2, rt1 WHERE ((((rt1.c4 IN ()))!=(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt1.c4 IN ()))<>(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt38, rt2, rt1);
SELECT * FROM rt0, vt38, rt2, rt1 WHERE ((((rt1.c4 IN ()))!=(rt1.c3 COLLATE BINARY)));
SELECT ALL * FROM rt2, rt1, vt38 NOT INDEXED WHERE (NULL) ORDER BY ((rt1.c4) NOT BETWEEN (((rt1.c1)IS NOT(rt2.c1))) AND (((rt2.c2) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2, rt1, vt38 ORDER BY ((rt1.c4) NOT BETWEEN (((rt1.c1)IS NOT(rt2.c1))) AND (((rt2.c2) IS FALSE))) ASC);
SELECT ALL * FROM rt2, rt1, vt38 NOT INDEXED WHERE (NULL) ORDER BY ((rt1.c4) NOT BETWEEN (((rt1.c1)IS NOT(rt2.c1))) AND (((rt2.c2) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt2, rt1, vt38 ORDER BY ((rt1.c4) NOT BETWEEN (((rt1.c1)IS NOT(rt2.c1))) AND (((rt2.c2) IS FALSE))) ASC);
SELECT ALL * FROM rt2, rt1, vt38 NOT INDEXED WHERE (NULL) ORDER BY ((rt1.c4) NOT BETWEEN (((rt1.c1)IS NOT(rt2.c1))) AND (((rt2.c2) IS FALSE))) ASC;
SELECT ALL * FROM rt0 WHERE (((((((((9.50278802E8)AND(((rt0.c2)>(rt0.c0)))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c3) IS FALSE))))AND(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((9.50278802E8)AND(((rt0.c2)>(rt0.c0)))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c3) IS FALSE))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((9.50278802E8)AND(((rt0.c2)>(rt0.c0)))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c3) IS FALSE))))AND(rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((9.50278802E8)AND(((rt0.c2)>(rt0.c0)))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c3) IS FALSE))))AND(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((9.50278802E8)AND(((rt0.c2)>(rt0.c0)))))AND(rt0.c0 COLLATE BINARY)))OR(((rt0.c3) IS FALSE))))AND(rt0.c1 COLLATE BINARY)));
SELECT * FROM vt38 WHERE (MIN(vt38.c0 COLLATE NOCASE, ((vt38.c0) NOT BETWEEN ('1415559045') AND (0.06784260290209543)))) ORDER BY (((vt38.c0 IN (vt38.c0)))*(((vt38.c0) ISNULL))) DESC, ((((vt38.c0)IS NOT(vt38.c0))) NOT BETWEEN (((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN(vt38.c0 COLLATE NOCASE, ((vt38.c0) NOT BETWEEN ('1415559045') AND (0.06784260290209543)))) IS TRUE)  as count FROM vt38 ORDER BY (((vt38.c0 IN (vt38.c0)))*(((vt38.c0) ISNULL))) DESC, ((((vt38.c0)IS NOT(vt38.c0))) NOT BETWEEN (((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM vt38 WHERE (MIN(vt38.c0 COLLATE NOCASE, ((vt38.c0) NOT BETWEEN ('1415559045') AND (0.06784260290209543)))) ORDER BY (((vt38.c0 IN (vt38.c0)))*(((vt38.c0) ISNULL))) DESC, ((((vt38.c0)IS NOT(vt38.c0))) NOT BETWEEN (((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN(vt38.c0 COLLATE NOCASE, ((vt38.c0) NOT BETWEEN ('1415559045') AND (0.06784260290209543)))) IS TRUE)  as count FROM vt38 ORDER BY (((vt38.c0 IN (vt38.c0)))*(((vt38.c0) ISNULL))) DESC, ((((vt38.c0)IS NOT(vt38.c0))) NOT BETWEEN (((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM vt38 WHERE (MIN(vt38.c0 COLLATE NOCASE, ((vt38.c0) NOT BETWEEN ('1415559045') AND (0.06784260290209543)))) ORDER BY (((vt38.c0 IN (vt38.c0)))*(((vt38.c0) ISNULL))) DESC, ((((vt38.c0)IS NOT(vt38.c0))) NOT BETWEEN (((vt38.c0) BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt2 WHERE (rt2.c0) ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c2))%((rt2.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM rt2 ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c2))%((rt2.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE (rt2.c0) ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c2))%((rt2.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt2.c0) IS TRUE)  as count FROM rt2 ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c2))%((rt2.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt2 WHERE (rt2.c0) ORDER BY ((NULLIF(DISTINCT rt2.c0, rt2.c2))%((rt2.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL)) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL)) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL)) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) AS BLOB) ASC;
SELECT COUNT(*) FROM vt38, rt2 WHERE (((((vt38.c0)OR(rt2.c1)))AND(rt2.c2)) COLLATE NOCASE) ORDER BY ((((((((((rt2.c0)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c2)))AND(rt2.c0)))LIKE((rt2.c2 IN ('&'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt38.c0)OR(rt2.c1)))AND(rt2.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt2 ORDER BY ((((((((((rt2.c0)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c2)))AND(rt2.c0)))LIKE((rt2.c2 IN ('&'))))  NULLS LAST);
SELECT COUNT(*) FROM vt38, rt2 WHERE (((((vt38.c0)OR(rt2.c1)))AND(rt2.c2)) COLLATE NOCASE) ORDER BY ((((((((((rt2.c0)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c2)))AND(rt2.c0)))LIKE((rt2.c2 IN ('&'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt38.c0)OR(rt2.c1)))AND(rt2.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt38, rt2 ORDER BY ((((((((((rt2.c0)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c2)))AND(rt2.c0)))LIKE((rt2.c2 IN ('&'))))  NULLS LAST);
SELECT COUNT(*) FROM vt38, rt2 WHERE (((((vt38.c0)OR(rt2.c1)))AND(rt2.c2)) COLLATE NOCASE) ORDER BY ((((((((((rt2.c0)OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c2)))AND(rt2.c0)))LIKE((rt2.c2 IN ('&'))))  NULLS LAST;
SELECT ALL * FROM rt0, vt38 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY ((((rt0.c0)GLOB(rt0.c3))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt38 ORDER BY ((((rt0.c0)GLOB(rt0.c3))) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt0, vt38 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY ((((rt0.c0)GLOB(rt0.c3))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, vt38 ORDER BY ((((rt0.c0)GLOB(rt0.c3))) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt0, vt38 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))/(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY ((((rt0.c0)GLOB(rt0.c3))) ISNULL)  NULLS LAST;
SELECT * FROM rt1, vt38 WHERE ((0xffffffffded684fb IN (rt1.c0)) COLLATE RTRIM) ORDER BY ((((((x'')AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((+ (rt1.c4))) AND (((((rt1.c0)OR(rt1.c4)))AND(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (((0Xffffffffded684fb IN (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt38 ORDER BY ((((((x'')AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((+ (rt1.c4))) AND (((((rt1.c0)OR(rt1.c4)))AND(rt1.c4)))));
SELECT * FROM rt1, vt38 WHERE ((0xffffffffded684fb IN (rt1.c0)) COLLATE RTRIM) ORDER BY ((((((x'')AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((+ (rt1.c4))) AND (((((rt1.c0)OR(rt1.c4)))AND(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (((0Xffffffffded684fb IN (rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt38 ORDER BY ((((((x'')AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((+ (rt1.c4))) AND (((((rt1.c0)OR(rt1.c4)))AND(rt1.c4)))));
SELECT * FROM rt1, vt38 WHERE ((0xffffffffded684fb IN (rt1.c0)) COLLATE RTRIM) ORDER BY ((((((x'')AND(rt1.c1)))AND(rt1.c1))) BETWEEN ((+ (rt1.c4))) AND (((((rt1.c0)OR(rt1.c4)))AND(rt1.c4))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON ((((x'')OR(LIKE(rt2.c0, rt0.c3))))OR((('-1662873101') NOTNULL))) LEFT OUTER JOIN vt38 ON ((((((rt1.c4)AND(x'')))AND(1589572456)))/(CAST(rt1.c1 AS NUMERIC))) CROSS JOIN rt0 ON rt0.c1 WHERE ((~ ((((rt2.c1))>((rt2.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt2.c1))>((rt2.c0)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON ((((x'')OR(LIKE(rt2.c0, rt0.c3))))OR((('-1662873101') NOTNULL))) LEFT OUTER JOIN vt38 ON ((((((rt1.c4)AND(x'')))AND(1589572456)))/(CAST(rt1.c1 AS NUMERIC))) CROSS JOIN rt0 ON rt0.c1);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt2 ON ((((x'')OR(LIKE(rt2.c0, rt0.c3))))OR((('-1662873101') NOTNULL))) LEFT OUTER JOIN vt38 ON ((((((rt1.c4)AND(x'')))AND(1589572456)))/(CAST(rt1.c1 AS NUMERIC))) CROSS JOIN rt0 ON rt0.c1 WHERE ((~ ((((rt2.c1))>((rt2.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt2.c1))>((rt2.c0)))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt2 ON ((((x'')OR(LIKE(rt2.c0, rt0.c3))))OR((('-1662873101') NOTNULL))) LEFT OUTER JOIN vt38 ON ((((((rt1.c4)AND(x'')))AND(1589572456)))/(CAST(rt1.c1 AS NUMERIC))) CROSS JOIN rt0 ON rt0.c1);
SELECT ALL * FROM vt38, rt0 WHERE (json_array(rt0.c0, rt0.c3));
SELECT SUM(count) FROM (SELECT ALL ((json_array(rt0.c0, rt0.c3)) IS TRUE)  as count FROM vt38, rt0);
SELECT ALL * FROM vt38, rt0 WHERE (json_array(rt0.c0, rt0.c3));
SELECT SUM(count) FROM (SELECT ALL ((json_array(rt0.c0, rt0.c3)) IS TRUE)  as count FROM vt38, rt0);
SELECT ALL * FROM vt38, rt0 WHERE (json_array(rt0.c0, rt0.c3));
SELECT ALL COUNT(*) FROM rt2, rt1, vt38, rt0 WHERE (((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))<((+ (rt1.c4))))) ORDER BY (((0.3216263183994603)|(rt2.c0)) IN (((rt1.c3)LIKE(rt1.c4)), CAST(rt0.c0 AS REAL), rt1.c0)) DESC, CASE WHEN ((((rt2.c1)AND(rt0.c3)))OR(rt2.c1)) THEN rt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))<((+ (rt1.c4))))) IS TRUE)  as count FROM rt2, rt1, vt38, rt0 ORDER BY (((0.3216263183994603)|(rt2.c0)) IN (((rt1.c3)LIKE(rt1.c4)), CAST(rt0.c0 AS REAL), rt1.c0)) DESC, CASE WHEN ((((rt2.c1)AND(rt0.c3)))OR(rt2.c1)) THEN rt0.c0 END ASC);
SELECT ALL COUNT(*) FROM rt2, rt1, vt38, rt0 WHERE (((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))<((+ (rt1.c4))))) ORDER BY (((0.3216263183994603)|(rt2.c0)) IN (((rt1.c3)LIKE(rt1.c4)), CAST(rt0.c0 AS REAL), rt1.c0)) DESC, CASE WHEN ((((rt2.c1)AND(rt0.c3)))OR(rt2.c1)) THEN rt0.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))<((+ (rt1.c4))))) IS TRUE)  as count FROM rt2, rt1, vt38, rt0 ORDER BY (((0.3216263183994603)|(rt2.c0)) IN (((rt1.c3)LIKE(rt1.c4)), CAST(rt0.c0 AS REAL), rt1.c0)) DESC, CASE WHEN ((((rt2.c1)AND(rt0.c3)))OR(rt2.c1)) THEN rt0.c0 END ASC);
SELECT ALL COUNT(*) FROM rt2, rt1, vt38, rt0 WHERE (((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))<((+ (rt1.c4))))) ORDER BY (((0.3216263183994603)|(rt2.c0)) IN (((rt1.c3)LIKE(rt1.c4)), CAST(rt0.c0 AS REAL), rt1.c0)) DESC, CASE WHEN ((((rt2.c1)AND(rt0.c3)))OR(rt2.c1)) THEN rt0.c0 END ASC;
SELECT COUNT(*) FROM rt2 WHERE (((((((rt2.c2) BETWEEN (rt2.c2) AND (rt2.c1)))OR(((rt2.c2)>>(rt2.c1)))))OR(((0.704668880733734)-(rt2.c1))))) ORDER BY ((((((rt2.c1)OR(rt2.c0)))OR(rt2.c1)))<((rt2.c1 IN ())))  NULLS FIRST, ((rt2.c1)>=(rt2.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c2) BETWEEN (rt2.c2) AND (rt2.c1)))OR(((rt2.c2)>>(rt2.c1)))))OR(((0.704668880733734)-(rt2.c1))))) IS TRUE)  as count FROM rt2 ORDER BY ((((((rt2.c1)OR(rt2.c0)))OR(rt2.c1)))<((rt2.c1 IN ())))  NULLS FIRST, ((rt2.c1)>=(rt2.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt2 WHERE (((((((rt2.c2) BETWEEN (rt2.c2) AND (rt2.c1)))OR(((rt2.c2)>>(rt2.c1)))))OR(((0.704668880733734)-(rt2.c1))))) ORDER BY ((((((rt2.c1)OR(rt2.c0)))OR(rt2.c1)))<((rt2.c1 IN ())))  NULLS FIRST, ((rt2.c1)>=(rt2.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt2.c2) BETWEEN (rt2.c2) AND (rt2.c1)))OR(((rt2.c2)>>(rt2.c1)))))OR(((0.704668880733734)-(rt2.c1))))) IS TRUE)  as count FROM rt2 ORDER BY ((((((rt2.c1)OR(rt2.c0)))OR(rt2.c1)))<((rt2.c1 IN ())))  NULLS FIRST, ((rt2.c1)>=(rt2.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt2 WHERE (((((((rt2.c2) BETWEEN (rt2.c2) AND (rt2.c1)))OR(((rt2.c2)>>(rt2.c1)))))OR(((0.704668880733734)-(rt2.c1))))) ORDER BY ((((((rt2.c1)OR(rt2.c0)))OR(rt2.c1)))<((rt2.c1 IN ())))  NULLS FIRST, ((rt2.c1)>=(rt2.c0)) COLLATE BINARY;
SELECT * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM rt0, rt2 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt2.c0)))OR(vt38.c0))) NOT NULL) FULL OUTER JOIN vt38 ON ((rt1.c4)|(rt1.c4)) COLLATE BINARY COLLATE NOCASE WHERE (CASE WHEN ((((((((rt2.c2)AND(rt0.c3)))AND(vt38.c0)))OR(rt0.c3)))OR(rt0.c0)) THEN ((rt1.c1)<(rt0.c3)) WHEN (rt2.c2 IN ()) THEN ((rt2.c2)<=('㩒w')) WHEN ((rt2.c1)<(rt1.c0)) THEN 0.922908159092475 WHEN x'' THEN (('') BETWEEN (rt0.c1) AND (rt1.c0)) WHEN (- (rt0.c2)) THEN '0.0' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt2.c2)AND(rt0.c3)))AND(vt38.c0)))OR(rt0.c3)))OR(rt0.c0)) THEN ((rt1.c1)<(rt0.c3)) WHEN (rt2.c2 IN ()) THEN ((rt2.c2)<=('㩒w')) WHEN ((rt2.c1)<(rt1.c0)) THEN 0.922908159092475 WHEN x'' THEN (('') BETWEEN (rt0.c1) AND (rt1.c0)) WHEN (- (rt0.c2)) THEN '0.0' END) IS TRUE)  as count FROM rt0, rt2 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt2.c0)))OR(vt38.c0))) NOT NULL) FULL OUTER JOIN vt38 ON ((rt1.c4)|(rt1.c4)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, rt2 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt2.c0)))OR(vt38.c0))) NOT NULL) FULL OUTER JOIN vt38 ON ((rt1.c4)|(rt1.c4)) COLLATE BINARY COLLATE NOCASE WHERE (CASE WHEN ((((((((rt2.c2)AND(rt0.c3)))AND(vt38.c0)))OR(rt0.c3)))OR(rt0.c0)) THEN ((rt1.c1)<(rt0.c3)) WHEN (rt2.c2 IN ()) THEN ((rt2.c2)<=('㩒w')) WHEN ((rt2.c1)<(rt1.c0)) THEN 0.922908159092475 WHEN x'' THEN (('') BETWEEN (rt0.c1) AND (rt1.c0)) WHEN (- (rt0.c2)) THEN '0.0' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt2.c2)AND(rt0.c3)))AND(vt38.c0)))OR(rt0.c3)))OR(rt0.c0)) THEN ((rt1.c1)<(rt0.c3)) WHEN (rt2.c2 IN ()) THEN ((rt2.c2)<=('㩒w')) WHEN ((rt2.c1)<(rt1.c0)) THEN 0.922908159092475 WHEN x'' THEN (('') BETWEEN (rt0.c1) AND (rt1.c0)) WHEN (- (rt0.c2)) THEN '0.0' END) IS TRUE)  as count FROM rt0, rt2 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)AND(rt2.c0)))OR(vt38.c0))) NOT NULL) FULL OUTER JOIN vt38 ON ((rt1.c4)|(rt1.c4)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL * FROM vt38 WHERE ((+ (CASE WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END))) ORDER BY NULLIF(((vt38.c0)GLOB(vt38.c0)), json_extract(vt38.c0, vt38.c0)) ASC  NULLS LAST, ((((CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END)OR(((((((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))AND(vt38.c0)))))OR(CASE WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN '-1947451620' WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 WHEN x'7564' THEN vt38.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END))) IS TRUE)  as count FROM vt38 ORDER BY NULLIF(((vt38.c0)GLOB(vt38.c0)), json_extract(vt38.c0, vt38.c0)) ASC  NULLS LAST, ((((CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END)OR(((((((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))AND(vt38.c0)))))OR(CASE WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN '-1947451620' WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 WHEN x'7564' THEN vt38.c0 END)) ASC);
SELECT ALL * FROM vt38 WHERE ((+ (CASE WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END))) ORDER BY NULLIF(((vt38.c0)GLOB(vt38.c0)), json_extract(vt38.c0, vt38.c0)) ASC  NULLS LAST, ((((CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END)OR(((((((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))AND(vt38.c0)))))OR(CASE WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN '-1947451620' WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 WHEN x'7564' THEN vt38.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END))) IS TRUE)  as count FROM vt38 ORDER BY NULLIF(((vt38.c0)GLOB(vt38.c0)), json_extract(vt38.c0, vt38.c0)) ASC  NULLS LAST, ((((CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END)OR(((((((((vt38.c0)OR(vt38.c0)))OR(vt38.c0)))OR(vt38.c0)))AND(vt38.c0)))))OR(CASE WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN '-1947451620' WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 WHEN x'7564' THEN vt38.c0 END)) ASC);
SELECT ALL * FROM rt2, rt0, rt1, vt38 WHERE ((+ (((rt0.c0)IS NOT(rt2.c1))))) ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)IS NOT(rt2.c1))))) IS TRUE)  as count FROM rt2, rt0, rt1, vt38 ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM rt2, rt0, rt1, vt38 WHERE ((+ (((rt0.c0)IS NOT(rt2.c1))))) ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)IS NOT(rt2.c1))))) IS TRUE)  as count FROM rt2, rt0, rt1, vt38 ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM rt2, rt0, rt1, vt38 WHERE ((+ (((rt0.c0)IS NOT(rt2.c1))))) ORDER BY ((CAST(rt0.c0 AS BLOB)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt0.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((~ ((rt1.c3 IN ())))) ORDER BY (rt1.c3 IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt1.c3 IN ())))) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY (rt1.c3 IN ()));
SELECT ALL COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((~ ((rt1.c3 IN ())))) ORDER BY (rt1.c3 IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt1.c3 IN ())))) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY (rt1.c3 IN ()));
SELECT ALL COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((~ ((rt1.c3 IN ())))) ORDER BY (rt1.c3 IN ());
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))<=((rt0.c0))))%(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<=((rt0.c0))))%(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))<=((rt0.c0))))%(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<=((rt0.c0))))%(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))<=((rt0.c0))))%(CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM vt38, rt1, rt2, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (x'')))<<(CAST(0.9706409678765986 AS REAL)))) ORDER BY ((CAST(rt1.c1 AS INTEGER))*((((rt0.c0))=((rt1.c4))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt1.c3) AND (x'')))<<(CAST(0.9706409678765986 AS REAL)))) IS TRUE)  as count FROM vt38, rt1, rt2, rt0 ORDER BY ((CAST(rt1.c1 AS INTEGER))*((((rt0.c0))==((rt1.c4))))) ASC);
SELECT * FROM vt38, rt1, rt2, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (x'')))<<(CAST(0.9706409678765986 AS REAL)))) ORDER BY ((CAST(rt1.c1 AS INTEGER))*((((rt0.c0))=((rt1.c4))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt1.c3) AND (x'')))<<(CAST(0.9706409678765986 AS REAL)))) IS TRUE)  as count FROM vt38, rt1, rt2, rt0 ORDER BY ((CAST(rt1.c1 AS INTEGER))*((((rt0.c0))==((rt1.c4))))) ASC);
SELECT * FROM vt38, rt1, rt2, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt1.c3) AND (x'')))<<(CAST(0.9706409678765986 AS REAL)))) ORDER BY ((CAST(rt1.c1 AS INTEGER))*((((rt0.c0))=((rt1.c4))))) ASC;
SELECT ALL * FROM vt38 WHERE (CASE WHEN ((vt38.c0) NOT NULL) THEN IFNULL(vt38.c0, vt38.c0) WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END THEN (('') NOT BETWEEN (vt38.c0) AND (vt38.c0)) WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0)%(vt38.c0)) END) ORDER BY ((((vt38.c0) ISNULL)) BETWEEN (((vt38.c0)LIKE(vt38.c0))) AND (((0Xffffffffac02e434)=(vt38.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt38.c0) NOT NULL) THEN IFNULL(vt38.c0, vt38.c0) WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END THEN (('') NOT BETWEEN (vt38.c0) AND (vt38.c0)) WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0)%(vt38.c0)) END) IS TRUE)  as count FROM vt38 ORDER BY ((((vt38.c0) ISNULL)) BETWEEN (((vt38.c0)LIKE(vt38.c0))) AND (((0xffffffffac02e434)==(vt38.c0))))  NULLS FIRST);
SELECT ALL * FROM vt38 WHERE (CASE WHEN ((vt38.c0) NOT NULL) THEN IFNULL(vt38.c0, vt38.c0) WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END THEN (('') NOT BETWEEN (vt38.c0) AND (vt38.c0)) WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0)%(vt38.c0)) END) ORDER BY ((((vt38.c0) ISNULL)) BETWEEN (((vt38.c0)LIKE(vt38.c0))) AND (((0Xffffffffac02e434)=(vt38.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt38.c0) NOT NULL) THEN IFNULL(vt38.c0, vt38.c0) WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END THEN (('') NOT BETWEEN (vt38.c0) AND (vt38.c0)) WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0)%(vt38.c0)) END) IS TRUE)  as count FROM vt38 ORDER BY ((((vt38.c0) ISNULL)) BETWEEN (((vt38.c0)LIKE(vt38.c0))) AND (((0xffffffffac02e434)==(vt38.c0))))  NULLS FIRST);
SELECT ALL * FROM vt38 WHERE (CASE WHEN ((vt38.c0) NOT NULL) THEN IFNULL(vt38.c0, vt38.c0) WHEN CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 WHEN vt38.c0 THEN vt38.c0 ELSE vt38.c0 END THEN (('') NOT BETWEEN (vt38.c0) AND (vt38.c0)) WHEN ((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)) THEN ((vt38.c0)%(vt38.c0)) END) ORDER BY ((((vt38.c0) ISNULL)) BETWEEN (((vt38.c0)LIKE(vt38.c0))) AND (((0Xffffffffac02e434)=(vt38.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, vt38 WHERE (((HEX(rt1.c1))LIKE(CAST(rt1.c1 AS NUMERIC)))) ORDER BY ((0.9649767540898375)<((('-1604587349') NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c1))LIKE(CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, vt38 ORDER BY ((0.9649767540898375)<((('-1604587349') NOTNULL))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt38 WHERE (((HEX(rt1.c1))LIKE(CAST(rt1.c1 AS NUMERIC)))) ORDER BY ((0.9649767540898375)<((('-1604587349') NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c1))LIKE(CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, rt1, vt38 ORDER BY ((0.9649767540898375)<((('-1604587349') NOTNULL))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt38 WHERE (((HEX(rt1.c1))LIKE(CAST(rt1.c1 AS NUMERIC)))) ORDER BY ((0.9649767540898375)<((('-1604587349') NOTNULL))) ASC  NULLS LAST;
SELECT ALL * FROM vt38, rt2 WHERE (((((vt38.c0)=(vt38.c0))) ISNULL)) ORDER BY (((('1729362584')OR((rt2.c1 IN ()))))AND(NULL)) ASC  NULLS FIRST, TRIM(DISTINCT ((rt2.c2) ISNULL), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)=(vt38.c0))) ISNULL)) IS TRUE)  as count FROM vt38, rt2 ORDER BY (((('1729362584')OR((rt2.c1 IN ()))))AND(NULL)) ASC  NULLS FIRST, TRIM(DISTINCT ((rt2.c2) ISNULL), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c2))) DESC  NULLS LAST);
SELECT ALL * FROM vt38, rt2 WHERE (((((vt38.c0)=(vt38.c0))) ISNULL)) ORDER BY (((('1729362584')OR((rt2.c1 IN ()))))AND(NULL)) ASC  NULLS FIRST, TRIM(DISTINCT ((rt2.c2) ISNULL), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)=(vt38.c0))) ISNULL)) IS TRUE)  as count FROM vt38, rt2 ORDER BY (((('1729362584')OR((rt2.c1 IN ()))))AND(NULL)) ASC  NULLS FIRST, TRIM(DISTINCT ((rt2.c2) ISNULL), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c2))) DESC  NULLS LAST);
SELECT ALL * FROM vt38, rt2 WHERE (((((vt38.c0)=(vt38.c0))) ISNULL)) ORDER BY (((('1729362584')OR((rt2.c1 IN ()))))AND(NULL)) ASC  NULLS FIRST, TRIM(DISTINCT ((rt2.c2) ISNULL), ((rt2.c2) BETWEEN (vt38.c0) AND (rt2.c2))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (0.9350168364079515);
SELECT SUM(count) FROM (SELECT ((0.9350168364079515) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.9350168364079515);
SELECT SUM(count) FROM (SELECT ((0.9350168364079515) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.9350168364079515);
SELECT * FROM vt38 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c4)) COLLATE RTRIM CROSS JOIN rt2 ON ((rt1.c1) NOT NULL) COLLATE BINARY WHERE (((((0.14167796965225787)*(vt38.c0)))!=(-665363109))) ORDER BY ((rt2.c2)>=(rt2.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.14167796965225787)*(vt38.c0)))!=(-665363109))) IS TRUE)  as count FROM vt38 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c4)) COLLATE RTRIM CROSS JOIN rt2 ON ((rt1.c1) NOT NULL) COLLATE BINARY ORDER BY ((rt2.c2)>=(rt2.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt38 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c4)) COLLATE RTRIM CROSS JOIN rt2 ON ((rt1.c1) NOT NULL) COLLATE BINARY WHERE (((((0.14167796965225787)*(vt38.c0)))!=(-665363109))) ORDER BY ((rt2.c2)>=(rt2.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.14167796965225787)*(vt38.c0)))!=(-665363109))) IS TRUE)  as count FROM vt38 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c4)) COLLATE RTRIM CROSS JOIN rt2 ON ((rt1.c1) NOT NULL) COLLATE BINARY ORDER BY ((rt2.c2)>=(rt2.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM vt38 RIGHT OUTER JOIN rt1 ON (NOT (rt1.c4)) COLLATE RTRIM CROSS JOIN rt2 ON ((rt1.c1) NOT NULL) COLLATE BINARY WHERE (((((0.14167796965225787)*(vt38.c0)))!=(-665363109))) ORDER BY ((rt2.c2)>=(rt2.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2 NATURAL JOIN vt38 WHERE (CAST(LIKELY(DISTINCT '') AS NUMERIC)) ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN vt38.c0 WHEN vt38.c0 THEN rt2.c0 END) ISNULL)  NULLS LAST, ((NULL) NOT BETWEEN (((rt2.c1)IS(rt2.c1))) AND (((rt2.c0)GLOB(rt2.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT '') AS NUMERIC)) IS TRUE)  as count FROM rt2 NATURAL JOIN vt38 ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN vt38.c0 WHEN vt38.c0 THEN rt2.c0 END) ISNULL)  NULLS LAST, ((NULL) NOT BETWEEN (((rt2.c1)IS(rt2.c1))) AND (((rt2.c0)GLOB(rt2.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 NATURAL JOIN vt38 WHERE (CAST(LIKELY(DISTINCT '') AS NUMERIC)) ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN vt38.c0 WHEN vt38.c0 THEN rt2.c0 END) ISNULL)  NULLS LAST, ((NULL) NOT BETWEEN (((rt2.c1)IS(rt2.c1))) AND (((rt2.c0)GLOB(rt2.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT '') AS NUMERIC)) IS TRUE)  as count FROM rt2 NATURAL JOIN vt38 ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN vt38.c0 WHEN vt38.c0 THEN rt2.c0 END) ISNULL)  NULLS LAST, ((NULL) NOT BETWEEN (((rt2.c1)IS(rt2.c1))) AND (((rt2.c0)GLOB(rt2.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2 NATURAL JOIN vt38 WHERE (CAST(LIKELY(DISTINCT '') AS NUMERIC)) ORDER BY ((CASE WHEN rt2.c1 THEN rt2.c2 WHEN rt2.c1 THEN vt38.c0 WHEN vt38.c0 THEN rt2.c0 END) ISNULL)  NULLS LAST, ((NULL) NOT BETWEEN (((rt2.c1)IS(rt2.c1))) AND (((rt2.c0)GLOB(rt2.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt38 WHERE (((((((((rt1.c1)AND(rt1.c0)))OR(vt38.c0)))AND(rt1.c1)))OR(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)AND(rt1.c0)))OR(vt38.c0)))AND(rt1.c1)))OR(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt38);
SELECT COUNT(*) FROM rt1, vt38 WHERE (((((((((rt1.c1)AND(rt1.c0)))OR(vt38.c0)))AND(rt1.c1)))OR(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)AND(rt1.c0)))OR(vt38.c0)))AND(rt1.c1)))OR(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt38);
SELECT COUNT(*) FROM rt1, vt38 WHERE (((((((((rt1.c1)AND(rt1.c0)))OR(vt38.c0)))AND(rt1.c1)))OR(NULL)) COLLATE BINARY);
SELECT * FROM rt2, vt38, rt1, rt0 WHERE (((((rt2.c1) BETWEEN (rt1.c1) AND (x''))) BETWEEN ((- (rt2.c2))) AND (CAST(rt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1) BETWEEN (rt1.c1) AND (x''))) BETWEEN ((- (rt2.c2))) AND (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt2, vt38, rt1, rt0);
SELECT * FROM rt2, vt38, rt1, rt0 WHERE (((((rt2.c1) BETWEEN (rt1.c1) AND (x''))) BETWEEN ((- (rt2.c2))) AND (CAST(rt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt2.c1) BETWEEN (rt1.c1) AND (x''))) BETWEEN ((- (rt2.c2))) AND (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt2, vt38, rt1, rt0);
SELECT * FROM rt2, vt38, rt1, rt0 WHERE (((((rt2.c1) BETWEEN (rt1.c1) AND (x''))) BETWEEN ((- (rt2.c2))) AND (CAST(rt1.c1 AS INTEGER))));
SELECT ALL * FROM rt1, rt2, vt38, rt0 WHERE (((json_valid(rt0.c1)) BETWEEN ((((rt2.c1))<>((rt2.c2)))) AND (((rt2.c0)IS NOT(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((json_valid(rt0.c1)) BETWEEN ((((rt2.c1))!=((rt2.c2)))) AND (((rt2.c0)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt1, rt2, vt38, rt0);
SELECT ALL * FROM rt1, rt2, vt38, rt0 WHERE (((json_valid(rt0.c1)) BETWEEN ((((rt2.c1))<>((rt2.c2)))) AND (((rt2.c0)IS NOT(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((json_valid(rt0.c1)) BETWEEN ((((rt2.c1))!=((rt2.c2)))) AND (((rt2.c0)IS NOT(rt1.c1))))) IS TRUE)  as count FROM rt1, rt2, vt38, rt0);
SELECT ALL * FROM rt1, rt2, vt38, rt0 WHERE (((json_valid(rt0.c1)) BETWEEN ((((rt2.c1))<>((rt2.c2)))) AND (((rt2.c0)IS NOT(rt1.c1)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt38 ON ((LIKE(rt0.c1, rt0.c2))||(0.6562115465838332 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON UPPER(((((((((rt1.c1)OR(757537836)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c3))) WHERE ((((((((((((((rt0.c2)AND(vt38.c0)))AND(rt1.c2)))OR(rt0.c3)))AND(rt1.c0)))OR(rt0.c2)))AND(rt1.c3)) IN (((rt0.c3)!=(rt1.c4))))) ORDER BY TRIM(((x'') NOT BETWEEN (rt1.c3) AND (rt0.c1)))  NULLS LAST, (CAST(rt1.c3 AS TEXT) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c2)AND(vt38.c0)))AND(rt1.c2)))OR(rt0.c3)))AND(rt1.c0)))OR(rt0.c2)))AND(rt1.c3)) IN (((rt0.c3)<>(rt1.c4))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt38 ON ((LIKE(rt0.c1, rt0.c2))||(0.6562115465838332 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON UPPER(((((((((rt1.c1)OR(757537836)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c3))) ORDER BY TRIM(((x'') NOT BETWEEN (rt1.c3) AND (rt0.c1)))  NULLS LAST, (CAST(rt1.c3 AS TEXT) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt38 ON ((LIKE(rt0.c1, rt0.c2))||(0.6562115465838332 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON UPPER(((((((((rt1.c1)OR(757537836)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c3))) WHERE ((((((((((((((rt0.c2)AND(vt38.c0)))AND(rt1.c2)))OR(rt0.c3)))AND(rt1.c0)))OR(rt0.c2)))AND(rt1.c3)) IN (((rt0.c3)!=(rt1.c4))))) ORDER BY TRIM(((x'') NOT BETWEEN (rt1.c3) AND (rt0.c1)))  NULLS LAST, (CAST(rt1.c3 AS TEXT) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt0.c2)AND(vt38.c0)))AND(rt1.c2)))OR(rt0.c3)))AND(rt1.c0)))OR(rt0.c2)))AND(rt1.c3)) IN (((rt0.c3)<>(rt1.c4))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt38 ON ((LIKE(rt0.c1, rt0.c2))||(0.6562115465838332 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON UPPER(((((((((rt1.c1)OR(757537836)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c3))) ORDER BY TRIM(((x'') NOT BETWEEN (rt1.c3) AND (rt0.c1)))  NULLS LAST, (CAST(rt1.c3 AS TEXT) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)<(rt1.c1)))GLOB(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<(rt1.c1)))GLOB(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)<(rt1.c1)))GLOB(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<(rt1.c1)))GLOB(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)<(rt1.c1)))GLOB(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c2 END)));
SELECT * FROM vt38 WHERE (((vt38.c0)IS NOT(vt38.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt38.c0)IS NOT(vt38.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (((vt38.c0)IS NOT(vt38.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt38.c0)IS NOT(vt38.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE (((vt38.c0)IS NOT(vt38.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((rt2.c0) NOTNULL) RIGHT OUTER JOIN rt2 ON ((((0.8561295776803778)AND((rt0.c2 IN (rt1.c3)))))OR(json_array_length(rt2.c0, rt0.c2))) WHERE ((((((rt2.c1, rt1.c1, rt1.c4, rt2.c1, rt1.c0))>((rt0.c3, rt0.c0, rt2.c0, x'', rt1.c4)))) NOT NULL)) ORDER BY ((rt0.c2)&(TRIM(x''))) ASC  NULLS FIRST, (((rt0.c1, rt1.c2, rt0.c2, rt2.c2, rt2.c0)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c0 END, ((rt0.c3)%(x'')), ((rt1.c3)>>(rt1.c2)), (((rt2.c1))<=((rt2.c1))), ((rt0.c2) BETWEEN (rt1.c3) AND (rt2.c1)))) AND ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c1 END, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt2.c0))), ((rt0.c2)<(rt1.c4)), CAST(rt2.c1 AS TEXT), ((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt1.c0)))))  NULLS FIRST, ((((((rt1.c3)>(rt2.c2)))AND(LENGTH(rt1.c0))))OR(((rt1.c3)<=(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt2.c1, rt1.c1, rt1.c4, rt2.c1, rt1.c0))>((rt0.c3, rt0.c0, rt2.c0, x'', rt1.c4)))) NOT NULL)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt2.c0) NOTNULL) RIGHT OUTER JOIN rt2 ON ((((0.8561295776803778)AND((rt0.c2 IN (rt1.c3)))))OR(json_array_length(rt2.c0, rt0.c2))) ORDER BY ((rt0.c2)&(TRIM(x''))) ASC  NULLS FIRST, (((rt0.c1, rt1.c2, rt0.c2, rt2.c2, rt2.c0)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c0 END, ((rt0.c3)%(x'')), ((rt1.c3)>>(rt1.c2)), (((rt2.c1))<=((rt2.c1))), ((rt0.c2) BETWEEN (rt1.c3) AND (rt2.c1)))) AND ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c1 END, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt2.c0))), ((rt0.c2)<(rt1.c4)), CAST(rt2.c1 AS TEXT), ((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt1.c0)))))  NULLS FIRST, ((((((rt1.c3)>(rt2.c2)))AND(LENGTH(rt1.c0))))OR(((rt1.c3)<=(rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON ((rt2.c0) NOTNULL) RIGHT OUTER JOIN rt2 ON ((((0.8561295776803778)AND((rt0.c2 IN (rt1.c3)))))OR(json_array_length(rt2.c0, rt0.c2))) WHERE ((((((rt2.c1, rt1.c1, rt1.c4, rt2.c1, rt1.c0))>((rt0.c3, rt0.c0, rt2.c0, x'', rt1.c4)))) NOT NULL)) ORDER BY ((rt0.c2)&(TRIM(x''))) ASC  NULLS FIRST, (((rt0.c1, rt1.c2, rt0.c2, rt2.c2, rt2.c0)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c0 END, ((rt0.c3)%(x'')), ((rt1.c3)>>(rt1.c2)), (((rt2.c1))<=((rt2.c1))), ((rt0.c2) BETWEEN (rt1.c3) AND (rt2.c1)))) AND ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c1 END, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt2.c0))), ((rt0.c2)<(rt1.c4)), CAST(rt2.c1 AS TEXT), ((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt1.c0)))))  NULLS FIRST, ((((((rt1.c3)>(rt2.c2)))AND(LENGTH(rt1.c0))))OR(((rt1.c3)<=(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt2.c1, rt1.c1, rt1.c4, rt2.c1, rt1.c0))>((rt0.c3, rt0.c0, rt2.c0, x'', rt1.c4)))) NOT NULL)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt2.c0) NOTNULL) RIGHT OUTER JOIN rt2 ON ((((0.8561295776803778)AND((rt0.c2 IN (rt1.c3)))))OR(json_array_length(rt2.c0, rt0.c2))) ORDER BY ((rt0.c2)&(TRIM(x''))) ASC  NULLS FIRST, (((rt0.c1, rt1.c2, rt0.c2, rt2.c2, rt2.c0)) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c0 END, ((rt0.c3)%(x'')), ((rt1.c3)>>(rt1.c2)), (((rt2.c1))<=((rt2.c1))), ((rt0.c2) BETWEEN (rt1.c3) AND (rt2.c1)))) AND ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c1 END, (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt2.c0))), ((rt0.c2)<(rt1.c4)), CAST(rt2.c1 AS TEXT), ((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt1.c0)))))  NULLS FIRST, ((((((rt1.c3)>(rt2.c2)))AND(LENGTH(rt1.c0))))OR(((rt1.c3)<=(rt1.c2)))) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, vt38, rt2 WHERE ((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (vt38.c0) AND (rt0.c0)))) AND ((((rt0.c3)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (vt38.c0) AND (rt0.c0)))) AND ((((rt0.c3)LIKE(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1, vt38, rt2);
SELECT * FROM rt0, rt1, vt38, rt2 WHERE ((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (vt38.c0) AND (rt0.c0)))) AND ((((rt0.c3)LIKE(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (vt38.c0) AND (rt0.c0)))) AND ((((rt0.c3)LIKE(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1, vt38, rt2);
SELECT * FROM rt0, rt1, vt38, rt2 WHERE ((((rt2.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (vt38.c0) AND (rt0.c0)))) AND ((((rt0.c3)LIKE(rt0.c1))))));
SELECT * FROM vt38 WHERE ((CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END IN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)), ((vt38.c0)>=(vt38.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END IN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)), ((vt38.c0)>=(vt38.c0))))) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE ((CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END IN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)), ((vt38.c0)>=(vt38.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END IN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)), ((vt38.c0)>=(vt38.c0))))) IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE ((CASE vt38.c0  WHEN vt38.c0 THEN vt38.c0 END IN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0)), ((vt38.c0)>=(vt38.c0)))));
SELECT ALL * FROM vt38, rt0, rt2, rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN (~ (rt1.c0)) THEN CASE WHEN vt38.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c4 THEN 0.17542301335318544 WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt2.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN (~ (rt1.c0)) THEN CASE WHEN vt38.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c4 THEN 0.17542301335318544 WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt2.c2 END END) IS TRUE)  as count FROM vt38, rt0, rt2, rt1);
SELECT ALL * FROM vt38, rt0, rt2, rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN (~ (rt1.c0)) THEN CASE WHEN vt38.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c4 THEN 0.17542301335318544 WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt2.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN (~ (rt1.c0)) THEN CASE WHEN vt38.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c4 THEN 0.17542301335318544 WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt2.c2 END END) IS TRUE)  as count FROM vt38, rt0, rt2, rt1);
SELECT ALL * FROM vt38, rt0, rt2, rt1 WHERE (CASE CASE WHEN rt1.c1 THEN rt0.c1 END  WHEN (~ (rt1.c0)) THEN CASE WHEN vt38.c0 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c4 THEN 0.17542301335318544 WHEN rt1.c2 THEN rt1.c4 WHEN rt2.c0 THEN rt2.c2 END END);
SELECT ALL * FROM rt1 WHERE (((x'') NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END) AND (CAST(rt1.c4 AS BLOB)))) ORDER BY ((((rt1.c4)>=(rt1.c1))) BETWEEN (((rt1.c3) IS FALSE)) AND ((rt1.c3 IN (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END) AND (CAST(rt1.c4 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)>=(rt1.c1))) BETWEEN (((rt1.c3) IS FALSE)) AND ((rt1.c3 IN (rt1.c0)))) ASC);
SELECT ALL * FROM rt1 WHERE (((x'') NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END) AND (CAST(rt1.c4 AS BLOB)))) ORDER BY ((((rt1.c4)>=(rt1.c1))) BETWEEN (((rt1.c3) IS FALSE)) AND ((rt1.c3 IN (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END) AND (CAST(rt1.c4 AS BLOB)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c4)>=(rt1.c1))) BETWEEN (((rt1.c3) IS FALSE)) AND ((rt1.c3 IN (rt1.c0)))) ASC);
SELECT ALL * FROM rt1 WHERE (((x'') NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END) AND (CAST(rt1.c4 AS BLOB)))) ORDER BY ((((rt1.c4)>=(rt1.c1))) BETWEEN (((rt1.c3) IS FALSE)) AND ((rt1.c3 IN (rt1.c0)))) ASC;
SELECT * FROM rt0, rt1, vt38 WHERE (((((rt0.c3)OR(rt0.c1)))OR((~ (rt1.c4))))) ORDER BY HEX(DISTINCT (NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(rt0.c1)))OR((~ (rt1.c4))))) IS TRUE)  as count FROM rt0, rt1, vt38 ORDER BY HEX(DISTINCT (NOT (rt0.c0))));
SELECT * FROM rt0, rt1, vt38 WHERE (((((rt0.c3)OR(rt0.c1)))OR((~ (rt1.c4))))) ORDER BY HEX(DISTINCT (NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(rt0.c1)))OR((~ (rt1.c4))))) IS TRUE)  as count FROM rt0, rt1, vt38 ORDER BY HEX(DISTINCT (NOT (rt0.c0))));
SELECT * FROM rt0, rt1, vt38 WHERE (((((rt0.c3)OR(rt0.c1)))OR((~ (rt1.c4))))) ORDER BY HEX(DISTINCT (NOT (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (CAST(rt1.c3 AS REAL) IN ()) LEFT OUTER JOIN vt38 ON rt1.c3 INNER JOIN rt2 ON (~ ((((rt2.c0))>=((rt2.c0))))) WHERE (((((((rt0.c3)OR(rt2.c1)))OR(rt1.c1)))>=(rt1.c2 COLLATE NOCASE))) ORDER BY (LIKELY(rt2.c0) IN ()) ASC, (rt1.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)OR(rt2.c1)))OR(rt1.c1)))>=(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (CAST(rt1.c3 AS REAL) IN ()) LEFT OUTER JOIN vt38 ON rt1.c3 INNER JOIN rt2 ON (~ ((((rt2.c0))>=((rt2.c0))))) ORDER BY (LIKELY(rt2.c0) IN ()) ASC, (rt1.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (CAST(rt1.c3 AS REAL) IN ()) LEFT OUTER JOIN vt38 ON rt1.c3 INNER JOIN rt2 ON (~ ((((rt2.c0))>=((rt2.c0))))) WHERE (((((((rt0.c3)OR(rt2.c1)))OR(rt1.c1)))>=(rt1.c2 COLLATE NOCASE))) ORDER BY (LIKELY(rt2.c0) IN ()) ASC, (rt1.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)OR(rt2.c1)))OR(rt1.c1)))>=(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (CAST(rt1.c3 AS REAL) IN ()) LEFT OUTER JOIN vt38 ON rt1.c3 INNER JOIN rt2 ON (~ ((((rt2.c0))>=((rt2.c0))))) ORDER BY (LIKELY(rt2.c0) IN ()) ASC, (rt1.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (CAST(rt1.c3 AS REAL) IN ()) LEFT OUTER JOIN vt38 ON rt1.c3 INNER JOIN rt2 ON (~ ((((rt2.c0))>=((rt2.c0))))) WHERE (((((((rt0.c3)OR(rt2.c1)))OR(rt1.c1)))>=(rt1.c2 COLLATE NOCASE))) ORDER BY (LIKELY(rt2.c0) IN ()) ASC, (rt1.c0 COLLATE RTRIM IN ());
SELECT COUNT(*) FROM rt2 CROSS JOIN rt0 ON (((rt2.c0 IN ()))<(rt1.c2)) CROSS JOIN rt1 ON (((NULL IN (rt1.c2))) IS TRUE) WHERE ((((('-1102172616') BETWEEN (rt2.c1) AND (rt1.c3)))&((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1102172616') BETWEEN (rt2.c1) AND (rt1.c3)))&((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))))) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON (((rt2.c0 IN ()))<(rt1.c2)) CROSS JOIN rt1 ON (((NULL IN (rt1.c2))) IS TRUE));
SELECT COUNT(*) FROM rt2 CROSS JOIN rt0 ON (((rt2.c0 IN ()))<(rt1.c2)) CROSS JOIN rt1 ON (((NULL IN (rt1.c2))) IS TRUE) WHERE ((((('-1102172616') BETWEEN (rt2.c1) AND (rt1.c3)))&((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((('-1102172616') BETWEEN (rt2.c1) AND (rt1.c3)))&((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt1.c3)))))) IS TRUE)  as count FROM rt2 CROSS JOIN rt0 ON (((rt2.c0 IN ()))<(rt1.c2)) CROSS JOIN rt1 ON (((NULL IN (rt1.c2))) IS TRUE));
SELECT COUNT(*) FROM rt2 CROSS JOIN rt0 ON (((rt2.c0 IN ()))<(rt1.c2)) CROSS JOIN rt1 ON (((NULL IN (rt1.c2))) IS TRUE) WHERE ((((('-1102172616') BETWEEN (rt2.c1) AND (rt1.c3)))&((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))));
SELECT ALL * FROM rt2 WHERE ((NOT ((((rt2.c1, rt2.c2, rt2.c0))=((rt2.c0, rt2.c0, rt2.c0)))))) ORDER BY (json_patch(rt2.c1, rt2.c2) IN (((rt2.c0)LIKE(rt2.c2)))), rt2.c2 ASC, (((-5.36389958E8 IN ()))|(((rt2.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt2.c1, rt2.c2, rt2.c0))==((rt2.c0, rt2.c0, rt2.c0)))))) IS TRUE)  as count FROM rt2 ORDER BY (json_patch(rt2.c1, rt2.c2) IN (((rt2.c0)LIKE(rt2.c2)))), rt2.c2 ASC, (((-5.36389958E8 IN ()))|(((rt2.c2) IS TRUE))));
SELECT ALL * FROM rt2 WHERE ((NOT ((((rt2.c1, rt2.c2, rt2.c0))=((rt2.c0, rt2.c0, rt2.c0)))))) ORDER BY (json_patch(rt2.c1, rt2.c2) IN (((rt2.c0)LIKE(rt2.c2)))), rt2.c2 ASC, (((-5.36389958E8 IN ()))|(((rt2.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt2.c1, rt2.c2, rt2.c0))==((rt2.c0, rt2.c0, rt2.c0)))))) IS TRUE)  as count FROM rt2 ORDER BY (json_patch(rt2.c1, rt2.c2) IN (((rt2.c0)LIKE(rt2.c2)))), rt2.c2 ASC, (((-5.36389958E8 IN ()))|(((rt2.c2) IS TRUE))));
SELECT ALL * FROM rt2 WHERE ((NOT ((((rt2.c1, rt2.c2, rt2.c0))=((rt2.c0, rt2.c0, rt2.c0)))))) ORDER BY (json_patch(rt2.c1, rt2.c2) IN (((rt2.c0)LIKE(rt2.c2)))), rt2.c2 ASC, (((-5.36389958E8 IN ()))|(((rt2.c2) IS TRUE)));
SELECT COUNT(*) FROM rt2, rt1, rt0 WHERE ((~ (CASE WHEN rt1.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt1.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT COUNT(*) FROM rt2, rt1, rt0 WHERE ((~ (CASE WHEN rt1.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt1.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt2, rt1, rt0);
SELECT COUNT(*) FROM rt2, rt1, rt0 WHERE ((~ (CASE WHEN rt1.c1 THEN rt0.c2 END)));
SELECT ALL * FROM rt2 WHERE (CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c2))) THEN ((rt2.c1) BETWEEN (rt2.c1) AND (rt2.c1)) ELSE rt2.c1 END) ORDER BY rt2.c2 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c2))) THEN ((rt2.c1) BETWEEN (rt2.c1) AND (rt2.c1)) ELSE rt2.c1 END) IS TRUE)  as count FROM rt2 ORDER BY rt2.c2 COLLATE NOCASE ASC);
SELECT ALL * FROM rt2 WHERE (CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c2))) THEN ((rt2.c1) BETWEEN (rt2.c1) AND (rt2.c1)) ELSE rt2.c1 END) ORDER BY rt2.c2 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c2))) THEN ((rt2.c1) BETWEEN (rt2.c1) AND (rt2.c1)) ELSE rt2.c1 END) IS TRUE)  as count FROM rt2 ORDER BY rt2.c2 COLLATE NOCASE ASC);
SELECT ALL * FROM rt2 WHERE (CASE WHEN (((rt2.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c2))) THEN ((rt2.c1) BETWEEN (rt2.c1) AND (rt2.c1)) ELSE rt2.c1 END) ORDER BY rt2.c2 COLLATE NOCASE ASC;
SELECT ALL * FROM rt2, vt38, rt0, rt1 WHERE ('-1530398787');
SELECT SUM(count) FROM (SELECT ALL (('-1530398787') IS TRUE)  as count FROM rt2, vt38, rt0, rt1);
SELECT ALL * FROM rt2, vt38, rt0, rt1 WHERE ('-1530398787');
SELECT SUM(count) FROM (SELECT ALL (('-1530398787') IS TRUE)  as count FROM rt2, vt38, rt0, rt1);
SELECT ALL * FROM rt2, vt38, rt0, rt1 WHERE ('-1530398787');
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE)IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)IS NOT(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT * FROM vt38, rt1 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOTNULL) ASC  NULLS LAST, ((rt1.c3 COLLATE NOCASE)/((((rt1.c3))!=((rt1.c4))))) DESC  NULLS LAST, ((((((rt1.c2)|(rt1.c2)))AND(((vt38.c0)GLOB(rt1.c4)))))OR((((rt1.c3))<((rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt38, rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOTNULL) ASC  NULLS LAST, ((rt1.c3 COLLATE NOCASE)/((((rt1.c3))<>((rt1.c4))))) DESC  NULLS LAST, ((((((rt1.c2)|(rt1.c2)))AND(((vt38.c0)GLOB(rt1.c4)))))OR((((rt1.c3))<((rt1.c2))))) ASC  NULLS FIRST);
SELECT * FROM vt38, rt1 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOTNULL) ASC  NULLS LAST, ((rt1.c3 COLLATE NOCASE)/((((rt1.c3))!=((rt1.c4))))) DESC  NULLS LAST, ((((((rt1.c2)|(rt1.c2)))AND(((vt38.c0)GLOB(rt1.c4)))))OR((((rt1.c3))<((rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt38, rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOTNULL) ASC  NULLS LAST, ((rt1.c3 COLLATE NOCASE)/((((rt1.c3))<>((rt1.c4))))) DESC  NULLS LAST, ((((((rt1.c2)|(rt1.c2)))AND(((vt38.c0)GLOB(rt1.c4)))))OR((((rt1.c3))<((rt1.c2))))) ASC  NULLS FIRST);
SELECT * FROM vt38, rt1 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4))) NOTNULL) ASC  NULLS LAST, ((rt1.c3 COLLATE NOCASE)/((((rt1.c3))!=((rt1.c4))))) DESC  NULLS LAST, ((((((rt1.c2)|(rt1.c2)))AND(((vt38.c0)GLOB(rt1.c4)))))OR((((rt1.c3))<((rt1.c2))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt2, rt0, rt1 WHERE (CAST('1382028800' AS TEXT)) ORDER BY rt1.c1 ASC, rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1382028800' AS TEXT)) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY rt1.c1 ASC, rt1.c2 DESC);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (CAST('1382028800' AS TEXT)) ORDER BY rt1.c1 ASC, rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1382028800' AS TEXT)) IS TRUE)  as count FROM rt2, rt0, rt1 ORDER BY rt1.c1 ASC, rt1.c2 DESC);
SELECT ALL * FROM rt2, rt0, rt1 WHERE (CAST('1382028800' AS TEXT)) ORDER BY rt1.c1 ASC, rt1.c2 DESC;
SELECT ALL * FROM rt2, rt0, rt1, vt38 WHERE ((((rt0.c1)&(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)&(rt0.c3)) IN ())) IS TRUE)  as count FROM rt2, rt0, rt1, vt38);
SELECT ALL * FROM rt2, rt0, rt1, vt38 WHERE ((((rt0.c1)&(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)&(rt0.c3)) IN ())) IS TRUE)  as count FROM rt2, rt0, rt1, vt38);
SELECT ALL * FROM rt2, rt0, rt1, vt38 WHERE ((((rt0.c1)&(rt0.c3)) IN ()));
SELECT COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((((+ (rt2.c1))) NOT BETWEEN (((rt2.c2)|(rt2.c1))) AND (rt0.c3))) ORDER BY IFNULL(DISTINCT ((rt2.c1)OR(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt2.c1))) NOT BETWEEN (((rt2.c2)|(rt2.c1))) AND (rt0.c3))) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY IFNULL(DISTINCT ((rt2.c1)OR(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 END) DESC);
SELECT COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((((+ (rt2.c1))) NOT BETWEEN (((rt2.c2)|(rt2.c1))) AND (rt0.c3))) ORDER BY IFNULL(DISTINCT ((rt2.c1)OR(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt2.c1))) NOT BETWEEN (((rt2.c2)|(rt2.c1))) AND (rt0.c3))) IS TRUE)  as count FROM vt38, rt1, rt0, rt2 ORDER BY IFNULL(DISTINCT ((rt2.c1)OR(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 END) DESC);
SELECT COUNT(*) FROM vt38, rt1, rt0, rt2 WHERE ((((+ (rt2.c1))) NOT BETWEEN (((rt2.c2)|(rt2.c1))) AND (rt0.c3))) ORDER BY IFNULL(DISTINCT ((rt2.c1)OR(rt0.c3)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c0 END) DESC;
SELECT ALL * FROM vt38, rt1, rt0, rt2 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt38, rt1, rt0, rt2);
SELECT ALL * FROM vt38, rt1, rt0, rt2 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt38, rt1, rt0, rt2);
SELECT ALL * FROM vt38, rt1, rt0, rt2 WHERE (rt1.c3);
SELECT COUNT(*) FROM vt38 LEFT OUTER JOIN rt0 ON 0.9765662334694963 RIGHT OUTER JOIN rt1 ON IFNULL('T-gCL', (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((-1351772393)))) WHERE (NULLIF(DISTINCT rt0.c2, ((rt1.c3)<<(rt1.c4)))) ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt1.c3)))OR(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c2, ((rt1.c3)<<(rt1.c4)))) IS TRUE)  as count FROM vt38 LEFT OUTER JOIN rt0 ON 0.9765662334694963 RIGHT OUTER JOIN rt1 ON IFNULL('T-gCL', (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((-1351772393)))) ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt1.c3)))OR(rt0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM vt38 LEFT OUTER JOIN rt0 ON 0.9765662334694963 RIGHT OUTER JOIN rt1 ON IFNULL('T-gCL', (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((-1351772393)))) WHERE (NULLIF(DISTINCT rt0.c2, ((rt1.c3)<<(rt1.c4)))) ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt1.c3)))OR(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c2, ((rt1.c3)<<(rt1.c4)))) IS TRUE)  as count FROM vt38 LEFT OUTER JOIN rt0 ON 0.9765662334694963 RIGHT OUTER JOIN rt1 ON IFNULL('T-gCL', (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((-1351772393)))) ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt1.c3)))OR(rt0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM vt38 LEFT OUTER JOIN rt0 ON 0.9765662334694963 RIGHT OUTER JOIN rt1 ON IFNULL('T-gCL', (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((-1351772393)))) WHERE (NULLIF(DISTINCT rt0.c2, ((rt1.c3)<<(rt1.c4)))) ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt1.c3)))OR(rt0.c2)))  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (((rt1.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((((rt1.c2)!=(rt1.c2)))<=((+ (rt1.c3))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c2)<>(rt1.c2)))<=((+ (rt1.c3)))));
SELECT * FROM rt0, rt1 WHERE (((rt1.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((((rt1.c2)!=(rt1.c2)))<=((+ (rt1.c3))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c2)<>(rt1.c2)))<=((+ (rt1.c3)))));
SELECT * FROM rt0, rt1 WHERE (((rt1.c1) BETWEEN (NULL) AND (rt1.c0)) COLLATE BINARY) ORDER BY ((((rt1.c2)!=(rt1.c2)))<=((+ (rt1.c3))));
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN rt2 ON (((rt1.c2)<=(rt1.c3)) IN ()) RIGHT OUTER JOIN vt38 ON CASE WHEN (~ (rt1.c4)) THEN ((rt2.c2)IS(rt0.c2)) WHEN vt38.c0 COLLATE NOCASE THEN ((rt1.c2)!=(rt1.c4)) WHEN rt1.c2 THEN INSTR(rt1.c3, rt1.c3) ELSE ((rt0.c2) NOT NULL) END WHERE ((- (rt1.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN rt2 ON (((rt1.c2)<=(rt1.c3)) IN ()) RIGHT OUTER JOIN vt38 ON CASE WHEN (~ (rt1.c4)) THEN ((rt2.c2)IS(rt0.c2)) WHEN vt38.c0 COLLATE NOCASE THEN ((rt1.c2)!=(rt1.c4)) WHEN rt1.c2 THEN INSTR(rt1.c3, rt1.c3) ELSE ((rt0.c2) NOT NULL) END);
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN rt2 ON (((rt1.c2)<=(rt1.c3)) IN ()) RIGHT OUTER JOIN vt38 ON CASE WHEN (~ (rt1.c4)) THEN ((rt2.c2)IS(rt0.c2)) WHEN vt38.c0 COLLATE NOCASE THEN ((rt1.c2)!=(rt1.c4)) WHEN rt1.c2 THEN INSTR(rt1.c3, rt1.c3) ELSE ((rt0.c2) NOT NULL) END WHERE ((- (rt1.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN rt2 ON (((rt1.c2)<=(rt1.c3)) IN ()) RIGHT OUTER JOIN vt38 ON CASE WHEN (~ (rt1.c4)) THEN ((rt2.c2)IS(rt0.c2)) WHEN vt38.c0 COLLATE NOCASE THEN ((rt1.c2)!=(rt1.c4)) WHEN rt1.c2 THEN INSTR(rt1.c3, rt1.c3) ELSE ((rt0.c2) NOT NULL) END);
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN rt2 ON (((rt1.c2)<=(rt1.c3)) IN ()) RIGHT OUTER JOIN vt38 ON CASE WHEN (~ (rt1.c4)) THEN ((rt2.c2)IS(rt0.c2)) WHEN vt38.c0 COLLATE NOCASE THEN ((rt1.c2)!=(rt1.c4)) WHEN rt1.c2 THEN INSTR(rt1.c3, rt1.c3) ELSE ((rt0.c2) NOT NULL) END WHERE ((- (rt1.c4 COLLATE BINARY)));
SELECT COUNT(*) FROM rt2, vt38, rt1, rt0 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt2, vt38, rt1, rt0);
SELECT COUNT(*) FROM rt2, vt38, rt1, rt0 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt2, vt38, rt1, rt0);
SELECT COUNT(*) FROM rt2, vt38, rt1, rt0 WHERE (((rt0.c2) IS FALSE));
SELECT * FROM rt1, rt0, vt38 WHERE (((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt38.c0) AND ((0.37856675056205313 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt38.c0) AND ((0.37856675056205313 IN (rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, vt38);
SELECT * FROM rt1, rt0, vt38 WHERE (((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt38.c0) AND ((0.37856675056205313 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt38.c0) AND ((0.37856675056205313 IN (rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, vt38);
SELECT * FROM rt1, rt0, vt38 WHERE (((CASE rt0.c3  WHEN rt1.c0 THEN rt0.c2 END) NOT BETWEEN (vt38.c0) AND ((0.37856675056205313 IN (rt1.c0)))));
SELECT COUNT(*) FROM rt2, rt1, vt38 WHERE (((((((((((((CASE rt2.c1  WHEN x'75df' THEN rt2.c2 ELSE rt1.c4 END)OR(((rt2.c0)LIKE(rt1.c4)))))AND(((NULL) NOT BETWEEN (rt2.c0) AND (vt38.c0)))))AND(((rt1.c3) NOT NULL))))OR((rt1.c3 IN ()))))OR(CAST(rt1.c1 AS NUMERIC))))AND(((vt38.c0) BETWEEN (vt38.c0) AND (0.7846939348566524))))) ORDER BY CAST(((((((((NULL)AND(rt1.c3)))AND(x'')))AND(vt38.c0)))AND(vt38.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE rt2.c1  WHEN x'75df' THEN rt2.c2 ELSE rt1.c4 END)OR(((rt2.c0)LIKE(rt1.c4)))))AND(((NULL) NOT BETWEEN (rt2.c0) AND (vt38.c0)))))AND(((rt1.c3) NOT NULL))))OR((rt1.c3 IN ()))))OR(CAST(rt1.c1 AS NUMERIC))))AND(((vt38.c0) BETWEEN (vt38.c0) AND (0.7846939348566524))))) IS TRUE)  as count FROM rt2, rt1, vt38 ORDER BY CAST(((((((((NULL)AND(rt1.c3)))AND(x'')))AND(vt38.c0)))AND(vt38.c0)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt2, rt1, vt38 WHERE (((((((((((((CASE rt2.c1  WHEN x'75df' THEN rt2.c2 ELSE rt1.c4 END)OR(((rt2.c0)LIKE(rt1.c4)))))AND(((NULL) NOT BETWEEN (rt2.c0) AND (vt38.c0)))))AND(((rt1.c3) NOT NULL))))OR((rt1.c3 IN ()))))OR(CAST(rt1.c1 AS NUMERIC))))AND(((vt38.c0) BETWEEN (vt38.c0) AND (0.7846939348566524))))) ORDER BY CAST(((((((((NULL)AND(rt1.c3)))AND(x'')))AND(vt38.c0)))AND(vt38.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE rt2.c1  WHEN x'75df' THEN rt2.c2 ELSE rt1.c4 END)OR(((rt2.c0)LIKE(rt1.c4)))))AND(((NULL) NOT BETWEEN (rt2.c0) AND (vt38.c0)))))AND(((rt1.c3) NOT NULL))))OR((rt1.c3 IN ()))))OR(CAST(rt1.c1 AS NUMERIC))))AND(((vt38.c0) BETWEEN (vt38.c0) AND (0.7846939348566524))))) IS TRUE)  as count FROM rt2, rt1, vt38 ORDER BY CAST(((((((((NULL)AND(rt1.c3)))AND(x'')))AND(vt38.c0)))AND(vt38.c0)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt2, rt1, vt38 WHERE (((((((((((((CASE rt2.c1  WHEN x'75df' THEN rt2.c2 ELSE rt1.c4 END)OR(((rt2.c0)LIKE(rt1.c4)))))AND(((NULL) NOT BETWEEN (rt2.c0) AND (vt38.c0)))))AND(((rt1.c3) NOT NULL))))OR((rt1.c3 IN ()))))OR(CAST(rt1.c1 AS NUMERIC))))AND(((vt38.c0) BETWEEN (vt38.c0) AND (0.7846939348566524))))) ORDER BY CAST(((((((((NULL)AND(rt1.c3)))AND(x'')))AND(vt38.c0)))AND(vt38.c0)) AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt38 WHERE (((((rt0.c3) ISNULL))>=(((vt38.c0) NOT BETWEEN (vt38.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))>=(((vt38.c0) NOT BETWEEN (vt38.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL COUNT(*) FROM rt0, vt38 WHERE (((((rt0.c3) ISNULL))>=(((vt38.c0) NOT BETWEEN (vt38.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL))>=(((vt38.c0) NOT BETWEEN (vt38.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL COUNT(*) FROM rt0, vt38 WHERE (((((rt0.c3) ISNULL))>=(((vt38.c0) NOT BETWEEN (vt38.c0) AND (rt0.c2)))));
SELECT * FROM rt1, rt2, rt0, vt38 WHERE ((((rt0.c1)) BETWEEN (((rt2.c0 IN (rt2.c2)))) AND ((((rt1.c4)%(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt2.c0 IN (rt2.c2)))) AND ((((rt1.c4)%(rt1.c3)))))) IS TRUE)  as count FROM rt1, rt2, rt0, vt38);
SELECT * FROM rt1, rt2, rt0, vt38 WHERE ((((rt0.c1)) BETWEEN (((rt2.c0 IN (rt2.c2)))) AND ((((rt1.c4)%(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt2.c0 IN (rt2.c2)))) AND ((((rt1.c4)%(rt1.c3)))))) IS TRUE)  as count FROM rt1, rt2, rt0, vt38);
SELECT * FROM rt1, rt2, rt0, vt38 WHERE ((((rt0.c1)) BETWEEN (((rt2.c0 IN (rt2.c2)))) AND ((((rt1.c4)%(rt1.c3))))));
SELECT ALL * FROM rt1, rt2, rt0, vt38 WHERE ('ꑿX(') ORDER BY ((NOT (rt1.c0)) IN ((rt0.c0 IN ()), ((rt2.c2) NOT BETWEEN (rt2.c2) AND (rt2.c2)))) ASC, COALESCE(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((rt2.c1)%(rt0.c2)));
SELECT SUM(count) FROM (SELECT (('ꑿX(') IS TRUE)  as count FROM rt1, rt2, rt0, vt38 ORDER BY ((NOT (rt1.c0)) IN ((rt0.c0 IN ()), ((rt2.c2) NOT BETWEEN (rt2.c2) AND (rt2.c2)))) ASC, COALESCE(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((rt2.c1)%(rt0.c2))));
SELECT ALL * FROM rt1, rt2, rt0, vt38 WHERE ('ꑿX(') ORDER BY ((NOT (rt1.c0)) IN ((rt0.c0 IN ()), ((rt2.c2) NOT BETWEEN (rt2.c2) AND (rt2.c2)))) ASC, COALESCE(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((rt2.c1)%(rt0.c2)));
SELECT SUM(count) FROM (SELECT (('ꑿX(') IS TRUE)  as count FROM rt1, rt2, rt0, vt38 ORDER BY ((NOT (rt1.c0)) IN ((rt0.c0 IN ()), ((rt2.c2) NOT BETWEEN (rt2.c2) AND (rt2.c2)))) ASC, COALESCE(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((rt2.c1)%(rt0.c2))));
SELECT ALL * FROM rt1, rt2, rt0, vt38 WHERE ('ꑿX(') ORDER BY ((NOT (rt1.c0)) IN ((rt0.c0 IN ()), ((rt2.c2) NOT BETWEEN (rt2.c2) AND (rt2.c2)))) ASC, COALESCE(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((rt2.c1)%(rt0.c2)));
SELECT ALL COUNT(*) FROM vt38 CROSS JOIN rt0 ON json_quote(0xffffffffb589effc) WHERE (((((((rt0.c3))!=((rt0.c1)))))>((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3))!=((rt0.c1)))))>((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt38 CROSS JOIN rt0 ON json_quote(0Xffffffffb589effc));
SELECT ALL COUNT(*) FROM vt38 CROSS JOIN rt0 ON json_quote(0xffffffffb589effc) WHERE (((((((rt0.c3))!=((rt0.c1)))))>((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3))!=((rt0.c1)))))>((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt38 CROSS JOIN rt0 ON json_quote(0Xffffffffb589effc));
SELECT ALL COUNT(*) FROM vt38 CROSS JOIN rt0 ON json_quote(0xffffffffb589effc) WHERE (((((((rt0.c3))!=((rt0.c1)))))>((rt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt1, rt2 FULL OUTER JOIN rt0 ON ((((rt2.c0)AND(rt2.c2)))||(rt2.c2 COLLATE NOCASE)) FULL OUTER JOIN vt38 ON json_insert((vt38.c0 IN ()), rt1.c1, rt1.c0 COLLATE NOCASE) WHERE (((((rt2.c2) NOT NULL)) NOT BETWEEN ((rt2.c1 IN ())) AND (((rt2.c2)LIKE(rt1.c2))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c1)/(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2) NOT NULL)) NOT BETWEEN ((rt2.c1 IN ())) AND (((rt2.c2)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1, rt2 FULL OUTER JOIN rt0 ON ((((rt2.c0)AND(rt2.c2)))||(rt2.c2 COLLATE NOCASE)) FULL OUTER JOIN vt38 ON json_insert((vt38.c0 IN ()), rt1.c1, rt1.c0 COLLATE NOCASE) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c1)/(rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt2 FULL OUTER JOIN rt0 ON ((((rt2.c0)AND(rt2.c2)))||(rt2.c2 COLLATE NOCASE)) FULL OUTER JOIN vt38 ON json_insert((vt38.c0 IN ()), rt1.c1, rt1.c0 COLLATE NOCASE) WHERE (((((rt2.c2) NOT NULL)) NOT BETWEEN ((rt2.c1 IN ())) AND (((rt2.c2)LIKE(rt1.c2))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c1)/(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt2.c2) NOT NULL)) NOT BETWEEN ((rt2.c1 IN ())) AND (((rt2.c2)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1, rt2 FULL OUTER JOIN rt0 ON ((((rt2.c0)AND(rt2.c2)))||(rt2.c2 COLLATE NOCASE)) FULL OUTER JOIN vt38 ON json_insert((vt38.c0 IN ()), rt1.c1, rt1.c0 COLLATE NOCASE) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c1)/(rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt2 FULL OUTER JOIN rt0 ON ((((rt2.c0)AND(rt2.c2)))||(rt2.c2 COLLATE NOCASE)) FULL OUTER JOIN vt38 ON json_insert((vt38.c0 IN ()), rt1.c1, rt1.c0 COLLATE NOCASE) WHERE (((((rt2.c2) NOT NULL)) NOT BETWEEN ((rt2.c1 IN ())) AND (((rt2.c2)LIKE(rt1.c2))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL))) AND ((((rt1.c1)/(rt0.c1))))) DESC;
SELECT * FROM rt2, vt38, rt0 WHERE (((((((((vt38.c0)AND(rt0.c0)))AND(rt2.c1)))OR(CASE 0.3592695720208592  WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt2.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt2.c1 THEN vt38.c0 ELSE vt38.c0 END)))OR((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((vt38.c0)AND(rt0.c0)))AND(rt2.c1)))OR(CASE 0.3592695720208592  WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt2.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt2.c1 THEN vt38.c0 ELSE vt38.c0 END)))OR((rt0.c3 IN ())))) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT * FROM rt2, vt38, rt0 WHERE (((((((((vt38.c0)AND(rt0.c0)))AND(rt2.c1)))OR(CASE 0.3592695720208592  WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt2.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt2.c1 THEN vt38.c0 ELSE vt38.c0 END)))OR((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((vt38.c0)AND(rt0.c0)))AND(rt2.c1)))OR(CASE 0.3592695720208592  WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt2.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt2.c1 THEN vt38.c0 ELSE vt38.c0 END)))OR((rt0.c3 IN ())))) IS TRUE)  as count FROM rt2, vt38, rt0);
SELECT * FROM rt2, vt38, rt0 WHERE (((((((((vt38.c0)AND(rt0.c0)))AND(rt2.c1)))OR(CASE 0.3592695720208592  WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt2.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt2.c1 THEN vt38.c0 ELSE vt38.c0 END)))OR((rt0.c3 IN ()))));
SELECT COUNT(*) FROM vt38 LEFT OUTER JOIN rt1 ON (('	')<<(((rt1.c0) IS FALSE))) CROSS JOIN rt2 ON ((((rt1.c0) IS TRUE))&(TYPEOF(rt1.c2))) WHERE (((CASE WHEN 0X1d63c5a1 THEN rt1.c2 WHEN rt2.c0 THEN vt38.c0 WHEN rt1.c3 THEN rt2.c0 END)=(json_quote(rt2.c1)))) ORDER BY (((((rt1.c0))<=((rt1.c4))))AND((vt38.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0X1d63c5a1 THEN rt1.c2 WHEN rt2.c0 THEN vt38.c0 WHEN rt1.c3 THEN rt2.c0 END)=(json_quote(rt2.c1)))) IS TRUE)  as count FROM vt38 NOT INDEXED LEFT OUTER JOIN rt1 ON (('	')<<(((rt1.c0) IS FALSE))) CROSS JOIN rt2 ON ((((rt1.c0) IS TRUE))&(TYPEOF(rt1.c2))) ORDER BY (((((rt1.c0))<=((rt1.c4))))AND((vt38.c0 IN ()))));
SELECT COUNT(*) FROM vt38 LEFT OUTER JOIN rt1 ON (('	')<<(((rt1.c0) IS FALSE))) CROSS JOIN rt2 ON ((((rt1.c0) IS TRUE))&(TYPEOF(rt1.c2))) WHERE (((CASE WHEN 0X1d63c5a1 THEN rt1.c2 WHEN rt2.c0 THEN vt38.c0 WHEN rt1.c3 THEN rt2.c0 END)=(json_quote(rt2.c1)))) ORDER BY (((((rt1.c0))<=((rt1.c4))))AND((vt38.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0X1d63c5a1 THEN rt1.c2 WHEN rt2.c0 THEN vt38.c0 WHEN rt1.c3 THEN rt2.c0 END)=(json_quote(rt2.c1)))) IS TRUE)  as count FROM vt38 NOT INDEXED LEFT OUTER JOIN rt1 ON (('	')<<(((rt1.c0) IS FALSE))) CROSS JOIN rt2 ON ((((rt1.c0) IS TRUE))&(TYPEOF(rt1.c2))) ORDER BY (((((rt1.c0))<=((rt1.c4))))AND((vt38.c0 IN ()))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt38 ON CAST((('') ISNULL) AS TEXT) WHERE (((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))-(((rt1.c4) ISNULL)))) ORDER BY UNLIKELY('') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))-(((rt1.c4) ISNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt38 ON CAST((('') ISNULL) AS TEXT) ORDER BY UNLIKELY('') ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt38 ON CAST((('') ISNULL) AS TEXT) WHERE (((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))-(((rt1.c4) ISNULL)))) ORDER BY UNLIKELY('') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))-(((rt1.c4) ISNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt38 ON CAST((('') ISNULL) AS TEXT) ORDER BY UNLIKELY('') ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt38 ON CAST((('') ISNULL) AS TEXT) WHERE (((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))-(((rt1.c4) ISNULL)))) ORDER BY UNLIKELY('') ASC  NULLS LAST;
SELECT ALL * FROM vt38 INNER JOIN rt0 ON 'Uj\n졀侃.>' WHERE ((((vt38.c0)) BETWEEN ((CAST(vt38.c0 AS REAL))) AND ((((vt38.c0)IS(rt0.c0)))))) ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt38.c0 THEN '1176887260' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c2 IN (vt38.c0)), '-')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt38.c0)) BETWEEN ((CAST(vt38.c0 AS REAL))) AND ((((vt38.c0)IS(rt0.c0)))))) IS TRUE)  as count FROM vt38 INNER JOIN rt0 ON 'Uj\n졀侃.>' ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt38.c0 THEN '1176887260' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c2 IN (vt38.c0)), '-')  NULLS FIRST);
SELECT ALL * FROM vt38 INNER JOIN rt0 ON 'Uj\n졀侃.>' WHERE ((((vt38.c0)) BETWEEN ((CAST(vt38.c0 AS REAL))) AND ((((vt38.c0)IS(rt0.c0)))))) ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt38.c0 THEN '1176887260' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c2 IN (vt38.c0)), '-')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt38.c0)) BETWEEN ((CAST(vt38.c0 AS REAL))) AND ((((vt38.c0)IS(rt0.c0)))))) IS TRUE)  as count FROM vt38 INNER JOIN rt0 ON 'Uj\n졀侃.>' ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt38.c0 THEN '1176887260' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c2 IN (vt38.c0)), '-')  NULLS FIRST);
SELECT ALL * FROM vt38 INNER JOIN rt0 ON 'Uj\n졀侃.>' WHERE ((((vt38.c0)) BETWEEN ((CAST(vt38.c0 AS REAL))) AND ((((vt38.c0)IS(rt0.c0)))))) ORDER BY LIKE(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt38.c0 THEN '1176887260' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c2 IN (vt38.c0)), '-')  NULLS FIRST;
SELECT * FROM vt38 WHERE (((((vt38.c0)||(0.8050686295238454))) NOT BETWEEN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0))) ORDER BY (~ (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)||(0.8050686295238454))) NOT BETWEEN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0))) IS TRUE)  as count FROM vt38 ORDER BY (~ (NULL))  NULLS FIRST);
SELECT * FROM vt38 WHERE (((((vt38.c0)||(0.8050686295238454))) NOT BETWEEN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0))) ORDER BY (~ (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)||(0.8050686295238454))) NOT BETWEEN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0))) IS TRUE)  as count FROM vt38 ORDER BY (~ (NULL))  NULLS FIRST);
SELECT * FROM vt38 WHERE (((((vt38.c0)||(0.8050686295238454))) NOT BETWEEN (((vt38.c0) NOT BETWEEN (vt38.c0) AND (vt38.c0))) AND (vt38.c0))) ORDER BY (~ (NULL))  NULLS FIRST;
SELECT * FROM rt2, rt0 WHERE ((((rt2.c0)) BETWEEN ((json_array(rt0.c1, rt0.c2, rt2.c0, 0Xffffffffc8447722))) AND ((((((rt2.c1)AND(rt2.c1)))AND(rt0.c3)))))) ORDER BY (((0.39828942246702215, rt2.c1, ((rt0.c1)-(rt0.c3))))=((((rt2.c0)GLOB('+g|UTp')), ((rt2.c2) IS TRUE), CASE WHEN rt2.c1 THEN rt2.c2 ELSE rt2.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c0)) BETWEEN ((json_array(rt0.c1, rt0.c2, rt2.c0, 0xffffffffc8447722))) AND ((((((rt2.c1)AND(rt2.c1)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY (((0.39828942246702215, rt2.c1, ((rt0.c1)-(rt0.c3))))==((((rt2.c0)GLOB('+g|UTp')), ((rt2.c2) IS TRUE), CASE WHEN rt2.c1 THEN rt2.c2 ELSE rt2.c0 END))) ASC  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE ((((rt2.c0)) BETWEEN ((json_array(rt0.c1, rt0.c2, rt2.c0, 0Xffffffffc8447722))) AND ((((((rt2.c1)AND(rt2.c1)))AND(rt0.c3)))))) ORDER BY (((0.39828942246702215, rt2.c1, ((rt0.c1)-(rt0.c3))))=((((rt2.c0)GLOB('+g|UTp')), ((rt2.c2) IS TRUE), CASE WHEN rt2.c1 THEN rt2.c2 ELSE rt2.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt2.c0)) BETWEEN ((json_array(rt0.c1, rt0.c2, rt2.c0, 0xffffffffc8447722))) AND ((((((rt2.c1)AND(rt2.c1)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt2, rt0 ORDER BY (((0.39828942246702215, rt2.c1, ((rt0.c1)-(rt0.c3))))==((((rt2.c0)GLOB('+g|UTp')), ((rt2.c2) IS TRUE), CASE WHEN rt2.c1 THEN rt2.c2 ELSE rt2.c0 END))) ASC  NULLS FIRST);
SELECT * FROM rt2, rt0 WHERE ((((rt2.c0)) BETWEEN ((json_array(rt0.c1, rt0.c2, rt2.c0, 0Xffffffffc8447722))) AND ((((((rt2.c1)AND(rt2.c1)))AND(rt0.c3)))))) ORDER BY (((0.39828942246702215, rt2.c1, ((rt0.c1)-(rt0.c3))))=((((rt2.c0)GLOB('+g|UTp')), ((rt2.c2) IS TRUE), CASE WHEN rt2.c1 THEN rt2.c2 ELSE rt2.c0 END))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON ((rt2.c0 IN (rt2.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7468099431933742)))) WHERE (CASE WHEN ((rt1.c4) IS TRUE) THEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE CASE WHEN rt2.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c4) IS TRUE) THEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE CASE WHEN rt2.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM rt1, rt2 INNER JOIN rt0 ON ((rt2.c0 IN (rt2.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7468099431933742)))));
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON ((rt2.c0 IN (rt2.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7468099431933742)))) WHERE (CASE WHEN ((rt1.c4) IS TRUE) THEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE CASE WHEN rt2.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c4) IS TRUE) THEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE CASE WHEN rt2.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM rt1, rt2 INNER JOIN rt0 ON ((rt2.c0 IN (rt2.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7468099431933742)))));
SELECT ALL * FROM rt1, rt2 INNER JOIN rt0 ON ((rt2.c0 IN (rt2.c0)) IN (((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.7468099431933742)))) WHERE (CASE WHEN ((rt1.c4) IS TRUE) THEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE CASE WHEN rt2.c1 THEN rt0.c2 END END);
SELECT ALL COUNT(*) FROM rt1, vt38, rt0 WHERE (((((vt38.c0) BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE)) ORDER BY vt38.c0;
SELECT SUM(count) FROM (SELECT ((((((vt38.c0) BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, vt38, rt0 ORDER BY vt38.c0);
SELECT ALL COUNT(*) FROM rt1, vt38, rt0 WHERE (((((vt38.c0) BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE)) ORDER BY vt38.c0;
SELECT SUM(count) FROM (SELECT ((((((vt38.c0) BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, vt38, rt0 ORDER BY vt38.c0);
SELECT ALL COUNT(*) FROM rt1, vt38, rt0 WHERE (((((vt38.c0) BETWEEN (rt1.c3) AND (rt1.c2))) IS TRUE)) ORDER BY vt38.c0;
SELECT * FROM vt38 FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((rt1.c4)-(rt1.c0)))) AND (((- (rt0.c3))))) LEFT OUTER JOIN rt1 ON CAST((+ (rt1.c0)) AS REAL) FULL OUTER JOIN rt2 ON ((((rt2.c1)<>(rt0.c0)))*(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c4)))) WHERE (((((((((((((rt2.c0)AND(CAST(rt0.c2 AS INTEGER))))AND((NOT (rt2.c0)))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((NOT (rt1.c2)))))AND((~ (rt0.c0)))))AND(rt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt2.c0)AND(CAST(rt0.c2 AS INTEGER))))AND((NOT (rt2.c0)))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((NOT (rt1.c2)))))AND((~ (rt0.c0)))))AND(rt2.c0))) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((rt1.c4)-(rt1.c0)))) AND (((- (rt0.c3))))) LEFT OUTER JOIN rt1 ON CAST((+ (rt1.c0)) AS REAL) FULL OUTER JOIN rt2 ON ((((rt2.c1)<>(rt0.c0)))*(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c4)))));
SELECT * FROM vt38 FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((rt1.c4)-(rt1.c0)))) AND (((- (rt0.c3))))) LEFT OUTER JOIN rt1 ON CAST((+ (rt1.c0)) AS REAL) FULL OUTER JOIN rt2 ON ((((rt2.c1)<>(rt0.c0)))*(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c4)))) WHERE (((((((((((((rt2.c0)AND(CAST(rt0.c2 AS INTEGER))))AND((NOT (rt2.c0)))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((NOT (rt1.c2)))))AND((~ (rt0.c0)))))AND(rt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt2.c0)AND(CAST(rt0.c2 AS INTEGER))))AND((NOT (rt2.c0)))))OR(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((NOT (rt1.c2)))))AND((~ (rt0.c0)))))AND(rt2.c0))) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((rt1.c4)-(rt1.c0)))) AND (((- (rt0.c3))))) LEFT OUTER JOIN rt1 ON CAST((+ (rt1.c0)) AS REAL) FULL OUTER JOIN rt2 ON ((((rt2.c1)<>(rt0.c0)))*(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c4)))));
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((rt2.c0)) NOT BETWEEN (((~ (rt1.c1)))) AND ((((((((((rt1.c2)OR(rt2.c2)))OR(rt2.c1)))AND(rt1.c1)))AND(rt1.c4)))))) ORDER BY CAST((((rt2.c1, rt1.c3, rt1.c0)) BETWEEN ((rt2.c0, rt2.c0, rt1.c1)) AND ((rt2.c0, rt1.c4, rt1.c4))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt2.c0)) NOT BETWEEN (((~ (rt1.c1)))) AND ((((((((((rt1.c2)OR(rt2.c2)))OR(rt2.c1)))AND(rt1.c1)))AND(rt1.c4)))))) IS TRUE)  as count FROM rt1, rt2 ORDER BY CAST((((rt2.c1, rt1.c3, rt1.c0)) BETWEEN ((rt2.c0, rt2.c0, rt1.c1)) AND ((rt2.c0, rt1.c4, rt1.c4))) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((rt2.c0)) NOT BETWEEN (((~ (rt1.c1)))) AND ((((((((((rt1.c2)OR(rt2.c2)))OR(rt2.c1)))AND(rt1.c1)))AND(rt1.c4)))))) ORDER BY CAST((((rt2.c1, rt1.c3, rt1.c0)) BETWEEN ((rt2.c0, rt2.c0, rt1.c1)) AND ((rt2.c0, rt1.c4, rt1.c4))) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt2.c0)) NOT BETWEEN (((~ (rt1.c1)))) AND ((((((((((rt1.c2)OR(rt2.c2)))OR(rt2.c1)))AND(rt1.c1)))AND(rt1.c4)))))) IS TRUE)  as count FROM rt1, rt2 ORDER BY CAST((((rt2.c1, rt1.c3, rt1.c0)) BETWEEN ((rt2.c0, rt2.c0, rt1.c1)) AND ((rt2.c0, rt1.c4, rt1.c4))) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt2 WHERE ((((rt2.c0)) NOT BETWEEN (((~ (rt1.c1)))) AND ((((((((((rt1.c2)OR(rt2.c2)))OR(rt2.c1)))AND(rt1.c1)))AND(rt1.c4)))))) ORDER BY CAST((((rt2.c1, rt1.c3, rt1.c0)) BETWEEN ((rt2.c0, rt2.c0, rt1.c1)) AND ((rt2.c0, rt1.c4, rt1.c4))) AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (CAST(rt2.c0 AS NUMERIC) COLLATE BINARY) ORDER BY DATE((rt2.c0 IN (0.1602255869785476)), load_extension(rt1.c1), HEX(rt1.c2), rt1.c0, ((0x1c3fda3d)|(rt2.c0)))  NULLS LAST, CAST(((rt0.c3)>(rt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt2.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY DATE((rt2.c0 IN (0.1602255869785476)), load_extension(rt1.c1), HEX(rt1.c2), rt1.c0, ((0X1c3fda3d)|(rt2.c0)))  NULLS LAST, CAST(((rt0.c3)>(rt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (CAST(rt2.c0 AS NUMERIC) COLLATE BINARY) ORDER BY DATE((rt2.c0 IN (0.1602255869785476)), load_extension(rt1.c1), HEX(rt1.c2), rt1.c0, ((0x1c3fda3d)|(rt2.c0)))  NULLS LAST, CAST(((rt0.c3)>(rt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt2.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt2, rt1, rt0 ORDER BY DATE((rt2.c0 IN (0.1602255869785476)), load_extension(rt1.c1), HEX(rt1.c2), rt1.c0, ((0X1c3fda3d)|(rt2.c0)))  NULLS LAST, CAST(((rt0.c3)>(rt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt2, rt1, rt0 WHERE (CAST(rt2.c0 AS NUMERIC) COLLATE BINARY) ORDER BY DATE((rt2.c0 IN (0.1602255869785476)), load_extension(rt1.c1), HEX(rt1.c2), rt1.c0, ((0x1c3fda3d)|(rt2.c0)))  NULLS LAST, CAST(((rt0.c3)>(rt0.c0)) AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM rt2 WHERE (LIKELIHOOD(((rt2.c0) IS TRUE), 0.09824636086688454));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt2.c0) IS TRUE), 0.09824636086688454)) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (LIKELIHOOD(((rt2.c0) IS TRUE), 0.09824636086688454));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt2.c0) IS TRUE), 0.09824636086688454)) IS TRUE)  as count FROM rt2);
SELECT COUNT(*) FROM rt2 WHERE (LIKELIHOOD(((rt2.c0) IS TRUE), 0.09824636086688454));
SELECT ALL * FROM rt1, vt38 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt2.c2)))OR(rt2.c0)))OR(vt38.c0)))AND(rt0.c2)))|(((((rt2.c2)AND(vt38.c0)))AND(rt2.c0)))) LEFT OUTER JOIN rt2 ON CAST(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS BLOB) WHERE ((('-319561378')<<(((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('-319561378')<<(((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt38 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt2.c2)))OR(rt2.c0)))OR(vt38.c0)))AND(rt0.c2)))|(((((rt2.c2)AND(vt38.c0)))AND(rt2.c0)))) LEFT OUTER JOIN rt2 ON CAST(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS BLOB));
SELECT ALL * FROM rt1, vt38 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt2.c2)))OR(rt2.c0)))OR(vt38.c0)))AND(rt0.c2)))|(((((rt2.c2)AND(vt38.c0)))AND(rt2.c0)))) LEFT OUTER JOIN rt2 ON CAST(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS BLOB) WHERE ((('-319561378')<<(((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('-319561378')<<(((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt38 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt2.c2)))OR(rt2.c0)))OR(vt38.c0)))AND(rt0.c2)))|(((((rt2.c2)AND(vt38.c0)))AND(rt2.c0)))) LEFT OUTER JOIN rt2 ON CAST(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS BLOB));
SELECT ALL * FROM rt1, vt38 CROSS JOIN rt0 ON ((((((((((rt0.c0)AND(rt2.c2)))OR(rt2.c0)))OR(vt38.c0)))AND(rt0.c2)))|(((((rt2.c2)AND(vt38.c0)))AND(rt2.c0)))) LEFT OUTER JOIN rt2 ON CAST(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS BLOB) WHERE ((('-319561378')<<(((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2)))));
SELECT * FROM vt38, rt2, rt1 WHERE (((UNLIKELY(DISTINCT rt1.c4))>((((vt38.c0)) BETWEEN ((rt1.c0)) AND ((''))))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt1.c4))>((((vt38.c0)) BETWEEN ((rt1.c0)) AND (('')))))) IS TRUE)  as count FROM vt38, rt2, rt1);
SELECT * FROM vt38, rt2, rt1 WHERE (((UNLIKELY(DISTINCT rt1.c4))>((((vt38.c0)) BETWEEN ((rt1.c0)) AND ((''))))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt1.c4))>((((vt38.c0)) BETWEEN ((rt1.c0)) AND (('')))))) IS TRUE)  as count FROM vt38, rt2, rt1);
SELECT * FROM vt38, rt2, rt1 WHERE (((UNLIKELY(DISTINCT rt1.c4))>((((vt38.c0)) BETWEEN ((rt1.c0)) AND ((''))))));
SELECT ALL COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE (CASE ((vt38.c0)LIKE(rt0.c2))  WHEN CAST(rt1.c0 AS BLOB) THEN CAST(rt1.c0 AS BLOB) ELSE ((rt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt38.c0)LIKE(rt0.c2))  WHEN CAST(rt1.c0 AS BLOB) THEN CAST(rt1.c0 AS BLOB) ELSE ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt38, rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE (CASE ((vt38.c0)LIKE(rt0.c2))  WHEN CAST(rt1.c0 AS BLOB) THEN CAST(rt1.c0 AS BLOB) ELSE ((rt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt38.c0)LIKE(rt0.c2))  WHEN CAST(rt1.c0 AS BLOB) THEN CAST(rt1.c0 AS BLOB) ELSE ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt38, rt0, rt1, rt2);
SELECT ALL COUNT(*) FROM vt38, rt0, rt1, rt2 WHERE (CASE ((vt38.c0)LIKE(rt0.c2))  WHEN CAST(rt1.c0 AS BLOB) THEN CAST(rt1.c0 AS BLOB) ELSE ((rt1.c0) NOTNULL) END);
SELECT * FROM rt2, rt1, vt38, rt0 WHERE ((((rt0.c0 IN ()))IS((rt2.c1 IN ())))) ORDER BY (((('2034165721')OR(CAST(rt1.c4 AS NUMERIC))))OR((NOT (rt2.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS((rt2.c1 IN ())))) IS TRUE)  as count FROM rt2, rt1, vt38, rt0 ORDER BY (((('2034165721')OR(CAST(rt1.c4 AS NUMERIC))))OR((NOT (rt2.c0)))));
SELECT * FROM rt2, rt1, vt38, rt0 WHERE ((((rt0.c0 IN ()))IS((rt2.c1 IN ())))) ORDER BY (((('2034165721')OR(CAST(rt1.c4 AS NUMERIC))))OR((NOT (rt2.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))IS((rt2.c1 IN ())))) IS TRUE)  as count FROM rt2, rt1, vt38, rt0 ORDER BY (((('2034165721')OR(CAST(rt1.c4 AS NUMERIC))))OR((NOT (rt2.c0)))));
SELECT * FROM rt2, rt1, vt38, rt0 WHERE ((((rt0.c0 IN ()))IS((rt2.c1 IN ())))) ORDER BY (((('2034165721')OR(CAST(rt1.c4 AS NUMERIC))))OR((NOT (rt2.c0))));
SELECT * FROM rt1 WHERE (((rt1.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3 IN ()) IN ()));
SELECT * FROM vt38, rt0 WHERE ('2131187739');
SELECT SUM(count) FROM (SELECT ALL (('2131187739') IS TRUE)  as count FROM vt38, rt0);
SELECT * FROM vt38, rt0 WHERE ('2131187739');
SELECT SUM(count) FROM (SELECT ALL (('2131187739') IS TRUE)  as count FROM vt38, rt0);
SELECT * FROM vt38, rt0 WHERE ('2131187739');
SELECT ALL * FROM rt0 CROSS JOIN vt38 ON (rt2.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt2 ON NULL COLLATE BINARY WHERE (CAST(vt38.c0 AS REAL)) ORDER BY ((CASE WHEN rt0.c0 THEN vt38.c0 WHEN '747953311' THEN rt0.c0 WHEN -295273723 THEN rt2.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(vt38.c0 AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt38 ON (rt2.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt2 ON NULL COLLATE BINARY ORDER BY ((CASE WHEN rt0.c0 THEN vt38.c0 WHEN '747953311' THEN rt0.c0 WHEN -295273723 THEN rt2.c1 END) IS FALSE));
SELECT ALL * FROM rt0 CROSS JOIN vt38 ON (rt2.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt2 ON NULL COLLATE BINARY WHERE (CAST(vt38.c0 AS REAL)) ORDER BY ((CASE WHEN rt0.c0 THEN vt38.c0 WHEN '747953311' THEN rt0.c0 WHEN -295273723 THEN rt2.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(vt38.c0 AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt38 ON (rt2.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt2 ON NULL COLLATE BINARY ORDER BY ((CASE WHEN rt0.c0 THEN vt38.c0 WHEN '747953311' THEN rt0.c0 WHEN -295273723 THEN rt2.c1 END) IS FALSE));
SELECT ALL * FROM rt0 CROSS JOIN vt38 ON (rt2.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt2 ON NULL COLLATE BINARY WHERE (CAST(vt38.c0 AS REAL)) ORDER BY ((CASE WHEN rt0.c0 THEN vt38.c0 WHEN '747953311' THEN rt0.c0 WHEN -295273723 THEN rt2.c1 END) IS FALSE);
SELECT ALL * FROM rt1, rt0, rt2 WHERE (((CASE rt2.c2  WHEN rt1.c3 THEN '1415559045' ELSE rt0.c2 END)==(((NULL)>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt1.c3 THEN '1415559045' ELSE rt0.c2 END)=(((NULL)>(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT ALL * FROM rt1, rt0, rt2 WHERE (((CASE rt2.c2  WHEN rt1.c3 THEN '1415559045' ELSE rt0.c2 END)==(((NULL)>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt2.c2  WHEN rt1.c3 THEN '1415559045' ELSE rt0.c2 END)=(((NULL)>(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, rt2);
SELECT ALL * FROM rt1, rt0, rt2 WHERE (((CASE rt2.c2  WHEN rt1.c3 THEN '1415559045' ELSE rt0.c2 END)==(((NULL)>(rt1.c0)))));
SELECT COUNT(*) FROM rt0, rt1, vt38 WHERE (HEX(DISTINCT LIKELIHOOD(DISTINCT rt0.c1, 0.5649299373068429)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT LIKELIHOOD(DISTINCT rt0.c1, 0.5649299373068429))) IS TRUE)  as count FROM rt0, rt1, vt38);
SELECT COUNT(*) FROM rt0, rt1, vt38 WHERE (HEX(DISTINCT LIKELIHOOD(DISTINCT rt0.c1, 0.5649299373068429)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT LIKELIHOOD(DISTINCT rt0.c1, 0.5649299373068429))) IS TRUE)  as count FROM rt0, rt1, vt38);
SELECT COUNT(*) FROM rt0, rt1, vt38 WHERE (HEX(DISTINCT LIKELIHOOD(DISTINCT rt0.c1, 0.5649299373068429)));
SELECT COUNT(*) FROM vt38 WHERE ((((vt38.c0 IN (vt38.c0, vt38.c0))) NOT BETWEEN (((vt38.c0)-(vt38.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((((vt38.c0 IN (vt38.c0, vt38.c0))) NOT BETWEEN (((vt38.c0)-(vt38.c0))) AND (x''))) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE ((((vt38.c0 IN (vt38.c0, vt38.c0))) NOT BETWEEN (((vt38.c0)-(vt38.c0))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((((vt38.c0 IN (vt38.c0, vt38.c0))) NOT BETWEEN (((vt38.c0)-(vt38.c0))) AND (x''))) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE ((((vt38.c0 IN (vt38.c0, vt38.c0))) NOT BETWEEN (((vt38.c0)-(vt38.c0))) AND (x'')));
SELECT * FROM vt38 WHERE ('620026551');
SELECT SUM(count) FROM (SELECT (('620026551') IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE ('620026551');
SELECT SUM(count) FROM (SELECT (('620026551') IS TRUE)  as count FROM vt38);
SELECT * FROM vt38 WHERE ('620026551');
SELECT * FROM rt0, rt1 WHERE ((((rt1.c2, 0.3949726549120496, rt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS INTEGER), (+ (rt1.c1)), ((rt0.c3)|(rt0.c3)))) AND ((((rt1.c4) IS FALSE), CAST(rt1.c4 AS REAL), INSTR(rt1.c4, rt1.c2))))) ORDER BY INSTR(((rt0.c2)/(rt1.c4)), (((rt0.c1))<=((rt1.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, 0.3949726549120496, rt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS INTEGER), (+ (rt1.c1)), ((rt0.c3)|(rt0.c3)))) AND ((((rt1.c4) IS FALSE), CAST(rt1.c4 AS REAL), INSTR(rt1.c4, rt1.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY INSTR(((rt0.c2)/(rt1.c4)), (((rt0.c1))<=((rt1.c4)))) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c2, 0.3949726549120496, rt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS INTEGER), (+ (rt1.c1)), ((rt0.c3)|(rt0.c3)))) AND ((((rt1.c4) IS FALSE), CAST(rt1.c4 AS REAL), INSTR(rt1.c4, rt1.c2))))) ORDER BY INSTR(((rt0.c2)/(rt1.c4)), (((rt0.c1))<=((rt1.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, 0.3949726549120496, rt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS INTEGER), (+ (rt1.c1)), ((rt0.c3)|(rt0.c3)))) AND ((((rt1.c4) IS FALSE), CAST(rt1.c4 AS REAL), INSTR(rt1.c4, rt1.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY INSTR(((rt0.c2)/(rt1.c4)), (((rt0.c1))<=((rt1.c4)))) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c2, 0.3949726549120496, rt0.c0)) NOT BETWEEN ((CAST(rt1.c2 AS INTEGER), (+ (rt1.c1)), ((rt0.c3)|(rt0.c3)))) AND ((((rt1.c4) IS FALSE), CAST(rt1.c4 AS REAL), INSTR(rt1.c4, rt1.c2))))) ORDER BY INSTR(((rt0.c2)/(rt1.c4)), (((rt0.c1))<=((rt1.c4)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt38, rt0, rt2, rt1 WHERE (MIN(rt1.c4 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt2.c0 WHEN rt2.c1 THEN rt1.c4 END)) ORDER BY 0X6d0a0cd6  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt2.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c2 END AS INTEGER) ASC  NULLS FIRST, CAST(CAST(vt38.c0 AS INTEGER) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt1.c4 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt2.c0 WHEN rt2.c1 THEN rt1.c4 END)) IS TRUE)  as count FROM vt38, rt0, rt2, rt1 ORDER BY 0X6d0a0cd6  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt2.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c2 END AS INTEGER) ASC  NULLS FIRST, CAST(CAST(vt38.c0 AS INTEGER) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt38, rt0, rt2, rt1 WHERE (MIN(rt1.c4 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt2.c0 WHEN rt2.c1 THEN rt1.c4 END)) ORDER BY 0X6d0a0cd6  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt2.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c2 END AS INTEGER) ASC  NULLS FIRST, CAST(CAST(vt38.c0 AS INTEGER) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(rt1.c4 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt2.c0 WHEN rt2.c1 THEN rt1.c4 END)) IS TRUE)  as count FROM vt38, rt0, rt2, rt1 ORDER BY 0X6d0a0cd6  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt2.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c2 END AS INTEGER) ASC  NULLS FIRST, CAST(CAST(vt38.c0 AS INTEGER) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt38, rt1 WHERE (CASE WHEN ((rt1.c0) NOTNULL) THEN NULL WHEN 0.037133510676889525 COLLATE BINARY THEN CASE WHEN rt1.c0 THEN rt1.c4 ELSE vt38.c0 END WHEN x'119e' THEN IFNULL(DISTINCT rt1.c4, rt1.c4) ELSE (((rt1.c1))<=((vt38.c0))) END) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) NOTNULL) THEN NULL WHEN 0.037133510676889525 COLLATE BINARY THEN CASE WHEN rt1.c0 THEN rt1.c4 ELSE vt38.c0 END WHEN x'119e' THEN IFNULL(DISTINCT rt1.c4, rt1.c4) ELSE (((rt1.c1))<=((vt38.c0))) END) IS TRUE)  as count FROM vt38, rt1 ORDER BY rt1.c0);
SELECT ALL COUNT(*) FROM vt38, rt1 WHERE (CASE WHEN ((rt1.c0) NOTNULL) THEN NULL WHEN 0.037133510676889525 COLLATE BINARY THEN CASE WHEN rt1.c0 THEN rt1.c4 ELSE vt38.c0 END WHEN x'119e' THEN IFNULL(DISTINCT rt1.c4, rt1.c4) ELSE (((rt1.c1))<=((vt38.c0))) END) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0) NOTNULL) THEN NULL WHEN 0.037133510676889525 COLLATE BINARY THEN CASE WHEN rt1.c0 THEN rt1.c4 ELSE vt38.c0 END WHEN x'119e' THEN IFNULL(DISTINCT rt1.c4, rt1.c4) ELSE (((rt1.c1))<=((vt38.c0))) END) IS TRUE)  as count FROM vt38, rt1 ORDER BY rt1.c0);
SELECT ALL COUNT(*) FROM vt38, rt1 WHERE (CASE WHEN ((rt1.c0) NOTNULL) THEN NULL WHEN 0.037133510676889525 COLLATE BINARY THEN CASE WHEN rt1.c0 THEN rt1.c4 ELSE vt38.c0 END WHEN x'119e' THEN IFNULL(DISTINCT rt1.c4, rt1.c4) ELSE (((rt1.c1))<=((vt38.c0))) END) ORDER BY rt1.c0;
SELECT ALL * FROM rt1, vt38, rt0 WHERE (((((+ (rt0.c0)), CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 END, CASE WHEN rt0.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN vt38.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))>=((CAST(vt38.c0 AS BLOB), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.4806312280298811))), (- (rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c0)), CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 END, CASE WHEN rt0.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN vt38.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))>=((CAST(vt38.c0 AS BLOB), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.4806312280298811))), (- (rt1.c3)))))) IS TRUE)  as count FROM rt1, vt38, rt0);
SELECT ALL * FROM rt1, vt38, rt0 WHERE (((((+ (rt0.c0)), CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 END, CASE WHEN rt0.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN vt38.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))>=((CAST(vt38.c0 AS BLOB), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.4806312280298811))), (- (rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt0.c0)), CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 END, CASE WHEN rt0.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN vt38.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))>=((CAST(vt38.c0 AS BLOB), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.4806312280298811))), (- (rt1.c3)))))) IS TRUE)  as count FROM rt1, vt38, rt0);
SELECT ALL * FROM rt1, vt38, rt0 WHERE (((((+ (rt0.c0)), CASE rt1.c4  WHEN rt1.c4 THEN rt0.c3 END, CASE WHEN rt0.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN vt38.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))>=((CAST(vt38.c0 AS BLOB), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((0.4806312280298811))), (- (rt1.c3))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)AND('1839228727')))OR(rt0.c1)), (((rt0.c3, '\n-3.u*r', rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1, x'', rt0.c1))), x''))<((UPPER(DISTINCT rt0.c0), rt0.c1 COLLATE BINARY, NULL))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)AND('1839228727')))OR(rt0.c1)), (((rt0.c3, '\n-3.u*r', rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1, x'', rt0.c1))), x''))<((UPPER(DISTINCT rt0.c0), rt0.c1 COLLATE BINARY, NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)AND('1839228727')))OR(rt0.c1)), (((rt0.c3, '\n-3.u*r', rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1, x'', rt0.c1))), x''))<((UPPER(DISTINCT rt0.c0), rt0.c1 COLLATE BINARY, NULL))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)AND('1839228727')))OR(rt0.c1)), (((rt0.c3, '\n-3.u*r', rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1, x'', rt0.c1))), x''))<((UPPER(DISTINCT rt0.c0), rt0.c1 COLLATE BINARY, NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)AND('1839228727')))OR(rt0.c1)), (((rt0.c3, '\n-3.u*r', rt0.c3, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1, x'', rt0.c1))), x''))<((UPPER(DISTINCT rt0.c0), rt0.c1 COLLATE BINARY, NULL))));
SELECT ALL COUNT(*) FROM rt1, vt38, rt0 WHERE ('D');
SELECT SUM(count) FROM (SELECT (('D') IS TRUE)  as count FROM rt1, vt38, rt0);
SELECT ALL COUNT(*) FROM rt1, vt38, rt0 WHERE ('D');
SELECT SUM(count) FROM (SELECT (('D') IS TRUE)  as count FROM rt1, vt38, rt0);
SELECT ALL COUNT(*) FROM rt1, vt38, rt0 WHERE ('D');
SELECT COUNT(*) FROM vt38, rt1 WHERE (vt38.c0) ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((rt1.c0)<(rt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((vt38.c0) IS TRUE)  as count FROM vt38, rt1 ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((rt1.c0)<(rt1.c2))) IS FALSE));
SELECT COUNT(*) FROM vt38, rt1 WHERE (vt38.c0) ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((rt1.c0)<(rt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((vt38.c0) IS TRUE)  as count FROM vt38, rt1 ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((rt1.c0)<(rt1.c2))) IS FALSE));
SELECT COUNT(*) FROM vt38, rt1 WHERE (vt38.c0) ORDER BY ((x'') IS FALSE)  NULLS FIRST, ((((rt1.c0)<(rt1.c2))) IS FALSE);
SELECT ALL * FROM rt0, vt38 WHERE (((((vt38.c0)!=(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)<>(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL * FROM rt0, vt38 WHERE (((((vt38.c0)!=(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt38.c0)<>(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, vt38);
SELECT ALL * FROM rt0, vt38 WHERE (((((vt38.c0)!=(rt0.c3))) ISNULL));
SELECT * FROM rt1, vt38, rt0 WHERE (0xffffffff80c70f1d) ORDER BY (- ((rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((0Xffffffff80c70f1d) IS TRUE)  as count FROM rt1, vt38, rt0 ORDER BY (- ((rt1.c2 IN ()))));
SELECT * FROM rt1, vt38, rt0 WHERE (0xffffffff80c70f1d) ORDER BY (- ((rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((0Xffffffff80c70f1d) IS TRUE)  as count FROM rt1, vt38, rt0 ORDER BY (- ((rt1.c2 IN ()))));
SELECT * FROM rt1, vt38, rt0 WHERE (0xffffffff80c70f1d) ORDER BY (- ((rt1.c2 IN ())));
SELECT COUNT(*) FROM vt38 WHERE ((NOT (CASE WHEN vt38.c0 THEN vt38.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt38.c0 THEN vt38.c0 END))) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE ((NOT (CASE WHEN vt38.c0 THEN vt38.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt38.c0 THEN vt38.c0 END))) IS TRUE)  as count FROM vt38);
SELECT COUNT(*) FROM vt38 WHERE ((NOT (CASE WHEN vt38.c0 THEN vt38.c0 END)));
SELECT * FROM rt1, rt2 WHERE (CAST(CASE WHEN rt1.c4 THEN '-601808702' END AS NUMERIC)) ORDER BY json_quote(((((rt2.c1)AND(rt1.c2)))AND(rt2.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c4 THEN '-601808702' END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt2 ORDER BY json_quote(((((rt2.c1)AND(rt1.c2)))AND(rt2.c2))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt2 WHERE (CAST(CASE WHEN rt1.c4 THEN '-601808702' END AS NUMERIC)) ORDER BY json_quote(((((rt2.c1)AND(rt1.c2)))AND(rt2.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c4 THEN '-601808702' END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt2 ORDER BY json_quote(((((rt2.c1)AND(rt1.c2)))AND(rt2.c2))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt2 WHERE (CAST(CASE WHEN rt1.c4 THEN '-601808702' END AS NUMERIC)) ORDER BY json_quote(((((rt2.c1)AND(rt1.c2)))AND(rt2.c2))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt1 ON json_type((((rt1.c4)) BETWEEN ((vt38.c0)) AND ((rt1.c4)))) WHERE (CAST(vt38.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt38.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt1 ON json_type((((rt1.c4)) BETWEEN ((vt38.c0)) AND ((rt1.c4)))));
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt1 ON json_type((((rt1.c4)) BETWEEN ((vt38.c0)) AND ((rt1.c4)))) WHERE (CAST(vt38.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt38.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt38 FULL OUTER JOIN rt1 ON json_type((((rt1.c4)) BETWEEN ((vt38.c0)) AND ((rt1.c4)))));
SELECT ALL COUNT(*) FROM vt38 FULL OUTER JOIN rt1 ON json_type((((rt1.c4)) BETWEEN ((vt38.c0)) AND ((rt1.c4)))) WHERE (CAST(vt38.c0 AS REAL) COLLATE NOCASE);
