-- Time: 2024/06/10 14:24:51
-- Database: database30
-- Database version: 3.40.0
-- seed value: 519391230
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c0, c1, c3) VALUES (0.5461101503924498, x'9306', x'a7af', '333632360'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'4663389b', c4='333632360' WHERE rt0.c4; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
INSERT OR FAIL INTO rt0(c2, c1) VALUES ('0.5461101503924498', 0.47258312708468164), (0.17463245326506038, 0.7903627281327753), (NULL, '-311332236'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (x'', x'5884', 1313012801, NULL, x''); -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(0.9451285317654919); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 619031185); -- 4ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 0ms;
ANALYZE vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (''), (''), ('1422372192'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1489902466,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53030'); -- 1ms;
REINDEX  vt0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), ('-1489902466'), (x''); -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (NULL), (0.006108677498411597), ('588304098'), ('1015761539'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(NULL); -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c3, c1)=(0Xfffffffff1e31305, x'33647887'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (NULL), (0.32018825598749556), (x''); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), (NULL), (x'a005'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (NULL, x'', 'u]ጅUi'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x'ac27'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('F\ro.^'); -- 1ms;
REINDEX BINARY; -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1015761539,11');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
DELETE FROM vt0; -- 0ms;
UPDATE rt0 SET c3='	+Pi', c4=x'cd32', c4='1645232544' WHERE CASE TOTAL_CHANGES()  WHEN ((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c2) IS TRUE) END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 266399095); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4, c5, c6); -- 0ms;
UPDATE rt1 SET c4=NULL, c1=NULL WHERE '588304098'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c6, c4, c3, c5) VALUES (547745241, -2.36776699E8, 0.7695874856753426, x'', 0.42147731422556434); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (']0\\nH)', 0.2683540693762907); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '48585'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
ANALYZE temp; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c5) VALUES (NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT ((LOWER(DISTINCT vt0.c0)) NOTNULL) FROM rt1, vt0, rt0 GROUP BY ((((+ (rt1.c2)), SUBSTR(rt0.c3, rt1.c3), ((rt1.c5) NOT NULL)))<((rt0.c4, CAST(rt1.c1 AS REAL), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4))))), ((((CAST(rt0.c2 AS BLOB))AND(CASE rt0.c2  WHEN rt1.c4 THEN rt1.c6 ELSE rt1.c2 END)))OR(((rt0.c2) NOT BETWEEN (rt1.c5) AND (rt0.c0)))), ((NULL) NOT BETWEEN (json_remove(rt0.c2, rt1.c1)) AND ((((rt0.c1))<=(('-1848786079'))))) HAVING (((((((rt1.c3))<>(('K.'))))AND((~ (vt0.c0)))))OR(((rt0.c0)<<(rt0.c1)))) LIMIT -1489902466 OFFSET 1645232544; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1, c4, c3, c2) VALUES (0.3499447248695964, -869121403, x'', x'8499', x'9295'), (-852771480, NULL, NULL, -276243358, '588304098'), ('333632360', NULL, 0.587950221592532, '-+', NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c0, c3, c1) VALUES (0.10722970123878983, NULL, NULL, '썡p%Gw'), (x'', 0.5411429003726179, 0xffffffffa5437c8d, '1645232544'), (x'9e03', NULL, 'CD', ''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE main; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt1; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE CAST(((rt0.c3) IS FALSE) AS REAL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=('{n5}', x'bc4c', x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c0) VALUES ('-2093099485', x''); -- 0ms;
INSERT OR ABORT INTO rt1(c2, c6, c0, c4, c5, c3) VALUES (0.27929272377397163, x'7267', NULL, NULL, NULL, '1185083760'); -- 0ms;
INSERT OR ABORT INTO rt1(c0, c2, c6, c5, c3, c4) VALUES (x'', NULL, '', NULL, -3.11332236E8, 0X4af30348); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c5)))<=(0.8461811092801028)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c5)))<=(0.8461811092801028))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c5)))<=(0.8461811092801028)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c5)))<=(0.8461811092801028))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c5)))<=(0.8461811092801028)));
SELECT ALL * FROM vt0 WHERE ((('vPcGvl')-(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((('vPcGvl')-(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((('vPcGvl')-(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((('vPcGvl')-(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((('vPcGvl')-(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END;
SELECT * FROM rt1 WHERE ('-1489902466') ORDER BY x'5baa';
SELECT SUM(count) FROM (SELECT (('-1489902466') IS TRUE)  as count FROM rt1 ORDER BY x'5baa');
SELECT * FROM rt1 WHERE ('-1489902466') ORDER BY x'5baa';
SELECT SUM(count) FROM (SELECT (('-1489902466') IS TRUE)  as count FROM rt1 ORDER BY x'5baa');
SELECT * FROM rt1 WHERE ('-1489902466') ORDER BY x'5baa';
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (x'') AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (x'') AND (vt0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (x'') AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (x'') AND (vt0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0) BETWEEN (x'') AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c6 WHEN rt0.c2 THEN 0xffffffffef88dc62 WHEN '%䪃)mY' THEN rt1.c5 WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c0 END))) ORDER BY ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c3 END)<<(((((((((rt1.c1)OR(rt1.c6)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))) DESC  NULLS FIRST, (- (((rt1.c3) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c6 WHEN rt0.c2 THEN 0xffffffffef88dc62 WHEN '%䪃)mY' THEN rt1.c5 WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0 ORDER BY ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c3 END)<<(((((((((rt1.c1)OR(rt1.c6)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))) DESC  NULLS FIRST, (- (((rt1.c3) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c6 WHEN rt0.c2 THEN 0xffffffffef88dc62 WHEN '%䪃)mY' THEN rt1.c5 WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c0 END))) ORDER BY ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c3 END)<<(((((((((rt1.c1)OR(rt1.c6)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))) DESC  NULLS FIRST, (- (((rt1.c3) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c6 WHEN rt0.c2 THEN 0xffffffffef88dc62 WHEN '%䪃)mY' THEN rt1.c5 WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0 ORDER BY ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c3 END)<<(((((((((rt1.c1)OR(rt1.c6)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))) DESC  NULLS FIRST, (- (((rt1.c3) IS FALSE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((- (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c6 WHEN rt0.c2 THEN 0xffffffffef88dc62 WHEN '%䪃)mY' THEN rt1.c5 WHEN vt0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt0.c0 END))) ORDER BY ((CASE rt1.c0  WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c3 END)<<(((((((((rt1.c1)OR(rt1.c6)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))) DESC  NULLS FIRST, (- (((rt1.c3) IS FALSE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ('-1556015103') ORDER BY (NOT (((((rt1.c0)AND(rt0.c2)))AND(rt1.c6))));
SELECT SUM(count) FROM (SELECT (('-1556015103') IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (NOT (((((rt1.c0)AND(rt0.c2)))AND(rt1.c6)))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ('-1556015103') ORDER BY (NOT (((((rt1.c0)AND(rt0.c2)))AND(rt1.c6))));
SELECT SUM(count) FROM (SELECT (('-1556015103') IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (NOT (((((rt1.c0)AND(rt0.c2)))AND(rt1.c6)))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ('-1556015103') ORDER BY (NOT (((((rt1.c0)AND(rt0.c2)))AND(rt1.c6))));
SELECT * FROM rt1, rt0, vt0 WHERE (rt0.c2) ORDER BY (~ ((((rt0.c1))<>((rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (~ ((((rt0.c1))!=((rt1.c1))))) ASC  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE (rt0.c2) ORDER BY (~ ((((rt0.c1))<>((rt1.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (~ ((((rt0.c1))!=((rt1.c1))))) ASC  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE (rt0.c2) ORDER BY (~ ((((rt0.c1))<>((rt1.c1))))) ASC  NULLS LAST;
SELECT * FROM vt0, rt1 NOT INDEXED, rt0 WHERE (((STRFTIME(rt1.c4, rt1.c1, vt0.c0)) NOT BETWEEN (((rt1.c2)AND(0.8030292704148189))) AND (((rt1.c4)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(rt1.c4, rt1.c1, vt0.c0)) NOT BETWEEN (((rt1.c2)AND(0.8030292704148189))) AND (((rt1.c4)%(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1 NOT INDEXED, rt0 WHERE (((STRFTIME(rt1.c4, rt1.c1, vt0.c0)) NOT BETWEEN (((rt1.c2)AND(0.8030292704148189))) AND (((rt1.c4)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(rt1.c4, rt1.c1, vt0.c0)) NOT BETWEEN (((rt1.c2)AND(0.8030292704148189))) AND (((rt1.c4)%(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1 NOT INDEXED, rt0 WHERE (((STRFTIME(rt1.c4, rt1.c1, vt0.c0)) NOT BETWEEN (((rt1.c2)AND(0.8030292704148189))) AND (((rt1.c4)%(rt1.c2)))));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((rt1.c6)IS NOT(rt0.c2)) COLLATE RTRIM WHERE (1.015761539E9) ORDER BY (((rt1.c5) IS TRUE) IN ()), CASE WHEN rt1.c2 THEN vt0.c0 END COLLATE NOCASE ASC, ((((((((CAST(rt0.c1 AS BLOB))OR(json_insert(rt1.c2, rt0.c3, rt0.c1))))AND((((rt1.c0))=((rt0.c4))))))OR(x'648c')))OR(x''));
SELECT SUM(count) FROM (SELECT ALL ((1.015761539E9) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((rt1.c6)IS NOT(rt0.c2)) COLLATE RTRIM ORDER BY (((rt1.c5) IS TRUE) IN ()), CASE WHEN rt1.c2 THEN vt0.c0 END COLLATE NOCASE ASC, ((((((((CAST(rt0.c1 AS BLOB))OR(json_insert(rt1.c2, rt0.c3, rt0.c1))))AND((((rt1.c0))==((rt0.c4))))))OR(x'648c')))OR(x'')));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((rt1.c6)IS NOT(rt0.c2)) COLLATE RTRIM WHERE (1.015761539E9) ORDER BY (((rt1.c5) IS TRUE) IN ()), CASE WHEN rt1.c2 THEN vt0.c0 END COLLATE NOCASE ASC, ((((((((CAST(rt0.c1 AS BLOB))OR(json_insert(rt1.c2, rt0.c3, rt0.c1))))AND((((rt1.c0))=((rt0.c4))))))OR(x'648c')))OR(x''));
SELECT SUM(count) FROM (SELECT ALL ((1.015761539E9) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN rt1 ON ((rt1.c6)IS NOT(rt0.c2)) COLLATE RTRIM ORDER BY (((rt1.c5) IS TRUE) IN ()), CASE WHEN rt1.c2 THEN vt0.c0 END COLLATE NOCASE ASC, ((((((((CAST(rt0.c1 AS BLOB))OR(json_insert(rt1.c2, rt0.c3, rt0.c1))))AND((((rt1.c0))==((rt0.c4))))))OR(x'648c')))OR(x'')));
SELECT * FROM vt0, rt0 WHERE ((((NOT (NULL)))OR(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))OR(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((NOT (NULL)))OR(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))OR(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((NOT (NULL)))OR(rt0.c3 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((((((((rt1.c0 IN ()))OR(CAST(rt0.c4 AS BLOB))))OR(rt0.c3 COLLATE BINARY)))AND(0.587950221592532)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c0 IN ()))OR(CAST(rt0.c4 AS BLOB))))OR(rt0.c3 COLLATE BINARY)))AND(0.587950221592532)))OR((- (vt0.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((((((((rt1.c0 IN ()))OR(CAST(rt0.c4 AS BLOB))))OR(rt0.c3 COLLATE BINARY)))AND(0.587950221592532)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c0 IN ()))OR(CAST(rt0.c4 AS BLOB))))OR(rt0.c3 COLLATE BINARY)))AND(0.587950221592532)))OR((- (vt0.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((((((((rt1.c0 IN ()))OR(CAST(rt0.c4 AS BLOB))))OR(rt0.c3 COLLATE BINARY)))AND(0.587950221592532)))OR((- (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(1313012801)))OR(vt0.c0)))))AND((((vt0.c0))!=((vt0.c0)))))) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC, ((CAST(vt0.c0 AS INTEGER))<<(((vt0.c0) ISNULL))) ASC  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)>=(vt0.c0)))%(((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<<(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(1313012801)))OR(vt0.c0)))))AND((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC, ((CAST(vt0.c0 AS INTEGER))<<(((vt0.c0) ISNULL))) ASC  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)>=(vt0.c0)))%(((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(1313012801)))OR(vt0.c0)))))AND((((vt0.c0))!=((vt0.c0)))))) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC, ((CAST(vt0.c0 AS INTEGER))<<(((vt0.c0) ISNULL))) ASC  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)>=(vt0.c0)))%(((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<<(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(1313012801)))OR(vt0.c0)))))AND((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC, ((CAST(vt0.c0 AS INTEGER))<<(((vt0.c0) ISNULL))) ASC  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)>=(vt0.c0)))%(((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(1313012801)))OR(vt0.c0)))))AND((((vt0.c0))!=((vt0.c0)))))) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS INTEGER))) DESC, ((CAST(vt0.c0 AS INTEGER))<<(((vt0.c0) ISNULL))) ASC  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)>=(vt0.c0)))%(((vt0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((('' IN ())) NOT BETWEEN ((+ ('qM.#3'))) AND ((((rt1.c6))!=((x''))))) WHERE ((((+ (rt0.c2)))<>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))<>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON ((('' IN ())) NOT BETWEEN ((+ ('qM.#3'))) AND ((((rt1.c6))!=((x''))))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((('' IN ())) NOT BETWEEN ((+ ('qM.#3'))) AND ((((rt1.c6))!=((x''))))) WHERE ((((+ (rt0.c2)))<>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))<>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt1 NOT INDEXED LEFT OUTER JOIN rt0 ON ((('' IN ())) NOT BETWEEN ((+ ('qM.#3'))) AND ((((rt1.c6))!=((x''))))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON ((('' IN ())) NOT BETWEEN ((+ ('qM.#3'))) AND ((((rt1.c6))!=((x''))))) WHERE ((((+ (rt0.c2)))<>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((json_remove(vt0.c0, vt0.c0))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(vt0.c0, vt0.c0))OR(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((json_remove(vt0.c0, vt0.c0))OR(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(vt0.c0, vt0.c0))OR(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c2, rt1.c6, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c4))) AS INTEGER)) ORDER BY ((((rt1.c6)IS NOT(rt1.c0))) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))) AND (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c2, rt1.c6, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c4))) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c6)IS NOT(rt1.c0))) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))) AND (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c5))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c2, rt1.c6, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c4))) AS INTEGER)) ORDER BY ((((rt1.c6)IS NOT(rt1.c0))) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))) AND (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c5))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c2, rt1.c6, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c4))) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c6)IS NOT(rt1.c0))) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))) AND (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c5))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c2, rt1.c6, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c2, rt1.c2, rt1.c4))) AS INTEGER)) ORDER BY ((((rt1.c6)IS NOT(rt1.c0))) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4))) AND (((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c5))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c5) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c5) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c5) ISNULL)) IS FALSE));
SELECT * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c2);
SELECT * FROM rt1, rt0 WHERE (json_type(0.8657502580081785) COLLATE NOCASE) ORDER BY rt0.c4 DESC;
SELECT SUM(count) FROM (SELECT ((json_type(0.8657502580081785) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c4 DESC);
SELECT * FROM rt1, rt0 WHERE (json_type(0.8657502580081785) COLLATE NOCASE) ORDER BY rt0.c4 DESC;
SELECT SUM(count) FROM (SELECT ((json_type(0.8657502580081785) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt0.c4 DESC);
SELECT * FROM rt1, rt0 WHERE (json_type(0.8657502580081785) COLLATE NOCASE) ORDER BY rt0.c4 DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)=(rt0.c3)))%(rt0.c1))) ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)==(rt0.c3)))%(rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND((~ (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)=(rt0.c3)))%(rt0.c1))) ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)==(rt0.c3)))%(rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND((~ (rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)=(rt0.c3)))%(rt0.c1))) ORDER BY (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))AND((~ (rt0.c2)))) DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2)|(rt0.c3)) IN ()) CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN '?4' THEN rt1.c2 END)&(rt1.c0)) WHERE ((((x'', 'o', vt0.c0)) BETWEEN ((CAST(rt1.c6 AS TEXT), ((rt1.c4) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((rt0.c4, ((((((((rt0.c1)AND(rt0.c3)))AND(NULL)))OR(rt0.c1)))OR(vt0.c0)), (rt0.c4 IN ())))));
SELECT SUM(count) FROM (SELECT (((((x'', 'o', vt0.c0)) BETWEEN ((CAST(rt1.c6 AS TEXT), ((rt1.c4) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((rt0.c4, ((((((((rt0.c1)AND(rt0.c3)))AND(NULL)))OR(rt0.c1)))OR(vt0.c0)), (rt0.c4 IN ()))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2)|(rt0.c3)) IN ()) CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN '?4' THEN rt1.c2 END)&(rt1.c0)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2)|(rt0.c3)) IN ()) CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN '?4' THEN rt1.c2 END)&(rt1.c0)) WHERE ((((x'', 'o', vt0.c0)) BETWEEN ((CAST(rt1.c6 AS TEXT), ((rt1.c4) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((rt0.c4, ((((((((rt0.c1)AND(rt0.c3)))AND(NULL)))OR(rt0.c1)))OR(vt0.c0)), (rt0.c4 IN ())))));
SELECT SUM(count) FROM (SELECT (((((x'', 'o', vt0.c0)) BETWEEN ((CAST(rt1.c6 AS TEXT), ((rt1.c4) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((rt0.c4, ((((((((rt0.c1)AND(rt0.c3)))AND(NULL)))OR(rt0.c1)))OR(vt0.c0)), (rt0.c4 IN ()))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2)|(rt0.c3)) IN ()) CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN '?4' THEN rt1.c2 END)&(rt1.c0)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2)|(rt0.c3)) IN ()) CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN '?4' THEN rt1.c2 END)&(rt1.c0)) WHERE ((((x'', 'o', vt0.c0)) BETWEEN ((CAST(rt1.c6 AS TEXT), ((rt1.c4) BETWEEN (vt0.c0) AND (rt0.c3)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((rt0.c4, ((((((((rt0.c1)AND(rt0.c3)))AND(NULL)))OR(rt0.c1)))OR(vt0.c0)), (rt0.c4 IN ())))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<>(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))!=(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<>(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))!=(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))<>(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c1 AS BLOB), COALESCE(vt0.c0, rt0.c4)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c1 AS BLOB), COALESCE(vt0.c0, rt0.c4)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c1 AS BLOB), COALESCE(vt0.c0, rt0.c4)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c1 AS BLOB), COALESCE(vt0.c0, rt0.c4)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT CAST(rt0.c1 AS BLOB), COALESCE(vt0.c0, rt0.c4)) WHERE (rt0.c1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c6)) COLLATE NOCASE) ORDER BY LIKELIHOOD(DISTINCT ((((rt1.c4)AND(rt1.c6)))AND(-92465712)), 0.740623824894453) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c6)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(DISTINCT ((((rt1.c4)AND(rt1.c6)))AND(-92465712)), 0.740623824894453) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c6)) COLLATE NOCASE) ORDER BY LIKELIHOOD(DISTINCT ((((rt1.c4)AND(rt1.c6)))AND(-92465712)), 0.740623824894453) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c6)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY LIKELIHOOD(DISTINCT ((((rt1.c4)AND(rt1.c6)))AND(-92465712)), 0.740623824894453) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3) NOT BETWEEN (rt1.c6) AND (rt1.c6)) COLLATE NOCASE) ORDER BY LIKELIHOOD(DISTINCT ((((rt1.c4)AND(rt1.c6)))AND(-92465712)), 0.740623824894453) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c5 AS INTEGER))|(LOWER(DISTINCT NULL)))) ORDER BY (((CAST(rt1.c2 AS INTEGER), rt1.c0, ((rt1.c6) NOT NULL)))=((NULL, ((rt1.c5)<(rt1.c2)), (rt1.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c5 AS INTEGER))|(LOWER(DISTINCT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY (((CAST(rt1.c2 AS INTEGER), rt1.c0, ((rt1.c6) NOT NULL)))==((NULL, ((rt1.c5)<(rt1.c2)), (rt1.c1 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c5 AS INTEGER))|(LOWER(DISTINCT NULL)))) ORDER BY (((CAST(rt1.c2 AS INTEGER), rt1.c0, ((rt1.c6) NOT NULL)))=((NULL, ((rt1.c5)<(rt1.c2)), (rt1.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c5 AS INTEGER))|(LOWER(DISTINCT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY (((CAST(rt1.c2 AS INTEGER), rt1.c0, ((rt1.c6) NOT NULL)))==((NULL, ((rt1.c5)<(rt1.c2)), (rt1.c1 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c5 AS INTEGER))|(LOWER(DISTINCT NULL)))) ORDER BY (((CAST(rt1.c2 AS INTEGER), rt1.c0, ((rt1.c6) NOT NULL)))=((NULL, ((rt1.c5)<(rt1.c2)), (rt1.c1 IN ())))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))AND((NOT (rt1.c2)))))AND(rt0.c1)) LEFT OUTER JOIN rt1 ON ((((((((((((NULL)OR(CAST(rt1.c6 AS REAL))))OR(rt0.c4 COLLATE NOCASE)))OR(((vt0.c0) IS TRUE))))OR(rt1.c5)))OR(((((rt1.c4)OR(rt1.c6)))AND(rt0.c2)))))AND(((rt1.c0) BETWEEN (rt1.c5) AND (rt0.c0)))) WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((rt1.c1)AND(rt0.c4)))OR(rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))AND((NOT (rt1.c2)))))AND(rt0.c1)) LEFT OUTER JOIN rt1 ON ((((((((((((NULL)OR(CAST(rt1.c6 AS REAL))))OR(rt0.c4 COLLATE NOCASE)))OR(((vt0.c0) IS TRUE))))OR(rt1.c5)))OR(((((rt1.c4)OR(rt1.c6)))AND(rt0.c2)))))AND(((rt1.c0) BETWEEN (rt1.c5) AND (rt0.c0)))) ORDER BY ((((rt1.c1)AND(rt0.c4)))OR(rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))AND((NOT (rt1.c2)))))AND(rt0.c1)) LEFT OUTER JOIN rt1 ON ((((((((((((NULL)OR(CAST(rt1.c6 AS REAL))))OR(rt0.c4 COLLATE NOCASE)))OR(((vt0.c0) IS TRUE))))OR(rt1.c5)))OR(((((rt1.c4)OR(rt1.c6)))AND(rt0.c2)))))AND(((rt1.c0) BETWEEN (rt1.c5) AND (rt0.c0)))) WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((rt1.c1)AND(rt0.c4)))OR(rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c0 THEN rt0.c2 END)AND(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c3)))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))AND((NOT (rt1.c2)))))AND(rt0.c1)) LEFT OUTER JOIN rt1 ON ((((((((((((NULL)OR(CAST(rt1.c6 AS REAL))))OR(rt0.c4 COLLATE NOCASE)))OR(((vt0.c0) IS TRUE))))OR(rt1.c5)))OR(((((rt1.c4)OR(rt1.c6)))AND(rt0.c2)))))AND(((rt1.c0) BETWEEN (rt1.c5) AND (rt0.c0)))) ORDER BY ((((rt1.c1)AND(rt0.c4)))OR(rt0.c3)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON NULL WHERE ((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), x''))<>(((((rt0.c2))<=((rt0.c4))), ((((rt0.c0)OR(rt1.c1)))OR(rt1.c5)), 0.27929272377397163))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), x''))!=(((((rt0.c2))<=((rt0.c4))), ((((rt0.c0)OR(rt1.c1)))OR(rt1.c5)), 0.27929272377397163)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON NULL);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON NULL WHERE ((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), x''))<>(((((rt0.c2))<=((rt0.c4))), ((((rt0.c0)OR(rt1.c1)))OR(rt1.c5)), 0.27929272377397163))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), x''))!=(((((rt0.c2))<=((rt0.c4))), ((((rt0.c0)OR(rt1.c1)))OR(rt1.c5)), 0.27929272377397163)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON NULL);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON NULL WHERE ((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), x''))<>(((((rt0.c2))<=((rt0.c4))), ((((rt0.c0)OR(rt1.c1)))OR(rt1.c5)), 0.27929272377397163))));
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((rt0.c4 IN (rt0.c2)), (~ (rt0.c3)), HEX(rt0.c4))) AND ((rt0.c2, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((rt0.c4 IN (rt0.c2)), (~ (rt0.c3)), HEX(rt0.c4))) AND ((rt0.c2, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((rt0.c4 IN (rt0.c2)), (~ (rt0.c3)), HEX(rt0.c4))) AND ((rt0.c2, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((rt0.c4 IN (rt0.c2)), (~ (rt0.c3)), HEX(rt0.c4))) AND ((rt0.c2, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN (((rt0.c4 IN (rt0.c2)), (~ (rt0.c3)), HEX(rt0.c4))) AND ((rt0.c2, ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))));
SELECT * FROM rt0, rt1, vt0 WHERE (((((((((0.5882589285006131)OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c3)LIKE(0.11918674131281826)))))AND(((rt1.c0) BETWEEN (0.9451285317654919) AND ('0(')))))AND('<b')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.5882589285006131)OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c3)LIKE(0.11918674131281826)))))AND(((rt1.c0) BETWEEN (0.9451285317654919) AND ('0(')))))AND('<b'))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (((((((((0.5882589285006131)OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c3)LIKE(0.11918674131281826)))))AND(((rt1.c0) BETWEEN (0.9451285317654919) AND ('0(')))))AND('<b')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.5882589285006131)OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c3)LIKE(0.11918674131281826)))))AND(((rt1.c0) BETWEEN (0.9451285317654919) AND ('0(')))))AND('<b'))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (((((((((0.5882589285006131)OR(CAST(rt0.c2 AS REAL))))OR(((rt1.c3)LIKE(0.11918674131281826)))))AND(((rt1.c0) BETWEEN (0.9451285317654919) AND ('0(')))))AND('<b')));
SELECT ALL * FROM rt1, vt0 WHERE ((~ ((((rt1.c3))!=((rt1.c5)))))) ORDER BY (((rt1.c1, rt1.c4, rt1.c0)) BETWEEN ((((vt0.c0)<=(rt1.c0)), ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))) AND (((rt1.c6 IN ()), NULL, ((rt1.c5)LIKE(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c3))!=((rt1.c5)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1, rt1.c4, rt1.c0)) BETWEEN ((((vt0.c0)<=(rt1.c0)), ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))) AND (((rt1.c6 IN ()), NULL, ((rt1.c5)LIKE(rt1.c4))))));
SELECT ALL * FROM rt1, vt0 WHERE ((~ ((((rt1.c3))!=((rt1.c5)))))) ORDER BY (((rt1.c1, rt1.c4, rt1.c0)) BETWEEN ((((vt0.c0)<=(rt1.c0)), ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))) AND (((rt1.c6 IN ()), NULL, ((rt1.c5)LIKE(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt1.c3))!=((rt1.c5)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c1, rt1.c4, rt1.c0)) BETWEEN ((((vt0.c0)<=(rt1.c0)), ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))) AND (((rt1.c6 IN ()), NULL, ((rt1.c5)LIKE(rt1.c4))))));
SELECT ALL * FROM rt1, vt0 WHERE ((~ ((((rt1.c3))!=((rt1.c5)))))) ORDER BY (((rt1.c1, rt1.c4, rt1.c0)) BETWEEN ((((vt0.c0)<=(rt1.c0)), ((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))) AND (((rt1.c6 IN ()), NULL, ((rt1.c5)LIKE(rt1.c4)))));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c4) IS FALSE) ELSE ((((rt1.c6)AND(rt1.c5)))OR(rt0.c4)) END) ORDER BY (((rt0.c3)) BETWEEN (((NOT (rt0.c2)))) AND ((((rt1.c5) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c4) IS FALSE) ELSE ((((rt1.c6)AND(rt1.c5)))OR(rt0.c4)) END) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt0.c3)) BETWEEN (((NOT (rt0.c2)))) AND ((((rt1.c5) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ASC);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c4) IS FALSE) ELSE ((((rt1.c6)AND(rt1.c5)))OR(rt0.c4)) END) ORDER BY (((rt0.c3)) BETWEEN (((NOT (rt0.c2)))) AND ((((rt1.c5) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c4) IS FALSE) ELSE ((((rt1.c6)AND(rt1.c5)))OR(rt0.c4)) END) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt0.c3)) BETWEEN (((NOT (rt0.c2)))) AND ((((rt1.c5) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ASC);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c4) IS FALSE) ELSE ((((rt1.c6)AND(rt1.c5)))OR(rt0.c4)) END) ORDER BY (((rt0.c3)) BETWEEN (((NOT (rt0.c2)))) AND ((((rt1.c5) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt0.c1 WHERE ((+ ((((vt0.c0))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0))>((rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt0.c1 WHERE ((+ ((((vt0.c0))>((rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c0))>((rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt0.c1 WHERE ((+ ((((vt0.c0))>((rt1.c2))))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((0.16632688832779452 IN ())))) ORDER BY ((((vt0.c0)GLOB(rt0.c0)))-(((rt0.c1)>=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((0.16632688832779452 IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)GLOB(rt0.c0)))-(((rt0.c1)>=(rt0.c0)))) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((0.16632688832779452 IN ())))) ORDER BY ((((vt0.c0)GLOB(rt0.c0)))-(((rt0.c1)>=(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((0.16632688832779452 IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)GLOB(rt0.c0)))-(((rt0.c1)>=(rt0.c0)))) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((0.16632688832779452 IN ())))) ORDER BY ((((vt0.c0)GLOB(rt0.c0)))-(((rt0.c1)>=(rt0.c0)))) DESC;
SELECT * FROM vt0, rt1 WHERE (NULL) ORDER BY (((vt0.c0, rt1.c2, rt1.c6)) BETWEEN (((+ (rt1.c6)), CAST(vt0.c0 AS TEXT), ((rt1.c0) ISNULL))) AND ((((rt1.c0) ISNULL), CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c5 END, ((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0, rt1.c2, rt1.c6)) BETWEEN (((+ (rt1.c6)), CAST(vt0.c0 AS TEXT), ((rt1.c0) ISNULL))) AND ((((rt1.c0) ISNULL), CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c5 END, ((rt1.c0) NOT NULL)))));
SELECT * FROM vt0, rt1 WHERE (NULL) ORDER BY (((vt0.c0, rt1.c2, rt1.c6)) BETWEEN (((+ (rt1.c6)), CAST(vt0.c0 AS TEXT), ((rt1.c0) ISNULL))) AND ((((rt1.c0) ISNULL), CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c5 END, ((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((vt0.c0, rt1.c2, rt1.c6)) BETWEEN (((+ (rt1.c6)), CAST(vt0.c0 AS TEXT), ((rt1.c0) ISNULL))) AND ((((rt1.c0) ISNULL), CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c5 END, ((rt1.c0) NOT NULL)))));
SELECT * FROM vt0, rt1 WHERE (NULL) ORDER BY (((vt0.c0, rt1.c2, rt1.c6)) BETWEEN (((+ (rt1.c6)), CAST(vt0.c0 AS TEXT), ((rt1.c0) ISNULL))) AND ((((rt1.c0) ISNULL), CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c5 END, ((rt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2))>((rt1.c1))))AND((rt0.c1 IN ()))))AND(CAST(rt1.c4 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((rt1.c0)GLOB(rt1.c2))) NOT NULL) WHERE (UPPER(CAST(rt0.c4 AS REAL)));
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(rt0.c4 AS REAL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2))>((rt1.c1))))AND((rt0.c1 IN ()))))AND(CAST(rt1.c4 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((rt1.c0)GLOB(rt1.c2))) NOT NULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2))>((rt1.c1))))AND((rt0.c1 IN ()))))AND(CAST(rt1.c4 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((rt1.c0)GLOB(rt1.c2))) NOT NULL) WHERE (UPPER(CAST(rt0.c4 AS REAL)));
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(rt0.c4 AS REAL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2))>((rt1.c1))))AND((rt0.c1 IN ()))))AND(CAST(rt1.c4 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((rt1.c0)GLOB(rt1.c2))) NOT NULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((((((rt1.c2))>((rt1.c1))))AND((rt0.c1 IN ()))))AND(CAST(rt1.c4 AS BLOB))) RIGHT OUTER JOIN vt0 ON ((((rt1.c0)GLOB(rt1.c2))) NOT NULL) WHERE (UPPER(CAST(rt0.c4 AS REAL)));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((((rt0.c0)OR(((rt1.c4) IS FALSE))))AND(TYPEOF(rt1.c1))))AND(rt1.c1)))OR(((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) FULL OUTER JOIN rt0 ON ((((rt1.c0)%(rt1.c4))) NOT BETWEEN (NULL) AND (CAST(rt0.c1 AS BLOB))) WHERE (((NOT (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c2)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((((rt0.c0)OR(((rt1.c4) IS FALSE))))AND(TYPEOF(rt1.c1))))AND(rt1.c1)))OR(((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) FULL OUTER JOIN rt0 ON ((((rt1.c0)%(rt1.c4))) NOT BETWEEN (NULL) AND (CAST(rt0.c1 AS BLOB))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((((((rt0.c0)OR(((rt1.c4) IS FALSE))))AND(TYPEOF(rt1.c1))))AND(rt1.c1)))OR(((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) FULL OUTER JOIN rt0 ON ((((rt1.c0)%(rt1.c4))) NOT BETWEEN (NULL) AND (CAST(rt0.c1 AS BLOB))) WHERE (((NOT (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c2)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((((((rt0.c0)OR(((rt1.c4) IS FALSE))))AND(TYPEOF(rt1.c1))))AND(rt1.c1)))OR(((rt1.c2) BETWEEN (rt1.c2) AND (vt0.c0)))) FULL OUTER JOIN rt0 ON ((((rt1.c0)%(rt1.c4))) NOT BETWEEN (NULL) AND (CAST(rt0.c1 AS BLOB))));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE WHEN CASE rt1.c6  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN x'' WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c2 END THEN CASE WHEN rt0.c4 THEN rt1.c5 END WHEN (((rt0.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))) THEN (rt0.c4 IN ()) WHEN ((rt1.c4) BETWEEN (rt0.c1) AND (rt0.c4)) THEN (((rt1.c1, rt1.c6, rt0.c4)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c4)) AND ((rt1.c6, rt0.c4, rt1.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt1.c6  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN x'' WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c2 END THEN CASE WHEN rt0.c4 THEN rt1.c5 END WHEN (((rt0.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))) THEN (rt0.c4 IN ()) WHEN ((rt1.c4) BETWEEN (rt0.c1) AND (rt0.c4)) THEN (((rt1.c1, rt1.c6, rt0.c4)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c4)) AND ((rt1.c6, rt0.c4, rt1.c3))) END) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE WHEN CASE rt1.c6  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN x'' WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c2 END THEN CASE WHEN rt0.c4 THEN rt1.c5 END WHEN (((rt0.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))) THEN (rt0.c4 IN ()) WHEN ((rt1.c4) BETWEEN (rt0.c1) AND (rt0.c4)) THEN (((rt1.c1, rt1.c6, rt0.c4)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c4)) AND ((rt1.c6, rt0.c4, rt1.c3))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt1.c6  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN x'' WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c2 END THEN CASE WHEN rt0.c4 THEN rt1.c5 END WHEN (((rt0.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))) THEN (rt0.c4 IN ()) WHEN ((rt1.c4) BETWEEN (rt0.c1) AND (rt0.c4)) THEN (((rt1.c1, rt1.c6, rt0.c4)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c4)) AND ((rt1.c6, rt0.c4, rt1.c3))) END) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (CASE WHEN CASE rt1.c6  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN x'' WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c2 END THEN CASE WHEN rt0.c4 THEN rt1.c5 END WHEN (((rt0.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))) THEN (rt0.c4 IN ()) WHEN ((rt1.c4) BETWEEN (rt0.c1) AND (rt0.c4)) THEN (((rt1.c1, rt1.c6, rt0.c4)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c4)) AND ((rt1.c6, rt0.c4, rt1.c3))) END);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (0.884736919873139) ORDER BY CAST(((rt0.c3)LIKE('-1522303859')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.884736919873139) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CAST(((rt0.c3)LIKE('-1522303859')) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (0.884736919873139) ORDER BY CAST(((rt0.c3)LIKE('-1522303859')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.884736919873139) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CAST(((rt0.c3)LIKE('-1522303859')) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (0.884736919873139) ORDER BY CAST(((rt0.c3)LIKE('-1522303859')) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))OR(rt1.c1))))>=((TYPEOF(DISTINCT rt1.c4)))) WHERE ((((rt1.c4)) BETWEEN (((+ (rt1.c5)))) AND ((((((rt1.c6)AND(rt1.c0)))AND(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) BETWEEN (((+ (rt1.c5)))) AND ((((((rt1.c6)AND(rt1.c0)))AND(rt1.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))OR(rt1.c1))))>=((TYPEOF(DISTINCT rt1.c4)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))OR(rt1.c1))))>=((TYPEOF(DISTINCT rt1.c4)))) WHERE ((((rt1.c4)) BETWEEN (((+ (rt1.c5)))) AND ((((((rt1.c6)AND(rt1.c0)))AND(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) BETWEEN (((+ (rt1.c5)))) AND ((((((rt1.c6)AND(rt1.c0)))AND(rt1.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))OR(rt1.c1))))>=((TYPEOF(DISTINCT rt1.c4)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))OR(rt1.c1))))>=((TYPEOF(DISTINCT rt1.c4)))) WHERE ((((rt1.c4)) BETWEEN (((+ (rt1.c5)))) AND ((((((rt1.c6)AND(rt1.c0)))AND(rt1.c1))))));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON UPPER(DISTINCT ((((rt0.c1)OR(rt1.c6)))OR(rt1.c0))) CROSS JOIN vt0 ON rt0.c1 WHERE (((((((((rt0.c4 COLLATE NOCASE)AND((((rt0.c0))>((rt1.c3))))))AND(CASE x''  WHEN rt1.c1 THEN rt0.c2 ELSE 0.11796825187138404 END)))AND(CAST(rt1.c6 AS NUMERIC))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4 COLLATE NOCASE)AND((((rt0.c0))>((rt1.c3))))))AND(CASE x''  WHEN rt1.c1 THEN rt0.c2 ELSE 0.11796825187138404 END)))AND(CAST(rt1.c6 AS NUMERIC))))AND(NULL))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON UPPER(DISTINCT ((((rt0.c1)OR(rt1.c6)))OR(rt1.c0))) CROSS JOIN vt0 ON rt0.c1);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON UPPER(DISTINCT ((((rt0.c1)OR(rt1.c6)))OR(rt1.c0))) CROSS JOIN vt0 ON rt0.c1 WHERE (((((((((rt0.c4 COLLATE NOCASE)AND((((rt0.c0))>((rt1.c3))))))AND(CASE x''  WHEN rt1.c1 THEN rt0.c2 ELSE 0.11796825187138404 END)))AND(CAST(rt1.c6 AS NUMERIC))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c4 COLLATE NOCASE)AND((((rt0.c0))>((rt1.c3))))))AND(CASE x''  WHEN rt1.c1 THEN rt0.c2 ELSE 0.11796825187138404 END)))AND(CAST(rt1.c6 AS NUMERIC))))AND(NULL))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON UPPER(DISTINCT ((((rt0.c1)OR(rt1.c6)))OR(rt1.c0))) CROSS JOIN vt0 ON rt0.c1);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON UPPER(DISTINCT ((((rt0.c1)OR(rt1.c6)))OR(rt1.c0))) CROSS JOIN vt0 ON rt0.c1 WHERE (((((((((rt0.c4 COLLATE NOCASE)AND((((rt0.c0))>((rt1.c3))))))AND(CASE x''  WHEN rt1.c1 THEN rt0.c2 ELSE 0.11796825187138404 END)))AND(CAST(rt1.c6 AS NUMERIC))))AND(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, ((vt0.c0)IS NOT(((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, ((vt0.c0)IS NOT(((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, ((vt0.c0)IS NOT(((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, ((vt0.c0)IS NOT(((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE BINARY, ((vt0.c0)IS NOT(((vt0.c0)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS REAL))|(((rt1.c2) IS FALSE))) FULL OUTER JOIN rt1 ON ((rt1.c0)OR((- (vt0.c0)))) WHERE (((rt1.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((CAST(rt1.c2 AS REAL))IS((vt0.c0 IN ()))) ASC, (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (CAST(0.587950221592532 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS REAL))|(((rt1.c2) IS FALSE))) FULL OUTER JOIN rt1 ON ((rt1.c0)OR((- (vt0.c0)))) ORDER BY ((CAST(rt1.c2 AS REAL))IS((vt0.c0 IN ()))) ASC, (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (CAST(0.587950221592532 AS REAL)))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS REAL))|(((rt1.c2) IS FALSE))) FULL OUTER JOIN rt1 ON ((rt1.c0)OR((- (vt0.c0)))) WHERE (((rt1.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((CAST(rt1.c2 AS REAL))IS((vt0.c0 IN ()))) ASC, (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (CAST(0.587950221592532 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS REAL))|(((rt1.c2) IS FALSE))) FULL OUTER JOIN rt1 ON ((rt1.c0)OR((- (vt0.c0)))) ORDER BY ((CAST(rt1.c2 AS REAL))IS((vt0.c0 IN ()))) ASC, (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (CAST(0.587950221592532 AS REAL)))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))) IS FALSE));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))) IS FALSE));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))) IS FALSE);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((+ (vt0.c0))) AND (IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c0)) WHEN load_extension(vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN '?{fl>' THEN ((vt0.c0)+(vt0.c0)) END  NULLS FIRST, CAST(((vt0.c0) IS FALSE) AS BLOB), CASE WHEN (+ (vt0.c0)) THEN 'O' ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((+ (vt0.c0))) AND (IFNULL(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c0)) WHEN load_extension(vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN '?{fl>' THEN ((vt0.c0)+(vt0.c0)) END  NULLS FIRST, CAST(((vt0.c0) IS FALSE) AS BLOB), CASE WHEN (+ (vt0.c0)) THEN 'O' ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((+ (vt0.c0))) AND (IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c0)) WHEN load_extension(vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN '?{fl>' THEN ((vt0.c0)+(vt0.c0)) END  NULLS FIRST, CAST(((vt0.c0) IS FALSE) AS BLOB), CASE WHEN (+ (vt0.c0)) THEN 'O' ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((+ (vt0.c0))) AND (IFNULL(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (+ (vt0.c0)) WHEN load_extension(vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN '?{fl>' THEN ((vt0.c0)+(vt0.c0)) END  NULLS FIRST, CAST(((vt0.c0) IS FALSE) AS BLOB), CASE WHEN (+ (vt0.c0)) THEN 'O' ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END DESC);
SELECT * FROM rt1, vt0 WHERE (((((((((x'')OR(((rt1.c6) IS TRUE))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c5)))))AND(((rt1.c2) NOT NULL))))OR(((rt1.c1)+(rt1.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(((rt1.c6) IS TRUE))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c5)))))AND(((rt1.c2) NOT NULL))))OR(((rt1.c1)+(rt1.c6))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((((((x'')OR(((rt1.c6) IS TRUE))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c5)))))AND(((rt1.c2) NOT NULL))))OR(((rt1.c1)+(rt1.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(((rt1.c6) IS TRUE))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c5)))))AND(((rt1.c2) NOT NULL))))OR(((rt1.c1)+(rt1.c6))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((((((x'')OR(((rt1.c6) IS TRUE))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c5)))))AND(((rt1.c2) NOT NULL))))OR(((rt1.c1)+(rt1.c6)))));
SELECT COUNT(*) FROM rt1 WHERE ((+ (((((((((rt1.c0)OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c0)OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((((((((rt1.c0)OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt1.c0)OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((((((((rt1.c0)OR(NULL)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (+ (CAST(rt0.c3 AS TEXT))) WHERE (CASE WHEN (+ (vt0.c0)) THEN x'fb0b' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN x'fb0b' END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (+ (CAST(rt0.c3 AS TEXT))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (+ (CAST(rt0.c3 AS TEXT))) WHERE (CASE WHEN (+ (vt0.c0)) THEN x'fb0b' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN x'fb0b' END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (+ (CAST(rt0.c3 AS TEXT))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (+ (CAST(rt0.c3 AS TEXT))) WHERE (CASE WHEN (+ (vt0.c0)) THEN x'fb0b' END);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1, rt0 WHERE (CAST(rt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1, rt0 WHERE (CAST(rt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt1, rt0 WHERE (CAST(rt0.c1 AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY LIKELIHOOD(vt0.c0, 0.4841685102939386) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c0, 0.4841685102939386) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY LIKELIHOOD(vt0.c0, 0.4841685102939386) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(vt0.c0, 0.4841685102939386) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY LIKELIHOOD(vt0.c0, 0.4841685102939386) DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))GLOB(((vt0.c0)<=(vt0.c0)))) WHERE (0.18149720514464962) ORDER BY ((rt1.c4) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.18149720514464962) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))GLOB(((vt0.c0)<=(vt0.c0)))) ORDER BY ((rt1.c4) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))GLOB(((vt0.c0)<=(vt0.c0)))) WHERE (0.18149720514464962) ORDER BY ((rt1.c4) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.18149720514464962) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))GLOB(((vt0.c0)<=(vt0.c0)))) ORDER BY ((rt1.c4) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))GLOB(((vt0.c0)<=(vt0.c0)))) WHERE (0.18149720514464962) ORDER BY ((rt1.c4) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))&(((((((((NULL)AND(rt0.c2)))AND(0.15826458178451974)))OR(rt0.c4)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))&(((((((((NULL)AND(rt0.c2)))AND(0.15826458178451974)))OR(rt0.c4)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))&(((((((((NULL)AND(rt0.c2)))AND(0.15826458178451974)))OR(rt0.c4)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))&(((((((((NULL)AND(rt0.c2)))AND(0.15826458178451974)))OR(rt0.c4)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))&(((((((((NULL)AND(rt0.c2)))AND(0.15826458178451974)))OR(rt0.c4)))AND(rt0.c0)))));
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c2 AS BLOB) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(rt1.c6 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c6 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(rt1.c6 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c6 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(rt1.c6 COLLATE RTRIM AS NUMERIC));
SELECT COUNT(*) FROM rt1 NOT INDEXED CROSS JOIN rt0 ON ((UPPER(DISTINCT rt0.c4))%(((rt1.c6) IS TRUE))) WHERE (rt1.c6);
SELECT SUM(count) FROM (SELECT ((rt1.c6) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((UPPER(DISTINCT rt0.c4))%(((rt1.c6) IS TRUE))));
SELECT COUNT(*) FROM rt1 NOT INDEXED CROSS JOIN rt0 ON ((UPPER(DISTINCT rt0.c4))%(((rt1.c6) IS TRUE))) WHERE (rt1.c6);
SELECT SUM(count) FROM (SELECT ((rt1.c6) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((UPPER(DISTINCT rt0.c4))%(((rt1.c6) IS TRUE))));
SELECT COUNT(*) FROM rt1 NOT INDEXED CROSS JOIN rt0 ON ((UPPER(DISTINCT rt0.c4))%(((rt1.c6) IS TRUE))) WHERE (rt1.c6);
SELECT COUNT(*) FROM rt1 WHERE (LIKELY((~ (rt1.c0)))) ORDER BY json_valid(((((rt1.c0)OR(rt1.c4)))OR(rt1.c5))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((~ (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY json_valid(((((rt1.c0)OR(rt1.c4)))OR(rt1.c5))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (LIKELY((~ (rt1.c0)))) ORDER BY json_valid(((((rt1.c0)OR(rt1.c4)))OR(rt1.c5))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((~ (rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY json_valid(((((rt1.c0)OR(rt1.c4)))OR(rt1.c5))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (LIKELY((~ (rt1.c0)))) ORDER BY json_valid(((((rt1.c0)OR(rt1.c4)))OR(rt1.c5))) DESC;
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))>>(((rt1.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))>>(((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))>>(((rt1.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))>>(((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c2)))AND(vt0.c0)))>>(((rt1.c3) IS FALSE))));
SELECT * FROM rt0, rt1 WHERE ('-2093099485') ORDER BY (((rt1.c3)<>(rt0.c3)) IN (((rt1.c1)+(rt1.c6)), ((rt1.c6)<>(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (('-2093099485') IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3)!=(rt0.c3)) IN (((rt1.c1)+(rt1.c6)), ((rt1.c6)!=(rt1.c4)))));
SELECT * FROM rt0, rt1 WHERE ('-2093099485') ORDER BY (((rt1.c3)<>(rt0.c3)) IN (((rt1.c1)+(rt1.c6)), ((rt1.c6)<>(rt1.c4))));
SELECT SUM(count) FROM (SELECT ALL (('-2093099485') IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c3)!=(rt0.c3)) IN (((rt1.c1)+(rt1.c6)), ((rt1.c6)!=(rt1.c4)))));
SELECT * FROM rt0, rt1 WHERE ('-2093099485') ORDER BY (((rt1.c3)<>(rt0.c3)) IN (((rt1.c1)+(rt1.c6)), ((rt1.c6)<>(rt1.c4))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN rt1 ON -2.36776699E8 WHERE (TYPEOF((((rt1.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))) ORDER BY CAST((NOT (rt0.c4)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt1.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON -2.36776699E8 ORDER BY CAST((NOT (rt0.c4)) AS BLOB) DESC);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN rt1 ON -2.36776699E8 WHERE (TYPEOF((((rt1.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))) ORDER BY CAST((NOT (rt0.c4)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt1.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON -2.36776699E8 ORDER BY CAST((NOT (rt0.c4)) AS BLOB) DESC);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN rt1 ON -2.36776699E8 WHERE (TYPEOF((((rt1.c4)) NOT BETWEEN ((NULL)) AND ((rt0.c3))))) ORDER BY CAST((NOT (rt0.c4)) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(1313012801 AS TEXT))LIKE(0xffffffff96e022ad)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(1313012801 AS TEXT))LIKE(0Xffffffff96e022ad))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(1313012801 AS TEXT))LIKE(0xffffffff96e022ad)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(1313012801 AS TEXT))LIKE(0Xffffffff96e022ad))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(1313012801 AS TEXT))LIKE(0xffffffff96e022ad)));
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((+ (0.05348384924760463)), LIKELIHOOD(rt1.c5, 0.5293369236713296), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) AND (((rt1.c0 IN ()), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END, UNICODE(rt1.c6))))) ORDER BY LTRIM(((((rt1.c2)OR(rt1.c0)))AND(NULL)), 0.20736724206605472)  NULLS FIRST, ((((CASE rt1.c5  WHEN rt1.c6 THEN rt1.c4 ELSE x'ccb7' END)AND(((((rt1.c3)OR(rt1.c6)))OR(rt1.c2)))))OR(((rt1.c2) BETWEEN (0.5882589285006131) AND (rt1.c6)))) DESC, (((HEX(DISTINCT vt0.c0)))<((((rt1.c3)<>(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((+ (0.05348384924760463)), LIKELIHOOD(rt1.c5, 0.5293369236713296), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) AND (((rt1.c0 IN ()), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END, UNICODE(rt1.c6))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY LTRIM(((((rt1.c2)OR(rt1.c0)))AND(NULL)), 0.20736724206605472)  NULLS FIRST, ((((CASE rt1.c5  WHEN rt1.c6 THEN rt1.c4 ELSE x'ccb7' END)AND(((((rt1.c3)OR(rt1.c6)))OR(rt1.c2)))))OR(((rt1.c2) BETWEEN (0.5882589285006131) AND (rt1.c6)))) DESC, (((HEX(DISTINCT vt0.c0)))<((((rt1.c3)<>(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((+ (0.05348384924760463)), LIKELIHOOD(rt1.c5, 0.5293369236713296), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) AND (((rt1.c0 IN ()), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END, UNICODE(rt1.c6))))) ORDER BY LTRIM(((((rt1.c2)OR(rt1.c0)))AND(NULL)), 0.20736724206605472)  NULLS FIRST, ((((CASE rt1.c5  WHEN rt1.c6 THEN rt1.c4 ELSE x'ccb7' END)AND(((((rt1.c3)OR(rt1.c6)))OR(rt1.c2)))))OR(((rt1.c2) BETWEEN (0.5882589285006131) AND (rt1.c6)))) DESC, (((HEX(DISTINCT vt0.c0)))<((((rt1.c3)<>(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((+ (0.05348384924760463)), LIKELIHOOD(rt1.c5, 0.5293369236713296), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) AND (((rt1.c0 IN ()), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END, UNICODE(rt1.c6))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY LTRIM(((((rt1.c2)OR(rt1.c0)))AND(NULL)), 0.20736724206605472)  NULLS FIRST, ((((CASE rt1.c5  WHEN rt1.c6 THEN rt1.c4 ELSE x'ccb7' END)AND(((((rt1.c3)OR(rt1.c6)))OR(rt1.c2)))))OR(((rt1.c2) BETWEEN (0.5882589285006131) AND (rt1.c6)))) DESC, (((HEX(DISTINCT vt0.c0)))<((((rt1.c3)<>(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((((vt0.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((+ (0.05348384924760463)), LIKELIHOOD(rt1.c5, 0.5293369236713296), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) AND (((rt1.c0 IN ()), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c4 END, UNICODE(rt1.c6))))) ORDER BY LTRIM(((((rt1.c2)OR(rt1.c0)))AND(NULL)), 0.20736724206605472)  NULLS FIRST, ((((CASE rt1.c5  WHEN rt1.c6 THEN rt1.c4 ELSE x'ccb7' END)AND(((((rt1.c3)OR(rt1.c6)))OR(rt1.c2)))))OR(((rt1.c2) BETWEEN (0.5882589285006131) AND (rt1.c6)))) DESC, (((HEX(DISTINCT vt0.c0)))<((((rt1.c3)<>(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, vt0 WHERE (x'6b377745');
SELECT SUM(count) FROM (SELECT ((x'6b377745') IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (x'6b377745');
SELECT SUM(count) FROM (SELECT ((x'6b377745') IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (x'6b377745');
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN NULL THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c0 END) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN NULL THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c0 END) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE WHEN NULL THEN rt0.c0 END);
SELECT COUNT(*) FROM rt1 WHERE ((('-695236975')|(((rt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((('-695236975')|(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('-695236975')|(((rt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((('-695236975')|(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('-695236975')|(((rt1.c1) ISNULL))));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4 WHERE (((((rt1.c1)AND(CAST(rt0.c2 AS NUMERIC))))AND((((rt1.c1))<>((rt1.c1)))))) ORDER BY ((((rt1.c1)<=(rt0.c0)))GLOB(TRIM(DISTINCT rt0.c4, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(CAST(rt0.c2 AS NUMERIC))))AND((((rt1.c1))!=((rt1.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4 ORDER BY ((((rt1.c1)<=(rt0.c0)))GLOB(TRIM(DISTINCT rt0.c4, rt0.c2))));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4 WHERE (((((rt1.c1)AND(CAST(rt0.c2 AS NUMERIC))))AND((((rt1.c1))<>((rt1.c1)))))) ORDER BY ((((rt1.c1)<=(rt0.c0)))GLOB(TRIM(DISTINCT rt0.c4, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(CAST(rt0.c2 AS NUMERIC))))AND((((rt1.c1))!=((rt1.c1)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4 ORDER BY ((((rt1.c1)<=(rt0.c0)))GLOB(TRIM(DISTINCT rt0.c4, rt0.c2))));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON rt1.c4 WHERE (((((rt1.c1)AND(CAST(rt0.c2 AS NUMERIC))))AND((((rt1.c1))<>((rt1.c1)))))) ORDER BY ((((rt1.c1)<=(rt0.c0)))GLOB(TRIM(DISTINCT rt0.c4, rt0.c2)));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c4)))%(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c4)))%(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c4)))%(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c4)))%(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c4)))%(CASE WHEN rt0.c1 THEN rt1.c6 ELSE rt0.c3 END)));
SELECT * FROM vt0, rt1 WHERE (((x'')AND(CASE vt0.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c5 END)));
SELECT SUM(count) FROM (SELECT ((((x'')AND(CASE vt0.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c5 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((x'')AND(CASE vt0.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c5 END)));
SELECT SUM(count) FROM (SELECT ((((x'')AND(CASE vt0.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c5 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((x'')AND(CASE vt0.c0  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c5 END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((NOT (rt1.c4))))>((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5))))) RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS NUMERIC)) IS FALSE) WHERE (((rt1.c1 IN ()) IN (((rt1.c3) ISNULL), x'')));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 IN ()) IN (((rt1.c3) ISNULL), x''))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((NOT (rt1.c4))))>((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5))))) RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS NUMERIC)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((NOT (rt1.c4))))>((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5))))) RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS NUMERIC)) IS FALSE) WHERE (((rt1.c1 IN ()) IN (((rt1.c3) ISNULL), x'')));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 IN ()) IN (((rt1.c3) ISNULL), x''))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((NOT (rt1.c4))))>((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5))))) RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS NUMERIC)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((NOT (rt1.c4))))>((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c5))))) RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS NUMERIC)) IS FALSE) WHERE (((rt1.c1 IN ()) IN (((rt1.c3) ISNULL), x'')));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt0.c0)==(CAST(vt0.c0 AS INTEGER)))) ORDER BY -1652704764;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)==(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY -1652704764);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt0.c0)==(CAST(vt0.c0 AS INTEGER)))) ORDER BY -1652704764;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)==(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY -1652704764);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4) BETWEEN (rt1.c0) AND (NULL)) IN ())) ORDER BY ((LOWER('1015761539'))<<(json_array_length(rt1.c0, rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4) BETWEEN (rt1.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((LOWER('1015761539'))<<(json_array_length(rt1.c0, rt1.c3))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c4) BETWEEN (rt1.c0) AND (NULL)) IN ())) ORDER BY ((LOWER('1015761539'))<<(json_array_length(rt1.c0, rt1.c3))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4) BETWEEN (rt1.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((LOWER('1015761539'))<<(json_array_length(rt1.c0, rt1.c3))) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)<=(CASE WHEN rt1.c4 THEN rt1.c2 END)) CROSS JOIN vt0 ON ((((rt1.c0)IS(rt0.c3)))==(x'')) WHERE ((((rt1.c5 IN ()))|(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5 IN ()))|(rt1.c4))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)<=(CASE WHEN rt1.c4 THEN rt1.c2 END)) CROSS JOIN vt0 ON ((((rt1.c0)IS(rt0.c3)))==(x'')));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)<=(CASE WHEN rt1.c4 THEN rt1.c2 END)) CROSS JOIN vt0 ON ((((rt1.c0)IS(rt0.c3)))==(x'')) WHERE ((((rt1.c5 IN ()))|(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5 IN ()))|(rt1.c4))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)<=(CASE WHEN rt1.c4 THEN rt1.c2 END)) CROSS JOIN vt0 ON ((((rt1.c0)IS(rt0.c3)))==(x'')));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((rt1.c0 COLLATE BINARY)<=(CASE WHEN rt1.c4 THEN rt1.c2 END)) CROSS JOIN vt0 ON ((((rt1.c0)IS(rt0.c3)))==(x'')) WHERE ((((rt1.c5 IN ()))|(rt1.c4)));
SELECT COUNT(*) FROM rt1 WHERE ((+ ((rt1.c6 IN ())))) ORDER BY CAST(((rt1.c0) IS TRUE) AS BLOB);
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c6 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0) IS TRUE) AS BLOB));
SELECT COUNT(*) FROM rt1 WHERE ((+ ((rt1.c6 IN ())))) ORDER BY CAST(((rt1.c0) IS TRUE) AS BLOB);
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c6 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c0) IS TRUE) AS BLOB));
SELECT COUNT(*) FROM rt1 WHERE ((+ ((rt1.c6 IN ())))) ORDER BY CAST(((rt1.c0) IS TRUE) AS BLOB);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((((((rt0.c4 COLLATE RTRIM)AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c4 IN ()))))AND('-1435991214' COLLATE NOCASE)))OR(UNLIKELY(rt0.c1))) WHERE ((((rt1.c4)) NOT BETWEEN (((rt0.c1 IN (rt1.c5, rt1.c2)))) AND (((+ (rt0.c0)))))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) NOT BETWEEN (((rt0.c1 IN (rt1.c5, rt1.c2)))) AND (((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((((rt0.c4 COLLATE RTRIM)AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c4 IN ()))))AND('-1435991214' COLLATE NOCASE)))OR(UNLIKELY(rt0.c1))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((((((rt0.c4 COLLATE RTRIM)AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c4 IN ()))))AND('-1435991214' COLLATE NOCASE)))OR(UNLIKELY(rt0.c1))) WHERE ((((rt1.c4)) NOT BETWEEN (((rt0.c1 IN (rt1.c5, rt1.c2)))) AND (((+ (rt0.c0)))))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) NOT BETWEEN (((rt0.c1 IN (rt1.c5, rt1.c2)))) AND (((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((((rt0.c4 COLLATE RTRIM)AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c4 IN ()))))AND('-1435991214' COLLATE NOCASE)))OR(UNLIKELY(rt0.c1))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((((((rt0.c4 COLLATE RTRIM)AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c4 IN ()))))AND('-1435991214' COLLATE NOCASE)))OR(UNLIKELY(rt0.c1))) WHERE ((((rt1.c4)) NOT BETWEEN (((rt0.c1 IN (rt1.c5, rt1.c2)))) AND (((+ (rt0.c0)))))) ORDER BY CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)|(rt0.c3)) COLLATE BINARY) ORDER BY CAST((rt0.c3 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((rt0.c3 IN ()) AS BLOB) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)|(rt0.c3)) COLLATE BINARY) ORDER BY CAST((rt0.c3 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|(rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((rt0.c3 IN ()) AS BLOB) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)|(rt0.c3)) COLLATE BINARY) ORDER BY CAST((rt0.c3 IN ()) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c4, NULL))&(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c4, NULL))&(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c4, NULL))&(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c4, NULL))&(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c4, NULL))&(((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))));
SELECT * FROM rt0, vt0, rt1 WHERE (((((rt0.c3, rt1.c5, rt1.c0))=((rt0.c1, vt0.c0, vt0.c0))) IN (CAST(rt1.c2 AS REAL), ((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c3) AND (rt1.c5))))) ORDER BY (((((rt1.c3, rt0.c2, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c5, rt0.c4)) AND ((rt0.c4, rt1.c4, 'VeB6')))) BETWEEN (rt0.c3) AND (rt0.c0)), ((~ (rt1.c4)) IN ())  NULLS FIRST, (((((rt1.c4))<=((rt1.c1))))<<((rt1.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3, rt1.c5, rt1.c0))=((rt0.c1, vt0.c0, vt0.c0))) IN (CAST(rt1.c2 AS REAL), ((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c3) AND (rt1.c5))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((((rt1.c3, rt0.c2, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c5, rt0.c4)) AND ((rt0.c4, rt1.c4, 'VeB6')))) BETWEEN (rt0.c3) AND (rt0.c0)), ((~ (rt1.c4)) IN ())  NULLS FIRST, (((((rt1.c4))<=((rt1.c1))))<<((rt1.c4 IN ()))));
SELECT * FROM rt0, vt0, rt1 WHERE (((((rt0.c3, rt1.c5, rt1.c0))=((rt0.c1, vt0.c0, vt0.c0))) IN (CAST(rt1.c2 AS REAL), ((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c3) AND (rt1.c5))))) ORDER BY (((((rt1.c3, rt0.c2, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c5, rt0.c4)) AND ((rt0.c4, rt1.c4, 'VeB6')))) BETWEEN (rt0.c3) AND (rt0.c0)), ((~ (rt1.c4)) IN ())  NULLS FIRST, (((((rt1.c4))<=((rt1.c1))))<<((rt1.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3, rt1.c5, rt1.c0))=((rt0.c1, vt0.c0, vt0.c0))) IN (CAST(rt1.c2 AS REAL), ((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c3) AND (rt1.c5))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((((rt1.c3, rt0.c2, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c5, rt0.c4)) AND ((rt0.c4, rt1.c4, 'VeB6')))) BETWEEN (rt0.c3) AND (rt0.c0)), ((~ (rt1.c4)) IN ())  NULLS FIRST, (((((rt1.c4))<=((rt1.c1))))<<((rt1.c4 IN ()))));
SELECT * FROM rt0, vt0, rt1 WHERE (((((rt0.c3, rt1.c5, rt1.c0))=((rt0.c1, vt0.c0, vt0.c0))) IN (CAST(rt1.c2 AS REAL), ((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c3) AND (rt1.c5))))) ORDER BY (((((rt1.c3, rt0.c2, rt1.c2)) NOT BETWEEN ((rt0.c3, rt1.c5, rt0.c4)) AND ((rt0.c4, rt1.c4, 'VeB6')))) BETWEEN (rt0.c3) AND (rt0.c0)), ((~ (rt1.c4)) IN ())  NULLS FIRST, (((((rt1.c4))<=((rt1.c1))))<<((rt1.c4 IN ())));
SELECT * FROM vt0, rt1 WHERE ((CASE rt1.c6  WHEN rt1.c1 THEN 'm' WHEN rt1.c2 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 END IN (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5)), ((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c6  WHEN rt1.c1 THEN 'm' WHEN rt1.c2 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 END IN (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5)), ((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((CASE rt1.c6  WHEN rt1.c1 THEN 'm' WHEN rt1.c2 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 END IN (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5)), ((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c6  WHEN rt1.c1 THEN 'm' WHEN rt1.c2 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 END IN (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5)), ((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((CASE rt1.c6  WHEN rt1.c1 THEN 'm' WHEN rt1.c2 THEN rt1.c0 WHEN '' THEN rt1.c2 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 END IN (((((rt1.c0)OR(rt1.c5)))OR(rt1.c5)), ((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt0.c3) IS FALSE))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))) FULL OUTER JOIN vt0 ON CASE WHEN CASE rt1.c6  WHEN rt1.c6 THEN rt0.c3 END THEN (((rt0.c2))>((0.5399403857168646))) END WHERE ((((rt1.c0, rt1.c5, '')) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((0xffffffffa10a3619) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt1.c0)LIKE(rt1.c5)))) AND ((CAST(rt1.c2 AS NUMERIC), ((rt0.c4)*(rt0.c4)), (~ (rt1.c5)))))) ORDER BY (((rt0.c4 IN ()))<>(((rt1.c4)<<(rt0.c3)))) ASC, ((((((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(x'7e0a')))AND(rt0.c3)))AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c5, '')) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((0xffffffffa10a3619) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt1.c0)LIKE(rt1.c5)))) AND ((CAST(rt1.c2 AS NUMERIC), ((rt0.c4)*(rt0.c4)), (~ (rt1.c5)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt0.c3) IS FALSE))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))) FULL OUTER JOIN vt0 ON CASE WHEN CASE rt1.c6  WHEN rt1.c6 THEN rt0.c3 END THEN (((rt0.c2))>((0.5399403857168646))) END ORDER BY (((rt0.c4 IN ()))<>(((rt1.c4)<<(rt0.c3)))) ASC, ((((((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(x'7e0a')))AND(rt0.c3)))AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt0.c3) IS FALSE))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))) FULL OUTER JOIN vt0 ON CASE WHEN CASE rt1.c6  WHEN rt1.c6 THEN rt0.c3 END THEN (((rt0.c2))>((0.5399403857168646))) END WHERE ((((rt1.c0, rt1.c5, '')) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((0xffffffffa10a3619) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt1.c0)LIKE(rt1.c5)))) AND ((CAST(rt1.c2 AS NUMERIC), ((rt0.c4)*(rt0.c4)), (~ (rt1.c5)))))) ORDER BY (((rt0.c4 IN ()))<>(((rt1.c4)<<(rt0.c3)))) ASC, ((((((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(x'7e0a')))AND(rt0.c3)))AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c5, '')) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((0xffffffffa10a3619) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt1.c0)LIKE(rt1.c5)))) AND ((CAST(rt1.c2 AS NUMERIC), ((rt0.c4)*(rt0.c4)), (~ (rt1.c5)))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((rt0.c3) IS FALSE))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))) FULL OUTER JOIN vt0 ON CASE WHEN CASE rt1.c6  WHEN rt1.c6 THEN rt0.c3 END THEN (((rt0.c2))>((0.5399403857168646))) END ORDER BY (((rt0.c4 IN ()))<>(((rt1.c4)<<(rt0.c3)))) ASC, ((((((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(x'7e0a')))AND(rt0.c3)))AND(CAST(rt0.c0 AS BLOB))))AND((rt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))==((CASE WHEN rt0.c3 THEN rt0.c2 END)))) ORDER BY ((((('di', rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt1.c6, rt0.c1)) AND ((rt1.c3, rt0.c2, rt0.c3)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))==((CASE WHEN rt0.c3 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((('di', rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt1.c6, rt0.c1)) AND ((rt1.c3, rt0.c2, rt0.c3)))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))==((CASE WHEN rt0.c3 THEN rt0.c2 END)))) ORDER BY ((((('di', rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt1.c6, rt0.c1)) AND ((rt1.c3, rt0.c2, rt0.c3)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))==((CASE WHEN rt0.c3 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((('di', rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt1.c6, rt0.c1)) AND ((rt1.c3, rt0.c2, rt0.c3)))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))==((CASE WHEN rt0.c3 THEN rt0.c2 END)))) ORDER BY ((((('di', rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt1.c6, rt0.c1)) AND ((rt1.c3, rt0.c2, rt0.c3)))) ISNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((rt1.c5)GLOB(rt1.c2)) COLLATE NOCASE) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (rt1.c3 IN ()) THEN CAST(rt1.c5 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c5)GLOB(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (rt1.c3 IN ()) THEN CAST(rt1.c5 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((rt1.c5)GLOB(rt1.c2)) COLLATE NOCASE) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (rt1.c3 IN ()) THEN CAST(rt1.c5 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c5)GLOB(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (rt1.c3 IN ()) THEN CAST(rt1.c5 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((rt1.c5)GLOB(rt1.c2)) COLLATE NOCASE) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN (rt1.c3 IN ()) THEN CAST(rt1.c5 AS TEXT) ELSE (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c4)))AND(((rt0.c3)<>(rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(NULL)))AND(rt0.c2)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN (rt0.c4)))AND(((rt0.c3)!=(rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(NULL)))AND(rt0.c2)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c4)))AND(((rt0.c3)<>(rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(NULL)))AND(rt0.c2)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN (rt0.c4)))AND(((rt0.c3)!=(rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(NULL)))AND(rt0.c2)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c4)))AND(((rt0.c3)<>(rt0.c1)))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(NULL)))AND(rt0.c2)))AND(rt0.c4)))));
SELECT * FROM rt0, rt1 WHERE ((CASE rt0.c1  WHEN NULL THEN rt1.c5 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 END IN ((((rt0.c2)) BETWEEN ((rt1.c5)) AND ((rt0.c3)))))) ORDER BY rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN NULL THEN rt1.c5 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 END IN ((((rt0.c2)) BETWEEN ((rt1.c5)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c3 DESC);
SELECT * FROM rt0, rt1 WHERE ((CASE rt0.c1  WHEN NULL THEN rt1.c5 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 END IN ((((rt0.c2)) BETWEEN ((rt1.c5)) AND ((rt0.c3)))))) ORDER BY rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN NULL THEN rt1.c5 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 END IN ((((rt0.c2)) BETWEEN ((rt1.c5)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c3 DESC);
SELECT * FROM rt0, rt1 WHERE ((CASE rt0.c1  WHEN NULL THEN rt1.c5 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c1 END IN ((((rt0.c2)) BETWEEN ((rt1.c5)) AND ((rt0.c3)))))) ORDER BY rt0.c3 DESC;
SELECT ALL * FROM rt0, rt1 WHERE (((((((((rt1.c5 COLLATE BINARY)OR(((rt1.c6)>>(rt1.c0)))))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c4, rt1.c4, 0Xc0aaeb7))<=((x'', rt1.c4, rt1.c5))))))OR((~ (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c5 COLLATE BINARY)OR(((rt1.c6)>>(rt1.c0)))))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c4, rt1.c4, 0Xc0aaeb7))<=((x'', rt1.c4, rt1.c5))))))OR((~ (rt1.c5))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((rt1.c5 COLLATE BINARY)OR(((rt1.c6)>>(rt1.c0)))))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c4, rt1.c4, 0Xc0aaeb7))<=((x'', rt1.c4, rt1.c5))))))OR((~ (rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c5 COLLATE BINARY)OR(((rt1.c6)>>(rt1.c0)))))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c4, rt1.c4, 0Xc0aaeb7))<=((x'', rt1.c4, rt1.c5))))))OR((~ (rt1.c5))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((rt1.c5 COLLATE BINARY)OR(((rt1.c6)>>(rt1.c0)))))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c4, rt1.c4, 0Xc0aaeb7))<=((x'', rt1.c4, rt1.c5))))))OR((~ (rt1.c5)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (load_extension(rt1.c0));
SELECT SUM(count) FROM (SELECT ((load_extension(rt1.c0)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (load_extension(rt1.c0));
SELECT SUM(count) FROM (SELECT ((load_extension(rt1.c0)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE ((rt1.c0)<=(rt1.c1))  WHEN (NOT (rt1.c6)) THEN rt1.c5 COLLATE RTRIM WHEN rt1.c6 THEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c6)) WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN (- ('-623161807')) ELSE (- (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0)<=(rt1.c1))  WHEN (NOT (rt1.c6)) THEN rt1.c5 COLLATE RTRIM WHEN rt1.c6 THEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c6)) WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN (- ('-623161807')) ELSE (- (rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE ((rt1.c0)<=(rt1.c1))  WHEN (NOT (rt1.c6)) THEN rt1.c5 COLLATE RTRIM WHEN rt1.c6 THEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c6)) WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN (- ('-623161807')) ELSE (- (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0)<=(rt1.c1))  WHEN (NOT (rt1.c6)) THEN rt1.c5 COLLATE RTRIM WHEN rt1.c6 THEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c6)) WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN (- ('-623161807')) ELSE (- (rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CASE ((rt1.c0)<=(rt1.c1))  WHEN (NOT (rt1.c6)) THEN rt1.c5 COLLATE RTRIM WHEN rt1.c6 THEN ((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c6)) WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN (- ('-623161807')) ELSE (- (rt1.c0)) END);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c6)=(rt1.c2))) NOT BETWEEN (0.8657502580081785) AND ((vt0.c0 IN ())))) ORDER BY (~ (((rt1.c6)LIKE(rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6)=(rt1.c2))) NOT BETWEEN (0.8657502580081785) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ (((rt1.c6)LIKE(rt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c6)=(rt1.c2))) NOT BETWEEN (0.8657502580081785) AND ((vt0.c0 IN ())))) ORDER BY (~ (((rt1.c6)LIKE(rt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6)=(rt1.c2))) NOT BETWEEN (0.8657502580081785) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ (((rt1.c6)LIKE(rt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c6)=(rt1.c2))) NOT BETWEEN (0.8657502580081785) AND ((vt0.c0 IN ())))) ORDER BY (~ (((rt1.c6)LIKE(rt1.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0) IS TRUE))))OR((((rt0.c3, rt0.c0, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0) IS TRUE))))OR((((rt0.c3, rt0.c0, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0) IS TRUE))))OR((((rt0.c3, rt0.c0, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0) IS TRUE))))OR((((rt0.c3, rt0.c0, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0) IS TRUE))))OR((((rt0.c3, rt0.c0, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c3 END AS TEXT)) ORDER BY (((((+ (rt1.c0)))AND((+ (rt1.c2)))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt1.c1)))) ASC  NULLS LAST, ((rt1.c5)LIKE(CASE rt0.c0  WHEN rt1.c4 THEN NULL END)) ASC  NULLS LAST, CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c4 END  WHEN CASE 0X7fffffffffffffff  WHEN rt1.c1 THEN rt1.c4 WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt1.c6 END THEN CAST(rt0.c2 AS BLOB) ELSE NULL END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c3 END AS TEXT)) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((((+ (rt1.c0)))AND((+ (rt1.c2)))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt1.c1)))) ASC  NULLS LAST, ((rt1.c5)LIKE(CASE rt0.c0  WHEN rt1.c4 THEN NULL END)) ASC  NULLS LAST, CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c4 END  WHEN CASE 0X7fffffffffffffff  WHEN rt1.c1 THEN rt1.c4 WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt1.c6 END THEN CAST(rt0.c2 AS BLOB) ELSE NULL END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c3 END AS TEXT)) ORDER BY (((((+ (rt1.c0)))AND((+ (rt1.c2)))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt1.c1)))) ASC  NULLS LAST, ((rt1.c5)LIKE(CASE rt0.c0  WHEN rt1.c4 THEN NULL END)) ASC  NULLS LAST, CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c4 END  WHEN CASE 0X7fffffffffffffff  WHEN rt1.c1 THEN rt1.c4 WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt1.c6 END THEN CAST(rt0.c2 AS BLOB) ELSE NULL END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c3 END AS TEXT)) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((((+ (rt1.c0)))AND((+ (rt1.c2)))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt1.c1)))) ASC  NULLS LAST, ((rt1.c5)LIKE(CASE rt0.c0  WHEN rt1.c4 THEN NULL END)) ASC  NULLS LAST, CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c4 END  WHEN CASE 0X7fffffffffffffff  WHEN rt1.c1 THEN rt1.c4 WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt1.c6 END THEN CAST(rt0.c2 AS BLOB) ELSE NULL END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c3 END AS TEXT)) ORDER BY (((((+ (rt1.c0)))AND((+ (rt1.c2)))))AND(((((rt0.c1)AND(rt1.c0)))AND(rt1.c1)))) ASC  NULLS LAST, ((rt1.c5)LIKE(CASE rt0.c0  WHEN rt1.c4 THEN NULL END)) ASC  NULLS LAST, CASE CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c4 END  WHEN CASE 0X7fffffffffffffff  WHEN rt1.c1 THEN rt1.c4 WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt1.c6 END THEN CAST(rt0.c2 AS BLOB) ELSE NULL END ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (rt1.c2)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (rt1.c2)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (rt1.c2)));
SELECT * FROM rt1, vt0 WHERE ((((((+ (rt1.c2)))AND(((rt1.c5) NOT BETWEEN (rt1.c6) AND (vt0.c0)))))AND(rt1.c5))) ORDER BY ((((rt1.c3) NOT NULL))<=(((rt1.c6)+('1512238777')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (rt1.c2)))AND(((rt1.c5) NOT BETWEEN (rt1.c6) AND (vt0.c0)))))AND(rt1.c5))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c3) NOT NULL))<=(((rt1.c6)+('1512238777')))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE ((((((+ (rt1.c2)))AND(((rt1.c5) NOT BETWEEN (rt1.c6) AND (vt0.c0)))))AND(rt1.c5))) ORDER BY ((((rt1.c3) NOT NULL))<=(((rt1.c6)+('1512238777')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (rt1.c2)))AND(((rt1.c5) NOT BETWEEN (rt1.c6) AND (vt0.c0)))))AND(rt1.c5))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c3) NOT NULL))<=(((rt1.c6)+('1512238777')))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE ((((((+ (rt1.c2)))AND(((rt1.c5) NOT BETWEEN (rt1.c6) AND (vt0.c0)))))AND(rt1.c5))) ORDER BY ((((rt1.c3) NOT NULL))<=(((rt1.c6)+('1512238777')))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((('1752717685' IN (rt1.c1, rt1.c1))) NOT BETWEEN (((((((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c6))))) ORDER BY ((((rt1.c6) NOT NULL))<(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (((rt1.c6)) NOT BETWEEN ((CASE rt1.c4  WHEN x'a6ff' THEN rt1.c5 ELSE rt1.c5 END)) AND ((CAST(rt1.c5 AS INTEGER))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c6)))) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1))) AND (CASE WHEN rt1.c1 THEN NULL END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('1752717685' IN (rt1.c1, rt1.c1))) NOT BETWEEN (((((((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c6))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c6) NOT NULL))<(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (((rt1.c6)) NOT BETWEEN ((CASE rt1.c4  WHEN x'a6ff' THEN rt1.c5 ELSE rt1.c5 END)) AND ((CAST(rt1.c5 AS INTEGER))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c6)))) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1))) AND (CASE WHEN rt1.c1 THEN NULL END)) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((('1752717685' IN (rt1.c1, rt1.c1))) NOT BETWEEN (((((((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c6))))) ORDER BY ((((rt1.c6) NOT NULL))<(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (((rt1.c6)) NOT BETWEEN ((CASE rt1.c4  WHEN x'a6ff' THEN rt1.c5 ELSE rt1.c5 END)) AND ((CAST(rt1.c5 AS INTEGER))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c6)))) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1))) AND (CASE WHEN rt1.c1 THEN NULL END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('1752717685' IN (rt1.c1, rt1.c1))) NOT BETWEEN (((((((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c6))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c6) NOT NULL))<(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (((rt1.c6)) NOT BETWEEN ((CASE rt1.c4  WHEN x'a6ff' THEN rt1.c5 ELSE rt1.c5 END)) AND ((CAST(rt1.c5 AS INTEGER))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c6)))) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1))) AND (CASE WHEN rt1.c1 THEN NULL END)) DESC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((('1752717685' IN (rt1.c1, rt1.c1))) NOT BETWEEN (((((((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c3))) AND (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c6))))) ORDER BY ((((rt1.c6) NOT NULL))<(CAST(rt1.c1 AS TEXT))) DESC  NULLS LAST, (((rt1.c6)) NOT BETWEEN ((CASE rt1.c4  WHEN x'a6ff' THEN rt1.c5 ELSE rt1.c5 END)) AND ((CAST(rt1.c5 AS INTEGER))))  NULLS FIRST, (((((rt1.c3)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c6)))) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1))) AND (CASE WHEN rt1.c1 THEN NULL END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((CASE rt1.c3  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (CAST(rt1.c5 AS TEXT)) AND (((rt1.c4) IS TRUE))) INNER JOIN rt0 ON CASE RTRIM(rt1.c4)  WHEN HEX(DISTINCT rt1.c4) THEN (~ (rt1.c1)) ELSE ((rt0.c3)IS(rt1.c6)) END WHERE (LOWER(DISTINCT ((rt1.c6)&(0.5376999019784691))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt1.c6)&(0.5376999019784691)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((CASE rt1.c3  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (CAST(rt1.c5 AS TEXT)) AND (((rt1.c4) IS TRUE))) INNER JOIN rt0 ON CASE RTRIM(rt1.c4)  WHEN HEX(DISTINCT rt1.c4) THEN (~ (rt1.c1)) ELSE ((rt0.c3)IS(rt1.c6)) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((CASE rt1.c3  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (CAST(rt1.c5 AS TEXT)) AND (((rt1.c4) IS TRUE))) INNER JOIN rt0 ON CASE RTRIM(rt1.c4)  WHEN HEX(DISTINCT rt1.c4) THEN (~ (rt1.c1)) ELSE ((rt0.c3)IS(rt1.c6)) END WHERE (LOWER(DISTINCT ((rt1.c6)&(0.5376999019784691))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt1.c6)&(0.5376999019784691)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((CASE rt1.c3  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (CAST(rt1.c5 AS TEXT)) AND (((rt1.c4) IS TRUE))) INNER JOIN rt0 ON CASE RTRIM(rt1.c4)  WHEN HEX(DISTINCT rt1.c4) THEN (~ (rt1.c1)) ELSE ((rt0.c3)IS(rt1.c6)) END);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE RTRIM WHERE (((TRIM(rt0.c3, vt0.c0))-((- (rt1.c1))))) ORDER BY ((rt1.c5)&(TRIM(rt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c3, vt0.c0))-((- (rt1.c1))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE RTRIM ORDER BY ((rt1.c5)&(TRIM(rt1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE RTRIM WHERE (((TRIM(rt0.c3, vt0.c0))-((- (rt1.c1))))) ORDER BY ((rt1.c5)&(TRIM(rt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(rt0.c3, vt0.c0))-((- (rt1.c1))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE RTRIM ORDER BY ((rt1.c5)&(TRIM(rt1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE RTRIM WHERE (((TRIM(rt0.c3, vt0.c0))-((- (rt1.c1))))) ORDER BY ((rt1.c5)&(TRIM(rt1.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (-2.36776699E8)))/(''))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (-2.36776699E8)))/(''))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (-2.36776699E8)))/(''))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (-2.36776699E8)))/(''))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (-2.36776699E8)))/(''))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((rt1.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c6))) COLLATE RTRIM) ORDER BY x'', (((0.6438531438155227)) NOT BETWEEN ((rt1.c2)) AND (((('i53?thi')>>(rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c6))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY x'', (((0.6438531438155227)) NOT BETWEEN ((rt1.c2)) AND (((('i53?thi')>>(rt0.c1))))) ASC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((rt1.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c6))) COLLATE RTRIM) ORDER BY x'', (((0.6438531438155227)) NOT BETWEEN ((rt1.c2)) AND (((('i53?thi')>>(rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c6))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY x'', (((0.6438531438155227)) NOT BETWEEN ((rt1.c2)) AND (((('i53?thi')>>(rt0.c1))))) ASC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE ((((rt1.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c6))) COLLATE RTRIM) ORDER BY x'', (((0.6438531438155227)) NOT BETWEEN ((rt1.c2)) AND (((('i53?thi')>>(rt0.c1))))) ASC;
SELECT COUNT(*) FROM rt1 WHERE ('[]');
SELECT SUM(count) FROM (SELECT ALL (('[]') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('[]');
SELECT SUM(count) FROM (SELECT ALL (('[]') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ('[]');
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1)<<(rt0.c3)) COLLATE NOCASE WHERE ((((vt0.c0 IN ())) BETWEEN ((rt0.c4 IN (rt0.c0))) AND (rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((rt0.c4 IN (rt0.c0))) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1)<<(rt0.c3)) COLLATE NOCASE);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1)<<(rt0.c3)) COLLATE NOCASE WHERE ((((vt0.c0 IN ())) BETWEEN ((rt0.c4 IN (rt0.c0))) AND (rt0.c4 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((rt0.c4 IN (rt0.c0))) AND (rt0.c4 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1)<<(rt0.c3)) COLLATE NOCASE);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1)<<(rt0.c3)) COLLATE NOCASE WHERE ((((vt0.c0 IN ())) BETWEEN ((rt0.c4 IN (rt0.c0))) AND (rt0.c4 COLLATE RTRIM)));
SELECT * FROM rt1, rt0 WHERE ((((((rt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c0, rt1.c2)) AND ((rt1.c0, rt1.c3, rt0.c1))))>>(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c0, rt1.c2)) AND ((rt1.c0, rt1.c3, rt0.c1))))>>(rt0.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((((rt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c0, rt1.c2)) AND ((rt1.c0, rt1.c3, rt0.c1))))>>(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c0, rt1.c2)) AND ((rt1.c0, rt1.c3, rt0.c1))))>>(rt0.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((((rt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c0, rt1.c2)) AND ((rt1.c0, rt1.c3, rt0.c1))))>>(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.9428403868647242) WHERE (((((((((((rt0.c0)&(rt0.c3)))OR((((rt0.c3))=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c4)||(rt0.c2)))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)&(rt0.c3)))OR((((rt0.c3))=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c4)||(rt0.c2)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.9428403868647242));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.9428403868647242) WHERE (((((((((((rt0.c0)&(rt0.c3)))OR((((rt0.c3))=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c4)||(rt0.c2)))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)&(rt0.c3)))OR((((rt0.c3))=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c4)||(rt0.c2)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.9428403868647242));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.9428403868647242) WHERE (((((((((((rt0.c0)&(rt0.c3)))OR((((rt0.c3))=((vt0.c0))))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((rt0.c4)||(rt0.c2)))))OR(rt0.c2)));
SELECT * FROM rt1, vt0, rt0 WHERE ((NOT (((rt1.c3) BETWEEN (rt1.c4) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c3) BETWEEN (rt1.c4) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((NOT (((rt1.c3) BETWEEN (rt1.c4) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c3) BETWEEN (rt1.c4) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((NOT (((rt1.c3) BETWEEN (rt1.c4) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) IN ())) ORDER BY JULIANDAY(rt0.c2, STRFTIME('-1050872413', rt0.c4, rt0.c1), UNICODE(rt0.c3)) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY JULIANDAY(rt0.c2, STRFTIME('-1050872413', rt0.c4, rt0.c1), UNICODE(rt0.c3)) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) IN ())) ORDER BY JULIANDAY(rt0.c2, STRFTIME('-1050872413', rt0.c4, rt0.c1), UNICODE(rt0.c3)) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY JULIANDAY(rt0.c2, STRFTIME('-1050872413', rt0.c4, rt0.c1), UNICODE(rt0.c3)) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) IN ())) ORDER BY JULIANDAY(rt0.c2, STRFTIME('-1050872413', rt0.c4, rt0.c1), UNICODE(rt0.c3)) ASC  NULLS LAST, ((rt0.c1 COLLATE NOCASE) NOTNULL);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c2)=(rt1.c3))) NOT BETWEEN ((rt1.c2 IN ())) AND ((~ (rt1.c3))))) ORDER BY ((((((((('-869121403')OR(vt0.c0)))AND(rt1.c6)))AND(rt1.c0)))OR(rt1.c6)) IN ('4k-o!dGB')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)=(rt1.c3))) NOT BETWEEN ((rt1.c2 IN ())) AND ((~ (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((('-869121403')OR(vt0.c0)))AND(rt1.c6)))AND(rt1.c0)))OR(rt1.c6)) IN ('4k-o!dGB')) DESC);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c2)=(rt1.c3))) NOT BETWEEN ((rt1.c2 IN ())) AND ((~ (rt1.c3))))) ORDER BY ((((((((('-869121403')OR(vt0.c0)))AND(rt1.c6)))AND(rt1.c0)))OR(rt1.c6)) IN ('4k-o!dGB')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)=(rt1.c3))) NOT BETWEEN ((rt1.c2 IN ())) AND ((~ (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((('-869121403')OR(vt0.c0)))AND(rt1.c6)))AND(rt1.c0)))OR(rt1.c6)) IN ('4k-o!dGB')) DESC);
SELECT ALL * FROM rt1, vt0 WHERE (((((rt1.c2)=(rt1.c3))) NOT BETWEEN ((rt1.c2 IN ())) AND ((~ (rt1.c3))))) ORDER BY ((((((((('-869121403')OR(vt0.c0)))AND(rt1.c6)))AND(rt1.c0)))OR(rt1.c6)) IN ('4k-o!dGB')) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), NULL, (vt0.c0 IN ()), ((vt0.c0)&(' ^'))))>=((((vt0.c0)OR(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE BINARY, ((vt0.c0)AND(NULL)), json(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), NULL, (vt0.c0 IN ()), ((vt0.c0)&(' ^'))))>=((((vt0.c0)OR(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE BINARY, ((vt0.c0)AND(NULL)), json(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), NULL, (vt0.c0 IN ()), ((vt0.c0)&(' ^'))))>=((((vt0.c0)OR(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE BINARY, ((vt0.c0)AND(NULL)), json(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), NULL, (vt0.c0 IN ()), ((vt0.c0)&(' ^'))))>=((((vt0.c0)OR(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE BINARY, ((vt0.c0)AND(NULL)), json(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT NULL), NULL, (vt0.c0 IN ()), ((vt0.c0)&(' ^'))))>=((((vt0.c0)OR(vt0.c0)), ((vt0.c0) IS TRUE), vt0.c0 COLLATE BINARY, ((vt0.c0)AND(NULL)), json(vt0.c0)))));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ('-1050872413') ORDER BY CASE WHEN ((((rt0.c1)OR(rt1.c1)))AND(rt0.c4)) THEN ((rt1.c1) NOT NULL) ELSE ((((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)) END;
SELECT SUM(count) FROM (SELECT ALL (('-1050872413') IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY CASE WHEN ((((rt0.c1)OR(rt1.c1)))AND(rt0.c4)) THEN ((rt1.c1) NOT NULL) ELSE ((((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)) END);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ('-1050872413') ORDER BY CASE WHEN ((((rt0.c1)OR(rt1.c1)))AND(rt0.c4)) THEN ((rt1.c1) NOT NULL) ELSE ((((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)) END;
SELECT SUM(count) FROM (SELECT ALL (('-1050872413') IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY CASE WHEN ((((rt0.c1)OR(rt1.c1)))AND(rt0.c4)) THEN ((rt1.c1) NOT NULL) ELSE ((((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)) END);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ('-1050872413') ORDER BY CASE WHEN ((((rt0.c1)OR(rt1.c1)))AND(rt0.c4)) THEN ((rt1.c1) NOT NULL) ELSE ((((((((rt0.c3)AND(rt1.c2)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c4)) END;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (rt0.c0 IN (rt0.c4, rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c0 IN (rt0.c4, rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (rt0.c0 IN (rt0.c4, rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c0 IN (rt0.c4, rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (rt0.c0 IN (rt0.c4, rt0.c3)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c5)) NOT BETWEEN (((((rt1.c6)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((CASE rt1.c4  WHEN vt0.c0 THEN rt1.c5 ELSE rt1.c0 END))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c5)) NOT BETWEEN (((((rt1.c6)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((CASE rt1.c4  WHEN vt0.c0 THEN rt1.c5 ELSE rt1.c0 END))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c5)) NOT BETWEEN (((((rt1.c6)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((CASE rt1.c4  WHEN vt0.c0 THEN rt1.c5 ELSE rt1.c0 END))) WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c5)) NOT BETWEEN (((((rt1.c6)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((CASE rt1.c4  WHEN vt0.c0 THEN rt1.c5 ELSE rt1.c0 END))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c5)) NOT BETWEEN (((((rt1.c6)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((CASE rt1.c4  WHEN vt0.c0 THEN rt1.c5 ELSE rt1.c0 END))) WHERE (rt1.c0);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(rt1.c3 AS INTEGER) COLLATE NOCASE FULL OUTER JOIN vt0 ON x'' WHERE (((- (rt0.c3)) IN ())) ORDER BY CASE CAST(rt1.c0 AS REAL)  WHEN ((rt1.c5)<<(rt1.c5)) THEN CAST(rt1.c6 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(rt1.c3 AS INTEGER) COLLATE NOCASE FULL OUTER JOIN vt0 ON x'' ORDER BY CASE CAST(rt1.c0 AS REAL)  WHEN ((rt1.c5)<<(rt1.c5)) THEN CAST(rt1.c6 AS REAL) END ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(rt1.c3 AS INTEGER) COLLATE NOCASE FULL OUTER JOIN vt0 ON x'' WHERE (((- (rt0.c3)) IN ())) ORDER BY CASE CAST(rt1.c0 AS REAL)  WHEN ((rt1.c5)<<(rt1.c5)) THEN CAST(rt1.c6 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(rt1.c3 AS INTEGER) COLLATE NOCASE FULL OUTER JOIN vt0 ON x'' ORDER BY CASE CAST(rt1.c0 AS REAL)  WHEN ((rt1.c5)<<(rt1.c5)) THEN CAST(rt1.c6 AS REAL) END ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON CAST(rt1.c3 AS INTEGER) COLLATE NOCASE FULL OUTER JOIN vt0 ON x'' WHERE (((- (rt0.c3)) IN ())) ORDER BY CASE CAST(rt1.c0 AS REAL)  WHEN ((rt1.c5)<<(rt1.c5)) THEN CAST(rt1.c6 AS REAL) END ASC;
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((rt0.c0)<<(vt0.c0))) NOT NULL)) ORDER BY CHAR(rt1.c6 COLLATE BINARY) ASC  NULLS LAST, ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (rt1.c6 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST, ((((rt1.c1)<(rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<<(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CHAR(rt1.c6 COLLATE BINARY) ASC  NULLS LAST, ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (rt1.c6 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST, ((((rt1.c1)<(rt0.c1))) IS TRUE) ASC);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((rt0.c0)<<(vt0.c0))) NOT NULL)) ORDER BY CHAR(rt1.c6 COLLATE BINARY) ASC  NULLS LAST, ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (rt1.c6 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST, ((((rt1.c1)<(rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<<(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CHAR(rt1.c6 COLLATE BINARY) ASC  NULLS LAST, ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (rt1.c6 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST, ((((rt1.c1)<(rt0.c1))) IS TRUE) ASC);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((((rt0.c0)<<(vt0.c0))) NOT NULL)) ORDER BY CHAR(rt1.c6 COLLATE BINARY) ASC  NULLS LAST, ((UNLIKELY(DISTINCT rt0.c3)) BETWEEN (rt1.c6 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB)))  NULLS LAST, ((((rt1.c1)<(rt0.c1))) IS TRUE) ASC;
SELECT * FROM vt0 WHERE (((x'') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (((~ (rt1.c0)))>(((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))) RIGHT OUTER JOIN rt1 ON ((((rt0.c3)<>(rt1.c6))) NOT BETWEEN (IFNULL(vt0.c0, 9.56816313E8)) AND ('1512238777' COLLATE NOCASE)) WHERE (((((rt1.c4)<=(vt0.c0))) IS TRUE)) ORDER BY CASE CAST(rt1.c5 AS BLOB)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN ((((((((rt1.c4)OR(vt0.c0)))OR(rt1.c6)))AND(rt1.c6)))OR(x'')) ELSE rt1.c1 END DESC  NULLS LAST, ((((((rt0.c3)OR(NULL)))OR(((0.0972456652099013)GLOB(rt0.c2)))))OR(((rt0.c2)&(rt1.c5))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((~ (rt1.c0)))>(((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))) RIGHT OUTER JOIN rt1 ON ((((rt0.c3)<>(rt1.c6))) NOT BETWEEN (IFNULL(vt0.c0, 9.56816313E8)) AND ('1512238777' COLLATE NOCASE)) ORDER BY CASE CAST(rt1.c5 AS BLOB)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN ((((((((rt1.c4)OR(vt0.c0)))OR(rt1.c6)))AND(rt1.c6)))OR(x'')) ELSE rt1.c1 END DESC  NULLS LAST, ((((((rt0.c3)OR(NULL)))OR(((0.0972456652099013)GLOB(rt0.c2)))))OR(((rt0.c2)&(rt1.c5)))));
SELECT * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (((~ (rt1.c0)))>(((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))) RIGHT OUTER JOIN rt1 ON ((((rt0.c3)<>(rt1.c6))) NOT BETWEEN (IFNULL(vt0.c0, 9.56816313E8)) AND ('1512238777' COLLATE NOCASE)) WHERE (((((rt1.c4)<=(vt0.c0))) IS TRUE)) ORDER BY CASE CAST(rt1.c5 AS BLOB)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN ((((((((rt1.c4)OR(vt0.c0)))OR(rt1.c6)))AND(rt1.c6)))OR(x'')) ELSE rt1.c1 END DESC  NULLS LAST, ((((((rt0.c3)OR(NULL)))OR(((0.0972456652099013)GLOB(rt0.c2)))))OR(((rt0.c2)&(rt1.c5))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)<=(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((~ (rt1.c0)))>(((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))) RIGHT OUTER JOIN rt1 ON ((((rt0.c3)<>(rt1.c6))) NOT BETWEEN (IFNULL(vt0.c0, 9.56816313E8)) AND ('1512238777' COLLATE NOCASE)) ORDER BY CASE CAST(rt1.c5 AS BLOB)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN ((((((((rt1.c4)OR(vt0.c0)))OR(rt1.c6)))AND(rt1.c6)))OR(x'')) ELSE rt1.c1 END DESC  NULLS LAST, ((((((rt0.c3)OR(NULL)))OR(((0.0972456652099013)GLOB(rt0.c2)))))OR(((rt0.c2)&(rt1.c5)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON '\nX' FULL OUTER JOIN rt1 ON (~ ((((0xfffffffffa7d15d0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))) WHERE (((x'3837' COLLATE NOCASE) BETWEEN ((('1614551013')IS(rt0.c4))) AND (json_remove(rt1.c1, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'3837' COLLATE NOCASE) BETWEEN ((('1614551013')IS(rt0.c4))) AND (json_remove(rt1.c1, rt1.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '\nX' FULL OUTER JOIN rt1 ON (~ ((((0xfffffffffa7d15d0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))));
SELECT * FROM vt0 CROSS JOIN rt0 ON '\nX' FULL OUTER JOIN rt1 ON (~ ((((0xfffffffffa7d15d0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))) WHERE (((x'3837' COLLATE NOCASE) BETWEEN ((('1614551013')IS(rt0.c4))) AND (json_remove(rt1.c1, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'3837' COLLATE NOCASE) BETWEEN ((('1614551013')IS(rt0.c4))) AND (json_remove(rt1.c1, rt1.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '\nX' FULL OUTER JOIN rt1 ON (~ ((((0xfffffffffa7d15d0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))));
SELECT * FROM vt0 CROSS JOIN rt0 ON '\nX' FULL OUTER JOIN rt1 ON (~ ((((0xfffffffffa7d15d0)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))) WHERE (((x'3837' COLLATE NOCASE) BETWEEN ((('1614551013')IS(rt0.c4))) AND (json_remove(rt1.c1, rt1.c1))));
SELECT * FROM rt1, vt0, rt0 WHERE (CASE WHEN json_extract(rt0.c0, rt0.c0) THEN (rt1.c1 IN (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_extract(rt0.c0, rt0.c0) THEN (rt1.c1 IN (rt0.c1)) END) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (CASE WHEN json_extract(rt0.c0, rt0.c0) THEN (rt1.c1 IN (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_extract(rt0.c0, rt0.c0) THEN (rt1.c1 IN (rt0.c1)) END) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM vt0, rt0, rt1 WHERE ((NOT (rt0.c0))) ORDER BY ((((((((((rt0.c0)OR(rt0.c4)))OR(rt1.c3)))AND(rt1.c6)))OR(rt0.c4))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((((((((rt0.c0)OR(rt0.c4)))OR(rt1.c3)))AND(rt1.c6)))OR(rt0.c4))) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, rt0, rt1 WHERE ((NOT (rt0.c0))) ORDER BY ((((((((((rt0.c0)OR(rt0.c4)))OR(rt1.c3)))AND(rt1.c6)))OR(rt0.c4))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((((((((rt0.c0)OR(rt0.c4)))OR(rt1.c3)))AND(rt1.c6)))OR(rt0.c4))) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, rt0, rt1 WHERE ((NOT (rt0.c0))) ORDER BY ((((((((((rt0.c0)OR(rt0.c4)))OR(rt1.c3)))AND(rt1.c6)))OR(rt0.c4))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, vt0 NOT INDEXED WHERE ((((rt0.c0, rt0.c1, '956816313')) BETWEEN ((((vt0.c0)<(vt0.c0)), ((rt1.c3)LIKE(rt0.c1)), CASE rt1.c0  WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN vt0.c0 THEN rt0.c1 END)) AND ((LAST_INSERT_ROWID(), ((rt0.c1) IS FALSE), ((((rt1.c5)AND(rt0.c4)))AND(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, '956816313')) BETWEEN ((((vt0.c0)<(vt0.c0)), ((rt1.c3)LIKE(rt0.c1)), CASE rt1.c0  WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN vt0.c0 THEN rt0.c1 END)) AND ((LAST_INSERT_ROWID(), ((rt0.c1) IS FALSE), ((((rt1.c5)AND(rt0.c4)))AND(rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 NOT INDEXED WHERE ((((rt0.c0, rt0.c1, '956816313')) BETWEEN ((((vt0.c0)<(vt0.c0)), ((rt1.c3)LIKE(rt0.c1)), CASE rt1.c0  WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN vt0.c0 THEN rt0.c1 END)) AND ((LAST_INSERT_ROWID(), ((rt0.c1) IS FALSE), ((((rt1.c5)AND(rt0.c4)))AND(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, '956816313')) BETWEEN ((((vt0.c0)<(vt0.c0)), ((rt1.c3)LIKE(rt0.c1)), CASE rt1.c0  WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN vt0.c0 THEN rt0.c1 END)) AND ((LAST_INSERT_ROWID(), ((rt0.c1) IS FALSE), ((((rt1.c5)AND(rt0.c4)))AND(rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 NOT INDEXED WHERE ((((rt0.c0, rt0.c1, '956816313')) BETWEEN ((((vt0.c0)<(vt0.c0)), ((rt1.c3)LIKE(rt0.c1)), CASE rt1.c0  WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c3 WHEN vt0.c0 THEN rt0.c1 END)) AND ((LAST_INSERT_ROWID(), ((rt0.c1) IS FALSE), ((((rt1.c5)AND(rt0.c4)))AND(rt1.c2))))));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((+ (rt1.c0))) NOT BETWEEN (((vt0.c0)AND(rt0.c2))) AND ('mhYA*'))) ORDER BY ((((((rt1.c3)<=(rt1.c3)))AND(CAST('TRUE' AS REAL))))OR((('-852771480')*(rt0.c2)))) DESC  NULLS LAST, ((((rt0.c1)IS NOT('-755311794'))) IS TRUE)  NULLS LAST, ((CASE x'94c6'  WHEN rt0.c3 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN 0.44479873930375013 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((((rt1.c2)AND(0x661facd4)))AND(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0))) NOT BETWEEN (((vt0.c0)AND(rt0.c2))) AND ('mhYA*'))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((((rt1.c3)<=(rt1.c3)))AND(CAST('TRUE' AS REAL))))OR((('-852771480')*(rt0.c2)))) DESC  NULLS LAST, ((((rt0.c1)IS NOT('-755311794'))) IS TRUE)  NULLS LAST, ((CASE x'94c6'  WHEN rt0.c3 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN 0.44479873930375013 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((((rt1.c2)AND(0X661facd4)))AND(rt0.c3)))) DESC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((+ (rt1.c0))) NOT BETWEEN (((vt0.c0)AND(rt0.c2))) AND ('mhYA*'))) ORDER BY ((((((rt1.c3)<=(rt1.c3)))AND(CAST('TRUE' AS REAL))))OR((('-852771480')*(rt0.c2)))) DESC  NULLS LAST, ((((rt0.c1)IS NOT('-755311794'))) IS TRUE)  NULLS LAST, ((CASE x'94c6'  WHEN rt0.c3 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN 0.44479873930375013 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((((rt1.c2)AND(0x661facd4)))AND(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0))) NOT BETWEEN (((vt0.c0)AND(rt0.c2))) AND ('mhYA*'))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((((rt1.c3)<=(rt1.c3)))AND(CAST('TRUE' AS REAL))))OR((('-852771480')*(rt0.c2)))) DESC  NULLS LAST, ((((rt0.c1)IS NOT('-755311794'))) IS TRUE)  NULLS LAST, ((CASE x'94c6'  WHEN rt0.c3 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN 0.44479873930375013 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((((rt1.c2)AND(0X661facd4)))AND(rt0.c3)))) DESC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((+ (rt1.c0))) NOT BETWEEN (((vt0.c0)AND(rt0.c2))) AND ('mhYA*'))) ORDER BY ((((((rt1.c3)<=(rt1.c3)))AND(CAST('TRUE' AS REAL))))OR((('-852771480')*(rt0.c2)))) DESC  NULLS LAST, ((((rt0.c1)IS NOT('-755311794'))) IS TRUE)  NULLS LAST, ((CASE x'94c6'  WHEN rt0.c3 THEN NULL WHEN rt1.c4 THEN rt1.c4 WHEN 0.44479873930375013 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((((rt1.c2)AND(0x661facd4)))AND(rt0.c3)))) DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)-(rt1.c2)) IN ((rt0.c0 IN ()))) WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c0)*(rt1.c0)))) ORDER BY ((CASE rt1.c4  WHEN '0.587950221592532' THEN rt1.c5 ELSE rt1.c6 END)>>(((rt0.c1)LIKE(rt1.c2))))  NULLS FIRST, ((((((((((((rt0.c4)AND(rt1.c6)))OR(rt1.c3)))OR(rt0.c3)))OR('')))OR((NOT (rt1.c4)))))OR(((rt0.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c0)*(rt1.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)-(rt1.c2)) IN ((rt0.c0 IN ()))) ORDER BY ((CASE rt1.c4  WHEN '0.587950221592532' THEN rt1.c5 ELSE rt1.c6 END)>>(((rt0.c1)LIKE(rt1.c2))))  NULLS FIRST, ((((((((((((rt0.c4)AND(rt1.c6)))OR(rt1.c3)))OR(rt0.c3)))OR('')))OR((NOT (rt1.c4)))))OR(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)-(rt1.c2)) IN ((rt0.c0 IN ()))) WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c0)*(rt1.c0)))) ORDER BY ((CASE rt1.c4  WHEN '0.587950221592532' THEN rt1.c5 ELSE rt1.c6 END)>>(((rt0.c1)LIKE(rt1.c2))))  NULLS FIRST, ((((((((((((rt0.c4)AND(rt1.c6)))OR(rt1.c3)))OR(rt0.c3)))OR('')))OR((NOT (rt1.c4)))))OR(((rt0.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c0)*(rt1.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)-(rt1.c2)) IN ((rt0.c0 IN ()))) ORDER BY ((CASE rt1.c4  WHEN '0.587950221592532' THEN rt1.c5 ELSE rt1.c6 END)>>(((rt0.c1)LIKE(rt1.c2))))  NULLS FIRST, ((((((((((((rt0.c4)AND(rt1.c6)))OR(rt1.c3)))OR(rt0.c3)))OR('')))OR((NOT (rt1.c4)))))OR(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c4)-(rt1.c2)) IN ((rt0.c0 IN ()))) WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c0)*(rt1.c0)))) ORDER BY ((CASE rt1.c4  WHEN '0.587950221592532' THEN rt1.c5 ELSE rt1.c6 END)>>(((rt0.c1)LIKE(rt1.c2))))  NULLS FIRST, ((((((((((((rt0.c4)AND(rt1.c6)))OR(rt1.c3)))OR(rt0.c3)))OR('')))OR((NOT (rt1.c4)))))OR(((rt0.c3) NOTNULL)));
SELECT * FROM rt0, rt1 WHERE ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c4)) IN ()));
SELECT * FROM vt0, rt1 WHERE (((((rt1.c0)*(vt0.c0)))>=(0.21078466657394046)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)*(vt0.c0)))>=(0.21078466657394046))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c0)*(vt0.c0)))>=(0.21078466657394046)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)*(vt0.c0)))>=(0.21078466657394046))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((rt1.c0)*(vt0.c0)))>=(0.21078466657394046)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(DISTINCT (((('[3㎝')AND(rt0.c3)))OR(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((('[3㎝')AND(rt0.c3)))OR(rt0.c4)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(DISTINCT (((('[3㎝')AND(rt0.c3)))OR(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((('[3㎝')AND(rt0.c3)))OR(rt0.c4)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(DISTINCT (((('[3㎝')AND(rt0.c3)))OR(rt0.c4))));
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (CAST(((rt0.c1) IS TRUE) AS BLOB)) ORDER BY CASE WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END THEN 'VEB6' ELSE (rt0.c0 IN (rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END THEN 'VEB6' ELSE (rt0.c0 IN (rt0.c3)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (CAST(((rt0.c1) IS TRUE) AS BLOB)) ORDER BY CASE WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END THEN 'VEB6' ELSE (rt0.c0 IN (rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END THEN 'VEB6' ELSE (rt0.c0 IN (rt0.c3)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (CAST(((rt0.c1) IS TRUE) AS BLOB)) ORDER BY CASE WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END THEN 'VEB6' ELSE (rt0.c0 IN (rt0.c3)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) IS TRUE));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt1.c5))) BETWEEN (((rt1.c3)GLOB(rt0.c0))) AND ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt1.c5))) BETWEEN (((rt1.c3)GLOB(rt0.c0))) AND ((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt1.c5))) BETWEEN (((rt1.c3)GLOB(rt0.c0))) AND ((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt1.c5))) BETWEEN (((rt1.c3)GLOB(rt0.c0))) AND ((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt1.c5))) BETWEEN (((rt1.c3)GLOB(rt0.c0))) AND ((rt0.c4 IN ()))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4, rt0.c1, rt0.c0, rt0.c4, rt0.c2))<((rt0.c4, rt0.c1, rt0.c0, rt0.c2, x''))), ((((((((0.7885230157678107)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), rt0.c3 COLLATE RTRIM, (- (rt0.c4))))>=((((rt0.c0) IS FALSE), (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LIKE(rt0.c1, rt0.c4), LIKELIHOOD(DISTINCT rt0.c4, 0.7430201765646753), ((((rt0.c4)AND(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4, rt0.c1, rt0.c0, rt0.c4, rt0.c2))<((rt0.c4, rt0.c1, rt0.c0, rt0.c2, x''))), ((((((((0.7885230157678107)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), rt0.c3 COLLATE RTRIM, (- (rt0.c4))))>=((((rt0.c0) IS FALSE), (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LIKE(rt0.c1, rt0.c4), LIKELIHOOD(DISTINCT rt0.c4, 0.7430201765646753), ((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4, rt0.c1, rt0.c0, rt0.c4, rt0.c2))<((rt0.c4, rt0.c1, rt0.c0, rt0.c2, x''))), ((((((((0.7885230157678107)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), rt0.c3 COLLATE RTRIM, (- (rt0.c4))))>=((((rt0.c0) IS FALSE), (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LIKE(rt0.c1, rt0.c4), LIKELIHOOD(DISTINCT rt0.c4, 0.7430201765646753), ((((rt0.c4)AND(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4, rt0.c1, rt0.c0, rt0.c4, rt0.c2))<((rt0.c4, rt0.c1, rt0.c0, rt0.c2, x''))), ((((((((0.7885230157678107)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), rt0.c3 COLLATE RTRIM, (- (rt0.c4))))>=((((rt0.c0) IS FALSE), (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LIKE(rt0.c1, rt0.c4), LIKELIHOOD(DISTINCT rt0.c4, 0.7430201765646753), ((((rt0.c4)AND(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4, rt0.c1, rt0.c0, rt0.c4, rt0.c2))<((rt0.c4, rt0.c1, rt0.c0, rt0.c2, x''))), ((((((((0.7885230157678107)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), rt0.c3 COLLATE RTRIM, (- (rt0.c4))))>=((((rt0.c0) IS FALSE), (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), LIKE(rt0.c1, rt0.c4), LIKELIHOOD(DISTINCT rt0.c4, 0.7430201765646753), ((((rt0.c4)AND(rt0.c1)))OR(rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c3) BETWEEN (x'9e534052') AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (x'9e534052') AND (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c3) BETWEEN (x'9e534052') AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (x'9e534052') AND (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c3) BETWEEN (x'9e534052') AND (vt0.c0)) IN ()));
SELECT * FROM rt1 WHERE ((((rt1.c1) ISNULL) IN ())) ORDER BY ((json_remove(0xffffffffdf398410, rt1.c5))>>(rt1.c3 COLLATE BINARY))  NULLS FIRST, (((((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c1)), rt1.c3 COLLATE BINARY, rt1.c2))>((CAST(rt1.c6 AS TEXT), (- (rt1.c4)), NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((json_remove(0Xffffffffdf398410, rt1.c5))>>(rt1.c3 COLLATE BINARY))  NULLS FIRST, (((((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c1)), rt1.c3 COLLATE BINARY, rt1.c2))>((CAST(rt1.c6 AS TEXT), (- (rt1.c4)), NULL))));
SELECT * FROM rt1 WHERE ((((rt1.c1) ISNULL) IN ())) ORDER BY ((json_remove(0xffffffffdf398410, rt1.c5))>>(rt1.c3 COLLATE BINARY))  NULLS FIRST, (((((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c1)), rt1.c3 COLLATE BINARY, rt1.c2))>((CAST(rt1.c6 AS TEXT), (- (rt1.c4)), NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((json_remove(0Xffffffffdf398410, rt1.c5))>>(rt1.c3 COLLATE BINARY))  NULLS FIRST, (((((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c1)), rt1.c3 COLLATE BINARY, rt1.c2))>((CAST(rt1.c6 AS TEXT), (- (rt1.c4)), NULL))));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((rt0.c0)<<(rt0.c1)))%(((rt1.c3)>>(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c1)))%(((rt1.c3)>>(rt1.c4))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((rt0.c0)<<(rt0.c1)))%(((rt1.c3)>>(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c1)))%(((rt1.c3)>>(rt1.c4))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((rt0.c0)<<(rt0.c1)))%(((rt1.c3)>>(rt1.c4)))));
SELECT * FROM rt1, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (NULL);
SELECT * FROM rt0 NOT INDEXED WHERE (((0.2630259284859624 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.2630259284859624 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (((0.2630259284859624 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.2630259284859624 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (((0.2630259284859624 COLLATE NOCASE) BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE ((((rt0.c3)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((load_extension(rt1.c1, rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((load_extension(rt1.c1, rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE ((((rt0.c3)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((load_extension(rt1.c1, rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((load_extension(rt1.c1, rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (rt0.c0)) COLLATE BINARY) ORDER BY ((rt1.c0 COLLATE RTRIM)>=((('i53?thi')AND(rt1.c6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c0 COLLATE RTRIM)>=((('i53?thi')AND(rt1.c6))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (rt0.c0)) COLLATE BINARY) ORDER BY ((rt1.c0 COLLATE RTRIM)>=((('i53?thi')AND(rt1.c6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c0 COLLATE RTRIM)>=((('i53?thi')AND(rt1.c6))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (rt0.c0)) COLLATE BINARY) ORDER BY ((rt1.c0 COLLATE RTRIM)>=((('i53?thi')AND(rt1.c6))))  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c6)))IS NOT((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c6))))) WHERE ((- (((((((((rt1.c5)AND(vt0.c0)))OR(rt1.c3)))OR(rt1.c6)))AND(rt1.c5))))) ORDER BY '1512238777' ASC, (((~ (rt1.c2)))/(((rt1.c1)/(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((((((rt1.c5)AND(vt0.c0)))OR(rt1.c3)))OR(rt1.c6)))AND(rt1.c5))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c6)))IS NOT((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c6))))) ORDER BY '1512238777' ASC, (((~ (rt1.c2)))/(((rt1.c1)/(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c6)))IS NOT((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c6))))) WHERE ((- (((((((((rt1.c5)AND(vt0.c0)))OR(rt1.c3)))OR(rt1.c6)))AND(rt1.c5))))) ORDER BY '1512238777' ASC, (((~ (rt1.c2)))/(((rt1.c1)/(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((((((rt1.c5)AND(vt0.c0)))OR(rt1.c3)))OR(rt1.c6)))AND(rt1.c5))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c6)))IS NOT((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c6))))) ORDER BY '1512238777' ASC, (((~ (rt1.c2)))/(((rt1.c1)/(rt1.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c6)))IS NOT((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c6))))) WHERE ((- (((((((((rt1.c5)AND(vt0.c0)))OR(rt1.c3)))OR(rt1.c6)))AND(rt1.c5))))) ORDER BY '1512238777' ASC, (((~ (rt1.c2)))/(((rt1.c1)/(rt1.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON '{6]Z' FULL OUTER JOIN rt0 ON CAST(MIN(rt1.c1, rt1.c3, rt0.c1, rt0.c3) AS TEXT) WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c6)|(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt0.c0 END)))) ORDER BY ((x'1714' IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((rt1.c6)|(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON '{6]Z' FULL OUTER JOIN rt0 ON CAST(MIN(rt1.c1, rt1.c3, rt0.c1, rt0.c3) AS TEXT) ORDER BY ((x'1714' IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON '{6]Z' FULL OUTER JOIN rt0 ON CAST(MIN(rt1.c1, rt1.c3, rt0.c1, rt0.c3) AS TEXT) WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c6)|(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt0.c0 END)))) ORDER BY ((x'1714' IN ()) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((rt1.c6)|(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON '{6]Z' FULL OUTER JOIN rt0 ON CAST(MIN(rt1.c1, rt1.c3, rt0.c1, rt0.c3) AS TEXT) ORDER BY ((x'1714' IN ()) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON '{6]Z' FULL OUTER JOIN rt0 ON CAST(MIN(rt1.c1, rt1.c3, rt0.c1, rt0.c3) AS TEXT) WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c6)|(rt1.c2)))) AND ((CASE WHEN rt1.c2 THEN rt0.c0 END)))) ORDER BY ((x'1714' IN ()) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c2)))GLOB(((rt1.c0)GLOB(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c2)))GLOB(((rt1.c0)GLOB(rt1.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c2)))GLOB(((rt1.c0)GLOB(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c2)))GLOB(((rt1.c0)GLOB(rt1.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c2)))GLOB(((rt1.c0)GLOB(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 NOT INDEXED WHERE ((((((rt0.c4))>=((rt1.c3))))>(rt0.c0 COLLATE BINARY))) ORDER BY (rt0.c4 IN (((rt0.c4)=(rt0.c0)), ((vt0.c0)IS NOT(rt1.c5)), (rt1.c2 IN ())))  NULLS FIRST, ((((((((rt1.c3)AND(x'7774')))AND(rt1.c5)))AND(rt0.c1)))AND(rt1.c3)) COLLATE NOCASE, json_remove((((rt1.c4))<=((rt1.c6))), rt0.c0, rt0.c2, ((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt1.c2 ELSE vt0.c0 END, (~ (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4))>=((rt1.c3))))>(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (rt0.c4 IN (((rt0.c4)==(rt0.c0)), ((vt0.c0)IS NOT(rt1.c5)), (rt1.c2 IN ())))  NULLS FIRST, ((((((((rt1.c3)AND(x'7774')))AND(rt1.c5)))AND(rt0.c1)))AND(rt1.c3)) COLLATE NOCASE, json_remove((((rt1.c4))<=((rt1.c6))), rt0.c0, rt0.c2, ((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt1.c2 ELSE vt0.c0 END, (~ (vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 NOT INDEXED WHERE ((((((rt0.c4))>=((rt1.c3))))>(rt0.c0 COLLATE BINARY))) ORDER BY (rt0.c4 IN (((rt0.c4)=(rt0.c0)), ((vt0.c0)IS NOT(rt1.c5)), (rt1.c2 IN ())))  NULLS FIRST, ((((((((rt1.c3)AND(x'7774')))AND(rt1.c5)))AND(rt0.c1)))AND(rt1.c3)) COLLATE NOCASE, json_remove((((rt1.c4))<=((rt1.c6))), rt0.c0, rt0.c2, ((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt1.c2 ELSE vt0.c0 END, (~ (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4))>=((rt1.c3))))>(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (rt0.c4 IN (((rt0.c4)==(rt0.c0)), ((vt0.c0)IS NOT(rt1.c5)), (rt1.c2 IN ())))  NULLS FIRST, ((((((((rt1.c3)AND(x'7774')))AND(rt1.c5)))AND(rt0.c1)))AND(rt1.c3)) COLLATE NOCASE, json_remove((((rt1.c4))<=((rt1.c6))), rt0.c0, rt0.c2, ((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt1.c2 ELSE vt0.c0 END, (~ (vt0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c4))) IS TRUE)) ORDER BY rt0.c3  NULLS LAST, (- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3  NULLS LAST, (- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c4))) IS TRUE)) ORDER BY rt0.c3  NULLS LAST, (- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3  NULLS LAST, (- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((- (rt0.c4))) IS TRUE)) ORDER BY rt0.c3  NULLS LAST, (- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c5) NOT NULL))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)))))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (rt1.c3 IN (rt1.c1, vt0.c0)) ELSE 0.16394051964346135 END ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c5) NOT NULL))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (rt1.c3 IN (rt1.c1, vt0.c0)) ELSE 0.16394051964346135 END ASC, vt0.c0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c5) NOT NULL))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)))))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (rt1.c3 IN (rt1.c1, vt0.c0)) ELSE 0.16394051964346135 END ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN ((((rt1.c5) NOT NULL))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (rt1.c3 IN (rt1.c1, vt0.c0)) ELSE 0.16394051964346135 END ASC, vt0.c0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c5) NOT NULL))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c4)))))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN (rt1.c3 IN (rt1.c1, vt0.c0)) ELSE 0.16394051964346135 END ASC, vt0.c0;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, 0.49206108284512773 COLLATE RTRIM))<>(((rt1.c4 IN ()), rt0.c1, ((vt0.c0)+(rt0.c4))))) CROSS JOIN rt1 ON CASE '?{fl>'  WHEN CAST(rt0.c4 AS TEXT) THEN ((rt1.c0)AND(rt0.c2)) ELSE ((rt0.c0)<<(rt0.c4)) END WHERE ((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)) IN ())) ORDER BY (((((((((rt1.c4)AND('')))AND(rt0.c0)))AND('-755311794')))AND(rt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, 0.49206108284512773 COLLATE RTRIM))<>(((rt1.c4 IN ()), rt0.c1, ((vt0.c0)+(rt0.c4))))) CROSS JOIN rt1 ON CASE '?{fl>'  WHEN CAST(rt0.c4 AS TEXT) THEN ((rt1.c0)AND(rt0.c2)) ELSE ((rt0.c0)<<(rt0.c4)) END ORDER BY (((((((((rt1.c4)AND('')))AND(rt0.c0)))AND('-755311794')))AND(rt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, 0.49206108284512773 COLLATE RTRIM))<>(((rt1.c4 IN ()), rt0.c1, ((vt0.c0)+(rt0.c4))))) CROSS JOIN rt1 ON CASE '?{fl>'  WHEN CAST(rt0.c4 AS TEXT) THEN ((rt1.c0)AND(rt0.c2)) ELSE ((rt0.c0)<<(rt0.c4)) END WHERE ((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)) IN ())) ORDER BY (((((((((rt1.c4)AND('')))AND(rt0.c0)))AND('-755311794')))AND(rt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, 0.49206108284512773 COLLATE RTRIM))<>(((rt1.c4 IN ()), rt0.c1, ((vt0.c0)+(rt0.c4))))) CROSS JOIN rt1 ON CASE '?{fl>'  WHEN CAST(rt0.c4 AS TEXT) THEN ((rt1.c0)AND(rt0.c2)) ELSE ((rt0.c0)<<(rt0.c4)) END ORDER BY (((((((((rt1.c4)AND('')))AND(rt0.c0)))AND('-755311794')))AND(rt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, 0.49206108284512773 COLLATE RTRIM))<>(((rt1.c4 IN ()), rt0.c1, ((vt0.c0)+(rt0.c4))))) CROSS JOIN rt1 ON CASE '?{fl>'  WHEN CAST(rt0.c4 AS TEXT) THEN ((rt1.c0)AND(rt0.c2)) ELSE ((rt0.c0)<<(rt0.c4)) END WHERE ((((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)) IN ())) ORDER BY (((((((((rt1.c4)AND('')))AND(rt0.c0)))AND('-755311794')))AND(rt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((INSTR(rt1.c5, rt0.c1) IN (0.6873499922123445))) ORDER BY (LIKELY(rt1.c5) IN ()) ASC  NULLS LAST, CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((INSTR(rt1.c5, rt0.c1) IN (0.6873499922123445))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (LIKELY(rt1.c5) IN ()) ASC  NULLS LAST, CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((INSTR(rt1.c5, rt0.c1) IN (0.6873499922123445))) ORDER BY (LIKELY(rt1.c5) IN ()) ASC  NULLS LAST, CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((INSTR(rt1.c5, rt0.c1) IN (0.6873499922123445))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (LIKELY(rt1.c5) IN ()) ASC  NULLS LAST, CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((INSTR(rt1.c5, rt0.c1) IN (0.6873499922123445))) ORDER BY (LIKELY(rt1.c5) IN ()) ASC  NULLS LAST, CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((((x'81bc7b37') NOT BETWEEN (rt0.c2) AND (NULL)))OR(((rt0.c1) NOTNULL))))AND(((rt0.c0)OR(rt0.c2))))) ORDER BY (((((rt0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, 0xffffffffdadb4e31, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c3, 0.9667071572877308, rt0.c4, rt0.c3, rt0.c0, rt0.c3, rt0.c4)))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, rt0.c3)) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((((((x'81bc7b37') NOT BETWEEN (rt0.c2) AND (NULL)))OR(((rt0.c1) NOTNULL))))AND(((rt0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, 0xffffffffdadb4e31, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c3, 0.9667071572877308, rt0.c4, rt0.c3, rt0.c0, rt0.c3, rt0.c4)))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, rt0.c3)) AND ((rt0.c1 IN ()))));
SELECT * FROM vt0, rt0 WHERE (((((((x'81bc7b37') NOT BETWEEN (rt0.c2) AND (NULL)))OR(((rt0.c1) NOTNULL))))AND(((rt0.c0)OR(rt0.c2))))) ORDER BY (((((rt0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, 0xffffffffdadb4e31, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c3, 0.9667071572877308, rt0.c4, rt0.c3, rt0.c0, rt0.c3, rt0.c4)))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, rt0.c3)) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((((((x'81bc7b37') NOT BETWEEN (rt0.c2) AND (NULL)))OR(((rt0.c1) NOTNULL))))AND(((rt0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, 0xffffffffdadb4e31, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c3, 0.9667071572877308, rt0.c4, rt0.c3, rt0.c0, rt0.c3, rt0.c4)))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, rt0.c3)) AND ((rt0.c1 IN ()))));
SELECT * FROM vt0, rt0 WHERE (((((((x'81bc7b37') NOT BETWEEN (rt0.c2) AND (NULL)))OR(((rt0.c1) NOTNULL))))AND(((rt0.c0)OR(rt0.c2))))) ORDER BY (((((rt0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, 0xffffffffdadb4e31, rt0.c0, rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c3, 0.9667071572877308, rt0.c4, rt0.c3, rt0.c0, rt0.c3, rt0.c4)))) NOT BETWEEN (IFNULL(DISTINCT vt0.c0, rt0.c3)) AND ((rt0.c1 IN ())));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(((rt0.c0)+(rt0.c2)))))AND((('mOAoC')||(rt0.c2))))) ORDER BY rt0.c2 DESC, 1.512238777E9;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c0)+(rt0.c2)))))AND((('mOAoC')||(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, 1.512238777E9);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(((rt0.c0)+(rt0.c2)))))AND((('mOAoC')||(rt0.c2))))) ORDER BY rt0.c2 DESC, 1.512238777E9;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c0)+(rt0.c2)))))AND((('mOAoC')||(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, 1.512238777E9);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(((rt0.c0)+(rt0.c2)))))AND((('mOAoC')||(rt0.c2))))) ORDER BY rt0.c2 DESC, 1.512238777E9;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((((((rt0.c3 IN (rt0.c2)))OR((((rt0.c3))==((rt0.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c2 COLLATE BINARY)))AND(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN (rt0.c2)))OR((((rt0.c3))=((rt0.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c2 COLLATE BINARY)))AND(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((((((rt0.c3 IN (rt0.c2)))OR((((rt0.c3))==((rt0.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c2 COLLATE BINARY)))AND(CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c3 IN (rt0.c2)))OR((((rt0.c3))=((rt0.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c2 COLLATE BINARY)))AND(CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((((((rt0.c3 IN (rt0.c2)))OR((((rt0.c3))==((rt0.c0))))))OR(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c2 COLLATE BINARY)))AND(CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((TOTAL_CHANGES())OR(CASE WHEN rt1.c3 THEN rt0.c3 END)))AND(((rt1.c6)>>(rt1.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TOTAL_CHANGES())OR(CASE WHEN rt1.c3 THEN rt0.c3 END)))AND(((rt1.c6)>>(rt1.c6))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((TOTAL_CHANGES())OR(CASE WHEN rt1.c3 THEN rt0.c3 END)))AND(((rt1.c6)>>(rt1.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TOTAL_CHANGES())OR(CASE WHEN rt1.c3 THEN rt0.c3 END)))AND(((rt1.c6)>>(rt1.c6))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((TOTAL_CHANGES())OR(CASE WHEN rt1.c3 THEN rt0.c3 END)))AND(((rt1.c6)>>(rt1.c6)))));
SELECT ALL * FROM rt1 WHERE (rt1.c6 COLLATE BINARY) ORDER BY 456792407 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c6 COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY 456792407 ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c6 COLLATE BINARY) ORDER BY 456792407 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c6 COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY 456792407 ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1 WHERE ((((rt1.c4)) BETWEEN ((CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END)) AND ((CAST(rt1.c2 AS INTEGER))))) ORDER BY ((((rt1.c5) IS TRUE)) IS FALSE) DESC  NULLS LAST, x'a086' DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END)) AND ((CAST(rt1.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((rt1.c5) IS TRUE)) IS FALSE) DESC  NULLS LAST, x'a086' DESC);
SELECT * FROM rt0, vt0, rt1 WHERE ((((rt1.c4)) BETWEEN ((CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END)) AND ((CAST(rt1.c2 AS INTEGER))))) ORDER BY ((((rt1.c5) IS TRUE)) IS FALSE) DESC  NULLS LAST, x'a086' DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END)) AND ((CAST(rt1.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((rt1.c5) IS TRUE)) IS FALSE) DESC  NULLS LAST, x'a086' DESC);
SELECT * FROM rt0, vt0, rt1 WHERE ((((rt1.c4)) BETWEEN ((CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END)) AND ((CAST(rt1.c2 AS INTEGER))))) ORDER BY ((((rt1.c5) IS TRUE)) IS FALSE) DESC  NULLS LAST, x'a086' DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE x''  WHEN (rt0.c4 IN ()) THEN CAST('-250204058' AS INTEGER) ELSE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (rt0.c4 IN ()) THEN CAST('-250204058' AS INTEGER) ELSE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE x''  WHEN (rt0.c4 IN ()) THEN CAST('-250204058' AS INTEGER) ELSE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (rt0.c4 IN ()) THEN CAST('-250204058' AS INTEGER) ELSE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE x''  WHEN (rt0.c4 IN ()) THEN CAST('-250204058' AS INTEGER) ELSE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)) END);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CAST('1185083760' AS REAL) WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST('1185083760' AS REAL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CAST('1185083760' AS REAL) WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST('1185083760' AS REAL));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CAST('1185083760' AS REAL) WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c0) ORDER BY (((((rt1.c3)OR(rt1.c0)))AND(rt1.c5)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c3)OR(rt1.c0)))AND(rt1.c5)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c0) ORDER BY (((((rt1.c3)OR(rt1.c0)))AND(rt1.c5)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c3)OR(rt1.c0)))AND(rt1.c5)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c0) ORDER BY (((((rt1.c3)OR(rt1.c0)))AND(rt1.c5)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt1.c4, x'', rt0.c1)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((vt0.c0))), CAST(rt0.c4 AS INTEGER), vt0.c0 COLLATE BINARY)) AND ((CAST(rt1.c6 AS BLOB), CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 WHEN 0.15826458178451974 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 ELSE NULL END, CASE rt1.c6  WHEN rt1.c6 THEN rt1.c6 ELSE rt1.c1 END)))) ORDER BY rt1.c5, CAST(rt1.c1 AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4, x'', rt0.c1)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((vt0.c0))), CAST(rt0.c4 AS INTEGER), vt0.c0 COLLATE BINARY)) AND ((CAST(rt1.c6 AS BLOB), CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 WHEN 0.15826458178451974 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 ELSE NULL END, CASE rt1.c6  WHEN rt1.c6 THEN rt1.c6 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY rt1.c5, CAST(rt1.c1 AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt1.c4, x'', rt0.c1)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((vt0.c0))), CAST(rt0.c4 AS INTEGER), vt0.c0 COLLATE BINARY)) AND ((CAST(rt1.c6 AS BLOB), CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 WHEN 0.15826458178451974 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 ELSE NULL END, CASE rt1.c6  WHEN rt1.c6 THEN rt1.c6 ELSE rt1.c1 END)))) ORDER BY rt1.c5, CAST(rt1.c1 AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c4, x'', rt0.c1)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((vt0.c0))), CAST(rt0.c4 AS INTEGER), vt0.c0 COLLATE BINARY)) AND ((CAST(rt1.c6 AS BLOB), CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 WHEN 0.15826458178451974 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 ELSE NULL END, CASE rt1.c6  WHEN rt1.c6 THEN rt1.c6 ELSE rt1.c1 END)))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY rt1.c5, CAST(rt1.c1 AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt1.c4, x'', rt0.c1)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((vt0.c0))), CAST(rt0.c4 AS INTEGER), vt0.c0 COLLATE BINARY)) AND ((CAST(rt1.c6 AS BLOB), CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 WHEN 0.15826458178451974 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c2 ELSE NULL END, CASE rt1.c6  WHEN rt1.c6 THEN rt1.c6 ELSE rt1.c1 END)))) ORDER BY rt1.c5, CAST(rt1.c1 AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0))>((vt0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c1)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0))>((vt0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c1)))) AND (NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0))>((vt0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c1)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0))>((vt0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c1)))) AND (NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3))) BETWEEN ((((rt0.c3, rt0.c1, rt0.c0, rt0.c2, vt0.c0))>((vt0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c1)))) AND (NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))!=((vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((TRIM(rt0.c4, rt0.c0))AND((((rt0.c1, rt0.c1, rt0.c4)) BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c4))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c1)))))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))))OR((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((TRIM(rt0.c4, rt0.c0))AND((((rt0.c1, rt0.c1, rt0.c4)) BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c4))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c1)))))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((TRIM(rt0.c4, rt0.c0))AND((((rt0.c1, rt0.c1, rt0.c4)) BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c4))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c1)))))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))))OR((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((TRIM(rt0.c4, rt0.c0))AND((((rt0.c1, rt0.c1, rt0.c4)) BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c4))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c1)))))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((TRIM(rt0.c4, rt0.c0))AND((((rt0.c1, rt0.c1, rt0.c4)) BETWEEN ((vt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c4))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c1)))))AND(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))))OR((NOT (rt0.c2)))));
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN (rt0.c4) AND (CASE rt1.c3  WHEN rt0.c3 THEN rt1.c2 END))) ORDER BY LTRIM(rt0.c4) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN (rt0.c4) AND (CASE rt1.c3  WHEN rt0.c3 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY LTRIM(rt0.c4) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN (rt0.c4) AND (CASE rt1.c3  WHEN rt0.c3 THEN rt1.c2 END))) ORDER BY LTRIM(rt0.c4) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN (rt0.c4) AND (CASE rt1.c3  WHEN rt0.c3 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY LTRIM(rt0.c4) COLLATE RTRIM DESC);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN (rt0.c4) AND (CASE rt1.c3  WHEN rt0.c3 THEN rt1.c2 END))) ORDER BY LTRIM(rt0.c4) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) WHERE (CAST('8L' AS BLOB)) ORDER BY ((UNLIKELY(DISTINCT '-921722293')) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST('8L' AS BLOB)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) ORDER BY ((UNLIKELY(DISTINCT '-921722293')) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) WHERE (CAST('8L' AS BLOB)) ORDER BY ((UNLIKELY(DISTINCT '-921722293')) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST('8L' AS BLOB)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) ORDER BY ((UNLIKELY(DISTINCT '-921722293')) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c1 AS TEXT) IN ()) WHERE (CAST('8L' AS BLOB)) ORDER BY ((UNLIKELY(DISTINCT '-921722293')) NOT NULL);
SELECT ALL * FROM rt0, rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)) THEN (((rt1.c2))>=((rt1.c4))) ELSE ((rt0.c0)||(rt1.c4)) END WHERE (RTRIM(((rt0.c2)IS(rt1.c2)))) ORDER BY 0.41856617579535493;
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt0.c2)IS(rt1.c2)))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)) THEN (((rt1.c2))>=((rt1.c4))) ELSE ((rt0.c0)||(rt1.c4)) END ORDER BY 0.41856617579535493);
SELECT ALL * FROM rt0, rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)) THEN (((rt1.c2))>=((rt1.c4))) ELSE ((rt0.c0)||(rt1.c4)) END WHERE (RTRIM(((rt0.c2)IS(rt1.c2)))) ORDER BY 0.41856617579535493;
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt0.c2)IS(rt1.c2)))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)) THEN (((rt1.c2))>=((rt1.c4))) ELSE ((rt0.c0)||(rt1.c4)) END ORDER BY 0.41856617579535493);
SELECT ALL * FROM rt0, rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)) THEN (((rt1.c2))>=((rt1.c4))) ELSE ((rt0.c0)||(rt1.c4)) END WHERE (RTRIM(((rt0.c2)IS(rt1.c2)))) ORDER BY 0.41856617579535493;
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((json_array(vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json_array(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((json_array(vt0.c0, vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json_array(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((json_array(vt0.c0, vt0.c0) IN ()));
SELECT * FROM rt0, vt0 WHERE (TRIM(x'')) ORDER BY NULLIF(((((0.0972456652099013)OR(vt0.c0)))OR(rt0.c1)), NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(x'')) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULLIF(((((0.0972456652099013)OR(vt0.c0)))OR(rt0.c1)), NULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (TRIM(x'')) ORDER BY NULLIF(((((0.0972456652099013)OR(vt0.c0)))OR(rt0.c1)), NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(x'')) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULLIF(((((0.0972456652099013)OR(vt0.c0)))OR(rt0.c1)), NULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (TRIM(x'')) ORDER BY NULLIF(((((0.0972456652099013)OR(vt0.c0)))OR(rt0.c1)), NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (9.56816313E8) ORDER BY (- (((rt0.c2)=(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((9.56816313E8) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (- (((rt0.c2)=(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (9.56816313E8) ORDER BY (- (((rt0.c2)=(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((9.56816313E8) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (- (((rt0.c2)=(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (9.56816313E8) ORDER BY (- (((rt0.c2)=(rt1.c0))));
SELECT ALL * FROM vt0, rt0 INNER JOIN rt1 ON (((NULL)) BETWEEN ((((vt0.c0) ISNULL))) AND ((rt1.c5 COLLATE RTRIM))) WHERE ((+ (CAST(-34609016 AS INTEGER)))) ORDER BY ((((((rt1.c1)>=(rt1.c2)))OR((~ (rt1.c5)))))AND((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(-34609016 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON (((NULL)) BETWEEN ((((vt0.c0) ISNULL))) AND ((rt1.c5 COLLATE RTRIM))) ORDER BY ((((((rt1.c1)>=(rt1.c2)))OR((~ (rt1.c5)))))AND((rt1.c2 IN ()))) DESC);
SELECT ALL * FROM vt0, rt0 INNER JOIN rt1 ON (((NULL)) BETWEEN ((((vt0.c0) ISNULL))) AND ((rt1.c5 COLLATE RTRIM))) WHERE ((+ (CAST(-34609016 AS INTEGER)))) ORDER BY ((((((rt1.c1)>=(rt1.c2)))OR((~ (rt1.c5)))))AND((rt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(-34609016 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON (((NULL)) BETWEEN ((((vt0.c0) ISNULL))) AND ((rt1.c5 COLLATE RTRIM))) ORDER BY ((((((rt1.c1)>=(rt1.c2)))OR((~ (rt1.c5)))))AND((rt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (vt0.c0);
SELECT * FROM rt0, rt1, vt0 WHERE (rt1.c6);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c6) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (rt1.c6);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c6) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (rt1.c6);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)/(((((vt0.c0)OR(-869121403)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(((((vt0.c0)OR(-869121403)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)/(((((vt0.c0)OR(-869121403)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(((((vt0.c0)OR(-869121403)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0)/(((((vt0.c0)OR(-869121403)))AND(vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt1.c2)==(NULL))  WHEN x'' THEN CASE rt0.c4  WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END END RIGHT OUTER JOIN rt1 ON (+ (((rt0.c2) NOT NULL))) WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c3))GLOB(((rt1.c0) NOT NULL)))) ORDER BY ((CAST(rt0.c3 AS TEXT))>(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST, ((((NOT (rt1.c5))))==((((rt1.c0)<=(rt0.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(rt0.c3))GLOB(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt1.c2)=(NULL))  WHEN x'' THEN CASE rt0.c4  WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END END RIGHT OUTER JOIN rt1 ON (+ (((rt0.c2) NOT NULL))) ORDER BY ((CAST(rt0.c3 AS TEXT))>(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST, ((((NOT (rt1.c5))))==((((rt1.c0)<=(rt0.c3))))) ASC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt1.c2)==(NULL))  WHEN x'' THEN CASE rt0.c4  WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END END RIGHT OUTER JOIN rt1 ON (+ (((rt0.c2) NOT NULL))) WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c3))GLOB(((rt1.c0) NOT NULL)))) ORDER BY ((CAST(rt0.c3 AS TEXT))>(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST, ((((NOT (rt1.c5))))==((((rt1.c0)<=(rt0.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(rt0.c3))GLOB(((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt1.c2)=(NULL))  WHEN x'' THEN CASE rt0.c4  WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END END RIGHT OUTER JOIN rt1 ON (+ (((rt0.c2) NOT NULL))) ORDER BY ((CAST(rt0.c3 AS TEXT))>(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST, ((((NOT (rt1.c5))))==((((rt1.c0)<=(rt0.c3))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((((((rt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c3)))AND(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c3)))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((((((rt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c3)))AND(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c3)))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((((((rt0.c0)OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c3)))AND(rt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt1.c3) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER) WHERE (((((CASE WHEN '-755311794' THEN rt1.c2 END)AND(0.6201278287918204)))AND(((rt1.c3) IS TRUE)))) ORDER BY (((((((((~ (rt0.c1)))AND(LTRIM(rt1.c4))))OR(((rt1.c5) IS TRUE))))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))AND(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN '-755311794' THEN rt1.c2 END)AND(0.6201278287918204)))AND(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt1.c3) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER) ORDER BY (((((((((~ (rt0.c1)))AND(LTRIM(rt1.c4))))OR(((rt1.c5) IS TRUE))))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))AND(x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt1.c3) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER) WHERE (((((CASE WHEN '-755311794' THEN rt1.c2 END)AND(0.6201278287918204)))AND(((rt1.c3) IS TRUE)))) ORDER BY (((((((((~ (rt0.c1)))AND(LTRIM(rt1.c4))))OR(((rt1.c5) IS TRUE))))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))AND(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN '-755311794' THEN rt1.c2 END)AND(0.6201278287918204)))AND(((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt1.c3) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER) ORDER BY (((((((((~ (rt0.c1)))AND(LTRIM(rt1.c4))))OR(((rt1.c5) IS TRUE))))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))AND(x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON CAST(((rt1.c3) NOT BETWEEN (rt0.c1) AND (x'')) AS INTEGER) WHERE (((((CASE WHEN '-755311794' THEN rt1.c2 END)AND(0.6201278287918204)))AND(((rt1.c3) IS TRUE)))) ORDER BY (((((((((~ (rt0.c1)))AND(LTRIM(rt1.c4))))OR(((rt1.c5) IS TRUE))))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))AND(x''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c2)!=(NULL))) WHERE ((('202026679')<<(rt0.c1))) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE), (((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c4)))) BETWEEN (ABS(rt0.c3)) AND (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((('202026679')<<(rt0.c1))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c2)!=(NULL))) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE), (((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c4)))) BETWEEN (ABS(rt0.c3)) AND (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c2)!=(NULL))) WHERE ((('202026679')<<(rt0.c1))) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE), (((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c4)))) BETWEEN (ABS(rt0.c3)) AND (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((('202026679')<<(rt0.c1))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c2)!=(NULL))) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE), (((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c4)))) BETWEEN (ABS(rt0.c3)) AND (CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c2)!=(NULL))) WHERE ((('202026679')<<(rt0.c1))) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE), (((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c4)))) BETWEEN (ABS(rt0.c3)) AND (CAST(vt0.c0 AS INTEGER))) DESC;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (COALESCE(((((rt1.c5)AND(rt1.c3)))OR(rt1.c0)), LIKELIHOOD(rt0.c0, 0.36946802717927174)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((rt1.c5)AND(rt1.c3)))OR(rt1.c0)), LIKELIHOOD(rt0.c0, 0.36946802717927174))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (COALESCE(((((rt1.c5)AND(rt1.c3)))OR(rt1.c0)), LIKELIHOOD(rt0.c0, 0.36946802717927174)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((rt1.c5)AND(rt1.c3)))OR(rt1.c0)), LIKELIHOOD(rt0.c0, 0.36946802717927174))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (COALESCE(((((rt1.c5)AND(rt1.c3)))OR(rt1.c0)), LIKELIHOOD(rt0.c0, 0.36946802717927174)));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS REAL) WHERE (((rt0.c2)|(rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS REAL));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS REAL) WHERE (((rt0.c2)|(rt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS REAL));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt1.c1) IS FALSE) AS REAL) WHERE (((rt0.c2)|(rt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) NOTNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) IS TRUE) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) NOTNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) IS TRUE) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) NOTNULL)) IS TRUE) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)))) ORDER BY HEX(((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY HEX(((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)))) ORDER BY HEX(((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY HEX(((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (LIKELY(((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)))) ORDER BY HEX(((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)) BETWEEN (((((x''))<>((rt1.c6))))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)) BETWEEN (((((x''))<>((rt1.c6))))) AND ((rt1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)) BETWEEN (((((x''))<>((rt1.c6))))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)) BETWEEN (((((x''))<>((rt1.c6))))) AND ((rt1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c5)) BETWEEN (((((x''))<>((rt1.c6))))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON '588304098' LEFT OUTER JOIN rt1 ON ((((~ (rt0.c0))))=((vt0.c0))) WHERE (CASE WHEN ((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)) THEN (((rt0.c1))=((rt1.c6))) ELSE ((rt1.c5) BETWEEN (rt1.c6) AND (rt0.c4)) END) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) BETWEEN ((((0.4441480762062626, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c6, rt0.c0, NULL)) AND ((rt0.c0, rt1.c2, rt1.c4)))) AND (((rt1.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)) THEN (((rt0.c1))==((rt1.c6))) ELSE ((rt1.c5) BETWEEN (rt1.c6) AND (rt0.c4)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON '588304098' LEFT OUTER JOIN rt1 ON ((((~ (rt0.c0))))=((vt0.c0))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) BETWEEN ((((0.4441480762062626, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c6, rt0.c0, NULL)) AND ((rt0.c0, rt1.c2, rt1.c4)))) AND (((rt1.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON '588304098' LEFT OUTER JOIN rt1 ON ((((~ (rt0.c0))))=((vt0.c0))) WHERE (CASE WHEN ((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)) THEN (((rt0.c1))=((rt1.c6))) ELSE ((rt1.c5) BETWEEN (rt1.c6) AND (rt0.c4)) END) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) BETWEEN ((((0.4441480762062626, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c6, rt0.c0, NULL)) AND ((rt0.c0, rt1.c2, rt1.c4)))) AND (((rt1.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)) THEN (((rt0.c1))==((rt1.c6))) ELSE ((rt1.c5) BETWEEN (rt1.c6) AND (rt0.c4)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON '588304098' LEFT OUTER JOIN rt1 ON ((((~ (rt0.c0))))=((vt0.c0))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) BETWEEN ((((0.4441480762062626, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c6, rt0.c0, NULL)) AND ((rt0.c0, rt1.c2, rt1.c4)))) AND (((rt1.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON '588304098' LEFT OUTER JOIN rt1 ON ((((~ (rt0.c0))))=((vt0.c0))) WHERE (CASE WHEN ((((rt1.c0)OR(rt0.c2)))AND(rt1.c0)) THEN (((rt0.c1))=((rt1.c6))) ELSE ((rt1.c5) BETWEEN (rt1.c6) AND (rt0.c4)) END) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 END) BETWEEN ((((0.4441480762062626, rt1.c5, rt1.c3)) NOT BETWEEN ((rt1.c6, rt0.c0, NULL)) AND ((rt0.c0, rt1.c2, rt1.c4)))) AND (((rt1.c2) NOT NULL)));
SELECT COUNT(*) FROM rt1 WHERE ((- ((((rt1.c0))<((rt1.c2)))))) ORDER BY ((('d%'))<>((rt1.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c0))<((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((('d%'))<>((rt1.c1))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt1 WHERE ((- ((((rt1.c0))<((rt1.c2)))))) ORDER BY ((('d%'))<>((rt1.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c0))<((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((('d%'))<>((rt1.c1))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt1 WHERE ((- ((((rt1.c0))<((rt1.c2)))))) ORDER BY ((('d%'))<>((rt1.c1))) COLLATE BINARY ASC;
SELECT ALL * FROM rt1 WHERE (LOWER(']QyJ6')) ORDER BY (CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(']QyJ6')) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (LOWER(']QyJ6')) ORDER BY (CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(']QyJ6')) IS TRUE)  as count FROM rt1 ORDER BY (CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (LOWER(']QyJ6')) ORDER BY (CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END IN ())  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c2 AS TEXT) IN ())) ORDER BY (+ ((~ (rt1.c4))));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (+ ((~ (rt1.c4)))));
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c2 AS TEXT) IN ())) ORDER BY (+ ((~ (rt1.c4))));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS TEXT) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (+ ((~ (rt1.c4)))));
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c2 AS TEXT) IN ())) ORDER BY (+ ((~ (rt1.c4))));
SELECT * FROM rt0 WHERE (((rt0.c0) IS TRUE)) ORDER BY (NOT (((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) ASC, ((((((NULL)OR(rt0.c4)))AND(rt0.c3))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) ASC, ((((((NULL)OR(rt0.c4)))AND(rt0.c3))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT * FROM rt0 WHERE (((rt0.c0) IS TRUE)) ORDER BY (NOT (((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) ASC, ((((((NULL)OR(rt0.c4)))AND(rt0.c3))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) ASC, ((((((NULL)OR(rt0.c4)))AND(rt0.c3))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT * FROM rt0 WHERE (((rt0.c0) IS TRUE)) ORDER BY (NOT (((((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) ASC, ((((((NULL)OR(rt0.c4)))AND(rt0.c3))) BETWEEN (rt0.c1) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)>(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1)>(rt0.c1)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((CASE WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END)OR(((rt1.c1)|(rt1.c1)))))OR(rt1.c4)))OR(CASE rt1.c5  WHEN 0.21078466657394046 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END)))OR(json(rt1.c6))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END)OR(((rt1.c1)|(rt1.c1)))))OR(rt1.c4)))OR(CASE rt1.c5  WHEN 0.21078466657394046 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END)))OR(json(rt1.c6)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((CASE WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END)OR(((rt1.c1)|(rt1.c1)))))OR(rt1.c4)))OR(CASE rt1.c5  WHEN 0.21078466657394046 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END)))OR(json(rt1.c6))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END)OR(((rt1.c1)|(rt1.c1)))))OR(rt1.c4)))OR(CASE rt1.c5  WHEN 0.21078466657394046 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END)))OR(json(rt1.c6)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((CASE WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c2 END)OR(((rt1.c1)|(rt1.c1)))))OR(rt1.c4)))OR(CASE rt1.c5  WHEN 0.21078466657394046 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END)))OR(json(rt1.c6))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(rt1.c6 AS BLOB))LIKE(CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 END)) WHERE ((((x'' IN ()))GLOB(rt1.c1))) ORDER BY (((((rt1.c5))<((rt1.c6)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))GLOB(rt1.c1))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(rt1.c6 AS BLOB))LIKE(CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 END)) ORDER BY (((((rt1.c5))<((rt1.c6)))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(rt1.c6 AS BLOB))LIKE(CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 END)) WHERE ((((x'' IN ()))GLOB(rt1.c1))) ORDER BY (((((rt1.c5))<((rt1.c6)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))GLOB(rt1.c1))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(rt1.c6 AS BLOB))LIKE(CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 END)) ORDER BY (((((rt1.c5))<((rt1.c6)))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((CAST(rt1.c6 AS BLOB))LIKE(CASE rt1.c5  WHEN rt1.c3 THEN rt1.c2 END)) WHERE ((((x'' IN ()))GLOB(rt1.c1))) ORDER BY (((((rt1.c5))<((rt1.c6)))) ISNULL);
SELECT * FROM vt0, rt0 WHERE (-1763695955);
SELECT SUM(count) FROM (SELECT ALL ((-1763695955) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (-1763695955);
SELECT SUM(count) FROM (SELECT ALL ((-1763695955) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (-1763695955);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (NULL) ORDER BY COALESCE(CHAR(rt0.c2, rt1.c5, rt1.c4), ((((rt0.c0)AND(rt0.c3)))OR(rt1.c1)), (rt1.c0 IN ()), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) DESC  NULLS FIRST, ((LOWER('tL*S萐|'))%(((rt0.c2)!=(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY COALESCE(CHAR(rt0.c2, rt1.c5, rt1.c4), ((((rt0.c0)AND(rt0.c3)))OR(rt1.c1)), (rt1.c0 IN ()), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) DESC  NULLS FIRST, ((LOWER('tL*S萐|'))%(((rt0.c2)<>(rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (NULL) ORDER BY COALESCE(CHAR(rt0.c2, rt1.c5, rt1.c4), ((((rt0.c0)AND(rt0.c3)))OR(rt1.c1)), (rt1.c0 IN ()), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) DESC  NULLS FIRST, ((LOWER('tL*S萐|'))%(((rt0.c2)!=(rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY COALESCE(CHAR(rt0.c2, rt1.c5, rt1.c4), ((((rt0.c0)AND(rt0.c3)))OR(rt1.c1)), (rt1.c0 IN ()), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) DESC  NULLS FIRST, ((LOWER('tL*S萐|'))%(((rt0.c2)<>(rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (NULL) ORDER BY COALESCE(CHAR(rt0.c2, rt1.c5, rt1.c4), ((((rt0.c0)AND(rt0.c3)))OR(rt1.c1)), (rt1.c0 IN ()), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) DESC  NULLS FIRST, ((LOWER('tL*S萐|'))%(((rt0.c2)!=(rt1.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((+ (rt0.c2)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c3) IS TRUE))OR(UPPER(rt1.c3))))OR(((rt1.c3)>(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) IS TRUE))OR(UPPER(rt1.c3))))OR(((rt1.c3)>(rt1.c5))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c3) IS TRUE))OR(UPPER(rt1.c3))))OR(((rt1.c3)>(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) IS TRUE))OR(UPPER(rt1.c3))))OR(((rt1.c3)>(rt1.c5))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c3) IS TRUE))OR(UPPER(rt1.c3))))OR(((rt1.c3)>(rt1.c5)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND ('')))IS NOT(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND ('')))IS NOT(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND ('')))IS NOT(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND ('')))IS NOT(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND ('')))IS NOT(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((0.06731041468213617, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c2))))-(CASE rt0.c4  WHEN x'' THEN NULL ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((0.06731041468213617, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c2))))-(CASE rt0.c4  WHEN x'' THEN NULL ELSE NULL END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((0.06731041468213617, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c2))))-(CASE rt0.c4  WHEN x'' THEN NULL ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((0.06731041468213617, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c2))))-(CASE rt0.c4  WHEN x'' THEN NULL ELSE NULL END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN ((0.06731041468213617, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c4, rt0.c2))))-(CASE rt0.c4  WHEN x'' THEN NULL ELSE NULL END)));
SELECT * FROM vt0 WHERE (((('-171695977'))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY '0('  NULLS LAST, ((vt0.c0)=(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((('-171695977'))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY '0('  NULLS LAST, ((vt0.c0)=(vt0.c0)) COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (((('-171695977'))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY '0('  NULLS LAST, ((vt0.c0)=(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((('-171695977'))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY '0('  NULLS LAST, ((vt0.c0)=(vt0.c0)) COLLATE BINARY DESC);
SELECT * FROM vt0 WHERE (((('-171695977'))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY '0('  NULLS LAST, ((vt0.c0)=(vt0.c0)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<=(vt0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN (+ (rt0.c3)) END WHERE ((((rt0.c3)) NOT BETWEEN ((-250204058)) AND ((((rt0.c4)LIKE(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((-250204058)) AND ((((rt0.c4)LIKE(rt0.c2)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN (+ (rt0.c3)) END);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN (+ (rt0.c3)) END WHERE ((((rt0.c3)) NOT BETWEEN ((-250204058)) AND ((((rt0.c4)LIKE(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((-250204058)) AND ((((rt0.c4)LIKE(rt0.c2)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN (+ (rt0.c3)) END);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE (~ (rt0.c2))  WHEN ((vt0.c0) IS TRUE) THEN (+ (rt0.c3)) END WHERE ((((rt0.c3)) NOT BETWEEN ((-250204058)) AND ((((rt0.c4)LIKE(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c2 THEN ((rt0.c4)|(rt0.c3)) ELSE TYPEOF(DISTINCT rt0.c3) END WHERE (((((((rt1.c5)AND(rt1.c1)))AND(rt1.c1)))!=(rt0.c4))) ORDER BY UPPER(DISTINCT (rt1.c2 IN ())) DESC, rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5)AND(rt1.c1)))AND(rt1.c1)))<>(rt0.c4))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c2 THEN ((rt0.c4)|(rt0.c3)) ELSE TYPEOF(DISTINCT rt0.c3) END ORDER BY UPPER(DISTINCT (rt1.c2 IN ())) DESC, rt1.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c2 THEN ((rt0.c4)|(rt0.c3)) ELSE TYPEOF(DISTINCT rt0.c3) END WHERE (((((((rt1.c5)AND(rt1.c1)))AND(rt1.c1)))!=(rt0.c4))) ORDER BY UPPER(DISTINCT (rt1.c2 IN ())) DESC, rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c5)AND(rt1.c1)))AND(rt1.c1)))<>(rt0.c4))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c2 THEN ((rt0.c4)|(rt0.c3)) ELSE TYPEOF(DISTINCT rt0.c3) END ORDER BY UPPER(DISTINCT (rt1.c2 IN ())) DESC, rt1.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON CASE rt0.c0  WHEN rt0.c2 THEN ((rt0.c4)|(rt0.c3)) ELSE TYPEOF(DISTINCT rt0.c3) END WHERE (((((((rt1.c5)AND(rt1.c1)))AND(rt1.c1)))!=(rt0.c4))) ORDER BY UPPER(DISTINCT (rt1.c2 IN ())) DESC, rt1.c1 ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3) NOT BETWEEN ('-921722293') AND (rt1.c4))))>((0Xffffffffed16cb5d))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3) NOT BETWEEN ('-921722293') AND (rt1.c4))))>((0Xffffffffed16cb5d)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3) NOT BETWEEN ('-921722293') AND (rt1.c4))))>((0Xffffffffed16cb5d))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3) NOT BETWEEN ('-921722293') AND (rt1.c4))))>((0Xffffffffed16cb5d)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c3) NOT BETWEEN ('-921722293') AND (rt1.c4))))>((0Xffffffffed16cb5d))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)|(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)|(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)|(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (load_extension(((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (load_extension(((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM vt0, rt1 WHERE ((~ (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((~ (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((~ (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4)))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c0)<=(rt0.c0)))>((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c0)))>((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c0)<=(rt0.c0)))>((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c0)))>((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c0)<=(rt0.c0)))>((~ (rt0.c1)))));
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c4)&(rt0.c2)))==(rt1.c4)) WHERE (rt0.c2) ORDER BY 0.28609849571081736  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c4)&(rt0.c2)))==(rt1.c4)) ORDER BY 0.28609849571081736  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c4)&(rt0.c2)))==(rt1.c4)) WHERE (rt0.c2) ORDER BY 0.28609849571081736  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c4)&(rt0.c2)))==(rt1.c4)) ORDER BY 0.28609849571081736  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c4)&(rt0.c2)))==(rt1.c4)) WHERE (rt0.c2) ORDER BY 0.28609849571081736  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (RTRIM(LIKELIHOOD(DISTINCT rt1.c6, 0.5455420327400016)));
SELECT SUM(count) FROM (SELECT ((RTRIM(LIKELIHOOD(DISTINCT rt1.c6, 0.5455420327400016))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (RTRIM(LIKELIHOOD(DISTINCT rt1.c6, 0.5455420327400016)));
SELECT SUM(count) FROM (SELECT ((RTRIM(LIKELIHOOD(DISTINCT rt1.c6, 0.5455420327400016))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (RTRIM(LIKELIHOOD(DISTINCT rt1.c6, 0.5455420327400016)));
SELECT * FROM vt0 NOT INDEXED, rt1 WHERE (((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c5)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c5))) DESC, IFNULL(CAST(rt1.c6 AS REAL), rt1.c3), ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c5)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM(DISTINCT ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c5))) DESC, IFNULL(CAST(rt1.c6 AS REAL), rt1.c3), ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))));
SELECT * FROM vt0 NOT INDEXED, rt1 WHERE (((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c5)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c5))) DESC, IFNULL(CAST(rt1.c6 AS REAL), rt1.c3), ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c5)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM(DISTINCT ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c5))) DESC, IFNULL(CAST(rt1.c6 AS REAL), rt1.c3), ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))));
SELECT * FROM vt0 NOT INDEXED, rt1 WHERE (((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c5)) COLLATE NOCASE) ORDER BY TRIM(DISTINCT ((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c0)))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (x'') AND (rt1.c5))) DESC, IFNULL(CAST(rt1.c6 AS REAL), rt1.c3), ((((rt1.c1) NOTNULL))*(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0))));
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN x'' WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c2 THEN NULL ELSE rt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN x'' WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c2 THEN NULL ELSE rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN x'' WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c2 THEN NULL ELSE rt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN x'' WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c2 THEN NULL ELSE rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN x'' WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c2 THEN NULL ELSE rt0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c6) NOT BETWEEN (vt0.c0) AND (rt1.c5)) IN (CAST(rt0.c1 AS REAL))) WHERE ((((~ (rt0.c4))) NOT BETWEEN ((rt1.c1 IN (rt1.c4))) AND (((((rt1.c3)AND(rt1.c0)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c4))) NOT BETWEEN ((rt1.c1 IN (rt1.c4))) AND (((((rt1.c3)AND(rt1.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c6) NOT BETWEEN (vt0.c0) AND (rt1.c5)) IN (CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c6) NOT BETWEEN (vt0.c0) AND (rt1.c5)) IN (CAST(rt0.c1 AS REAL))) WHERE ((((~ (rt0.c4))) NOT BETWEEN ((rt1.c1 IN (rt1.c4))) AND (((((rt1.c3)AND(rt1.c0)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c4))) NOT BETWEEN ((rt1.c1 IN (rt1.c4))) AND (((((rt1.c3)AND(rt1.c0)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c6) NOT BETWEEN (vt0.c0) AND (rt1.c5)) IN (CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, rt1 LEFT OUTER JOIN rt0 ON (((rt1.c6) NOT BETWEEN (vt0.c0) AND (rt1.c5)) IN (CAST(rt0.c1 AS REAL))) WHERE ((((~ (rt0.c4))) NOT BETWEEN ((rt1.c1 IN (rt1.c4))) AND (((((rt1.c3)AND(rt1.c0)))AND(rt1.c1)))));
SELECT ALL * FROM rt0, rt1 WHERE ((((rt0.c0, rt1.c6, rt0.c3)) BETWEEN ((rt1.c3, ('4\F-/➤ol0' IN ()), '-549878768')) AND ((rt0.c3, ((rt1.c0) IS TRUE), rt1.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt1.c6, rt0.c3)) BETWEEN ((rt1.c3, ('4\F-/➤ol0' IN ()), '-549878768')) AND ((rt0.c3, ((rt1.c0) IS TRUE), rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((rt0.c0, rt1.c6, rt0.c3)) BETWEEN ((rt1.c3, ('4\F-/➤ol0' IN ()), '-549878768')) AND ((rt0.c3, ((rt1.c0) IS TRUE), rt1.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt1.c6, rt0.c3)) BETWEEN ((rt1.c3, ('4\F-/➤ol0' IN ()), '-549878768')) AND ((rt0.c3, ((rt1.c0) IS TRUE), rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((((rt0.c0, rt1.c6, rt0.c3)) BETWEEN ((rt1.c3, ('4\F-/➤ol0' IN ()), '-549878768')) AND ((rt0.c3, ((rt1.c0) IS TRUE), rt1.c2 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))!=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY TYPEOF(vt0.c0) COLLATE NOCASE ASC;
SELECT * FROM vt0, rt1, rt0 WHERE (UNLIKELY(DISTINCT ((rt1.c6) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt1.c6) NOTNULL))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (UNLIKELY(DISTINCT ((rt1.c6) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt1.c6) NOTNULL))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (UNLIKELY(DISTINCT ((rt1.c6) NOTNULL)));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (CASE CASE WHEN rt1.c4 THEN rt1.c4 ELSE x'' END  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL)>>(rt1.c0)) END) ORDER BY CAST(((((rt0.c0)AND(rt1.c6)))OR(rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c4 THEN rt1.c4 ELSE x'' END  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL)>>(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(((((rt0.c0)AND(rt1.c6)))OR(rt0.c1)) AS REAL));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (CASE CASE WHEN rt1.c4 THEN rt1.c4 ELSE x'' END  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL)>>(rt1.c0)) END) ORDER BY CAST(((((rt0.c0)AND(rt1.c6)))OR(rt0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c4 THEN rt1.c4 ELSE x'' END  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL)>>(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY CAST(((((rt0.c0)AND(rt1.c6)))OR(rt0.c1)) AS REAL));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (CASE CASE WHEN rt1.c4 THEN rt1.c4 ELSE x'' END  WHEN CAST(rt0.c1 AS REAL) THEN ((NULL)>>(rt1.c0)) END) ORDER BY CAST(((((rt0.c0)AND(rt1.c6)))OR(rt0.c1)) AS REAL);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((((rt1.c6 COLLATE BINARY)AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c6 COLLATE BINARY)AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((((rt1.c6 COLLATE BINARY)AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c6 COLLATE BINARY)AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (((((rt1.c6 COLLATE BINARY)AND(rt1.c1)))AND(CASE rt1.c0  WHEN rt1.c6 THEN rt1.c1 ELSE rt0.c0 END)));
SELECT * FROM vt0 WHERE ((((((NULL) IS FALSE)))>((((vt0.c0) NOT NULL))))) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)  NULLS FIRST, (~ (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) IS FALSE)))>((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)  NULLS FIRST, (~ (NULL))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((NULL) IS FALSE)))>((((vt0.c0) NOT NULL))))) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)  NULLS FIRST, (~ (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) IS FALSE)))>((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)  NULLS FIRST, (~ (NULL))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((NULL) IS FALSE)))>((((vt0.c0) NOT NULL))))) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)  NULLS FIRST, (~ (NULL))  NULLS FIRST;
SELECT * FROM rt0, rt1, vt0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (('' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (('' IN ()));
SELECT * FROM vt0, rt1 WHERE (CAST((((NULL)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) AS REAL)) ORDER BY ((((((((((((rt1.c2)AND(rt1.c6)))AND(NULL)))AND(rt1.c5)))OR(TRIM(vt0.c0))))OR((((0.5668777612282864))>=((rt1.c1))))))AND(((rt1.c5) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((rt1.c2)AND(rt1.c6)))AND(NULL)))AND(rt1.c5)))OR(TRIM(vt0.c0))))OR((((0.5668777612282864))>=((rt1.c1))))))AND(((rt1.c5) IS TRUE))) DESC);
SELECT * FROM vt0, rt1 WHERE (CAST((((NULL)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) AS REAL)) ORDER BY ((((((((((((rt1.c2)AND(rt1.c6)))AND(NULL)))AND(rt1.c5)))OR(TRIM(vt0.c0))))OR((((0.5668777612282864))>=((rt1.c1))))))AND(((rt1.c5) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((((rt1.c2)AND(rt1.c6)))AND(NULL)))AND(rt1.c5)))OR(TRIM(vt0.c0))))OR((((0.5668777612282864))>=((rt1.c1))))))AND(((rt1.c5) IS TRUE))) DESC);
SELECT * FROM vt0, rt1 WHERE (CAST((((NULL)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4))) AS REAL)) ORDER BY ((((((((((((rt1.c2)AND(rt1.c6)))AND(NULL)))AND(rt1.c5)))OR(TRIM(vt0.c0))))OR((((0.5668777612282864))>=((rt1.c1))))))AND(((rt1.c5) IS TRUE))) DESC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN TYPEOF(DISTINCT rt0.c2) THEN CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(DISTINCT rt0.c2) THEN CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN TYPEOF(DISTINCT rt0.c2) THEN CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(DISTINCT rt0.c2) THEN CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (CASE WHEN TYPEOF(DISTINCT rt0.c2) THEN CAST(rt0.c2 AS BLOB) END);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0, rt1.c0)))) AND ((UNLIKELY(rt1.c4)))) WHERE (CAST((rt1.c0 IN ()) AS NUMERIC)) ORDER BY ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN NULL WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (((rt1.c4)<(rt1.c2))) AND (rt1.c3 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0, rt1.c0)))) AND ((UNLIKELY(rt1.c4)))) ORDER BY ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN NULL WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (((rt1.c4)<(rt1.c2))) AND (rt1.c3 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0, rt1.c0)))) AND ((UNLIKELY(rt1.c4)))) WHERE (CAST((rt1.c0 IN ()) AS NUMERIC)) ORDER BY ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN NULL WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (((rt1.c4)<(rt1.c2))) AND (rt1.c3 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0, rt1.c0)))) AND ((UNLIKELY(rt1.c4)))) ORDER BY ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN NULL WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (((rt1.c4)<(rt1.c2))) AND (rt1.c3 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0, rt1.c0)))) AND ((UNLIKELY(rt1.c4)))) WHERE (CAST((rt1.c0 IN ()) AS NUMERIC)) ORDER BY ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c4 THEN NULL WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (((rt1.c4)<(rt1.c2))) AND (rt1.c3 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM rt1, rt0, vt0 WHERE ((((rt1.c3) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) ISNULL) IN ())) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE ((((rt1.c3) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) ISNULL) IN ())) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE ((((rt1.c3) ISNULL) IN ()));
SELECT * FROM rt1, rt0 WHERE (((((rt0.c1)OR(rt0.c1)))*(json_array(rt1.c6, rt0.c3)))) ORDER BY (((rt1.c5 IN ()))||(((((rt0.c3)OR(rt1.c0)))AND(rt1.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c1)))*(json_array(rt1.c6, rt0.c3)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c5 IN ()))||(((((rt0.c3)OR(rt1.c0)))AND(rt1.c5)))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c1)OR(rt0.c1)))*(json_array(rt1.c6, rt0.c3)))) ORDER BY (((rt1.c5 IN ()))||(((((rt0.c3)OR(rt1.c0)))AND(rt1.c5)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c1)))*(json_array(rt1.c6, rt0.c3)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c5 IN ()))||(((((rt0.c3)OR(rt1.c0)))AND(rt1.c5)))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c1)OR(rt0.c1)))*(json_array(rt1.c6, rt0.c3)))) ORDER BY (((rt1.c5 IN ()))||(((((rt0.c3)OR(rt1.c0)))AND(rt1.c5)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN (((rt1.c3))<((rt1.c6))) THEN ((((rt1.c3)OR(rt1.c6)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c3))<((rt1.c6))) THEN ((((rt1.c3)OR(rt1.c6)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN (((rt1.c3))<((rt1.c6))) THEN ((((rt1.c3)OR(rt1.c6)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c3))<((rt1.c6))) THEN ((((rt1.c3)OR(rt1.c6)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE WHEN (((rt1.c3))<((rt1.c6))) THEN ((((rt1.c3)OR(rt1.c6)))AND(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c5)<=(rt1.c1))  WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c5)) WHEN ((rt1.c1)<<(rt1.c1)) THEN (~ (vt0.c0)) WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c5)) THEN ((rt1.c2)|('1067966677')) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c5)<=(rt1.c1))  WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c5)) WHEN ((rt1.c1)<<(rt1.c1)) THEN (~ (vt0.c0)) WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c5)) THEN ((rt1.c2)|('1067966677')) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c5)<=(rt1.c1))  WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c5)) WHEN ((rt1.c1)<<(rt1.c1)) THEN (~ (vt0.c0)) WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c5)) THEN ((rt1.c2)|('1067966677')) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c5)<=(rt1.c1))  WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c5)) WHEN ((rt1.c1)<<(rt1.c1)) THEN (~ (vt0.c0)) WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c5)) THEN ((rt1.c2)|('1067966677')) END) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE ((rt1.c5)<=(rt1.c1))  WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c1)<=(rt1.c5)) WHEN ((rt1.c1)<<(rt1.c1)) THEN (~ (vt0.c0)) WHEN ((((rt1.c1)AND(rt1.c1)))AND(rt1.c5)) THEN ((rt1.c2)|('1067966677')) END);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c2 END)IS(CAST(x'c96d6aac' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c2 END)IS(CAST(x'c96d6aac' AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c2 END)IS(CAST(x'c96d6aac' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c2 END)IS(CAST(x'c96d6aac' AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c2 END)IS(CAST(x'c96d6aac' AS INTEGER))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((((x'', rt1.c3, rt0.c1)) NOT BETWEEN ((rt1.c2, 0X1047c31, rt1.c4)) AND ((rt0.c2, rt0.c4, rt1.c3))) AS REAL)) ORDER BY DATETIME(((((rt1.c0)OR(rt1.c2)))AND(rt0.c4)), ((rt0.c0)>(rt1.c5)), x'') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((x'', rt1.c3, rt0.c1)) NOT BETWEEN ((rt1.c2, 0X1047c31, rt1.c4)) AND ((rt0.c2, rt0.c4, rt1.c3))) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY DATETIME(((((rt1.c0)OR(rt1.c2)))AND(rt0.c4)), ((rt0.c0)>(rt1.c5)), x'') DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((((x'', rt1.c3, rt0.c1)) NOT BETWEEN ((rt1.c2, 0X1047c31, rt1.c4)) AND ((rt0.c2, rt0.c4, rt1.c3))) AS REAL)) ORDER BY DATETIME(((((rt1.c0)OR(rt1.c2)))AND(rt0.c4)), ((rt0.c0)>(rt1.c5)), x'') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((x'', rt1.c3, rt0.c1)) NOT BETWEEN ((rt1.c2, 0X1047c31, rt1.c4)) AND ((rt0.c2, rt0.c4, rt1.c3))) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY DATETIME(((((rt1.c0)OR(rt1.c2)))AND(rt0.c4)), ((rt0.c0)>(rt1.c5)), x'') DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((((x'', rt1.c3, rt0.c1)) NOT BETWEEN ((rt1.c2, 0X1047c31, rt1.c4)) AND ((rt0.c2, rt0.c4, rt1.c3))) AS REAL)) ORDER BY DATETIME(((((rt1.c0)OR(rt1.c2)))AND(rt0.c4)), ((rt0.c0)>(rt1.c5)), x'') DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((x'') BETWEEN ('-1844913330') AND (NULL)) IN ((- (vt0.c0))))) ORDER BY 0.457372495742291 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'') BETWEEN ('-1844913330') AND (NULL)) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.457372495742291 COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((x'') BETWEEN ('-1844913330') AND (NULL)) IN ((- (vt0.c0))))) ORDER BY 0.457372495742291 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'') BETWEEN ('-1844913330') AND (NULL)) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.457372495742291 COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((x'') BETWEEN ('-1844913330') AND (NULL)) IN ((- (vt0.c0))))) ORDER BY 0.457372495742291 COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC))OR((NOT (rt1.c2)))))OR(rt1.c6 COLLATE NOCASE))) ORDER BY (+ (0Xa99cb50)) COLLATE RTRIM  NULLS FIRST, (+ (TRIM(DISTINCT rt0.c4, rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c4 AS NUMERIC))OR((NOT (rt1.c2)))))OR(rt1.c6 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (0xa99cb50)) COLLATE RTRIM  NULLS FIRST, (+ (TRIM(DISTINCT rt0.c4, rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC))OR((NOT (rt1.c2)))))OR(rt1.c6 COLLATE NOCASE))) ORDER BY (+ (0Xa99cb50)) COLLATE RTRIM  NULLS FIRST, (+ (TRIM(DISTINCT rt0.c4, rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c4 AS NUMERIC))OR((NOT (rt1.c2)))))OR(rt1.c6 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (0xa99cb50)) COLLATE RTRIM  NULLS FIRST, (+ (TRIM(DISTINCT rt0.c4, rt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((~ (((rt1.c5) NOT BETWEEN (rt1.c1) AND ('托0'))))) ORDER BY (((((rt1.c4))<>((rt1.c0)))) NOT BETWEEN (((rt1.c3)*(rt0.c4))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt1.c3)))) ASC  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c5) NOT BETWEEN (rt1.c1) AND ('托0'))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((((rt1.c4))<>((rt1.c0)))) NOT BETWEEN (((rt1.c3)*(rt0.c4))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt1.c3)))) ASC  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((~ (((rt1.c5) NOT BETWEEN (rt1.c1) AND ('托0'))))) ORDER BY (((((rt1.c4))<>((rt1.c0)))) NOT BETWEEN (((rt1.c3)*(rt0.c4))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt1.c3)))) ASC  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c5) NOT BETWEEN (rt1.c1) AND ('托0'))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((((rt1.c4))<>((rt1.c0)))) NOT BETWEEN (((rt1.c3)*(rt0.c4))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt1.c3)))) ASC  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((~ (((rt1.c5) NOT BETWEEN (rt1.c1) AND ('托0'))))) ORDER BY (((((rt1.c4))<>((rt1.c0)))) NOT BETWEEN (((rt1.c3)*(rt0.c4))) AND (((((rt1.c0)OR(vt0.c0)))OR(rt1.c3)))) ASC  NULLS LAST, ((CAST(vt0.c0 AS REAL)) NOTNULL)  NULLS FIRST;
SELECT * FROM rt1, vt0 NATURAL JOIN rt0 WHERE (QUOTE(((0.5376999019784691) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) ORDER BY ((rt0.c4)IS(SQLITE_VERSION()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((QUOTE(((0.5376999019784691) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0 ORDER BY ((rt0.c4)IS(SQLITE_VERSION()))  NULLS LAST);
SELECT * FROM rt1, vt0 NATURAL JOIN rt0 WHERE (QUOTE(((0.5376999019784691) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) ORDER BY ((rt0.c4)IS(SQLITE_VERSION()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((QUOTE(((0.5376999019784691) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0 ORDER BY ((rt0.c4)IS(SQLITE_VERSION()))  NULLS LAST);
SELECT * FROM rt1, vt0 NATURAL JOIN rt0 WHERE (QUOTE(((0.5376999019784691) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) ORDER BY ((rt0.c4)IS(SQLITE_VERSION()))  NULLS LAST;
SELECT * FROM vt0, rt1, rt0 WHERE (((((- (rt0.c4))))>(((vt0.c0 IN ()))))) ORDER BY '1';
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c4))))>(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY '1');
SELECT * FROM vt0, rt1, rt0 WHERE (((((- (rt0.c4))))>(((vt0.c0 IN ()))))) ORDER BY '1';
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c4))))>(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY '1');
SELECT * FROM vt0, rt1, rt0 WHERE (((((- (rt0.c4))))>(((vt0.c0 IN ()))))) ORDER BY '1';
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS TEXT)) ORDER BY ((((vt0.c0)IS(1.614551013E9))) NOT BETWEEN (((vt0.c0)AND('177851216'))) AND ((+ (vt0.c0)))) ASC, (0Xffffffffc15cf5a3 IN ()) DESC, '-1848786079' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(1.614551013E9))) NOT BETWEEN (((vt0.c0)AND('177851216'))) AND ((+ (vt0.c0)))) ASC, (0xffffffffc15cf5a3 IN ()) DESC, '-1848786079' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS TEXT)) ORDER BY ((((vt0.c0)IS(1.614551013E9))) NOT BETWEEN (((vt0.c0)AND('177851216'))) AND ((+ (vt0.c0)))) ASC, (0Xffffffffc15cf5a3 IN ()) DESC, '-1848786079' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(1.614551013E9))) NOT BETWEEN (((vt0.c0)AND('177851216'))) AND ((+ (vt0.c0)))) ASC, (0xffffffffc15cf5a3 IN ()) DESC, '-1848786079' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS TEXT)) ORDER BY ((((vt0.c0)IS(1.614551013E9))) NOT BETWEEN (((vt0.c0)AND('177851216'))) AND ((+ (vt0.c0)))) ASC, (0Xffffffffc15cf5a3 IN ()) DESC, '-1848786079' DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)&(x'')))AND(((vt0.c0) NOT BETWEEN ('jb') AND (vt0.c0)))))OR(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)&(x'')))AND(((vt0.c0) NOT BETWEEN ('jb') AND (vt0.c0)))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)&(x'')))AND(((vt0.c0) NOT BETWEEN ('jb') AND (vt0.c0)))))OR(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)&(x'')))AND(((vt0.c0) NOT BETWEEN ('jb') AND (vt0.c0)))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)&(x'')))AND(((vt0.c0) NOT BETWEEN ('jb') AND (vt0.c0)))))OR(((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt1.c3) BETWEEN ((~ (rt1.c1))) AND (((rt1.c4) NOTNULL)))) ORDER BY CASE (~ (rt1.c3))  WHEN (((rt0.c1, rt1.c4, '1253847965'))>=((rt0.c3, rt1.c3, rt1.c2))) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt1.c5)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN ((~ (rt1.c1))) AND (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE (~ (rt1.c3))  WHEN (((rt0.c1, rt1.c4, '1253847965'))>=((rt0.c3, rt1.c3, rt1.c2))) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt1.c5)) END DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt1.c3) BETWEEN ((~ (rt1.c1))) AND (((rt1.c4) NOTNULL)))) ORDER BY CASE (~ (rt1.c3))  WHEN (((rt0.c1, rt1.c4, '1253847965'))>=((rt0.c3, rt1.c3, rt1.c2))) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt1.c5)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) BETWEEN ((~ (rt1.c1))) AND (((rt1.c4) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CASE (~ (rt1.c3))  WHEN (((rt0.c1, rt1.c4, '1253847965'))>=((rt0.c3, rt1.c3, rt1.c2))) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt1.c5)) END DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((rt1.c3) BETWEEN ((~ (rt1.c1))) AND (((rt1.c4) NOTNULL)))) ORDER BY CASE (~ (rt1.c3))  WHEN (((rt0.c1, rt1.c4, '1253847965'))>=((rt0.c3, rt1.c3, rt1.c2))) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt1.c5)) END DESC;
SELECT * FROM rt0, vt0, rt1 WHERE (rt1.c4) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (x'0e49') AND (rt0.c3)) THEN (((rt1.c6, rt1.c4, rt0.c4))>((rt1.c4, rt1.c4, rt1.c2))) ELSE rt0.c0 END DESC, (((rt0.c1 IN ()))>>(LIKELY(DISTINCT rt1.c5))), (((rt1.c6)) NOT BETWEEN ((((rt1.c1)>=(rt1.c3)))) AND ((((0.8165146372699237) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (x'0e49') AND (rt0.c3)) THEN (((rt1.c6, rt1.c4, rt0.c4))>((rt1.c4, rt1.c4, rt1.c2))) ELSE rt0.c0 END DESC, (((rt0.c1 IN ()))>>(LIKELY(DISTINCT rt1.c5))), (((rt1.c6)) NOT BETWEEN ((((rt1.c1)>=(rt1.c3)))) AND ((((0.8165146372699237) IS TRUE))))  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1 WHERE (rt1.c4) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (x'0e49') AND (rt0.c3)) THEN (((rt1.c6, rt1.c4, rt0.c4))>((rt1.c4, rt1.c4, rt1.c2))) ELSE rt0.c0 END DESC, (((rt0.c1 IN ()))>>(LIKELY(DISTINCT rt1.c5))), (((rt1.c6)) NOT BETWEEN ((((rt1.c1)>=(rt1.c3)))) AND ((((0.8165146372699237) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (x'0e49') AND (rt0.c3)) THEN (((rt1.c6, rt1.c4, rt0.c4))>((rt1.c4, rt1.c4, rt1.c2))) ELSE rt0.c0 END DESC, (((rt0.c1 IN ()))>>(LIKELY(DISTINCT rt1.c5))), (((rt1.c6)) NOT BETWEEN ((((rt1.c1)>=(rt1.c3)))) AND ((((0.8165146372699237) IS TRUE))))  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1 WHERE (rt1.c4) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (x'0e49') AND (rt0.c3)) THEN (((rt1.c6, rt1.c4, rt0.c4))>((rt1.c4, rt1.c4, rt1.c2))) ELSE rt0.c0 END DESC, (((rt0.c1 IN ()))>>(LIKELY(DISTINCT rt1.c5))), (((rt1.c6)) NOT BETWEEN ((((rt1.c1)>=(rt1.c3)))) AND ((((0.8165146372699237) IS TRUE))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((-921722293) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST, DATETIME(vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)|(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-921722293) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST, DATETIME(vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)|(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-921722293) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST, DATETIME(vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)|(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((-921722293) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST, DATETIME(vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)|(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-921722293) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY CAST((vt0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST, DATETIME(vt0.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)|(vt0.c0))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON LOWER(DISTINCT -946569842) WHERE (((CAST(rt1.c5 AS INTEGER))>=((((vt0.c0, rt1.c5, rt1.c2))>((rt1.c1, rt1.c5, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c5 AS INTEGER))>=((((vt0.c0, rt1.c5, rt1.c2))>((rt1.c1, rt1.c5, vt0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON LOWER(DISTINCT -946569842));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON LOWER(DISTINCT -946569842) WHERE (((CAST(rt1.c5 AS INTEGER))>=((((vt0.c0, rt1.c5, rt1.c2))>((rt1.c1, rt1.c5, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c5 AS INTEGER))>=((((vt0.c0, rt1.c5, rt1.c2))>((rt1.c1, rt1.c5, vt0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON LOWER(DISTINCT -946569842));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON LOWER(DISTINCT -946569842) WHERE (((CAST(rt1.c5 AS INTEGER))>=((((vt0.c0, rt1.c5, rt1.c2))>((rt1.c1, rt1.c5, vt0.c0))))));
SELECT * FROM rt1, vt0, rt0 WHERE ((~ (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c6 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c6 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((~ (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c6 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c6 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ((~ (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c6 ELSE rt0.c3 END)));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt1.c4) ORDER BY (((rt1.c1)-(rt1.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt1.c1)-(rt1.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt1.c4) ORDER BY (((rt1.c1)-(rt1.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt1.c1)-(rt1.c2)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt1.c4) ORDER BY (((rt1.c1)-(rt1.c2)) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, rt1, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)/(IFNULL(vt0.c0, vt0.c0)))) ORDER BY (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)/(IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)/(IFNULL(vt0.c0, vt0.c0)))) ORDER BY (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)/(IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)/(IFNULL(vt0.c0, vt0.c0)))) ORDER BY (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt0.c1) ORDER BY (((((rt1.c6)AND(rt1.c1)))OR(rt0.c3)) IN ()), CAST((((rt0.c2, rt1.c0, rt0.c3))<((rt1.c3, rt1.c6, rt1.c3))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((((rt1.c6)AND(rt1.c1)))OR(rt0.c3)) IN ()), CAST((((rt0.c2, rt1.c0, rt0.c3))<((rt1.c3, rt1.c6, rt1.c3))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt0.c1) ORDER BY (((((rt1.c6)AND(rt1.c1)))OR(rt0.c3)) IN ()), CAST((((rt0.c2, rt1.c0, rt0.c3))<((rt1.c3, rt1.c6, rt1.c3))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((((rt1.c6)AND(rt1.c1)))OR(rt0.c3)) IN ()), CAST((((rt0.c2, rt1.c0, rt0.c3))<((rt1.c3, rt1.c6, rt1.c3))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (rt0.c1) ORDER BY (((((rt1.c6)AND(rt1.c1)))OR(rt0.c3)) IN ()), CAST((((rt0.c2, rt1.c0, rt0.c3))<((rt1.c3, rt1.c6, rt1.c3))) AS NUMERIC) ASC;
SELECT COUNT(*) FROM rt1, vt0 INNER JOIN rt0 ON ((((rt0.c0) BETWEEN ('-250204058') AND ('-375011615')))IS('')) WHERE ('1793092381') ORDER BY ((((rt1.c0)IS NOT(rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT (('1793092381') IS TRUE)  as count FROM rt1, vt0 INNER JOIN rt0 ON ((((rt0.c0) BETWEEN ('-250204058') AND ('-375011615')))IS('')) ORDER BY ((((rt1.c0)IS NOT(rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM rt1, vt0 INNER JOIN rt0 ON ((((rt0.c0) BETWEEN ('-250204058') AND ('-375011615')))IS('')) WHERE ('1793092381') ORDER BY ((((rt1.c0)IS NOT(rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT (('1793092381') IS TRUE)  as count FROM rt1, vt0 INNER JOIN rt0 ON ((((rt0.c0) BETWEEN ('-250204058') AND ('-375011615')))IS('')) ORDER BY ((((rt1.c0)IS NOT(rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM rt1, vt0 INNER JOIN rt0 ON ((((rt0.c0) BETWEEN ('-250204058') AND ('-375011615')))IS('')) WHERE ('1793092381') ORDER BY ((((rt1.c0)IS NOT(rt0.c2))) IS TRUE);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 CROSS JOIN vt0 ON ((NULL)GLOB(rt1.c1)) WHERE ((((rt0.c3)>(rt1.c0)) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)*((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS LAST, CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN rt1.c1 END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 CROSS JOIN vt0 ON ((NULL)GLOB(rt1.c1)) ORDER BY ((rt0.c4 COLLATE BINARY)*((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS LAST, CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN rt1.c1 END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 CROSS JOIN vt0 ON ((NULL)GLOB(rt1.c1)) WHERE ((((rt0.c3)>(rt1.c0)) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)*((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS LAST, CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN rt1.c1 END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 CROSS JOIN vt0 ON ((NULL)GLOB(rt1.c1)) ORDER BY ((rt0.c4 COLLATE BINARY)*((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS LAST, CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN rt1.c1 END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 CROSS JOIN vt0 ON ((NULL)GLOB(rt1.c1)) WHERE ((((rt0.c3)>(rt1.c0)) IN ())) ORDER BY ((rt0.c4 COLLATE BINARY)*((((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))))  NULLS LAST, CASE WHEN (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN rt1.c1 END;
SELECT * FROM rt0, vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))|(CASE WHEN vt0.c0 THEN rt1.c0 END))) ORDER BY CAST(((((rt0.c2)AND(rt0.c0)))AND(rt1.c5)) AS NUMERIC), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c0 WHEN 'F\ro.^' THEN rt0.c1 END))=(((rt0.c1 IN (rt0.c3, rt0.c3, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER))|(CASE WHEN vt0.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CAST(((((rt0.c2)AND(rt0.c0)))AND(rt1.c5)) AS NUMERIC), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c0 WHEN 'F\ro.^' THEN rt0.c1 END))==(((rt0.c1 IN (rt0.c3, rt0.c3, rt0.c4))))));
SELECT * FROM rt0, vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))|(CASE WHEN vt0.c0 THEN rt1.c0 END))) ORDER BY CAST(((((rt0.c2)AND(rt0.c0)))AND(rt1.c5)) AS NUMERIC), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c0 WHEN 'F\ro.^' THEN rt0.c1 END))=(((rt0.c1 IN (rt0.c3, rt0.c3, rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER))|(CASE WHEN vt0.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CAST(((((rt0.c2)AND(rt0.c0)))AND(rt1.c5)) AS NUMERIC), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c0 WHEN 'F\ro.^' THEN rt0.c1 END))==(((rt0.c1 IN (rt0.c3, rt0.c3, rt0.c4))))));
SELECT * FROM rt0, vt0, rt1 WHERE (((CAST(rt1.c0 AS INTEGER))|(CASE WHEN vt0.c0 THEN rt1.c0 END))) ORDER BY CAST(((((rt0.c2)AND(rt0.c0)))AND(rt1.c5)) AS NUMERIC), (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c0 WHEN 'F\ro.^' THEN rt0.c1 END))=(((rt0.c1 IN (rt0.c3, rt0.c3, rt0.c4)))));
SELECT COUNT(*) FROM rt0 WHERE ((((load_extension(rt0.c4, rt0.c2)))>((((rt0.c4)<<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((load_extension(rt0.c4, rt0.c2)))>((((rt0.c4)<<(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((load_extension(rt0.c4, rt0.c2)))>((((rt0.c4)<<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((load_extension(rt0.c4, rt0.c2)))>((((rt0.c4)<<(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c4 WHERE (CASE WHEN rt1.c3 THEN rt1.c0 END COLLATE NOCASE) ORDER BY (((LIKELIHOOD(rt0.c3, 0.4763398324740621)))>=((rt1.c5))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c3 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c4 ORDER BY (((LIKELIHOOD(rt0.c3, 0.4763398324740621)))>=((rt1.c5))) ASC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c4 WHERE (CASE WHEN rt1.c3 THEN rt1.c0 END COLLATE NOCASE) ORDER BY (((LIKELIHOOD(rt0.c3, 0.4763398324740621)))>=((rt1.c5))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c3 THEN rt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c4 ORDER BY (((LIKELIHOOD(rt0.c3, 0.4763398324740621)))>=((rt1.c5))) ASC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c4 WHERE (CASE WHEN rt1.c3 THEN rt1.c0 END COLLATE NOCASE) ORDER BY (((LIKELIHOOD(rt0.c3, 0.4763398324740621)))>=((rt1.c5))) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((TOTAL_CHANGES() IN ())) ORDER BY CASE '-276243358'  WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c0, NULL, rt0.c4, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c3, NULL))) END;
SELECT SUM(count) FROM (SELECT (((TOTAL_CHANGES() IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE '-276243358'  WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c0, NULL, rt0.c4, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c3, NULL))) END);
SELECT COUNT(*) FROM rt0 WHERE ((TOTAL_CHANGES() IN ())) ORDER BY CASE '-276243358'  WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c0, NULL, rt0.c4, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c3, NULL))) END;
SELECT SUM(count) FROM (SELECT (((TOTAL_CHANGES() IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE '-276243358'  WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c0, NULL, rt0.c4, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c3, NULL))) END);
SELECT COUNT(*) FROM rt0 WHERE ((TOTAL_CHANGES() IN ())) ORDER BY CASE '-276243358'  WHEN ((rt0.c2) IS FALSE) THEN (((rt0.c0, NULL, rt0.c4, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c3, NULL))) END;
SELECT ALL * FROM rt1 WHERE (((((~ (rt1.c1)), (rt1.c2 IN (rt1.c2, rt1.c5)), ((0.9973870943546481)GLOB(rt1.c2))))<=((((((rt1.c6)AND(rt1.c2)))OR(0.7733083004940178)), CAST(rt1.c1 AS NUMERIC), ((rt1.c0)<>(x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt1.c1)), (rt1.c2 IN (rt1.c2, rt1.c5)), ((0.9973870943546481)GLOB(rt1.c2))))<=((((((rt1.c6)AND(rt1.c2)))OR(0.7733083004940178)), CAST(rt1.c1 AS NUMERIC), ((rt1.c0)!=(x'')))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((~ (rt1.c1)), (rt1.c2 IN (rt1.c2, rt1.c5)), ((0.9973870943546481)GLOB(rt1.c2))))<=((((((rt1.c6)AND(rt1.c2)))OR(0.7733083004940178)), CAST(rt1.c1 AS NUMERIC), ((rt1.c0)<>(x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt1.c1)), (rt1.c2 IN (rt1.c2, rt1.c5)), ((0.9973870943546481)GLOB(rt1.c2))))<=((((((rt1.c6)AND(rt1.c2)))OR(0.7733083004940178)), CAST(rt1.c1 AS NUMERIC), ((rt1.c0)!=(x'')))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((~ (rt1.c1)), (rt1.c2 IN (rt1.c2, rt1.c5)), ((0.9973870943546481)GLOB(rt1.c2))))<=((((((rt1.c6)AND(rt1.c2)))OR(0.7733083004940178)), CAST(rt1.c1 AS NUMERIC), ((rt1.c0)<>(x''))))));
SELECT COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt1.c5 WHERE (((vt0.c0) BETWEEN (CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c6 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c2 END) AND (CASE rt0.c3  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c6 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c2 END) AND (CASE rt0.c3  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt1.c5);
SELECT COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt1.c5 WHERE (((vt0.c0) BETWEEN (CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c6 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c2 END) AND (CASE rt0.c3  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c6 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c2 END) AND (CASE rt0.c3  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt1.c5);
SELECT COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON rt1.c5 WHERE (((vt0.c0) BETWEEN (CASE WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c6 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c2 END) AND (CASE rt0.c3  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c1 END)));
SELECT * FROM vt0, rt1 WHERE (CAST(rt1.c4 COLLATE RTRIM AS TEXT)) ORDER BY (+ (TRIM(x'')));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ (TRIM(x''))));
SELECT * FROM vt0, rt1 WHERE (CAST(rt1.c4 COLLATE RTRIM AS TEXT)) ORDER BY (+ (TRIM(x'')));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c4 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (+ (TRIM(x''))));
SELECT * FROM vt0, rt1 WHERE (CAST(rt1.c4 COLLATE RTRIM AS TEXT)) ORDER BY (+ (TRIM(x'')));
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c4)/(rt0.c4));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4)/(rt0.c4)));
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c4)/(rt0.c4));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c4)/(rt0.c4)));
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY ((rt0.c4)/(rt0.c4));
SELECT * FROM rt1, rt0, vt0 WHERE (0xffffffffffffffff) ORDER BY TRIM(HEX(rt1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffffffffff) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY TRIM(HEX(rt1.c2)) ASC  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE (0xffffffffffffffff) ORDER BY TRIM(HEX(rt1.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffffffffff) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY TRIM(HEX(rt1.c2)) ASC  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE (0xffffffffffffffff) ORDER BY TRIM(HEX(rt1.c2)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c6)/(-1045445408)))OR(((rt1.c0)<(rt1.c4)))))AND(((((rt1.c4)OR(rt1.c6)))AND(rt1.c0))))) ORDER BY rt1.c5, ((((rt1.c0)IS NOT(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (CAST(rt1.c3 AS TEXT))) ASC, CHAR(CAST(rt1.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c6)/(-1045445408)))OR(((rt1.c0)<(rt1.c4)))))AND(((((rt1.c4)OR(rt1.c6)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c5, ((((rt1.c0)IS NOT(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (CAST(rt1.c3 AS TEXT))) ASC, CHAR(CAST(rt1.c0 AS NUMERIC))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c6)/(-1045445408)))OR(((rt1.c0)<(rt1.c4)))))AND(((((rt1.c4)OR(rt1.c6)))AND(rt1.c0))))) ORDER BY rt1.c5, ((((rt1.c0)IS NOT(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (CAST(rt1.c3 AS TEXT))) ASC, CHAR(CAST(rt1.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c6)/(-1045445408)))OR(((rt1.c0)<(rt1.c4)))))AND(((((rt1.c4)OR(rt1.c6)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c5, ((((rt1.c0)IS NOT(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (CAST(rt1.c3 AS TEXT))) ASC, CHAR(CAST(rt1.c0 AS NUMERIC))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c6)/(-1045445408)))OR(((rt1.c0)<(rt1.c4)))))AND(((((rt1.c4)OR(rt1.c6)))AND(rt1.c0))))) ORDER BY rt1.c5, ((((rt1.c0)IS NOT(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (CAST(rt1.c3 AS TEXT))) ASC, CHAR(CAST(rt1.c0 AS NUMERIC))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT NULL))%((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL))%((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT NULL))%((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL))%((+ (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) NOT NULL))%((+ (rt1.c1)))));
SELECT * FROM rt1, vt0 WHERE (((('''fr'))=((((rt1.c0)OR(NULL))))));
SELECT SUM(count) FROM (SELECT ((((('''fr'))=((((rt1.c0)OR(NULL)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((('''fr'))=((((rt1.c0)OR(NULL))))));
SELECT SUM(count) FROM (SELECT ((((('''fr'))=((((rt1.c0)OR(NULL)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((('''fr'))=((((rt1.c0)OR(NULL))))));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (LIKELY(DISTINCT (~ (rt0.c4)))) ORDER BY -92465712  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (~ (rt0.c4)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY -92465712  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (LIKELY(DISTINCT (~ (rt0.c4)))) ORDER BY -92465712  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (~ (rt0.c4)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY -92465712  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((((x'08cc'))>((x'')))) ORDER BY ((((((((((((CASE WHEN rt1.c4 THEN rt1.c2 END)OR((rt1.c6 IN (rt1.c6, rt1.c1)))))OR(CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c3 END)))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c6)<(rt1.c1)))))OR(JULIANDAY(rt1.c3, rt1.c5, NULL))))OR(CASE x'b916'  WHEN rt1.c2 THEN 'm' WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c3 THEN '-0.0' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'08cc'))>((x'')))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((CASE WHEN rt1.c4 THEN rt1.c2 END)OR((rt1.c6 IN (rt1.c6, rt1.c1)))))OR(CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c3 END)))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c6)<(rt1.c1)))))OR(JULIANDAY(rt1.c3, rt1.c5, NULL))))OR(CASE x'b916'  WHEN rt1.c2 THEN 'm' WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c3 THEN '-0.0' END))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((x'08cc'))>((x'')))) ORDER BY ((((((((((((CASE WHEN rt1.c4 THEN rt1.c2 END)OR((rt1.c6 IN (rt1.c6, rt1.c1)))))OR(CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c3 END)))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c6)<(rt1.c1)))))OR(JULIANDAY(rt1.c3, rt1.c5, NULL))))OR(CASE x'b916'  WHEN rt1.c2 THEN 'm' WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c3 THEN '-0.0' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'08cc'))>((x'')))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((((CASE WHEN rt1.c4 THEN rt1.c2 END)OR((rt1.c6 IN (rt1.c6, rt1.c1)))))OR(CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c3 END)))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c6)<(rt1.c1)))))OR(JULIANDAY(rt1.c3, rt1.c5, NULL))))OR(CASE x'b916'  WHEN rt1.c2 THEN 'm' WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c3 THEN '-0.0' END))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((x'08cc'))>((x'')))) ORDER BY ((((((((((((CASE WHEN rt1.c4 THEN rt1.c2 END)OR((rt1.c6 IN (rt1.c6, rt1.c1)))))OR(CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c3 END)))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(((rt1.c6)<(rt1.c1)))))OR(JULIANDAY(rt1.c3, rt1.c5, NULL))))OR(CASE x'b916'  WHEN rt1.c2 THEN 'm' WHEN rt1.c3 THEN rt1.c6 WHEN rt1.c3 THEN '-0.0' END))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((((rt0.c0)<(rt1.c2))) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c0)))) WHERE (((((CASE rt1.c1  WHEN rt1.c6 THEN rt1.c5 END)AND(((rt0.c4)AND(rt0.c0)))))AND(ABS(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c1  WHEN rt1.c6 THEN rt1.c5 END)AND(((rt0.c4)AND(rt0.c0)))))AND(ABS(rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((((rt0.c0)<(rt1.c2))) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((((rt0.c0)<(rt1.c2))) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c0)))) WHERE (((((CASE rt1.c1  WHEN rt1.c6 THEN rt1.c5 END)AND(((rt0.c4)AND(rt0.c0)))))AND(ABS(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c1  WHEN rt1.c6 THEN rt1.c5 END)AND(((rt0.c4)AND(rt0.c0)))))AND(ABS(rt1.c0)))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((((rt0.c0)<(rt1.c2))) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((((rt0.c0)<(rt1.c2))) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c0)))) WHERE (((((CASE rt1.c1  WHEN rt1.c6 THEN rt1.c5 END)AND(((rt0.c4)AND(rt0.c0)))))AND(ABS(rt1.c0))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c3))==((rt0.c3, 0Xffffffffd68f8691, rt0.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c4, rt0.c3))=((rt0.c3, 0xffffffffd68f8691, rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c3))==((rt0.c3, 0Xffffffffd68f8691, rt0.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c4, rt0.c3))=((rt0.c3, 0xffffffffd68f8691, rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c3))==((rt0.c3, 0Xffffffffd68f8691, rt0.c3))) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (UNLIKELY(DISTINCT -580067531));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT -580067531)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (UNLIKELY(DISTINCT -580067531));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT -580067531)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (UNLIKELY(DISTINCT -580067531));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) NOTNULL)) NOT NULL));
SELECT * FROM rt0, rt1 WHERE (CASE WHEN (- ('-1522303859')) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c2) NOTNULL) END) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- ('-1522303859')) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c2) NOTNULL) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (CASE WHEN (- ('-1522303859')) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c2) NOTNULL) END) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- ('-1522303859')) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c2) NOTNULL) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (CASE WHEN (- ('-1522303859')) THEN CAST(rt1.c2 AS BLOB) ELSE ((rt1.c2) NOTNULL) END) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (- (rt0.c1)) WHERE ((('639132413')==(rt1.c5)) COLLATE BINARY) ORDER BY rt1.c6  NULLS LAST, '{+9n3x!3' ASC;
SELECT SUM(count) FROM (SELECT (((('639132413')=(rt1.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (- (rt0.c1)) ORDER BY rt1.c6  NULLS LAST, '{+9n3x!3' ASC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (- (rt0.c1)) WHERE ((('639132413')==(rt1.c5)) COLLATE BINARY) ORDER BY rt1.c6  NULLS LAST, '{+9n3x!3' ASC;
SELECT SUM(count) FROM (SELECT (((('639132413')=(rt1.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (- (rt0.c1)) ORDER BY rt1.c6  NULLS LAST, '{+9n3x!3' ASC);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON (- (rt0.c1)) WHERE ((('639132413')==(rt1.c5)) COLLATE BINARY) ORDER BY rt1.c6  NULLS LAST, '{+9n3x!3' ASC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c0)))) BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((- (NULL))))) ORDER BY CASE WHEN NULL THEN -384803358 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((rt0.c0)))) BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((- (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN -384803358 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c0)))) BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((- (NULL))))) ORDER BY CASE WHEN NULL THEN -384803358 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((rt0.c0)))) BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((- (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN -384803358 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c0)))) BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((- (NULL))))) ORDER BY CASE WHEN NULL THEN -384803358 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c3) IS FALSE))>(((rt1.c6)<(rt1.c6)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE))>(((rt1.c6)<(rt1.c6))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c3) IS FALSE))>(((rt1.c6)<(rt1.c6)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE))>(((rt1.c6)<(rt1.c6))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c3) IS FALSE))>(((rt1.c6)<(rt1.c6)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT)))!=(((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS TEXT)))<>(((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT)))!=(((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS TEXT)))<>(((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT)))!=(((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))))));
SELECT ALL * FROM rt1, vt0 WHERE (DATE(rt1.c5, ((NULL)*(rt1.c4)), (- (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(rt1.c5, ((NULL)*(rt1.c4)), (- (rt1.c1)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (DATE(rt1.c5, ((NULL)*(rt1.c4)), (- (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(rt1.c5, ((NULL)*(rt1.c4)), (- (rt1.c1)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (DATE(rt1.c5, ((NULL)*(rt1.c4)), (- (rt1.c1))));
SELECT ALL * FROM rt1 NOT INDEXED, rt0 WHERE (CASE (~ (rt0.c3))  WHEN ((((rt0.c0)AND(0.2674378559685028)))AND(rt1.c2)) THEN (- (rt1.c5)) END) ORDER BY TIME((rt1.c0 IN (rt1.c1)), CAST(rt1.c4 AS NUMERIC), ((rt0.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c3))  WHEN ((((rt0.c0)AND(0.2674378559685028)))AND(rt1.c2)) THEN (- (rt1.c5)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY TIME((rt1.c0 IN (rt1.c1)), CAST(rt1.c4 AS NUMERIC), ((rt0.c3) IS TRUE)));
SELECT ALL * FROM rt1 NOT INDEXED, rt0 WHERE (CASE (~ (rt0.c3))  WHEN ((((rt0.c0)AND(0.2674378559685028)))AND(rt1.c2)) THEN (- (rt1.c5)) END) ORDER BY TIME((rt1.c0 IN (rt1.c1)), CAST(rt1.c4 AS NUMERIC), ((rt0.c3) IS TRUE));
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c3))  WHEN ((((rt0.c0)AND(0.2674378559685028)))AND(rt1.c2)) THEN (- (rt1.c5)) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY TIME((rt1.c0 IN (rt1.c1)), CAST(rt1.c4 AS NUMERIC), ((rt0.c3) IS TRUE)));
SELECT ALL * FROM rt1 NOT INDEXED, rt0 WHERE (CASE (~ (rt0.c3))  WHEN ((((rt0.c0)AND(0.2674378559685028)))AND(rt1.c2)) THEN (- (rt1.c5)) END) ORDER BY TIME((rt1.c0 IN (rt1.c1)), CAST(rt1.c4 AS NUMERIC), ((rt0.c3) IS TRUE));
SELECT * FROM vt0 WHERE (((vt0.c0)-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt1.c4)LIKE(rt1.c2)) AS BLOB) WHERE ((((('	+pi')OR(((rt0.c4)=(rt1.c5)))))AND((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((('	+pi')OR(((rt0.c4)==(rt1.c5)))))AND((~ (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt1.c4)LIKE(rt1.c2)) AS BLOB));
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt1.c4)LIKE(rt1.c2)) AS BLOB) WHERE ((((('	+pi')OR(((rt0.c4)=(rt1.c5)))))AND((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((('	+pi')OR(((rt0.c4)==(rt1.c5)))))AND((~ (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt1.c4)LIKE(rt1.c2)) AS BLOB));
SELECT ALL * FROM rt1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt1.c4)LIKE(rt1.c2)) AS BLOB) WHERE ((((('	+pi')OR(((rt0.c4)=(rt1.c5)))))AND((~ (rt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END END) ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c2)))>=(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c6)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END END) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c2)))>=(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c6)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END END) ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c2)))>=(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c6)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END END) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c2)))>=(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c6)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 END END) ORDER BY ((((((vt0.c0)AND(rt1.c0)))OR(rt1.c2)))>=(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c6)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0)|(TRIM(rt1.c1, '')))) ORDER BY MAX('&0?{', rt1.c6 COLLATE BINARY), (- (rt1.c4 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)|(TRIM(rt1.c1, '')))) IS TRUE)  as count FROM rt1 ORDER BY MAX('&0?{', rt1.c6 COLLATE BINARY), (- (rt1.c4 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0)|(TRIM(rt1.c1, '')))) ORDER BY MAX('&0?{', rt1.c6 COLLATE BINARY), (- (rt1.c4 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)|(TRIM(rt1.c1, '')))) IS TRUE)  as count FROM rt1 ORDER BY MAX('&0?{', rt1.c6 COLLATE BINARY), (- (rt1.c4 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0)|(TRIM(rt1.c1, '')))) ORDER BY MAX('&0?{', rt1.c6 COLLATE BINARY), (- (rt1.c4 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((((rt0.c0)AND(rt1.c6)))AND(NULL)) IN ())) ORDER BY ((rt0.c0)<=((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt1.c6)))AND(NULL)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((rt0.c0)<=((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((((rt0.c0)AND(rt1.c6)))AND(NULL)) IN ())) ORDER BY ((rt0.c0)<=((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt1.c6)))AND(NULL)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((rt0.c0)<=((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((((rt0.c0)AND(rt1.c6)))AND(NULL)) IN ())) ORDER BY ((rt0.c0)<=((rt1.c1 IN ())));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))/(((('-41350571'))<>((rt0.c2)))))) ORDER BY CAST(((rt0.c4)>=(rt0.c0)) AS BLOB) DESC  NULLS LAST, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))/(((('-41350571'))<>((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)>=(rt0.c0)) AS BLOB) DESC  NULLS LAST, rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))/(((('-41350571'))<>((rt0.c2)))))) ORDER BY CAST(((rt0.c4)>=(rt0.c0)) AS BLOB) DESC  NULLS LAST, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))/(((('-41350571'))<>((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)>=(rt0.c0)) AS BLOB) DESC  NULLS LAST, rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))/(((('-41350571'))<>((rt0.c2)))))) ORDER BY CAST(((rt0.c4)>=(rt0.c0)) AS BLOB) DESC  NULLS LAST, rt0.c2  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4)||(rt1.c6)))OR(CAST(rt1.c6 AS NUMERIC)))) ORDER BY ((((((rt1.c6, rt1.c0, rt1.c6))>=((rt1.c4, rt1.c3, '36950847')))))>((((rt1.c4)||(rt1.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)||(rt1.c6)))OR(CAST(rt1.c6 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((rt1.c6, rt1.c0, rt1.c6))>=((rt1.c4, rt1.c3, '36950847')))))>((((rt1.c4)||(rt1.c3))))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4)||(rt1.c6)))OR(CAST(rt1.c6 AS NUMERIC)))) ORDER BY ((((((rt1.c6, rt1.c0, rt1.c6))>=((rt1.c4, rt1.c3, '36950847')))))>((((rt1.c4)||(rt1.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)||(rt1.c6)))OR(CAST(rt1.c6 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((rt1.c6, rt1.c0, rt1.c6))>=((rt1.c4, rt1.c3, '36950847')))))>((((rt1.c4)||(rt1.c3))))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c4)||(rt1.c6)))OR(CAST(rt1.c6 AS NUMERIC)))) ORDER BY ((((((rt1.c6, rt1.c0, rt1.c6))>=((rt1.c4, rt1.c3, '36950847')))))>((((rt1.c4)||(rt1.c3))))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT (vt0.c0 IN (vt0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c0 AS REAL))AND(rt0.c3 COLLATE BINARY)) CROSS JOIN rt0 ON CASE WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN x'' WHEN rt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c0 END THEN (NOT (rt0.c0)) END WHERE (CASE rt1.c3  WHEN rt1.c5 THEN rt0.c2 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3  WHEN rt1.c5 THEN rt0.c2 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c0 AS REAL))AND(rt0.c3 COLLATE BINARY)) CROSS JOIN rt0 ON CASE WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN x'' WHEN rt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c0 END THEN (NOT (rt0.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c0 AS REAL))AND(rt0.c3 COLLATE BINARY)) CROSS JOIN rt0 ON CASE WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN x'' WHEN rt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c0 END THEN (NOT (rt0.c0)) END WHERE (CASE rt1.c3  WHEN rt1.c5 THEN rt0.c2 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3  WHEN rt1.c5 THEN rt0.c2 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c0 AS REAL))AND(rt0.c3 COLLATE BINARY)) CROSS JOIN rt0 ON CASE WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c4 THEN x'' WHEN rt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c0 END THEN (NOT (rt0.c0)) END);
SELECT * FROM vt0, rt0, rt1 WHERE ((- ((+ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt1.c4))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE ((- ((+ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt1.c4))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE ((- ((+ (rt1.c4)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('') ORDER BY (json_remove(rt1.c2, 0.006108677498411597) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, rt1 ORDER BY (json_remove(rt1.c2, 0.006108677498411597) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('') ORDER BY (json_remove(rt1.c2, 0.006108677498411597) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, rt1 ORDER BY (json_remove(rt1.c2, 0.006108677498411597) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('') ORDER BY (json_remove(rt1.c2, 0.006108677498411597) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((~ (((rt1.c5)!=(rt0.c2))))) ORDER BY ((((((((rt1.c1)OR(0.6238184791410449)))AND(NULL)))AND(rt1.c3)))AND(CASE WHEN rt0.c0 THEN rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c5)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((((((rt1.c1)OR(0.6238184791410449)))AND(NULL)))AND(rt1.c3)))AND(CASE WHEN rt0.c0 THEN rt1.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((~ (((rt1.c5)!=(rt0.c2))))) ORDER BY ((((((((rt1.c1)OR(0.6238184791410449)))AND(NULL)))AND(rt1.c3)))AND(CASE WHEN rt0.c0 THEN rt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c5)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((((((rt1.c1)OR(0.6238184791410449)))AND(NULL)))AND(rt1.c3)))AND(CASE WHEN rt0.c0 THEN rt1.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((~ (((rt1.c5)!=(rt0.c2))))) ORDER BY ((((((((rt1.c1)OR(0.6238184791410449)))AND(NULL)))AND(rt1.c3)))AND(CASE WHEN rt0.c0 THEN rt1.c0 END)) DESC;
SELECT * FROM rt0, rt1 WHERE (((NULL)%((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((rt1.c4, NULL, rt1.c4)) AND ((rt0.c2, rt0.c3, NULL)))))) ORDER BY LOWER(DISTINCT CAST('^쭝SRuh巢' AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((rt1.c4, NULL, rt1.c4)) AND ((rt0.c2, rt0.c3, NULL)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY LOWER(DISTINCT CAST('^쭝SRuh巢' AS BLOB)) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((NULL)%((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((rt1.c4, NULL, rt1.c4)) AND ((rt0.c2, rt0.c3, NULL)))))) ORDER BY LOWER(DISTINCT CAST('^쭝SRuh巢' AS BLOB)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((rt1.c4, NULL, rt1.c4)) AND ((rt0.c2, rt0.c3, NULL)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY LOWER(DISTINCT CAST('^쭝SRuh巢' AS BLOB)) DESC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE (((NULL)%((((rt1.c0, rt1.c5, rt1.c0)) BETWEEN ((rt1.c4, NULL, rt1.c4)) AND ((rt0.c2, rt0.c3, NULL)))))) ORDER BY LOWER(DISTINCT CAST('^쭝SRuh巢' AS BLOB)) DESC  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (json_remove((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt0.c1))), (((rt1.c2))>((rt1.c4))))) ORDER BY CASE WHEN ((rt1.c6)<<(rt1.c1)) THEN DATETIME(rt0.c4, rt0.c1, rt1.c0) END  NULLS FIRST, ((rt0.c3) BETWEEN ((- (rt0.c4))) AND (((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_remove((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt0.c1))), (((rt1.c2))>((rt1.c4))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((rt1.c6)<<(rt1.c1)) THEN DATETIME(rt0.c4, rt0.c1, rt1.c0) END  NULLS FIRST, ((rt0.c3) BETWEEN ((- (rt0.c4))) AND (((rt0.c0) IS TRUE))));
SELECT * FROM rt1, rt0 WHERE (json_remove((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt0.c1))), (((rt1.c2))>((rt1.c4))))) ORDER BY CASE WHEN ((rt1.c6)<<(rt1.c1)) THEN DATETIME(rt0.c4, rt0.c1, rt1.c0) END  NULLS FIRST, ((rt0.c3) BETWEEN ((- (rt0.c4))) AND (((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_remove((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt0.c1))), (((rt1.c2))>((rt1.c4))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN ((rt1.c6)<<(rt1.c1)) THEN DATETIME(rt0.c4, rt0.c1, rt1.c0) END  NULLS FIRST, ((rt0.c3) BETWEEN ((- (rt0.c4))) AND (((rt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt1, vt0, rt0 NOT INDEXED WHERE (NULL) ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS FIRST, ((rt1.c1 COLLATE NOCASE) BETWEEN (((rt1.c1)IS(rt1.c3))) AND ((((rt0.c3))==((rt0.c0))))) ASC, GLOB(rt1.c1 COLLATE RTRIM, x'5e55');
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS FIRST, ((rt1.c1 COLLATE NOCASE) BETWEEN (((rt1.c1)IS(rt1.c3))) AND ((((rt0.c3))==((rt0.c0))))) ASC, GLOB(rt1.c1 COLLATE RTRIM, x'5e55'));
SELECT COUNT(*) FROM rt1, vt0, rt0 NOT INDEXED WHERE (NULL) ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS FIRST, ((rt1.c1 COLLATE NOCASE) BETWEEN (((rt1.c1)IS(rt1.c3))) AND ((((rt0.c3))==((rt0.c0))))) ASC, GLOB(rt1.c1 COLLATE RTRIM, x'5e55');
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS FIRST, ((rt1.c1 COLLATE NOCASE) BETWEEN (((rt1.c1)IS(rt1.c3))) AND ((((rt0.c3))==((rt0.c0))))) ASC, GLOB(rt1.c1 COLLATE RTRIM, x'5e55'));
SELECT COUNT(*) FROM rt1, vt0, rt0 NOT INDEXED WHERE (NULL) ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS FIRST, ((rt1.c1 COLLATE NOCASE) BETWEEN (((rt1.c1)IS(rt1.c3))) AND ((((rt0.c3))==((rt0.c0))))) ASC, GLOB(rt1.c1 COLLATE RTRIM, x'5e55');
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c6))<=((rt0.c3))) IN (NULL, rt1.c5 COLLATE NOCASE))) ORDER BY ((((0.9769767998180532)AND(((((rt1.c2)AND(rt0.c2)))OR(rt1.c3)))))OR(((('fyY/YT', rt0.c0, rt0.c2)) BETWEEN ((rt1.c5, rt0.c3, x'')) AND ((rt1.c3, rt1.c0, rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6))<=((rt0.c3))) IN (NULL, rt1.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((0.9769767998180532)AND(((((rt1.c2)AND(rt0.c2)))OR(rt1.c3)))))OR(((('fyY/YT', rt0.c0, rt0.c2)) BETWEEN ((rt1.c5, rt0.c3, x'')) AND ((rt1.c3, rt1.c0, rt0.c4))))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c6))<=((rt0.c3))) IN (NULL, rt1.c5 COLLATE NOCASE))) ORDER BY ((((0.9769767998180532)AND(((((rt1.c2)AND(rt0.c2)))OR(rt1.c3)))))OR(((('fyY/YT', rt0.c0, rt0.c2)) BETWEEN ((rt1.c5, rt0.c3, x'')) AND ((rt1.c3, rt1.c0, rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6))<=((rt0.c3))) IN (NULL, rt1.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((0.9769767998180532)AND(((((rt1.c2)AND(rt0.c2)))OR(rt1.c3)))))OR(((('fyY/YT', rt0.c0, rt0.c2)) BETWEEN ((rt1.c5, rt0.c3, x'')) AND ((rt1.c3, rt1.c0, rt0.c4))))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c6))<=((rt0.c3))) IN (NULL, rt1.c5 COLLATE NOCASE))) ORDER BY ((((0.9769767998180532)AND(((((rt1.c2)AND(rt0.c2)))OR(rt1.c3)))))OR(((('fyY/YT', rt0.c0, rt0.c2)) BETWEEN ((rt1.c5, rt0.c3, x'')) AND ((rt1.c3, rt1.c0, rt0.c4))))) DESC;
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((CASE WHEN rt1.c6 THEN rt1.c0 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt1.c3 ELSE 0.9230719430016319 END) NOT BETWEEN (rt1.c5) AND ((rt1.c3 IN (rt0.c3, rt1.c0))))) ORDER BY ((((rt1.c0)GLOB(rt1.c2))) IS TRUE), CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c6 THEN rt1.c0 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt1.c3 ELSE 0.9230719430016319 END) NOT BETWEEN (rt1.c5) AND ((rt1.c3 IN (rt0.c3, rt1.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((rt1.c0)GLOB(rt1.c2))) IS TRUE), CAST(NULL AS TEXT));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((CASE WHEN rt1.c6 THEN rt1.c0 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt1.c3 ELSE 0.9230719430016319 END) NOT BETWEEN (rt1.c5) AND ((rt1.c3 IN (rt0.c3, rt1.c0))))) ORDER BY ((((rt1.c0)GLOB(rt1.c2))) IS TRUE), CAST(NULL AS TEXT);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c6 THEN rt1.c0 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt1.c3 ELSE 0.9230719430016319 END) NOT BETWEEN (rt1.c5) AND ((rt1.c3 IN (rt0.c3, rt1.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((rt1.c0)GLOB(rt1.c2))) IS TRUE), CAST(NULL AS TEXT));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((CASE WHEN rt1.c6 THEN rt1.c0 WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt1.c3 ELSE 0.9230719430016319 END) NOT BETWEEN (rt1.c5) AND ((rt1.c3 IN (rt0.c3, rt1.c0))))) ORDER BY ((((rt1.c0)GLOB(rt1.c2))) IS TRUE), CAST(NULL AS TEXT);
SELECT * FROM rt1, vt0, rt0 WHERE (((x'')&('1793092381'))) ORDER BY ((((rt1.c4))!=((rt0.c2))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')&('1793092381'))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt1.c4))<>((rt0.c2))) IN ()) DESC);
SELECT * FROM rt1, vt0, rt0 WHERE (((x'')&('1793092381'))) ORDER BY ((((rt1.c4))!=((rt0.c2))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')&('1793092381'))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt1.c4))<>((rt0.c2))) IN ()) DESC);
SELECT * FROM rt1, vt0, rt0 WHERE (((x'')&('1793092381'))) ORDER BY ((((rt1.c4))!=((rt0.c2))) IN ()) DESC;
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(rt1.c2 AS REAL));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN NULL END AS NUMERIC)) ORDER BY CAST((NOT ('0.44479873930375013')) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN NULL END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY CAST((NOT ('0.44479873930375013')) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN NULL END AS NUMERIC)) ORDER BY CAST((NOT ('0.44479873930375013')) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN NULL END AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY CAST((NOT ('0.44479873930375013')) AS TEXT) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN NULL END AS NUMERIC)) ORDER BY CAST((NOT ('0.44479873930375013')) AS TEXT) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c6)OR(rt1.c3)))AND('456792407'))))>(((NOT (rt1.c3)))))) ORDER BY (((DATETIME(rt1.c2, rt1.c1, rt1.c5, rt1.c1, rt1.c1)))>(((((rt1.c6)) BETWEEN ((rt1.c5)) AND ((0x391e21e3))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c6)OR(rt1.c3)))AND('456792407'))))>(((NOT (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY (((DATETIME(rt1.c2, rt1.c1, rt1.c5, rt1.c1, rt1.c1)))>(((((rt1.c6)) BETWEEN ((rt1.c5)) AND ((0x391e21e3))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c6)OR(rt1.c3)))AND('456792407'))))>(((NOT (rt1.c3)))))) ORDER BY (((DATETIME(rt1.c2, rt1.c1, rt1.c5, rt1.c1, rt1.c1)))>(((((rt1.c6)) BETWEEN ((rt1.c5)) AND ((0x391e21e3))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c6)OR(rt1.c3)))AND('456792407'))))>(((NOT (rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY (((DATETIME(rt1.c2, rt1.c1, rt1.c5, rt1.c1, rt1.c1)))>(((((rt1.c6)) BETWEEN ((rt1.c5)) AND ((0x391e21e3))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((rt1.c6)OR(rt1.c3)))AND('456792407'))))>(((NOT (rt1.c3)))))) ORDER BY (((DATETIME(rt1.c2, rt1.c1, rt1.c5, rt1.c1, rt1.c1)))>(((((rt1.c6)) BETWEEN ((rt1.c5)) AND ((0x391e21e3))))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((highlight(rt0.c3, rt0.c2, rt0.c1, rt1.c6))<=(',')));
SELECT SUM(count) FROM (SELECT ((((highlight(rt0.c3, rt0.c2, rt0.c1, rt1.c6))<=(','))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((highlight(rt0.c3, rt0.c2, rt0.c1, rt1.c6))<=(',')));
SELECT SUM(count) FROM (SELECT ((((highlight(rt0.c3, rt0.c2, rt0.c1, rt1.c6))<=(','))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0 WHERE (TYPEOF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))));
SELECT * FROM rt1 CROSS JOIN vt0 ON rt1.c1 WHERE (rt1.c5) ORDER BY (+ (x''))  NULLS LAST, (((((rt1.c1)/(rt1.c2))))<((((vt0.c0)AND(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON rt1.c1 ORDER BY (+ (x''))  NULLS LAST, (((((rt1.c1)/(rt1.c2))))<((((vt0.c0)AND(rt1.c2))))) DESC);
SELECT * FROM rt1 CROSS JOIN vt0 ON rt1.c1 WHERE (rt1.c5) ORDER BY (+ (x''))  NULLS LAST, (((((rt1.c1)/(rt1.c2))))<((((vt0.c0)AND(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON rt1.c1 ORDER BY (+ (x''))  NULLS LAST, (((((rt1.c1)/(rt1.c2))))<((((vt0.c0)AND(rt1.c2))))) DESC);
SELECT * FROM rt1 CROSS JOIN vt0 ON rt1.c1 WHERE (rt1.c5) ORDER BY (+ (x''))  NULLS LAST, (((((rt1.c1)/(rt1.c2))))<((((vt0.c0)AND(rt1.c2))))) DESC;
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST(-1435991214 AS BLOB)) ORDER BY (((((rt1.c1) ISNULL)))>=((rt0.c3 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(-1435991214 AS BLOB)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((((rt1.c1) ISNULL)))>=((rt0.c3 COLLATE BINARY))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST(-1435991214 AS BLOB)) ORDER BY (((((rt1.c1) ISNULL)))>=((rt0.c3 COLLATE BINARY))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(-1435991214 AS BLOB)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((((rt1.c1) ISNULL)))>=((rt0.c3 COLLATE BINARY))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST(-1435991214 AS BLOB)) ORDER BY (((((rt1.c1) ISNULL)))>=((rt0.c3 COLLATE BINARY))) ASC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c6) IS FALSE))>(CAST(rt1.c3 AS INTEGER)))) ORDER BY (~ (SQLITE_COMPILEOPTION_GET(rt1.c3))) ASC, ((((CAST(rt1.c4 AS BLOB))OR(((rt1.c2)OR(rt1.c2)))))AND(((vt0.c0) BETWEEN (0.7285460705410874) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6) IS FALSE))>(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ (SQLITE_COMPILEOPTION_GET(rt1.c3))) ASC, ((((CAST(rt1.c4 AS BLOB))OR(((rt1.c2)OR(rt1.c2)))))AND(((vt0.c0) BETWEEN (0.7285460705410874) AND (rt1.c0))))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c6) IS FALSE))>(CAST(rt1.c3 AS INTEGER)))) ORDER BY (~ (SQLITE_COMPILEOPTION_GET(rt1.c3))) ASC, ((((CAST(rt1.c4 AS BLOB))OR(((rt1.c2)OR(rt1.c2)))))AND(((vt0.c0) BETWEEN (0.7285460705410874) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6) IS FALSE))>(CAST(rt1.c3 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ (SQLITE_COMPILEOPTION_GET(rt1.c3))) ASC, ((((CAST(rt1.c4 AS BLOB))OR(((rt1.c2)OR(rt1.c2)))))AND(((vt0.c0) BETWEEN (0.7285460705410874) AND (rt1.c0))))  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c6) IS FALSE))>(CAST(rt1.c3 AS INTEGER)))) ORDER BY (~ (SQLITE_COMPILEOPTION_GET(rt1.c3))) ASC, ((((CAST(rt1.c4 AS BLOB))OR(((rt1.c2)OR(rt1.c2)))))AND(((vt0.c0) BETWEEN (0.7285460705410874) AND (rt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'ca5e' AS TEXT)))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0, ((vt0.c0) NOT NULL))))) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE BINARY DESC, LIKELIHOOD(1614551013, 0.8880197622749969) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'ca5e' AS TEXT)))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0, ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE BINARY DESC, LIKELIHOOD(1614551013, 0.8880197622749969) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'ca5e' AS TEXT)))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0, ((vt0.c0) NOT NULL))))) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE BINARY DESC, LIKELIHOOD(1614551013, 0.8880197622749969) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'ca5e' AS TEXT)))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0, ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE BINARY DESC, LIKELIHOOD(1614551013, 0.8880197622749969) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'ca5e' AS TEXT)))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0, ((vt0.c0) NOT NULL))))) ORDER BY ((vt0.c0)<=(vt0.c0)) COLLATE BINARY DESC, LIKELIHOOD(1614551013, 0.8880197622749969) DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c5 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((((((((((rt1.c6)AND(rt1.c5)))AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c5)))AND(rt1.c5)))OR(((rt1.c5)AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c5 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((((rt1.c6)AND(rt1.c5)))AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c5)))AND(rt1.c5)))OR(((rt1.c5)AND(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c5 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((((((((((rt1.c6)AND(rt1.c5)))AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c5)))AND(rt1.c5)))OR(((rt1.c5)AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c5 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((((rt1.c6)AND(rt1.c5)))AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c5)))AND(rt1.c5)))OR(((rt1.c5)AND(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c5 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((((((((((rt1.c6)AND(rt1.c5)))AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c5)))AND(rt1.c5)))OR(((rt1.c5)AND(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))||(rt1.c2)) LEFT OUTER JOIN rt0 ON ((((rt0.c4)&(rt1.c3))) IS TRUE) WHERE ((- (TYPEOF(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (TYPEOF(rt1.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))||(rt1.c2)) LEFT OUTER JOIN rt0 ON ((((rt0.c4)&(rt1.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))||(rt1.c2)) LEFT OUTER JOIN rt0 ON ((((rt0.c4)&(rt1.c3))) IS TRUE) WHERE ((- (TYPEOF(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (TYPEOF(rt1.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))||(rt1.c2)) LEFT OUTER JOIN rt0 ON ((((rt0.c4)&(rt1.c3))) IS TRUE));
SELECT * FROM rt1, rt0, vt0 WHERE (NULL) ORDER BY (((rt1.c4)) BETWEEN ((((rt0.c0)<<(rt0.c3)))) AND ((((rt1.c4)IS(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((rt1.c4)) BETWEEN ((((rt0.c0)<<(rt0.c3)))) AND ((((rt1.c4)IS(vt0.c0)))))  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE (NULL) ORDER BY (((rt1.c4)) BETWEEN ((((rt0.c0)<<(rt0.c3)))) AND ((((rt1.c4)IS(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((rt1.c4)) BETWEEN ((((rt0.c0)<<(rt0.c3)))) AND ((((rt1.c4)IS(vt0.c0)))))  NULLS LAST);
SELECT * FROM rt1, rt0, vt0 WHERE (NULL) ORDER BY (((rt1.c4)) BETWEEN ((((rt0.c0)<<(rt0.c3)))) AND ((((rt1.c4)IS(vt0.c0)))))  NULLS LAST;
SELECT * FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c5)) BETWEEN (((rt1.c5)>>(rt1.c3))) AND ((((rt1.c1, rt1.c1, rt1.c6)) BETWEEN ((rt1.c2, rt1.c5, rt1.c1)) AND ((rt1.c6, rt1.c0, 1704098023)))))) ORDER BY CAST(CAST(rt1.c1 AS BLOB) AS BLOB) DESC, (((((rt1.c6))<((rt1.c2))))%((rt1.c6 IN (rt1.c5)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt1.c5)) BETWEEN (((rt1.c5)>>(rt1.c3))) AND ((((rt1.c1, rt1.c1, rt1.c6)) BETWEEN ((rt1.c2, rt1.c5, rt1.c1)) AND ((rt1.c6, rt1.c0, 1704098023)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c1 AS BLOB) AS BLOB) DESC, (((((rt1.c6))<((rt1.c2))))%((rt1.c6 IN (rt1.c5)))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c5)) BETWEEN (((rt1.c5)>>(rt1.c3))) AND ((((rt1.c1, rt1.c1, rt1.c6)) BETWEEN ((rt1.c2, rt1.c5, rt1.c1)) AND ((rt1.c6, rt1.c0, 1704098023)))))) ORDER BY CAST(CAST(rt1.c1 AS BLOB) AS BLOB) DESC, (((((rt1.c6))<((rt1.c2))))%((rt1.c6 IN (rt1.c5)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt1.c5)) BETWEEN (((rt1.c5)>>(rt1.c3))) AND ((((rt1.c1, rt1.c1, rt1.c6)) BETWEEN ((rt1.c2, rt1.c5, rt1.c1)) AND ((rt1.c6, rt1.c0, 1704098023)))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c1 AS BLOB) AS BLOB) DESC, (((((rt1.c6))<((rt1.c2))))%((rt1.c6 IN (rt1.c5)))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((TYPEOF(DISTINCT rt1.c5)) BETWEEN (((rt1.c5)>>(rt1.c3))) AND ((((rt1.c1, rt1.c1, rt1.c6)) BETWEEN ((rt1.c2, rt1.c5, rt1.c1)) AND ((rt1.c6, rt1.c0, 1704098023)))))) ORDER BY CAST(CAST(rt1.c1 AS BLOB) AS BLOB) DESC, (((((rt1.c6))<((rt1.c2))))%((rt1.c6 IN (rt1.c5)))) ASC  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (((((((rt1.c3) ISNULL))OR((((rt1.c6, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c6, rt1.c1)) AND ((vt0.c0, rt1.c5, NULL))))))AND((((0.8030292704148189))<>((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) ISNULL))OR((((rt1.c6, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c6, rt1.c1)) AND ((vt0.c0, rt1.c5, NULL))))))AND((((0.8030292704148189))<>((rt1.c3)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((rt1.c3) ISNULL))OR((((rt1.c6, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c6, rt1.c1)) AND ((vt0.c0, rt1.c5, NULL))))))AND((((0.8030292704148189))<>((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) ISNULL))OR((((rt1.c6, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c6, rt1.c1)) AND ((vt0.c0, rt1.c5, NULL))))))AND((((0.8030292704148189))<>((rt1.c3)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((rt1.c3) ISNULL))OR((((rt1.c6, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c6, rt1.c1)) AND ((vt0.c0, rt1.c5, NULL))))))AND((((0.8030292704148189))<>((rt1.c3))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN ())) BETWEEN (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3))) AND (((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) BETWEEN (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3))) AND (((((rt0.c3)AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN ())) BETWEEN (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3))) AND (((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) BETWEEN (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3))) AND (((((rt0.c3)AND(rt0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN ())) BETWEEN (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c3))) AND (((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))));
SELECT * FROM rt1, rt0, vt0 WHERE (((((rt0.c3)AND(rt1.c3)))+(((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c4)<(((((rt1.c2)OR(rt1.c1)))AND(rt0.c1)))), (((rt1.c4)IS(rt1.c2)) IN ())  NULLS FIRST, rt1.c6  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt1.c3)))+(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((rt1.c4)<(((((rt1.c2)OR(rt1.c1)))AND(rt0.c1)))), (((rt1.c4)IS(rt1.c2)) IN ())  NULLS FIRST, rt1.c6  NULLS FIRST);
SELECT * FROM rt1, rt0, vt0 WHERE (((((rt0.c3)AND(rt1.c3)))+(((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c4)<(((((rt1.c2)OR(rt1.c1)))AND(rt0.c1)))), (((rt1.c4)IS(rt1.c2)) IN ())  NULLS FIRST, rt1.c6  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt1.c3)))+(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((rt1.c4)<(((((rt1.c2)OR(rt1.c1)))AND(rt0.c1)))), (((rt1.c4)IS(rt1.c2)) IN ())  NULLS FIRST, rt1.c6  NULLS FIRST);
SELECT * FROM rt1, rt0, vt0 WHERE (((((rt0.c3)AND(rt1.c3)))+(((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c4)<(((((rt1.c2)OR(rt1.c1)))AND(rt0.c1)))), (((rt1.c4)IS(rt1.c2)) IN ())  NULLS FIRST, rt1.c6  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((json_array_length(rt1.c1, NULL))/('_t{b3T	' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt1.c1, NULL))/('_t{b3T	' COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((json_array_length(rt1.c1, NULL))/('_t{b3T	' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt1.c1, NULL))/('_t{b3T	' COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((json_array_length(rt1.c1, NULL))/('_t{b3T	' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c2)<(rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<(rt1.c3)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c2)<(rt1.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<(rt1.c3)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c2)<(rt1.c3)) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), load_extension(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), load_extension(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), load_extension(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), load_extension(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)), load_extension(vt0.c0, vt0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT * FROM vt0 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(x'' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(x'' AS NUMERIC));
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0)))) NOT NULL)) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0)))) NOT NULL)) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0)))) NOT NULL)) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON CASE ((((0.06681606956098429)OR(rt1.c0)))OR(rt1.c5))  WHEN (((rt1.c5))!=((vt0.c0))) THEN x'f387' WHEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c4 END THEN CASE '202026679'  WHEN rt1.c6 THEN vt0.c0 WHEN rt1.c2 THEN '1015761539' WHEN rt1.c3 THEN rt1.c4 END WHEN IFNULL(rt1.c2, rt1.c3) THEN ((((rt1.c5)OR(rt1.c4)))OR(rt1.c3)) END WHERE (((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c1 END) NOTNULL)) ORDER BY CASE rt1.c5 COLLATE RTRIM  WHEN STRFTIME(rt1.c5, rt1.c0, rt1.c1) THEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c1 END) NOTNULL)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CASE ((((0.06681606956098429)OR(rt1.c0)))OR(rt1.c5))  WHEN (((rt1.c5))<>((vt0.c0))) THEN x'f387' WHEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c4 END THEN CASE '202026679'  WHEN rt1.c6 THEN vt0.c0 WHEN rt1.c2 THEN '1015761539' WHEN rt1.c3 THEN rt1.c4 END WHEN IFNULL(rt1.c2, rt1.c3) THEN ((((rt1.c5)OR(rt1.c4)))OR(rt1.c3)) END ORDER BY CASE rt1.c5 COLLATE RTRIM  WHEN STRFTIME(rt1.c5, rt1.c0, rt1.c1) THEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)) END ASC);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON CASE ((((0.06681606956098429)OR(rt1.c0)))OR(rt1.c5))  WHEN (((rt1.c5))!=((vt0.c0))) THEN x'f387' WHEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c4 END THEN CASE '202026679'  WHEN rt1.c6 THEN vt0.c0 WHEN rt1.c2 THEN '1015761539' WHEN rt1.c3 THEN rt1.c4 END WHEN IFNULL(rt1.c2, rt1.c3) THEN ((((rt1.c5)OR(rt1.c4)))OR(rt1.c3)) END WHERE (((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c1 END) NOTNULL)) ORDER BY CASE rt1.c5 COLLATE RTRIM  WHEN STRFTIME(rt1.c5, rt1.c0, rt1.c1) THEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c1 END) NOTNULL)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CASE ((((0.06681606956098429)OR(rt1.c0)))OR(rt1.c5))  WHEN (((rt1.c5))<>((vt0.c0))) THEN x'f387' WHEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c4 END THEN CASE '202026679'  WHEN rt1.c6 THEN vt0.c0 WHEN rt1.c2 THEN '1015761539' WHEN rt1.c3 THEN rt1.c4 END WHEN IFNULL(rt1.c2, rt1.c3) THEN ((((rt1.c5)OR(rt1.c4)))OR(rt1.c3)) END ORDER BY CASE rt1.c5 COLLATE RTRIM  WHEN STRFTIME(rt1.c5, rt1.c0, rt1.c1) THEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)) END ASC);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON CASE ((((0.06681606956098429)OR(rt1.c0)))OR(rt1.c5))  WHEN (((rt1.c5))!=((vt0.c0))) THEN x'f387' WHEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c4 END THEN CASE '202026679'  WHEN rt1.c6 THEN vt0.c0 WHEN rt1.c2 THEN '1015761539' WHEN rt1.c3 THEN rt1.c4 END WHEN IFNULL(rt1.c2, rt1.c3) THEN ((((rt1.c5)OR(rt1.c4)))OR(rt1.c3)) END WHERE (((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c1 END) NOTNULL)) ORDER BY CASE rt1.c5 COLLATE RTRIM  WHEN STRFTIME(rt1.c5, rt1.c0, rt1.c1) THEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c5)) END ASC;
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (rt0.c0);
SELECT ALL * FROM rt1, vt0 WHERE (JULIANDAY(CASE WHEN rt1.c4 THEN rt1.c0 ELSE NULL END, CAST(rt1.c5 AS INTEGER), ((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(CASE WHEN rt1.c4 THEN rt1.c0 ELSE NULL END, CAST(rt1.c5 AS INTEGER), ((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0)))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (JULIANDAY(CASE WHEN rt1.c4 THEN rt1.c0 ELSE NULL END, CAST(rt1.c5 AS INTEGER), ((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(CASE WHEN rt1.c4 THEN rt1.c0 ELSE NULL END, CAST(rt1.c5 AS INTEGER), ((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0)))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (JULIANDAY(CASE WHEN rt1.c4 THEN rt1.c0 ELSE NULL END, CAST(rt1.c5 AS INTEGER), ((NULL) NOT BETWEEN (rt1.c2) AND (vt0.c0))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)<((rt0.c4 IN ()))) WHERE (((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN ((((vt0.c0, vt0.c0, rt0.c1))>((vt0.c0, rt0.c3, rt0.c2)))) AND (((rt0.c4)==(4.56792407E8))))) ORDER BY (~ (((vt0.c0)*(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN ((((vt0.c0, vt0.c0, rt0.c1))>((vt0.c0, rt0.c3, rt0.c2)))) AND (((rt0.c4)=(4.56792407E8))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)<((rt0.c4 IN ()))) ORDER BY (~ (((vt0.c0)*(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)<((rt0.c4 IN ()))) WHERE (((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN ((((vt0.c0, vt0.c0, rt0.c1))>((vt0.c0, rt0.c3, rt0.c2)))) AND (((rt0.c4)==(4.56792407E8))))) ORDER BY (~ (((vt0.c0)*(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN ((((vt0.c0, vt0.c0, rt0.c1))>((vt0.c0, rt0.c3, rt0.c2)))) AND (((rt0.c4)=(4.56792407E8))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)<((rt0.c4 IN ()))) ORDER BY (~ (((vt0.c0)*(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)<((rt0.c4 IN ()))) WHERE (((((((vt0.c0)AND(rt0.c0)))OR(rt0.c3))) BETWEEN ((((vt0.c0, vt0.c0, rt0.c1))>((vt0.c0, rt0.c3, rt0.c2)))) AND (((rt0.c4)==(4.56792407E8))))) ORDER BY (~ (((vt0.c0)*(rt0.c2)))) DESC;
SELECT * FROM rt1 WHERE (((((rt1.c1 COLLATE BINARY)AND(((((((((rt1.c6)AND(rt1.c2)))OR(x'ab3e')))OR(rt1.c0)))AND(rt1.c1)))))AND((rt1.c6 IN ())))) ORDER BY NULL DESC, CAST((('鼤mₗ\') IS FALSE) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 COLLATE BINARY)AND(((((((((rt1.c6)AND(rt1.c2)))OR(x'ab3e')))OR(rt1.c0)))AND(rt1.c1)))))AND((rt1.c6 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC, CAST((('鼤mₗ\') IS FALSE) AS BLOB));
SELECT * FROM rt1 WHERE (((((rt1.c1 COLLATE BINARY)AND(((((((((rt1.c6)AND(rt1.c2)))OR(x'ab3e')))OR(rt1.c0)))AND(rt1.c1)))))AND((rt1.c6 IN ())))) ORDER BY NULL DESC, CAST((('鼤mₗ\') IS FALSE) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 COLLATE BINARY)AND(((((((((rt1.c6)AND(rt1.c2)))OR(x'ab3e')))OR(rt1.c0)))AND(rt1.c1)))))AND((rt1.c6 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY NULL DESC, CAST((('鼤mₗ\') IS FALSE) AS BLOB));
SELECT * FROM rt1 WHERE (((((rt1.c1 COLLATE BINARY)AND(((((((((rt1.c6)AND(rt1.c2)))OR(x'ab3e')))OR(rt1.c0)))AND(rt1.c1)))))AND((rt1.c6 IN ())))) ORDER BY NULL DESC, CAST((('鼤mₗ\') IS FALSE) AS BLOB);
SELECT COUNT(*) FROM rt1, vt0 WHERE (json_extract((NOT (rt1.c1)), ((rt1.c4)GLOB(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract((NOT (rt1.c1)), ((rt1.c4)GLOB(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (json_extract((NOT (rt1.c1)), ((rt1.c4)GLOB(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_extract((NOT (rt1.c1)), ((rt1.c4)GLOB(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON (((rt0.c3)) NOT BETWEEN (((~ ('-34609016')))) AND (((rt0.c2 IN ())))) WHERE (0.16149931103897563) ORDER BY (((rt1.c3) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((0.16149931103897563) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt0.c3)) NOT BETWEEN (((~ ('-34609016')))) AND (((rt0.c2 IN ())))) ORDER BY (((rt1.c3) IS FALSE) IN ()) DESC);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON (((rt0.c3)) NOT BETWEEN (((~ ('-34609016')))) AND (((rt0.c2 IN ())))) WHERE (0.16149931103897563) ORDER BY (((rt1.c3) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((0.16149931103897563) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt0.c3)) NOT BETWEEN (((~ ('-34609016')))) AND (((rt0.c2 IN ())))) ORDER BY (((rt1.c3) IS FALSE) IN ()) DESC);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON (((rt0.c3)) NOT BETWEEN (((~ ('-34609016')))) AND (((rt0.c2 IN ())))) WHERE (0.16149931103897563) ORDER BY (((rt1.c3) IS FALSE) IN ()) DESC;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((x'84c1')&(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((x'84c1')&(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((x'84c1')&(((rt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((x'84c1')&(((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((x'84c1')&(((rt1.c1) NOTNULL))));
SELECT * FROM rt1 WHERE (((((rt1.c3) BETWEEN (0Xaf508a9) AND (rt1.c2))) NOTNULL)) ORDER BY (((rt1.c4))<>((CAST(rt1.c6 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (0xaf508a9) AND (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4))!=((CAST(rt1.c6 AS BLOB)))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c3) BETWEEN (0Xaf508a9) AND (rt1.c2))) NOTNULL)) ORDER BY (((rt1.c4))<>((CAST(rt1.c6 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (0xaf508a9) AND (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4))!=((CAST(rt1.c6 AS BLOB)))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c3) BETWEEN (0Xaf508a9) AND (rt1.c2))) NOTNULL)) ORDER BY (((rt1.c4))<>((CAST(rt1.c6 AS BLOB)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((x'')) BETWEEN ((((rt1.c5)LIKE(rt1.c1)))) AND ((rt1.c5 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((((rt1.c5)LIKE(rt1.c1)))) AND ((rt1.c5 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((x'')) BETWEEN ((((rt1.c5)LIKE(rt1.c1)))) AND ((rt1.c5 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((((rt1.c5)LIKE(rt1.c1)))) AND ((rt1.c5 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((x'')) BETWEEN ((((rt1.c5)LIKE(rt1.c1)))) AND ((rt1.c5 COLLATE RTRIM))));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (rt1.c3) ORDER BY rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY rt1.c0 ASC);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (rt1.c3) ORDER BY rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY rt1.c0 ASC);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (rt1.c3) ORDER BY rt1.c0 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((((('88938616') NOT BETWEEN (rt1.c5) AND (rt1.c0)))OR('1 /G힫_j!')))OR(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c3)))) WHERE (CASE ((rt1.c1) ISNULL)  WHEN '-1489902466' THEN (((rt1.c2))>(('nW(4?wluy'))) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) ISNULL)  WHEN '-1489902466' THEN (((rt1.c2))>(('nW(4?wluy'))) ELSE rt1.c2 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((('88938616') NOT BETWEEN (rt1.c5) AND (rt1.c0)))OR('1 /G힫_j!')))OR(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c3)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((((('88938616') NOT BETWEEN (rt1.c5) AND (rt1.c0)))OR('1 /G힫_j!')))OR(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c3)))) WHERE (CASE ((rt1.c1) ISNULL)  WHEN '-1489902466' THEN (((rt1.c2))>(('nW(4?wluy'))) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) ISNULL)  WHEN '-1489902466' THEN (((rt1.c2))>(('nW(4?wluy'))) ELSE rt1.c2 END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((('88938616') NOT BETWEEN (rt1.c5) AND (rt1.c0)))OR('1 /G힫_j!')))OR(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c3)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((((('88938616') NOT BETWEEN (rt1.c5) AND (rt1.c0)))OR('1 /G힫_j!')))OR(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c3)))) WHERE (CASE ((rt1.c1) ISNULL)  WHEN '-1489902466' THEN (((rt1.c2))>(('nW(4?wluy'))) ELSE rt1.c2 END);
SELECT ALL * FROM rt1 WHERE (CAST((((rt1.c4, 0.13858762216601572, 0.44479873930375013)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c6, rt1.c3, rt1.c6))) AS INTEGER)) ORDER BY ((((((((((rt1.c4)OR(rt1.c4)))AND(rt1.c5)))OR(rt1.c1)))OR(rt1.c1)))AND((rt1.c1 IN ())))  NULLS FIRST, (- (rt1.c2)) ASC  NULLS FIRST, ((rt1.c0 COLLATE NOCASE) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c4, 0.13858762216601572, 0.44479873930375013)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c6, rt1.c3, rt1.c6))) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c4)OR(rt1.c4)))AND(rt1.c5)))OR(rt1.c1)))OR(rt1.c1)))AND((rt1.c1 IN ())))  NULLS FIRST, (- (rt1.c2)) ASC  NULLS FIRST, ((rt1.c0 COLLATE NOCASE) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST((((rt1.c4, 0.13858762216601572, 0.44479873930375013)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c6, rt1.c3, rt1.c6))) AS INTEGER)) ORDER BY ((((((((((rt1.c4)OR(rt1.c4)))AND(rt1.c5)))OR(rt1.c1)))OR(rt1.c1)))AND((rt1.c1 IN ())))  NULLS FIRST, (- (rt1.c2)) ASC  NULLS FIRST, ((rt1.c0 COLLATE NOCASE) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c4, 0.13858762216601572, 0.44479873930375013)) BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c6, rt1.c3, rt1.c6))) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c4)OR(rt1.c4)))AND(rt1.c5)))OR(rt1.c1)))OR(rt1.c1)))AND((rt1.c1 IN ())))  NULLS FIRST, (- (rt1.c2)) ASC  NULLS FIRST, ((rt1.c0 COLLATE NOCASE) NOTNULL) ASC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((- (((rt1.c0)+(rt1.c6))))) ORDER BY (NOT (0.6704256582722745)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0)+(rt1.c6))))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY (NOT (0.6704256582722745)) COLLATE BINARY);
SELECT * FROM rt0, rt1 WHERE ((- (((rt1.c0)+(rt1.c6))))) ORDER BY (NOT (0.6704256582722745)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c0)+(rt1.c6))))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1 ORDER BY (NOT (0.6704256582722745)) COLLATE BINARY);
SELECT * FROM rt0, rt1 WHERE ((- (((rt1.c0)+(rt1.c6))))) ORDER BY (NOT (0.6704256582722745)) COLLATE BINARY;
SELECT COUNT(*) FROM vt0, rt1 NOT INDEXED, rt0 WHERE (NULL) ORDER BY ((rt1.c2 COLLATE RTRIM)%(((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c6))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((rt1.c2 COLLATE RTRIM)%(((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c6)))));
SELECT COUNT(*) FROM vt0, rt1 NOT INDEXED, rt0 WHERE (NULL) ORDER BY ((rt1.c2 COLLATE RTRIM)%(((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c6))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((rt1.c2 COLLATE RTRIM)%(((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c6)))));
SELECT COUNT(*) FROM vt0, rt1 NOT INDEXED, rt0 WHERE (NULL) ORDER BY ((rt1.c2 COLLATE RTRIM)%(((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c6))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3))>(((+ (rt1.c2)))))) ORDER BY rt1.c3  NULLS FIRST, ((((rt1.c2)IS NOT(rt1.c0))) IS FALSE) DESC  NULLS LAST, rt1.c4 ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3))>(((+ (rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3  NULLS FIRST, ((((rt1.c2)IS NOT(rt1.c0))) IS FALSE) DESC  NULLS LAST, rt1.c4 ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3))>(((+ (rt1.c2)))))) ORDER BY rt1.c3  NULLS FIRST, ((((rt1.c2)IS NOT(rt1.c0))) IS FALSE) DESC  NULLS LAST, rt1.c4 ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3))>(((+ (rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3  NULLS FIRST, ((((rt1.c2)IS NOT(rt1.c0))) IS FALSE) DESC  NULLS LAST, rt1.c4 ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3))>(((+ (rt1.c2)))))) ORDER BY rt1.c3  NULLS FIRST, ((((rt1.c2)IS NOT(rt1.c0))) IS FALSE) DESC  NULLS LAST, rt1.c4 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY PRINTF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))), 'D gl';
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY PRINTF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))), 'D gl');
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY PRINTF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))), 'D gl';
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY PRINTF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))), 'D gl');
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY PRINTF((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'')))), 'D gl';
SELECT * FROM rt0, vt0 WHERE ((+ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY (((vt0.c0)) BETWEEN (((+ (rt0.c4)))) AND ((rtreenode(rt0.c2, rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) BETWEEN (((+ (rt0.c4)))) AND ((rtreenode(rt0.c2, rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((+ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY (((vt0.c0)) BETWEEN (((+ (rt0.c4)))) AND ((rtreenode(rt0.c2, rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) BETWEEN (((+ (rt0.c4)))) AND ((rtreenode(rt0.c2, rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((+ (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) ORDER BY (((vt0.c0)) BETWEEN (((+ (rt0.c4)))) AND ((rtreenode(rt0.c2, rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c2)!=(rt1.c6))) BETWEEN (rt1.c4) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<>(rt1.c6))) BETWEEN (rt1.c4) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)!=(rt1.c6))) BETWEEN (rt1.c4) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<>(rt1.c6))) BETWEEN (rt1.c4) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c2)!=(rt1.c6))) BETWEEN (rt1.c4) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)))));
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c4 END))) WHERE (CASE WHEN '287020899' THEN rt1.c3 WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '287020899' THEN rt1.c3 WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c4 END))) ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c4 END))) WHERE (CASE WHEN '287020899' THEN rt1.c3 WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '287020899' THEN rt1.c3 WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c4 END))) ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 FULL OUTER JOIN vt0 ON (((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c4 END))) WHERE (CASE WHEN '287020899' THEN rt1.c3 WHEN rt1.c5 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 CROSS JOIN rt1 ON rt0.c4 WHERE ((((((NOT (rt1.c5)))AND((rt1.c5 IN ()))))OR(((((rt1.c4)AND(rt1.c0)))AND(rt1.c6))))) ORDER BY ((CASE rt1.c5  WHEN 0.5291423625200212 THEN rt1.c2 ELSE 0Xffffffffd89f6774 END) BETWEEN ((rt0.c3 IN ())) AND (rt1.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (rt1.c5)))AND((rt1.c5 IN ()))))OR(((((rt1.c4)AND(rt1.c0)))AND(rt1.c6))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN rt1 ON rt0.c4 ORDER BY ((CASE rt1.c5  WHEN 0.5291423625200212 THEN rt1.c2 ELSE 0Xffffffffd89f6774 END) BETWEEN ((rt0.c3 IN ())) AND (rt1.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN rt1 ON rt0.c4 WHERE ((((((NOT (rt1.c5)))AND((rt1.c5 IN ()))))OR(((((rt1.c4)AND(rt1.c0)))AND(rt1.c6))))) ORDER BY ((CASE rt1.c5  WHEN 0.5291423625200212 THEN rt1.c2 ELSE 0Xffffffffd89f6774 END) BETWEEN ((rt0.c3 IN ())) AND (rt1.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (rt1.c5)))AND((rt1.c5 IN ()))))OR(((((rt1.c4)AND(rt1.c0)))AND(rt1.c6))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN rt1 ON rt0.c4 ORDER BY ((CASE rt1.c5  WHEN 0.5291423625200212 THEN rt1.c2 ELSE 0Xffffffffd89f6774 END) BETWEEN ((rt0.c3 IN ())) AND (rt1.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN rt1 ON rt0.c4 WHERE ((((((NOT (rt1.c5)))AND((rt1.c5 IN ()))))OR(((((rt1.c4)AND(rt1.c0)))AND(rt1.c6))))) ORDER BY ((CASE rt1.c5  WHEN 0.5291423625200212 THEN rt1.c2 ELSE 0Xffffffffd89f6774 END) BETWEEN ((rt0.c3 IN ())) AND (rt1.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (UNLIKELY(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END)) ORDER BY ((NULL)||(((rt1.c2)||(vt0.c0))))  NULLS LAST, x'd96c'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((NULL)||(((rt1.c2)||(vt0.c0))))  NULLS LAST, x'd96c'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (UNLIKELY(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END)) ORDER BY ((NULL)||(((rt1.c2)||(vt0.c0))))  NULLS LAST, x'd96c'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((NULL)||(((rt1.c2)||(vt0.c0))))  NULLS LAST, x'd96c'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (UNLIKELY(CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c5 END)) ORDER BY ((NULL)||(((rt1.c2)||(vt0.c0))))  NULLS LAST, x'd96c'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULLIF((rt0.c1 IN (rt0.c0)), rtreenode(rt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF((rt0.c1 IN (rt0.c0)), rtreenode(rt0.c0, rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULLIF((rt0.c1 IN (rt0.c0)), rtreenode(rt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF((rt0.c1 IN (rt0.c0)), rtreenode(rt0.c0, rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULLIF((rt0.c1 IN (rt0.c0)), rtreenode(rt0.c0, rt0.c0)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2))=((rt1.c2)))) NOT NULL)) ORDER BY (((rt1.c0, CAST('-250204058' AS REAL), CAST(rt1.c1 AS INTEGER)))=((((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c3)), ((rt1.c2)IS(rt1.c1)), ((rt1.c0)%(NULL))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))==((rt1.c2)))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, CAST('-250204058' AS REAL), CAST(rt1.c1 AS INTEGER)))==((((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c3)), ((rt1.c2)IS(rt1.c1)), ((rt1.c0)%(NULL))))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2))=((rt1.c2)))) NOT NULL)) ORDER BY (((rt1.c0, CAST('-250204058' AS REAL), CAST(rt1.c1 AS INTEGER)))=((((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c3)), ((rt1.c2)IS(rt1.c1)), ((rt1.c0)%(NULL))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))==((rt1.c2)))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, CAST('-250204058' AS REAL), CAST(rt1.c1 AS INTEGER)))==((((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c3)), ((rt1.c2)IS(rt1.c1)), ((rt1.c0)%(NULL))))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2))=((rt1.c2)))) NOT NULL)) ORDER BY (((rt1.c0, CAST('-250204058' AS REAL), CAST(rt1.c1 AS INTEGER)))=((((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c4)))AND(rt1.c3)), ((rt1.c2)IS(rt1.c1)), ((rt1.c0)%(NULL))))) ASC;
SELECT * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c0))LIKE((((vt0.c0))=((vt0.c0)))))) ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(vt0.c0))LIKE((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c0))LIKE((((vt0.c0))=((vt0.c0)))))) ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(vt0.c0))LIKE((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c0))LIKE((((vt0.c0))=((vt0.c0)))))) ORDER BY (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((+ ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((+ ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((+ ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((('-660641932')OR(((rt1.c6)IS NOT(rt0.c3)))))AND(((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c5))))) ORDER BY (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, '';
SELECT SUM(count) FROM (SELECT ALL (((((('-660641932')OR(((rt1.c6)IS NOT(rt0.c3)))))AND(((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c5))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, '');
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((('-660641932')OR(((rt1.c6)IS NOT(rt0.c3)))))AND(((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c5))))) ORDER BY (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, '';
SELECT SUM(count) FROM (SELECT ALL (((((('-660641932')OR(((rt1.c6)IS NOT(rt0.c3)))))AND(((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c5))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, '');
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((('-660641932')OR(((rt1.c6)IS NOT(rt0.c3)))))AND(((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c5))))) ORDER BY (NOT (((rt0.c3) IS FALSE)))  NULLS FIRST, '';
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (CASE WHEN rt1.c0 THEN CAST(rt1.c1 AS NUMERIC) WHEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c3 END THEN ((((rt1.c4)AND(rt1.c5)))AND(rt1.c2)) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt1.c1)IS NOT(x'f761')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN CAST(rt1.c1 AS NUMERIC) WHEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c3 END THEN ((((rt1.c4)AND(rt1.c5)))AND(rt1.c2)) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt1.c1)IS NOT(x'f761')) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (CASE WHEN rt1.c0 THEN CAST(rt1.c1 AS NUMERIC) WHEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c3 END THEN ((((rt1.c4)AND(rt1.c5)))AND(rt1.c2)) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt1.c1)IS NOT(x'f761')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN CAST(rt1.c1 AS NUMERIC) WHEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c3 END THEN ((((rt1.c4)AND(rt1.c5)))AND(rt1.c2)) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt1.c1)IS NOT(x'f761')) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (CASE WHEN rt1.c0 THEN CAST(rt1.c1 AS NUMERIC) WHEN CASE rt1.c6  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c3 END THEN ((((rt1.c4)AND(rt1.c5)))AND(rt1.c2)) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt1.c1)IS NOT(x'f761')) END);
SELECT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt1.c5 COLLATE RTRIM WHERE ((((vt0.c0)=(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)==(rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt1.c5 COLLATE RTRIM);
SELECT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt1.c5 COLLATE RTRIM WHERE ((((vt0.c0)=(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)==(rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt1.c5 COLLATE RTRIM);
SELECT * FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON rt1.c5 COLLATE RTRIM WHERE ((((vt0.c0)=(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)AND(((((rt1.c6)OR(rt1.c2)))OR(rt1.c4))))) ORDER BY ((((rt1.c1)&(rt1.c3))) IS TRUE)  NULLS LAST, (((rt1.c0, rt1.c6, rt1.c6)) BETWEEN ((0x1b3a1957, rt1.c2, ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c2)))) AND ((((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c0)), ((rt1.c6) IS TRUE), rt1.c5)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)AND(((((rt1.c6)OR(rt1.c2)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)&(rt1.c3))) IS TRUE)  NULLS LAST, (((rt1.c0, rt1.c6, rt1.c6)) BETWEEN ((0X1b3a1957, rt1.c2, ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c2)))) AND ((((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c0)), ((rt1.c6) IS TRUE), rt1.c5))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)AND(((((rt1.c6)OR(rt1.c2)))OR(rt1.c4))))) ORDER BY ((((rt1.c1)&(rt1.c3))) IS TRUE)  NULLS LAST, (((rt1.c0, rt1.c6, rt1.c6)) BETWEEN ((0x1b3a1957, rt1.c2, ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c2)))) AND ((((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c0)), ((rt1.c6) IS TRUE), rt1.c5)));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)AND(((((rt1.c6)OR(rt1.c2)))OR(rt1.c4))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)&(rt1.c3))) IS TRUE)  NULLS LAST, (((rt1.c0, rt1.c6, rt1.c6)) BETWEEN ((0X1b3a1957, rt1.c2, ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c2)))) AND ((((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c0)), ((rt1.c6) IS TRUE), rt1.c5))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2)AND(((((rt1.c6)OR(rt1.c2)))OR(rt1.c4))))) ORDER BY ((((rt1.c1)&(rt1.c3))) IS TRUE)  NULLS LAST, (((rt1.c0, rt1.c6, rt1.c6)) BETWEEN ((0x1b3a1957, rt1.c2, ((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c2)))) AND ((((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c0)), ((rt1.c6) IS TRUE), rt1.c5)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((STRFTIME(rt0.c3, rt0.c0, vt0.c0))<<(-8.61052328E8)) CROSS JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c1) AND ('IIZo䊅e'))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (rt1.c0 COLLATE BINARY)) WHERE (0.3368239900837169) ORDER BY CAST(rt1.c5 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.3368239900837169) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((STRFTIME(rt0.c3, rt0.c0, vt0.c0))<<(-8.61052328E8)) CROSS JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c1) AND ('IIZo䊅e'))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (rt1.c0 COLLATE BINARY)) ORDER BY CAST(rt1.c5 AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((STRFTIME(rt0.c3, rt0.c0, vt0.c0))<<(-8.61052328E8)) CROSS JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c1) AND ('IIZo䊅e'))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (rt1.c0 COLLATE BINARY)) WHERE (0.3368239900837169) ORDER BY CAST(rt1.c5 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.3368239900837169) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((STRFTIME(rt0.c3, rt0.c0, vt0.c0))<<(-8.61052328E8)) CROSS JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt0.c1) AND ('IIZo䊅e'))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (rt1.c0 COLLATE BINARY)) ORDER BY CAST(rt1.c5 AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (-8.5277148E8);
SELECT SUM(count) FROM (SELECT ((-8.5277148E8) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (-8.5277148E8);
SELECT SUM(count) FROM (SELECT ((-8.5277148E8) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (-8.5277148E8);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((vt0.c0)==(rt1.c6)))) AND ((CAST(rt1.c0 AS INTEGER))))) ORDER BY ((rt1.c0)&(CAST(rt1.c5 AS INTEGER))) ASC  NULLS FIRST, (((((rt1.c0)) NOT BETWEEN (('')) AND ((rt1.c5)))) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (json_object(rt1.c5, rt1.c0)))  NULLS FIRST, (((((('')AND(rt1.c3)))AND(rt1.c5))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((vt0.c0)==(rt1.c6)))) AND ((CAST(rt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0)&(CAST(rt1.c5 AS INTEGER))) ASC  NULLS FIRST, (((((rt1.c0)) NOT BETWEEN (('')) AND ((rt1.c5)))) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (json_object(rt1.c5, rt1.c0)))  NULLS FIRST, (((((('')AND(rt1.c3)))AND(rt1.c5))) NOTNULL) ASC);
SELECT ALL * FROM vt0, rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((vt0.c0)==(rt1.c6)))) AND ((CAST(rt1.c0 AS INTEGER))))) ORDER BY ((rt1.c0)&(CAST(rt1.c5 AS INTEGER))) ASC  NULLS FIRST, (((((rt1.c0)) NOT BETWEEN (('')) AND ((rt1.c5)))) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (json_object(rt1.c5, rt1.c0)))  NULLS FIRST, (((((('')AND(rt1.c3)))AND(rt1.c5))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((vt0.c0)==(rt1.c6)))) AND ((CAST(rt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0)&(CAST(rt1.c5 AS INTEGER))) ASC  NULLS FIRST, (((((rt1.c0)) NOT BETWEEN (('')) AND ((rt1.c5)))) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (json_object(rt1.c5, rt1.c0)))  NULLS FIRST, (((((('')AND(rt1.c3)))AND(rt1.c5))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (0.8724477649957901) ORDER BY (CASE vt0.c0  WHEN rt0.c3 THEN rt1.c3 END IN ())  NULLS LAST, (+ ((((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.8724477649957901) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (CASE vt0.c0  WHEN rt0.c3 THEN rt1.c3 END IN ())  NULLS LAST, (+ ((((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (0.8724477649957901) ORDER BY (CASE vt0.c0  WHEN rt0.c3 THEN rt1.c3 END IN ())  NULLS LAST, (+ ((((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.8724477649957901) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (CASE vt0.c0  WHEN rt0.c3 THEN rt1.c3 END IN ())  NULLS LAST, (+ ((((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (0.8724477649957901) ORDER BY (CASE vt0.c0  WHEN rt0.c3 THEN rt1.c3 END IN ())  NULLS LAST, (+ ((((rt0.c1)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((- (rt0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c4 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c4 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c4 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1 WHERE ((- (0.36605960571273766)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.36605960571273766))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (0.36605960571273766)));
SELECT SUM(count) FROM (SELECT ALL (((- (0.36605960571273766))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((- (0.36605960571273766)));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((((0.43336251679889437)) BETWEEN ((x'9a18')) AND ((0.34602536106588755))))) WHERE ((((NOT (rt1.c4)))>(((rt1.c4)%(0X759dd3fc)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c4)))>(((rt1.c4)%(0X759dd3fc))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((((0.43336251679889437)) BETWEEN ((x'9a18')) AND ((0.34602536106588755))))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((((0.43336251679889437)) BETWEEN ((x'9a18')) AND ((0.34602536106588755))))) WHERE ((((NOT (rt1.c4)))>(((rt1.c4)%(0X759dd3fc)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c4)))>(((rt1.c4)%(0X759dd3fc))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((((0.43336251679889437)) BETWEEN ((x'9a18')) AND ((0.34602536106588755))))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (+ ((((0.43336251679889437)) BETWEEN ((x'9a18')) AND ((0.34602536106588755))))) WHERE ((((NOT (rt1.c4)))>(((rt1.c4)%(0X759dd3fc)))));
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c4))) NOTNULL)) ORDER BY (~ (((rt0.c0)<=(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c4))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c0)<=(NULL)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c4))) NOTNULL)) ORDER BY (~ (((rt0.c0)<=(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c4))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c0)<=(NULL)))) DESC);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c4))) NOTNULL)) ORDER BY (~ (((rt0.c0)<=(NULL)))) DESC;
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((rt1.c6)%((((NULL))=((rt1.c6))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c6)%((((NULL))=((rt1.c6)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((rt1.c6)%((((NULL))=((rt1.c6))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c6)%((((NULL))=((rt1.c6)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (((rt1.c6)%((((NULL))=((rt1.c6))))));
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON CASE rt0.c2  WHEN rt1.c0 THEN rt0.c2 END COLLATE RTRIM WHERE (0.34602852677939744) ORDER BY ((((((((UPPER(DISTINCT rt1.c6))AND(CAST('vdXGF2.' AS TEXT))))OR(((rt1.c0) IS FALSE))))OR(((rt1.c5) IS TRUE))))OR(((rt0.c0)>=(x'15a6')))) DESC, rt0.c2 DESC  NULLS FIRST, load_extension(rt1.c6, ((rt1.c4) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.34602852677939744) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON CASE rt0.c2  WHEN rt1.c0 THEN rt0.c2 END COLLATE RTRIM ORDER BY ((((((((UPPER(DISTINCT rt1.c6))AND(CAST('vdXGF2.' AS TEXT))))OR(((rt1.c0) IS FALSE))))OR(((rt1.c5) IS TRUE))))OR(((rt0.c0)>=(x'15a6')))) DESC, rt0.c2 DESC  NULLS FIRST, load_extension(rt1.c6, ((rt1.c4) NOTNULL)) DESC);
SELECT ALL * FROM rt0, rt1 LEFT OUTER JOIN vt0 ON CASE rt0.c2  WHEN rt1.c0 THEN rt0.c2 END COLLATE RTRIM WHERE (0.34602852677939744) ORDER BY ((((((((UPPER(DISTINCT rt1.c6))AND(CAST('vdXGF2.' AS TEXT))))OR(((rt1.c0) IS FALSE))))OR(((rt1.c5) IS TRUE))))OR(((rt0.c0)>=(x'15a6')))) DESC, rt0.c2 DESC  NULLS FIRST, load_extension(rt1.c6, ((rt1.c4) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.34602852677939744) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON CASE rt0.c2  WHEN rt1.c0 THEN rt0.c2 END COLLATE RTRIM ORDER BY ((((((((UPPER(DISTINCT rt1.c6))AND(CAST('vdXGF2.' AS TEXT))))OR(((rt1.c0) IS FALSE))))OR(((rt1.c5) IS TRUE))))OR(((rt0.c0)>=(x'15a6')))) DESC, rt0.c2 DESC  NULLS FIRST, load_extension(rt1.c6, ((rt1.c4) NOTNULL)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0X13e2d368) ORDER BY (((vt0.c0)) BETWEEN ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((x'')>=(vt0.c0))) AND (ABS(DISTINCT vt0.c0))), CASE WHEN vt0.c0 THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0X13e2d368) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((x'')>=(vt0.c0))) AND (ABS(DISTINCT vt0.c0))), CASE WHEN vt0.c0 THEN (((vt0.c0))=((vt0.c0))) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0X13e2d368) ORDER BY (((vt0.c0)) BETWEEN ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((x'')>=(vt0.c0))) AND (ABS(DISTINCT vt0.c0))), CASE WHEN vt0.c0 THEN (((vt0.c0))==((vt0.c0))) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0X13e2d368) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS FIRST, ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((x'')>=(vt0.c0))) AND (ABS(DISTINCT vt0.c0))), CASE WHEN vt0.c0 THEN (((vt0.c0))=((vt0.c0))) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))>=(((rt0.c3) IS TRUE))), ((TRIM(vt0.c0))/(((rt0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))>=(((rt0.c3) IS TRUE))), ((TRIM(vt0.c0))/(((rt0.c3) ISNULL))));
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))>=(((rt0.c3) IS TRUE))), ((TRIM(vt0.c0))/(((rt0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))>=(((rt0.c3) IS TRUE))), ((TRIM(vt0.c0))/(((rt0.c3) ISNULL))));
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))>=(((rt0.c3) IS TRUE))), ((TRIM(vt0.c0))/(((rt0.c3) ISNULL)));
SELECT * FROM vt0 WHERE ((((vt0.c0))>((NULL))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>((NULL))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))>((NULL))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))>((NULL))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0))>((NULL))) COLLATE NOCASE);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt0.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3)AND(rt0.c1)))))) ORDER BY (((0.46284808611082884))<=(((NOT (rt1.c6))))) DESC  NULLS FIRST, CASE ((rt1.c2)GLOB(1.512238777E9))  WHEN (((-171695977))==((rt1.c3))) THEN ((((rt1.c6)AND(rt1.c3)))OR(rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3)AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((0.46284808611082884))<=(((NOT (rt1.c6))))) DESC  NULLS FIRST, CASE ((rt1.c2)GLOB(1.512238777E9))  WHEN (((-171695977))=((rt1.c3))) THEN ((((rt1.c6)AND(rt1.c3)))OR(rt1.c2)) END  NULLS FIRST);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt0.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3)AND(rt0.c1)))))) ORDER BY (((0.46284808611082884))<=(((NOT (rt1.c6))))) DESC  NULLS FIRST, CASE ((rt1.c2)GLOB(1.512238777E9))  WHEN (((-171695977))==((rt1.c3))) THEN ((((rt1.c6)AND(rt1.c3)))OR(rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3)AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((0.46284808611082884))<=(((NOT (rt1.c6))))) DESC  NULLS FIRST, CASE ((rt1.c2)GLOB(1.512238777E9))  WHEN (((-171695977))=((rt1.c3))) THEN ((((rt1.c6)AND(rt1.c3)))OR(rt1.c2)) END  NULLS FIRST);
SELECT * FROM rt0, rt1, vt0 WHERE ((((rt0.c3)) BETWEEN (((~ (rt1.c2)))) AND ((((rt1.c3)AND(rt0.c1)))))) ORDER BY (((0.46284808611082884))<=(((NOT (rt1.c6))))) DESC  NULLS FIRST, CASE ((rt1.c2)GLOB(1.512238777E9))  WHEN (((-171695977))==((rt1.c3))) THEN ((((rt1.c6)AND(rt1.c3)))OR(rt1.c2)) END  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c2 THEN 0.6438531438155227 WHEN ((((((((rt1.c1)AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c4)))OR(rt1.c5)) THEN ((rt1.c5) ISNULL) WHEN (- (rt1.c6)) THEN (((rt1.c4))<=((rt1.c1))) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN 0.6438531438155227 WHEN ((((((((rt1.c1)AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c4)))OR(rt1.c5)) THEN ((rt1.c5) ISNULL) WHEN (- (rt1.c6)) THEN (((rt1.c4))<=((rt1.c1))) ELSE rt1.c1 END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c2 THEN 0.6438531438155227 WHEN ((((((((rt1.c1)AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c4)))OR(rt1.c5)) THEN ((rt1.c5) ISNULL) WHEN (- (rt1.c6)) THEN (((rt1.c4))<=((rt1.c1))) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN 0.6438531438155227 WHEN ((((((((rt1.c1)AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c4)))OR(rt1.c5)) THEN ((rt1.c5) ISNULL) WHEN (- (rt1.c6)) THEN (((rt1.c4))<=((rt1.c1))) ELSE rt1.c1 END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE WHEN rt1.c2 THEN 0.6438531438155227 WHEN ((((((((rt1.c1)AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c4)))OR(rt1.c5)) THEN ((rt1.c5) ISNULL) WHEN (- (rt1.c6)) THEN (((rt1.c4))<=((rt1.c1))) ELSE rt1.c1 END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c6)>>(vt0.c0)))<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c6 END))) ORDER BY ((((((((CASE WHEN rt1.c5 THEN rt1.c2 END)AND(((rt1.c4)>(rt1.c3)))))AND((('[]')>=(rt1.c6)))))AND(CASE rt1.c2  WHEN '^PSRuh巢' THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND((((rt1.c4))>((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6)>>(vt0.c0)))<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c6 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((CASE WHEN rt1.c5 THEN rt1.c2 END)AND(((rt1.c4)>(rt1.c3)))))AND((('[]')>=(rt1.c6)))))AND(CASE rt1.c2  WHEN '^PSRuh巢' THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND((((rt1.c4))>((vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c6)>>(vt0.c0)))<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c6 END))) ORDER BY ((((((((CASE WHEN rt1.c5 THEN rt1.c2 END)AND(((rt1.c4)>(rt1.c3)))))AND((('[]')>=(rt1.c6)))))AND(CASE rt1.c2  WHEN '^PSRuh巢' THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND((((rt1.c4))>((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6)>>(vt0.c0)))<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c6 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((CASE WHEN rt1.c5 THEN rt1.c2 END)AND(((rt1.c4)>(rt1.c3)))))AND((('[]')>=(rt1.c6)))))AND(CASE rt1.c2  WHEN '^PSRuh巢' THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND((((rt1.c4))>((vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c6)>>(vt0.c0)))<<(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c6 END))) ORDER BY ((((((((CASE WHEN rt1.c5 THEN rt1.c2 END)AND(((rt1.c4)>(rt1.c3)))))AND((('[]')>=(rt1.c6)))))AND(CASE rt1.c2  WHEN '^PSRuh巢' THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)))AND((((rt1.c4))>((vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.8948987949656488));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.8948987949656488)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.8948987949656488));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.8948987949656488)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (+ (vt0.c0)), 0.8948987949656488));
SELECT * FROM rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((ABS(rt1.c3))) AND ((CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 WHEN rt1.c6 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c4 END)))) ORDER BY ((TRIM(rt0.c1)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((ABS(rt1.c3))) AND ((CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 WHEN rt1.c6 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c4 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((TRIM(rt0.c1)) ISNULL) DESC);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((ABS(rt1.c3))) AND ((CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 WHEN rt1.c6 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c4 END)))) ORDER BY ((TRIM(rt0.c1)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((ABS(rt1.c3))) AND ((CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 WHEN rt1.c6 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c4 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((TRIM(rt0.c1)) ISNULL) DESC);
SELECT * FROM rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((ABS(rt1.c3))) AND ((CASE rt0.c3  WHEN rt1.c4 THEN rt0.c4 WHEN rt1.c6 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c4 END)))) ORDER BY ((TRIM(rt0.c1)) ISNULL) DESC;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)IS NOT(rt0.c3)))OR(rt1.c6)))AND(CAST(vt0.c0 AS INTEGER))) INNER JOIN rt1 ON LENGTH(((rt1.c6)>>(rt1.c2))) WHERE (((-1.84491333E9) NOTNULL)) ORDER BY json_type(((rt1.c5)OR(rt1.c5))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((-1.84491333E9) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)IS NOT(rt0.c3)))OR(rt1.c6)))AND(CAST(vt0.c0 AS INTEGER))) INNER JOIN rt1 ON LENGTH(((rt1.c6)>>(rt1.c2))) ORDER BY json_type(((rt1.c5)OR(rt1.c5))) DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)IS NOT(rt0.c3)))OR(rt1.c6)))AND(CAST(vt0.c0 AS INTEGER))) INNER JOIN rt1 ON LENGTH(((rt1.c6)>>(rt1.c2))) WHERE (((-1.84491333E9) NOTNULL)) ORDER BY json_type(((rt1.c5)OR(rt1.c5))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((-1.84491333E9) NOTNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)IS NOT(rt0.c3)))OR(rt1.c6)))AND(CAST(vt0.c0 AS INTEGER))) INNER JOIN rt1 ON LENGTH(((rt1.c6)>>(rt1.c2))) ORDER BY json_type(((rt1.c5)OR(rt1.c5))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST(TRIM(rt1.c6) AS REAL)) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c4 IN (rt0.c2)) THEN ((((rt1.c5)AND(rt1.c0)))OR(rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt1.c6) AS REAL)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c4 IN (rt0.c2)) THEN ((((rt1.c5)AND(rt1.c0)))OR(rt0.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST(TRIM(rt1.c6) AS REAL)) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c4 IN (rt0.c2)) THEN ((((rt1.c5)AND(rt1.c0)))OR(rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt1.c6) AS REAL)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c4 IN (rt0.c2)) THEN ((((rt1.c5)AND(rt1.c0)))OR(rt0.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST(TRIM(rt1.c6) AS REAL)) ORDER BY CASE CAST(rt0.c2 AS BLOB)  WHEN (rt0.c4 IN (rt0.c2)) THEN ((((rt1.c5)AND(rt1.c0)))OR(rt0.c2)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c5)>(rt1.c5)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c5)>(rt1.c5)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c5)>(rt1.c5)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c5)>(rt1.c5)) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c5)>(rt1.c5)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))GLOB((vt0.c0 IN (vt0.c0, 0.7733083004940178))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (('155402643') NOTNULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))GLOB((vt0.c0 IN (vt0.c0, 0.7733083004940178))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (('155402643') NOTNULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))GLOB((vt0.c0 IN (vt0.c0, 0.7733083004940178))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (('155402643') NOTNULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))GLOB((vt0.c0 IN (vt0.c0, 0.7733083004940178))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (('155402643') NOTNULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))GLOB((vt0.c0 IN (vt0.c0, 0.7733083004940178))))) ORDER BY (+ (CAST(vt0.c0 AS NUMERIC))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (('155402643') NOTNULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)==(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END DESC;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c3))>((rt0.c3))))/((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>((rt0.c3))))/((- (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c3))>((rt0.c3))))/((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>((rt0.c3))))/((- (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c3))>((rt0.c3))))/((- (rt0.c3)))));
SELECT ALL * FROM rt1, vt0 WHERE ((NOT (rt1.c6)) COLLATE NOCASE) ORDER BY ((((rt1.c3)%(rt1.c6)))<=(((rt1.c3)||(vt0.c0)))) DESC, HEX(((((((((vt0.c0)AND(36950847)))OR(rt1.c3)))OR(vt0.c0)))AND(rt1.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c6)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c3)%(rt1.c6)))<=(((rt1.c3)||(vt0.c0)))) DESC, HEX(((((((((vt0.c0)AND(36950847)))OR(rt1.c3)))OR(vt0.c0)))AND(rt1.c3))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((NOT (rt1.c6)) COLLATE NOCASE) ORDER BY ((((rt1.c3)%(rt1.c6)))<=(((rt1.c3)||(vt0.c0)))) DESC, HEX(((((((((vt0.c0)AND(36950847)))OR(rt1.c3)))OR(vt0.c0)))AND(rt1.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c6)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c3)%(rt1.c6)))<=(((rt1.c3)||(vt0.c0)))) DESC, HEX(((((((((vt0.c0)AND(36950847)))OR(rt1.c3)))OR(vt0.c0)))AND(rt1.c3))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((NOT (rt1.c6)) COLLATE NOCASE) ORDER BY ((((rt1.c3)%(rt1.c6)))<=(((rt1.c3)||(vt0.c0)))) DESC, HEX(((((((((vt0.c0)AND(36950847)))OR(rt1.c3)))OR(vt0.c0)))AND(rt1.c3))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(x''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(x''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(x'')));
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (SUBSTR(((rt1.c3) BETWEEN (rt1.c6) AND (rt0.c0)), rt0.c1 COLLATE RTRIM)) ORDER BY ((((0.9157396145999178) NOT BETWEEN (rt1.c3) AND (rt0.c3))) IS TRUE) DESC, (NOT (((rt1.c2)IS NOT(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt1.c3) BETWEEN (rt1.c6) AND (rt0.c0)), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt1.c0 ORDER BY ((((0.9157396145999178) NOT BETWEEN (rt1.c3) AND (rt0.c3))) IS TRUE) DESC, (NOT (((rt1.c2)IS NOT(rt1.c2)))) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (SUBSTR(((rt1.c3) BETWEEN (rt1.c6) AND (rt0.c0)), rt0.c1 COLLATE RTRIM)) ORDER BY ((((0.9157396145999178) NOT BETWEEN (rt1.c3) AND (rt0.c3))) IS TRUE) DESC, (NOT (((rt1.c2)IS NOT(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt1.c3) BETWEEN (rt1.c6) AND (rt0.c0)), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt1.c0 ORDER BY ((((0.9157396145999178) NOT BETWEEN (rt1.c3) AND (rt0.c3))) IS TRUE) DESC, (NOT (((rt1.c2)IS NOT(rt1.c2)))) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (SUBSTR(((rt1.c3) BETWEEN (rt1.c6) AND (rt0.c0)), rt0.c1 COLLATE RTRIM)) ORDER BY ((((0.9157396145999178) NOT BETWEEN (rt1.c3) AND (rt0.c3))) IS TRUE) DESC, (NOT (((rt1.c2)IS NOT(rt1.c2)))) ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt1.c4)AND(rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)AND(rt1.c3))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt1.c4)AND(rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4)AND(rt1.c3))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt1.c4)AND(rt1.c3)));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((((vt0.c0 IN (rt1.c2)))>>(((rt1.c6)%(rt0.c3))))) ORDER BY ((((- (rt1.c3))))>=((((((((((rt1.c3)AND(rt1.c3)))OR('^p[2ez㓯L')))OR(rt1.c4)))OR(rt1.c6)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt1.c2)))>>(((rt1.c6)%(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((- (rt1.c3))))>=((((((((((rt1.c3)AND(rt1.c3)))OR('^p[2ez㓯L')))OR(rt1.c4)))OR(rt1.c6))))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((((vt0.c0 IN (rt1.c2)))>>(((rt1.c6)%(rt0.c3))))) ORDER BY ((((- (rt1.c3))))>=((((((((((rt1.c3)AND(rt1.c3)))OR('^p[2ez㓯L')))OR(rt1.c4)))OR(rt1.c6)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt1.c2)))>>(((rt1.c6)%(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((((- (rt1.c3))))>=((((((((((rt1.c3)AND(rt1.c3)))OR('^p[2ez㓯L')))OR(rt1.c4)))OR(rt1.c6))))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((((vt0.c0 IN (rt1.c2)))>>(((rt1.c6)%(rt0.c3))))) ORDER BY ((((- (rt1.c3))))>=((((((((((rt1.c3)AND(rt1.c3)))OR('^p[2ez㓯L')))OR(rt1.c4)))OR(rt1.c6)))));
SELECT ALL * FROM rt0 WHERE ((- (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((ABS(DISTINCT '760763974'))OR((- (rt1.c6))))) ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c4)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT '760763974'))OR((- (rt1.c6))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c4)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((ABS(DISTINCT '760763974'))OR((- (rt1.c6))))) ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c4)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT '760763974'))OR((- (rt1.c6))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c4)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((ABS(DISTINCT '760763974'))OR((- (rt1.c6))))) ORDER BY ((((rt1.c2)OR(rt1.c2)))OR(rt1.c4)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+((- (0.4101761488920084))))) ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+((- (0.4101761488920084))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+((- (0.4101761488920084))))) ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+((- (0.4101761488920084))))) IS TRUE)  as count FROM vt0 ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+((- (0.4101761488920084))))) ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((((x'bc6f')LIKE(rt1.c1)))<>(QUOTE(0.8675037675803371))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'bc6f')LIKE(rt1.c1)))!=(QUOTE(0.8675037675803371)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((((x'bc6f')LIKE(rt1.c1)))<>(QUOTE(0.8675037675803371))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'bc6f')LIKE(rt1.c1)))!=(QUOTE(0.8675037675803371)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (((((x'bc6f')LIKE(rt1.c1)))<>(QUOTE(0.8675037675803371))));
SELECT COUNT(*) FROM rt0 WHERE ((- ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- ((~ (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c2)<<(rt1.c3)) IN ())) ORDER BY highlight(((rt0.c4)>=(rt0.c2)), x'', (+ (rt0.c2)), ((rt0.c0) ISNULL)), json_extract(((rt0.c1) NOT NULL), ((rt1.c6)-(rt1.c4))) ASC, TYPEOF(DISTINCT rt0.c4)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<<(rt1.c3)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY highlight(((rt0.c4)>=(rt0.c2)), x'', (+ (rt0.c2)), ((rt0.c0) ISNULL)), json_extract(((rt0.c1) NOT NULL), ((rt1.c6)-(rt1.c4))) ASC, TYPEOF(DISTINCT rt0.c4)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt0.c2)<<(rt1.c3)) IN ())) ORDER BY highlight(((rt0.c4)>=(rt0.c2)), x'', (+ (rt0.c2)), ((rt0.c0) ISNULL)), json_extract(((rt0.c1) NOT NULL), ((rt1.c6)-(rt1.c4))) ASC, TYPEOF(DISTINCT rt0.c4)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)<<(rt1.c3)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY highlight(((rt0.c4)>=(rt0.c2)), x'', (+ (rt0.c2)), ((rt0.c0) ISNULL)), json_extract(((rt0.c1) NOT NULL), ((rt1.c6)-(rt1.c4))) ASC, TYPEOF(DISTINCT rt0.c4)  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (rt0.c0) ORDER BY (((((rt1.c5) NOT NULL), (((rt0.c3))=((rt1.c2))), (rt1.c5 IN ())))>((CAST(rt0.c1 AS BLOB), ((rt0.c4)<<('-752798102')), ((rt0.c2)==(x''))))), CASE (((rt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))  WHEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))OR(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((rt1.c5) NOT NULL), (((rt0.c3))=((rt1.c2))), (rt1.c5 IN ())))>((CAST(rt0.c1 AS BLOB), ((rt0.c4)<<('-752798102')), ((rt0.c2)=(x''))))), CASE (((rt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))  WHEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))OR(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (rt0.c0) ORDER BY (((((rt1.c5) NOT NULL), (((rt0.c3))=((rt1.c2))), (rt1.c5 IN ())))>((CAST(rt0.c1 AS BLOB), ((rt0.c4)<<('-752798102')), ((rt0.c2)==(x''))))), CASE (((rt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))  WHEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))OR(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((rt1.c5) NOT NULL), (((rt0.c3))=((rt1.c2))), (rt1.c5 IN ())))>((CAST(rt0.c1 AS BLOB), ((rt0.c4)<<('-752798102')), ((rt0.c2)=(x''))))), CASE (((rt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))  WHEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))OR(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (rt0.c0) ORDER BY (((((rt1.c5) NOT NULL), (((rt0.c3))=((rt1.c2))), (rt1.c5 IN ())))>((CAST(rt0.c1 AS BLOB), ((rt0.c4)<<('-752798102')), ((rt0.c2)==(x''))))), CASE (((rt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))  WHEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN ((((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)))OR(vt0.c0)))AND(rt1.c4)))OR(vt0.c0)))AND(rt0.c1)) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY ((NULL)<((rt0.c1 IN ())))  NULLS LAST, UPPER(DISTINCT LIKELIHOOD(rt0.c2, 0.5097630749636863)) DESC  NULLS FIRST, LAST_INSERT_ROWID() DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NULL)<((rt0.c1 IN ())))  NULLS LAST, UPPER(DISTINCT LIKELIHOOD(rt0.c2, 0.5097630749636863)) DESC  NULLS FIRST, LAST_INSERT_ROWID() DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY ((NULL)<((rt0.c1 IN ())))  NULLS LAST, UPPER(DISTINCT LIKELIHOOD(rt0.c2, 0.5097630749636863)) DESC  NULLS FIRST, LAST_INSERT_ROWID() DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NULL)<((rt0.c1 IN ())))  NULLS LAST, UPPER(DISTINCT LIKELIHOOD(rt0.c2, 0.5097630749636863)) DESC  NULLS FIRST, LAST_INSERT_ROWID() DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY ((NULL)<((rt0.c1 IN ())))  NULLS LAST, UPPER(DISTINCT LIKELIHOOD(rt0.c2, 0.5097630749636863)) DESC  NULLS FIRST, LAST_INSERT_ROWID() DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.6997762372201551) WHERE ((((rt0.c2))>=((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>=((rt0.c3)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.6997762372201551));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.6997762372201551) WHERE ((((rt0.c2))>=((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))>=((rt0.c3)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.6997762372201551));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.6997762372201551) WHERE ((((rt0.c2))>=((rt0.c3))));
SELECT * FROM rt1 WHERE (CASE rt1.c6 COLLATE RTRIM  WHEN ((rt1.c0)AND(0.8247709949606564)) THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END WHEN (((rt1.c5))<((rt1.c0))) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c6))) WHEN ((rt1.c6)AND(rt1.c6)) THEN (- (rt1.c1)) WHEN CAST(rt1.c5 AS REAL) THEN COALESCE(rt1.c5, rt1.c4, rt1.c3, rt1.c2) WHEN rt1.c5 COLLATE BINARY THEN 'liiﹰ3>w5D' ELSE ((rt1.c1)==(x'')) END) ORDER BY (NOT (((rt1.c3) NOT NULL)))  NULLS FIRST, (+ ((((rt1.c1))>((rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((CASE rt1.c6 COLLATE RTRIM  WHEN ((rt1.c0)AND(0.8247709949606564)) THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END WHEN (((rt1.c5))<((rt1.c0))) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c6))) WHEN ((rt1.c6)AND(rt1.c6)) THEN (- (rt1.c1)) WHEN CAST(rt1.c5 AS REAL) THEN COALESCE(rt1.c5, rt1.c4, rt1.c3, rt1.c2) WHEN rt1.c5 COLLATE BINARY THEN 'liiﹰ3>w5D' ELSE ((rt1.c1)==(x'')) END) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c3) NOT NULL)))  NULLS FIRST, (+ ((((rt1.c1))>((rt1.c3))))));
SELECT * FROM rt1 WHERE (CASE rt1.c6 COLLATE RTRIM  WHEN ((rt1.c0)AND(0.8247709949606564)) THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END WHEN (((rt1.c5))<((rt1.c0))) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c6))) WHEN ((rt1.c6)AND(rt1.c6)) THEN (- (rt1.c1)) WHEN CAST(rt1.c5 AS REAL) THEN COALESCE(rt1.c5, rt1.c4, rt1.c3, rt1.c2) WHEN rt1.c5 COLLATE BINARY THEN 'liiﹰ3>w5D' ELSE ((rt1.c1)==(x'')) END) ORDER BY (NOT (((rt1.c3) NOT NULL)))  NULLS FIRST, (+ ((((rt1.c1))>((rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((CASE rt1.c6 COLLATE RTRIM  WHEN ((rt1.c0)AND(0.8247709949606564)) THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END WHEN (((rt1.c5))<((rt1.c0))) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c6))) WHEN ((rt1.c6)AND(rt1.c6)) THEN (- (rt1.c1)) WHEN CAST(rt1.c5 AS REAL) THEN COALESCE(rt1.c5, rt1.c4, rt1.c3, rt1.c2) WHEN rt1.c5 COLLATE BINARY THEN 'liiﹰ3>w5D' ELSE ((rt1.c1)==(x'')) END) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c3) NOT NULL)))  NULLS FIRST, (+ ((((rt1.c1))>((rt1.c3))))));
SELECT * FROM rt1 WHERE (CASE rt1.c6 COLLATE RTRIM  WHEN ((rt1.c0)AND(0.8247709949606564)) THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END WHEN (((rt1.c5))<((rt1.c0))) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c6))) WHEN ((rt1.c6)AND(rt1.c6)) THEN (- (rt1.c1)) WHEN CAST(rt1.c5 AS REAL) THEN COALESCE(rt1.c5, rt1.c4, rt1.c3, rt1.c2) WHEN rt1.c5 COLLATE BINARY THEN 'liiﹰ3>w5D' ELSE ((rt1.c1)==(x'')) END) ORDER BY (NOT (((rt1.c3) NOT NULL)))  NULLS FIRST, (+ ((((rt1.c1))>((rt1.c3)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (json_insert(NULL, rt0.c4, rt1.c4) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c4) NOT BETWEEN (((rt0.c0)/(rt1.c0))) AND (((x'') BETWEEN (rt1.c5) AND (rt1.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (json_insert(NULL, rt0.c4, rt1.c4) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c4) NOT BETWEEN (((rt0.c0)/(rt1.c0))) AND (((x'') BETWEEN (rt1.c5) AND (rt1.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (json_insert(NULL, rt0.c4, rt1.c4) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c4) NOT BETWEEN (((rt0.c0)/(rt1.c0))) AND (((x'') BETWEEN (rt1.c5) AND (rt1.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (json_insert(NULL, rt0.c4, rt1.c4) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c4) NOT BETWEEN (((rt0.c0)/(rt1.c0))) AND (((x'') BETWEEN (rt1.c5) AND (rt1.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (json_insert(NULL, rt0.c4, rt1.c4) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c4) NOT BETWEEN (((rt0.c0)/(rt1.c0))) AND (((x'') BETWEEN (rt1.c5) AND (rt1.c0)))) WHERE (NULL);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (json_type(TIME(rt0.c0, rt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_type(TIME(rt0.c0, rt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (json_type(TIME(rt0.c0, rt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_type(TIME(rt0.c0, rt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (json_type(TIME(rt0.c0, rt0.c0, vt0.c0)));
SELECT * FROM vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (SQLITE_COMPILEOPTION_GET(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (SQLITE_COMPILEOPTION_GET(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(vt0.c0))));
SELECT * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c5)/(rt1.c1))) AND ((NOT (rt1.c1))))) ORDER BY (((((rt1.c2) ISNULL), (((rt1.c1))>((rt1.c3))), rt1.c4 COLLATE BINARY))=(((((rt1.c4, rt1.c3, rt1.c2))>=((rt1.c2, rt1.c1, rt1.c2))), CAST(rt1.c0 AS BLOB), (+ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c5)/(rt1.c1))) AND ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) ISNULL), (((rt1.c1))>((rt1.c3))), rt1.c4 COLLATE BINARY))=(((((rt1.c4, rt1.c3, rt1.c2))>=((rt1.c2, rt1.c1, rt1.c2))), CAST(rt1.c0 AS BLOB), (+ (rt1.c4))))));
SELECT * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c5)/(rt1.c1))) AND ((NOT (rt1.c1))))) ORDER BY (((((rt1.c2) ISNULL), (((rt1.c1))>((rt1.c3))), rt1.c4 COLLATE BINARY))=(((((rt1.c4, rt1.c3, rt1.c2))>=((rt1.c2, rt1.c1, rt1.c2))), CAST(rt1.c0 AS BLOB), (+ (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c5)/(rt1.c1))) AND ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) ISNULL), (((rt1.c1))>((rt1.c3))), rt1.c4 COLLATE BINARY))=(((((rt1.c4, rt1.c3, rt1.c2))>=((rt1.c2, rt1.c1, rt1.c2))), CAST(rt1.c0 AS BLOB), (+ (rt1.c4))))));
SELECT * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c5)/(rt1.c1))) AND ((NOT (rt1.c1))))) ORDER BY (((((rt1.c2) ISNULL), (((rt1.c1))>((rt1.c3))), rt1.c4 COLLATE BINARY))=(((((rt1.c4, rt1.c3, rt1.c2))>=((rt1.c2, rt1.c1, rt1.c2))), CAST(rt1.c0 AS BLOB), (+ (rt1.c4)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END)) AND (((('-1598095760') NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END)) AND (((('-1598095760') NOTNULL))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END)) AND (((('-1598095760') NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END)) AND (((('-1598095760') NOTNULL))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END)) AND (((('-1598095760') NOTNULL)))));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((('') BETWEEN (((rt1.c2) ISNULL)) AND ((NULL IN (rt1.c1, 0.8085927294206942))))) ORDER BY ((((x'e875')&(rt0.c1)))>=(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (((rt1.c2) ISNULL)) AND ((NULL IN (rt1.c1, 0.8085927294206942))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((((x'e875')&(rt0.c1)))>=(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((('') BETWEEN (((rt1.c2) ISNULL)) AND ((NULL IN (rt1.c1, 0.8085927294206942))))) ORDER BY ((((x'e875')&(rt0.c1)))>=(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT (((('') BETWEEN (((rt1.c2) ISNULL)) AND ((NULL IN (rt1.c1, 0.8085927294206942))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((((x'e875')&(rt0.c1)))>=(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE ((('') BETWEEN (((rt1.c2) ISNULL)) AND ((NULL IN (rt1.c1, 0.8085927294206942))))) ORDER BY ((((x'e875')&(rt0.c1)))>=(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END));
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((+ (((rt0.c4) NOT BETWEEN (vt0.c0) AND ('36950847')))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c4) NOT BETWEEN (vt0.c0) AND ('36950847'))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((+ (((rt0.c4) NOT BETWEEN (vt0.c0) AND ('36950847')))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c4) NOT BETWEEN (vt0.c0) AND ('36950847'))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE ((+ (((rt0.c4) NOT BETWEEN (vt0.c0) AND ('36950847')))));
SELECT * FROM vt0, rt0 WHERE (HEX(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (HEX(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (HEX(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c1))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c3 IN ()) AS INTEGER) WHERE (CASE (((rt1.c6, rt0.c0, rt1.c3))>=((rt1.c5, rt0.c4, rt1.c4)))  WHEN (((('')OR(rt0.c3)))AND(rt1.c0)) THEN 'T' COLLATE NOCASE ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c6, rt0.c0, rt1.c3))>=((rt1.c5, rt0.c4, rt1.c4)))  WHEN (((('')OR(rt0.c3)))AND(rt1.c0)) THEN 'T' COLLATE NOCASE ELSE rt0.c2 END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c3 IN ()) AS INTEGER));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c3 IN ()) AS INTEGER) WHERE (CASE (((rt1.c6, rt0.c0, rt1.c3))>=((rt1.c5, rt0.c4, rt1.c4)))  WHEN (((('')OR(rt0.c3)))AND(rt1.c0)) THEN 'T' COLLATE NOCASE ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c6, rt0.c0, rt1.c3))>=((rt1.c5, rt0.c4, rt1.c4)))  WHEN (((('')OR(rt0.c3)))AND(rt1.c0)) THEN 'T' COLLATE NOCASE ELSE rt0.c2 END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c3 IN ()) AS INTEGER));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON CAST((rt1.c3 IN ()) AS INTEGER) WHERE (CASE (((rt1.c6, rt0.c0, rt1.c3))>=((rt1.c5, rt0.c4, rt1.c4)))  WHEN (((('')OR(rt0.c3)))AND(rt1.c0)) THEN 'T' COLLATE NOCASE ELSE rt0.c2 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.2944632923805207)AND(rt0.c0)))AND(rt0.c2))) ISNULL)) ORDER BY rt0.c4  NULLS LAST, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((((0.2944632923805207)AND(rt0.c0)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4  NULLS LAST, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.2944632923805207)AND(rt0.c0)))AND(rt0.c2))) ISNULL)) ORDER BY rt0.c4  NULLS LAST, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((((0.2944632923805207)AND(rt0.c0)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4  NULLS LAST, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((0.2944632923805207)AND(rt0.c0)))AND(rt0.c2))) ISNULL)) ORDER BY rt0.c4  NULLS LAST, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (- ((((rt1.c6, rt1.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c4, rt1.c2)) AND (('8{V^n', rt1.c4, rt1.c4))))) WHERE ((((NOT (rt1.c1))) NOT BETWEEN (json_object(rt1.c1, rt1.c6, rt1.c6, NULL)) AND (((rt1.c1)-(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c0) NOT NULL) THEN rt1.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1))) NOT BETWEEN (json_object(rt1.c1, rt1.c6, rt1.c6, NULL)) AND (((rt1.c1)-(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (- ((((rt1.c6, rt1.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c4, rt1.c2)) AND (('8{V^n', rt1.c4, rt1.c4))))) ORDER BY CASE WHEN ((rt1.c0) NOT NULL) THEN rt1.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (- ((((rt1.c6, rt1.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c4, rt1.c2)) AND (('8{V^n', rt1.c4, rt1.c4))))) WHERE ((((NOT (rt1.c1))) NOT BETWEEN (json_object(rt1.c1, rt1.c6, rt1.c6, NULL)) AND (((rt1.c1)-(rt1.c0))))) ORDER BY CASE WHEN ((rt1.c0) NOT NULL) THEN rt1.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c1))) NOT BETWEEN (json_object(rt1.c1, rt1.c6, rt1.c6, NULL)) AND (((rt1.c1)-(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (- ((((rt1.c6, rt1.c0, vt0.c0)) BETWEEN ((vt0.c0, rt1.c4, rt1.c2)) AND (('8{V^n', rt1.c4, rt1.c4))))) ORDER BY CASE WHEN ((rt1.c0) NOT NULL) THEN rt1.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))) BETWEEN (((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c3)))AND(rt0.c4))) AND (((rt0.c1)%(rt1.c0)))) WHERE ((((NOT (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))) BETWEEN (((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c3)))AND(rt0.c4))) AND (((rt0.c1)%(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))) BETWEEN (((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c3)))AND(rt0.c4))) AND (((rt0.c1)%(rt1.c0)))) WHERE ((((NOT (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))) BETWEEN (((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c3)))AND(rt0.c4))) AND (((rt0.c1)%(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c1))) BETWEEN (((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c3)))AND(rt0.c4))) AND (((rt0.c1)%(rt1.c0)))) WHERE ((((NOT (rt1.c0))) ISNULL));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS TEXT))&((NOT (rt0.c3)))) WHERE (RTRIM(CAST(NULL AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CAST(NULL AS TEXT))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS TEXT))&((NOT (rt0.c3)))));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS TEXT))&((NOT (rt0.c3)))) WHERE (RTRIM(CAST(NULL AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CAST(NULL AS TEXT))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS TEXT))&((NOT (rt0.c3)))));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON ((CAST(rt1.c6 AS TEXT))&((NOT (rt0.c3)))) WHERE (RTRIM(CAST(NULL AS TEXT)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c6 END)/((rt1.c4 IN ())))) ORDER BY rt1.c5 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c6 END)/((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c5 ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c6 END)/((rt1.c4 IN ())))) ORDER BY rt1.c5 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c6 END)/((rt1.c4 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c5 ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c6 END)/((rt1.c4 IN ())))) ORDER BY rt1.c5 ASC;
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE (('') BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (NOT (((vt0.c0)||(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE (('') BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)||(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE (('') BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (NOT (((vt0.c0)||(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE (('') BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)||(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL ELSE (('') BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (NOT (((vt0.c0)||(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ ((+ ('zv'))))) ORDER BY (- ((rt0.c4 IN (rt0.c3, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ ('zv'))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c4 IN (rt0.c3, rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((+ ((+ ('zv'))))) ORDER BY (- ((rt0.c4 IN (rt0.c3, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ ('zv'))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c4 IN (rt0.c3, rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((+ ((+ ('zv'))))) ORDER BY (- ((rt0.c4 IN (rt0.c3, rt0.c1))));
SELECT * FROM rt0, rt1, vt0 WHERE ((((((rt0.c2))<=((rt1.c2)))) NOTNULL)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<=((rt1.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, vt0 NOT INDEXED ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0, rt1, vt0 WHERE ((((((rt0.c2))<=((rt1.c2)))) NOTNULL)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<=((rt1.c2)))) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, vt0 NOT INDEXED ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT * FROM rt0, rt1, vt0 WHERE ((((((rt0.c2))<=((rt1.c2)))) NOTNULL)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c3)*(rt0.c3)) AS TEXT)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE BINARY)), -5.80067531E8 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)*(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE BINARY)), -5.80067531E8 DESC);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c3)*(rt0.c3)) AS TEXT)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE BINARY)), -5.80067531E8 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3)*(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE BINARY)), -5.80067531E8 DESC);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c3)*(rt0.c3)) AS TEXT)) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN (((vt0.c0)<(rt0.c2))) AND (vt0.c0 COLLATE BINARY)), -5.80067531E8 DESC;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON ((rt0.c3)AND((((rt0.c0, rt1.c0, rt1.c3))>=((vt0.c0, rt1.c1, rt0.c0))))) WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON ((rt0.c3)AND((((rt0.c0, rt1.c0, rt1.c3))>=((vt0.c0, rt1.c1, rt0.c0))))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON ((rt0.c3)AND((((rt0.c0, rt1.c0, rt1.c3))>=((vt0.c0, rt1.c1, rt0.c0))))) WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON ((rt0.c3)AND((((rt0.c0, rt1.c0, rt1.c3))>=((vt0.c0, rt1.c1, rt0.c0))))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c3 LEFT OUTER JOIN rt0 ON ((rt0.c3)AND((((rt0.c0, rt1.c0, rt1.c3))>=((vt0.c0, rt1.c1, rt0.c0))))) WHERE (CHANGES());
SELECT ALL * FROM rt1 WHERE (0.3466278960303468);
SELECT SUM(count) FROM (SELECT ALL ((0.3466278960303468) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (0.3466278960303468);
SELECT SUM(count) FROM (SELECT ALL ((0.3466278960303468) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (0.3466278960303468);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END) IS FALSE)) ORDER BY (NOT (((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST, ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST, ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END) IS FALSE)) ORDER BY (NOT (((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST, ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST, ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END) IS FALSE)) ORDER BY (NOT (((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST, ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1)))AND((NOT (rt1.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (rt1.c1)))AND((NOT (rt1.c6))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1)))AND((NOT (rt1.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (rt1.c1)))AND((NOT (rt1.c6))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1)))AND((NOT (rt1.c6)))));
SELECT * FROM rt0 WHERE (-1.045445408E9);
SELECT SUM(count) FROM (SELECT ((-1.045445408E9) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-1.045445408E9);
SELECT SUM(count) FROM (SELECT ((-1.045445408E9) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-1.045445408E9);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(TYPEOF(DISTINCT rt0.c1)))) ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, (((rt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((0.7423279867451678, rt0.c0, rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)>(TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, (((rt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((0.7423279867451678, rt0.c0, rt0.c4)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(TYPEOF(DISTINCT rt0.c1)))) ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, (((rt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((0.7423279867451678, rt0.c0, rt0.c4)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)>(TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, (((rt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((0.7423279867451678, rt0.c0, rt0.c4)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(TYPEOF(DISTINCT rt0.c1)))) ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))), rt0.c3, (((rt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((0.7423279867451678, rt0.c0, rt0.c4)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))OR(TYPEOF(rt0.c0))) WHERE ((- (CASE vt0.c0  WHEN '-257289007' THEN vt0.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN '-257289007' THEN vt0.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))OR(TYPEOF(rt0.c0))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))OR(TYPEOF(rt0.c0))) WHERE ((- (CASE vt0.c0  WHEN '-257289007' THEN vt0.c0 ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN '-257289007' THEN vt0.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))OR(TYPEOF(rt0.c0))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((rt1.c4) ISNULL))OR(TYPEOF(rt0.c0))) WHERE ((- (CASE vt0.c0  WHEN '-257289007' THEN vt0.c0 ELSE rt0.c4 END)));
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c0))!=((rt0.c4))))GLOB(((rt0.c1) ISNULL)))) ORDER BY (+ (rt1.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))<>((rt0.c4))))GLOB(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ (rt1.c2))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c0))!=((rt0.c4))))GLOB(((rt0.c1) ISNULL)))) ORDER BY (+ (rt1.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))<>((rt0.c4))))GLOB(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (+ (rt1.c2))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE ((((((rt1.c0))!=((rt0.c4))))GLOB(((rt0.c1) ISNULL)))) ORDER BY (+ (rt1.c2))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (TYPEOF(CAST(vt0.c0 AS NUMERIC))) ORDER BY CAST((- (vt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(CAST(vt0.c0 AS NUMERIC))) ORDER BY CAST((- (vt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(CAST(vt0.c0 AS NUMERIC))) ORDER BY CAST((- (vt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 NATURAL JOIN rt1 WHERE (TYPEOF(rt1.c5 COLLATE NOCASE)) ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT NULL)  NULLS LAST, RTRIM((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt1.c5 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1 ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT NULL)  NULLS LAST, RTRIM((NOT (rt0.c0))));
SELECT * FROM rt0, vt0 NATURAL JOIN rt1 WHERE (TYPEOF(rt1.c5 COLLATE NOCASE)) ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT NULL)  NULLS LAST, RTRIM((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt1.c5 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1 ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT NULL)  NULLS LAST, RTRIM((NOT (rt0.c0))));
SELECT * FROM rt0, vt0 NATURAL JOIN rt1 WHERE (TYPEOF(rt1.c5 COLLATE NOCASE)) ORDER BY ((CAST(rt1.c4 AS TEXT)) NOT NULL)  NULLS LAST, RTRIM((NOT (rt0.c0)));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((rt1.c0) IS TRUE) COLLATE BINARY WHERE ((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3))))-(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3))))-(rt1.c2))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((rt1.c0) IS TRUE) COLLATE BINARY);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((rt1.c0) IS TRUE) COLLATE BINARY WHERE ((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3))))-(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3))))-(rt1.c2))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((rt1.c0) IS TRUE) COLLATE BINARY);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON ((rt1.c0) IS TRUE) COLLATE BINARY WHERE ((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c3))))-(rt1.c2)));
SELECT ALL * FROM rt0, vt0 NATURAL JOIN rt1 WHERE (((((x'') NOT BETWEEN (rt1.c6) AND (rt0.c4)))%((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (rt1.c6) AND (rt0.c4)))%((~ (rt1.c0))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN rt1 WHERE (((((x'') NOT BETWEEN (rt1.c6) AND (rt0.c4)))%((~ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (rt1.c6) AND (rt0.c4)))%((~ (rt1.c0))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN rt1 WHERE (((((x'') NOT BETWEEN (rt1.c6) AND (rt0.c4)))%((~ (rt1.c0)))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((((rt1.c2)*(rt1.c1))))>=((((rt0.c1)OR(rt1.c5))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)*(rt1.c1))))>=((((rt0.c1)OR(rt1.c5)))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((((rt1.c2)*(rt1.c1))))>=((((rt0.c1)OR(rt1.c5))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)*(rt1.c1))))>=((((rt0.c1)OR(rt1.c5)))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((((rt1.c2)*(rt1.c1))))>=((((rt0.c1)OR(rt1.c5))))));
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT ALL * FROM rt0, vt0 WHERE (x'185eb66f') ORDER BY CASE WHEN ((rt0.c1)-(rt0.c2)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE 'sPB7 ' END ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((x'185eb66f') IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c1)-(rt0.c2)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE 'sPB7 ' END ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END ASC);
SELECT ALL * FROM rt0, vt0 WHERE (x'185eb66f') ORDER BY CASE WHEN ((rt0.c1)-(rt0.c2)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE 'sPB7 ' END ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((x'185eb66f') IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c1)-(rt0.c2)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE 'sPB7 ' END ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END ASC);
SELECT ALL * FROM rt0, vt0 WHERE (x'185eb66f') ORDER BY CASE WHEN ((rt0.c1)-(rt0.c2)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE 'sPB7 ' END ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1593166311 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1593166311 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1593166311 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1593166311 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -1593166311 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (vt0.c0 IN (vt0.c0)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (('-1401479633' IN ())) ORDER BY CAST(rt0.c4 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((('-1401479633' IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c4 AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0 WHERE (('-1401479633' IN ())) ORDER BY CAST(rt0.c4 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((('-1401479633' IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c4 AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0 WHERE (('-1401479633' IN ())) ORDER BY CAST(rt0.c4 AS NUMERIC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE BINARY) ORDER BY (((IFNULL(rt1.c3, rt1.c4)))<(((NOT (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1 ORDER BY (((IFNULL(rt1.c3, rt1.c4)))<(((NOT (rt1.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE BINARY) ORDER BY (((IFNULL(rt1.c3, rt1.c4)))<(((NOT (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1 ORDER BY (((IFNULL(rt1.c3, rt1.c4)))<(((NOT (rt1.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE BINARY) ORDER BY (((IFNULL(rt1.c3, rt1.c4)))<(((NOT (rt1.c3)))))  NULLS LAST;
SELECT * FROM rt1 WHERE (0.5291423625200212) ORDER BY 0.22695063963456197  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5291423625200212) IS TRUE)  as count FROM rt1 ORDER BY 0.22695063963456197  NULLS LAST);
SELECT * FROM rt1 WHERE (0.5291423625200212) ORDER BY 0.22695063963456197  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5291423625200212) IS TRUE)  as count FROM rt1 ORDER BY 0.22695063963456197  NULLS LAST);
SELECT * FROM rt1 WHERE (0.5291423625200212) ORDER BY 0.22695063963456197  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)>=(rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c2)&(x'b395')))<>('-998484966')) DESC  NULLS LAST, '0.16394051964346135'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>=(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(x'b395')))!=('-998484966')) DESC  NULLS LAST, '0.16394051964346135'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)>=(rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c2)&(x'b395')))<>('-998484966')) DESC  NULLS LAST, '0.16394051964346135'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)>=(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(x'b395')))!=('-998484966')) DESC  NULLS LAST, '0.16394051964346135'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)>=(rt0.c2)) COLLATE RTRIM) ORDER BY ((((rt0.c2)&(x'b395')))<>('-998484966')) DESC  NULLS LAST, '0.16394051964346135'  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c0) NOTNULL)) WHERE (rt0.c1) ORDER BY (NOT (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c0) NOTNULL)) ORDER BY (NOT (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c0) NOTNULL)) WHERE (rt0.c1) ORDER BY (NOT (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c0) NOTNULL)) ORDER BY (NOT (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ABS(((rt0.c0) NOTNULL)) WHERE (rt0.c1) ORDER BY (NOT (CAST(rt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)AND(rt0.c3))) IS TRUE) FULL OUTER JOIN rt0 ON rt1.c0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)AND(rt0.c3))) IS TRUE) FULL OUTER JOIN rt0 ON rt1.c0);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)AND(rt0.c3))) IS TRUE) FULL OUTER JOIN rt0 ON rt1.c0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)AND(rt0.c3))) IS TRUE) FULL OUTER JOIN rt0 ON rt1.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c4)) IS FALSE)) ORDER BY rt0.c3 ASC  NULLS LAST, ((((rt0.c1)AND((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c4)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 ASC  NULLS LAST, ((((rt0.c1)AND((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c4)) IS FALSE)) ORDER BY rt0.c3 ASC  NULLS LAST, ((((rt0.c1)AND((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c4)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 ASC  NULLS LAST, ((((rt0.c1)AND((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c4)) IS FALSE)) ORDER BY rt0.c3 ASC  NULLS LAST, ((((rt0.c1)AND((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)), ((x'')||(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)), ((x'')||(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)), ((x'')||(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)), ((x'')||(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (+ (CASE WHEN rt0.c1 THEN rt0.c4 END)), ((x'')||(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))) DESC;
SELECT * FROM rt1 WHERE (CAST(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS REAL)) ORDER BY (- ((- (rt1.c2)))) ASC, (NOT (((rt1.c6) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (- ((- (rt1.c2)))) ASC, (NOT (((rt1.c6) NOT NULL)))  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS REAL)) ORDER BY (- ((- (rt1.c2)))) ASC, (NOT (((rt1.c6) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (- ((- (rt1.c2)))) ASC, (NOT (((rt1.c6) NOT NULL)))  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c0)) AS REAL)) ORDER BY (- ((- (rt1.c2)))) ASC, (NOT (((rt1.c6) NOT NULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) ORDER BY (+ (rt0.c4)) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c4)) DESC  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) ORDER BY (+ (rt0.c4)) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c4)) DESC  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) ORDER BY (+ (rt0.c4)) DESC  NULLS FIRST, NULL;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c6)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) IN (((((((((rt1.c5)OR(rt1.c5)))OR(-853859887)))AND(rt1.c5)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c6)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) IN (((((((((rt1.c5)OR(rt1.c5)))OR(-853859887)))AND(rt1.c5)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c6)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) IN (((((((((rt1.c5)OR(rt1.c5)))OR(-853859887)))AND(rt1.c5)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c6)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) IN (((((((((rt1.c5)OR(rt1.c5)))OR(-853859887)))AND(rt1.c5)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c6)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) IN (((((((((rt1.c5)OR(rt1.c5)))OR(-853859887)))AND(rt1.c5)))AND(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c1 CROSS JOIN vt0 ON ((('-1127504019' IN ()))<=(vt0.c0)) WHERE (TYPEOF((rt1.c0 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((rt1.c0 IN (rt0.c2)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c1 CROSS JOIN vt0 ON ((('-1127504019' IN ()))<=(vt0.c0)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c1 CROSS JOIN vt0 ON ((('-1127504019' IN ()))<=(vt0.c0)) WHERE (TYPEOF((rt1.c0 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((rt1.c0 IN (rt0.c2)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt1.c1 CROSS JOIN vt0 ON ((('-1127504019' IN ()))<=(vt0.c0)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c1 CROSS JOIN vt0 ON ((('-1127504019' IN ()))<=(vt0.c0)) WHERE (TYPEOF((rt1.c0 IN (rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c0)IS NOT(vt0.c0))) BETWEEN (0.3351770851498006) AND (((rt1.c5)AND(-623161807)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS NOT(vt0.c0))) BETWEEN (0.3351770851498006) AND (((rt1.c5)AND(-623161807))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c0)IS NOT(vt0.c0))) BETWEEN (0.3351770851498006) AND (((rt1.c5)AND(-623161807)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)IS NOT(vt0.c0))) BETWEEN (0.3351770851498006) AND (((rt1.c5)AND(-623161807))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c0)IS NOT(vt0.c0))) BETWEEN (0.3351770851498006) AND (((rt1.c5)AND(-623161807)))));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (x'd3a5dacb');
SELECT SUM(count) FROM (SELECT ((x'd3a5dacb') IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (x'd3a5dacb');
SELECT SUM(count) FROM (SELECT ((x'd3a5dacb') IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (x'd3a5dacb');
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((rt1.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((rt1.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((rt1.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0 WHERE (' ^');
SELECT SUM(count) FROM (SELECT ((' ^') IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0 WHERE (' ^');
SELECT SUM(count) FROM (SELECT ((' ^') IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0 WHERE (' ^');
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((((rt1.c0 IN ())) BETWEEN (rt1.c4 COLLATE RTRIM) AND (((((rt1.c4)OR(rt1.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) BETWEEN (rt1.c4 COLLATE RTRIM) AND (((((rt1.c4)OR(rt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((((rt1.c0 IN ())) BETWEEN (rt1.c4 COLLATE RTRIM) AND (((((rt1.c4)OR(rt1.c0)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) BETWEEN (rt1.c4 COLLATE RTRIM) AND (((((rt1.c4)OR(rt1.c0)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE ((((rt1.c0 IN ())) BETWEEN (rt1.c4 COLLATE RTRIM) AND (((((rt1.c4)OR(rt1.c0)))OR(rt1.c1)))));
SELECT * FROM rt0, rt1 INNER JOIN vt0 ON ((((((rt1.c4)AND(rt1.c1)))AND(rt1.c4)))IS NOT(((rt0.c0) NOT BETWEEN (rt1.c6) AND (rt1.c5)))) WHERE ((- (((((((((((((rt1.c2)AND(NULL)))OR(rt0.c0)))OR(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((((((rt1.c2)AND(NULL)))OR(rt0.c0)))OR(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON ((((((rt1.c4)AND(rt1.c1)))AND(rt1.c4)))IS NOT(((rt0.c0) NOT BETWEEN (rt1.c6) AND (rt1.c5)))));
SELECT * FROM rt0, rt1 INNER JOIN vt0 ON ((((((rt1.c4)AND(rt1.c1)))AND(rt1.c4)))IS NOT(((rt0.c0) NOT BETWEEN (rt1.c6) AND (rt1.c5)))) WHERE ((- (((((((((((((rt1.c2)AND(NULL)))OR(rt0.c0)))OR(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((((((rt1.c2)AND(NULL)))OR(rt0.c0)))OR(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt0 ON ((((((rt1.c4)AND(rt1.c1)))AND(rt1.c4)))IS NOT(((rt0.c0) NOT BETWEEN (rt1.c6) AND (rt1.c5)))));
SELECT * FROM rt0, rt1 INNER JOIN vt0 ON ((((((rt1.c4)AND(rt1.c1)))AND(rt1.c4)))IS NOT(((rt0.c0) NOT BETWEEN (rt1.c6) AND (rt1.c5)))) WHERE ((- (((((((((((((rt1.c2)AND(NULL)))OR(rt0.c0)))OR(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(rt1.c0)))));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((((rt0.c2)OR(rt1.c1)))AND('-375011615')))OR(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt1.c1)))AND('-375011615')))OR(SQLITE_VERSION()))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((((rt0.c2)OR(rt1.c1)))AND('-375011615')))OR(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt1.c1)))AND('-375011615')))OR(SQLITE_VERSION()))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (((((((rt0.c2)OR(rt1.c1)))AND('-375011615')))OR(SQLITE_VERSION())));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))OR(((rt0.c1) NOTNULL)))) ORDER BY ((((rt0.c2)>>(rt0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))OR(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY ((((rt0.c2)>>(rt0.c2))) IS FALSE) ASC);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))OR(((rt0.c1) NOTNULL)))) ORDER BY ((((rt0.c2)>>(rt0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))OR(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY ((((rt0.c2)>>(rt0.c2))) IS FALSE) ASC);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))OR(((rt0.c1) NOTNULL)))) ORDER BY ((((rt0.c2)>>(rt0.c2))) IS FALSE) ASC;
SELECT * FROM rt1, vt0 INNER JOIN rt0 ON ((CASE rt1.c6  WHEN rt1.c4 THEN rt1.c0 END) NOTNULL) WHERE (rt0.c3) ORDER BY (((((((((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))))OR(CASE rt1.c4  WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c5 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c3 END)))AND(rt0.c0)))OR(JULIANDAY(rt1.c6, rt0.c4, rt0.c4))))OR(rt1.c6 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 INNER JOIN rt0 ON ((CASE rt1.c6  WHEN rt1.c4 THEN rt1.c0 END) NOTNULL) ORDER BY (((((((((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))))OR(CASE rt1.c4  WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c5 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c3 END)))AND(rt0.c0)))OR(JULIANDAY(rt1.c6, rt0.c4, rt0.c4))))OR(rt1.c6 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 INNER JOIN rt0 ON ((CASE rt1.c6  WHEN rt1.c4 THEN rt1.c0 END) NOTNULL) WHERE (rt0.c3) ORDER BY (((((((((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))))OR(CASE rt1.c4  WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c5 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c3 END)))AND(rt0.c0)))OR(JULIANDAY(rt1.c6, rt0.c4, rt0.c4))))OR(rt1.c6 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0 INNER JOIN rt0 ON ((CASE rt1.c6  WHEN rt1.c4 THEN rt1.c0 END) NOTNULL) ORDER BY (((((((((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))))OR(CASE rt1.c4  WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c5 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c3 END)))AND(rt0.c0)))OR(JULIANDAY(rt1.c6, rt0.c4, rt0.c4))))OR(rt1.c6 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM rt1, vt0 INNER JOIN rt0 ON ((CASE rt1.c6  WHEN rt1.c4 THEN rt1.c0 END) NOTNULL) WHERE (rt0.c3) ORDER BY (((((((((((rt0.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4))))OR(CASE rt1.c4  WHEN rt0.c0 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c5 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c3 END)))AND(rt0.c0)))OR(JULIANDAY(rt1.c6, rt0.c4, rt0.c4))))OR(rt1.c6 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND((((x'', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND((((x'', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND((((x'', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND((((x'', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((~ (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND((((x'', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ('-275002786') ORDER BY ((-1.335285852E9)&(((rt0.c0)>(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-275002786') IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((-1.335285852E9)&(((rt0.c0)>(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ('-275002786') ORDER BY ((-1.335285852E9)&(((rt0.c0)>(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-275002786') IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((-1.335285852E9)&(((rt0.c0)>(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ('-275002786') ORDER BY ((-1.335285852E9)&(((rt0.c0)>(rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((x'') BETWEEN (rt1.c2) AND (rt1.c4)))IS(ABS(rt0.c0))) CROSS JOIN vt0 ON (((rt1.c5))<((rt1.c1))) COLLATE BINARY WHERE (CHANGES()) ORDER BY (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c5))) DESC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((x'') BETWEEN (rt1.c2) AND (rt1.c4)))IS(ABS(rt0.c0))) CROSS JOIN vt0 ON (((rt1.c5))<((rt1.c1))) COLLATE BINARY ORDER BY (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c5))) DESC);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((x'') BETWEEN (rt1.c2) AND (rt1.c4)))IS(ABS(rt0.c0))) CROSS JOIN vt0 ON (((rt1.c5))<((rt1.c1))) COLLATE BINARY WHERE (CHANGES()) ORDER BY (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c5))) DESC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((x'') BETWEEN (rt1.c2) AND (rt1.c4)))IS(ABS(rt0.c0))) CROSS JOIN vt0 ON (((rt1.c5))<((rt1.c1))) COLLATE BINARY ORDER BY (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c5))) DESC);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((x'') BETWEEN (rt1.c2) AND (rt1.c4)))IS(ABS(rt0.c0))) CROSS JOIN vt0 ON (((rt1.c5))<((rt1.c1))) COLLATE BINARY WHERE (CHANGES()) ORDER BY (((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c5))) DESC;
SELECT * FROM rt1, rt0, vt0 WHERE (json('&堮	\n')) ORDER BY (((((((rt0.c0))>((rt0.c3))))OR(0.2289238768323546)))AND(((rt1.c5) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json('&堮	\n')) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((((rt0.c0))>((rt0.c3))))OR(0.2289238768323546)))AND(((rt1.c5) IS TRUE))));
SELECT * FROM rt1, rt0, vt0 WHERE (json('&堮	\n')) ORDER BY (((((((rt0.c0))>((rt0.c3))))OR(0.2289238768323546)))AND(((rt1.c5) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json('&堮	\n')) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((((rt0.c0))>((rt0.c3))))OR(0.2289238768323546)))AND(((rt1.c5) IS TRUE))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c2, rt0.c3))) IS TRUE) WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c4))<>((rt0.c0, '\r\nE6', rt0.c0))))) AND ((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c4))!=((rt0.c0, '\r\nE6', rt0.c0))))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c2, rt0.c3))) IS TRUE));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c2, rt0.c3))) IS TRUE) WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c4))<>((rt0.c0, '\r\nE6', rt0.c0))))) AND ((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c4))!=((rt0.c0, '\r\nE6', rt0.c0))))) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c2, rt0.c3))) IS TRUE));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN (rt0.c2, rt0.c3))) IS TRUE) WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c4))<>((rt0.c0, '\r\nE6', rt0.c0))))) AND ((((vt0.c0) NOT NULL)))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((CASE WHEN rt1.c3 THEN rt1.c1 ELSE vt0.c0 END) IS TRUE)) ORDER BY (((rt0.c2)GLOB(rt1.c2)) IN (((((0xffffffffdf398410)AND(x'e074')))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c3 THEN rt1.c1 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((rt0.c2)GLOB(rt1.c2)) IN (((((0xffffffffdf398410)AND(x'e074')))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((CASE WHEN rt1.c3 THEN rt1.c1 ELSE vt0.c0 END) IS TRUE)) ORDER BY (((rt0.c2)GLOB(rt1.c2)) IN (((((0xffffffffdf398410)AND(x'e074')))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c3 THEN rt1.c1 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((rt0.c2)GLOB(rt1.c2)) IN (((((0xffffffffdf398410)AND(x'e074')))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (((CASE WHEN rt1.c3 THEN rt1.c1 ELSE vt0.c0 END) IS TRUE)) ORDER BY (((rt0.c2)GLOB(rt1.c2)) IN (((((0xffffffffdf398410)AND(x'e074')))AND(rt1.c2)), ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (TYPEOF((+ (vt0.c0)))) ORDER BY (- (((vt0.c0) NOTNULL))), (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (NULL) AND ((((vt0.c0))!=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOTNULL))), (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (NULL) AND ((((vt0.c0))<>((vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF((+ (vt0.c0)))) ORDER BY (- (((vt0.c0) NOTNULL))), (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (NULL) AND ((((vt0.c0))!=((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOTNULL))), (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (NULL) AND ((((vt0.c0))<>((vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF((+ (vt0.c0)))) ORDER BY (- (((vt0.c0) NOTNULL))), (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (NULL) AND ((((vt0.c0))!=((vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((~ (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((~ (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE ((~ (rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))>=((CAST(rt0.c3 AS BLOB))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN (0X72f234ef) AND (((('-580067531', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((0.6238184791410449, rt0.c0, rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))>=((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN (0x72f234ef) AND (((('-580067531', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((0.6238184791410449, rt0.c0, rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))>=((CAST(rt0.c3 AS BLOB))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN (0X72f234ef) AND (((('-580067531', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((0.6238184791410449, rt0.c0, rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))>=((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN (0x72f234ef) AND (((('-580067531', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((0.6238184791410449, rt0.c0, rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))>=((CAST(rt0.c3 AS BLOB))))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN (0X72f234ef) AND (((('-580067531', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((0.6238184791410449, rt0.c0, rt0.c1))))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((rt0.c2)||(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)||(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((rt0.c2)||(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)||(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((rt0.c2)||(rt0.c4)))));
SELECT ALL * FROM vt0 WHERE (1.7071153E7) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1.7071153E7) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (1.7071153E7) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((1.7071153E7) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (1.7071153E7) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0, JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((x'6f2d')&(vt0.c0)), CAST(0.3675689273534809 AS BLOB)))!=(((NOT (vt0.c0)), (~ (vt0.c0)), TRIM(vt0.c0, vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS REAL))))) ORDER BY ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND((vt0.c0 IN ()))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((x'6f2d')&(vt0.c0)), CAST(0.3675689273534809 AS BLOB)))!=(((NOT (vt0.c0)), (~ (vt0.c0)), TRIM(vt0.c0, vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND((vt0.c0 IN ()))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0, JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((x'6f2d')&(vt0.c0)), CAST(0.3675689273534809 AS BLOB)))!=(((NOT (vt0.c0)), (~ (vt0.c0)), TRIM(vt0.c0, vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS REAL))))) ORDER BY ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND((vt0.c0 IN ()))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((x'6f2d')&(vt0.c0)), CAST(0.3675689273534809 AS BLOB)))!=(((NOT (vt0.c0)), (~ (vt0.c0)), TRIM(vt0.c0, vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) IS TRUE))))AND(vt0.c0)))AND((vt0.c0 IN ()))) DESC  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((- (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((- (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((- (rt0.c3 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON rt0.c4 LEFT OUTER JOIN rt0 ON (+ (rt1.c2)) COLLATE BINARY WHERE (CASE WHEN (((rt1.c6)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) THEN '-1522303859' WHEN (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c3))) THEN rt0.c3 WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN CASE WHEN rt1.c5 THEN vt0.c0 END WHEN ((rt1.c1)>>(vt0.c0)) THEN json_valid(rt1.c0) WHEN CAST(0.8047103144048079 AS REAL) THEN ((rt1.c1) NOT BETWEEN (rt0.c3) AND ('0.6873499922123445')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt1.c6)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) THEN '-1522303859' WHEN (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c3))) THEN rt0.c3 WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN CASE WHEN rt1.c5 THEN vt0.c0 END WHEN ((rt1.c1)>>(vt0.c0)) THEN json_valid(rt1.c0) WHEN CAST(0.8047103144048079 AS REAL) THEN ((rt1.c1) NOT BETWEEN (rt0.c3) AND ('0.6873499922123445')) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt0.c4 LEFT OUTER JOIN rt0 ON (+ (rt1.c2)) COLLATE BINARY);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON rt0.c4 LEFT OUTER JOIN rt0 ON (+ (rt1.c2)) COLLATE BINARY WHERE (CASE WHEN (((rt1.c6)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) THEN '-1522303859' WHEN (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c3))) THEN rt0.c3 WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN CASE WHEN rt1.c5 THEN vt0.c0 END WHEN ((rt1.c1)>>(vt0.c0)) THEN json_valid(rt1.c0) WHEN CAST(0.8047103144048079 AS REAL) THEN ((rt1.c1) NOT BETWEEN (rt0.c3) AND ('0.6873499922123445')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt1.c6)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) THEN '-1522303859' WHEN (((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c3))) THEN rt0.c3 WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN CASE WHEN rt1.c5 THEN vt0.c0 END WHEN ((rt1.c1)>>(vt0.c0)) THEN json_valid(rt1.c0) WHEN CAST(0.8047103144048079 AS REAL) THEN ((rt1.c1) NOT BETWEEN (rt0.c3) AND ('0.6873499922123445')) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt0.c4 LEFT OUTER JOIN rt0 ON (+ (rt1.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c6  WHEN rt1.c2 THEN CASE WHEN '177851216' THEN rt1.c5 ELSE rt1.c3 END END) ORDER BY (+ (((((rt1.c3)AND(rt1.c4)))OR(rt1.c5)))), (~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3)))), ((('' IN (rt1.c3))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c6  WHEN rt1.c2 THEN CASE WHEN '177851216' THEN rt1.c5 ELSE rt1.c3 END END) IS TRUE)  as count FROM rt1 ORDER BY (+ (((((rt1.c3)AND(rt1.c4)))OR(rt1.c5)))), (~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3)))), ((('' IN (rt1.c3))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c6  WHEN rt1.c2 THEN CASE WHEN '177851216' THEN rt1.c5 ELSE rt1.c3 END END) ORDER BY (+ (((((rt1.c3)AND(rt1.c4)))OR(rt1.c5)))), (~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3)))), ((('' IN (rt1.c3))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c6  WHEN rt1.c2 THEN CASE WHEN '177851216' THEN rt1.c5 ELSE rt1.c3 END END) IS TRUE)  as count FROM rt1 ORDER BY (+ (((((rt1.c3)AND(rt1.c4)))OR(rt1.c5)))), (~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3)))), ((('' IN (rt1.c3))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c6  WHEN rt1.c2 THEN CASE WHEN '177851216' THEN rt1.c5 ELSE rt1.c3 END END) ORDER BY (+ (((((rt1.c3)AND(rt1.c4)))OR(rt1.c5)))), (~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c3)))), ((('' IN (rt1.c3))) IS TRUE) DESC;
SELECT * FROM vt0, rt1, rt0 WHERE (((((rt1.c5 COLLATE BINARY)OR(((((rt0.c1)OR(rt1.c2)))OR(rt1.c1)))))AND(0.41858912060933706)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5 COLLATE BINARY)OR(((((rt0.c1)OR(rt1.c2)))OR(rt1.c1)))))AND(0.41858912060933706))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (((((rt1.c5 COLLATE BINARY)OR(((((rt0.c1)OR(rt1.c2)))OR(rt1.c1)))))AND(0.41858912060933706)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5 COLLATE BINARY)OR(((((rt0.c1)OR(rt1.c2)))OR(rt1.c1)))))AND(0.41858912060933706))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (((((rt1.c5 COLLATE BINARY)OR(((((rt0.c1)OR(rt1.c2)))OR(rt1.c1)))))AND(0.41858912060933706)));
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((CAST(rt0.c2 AS INTEGER)) BETWEEN (((rt1.c6) NOTNULL)) AND (CASE WHEN rt0.c0 THEN rt0.c4 END))) ORDER BY (((rt1.c4, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c4) NOT NULL), (+ (rt1.c4)), ((rt0.c4)LIKE(vt0.c0)))) AND ((CASE rt1.c3  WHEN '-1018928094' THEN rt0.c2 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)), DATE(rt0.c1, rt1.c0, rt1.c6)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) BETWEEN (((rt1.c6) NOTNULL)) AND (CASE WHEN rt0.c0 THEN rt0.c4 END))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((rt1.c4, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c4) NOT NULL), (+ (rt1.c4)), ((rt0.c4)LIKE(vt0.c0)))) AND ((CASE rt1.c3  WHEN '-1018928094' THEN rt0.c2 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)), DATE(rt0.c1, rt1.c0, rt1.c6)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((CAST(rt0.c2 AS INTEGER)) BETWEEN (((rt1.c6) NOTNULL)) AND (CASE WHEN rt0.c0 THEN rt0.c4 END))) ORDER BY (((rt1.c4, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c4) NOT NULL), (+ (rt1.c4)), ((rt0.c4)LIKE(vt0.c0)))) AND ((CASE rt1.c3  WHEN '-1018928094' THEN rt0.c2 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)), DATE(rt0.c1, rt1.c0, rt1.c6)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) BETWEEN (((rt1.c6) NOTNULL)) AND (CASE WHEN rt0.c0 THEN rt0.c4 END))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((rt1.c4, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c4) NOT NULL), (+ (rt1.c4)), ((rt0.c4)LIKE(vt0.c0)))) AND ((CASE rt1.c3  WHEN '-1018928094' THEN rt0.c2 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)), DATE(rt0.c1, rt1.c0, rt1.c6)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((CAST(rt0.c2 AS INTEGER)) BETWEEN (((rt1.c6) NOTNULL)) AND (CASE WHEN rt0.c0 THEN rt0.c4 END))) ORDER BY (((rt1.c4, vt0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c4) NOT NULL), (+ (rt1.c4)), ((rt0.c4)LIKE(vt0.c0)))) AND ((CASE rt1.c3  WHEN '-1018928094' THEN rt0.c2 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)), DATE(rt0.c1, rt1.c0, rt1.c6)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((CASE rt0.c1  WHEN rt1.c6 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((('rNKmtH')) BETWEEN ((rt1.c6)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt1.c6 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((('rNKmtH')) BETWEEN ((rt1.c6)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((CASE rt0.c1  WHEN rt1.c6 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((('rNKmtH')) BETWEEN ((rt1.c6)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt1.c6 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((('rNKmtH')) BETWEEN ((rt1.c6)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((CASE rt0.c1  WHEN rt1.c6 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((('rNKmtH')) BETWEEN ((rt1.c6)) AND ((rt0.c3))))));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (TYPEOF(((vt0.c0) ISNULL))) ORDER BY (~ (CAST(rt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) ISNULL))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (~ (CAST(rt1.c1 AS BLOB))));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (TYPEOF(((vt0.c0) ISNULL))) ORDER BY (~ (CAST(rt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) ISNULL))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (~ (CAST(rt1.c1 AS BLOB))));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (TYPEOF(((vt0.c0) ISNULL))) ORDER BY (~ (CAST(rt1.c1 AS BLOB)));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)%(rt0.c0)))IS NOT(rt1.c4)) CROSS JOIN rt1 ON ((LIKE(rt1.c3, rt1.c4))>>(CASE rt0.c1  WHEN rt1.c5 THEN vt0.c0 END)) WHERE (LIKELIHOOD(DISTINCT CAST(rt1.c3 AS NUMERIC), 0.3058343609837483)) ORDER BY ('744190684' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt1.c3 AS NUMERIC), 0.3058343609837483)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)%(rt0.c0)))IS NOT(rt1.c4)) CROSS JOIN rt1 ON ((LIKE(rt1.c3, rt1.c4))>>(CASE rt0.c1  WHEN rt1.c5 THEN vt0.c0 END)) ORDER BY ('744190684' IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)%(rt0.c0)))IS NOT(rt1.c4)) CROSS JOIN rt1 ON ((LIKE(rt1.c3, rt1.c4))>>(CASE rt0.c1  WHEN rt1.c5 THEN vt0.c0 END)) WHERE (LIKELIHOOD(DISTINCT CAST(rt1.c3 AS NUMERIC), 0.3058343609837483)) ORDER BY ('744190684' IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt1.c3 AS NUMERIC), 0.3058343609837483)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)%(rt0.c0)))IS NOT(rt1.c4)) CROSS JOIN rt1 ON ((LIKE(rt1.c3, rt1.c4))>>(CASE rt0.c1  WHEN rt1.c5 THEN vt0.c0 END)) ORDER BY ('744190684' IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)%(rt0.c0)))IS NOT(rt1.c4)) CROSS JOIN rt1 ON ((LIKE(rt1.c3, rt1.c4))>>(CASE rt0.c1  WHEN rt1.c5 THEN vt0.c0 END)) WHERE (LIKELIHOOD(DISTINCT CAST(rt1.c3 AS NUMERIC), 0.3058343609837483)) ORDER BY ('744190684' IN ())  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))%(rt1.c1 COLLATE NOCASE))) ORDER BY ((((json_insert(rt1.c6, rt1.c4, rt1.c2))AND(((rt1.c0) NOT NULL))))AND((~ (rt0.c3)))), (- ((- (rt1.c2)))) DESC  NULLS FIRST, SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))%(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((json_insert(rt1.c6, rt1.c4, rt1.c2))AND(((rt1.c0) NOT NULL))))AND((~ (rt0.c3)))), (- ((- (rt1.c2)))) DESC  NULLS FIRST, SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt0.c1 AS INTEGER))%(rt1.c1 COLLATE NOCASE))) ORDER BY ((((json_insert(rt1.c6, rt1.c4, rt1.c2))AND(((rt1.c0) NOT NULL))))AND((~ (rt0.c3)))), (- ((- (rt1.c2)))) DESC  NULLS FIRST, SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER))%(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((json_insert(rt1.c6, rt1.c4, rt1.c2))AND(((rt1.c0) NOT NULL))))AND((~ (rt0.c3)))), (- ((- (rt1.c2)))) DESC  NULLS FIRST, SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST((~ (rt0.c1)) AS REAL)) ORDER BY ((rt1.c3)IS(CASE WHEN rt0.c1 THEN '618840555' WHEN rt0.c1 THEN rt0.c3 WHEN '-17262202' THEN rt1.c4 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((rt1.c3)IS(CASE WHEN rt0.c1 THEN '618840555' WHEN rt0.c1 THEN rt0.c3 WHEN '-17262202' THEN rt1.c4 END))  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST((~ (rt0.c1)) AS REAL)) ORDER BY ((rt1.c3)IS(CASE WHEN rt0.c1 THEN '618840555' WHEN rt0.c1 THEN rt0.c3 WHEN '-17262202' THEN rt1.c4 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((rt1.c3)IS(CASE WHEN rt0.c1 THEN '618840555' WHEN rt0.c1 THEN rt0.c3 WHEN '-17262202' THEN rt1.c4 END))  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (CAST((~ (rt0.c1)) AS REAL)) ORDER BY ((rt1.c3)IS(CASE WHEN rt0.c1 THEN '618840555' WHEN rt0.c1 THEN rt0.c3 WHEN '-17262202' THEN rt1.c4 END))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (TRIM(x'872e')) ORDER BY ((((((((x'3628462e')AND(DATETIME(rt0.c0, x'bc35', rt0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND('')))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(x'872e')) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((x'3628462e')AND(DATETIME(rt0.c0, x'bc35', rt0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND('')))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (TRIM(x'872e')) ORDER BY ((((((((x'3628462e')AND(DATETIME(rt0.c0, x'bc35', rt0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND('')))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(x'872e')) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((x'3628462e')AND(DATETIME(rt0.c0, x'bc35', rt0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND('')))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (TRIM(x'872e')) ORDER BY ((((((((x'3628462e')AND(DATETIME(rt0.c0, x'bc35', rt0.c0))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND('')))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((NULL) BETWEEN ((rt0.c4 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((rt0.c4 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((NULL) BETWEEN ((rt0.c4 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((rt0.c4 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((NULL) BETWEEN ((rt0.c4 IN ())) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (IFNULL(rt1.c3, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (IFNULL(rt1.c3, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (IFNULL(rt1.c3, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (IFNULL(rt1.c3, rt1.c1)))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((- (IFNULL(rt1.c3, rt1.c1))));
SELECT ALL * FROM rt0, rt1 WHERE (NULLIF((((rt1.c3))<=((rt1.c3))), (rt0.c3 IN ()))) ORDER BY CASE ((((rt0.c1)AND(rt1.c6)))AND(rt1.c5))  WHEN ROUND(rt0.c2, rt1.c2) THEN ((rt0.c3)&(-2.75002786E8)) WHEN (((rt1.c6))>=((rt1.c2))) THEN rt1.c3 WHEN (rt0.c2 IN ()) THEN LIKE(rt0.c1, rt0.c0, '騋') END DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt1.c3))<=((rt1.c3))), (rt0.c3 IN ()))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((((rt0.c1)AND(rt1.c6)))AND(rt1.c5))  WHEN ROUND(rt0.c2, rt1.c2) THEN ((rt0.c3)&(-2.75002786E8)) WHEN (((rt1.c6))>=((rt1.c2))) THEN rt1.c3 WHEN (rt0.c2 IN ()) THEN LIKE(rt0.c1, rt0.c0, '騋') END DESC);
SELECT ALL * FROM rt0, rt1 WHERE (NULLIF((((rt1.c3))<=((rt1.c3))), (rt0.c3 IN ()))) ORDER BY CASE ((((rt0.c1)AND(rt1.c6)))AND(rt1.c5))  WHEN ROUND(rt0.c2, rt1.c2) THEN ((rt0.c3)&(-2.75002786E8)) WHEN (((rt1.c6))>=((rt1.c2))) THEN rt1.c3 WHEN (rt0.c2 IN ()) THEN LIKE(rt0.c1, rt0.c0, '騋') END DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt1.c3))<=((rt1.c3))), (rt0.c3 IN ()))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((((rt0.c1)AND(rt1.c6)))AND(rt1.c5))  WHEN ROUND(rt0.c2, rt1.c2) THEN ((rt0.c3)&(-2.75002786E8)) WHEN (((rt1.c6))>=((rt1.c2))) THEN rt1.c3 WHEN (rt0.c2 IN ()) THEN LIKE(rt0.c1, rt0.c0, '騋') END DESC);
SELECT ALL * FROM rt0, rt1 WHERE (NULLIF((((rt1.c3))<=((rt1.c3))), (rt0.c3 IN ()))) ORDER BY CASE ((((rt0.c1)AND(rt1.c6)))AND(rt1.c5))  WHEN ROUND(rt0.c2, rt1.c2) THEN ((rt0.c3)&(-2.75002786E8)) WHEN (((rt1.c6))>=((rt1.c2))) THEN rt1.c3 WHEN (rt0.c2 IN ()) THEN LIKE(rt0.c1, rt0.c0, '騋') END DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c6) BETWEEN (rt1.c6) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c6) BETWEEN (rt1.c6) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c6) BETWEEN (rt1.c6) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c6) BETWEEN (rt1.c6) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((rt1.c6) BETWEEN (rt1.c6) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE ((- (CAST(rt1.c5 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c5 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (CAST(rt1.c5 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c5 AS NUMERIC)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (CAST(rt1.c5 AS NUMERIC))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt1.c1)+(rt1.c3))) NOT NULL) WHERE (((((rt0.c0) IS FALSE))LIKE(((((NULL)OR(rt0.c2)))OR(NULL))))) ORDER BY 0.8403720570874148 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))LIKE(((((NULL)OR(rt0.c2)))OR(NULL))))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt1.c1)+(rt1.c3))) NOT NULL) ORDER BY 0.8403720570874148 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt1.c1)+(rt1.c3))) NOT NULL) WHERE (((((rt0.c0) IS FALSE))LIKE(((((NULL)OR(rt0.c2)))OR(NULL))))) ORDER BY 0.8403720570874148 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))LIKE(((((NULL)OR(rt0.c2)))OR(NULL))))) IS TRUE)  as count FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt1.c1)+(rt1.c3))) NOT NULL) ORDER BY 0.8403720570874148 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON ((((rt1.c1)+(rt1.c3))) NOT NULL) WHERE (((((rt0.c0) IS FALSE))LIKE(((((NULL)OR(rt0.c2)))OR(NULL))))) ORDER BY 0.8403720570874148 DESC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE ((((CAST(rt1.c1 AS REAL)))>=((CASE WHEN rt1.c4 THEN rt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c1 AS REAL)))>=((CASE WHEN rt1.c4 THEN rt1.c0 END)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((CAST(rt1.c1 AS REAL)))>=((CASE WHEN rt1.c4 THEN rt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c1 AS REAL)))>=((CASE WHEN rt1.c4 THEN rt1.c0 END)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((CAST(rt1.c1 AS REAL)))>=((CASE WHEN rt1.c4 THEN rt1.c0 END))));
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END COLLATE RTRIM) ORDER BY CAST((rt1.c6 IN ()) AS TEXT) ASC, CASE (~ (rt1.c6))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN 'L' ELSE CAST(rt1.c5 AS NUMERIC) END ASC  NULLS FIRST, TRIM(DISTINCT (rt1.c4 IN ()), 0.28555809441910807);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c6 IN ()) AS TEXT) ASC, CASE (~ (rt1.c6))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN 'L' ELSE CAST(rt1.c5 AS NUMERIC) END ASC  NULLS FIRST, TRIM(DISTINCT (rt1.c4 IN ()), 0.28555809441910807));
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END COLLATE RTRIM) ORDER BY CAST((rt1.c6 IN ()) AS TEXT) ASC, CASE (~ (rt1.c6))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN 'L' ELSE CAST(rt1.c5 AS NUMERIC) END ASC  NULLS FIRST, TRIM(DISTINCT (rt1.c4 IN ()), 0.28555809441910807);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c6 IN ()) AS TEXT) ASC, CASE (~ (rt1.c6))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN 'L' ELSE CAST(rt1.c5 AS NUMERIC) END ASC  NULLS FIRST, TRIM(DISTINCT (rt1.c4 IN ()), 0.28555809441910807));
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END COLLATE RTRIM) ORDER BY CAST((rt1.c6 IN ()) AS TEXT) ASC, CASE (~ (rt1.c6))  WHEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) THEN 'L' ELSE CAST(rt1.c5 AS NUMERIC) END ASC  NULLS FIRST, TRIM(DISTINCT (rt1.c4 IN ()), 0.28555809441910807);
SELECT * FROM rt1, vt0 WHERE ((NOT (rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((NOT (rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((NOT (rt1.c1)) COLLATE NOCASE);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON COALESCE(DISTINCT (((rt1.c4))<>((rt1.c4))), UNICODE(vt0.c0)) WHERE (CASE WHEN ((vt0.c0)!=(rt1.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN rt1.c1 THEN rt1.c4 WHEN NULLIF(DISTINCT rt1.c1, rt0.c0) THEN CAST(rt1.c4 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END) ORDER BY ((ROUND(rt0.c4, rt0.c4))OR(rt0.c0)) ASC, ((((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c3)))|(((x'96fa')<=(rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<>(rt1.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN rt1.c1 THEN rt1.c4 WHEN NULLIF(DISTINCT rt1.c1, rt0.c0) THEN CAST(rt1.c4 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON COALESCE(DISTINCT (((rt1.c4))!=((rt1.c4))), UNICODE(vt0.c0)) ORDER BY ((ROUND(rt0.c4, rt0.c4))OR(rt0.c0)) ASC, ((((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c3)))|(((x'96fa')<=(rt1.c3)))) DESC  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON COALESCE(DISTINCT (((rt1.c4))<>((rt1.c4))), UNICODE(vt0.c0)) WHERE (CASE WHEN ((vt0.c0)!=(rt1.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN rt1.c1 THEN rt1.c4 WHEN NULLIF(DISTINCT rt1.c1, rt0.c0) THEN CAST(rt1.c4 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END) ORDER BY ((ROUND(rt0.c4, rt0.c4))OR(rt0.c0)) ASC, ((((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c3)))|(((x'96fa')<=(rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)<>(rt1.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN rt1.c1 THEN rt1.c4 WHEN NULLIF(DISTINCT rt1.c1, rt0.c0) THEN CAST(rt1.c4 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON COALESCE(DISTINCT (((rt1.c4))!=((rt1.c4))), UNICODE(vt0.c0)) ORDER BY ((ROUND(rt0.c4, rt0.c4))OR(rt0.c0)) ASC, ((((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c3)))|(((x'96fa')<=(rt1.c3)))) DESC  NULLS FIRST);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON rt0.c0 INNER JOIN vt0 ON COALESCE(DISTINCT (((rt1.c4))<>((rt1.c4))), UNICODE(vt0.c0)) WHERE (CASE WHEN ((vt0.c0)!=(rt1.c2)) THEN CAST(rt0.c3 AS NUMERIC) WHEN rt1.c1 THEN rt1.c4 WHEN NULLIF(DISTINCT rt1.c1, rt0.c0) THEN CAST(rt1.c4 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END) ORDER BY ((ROUND(rt0.c4, rt0.c4))OR(rt0.c0)) ASC, ((((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c3)))|(((x'96fa')<=(rt1.c3)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT 678909998, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 678909998, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT 678909998, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 678909998, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(DISTINCT 678909998, ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT * FROM rt1 WHERE (CAST((~ (rt1.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c4)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((~ (rt1.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c4)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((~ (rt1.c4)) AS BLOB));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)GLOB(rt0.c3)))OR((~ (rt0.c2)))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)GLOB(rt0.c3)))OR((~ (rt0.c2)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)GLOB(rt0.c3)))OR((~ (rt0.c2)))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)GLOB(rt0.c3)))OR((~ (rt0.c2)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)GLOB(rt0.c3)))OR((~ (rt0.c2)))))OR(rt0.c0)));
SELECT ALL * FROM rt0, rt1 WHERE (TRIM((rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (TRIM((rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (TRIM((rt0.c1 IN ()), ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c6)))AND(x'ee06')))AND(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c6)))AND(x'ee06')))AND(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c6)))AND(x'ee06')))AND(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c6)))AND(x'ee06')))AND(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c6)))AND(x'ee06')))AND(rt0.c3 COLLATE NOCASE)));
SELECT * FROM rt1, rt0 WHERE (0.11995933728534935);
SELECT SUM(count) FROM (SELECT ALL ((0.11995933728534935) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (0.11995933728534935);
SELECT SUM(count) FROM (SELECT ALL ((0.11995933728534935) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (0.11995933728534935);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ('' IN (rt1.c1, CASE rt1.c2  WHEN rt0.c4 THEN rt1.c2 ELSE rt1.c4 END)) INNER JOIN rt0 ON '' WHERE (((((((((rt1.c6)OR(rt1.c5)))AND(rt0.c4)))AND(((rt1.c6)=(rt1.c4)))))OR(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c6)OR(rt1.c5)))AND(rt0.c4)))AND(((rt1.c6)==(rt1.c4)))))OR(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ('' IN (rt1.c1, CASE rt1.c2  WHEN rt0.c4 THEN rt1.c2 ELSE rt1.c4 END)) INNER JOIN rt0 ON '');
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ('' IN (rt1.c1, CASE rt1.c2  WHEN rt0.c4 THEN rt1.c2 ELSE rt1.c4 END)) INNER JOIN rt0 ON '' WHERE (((((((((rt1.c6)OR(rt1.c5)))AND(rt0.c4)))AND(((rt1.c6)=(rt1.c4)))))OR(CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c6)OR(rt1.c5)))AND(rt0.c4)))AND(((rt1.c6)==(rt1.c4)))))OR(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ('' IN (rt1.c1, CASE rt1.c2  WHEN rt0.c4 THEN rt1.c2 ELSE rt1.c4 END)) INNER JOIN rt0 ON '');
SELECT COUNT(*) FROM rt1 CROSS JOIN vt0 ON ('' IN (rt1.c1, CASE rt1.c2  WHEN rt0.c4 THEN rt1.c2 ELSE rt1.c4 END)) INNER JOIN rt0 ON '' WHERE (((((((((rt1.c6)OR(rt1.c5)))AND(rt0.c4)))AND(((rt1.c6)=(rt1.c4)))))OR(CAST(rt1.c3 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND(((((((((0.8024027477286816)AND(rt1.c4)))OR(rt1.c1)))AND(rt0.c3)))OR(vt0.c0)))))OR(CAST(rt0.c4 AS TEXT))) WHERE (((UPPER(DISTINCT vt0.c0))&(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c2 END))) ORDER BY ((((NOT (vt0.c0)), ((((rt1.c5)OR(rt1.c6)))OR(rt1.c6)), json_extract(rt1.c2, rt1.c6)))<=((rt0.c0, rt1.c2, ((rt1.c0) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c0))&(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND(((((((((0.8024027477286816)AND(rt1.c4)))OR(rt1.c1)))AND(rt0.c3)))OR(vt0.c0)))))OR(CAST(rt0.c4 AS TEXT))) ORDER BY ((((NOT (vt0.c0)), ((((rt1.c5)OR(rt1.c6)))OR(rt1.c6)), json_extract(rt1.c2, rt1.c6)))<=((rt0.c0, rt1.c2, ((rt1.c0) IS TRUE))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND(((((((((0.8024027477286816)AND(rt1.c4)))OR(rt1.c1)))AND(rt0.c3)))OR(vt0.c0)))))OR(CAST(rt0.c4 AS TEXT))) WHERE (((UPPER(DISTINCT vt0.c0))&(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c2 END))) ORDER BY ((((NOT (vt0.c0)), ((((rt1.c5)OR(rt1.c6)))OR(rt1.c6)), json_extract(rt1.c2, rt1.c6)))<=((rt0.c0, rt1.c2, ((rt1.c0) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c0))&(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt0 ON ((((((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c2)))AND(((((((((0.8024027477286816)AND(rt1.c4)))OR(rt1.c1)))AND(rt0.c3)))OR(vt0.c0)))))OR(CAST(rt0.c4 AS TEXT))) ORDER BY ((((NOT (vt0.c0)), ((((rt1.c5)OR(rt1.c6)))OR(rt1.c6)), json_extract(rt1.c2, rt1.c6)))<=((rt0.c0, rt1.c2, ((rt1.c0) IS TRUE))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c2)) AS TEXT)) ORDER BY CAST(rt0.c4 COLLATE RTRIM AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c4 COLLATE RTRIM AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c2)) AS TEXT)) ORDER BY CAST(rt0.c4 COLLATE RTRIM AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c4 COLLATE RTRIM AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c2)) AS TEXT)) ORDER BY CAST(rt0.c4 COLLATE RTRIM AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c4) NOT BETWEEN ((((rt0.c4))>=((rt0.c2)))) AND (((rt0.c2) ISNULL)))) ORDER BY ((((('1973277692')AND(rt0.c4)))AND(rt0.c4)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT BETWEEN ((((rt0.c4))>=((rt0.c2)))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((('1973277692')AND(rt0.c4)))AND(rt0.c4)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c4) NOT BETWEEN ((((rt0.c4))>=((rt0.c2)))) AND (((rt0.c2) ISNULL)))) ORDER BY ((((('1973277692')AND(rt0.c4)))AND(rt0.c4)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT BETWEEN ((((rt0.c4))>=((rt0.c2)))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((('1973277692')AND(rt0.c4)))AND(rt0.c4)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c4) NOT BETWEEN ((((rt0.c4))>=((rt0.c2)))) AND (((rt0.c2) ISNULL)))) ORDER BY ((((('1973277692')AND(rt0.c4)))AND(rt0.c4)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN x'' THEN '-869121403' END) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(rt0.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN '-869121403' END) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN x'' THEN '-869121403' END) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(rt0.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN '-869121403' END) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(rt0.c4 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN x'' THEN '-869121403' END) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(rt0.c4 AS NUMERIC))));
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c2) ORDER BY ((((rt1.c4)<<(rt1.c6))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c4)<<(rt1.c6))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c2) ORDER BY ((((rt1.c4)<<(rt1.c6))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c4)<<(rt1.c6))) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c2) ORDER BY ((((rt1.c4)<<(rt1.c6))) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND((~ (vt0.c0)))))AND(((NULL)&(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(NULL AS BLOB)))) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE (((vt0.c0, vt0.c0, 0.7635423374716853)) NOT BETWEEN (('Cc', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS FIRST, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND((~ (vt0.c0)))))AND(((NULL)&(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE (((vt0.c0, vt0.c0, 0.7635423374716853)) NOT BETWEEN (('Cc', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS FIRST, (vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND((~ (vt0.c0)))))AND(((NULL)&(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(NULL AS BLOB)))) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE (((vt0.c0, vt0.c0, 0.7635423374716853)) NOT BETWEEN (('Cc', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS FIRST, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND((~ (vt0.c0)))))AND(((NULL)&(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE (((vt0.c0, vt0.c0, 0.7635423374716853)) NOT BETWEEN (('Cc', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS FIRST, (vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND((~ (vt0.c0)))))AND(((NULL)&(vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(NULL AS BLOB)))) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE (((vt0.c0, vt0.c0, 0.7635423374716853)) NOT BETWEEN (('Cc', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END  NULLS FIRST, (vt0.c0 IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (x''))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((- (x''))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (x''))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((- (x''))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (x''))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 END) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULLIF(DISTINCT 1.928475887E9, '-1018928094' COLLATE RTRIM)) ORDER BY CAST(rt1.c5 AS REAL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT 1.928475887E9, '-1018928094' COLLATE RTRIM)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c5 AS REAL) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULLIF(DISTINCT 1.928475887E9, '-1018928094' COLLATE RTRIM)) ORDER BY CAST(rt1.c5 AS REAL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT 1.928475887E9, '-1018928094' COLLATE RTRIM)) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c5 AS REAL) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULLIF(DISTINCT 1.928475887E9, '-1018928094' COLLATE RTRIM)) ORDER BY CAST(rt1.c5 AS REAL) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (rt0.c3) ORDER BY ((((0.9834753478724051)OR(((((rt0.c1)OR(rt1.c0)))OR(rt0.c1)))))OR(UNLIKELY(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((0.9834753478724051)OR(((((rt0.c1)OR(rt1.c0)))OR(rt0.c1)))))OR(UNLIKELY(rt1.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (rt0.c3) ORDER BY ((((0.9834753478724051)OR(((((rt0.c1)OR(rt1.c0)))OR(rt0.c1)))))OR(UNLIKELY(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((0.9834753478724051)OR(((((rt0.c1)OR(rt1.c0)))OR(rt0.c1)))))OR(UNLIKELY(rt1.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (rt0.c3) ORDER BY ((((0.9834753478724051)OR(((((rt0.c1)OR(rt1.c0)))OR(rt0.c1)))))OR(UNLIKELY(rt1.c1)));
SELECT ALL * FROM rt1, rt0, vt0 WHERE (COALESCE(DISTINCT ((((rt0.c3)OR(rt1.c0)))OR(rt1.c3)), ((rt1.c2) IS FALSE))) ORDER BY (NOT (rt1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((((rt0.c3)OR(rt1.c0)))OR(rt1.c3)), ((rt1.c2) IS FALSE))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (NOT (rt1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (COALESCE(DISTINCT ((((rt0.c3)OR(rt1.c0)))OR(rt1.c3)), ((rt1.c2) IS FALSE))) ORDER BY (NOT (rt1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((((rt0.c3)OR(rt1.c0)))OR(rt1.c3)), ((rt1.c2) IS FALSE))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (NOT (rt1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE (COALESCE(DISTINCT ((((rt0.c3)OR(rt1.c0)))OR(rt1.c3)), ((rt1.c2) IS FALSE))) ORDER BY (NOT (rt1.c1)) COLLATE BINARY COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((NULL) NOTNULL)) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((NULL) NOTNULL)) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((NULL) NOTNULL)) ORDER BY (((rt0.c1)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (LOWER(((rt0.c1)|(rt0.c2)))) ORDER BY CAST(((rt0.c2)+(rt0.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c1)|(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2)+(rt0.c1)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (LOWER(((rt0.c1)|(rt0.c2)))) ORDER BY CAST(((rt0.c2)+(rt0.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c1)|(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c2)+(rt0.c1)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (LOWER(((rt0.c1)|(rt0.c2)))) ORDER BY CAST(((rt0.c2)+(rt0.c1)) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 INNER JOIN rt1 ON ((((((rt1.c2)LIKE(rt1.c2)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)%(rt1.c5)))) WHERE (rt1.c3) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c3)))AND('-2147024414'))) AND (CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON ((((((rt1.c2)LIKE(rt1.c2)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)%(rt1.c5)))) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c3)))AND('-2147024414'))) AND (CAST(rt0.c1 AS REAL))));
SELECT * FROM vt0, rt0 INNER JOIN rt1 ON ((((((rt1.c2)LIKE(rt1.c2)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)%(rt1.c5)))) WHERE (rt1.c3) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c3)))AND('-2147024414'))) AND (CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON ((((((rt1.c2)LIKE(rt1.c2)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)%(rt1.c5)))) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c3)))AND('-2147024414'))) AND (CAST(rt0.c1 AS REAL))));
SELECT * FROM vt0, rt0 INNER JOIN rt1 ON ((((((rt1.c2)LIKE(rt1.c2)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1)%(rt1.c5)))) WHERE (rt1.c3) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c3)))AND('-2147024414'))) AND (CAST(rt0.c1 AS REAL)));
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c0 END IN (rt0.c1 COLLATE BINARY))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c0 END IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY NULL);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c0 END IN (rt0.c1 COLLATE BINARY))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c0 END IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY NULL);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c0 END IN (rt0.c1 COLLATE BINARY))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))/(rt1.c3)) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c5)) BETWEEN ((rt0.c3)) AND ((rt1.c3))) AS BLOB) WHERE (((((CAST(rt1.c1 AS BLOB))OR(((rt1.c2) BETWEEN (rt0.c4) AND ('')))))AND(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS BLOB))OR(((rt1.c2) BETWEEN (rt0.c4) AND ('')))))AND(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))/(rt1.c3)) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c5)) BETWEEN ((rt0.c3)) AND ((rt1.c3))) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))/(rt1.c3)) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c5)) BETWEEN ((rt0.c3)) AND ((rt1.c3))) AS BLOB) WHERE (((((CAST(rt1.c1 AS BLOB))OR(((rt1.c2) BETWEEN (rt0.c4) AND ('')))))AND(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS BLOB))OR(((rt1.c2) BETWEEN (rt0.c4) AND ('')))))AND(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))/(rt1.c3)) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c5)) BETWEEN ((rt0.c3)) AND ((rt1.c3))) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((NOT (rt1.c2)))/(rt1.c3)) RIGHT OUTER JOIN vt0 ON CAST((((rt1.c5)) BETWEEN ((rt0.c3)) AND ((rt1.c3))) AS BLOB) WHERE (((((CAST(rt1.c1 AS BLOB))OR(((rt1.c2) BETWEEN (rt0.c4) AND ('')))))AND(rt0.c3 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))%(rt0.c4)) WHERE (((((rt0.c2)<<(rt0.c2))) BETWEEN (HEX(rt0.c0)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<(rt0.c2))) BETWEEN (HEX(rt0.c0)) AND (rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))%(rt0.c4)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))%(rt0.c4)) WHERE (((((rt0.c2)<<(rt0.c2))) BETWEEN (HEX(rt0.c0)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<<(rt0.c2))) BETWEEN (HEX(rt0.c0)) AND (rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))%(rt0.c4)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))%(rt0.c4)) WHERE (((((rt0.c2)<<(rt0.c2))) BETWEEN (HEX(rt0.c0)) AND (rt0.c0)));
SELECT * FROM rt0, rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (x'');
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE WHERE (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE BINARY) ORDER BY (((+ ('wr '))) NOT BETWEEN ((rt1.c2 IN (rt1.c6))) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) DESC  NULLS FIRST, ((x'18f1') BETWEEN ((rt1.c4 IN ())) AND ((~ ('-1652704764'))))  NULLS LAST, ((((((((0.3228536737321299)AND(NULLIF(rt1.c2, rt1.c1))))OR(((rt1.c1) IS FALSE))))AND(((rt1.c2) ISNULL))))OR((rt1.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE ORDER BY (((+ ('wr '))) NOT BETWEEN ((rt1.c2 IN (rt1.c6))) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) DESC  NULLS FIRST, ((x'18f1') BETWEEN ((rt1.c4 IN ())) AND ((~ ('-1652704764'))))  NULLS LAST, ((((((((0.3228536737321299)AND(NULLIF(rt1.c2, rt1.c1))))OR(((rt1.c1) IS FALSE))))AND(((rt1.c2) ISNULL))))OR((rt1.c2 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE WHERE (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE BINARY) ORDER BY (((+ ('wr '))) NOT BETWEEN ((rt1.c2 IN (rt1.c6))) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) DESC  NULLS FIRST, ((x'18f1') BETWEEN ((rt1.c4 IN ())) AND ((~ ('-1652704764'))))  NULLS LAST, ((((((((0.3228536737321299)AND(NULLIF(rt1.c2, rt1.c1))))OR(((rt1.c1) IS FALSE))))AND(((rt1.c2) ISNULL))))OR((rt1.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE ORDER BY (((+ ('wr '))) NOT BETWEEN ((rt1.c2 IN (rt1.c6))) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) DESC  NULLS FIRST, ((x'18f1') BETWEEN ((rt1.c4 IN ())) AND ((~ ('-1652704764'))))  NULLS LAST, ((((((((0.3228536737321299)AND(NULLIF(rt1.c2, rt1.c1))))OR(((rt1.c1) IS FALSE))))AND(((rt1.c2) ISNULL))))OR((rt1.c2 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE WHERE (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE BINARY) ORDER BY (((+ ('wr '))) NOT BETWEEN ((rt1.c2 IN (rt1.c6))) AND (((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) DESC  NULLS FIRST, ((x'18f1') BETWEEN ((rt1.c4 IN ())) AND ((~ ('-1652704764'))))  NULLS LAST, ((((((((0.3228536737321299)AND(NULLIF(rt1.c2, rt1.c1))))OR(((rt1.c1) IS FALSE))))AND(((rt1.c2) ISNULL))))OR((rt1.c2 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c2) NOT BETWEEN ('VnGlqPC') AND (rt1.c2))  WHEN ((rt1.c5)|(rt1.c0)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c5)) END) ORDER BY CAST((((rt1.c5, 'S|B_\s', rt1.c3)) BETWEEN ((rt1.c3, 0.7028117898936138, rt1.c0)) AND ((0.5703418844899241, rt1.c2, rt1.c1))) AS INTEGER), CASE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))  WHEN CASE 5.88304098E8  WHEN NULL THEN rt1.c0 ELSE rt1.c5 END THEN CAST(rt1.c5 AS BLOB) END DESC, CASE WHEN ((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)) THEN rt1.c3 COLLATE RTRIM WHEN rt1.c5 COLLATE RTRIM THEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c3))) WHEN (('-311332236') NOTNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT BETWEEN ('VnGlqPC') AND (rt1.c2))  WHEN ((rt1.c5)|(rt1.c0)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c5)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c5, 'S|B_\s', rt1.c3)) BETWEEN ((rt1.c3, 0.7028117898936138, rt1.c0)) AND ((0.5703418844899241, rt1.c2, rt1.c1))) AS INTEGER), CASE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))  WHEN CASE 5.88304098E8  WHEN NULL THEN rt1.c0 ELSE rt1.c5 END THEN CAST(rt1.c5 AS BLOB) END DESC, CASE WHEN ((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)) THEN rt1.c3 COLLATE RTRIM WHEN rt1.c5 COLLATE RTRIM THEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c3))) WHEN (('-311332236') NOTNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END DESC);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c2) NOT BETWEEN ('VnGlqPC') AND (rt1.c2))  WHEN ((rt1.c5)|(rt1.c0)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c5)) END) ORDER BY CAST((((rt1.c5, 'S|B_\s', rt1.c3)) BETWEEN ((rt1.c3, 0.7028117898936138, rt1.c0)) AND ((0.5703418844899241, rt1.c2, rt1.c1))) AS INTEGER), CASE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))  WHEN CASE 5.88304098E8  WHEN NULL THEN rt1.c0 ELSE rt1.c5 END THEN CAST(rt1.c5 AS BLOB) END DESC, CASE WHEN ((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)) THEN rt1.c3 COLLATE RTRIM WHEN rt1.c5 COLLATE RTRIM THEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c3))) WHEN (('-311332236') NOTNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT BETWEEN ('VnGlqPC') AND (rt1.c2))  WHEN ((rt1.c5)|(rt1.c0)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c5)) END) IS TRUE)  as count FROM rt1 ORDER BY CAST((((rt1.c5, 'S|B_\s', rt1.c3)) BETWEEN ((rt1.c3, 0.7028117898936138, rt1.c0)) AND ((0.5703418844899241, rt1.c2, rt1.c1))) AS INTEGER), CASE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))  WHEN CASE 5.88304098E8  WHEN NULL THEN rt1.c0 ELSE rt1.c5 END THEN CAST(rt1.c5 AS BLOB) END DESC, CASE WHEN ((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)) THEN rt1.c3 COLLATE RTRIM WHEN rt1.c5 COLLATE RTRIM THEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c3))) WHEN (('-311332236') NOTNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END DESC);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c2) NOT BETWEEN ('VnGlqPC') AND (rt1.c2))  WHEN ((rt1.c5)|(rt1.c0)) THEN ((((rt1.c3)AND(rt1.c3)))AND(rt1.c5)) END) ORDER BY CAST((((rt1.c5, 'S|B_\s', rt1.c3)) BETWEEN ((rt1.c3, 0.7028117898936138, rt1.c0)) AND ((0.5703418844899241, rt1.c2, rt1.c1))) AS INTEGER), CASE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))  WHEN CASE 5.88304098E8  WHEN NULL THEN rt1.c0 ELSE rt1.c5 END THEN CAST(rt1.c5 AS BLOB) END DESC, CASE WHEN ((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)) THEN rt1.c3 COLLATE RTRIM WHEN rt1.c5 COLLATE RTRIM THEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c3))) WHEN (('-311332236') NOTNULL) THEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c1))) END DESC;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (x'cdb4');
SELECT SUM(count) FROM (SELECT ALL ((x'cdb4') IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (x'cdb4');
SELECT SUM(count) FROM (SELECT ALL ((x'cdb4') IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (x'cdb4');
SELECT * FROM vt0 WHERE ((((((vt0.c0)>>(vt0.c0)), ((vt0.c0)==(vt0.c0)), (~ ('1614551013'))))<((((vt0.c0)*(vt0.c0)), ((vt0.c0)LIKE(NULL)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>>(vt0.c0)), ((vt0.c0)=(vt0.c0)), (~ ('1614551013'))))<((((vt0.c0)*(vt0.c0)), ((vt0.c0)LIKE(NULL)), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>>(vt0.c0)), ((vt0.c0)==(vt0.c0)), (~ ('1614551013'))))<((((vt0.c0)*(vt0.c0)), ((vt0.c0)LIKE(NULL)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)>>(vt0.c0)), ((vt0.c0)=(vt0.c0)), (~ ('1614551013'))))<((((vt0.c0)*(vt0.c0)), ((vt0.c0)LIKE(NULL)), vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)>>(vt0.c0)), ((vt0.c0)==(vt0.c0)), (~ ('1614551013'))))<((((vt0.c0)*(vt0.c0)), ((vt0.c0)LIKE(NULL)), vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c4)||(rt0.c0))) NOTNULL) WHERE (CAST(((rt0.c1) NOT NULL) AS TEXT)) ORDER BY json_insert((- (rt1.c4)), rt0.c0, ((rt1.c2)IS(rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c4)||(rt0.c0))) NOTNULL) ORDER BY json_insert((- (rt1.c4)), rt0.c0, ((rt1.c2)IS(rt0.c4))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c4)||(rt0.c0))) NOTNULL) WHERE (CAST(((rt0.c1) NOT NULL) AS TEXT)) ORDER BY json_insert((- (rt1.c4)), rt0.c0, ((rt1.c2)IS(rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN rt0 ON ((((rt0.c4)||(rt0.c0))) NOTNULL) ORDER BY json_insert((- (rt1.c4)), rt0.c0, ((rt1.c2)IS(rt0.c4))) DESC);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (+ (0x68785975)) WHERE (((((rt1.c6) NOT BETWEEN (x'7883') AND (rt1.c3)))<<(((vt0.c0)AND(rt0.c2))))) ORDER BY (~ ((((rt0.c2, rt1.c1, x'8f830dc1'))==((rt0.c4, rt0.c1, rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6) NOT BETWEEN (x'7883') AND (rt1.c3)))<<(((vt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (+ (0X68785975)) ORDER BY (~ ((((rt0.c2, rt1.c1, x'8f830dc1'))=((rt0.c4, rt0.c1, rt0.c3))))) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (+ (0x68785975)) WHERE (((((rt1.c6) NOT BETWEEN (x'7883') AND (rt1.c3)))<<(((vt0.c0)AND(rt0.c2))))) ORDER BY (~ ((((rt0.c2, rt1.c1, x'8f830dc1'))==((rt0.c4, rt0.c1, rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c6) NOT BETWEEN (x'7883') AND (rt1.c3)))<<(((vt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (+ (0X68785975)) ORDER BY (~ ((((rt0.c2, rt1.c1, x'8f830dc1'))=((rt0.c4, rt0.c1, rt0.c3))))) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (+ (0x68785975)) WHERE (((((rt1.c6) NOT BETWEEN (x'7883') AND (rt1.c3)))<<(((vt0.c0)AND(rt0.c2))))) ORDER BY (~ ((((rt0.c2, rt1.c1, x'8f830dc1'))==((rt0.c4, rt0.c1, rt0.c3))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CASE rt1.c6  WHEN 9.58276067E8 THEN rt1.c6 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c6  WHEN 9.58276067E8 THEN rt1.c6 END AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CASE rt1.c6  WHEN 9.58276067E8 THEN rt1.c6 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c6  WHEN 9.58276067E8 THEN rt1.c6 END AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (CAST(CASE rt1.c6  WHEN 9.58276067E8 THEN rt1.c6 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN rt1 ON rt0.c3 WHERE (((((rt0.c1)<=(vt0.c0))) NOT BETWEEN (((((rt0.c1)AND(rt1.c6)))AND(rt0.c1))) AND (INSTR(rt1.c5, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(vt0.c0))) NOT BETWEEN (((((rt0.c1)AND(rt1.c6)))AND(rt0.c1))) AND (INSTR(rt1.c5, rt1.c1)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN rt1 ON rt0.c3 WHERE (((((rt0.c1)<=(vt0.c0))) NOT BETWEEN (((((rt0.c1)AND(rt1.c6)))AND(rt0.c1))) AND (INSTR(rt1.c5, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(vt0.c0))) NOT BETWEEN (((((rt0.c1)AND(rt1.c6)))AND(rt0.c1))) AND (INSTR(rt1.c5, rt1.c1)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON rt0.c3);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN rt1 ON rt0.c3 WHERE (((((rt0.c1)<=(vt0.c0))) NOT BETWEEN (((((rt0.c1)AND(rt1.c6)))AND(rt0.c1))) AND (INSTR(rt1.c5, rt1.c1))));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c4 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c4 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c4 COLLATE NOCASE END);
SELECT * FROM rt0, vt0 WHERE ((((NOT ('a6'))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c3)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('a6'))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c3)<<(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((NOT ('a6'))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c3)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('a6'))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c3)<<(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((NOT ('a6'))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c3)<<(rt0.c3)))));
SELECT * FROM rt1, rt0, vt0 WHERE (((rt1.c2)+(((NULL)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)+(((NULL)%(vt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (((rt1.c2)+(((NULL)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)+(((NULL)%(vt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE (((rt1.c2)+(((NULL)%(vt0.c0)))));
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((rt1.c6) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((rt1.c6) IS FALSE) DESC);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((rt1.c6) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((rt1.c6) IS FALSE) DESC);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((rt1.c6) IS FALSE) DESC;
SELECT ALL * FROM rt1 WHERE (((rt1.c2)<=(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)<=(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2)<=(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)<=(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c2)<=(((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c4)))));
SELECT * FROM vt0, rt1 WHERE ((+ ((~ (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (x''))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ ((~ (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (x''))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ ((~ (x'')))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c0);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((rt1.c1 IN (rt1.c1, rt1.c2)) COLLATE BINARY) ORDER BY ((((((rt1.c1)AND(rt1.c5)))AND(rt1.c5)))-((rt1.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c1, rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c1)AND(rt1.c5)))AND(rt1.c5)))-((rt1.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((rt1.c1 IN (rt1.c1, rt1.c2)) COLLATE BINARY) ORDER BY ((((((rt1.c1)AND(rt1.c5)))AND(rt1.c5)))-((rt1.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN (rt1.c1, rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c1)AND(rt1.c5)))AND(rt1.c5)))-((rt1.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((rt1.c1 IN (rt1.c1, rt1.c2)) COLLATE BINARY) ORDER BY ((((((rt1.c1)AND(rt1.c5)))AND(rt1.c5)))-((rt1.c1 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt0.c4)))GLOB(((((rt1.c5)AND(rt1.c6)))OR(rt1.c1))))) ORDER BY LENGTH((((vt0.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt0.c3)))) DESC  NULLS LAST, (('wl')IS(rt1.c6)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt0.c4)))GLOB(((((rt1.c5)AND(rt1.c6)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0 ORDER BY LENGTH((((vt0.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt0.c3)))) DESC  NULLS LAST, (('wl')IS(rt1.c6)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt0.c4)))GLOB(((((rt1.c5)AND(rt1.c6)))OR(rt1.c1))))) ORDER BY LENGTH((((vt0.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt0.c3)))) DESC  NULLS LAST, (('wl')IS(rt1.c6)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt0.c4)))GLOB(((((rt1.c5)AND(rt1.c6)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0 ORDER BY LENGTH((((vt0.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt0.c3)))) DESC  NULLS LAST, (('wl')IS(rt1.c6)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt1, vt0 NATURAL JOIN rt0 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt0.c4)))GLOB(((((rt1.c5)AND(rt1.c6)))OR(rt1.c1))))) ORDER BY LENGTH((((vt0.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt0.c3)))) DESC  NULLS LAST, (('wl')IS(rt1.c6)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((x'')-(((rt1.c4) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((x'')-(((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((x'')-(((rt1.c4) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((x'')-(((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((x'')-(((rt1.c4) IS FALSE))));
SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0)))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0)))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)))<<((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(((((rt1.c6)AND('tF')))AND(rt1.c5)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c6)AND('tF')))AND(rt1.c5)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(((((rt1.c6)AND('tF')))AND(rt1.c5)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c6)AND('tF')))AND(rt1.c5)) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(((((rt1.c6)AND('tF')))AND(rt1.c5)) AS INTEGER));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((((rt0.c1)OR(rt1.c0)))OR(((rt1.c5)-(rt1.c2)))))OR(((((0.566519162699861)OR(x'b76e')))AND(rt0.c4)))) LEFT OUTER JOIN vt0 ON CASE rt1.c2  WHEN rt1.c6 THEN rt1.c4 END COLLATE BINARY WHERE ((0.8675037675803371 IN ())) ORDER BY CASE WHEN (NOT (rt0.c4)) THEN (rt0.c3 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.8675037675803371 IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((((rt0.c1)OR(rt1.c0)))OR(((rt1.c5)-(rt1.c2)))))OR(((((0.566519162699861)OR(x'b76e')))AND(rt0.c4)))) LEFT OUTER JOIN vt0 ON CASE rt1.c2  WHEN rt1.c6 THEN rt1.c4 END COLLATE BINARY ORDER BY CASE WHEN (NOT (rt0.c4)) THEN (rt0.c3 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((((rt0.c1)OR(rt1.c0)))OR(((rt1.c5)-(rt1.c2)))))OR(((((0.566519162699861)OR(x'b76e')))AND(rt0.c4)))) LEFT OUTER JOIN vt0 ON CASE rt1.c2  WHEN rt1.c6 THEN rt1.c4 END COLLATE BINARY WHERE ((0.8675037675803371 IN ())) ORDER BY CASE WHEN (NOT (rt0.c4)) THEN (rt0.c3 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.8675037675803371 IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((((rt0.c1)OR(rt1.c0)))OR(((rt1.c5)-(rt1.c2)))))OR(((((0.566519162699861)OR(x'b76e')))AND(rt0.c4)))) LEFT OUTER JOIN vt0 ON CASE rt1.c2  WHEN rt1.c6 THEN rt1.c4 END COLLATE BINARY ORDER BY CASE WHEN (NOT (rt0.c4)) THEN (rt0.c3 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((((rt0.c1)OR(rt1.c0)))OR(((rt1.c5)-(rt1.c2)))))OR(((((0.566519162699861)OR(x'b76e')))AND(rt0.c4)))) LEFT OUTER JOIN vt0 ON CASE rt1.c2  WHEN rt1.c6 THEN rt1.c4 END COLLATE BINARY WHERE ((0.8675037675803371 IN ())) ORDER BY CASE WHEN (NOT (rt0.c4)) THEN (rt0.c3 IN ()) END  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS TEXT))>(((((rt1.c6)AND(rt1.c4)))AND(rt1.c1))))) ORDER BY '36950847';
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT))>(((((rt1.c6)AND(rt1.c4)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '36950847');
SELECT * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS TEXT))>(((((rt1.c6)AND(rt1.c4)))AND(rt1.c1))))) ORDER BY '36950847';
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT))>(((((rt1.c6)AND(rt1.c4)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '36950847');
SELECT * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS TEXT))>(((((rt1.c6)AND(rt1.c4)))AND(rt1.c1))))) ORDER BY '36950847';
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c0) IS FALSE) WHERE (TRIM(((((((((0.939974170048627)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c6)))AND(rt1.c3)), ((((rt1.c6)OR(vt0.c0)))AND(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((0.939974170048627)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c6)))AND(rt1.c3)), ((((rt1.c6)OR(vt0.c0)))AND(rt1.c3)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c0) IS FALSE));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c0) IS FALSE) WHERE (TRIM(((((((((0.939974170048627)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c6)))AND(rt1.c3)), ((((rt1.c6)OR(vt0.c0)))AND(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((0.939974170048627)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c6)))AND(rt1.c3)), ((((rt1.c6)OR(vt0.c0)))AND(rt1.c3)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c0) IS FALSE));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((rt1.c0) IS FALSE) WHERE (TRIM(((((((((0.939974170048627)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c6)))AND(rt1.c3)), ((((rt1.c6)OR(vt0.c0)))AND(rt1.c3))));
SELECT ALL * FROM vt0 WHERE (((((CAST(0.06865343872149943 AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'Irhg' END)))OR(ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CAST(0.06865343872149943 AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'Irhg' END)))OR(ABS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(0.06865343872149943 AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'Irhg' END)))OR(ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CAST(0.06865343872149943 AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'Irhg' END)))OR(ABS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(0.06865343872149943 AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'Irhg' END)))OR(ABS(vt0.c0))));
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (rt1.c5);
SELECT * FROM rt0 INNER JOIN vt0 ON LIKELY(DISTINCT ((((7.60763974E8)AND(rt0.c4)))OR(rt0.c1))) WHERE ((((rt0.c4)<<(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)<<(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON LIKELY(DISTINCT ((((7.60763974E8)AND(rt0.c4)))OR(rt0.c1))));
SELECT * FROM rt0 INNER JOIN vt0 ON LIKELY(DISTINCT ((((7.60763974E8)AND(rt0.c4)))OR(rt0.c1))) WHERE ((((rt0.c4)<<(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)<<(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON LIKELY(DISTINCT ((((7.60763974E8)AND(rt0.c4)))OR(rt0.c1))));
SELECT * FROM rt0 INNER JOIN vt0 ON LIKELY(DISTINCT ((((7.60763974E8)AND(rt0.c4)))OR(rt0.c1))) WHERE ((((rt0.c4)<<(vt0.c0)) IN ()));
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) IS TRUE)) ORDER BY CASE WHEN rt1.c4 COLLATE RTRIM THEN (rt1.c2 IN ()) ELSE TRIM(rt1.c6, rt1.c6) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c4 COLLATE RTRIM THEN (rt1.c2 IN ()) ELSE TRIM(rt1.c6, rt1.c6) END  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) IS TRUE)) ORDER BY CASE WHEN rt1.c4 COLLATE RTRIM THEN (rt1.c2 IN ()) ELSE TRIM(rt1.c6, rt1.c6) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c4 COLLATE RTRIM THEN (rt1.c2 IN ()) ELSE TRIM(rt1.c6, rt1.c6) END  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c1 AS TEXT)) IS TRUE)) ORDER BY CASE WHEN rt1.c4 COLLATE RTRIM THEN (rt1.c2 IN ()) ELSE TRIM(rt1.c6, rt1.c6) END  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c1)/(rt0.c0)) COLLATE NOCASE) ORDER BY (((rt0.c4 IN ())) BETWEEN ((~ (rt0.c0))) AND (((rt0.c3)-(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)/(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4 IN ())) BETWEEN ((~ (rt0.c0))) AND (((rt0.c3)-(rt0.c1)))) ASC);
SELECT * FROM rt0 WHERE (((rt0.c1)/(rt0.c0)) COLLATE NOCASE) ORDER BY (((rt0.c4 IN ())) BETWEEN ((~ (rt0.c0))) AND (((rt0.c3)-(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)/(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4 IN ())) BETWEEN ((~ (rt0.c0))) AND (((rt0.c3)-(rt0.c1)))) ASC);
SELECT * FROM rt0 WHERE (((rt0.c1)/(rt0.c0)) COLLATE NOCASE) ORDER BY (((rt0.c4 IN ())) BETWEEN ((~ (rt0.c0))) AND (((rt0.c3)-(rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), CAST(rt0.c2 AS NUMERIC), LIKELIHOOD(DISTINCT rt0.c0, 0.949527999359603))) AND ((((rt0.c0)>=(rt0.c2)), ((rt0.c0)%(rt0.c2)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c4, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), CAST(rt0.c2 AS NUMERIC), LIKELIHOOD(DISTINCT rt0.c0, 0.949527999359603))) AND ((((rt0.c0)>=(rt0.c2)), ((rt0.c0)%(rt0.c2)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), CAST(rt0.c2 AS NUMERIC), LIKELIHOOD(DISTINCT rt0.c0, 0.949527999359603))) AND ((((rt0.c0)>=(rt0.c2)), ((rt0.c0)%(rt0.c2)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c4, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), CAST(rt0.c2 AS NUMERIC), LIKELIHOOD(DISTINCT rt0.c0, 0.949527999359603))) AND ((((rt0.c0)>=(rt0.c2)), ((rt0.c0)%(rt0.c2)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0, rt0.c4, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), CAST(rt0.c2 AS NUMERIC), LIKELIHOOD(DISTINCT rt0.c0, 0.949527999359603))) AND ((((rt0.c0)>=(rt0.c2)), ((rt0.c0)%(rt0.c2)), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((((rt1.c6))<((rt1.c3)))) NOT BETWEEN (((rt1.c3)==(rt1.c2))) AND ((rt1.c4 IN (rt1.c4, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c6))<((rt1.c3)))) NOT BETWEEN (((rt1.c3)==(rt1.c2))) AND ((rt1.c4 IN (rt1.c4, vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((((rt1.c6))<((rt1.c3)))) NOT BETWEEN (((rt1.c3)==(rt1.c2))) AND ((rt1.c4 IN (rt1.c4, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c6))<((rt1.c3)))) NOT BETWEEN (((rt1.c3)==(rt1.c2))) AND ((rt1.c4 IN (rt1.c4, vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((((rt1.c6))<((rt1.c3)))) NOT BETWEEN (((rt1.c3)==(rt1.c2))) AND ((rt1.c4 IN (rt1.c4, vt0.c0)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c0, rt1.c0, rt1.c2, NULL, rt1.c1)) NOT BETWEEN ((rt0.c2, CAST(rt1.c6 AS BLOB), rt1.c4 COLLATE NOCASE, CAST(rt1.c4 AS NUMERIC), ((rt1.c4)<(rt1.c4)))) AND ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 END, (~ (rt1.c3)), CAST(rt0.c3 AS REAL), MAX(rt1.c5, rt0.c3), rt1.c6 COLLATE NOCASE)))) ORDER BY (((('442560502')|(rt1.c4))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt1.c0, rt1.c2, NULL, rt1.c1)) NOT BETWEEN ((rt0.c2, CAST(rt1.c6 AS BLOB), rt1.c4 COLLATE NOCASE, CAST(rt1.c4 AS NUMERIC), ((rt1.c4)<(rt1.c4)))) AND ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 END, (~ (rt1.c3)), CAST(rt0.c3 AS REAL), MAX(rt1.c5, rt0.c3), rt1.c6 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((('442560502')|(rt1.c4))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c0, rt1.c0, rt1.c2, NULL, rt1.c1)) NOT BETWEEN ((rt0.c2, CAST(rt1.c6 AS BLOB), rt1.c4 COLLATE NOCASE, CAST(rt1.c4 AS NUMERIC), ((rt1.c4)<(rt1.c4)))) AND ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 END, (~ (rt1.c3)), CAST(rt0.c3 AS REAL), MAX(rt1.c5, rt0.c3), rt1.c6 COLLATE NOCASE)))) ORDER BY (((('442560502')|(rt1.c4))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt1.c0, rt1.c2, NULL, rt1.c1)) NOT BETWEEN ((rt0.c2, CAST(rt1.c6 AS BLOB), rt1.c4 COLLATE NOCASE, CAST(rt1.c4 AS NUMERIC), ((rt1.c4)<(rt1.c4)))) AND ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 END, (~ (rt1.c3)), CAST(rt0.c3 AS REAL), MAX(rt1.c5, rt0.c3), rt1.c6 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((('442560502')|(rt1.c4))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c0, rt1.c0, rt1.c2, NULL, rt1.c1)) NOT BETWEEN ((rt0.c2, CAST(rt1.c6 AS BLOB), rt1.c4 COLLATE NOCASE, CAST(rt1.c4 AS NUMERIC), ((rt1.c4)<(rt1.c4)))) AND ((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 END, (~ (rt1.c3)), CAST(rt0.c3 AS REAL), MAX(rt1.c5, rt0.c3), rt1.c6 COLLATE NOCASE)))) ORDER BY (((('442560502')|(rt1.c4))) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM rt0, rt1 NATURAL JOIN vt0 WHERE ((((0.029502395499244383, vt0.c0, rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE), (rt1.c4 IN (rt1.c6, rt1.c3)), CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c4 END)) AND ((NULL, IFNULL(DISTINCT rt0.c1, rt1.c1), CAST(rt1.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.029502395499244383, vt0.c0, rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE), (rt1.c4 IN (rt1.c6, rt1.c3)), CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c4 END)) AND ((NULL, IFNULL(DISTINCT rt0.c1, rt1.c1), CAST(rt1.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt0);
SELECT * FROM rt0, rt1 NATURAL JOIN vt0 WHERE ((((0.029502395499244383, vt0.c0, rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE), (rt1.c4 IN (rt1.c6, rt1.c3)), CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c4 END)) AND ((NULL, IFNULL(DISTINCT rt0.c1, rt1.c1), CAST(rt1.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.029502395499244383, vt0.c0, rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE), (rt1.c4 IN (rt1.c6, rt1.c3)), CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c4 END)) AND ((NULL, IFNULL(DISTINCT rt0.c1, rt1.c1), CAST(rt1.c2 AS BLOB))))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt0);
SELECT * FROM rt0, rt1 NATURAL JOIN vt0 WHERE ((((0.029502395499244383, vt0.c0, rt1.c2)) NOT BETWEEN ((((rt1.c3) IS TRUE), (rt1.c4 IN (rt1.c6, rt1.c3)), CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt1.c4 END)) AND ((NULL, IFNULL(DISTINCT rt0.c1, rt1.c1), CAST(rt1.c2 AS BLOB)))));
SELECT ALL * FROM rt1 WHERE (((0.9620626223676796)*(((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c3)))OR(rt1.c1))))) ORDER BY '-1407245828'  NULLS LAST, (((rt1.c1) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9620626223676796)*(((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c3)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY '-1407245828'  NULLS LAST, (((rt1.c1) IS FALSE) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((0.9620626223676796)*(((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c3)))OR(rt1.c1))))) ORDER BY '-1407245828'  NULLS LAST, (((rt1.c1) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9620626223676796)*(((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c3)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY '-1407245828'  NULLS LAST, (((rt1.c1) IS FALSE) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((0.9620626223676796)*(((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c6)))OR(rt1.c3)))OR(rt1.c1))))) ORDER BY '-1407245828'  NULLS LAST, (((rt1.c1) IS FALSE) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE INNER JOIN rt1 ON ((((rt1.c0)LIKE(rt0.c1)))GLOB(LIKELY(rt0.c0))) WHERE (((((rt0.c2)<<(rt1.c6))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (''))) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c3, rt1.c4, rt1.c6))<>((rt1.c4, 'D gl', rt1.c3))) ELSE ((rt1.c1)+(rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt1.c6))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (''))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE INNER JOIN rt1 ON ((((rt1.c0)LIKE(rt0.c1)))GLOB(LIKELY(rt0.c0))) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c3, rt1.c4, rt1.c6))!=((rt1.c4, 'D gl', rt1.c3))) ELSE ((rt1.c1)+(rt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE INNER JOIN rt1 ON ((((rt1.c0)LIKE(rt0.c1)))GLOB(LIKELY(rt0.c0))) WHERE (((((rt0.c2)<<(rt1.c6))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (''))) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c3, rt1.c4, rt1.c6))<>((rt1.c4, 'D gl', rt1.c3))) ELSE ((rt1.c1)+(rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt1.c6))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (''))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE INNER JOIN rt1 ON ((((rt1.c0)LIKE(rt0.c1)))GLOB(LIKELY(rt0.c0))) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c3, rt1.c4, rt1.c6))!=((rt1.c4, 'D gl', rt1.c3))) ELSE ((rt1.c1)+(rt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE INNER JOIN rt1 ON ((((rt1.c0)LIKE(rt0.c1)))GLOB(LIKELY(rt0.c0))) WHERE (((((rt0.c2)<<(rt1.c6))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (''))) ORDER BY CASE WHEN rt1.c1 THEN (((rt1.c3, rt1.c4, rt1.c6))<>((rt1.c4, 'D gl', rt1.c3))) ELSE ((rt1.c1)+(rt0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN rt1 ON CAST(((((rt1.c5)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER) WHERE (((((rt1.c2)<<(rt1.c3)))AND((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<<(rt1.c3)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN rt1 ON CAST(((((rt1.c5)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN rt1 ON CAST(((((rt1.c5)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER) WHERE (((((rt1.c2)<<(rt1.c3)))AND((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)<<(rt1.c3)))AND((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN rt1 ON CAST(((((rt1.c5)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN rt1 ON CAST(((((rt1.c5)AND(rt0.c1)))AND(rt0.c0)) AS INTEGER) WHERE (((((rt1.c2)<<(rt1.c3)))AND((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((+ (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((+ (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((+ (NULL)) COLLATE RTRIM);
SELECT * FROM rt1 WHERE ('|8') ORDER BY (- (CASE rt1.c6  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('|8') IS TRUE)  as count FROM rt1 ORDER BY (- (CASE rt1.c6  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END)) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ('|8') ORDER BY (- (CASE rt1.c6  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('|8') IS TRUE)  as count FROM rt1 ORDER BY (- (CASE rt1.c6  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END)) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ('|8') ORDER BY (- (CASE rt1.c6  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c5 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-41350571' THEN x'' ELSE x'' END) IS FALSE)) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-41350571' THEN x'' ELSE x'' END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-41350571' THEN x'' ELSE x'' END) IS FALSE)) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-41350571' THEN x'' ELSE x'' END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-41350571' THEN x'' ELSE x'' END) IS FALSE)) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, rt1 WHERE (CAST(((rt1.c2) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (CAST(((rt1.c2) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (CAST(((rt1.c2) NOT NULL) AS TEXT));
SELECT * FROM rt0, rt1, vt0 WHERE ((((((rt1.c0))=((NULL))))!=('')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))=((NULL))))!=(''))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((((((rt1.c0))=((NULL))))!=('')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))=((NULL))))!=(''))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE ((((((rt1.c0))=((NULL))))!=('')));
