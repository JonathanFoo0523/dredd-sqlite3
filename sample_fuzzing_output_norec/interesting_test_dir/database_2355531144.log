-- Time: 2024/06/09 11:01:23
-- Database: database44
-- Database version: 3.40.0
-- seed value: 2355531144
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=('1737688428') WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1737688428 THEN vt0.c0 END) ISNULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (x''), (''); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.749669600374689); -- 0ms;
END; -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59315'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
ANALYZE main; -- 11ms;
INSERT OR IGNORE INTO vt0 VALUES (0.749669600374689), (1.737688428E9), (0.10832688656523615), (NULL), (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('1737688428', x'58e9'); -- 0ms;
END; -- 0ms;
PRAGMA temp.journal_mode = MEMORY; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '9966'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('1130194489'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 252983091); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 622710089); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 455175777); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-617810355,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1322281797);\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (x''), (0X435d6639); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('-617810355'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.749669600374689); -- 0ms;
ANALYZE temp; -- 0ms;
CREATE TEMP TABLE t47 (c0 BLOB ); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1737688428);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46082'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE vt0.c0 COLLATE NOCASE; -- 1ms;
INSERT OR ABORT INTO vt0 VALUES (NULL), (0.9353767974102258), (-1.322281797E9); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't47', '-1322281797 sz=-1377375674 noskipscan'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1405559434,6');\n; -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 AFTER INSERT ON t47 FOR EACH ROW  BEGIN SELECT RAISE(IGNORE);END; -- 0ms;
INSERT OR IGNORE INTO t47 VALUES (0.8718818775835634), ('?\nY'), (0xffffffffd139750f); -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 1ms;
ALTER TABLE t47 ADD COLUMN c5 BLOB; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t47 ADD COLUMN c99 INT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50757'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63808'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 555159866); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.9806111174808921); -- 1ms;
INSERT OR REPLACE INTO t47(c5, c99) VALUES ('', NULL); -- 0ms;
INSERT OR IGNORE INTO t47(c5, c99) VALUES (x'', NULL); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.13855240316652884); -- 1ms;
VACUUM main; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (1130194489); -- 0ms;
DELETE FROM t47 WHERE '-445294984'; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x''); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
DROP TABLE t47; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((NOT (0xffffffffe204af63)))) WHERE (CASE WHEN x'' THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN vt0.c0 END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((NOT (0Xffffffffe204af63)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((NOT (0xffffffffe204af63)))) WHERE (CASE WHEN x'' THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN vt0.c0 END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((NOT (0Xffffffffe204af63)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((NOT (0xffffffffe204af63)))) WHERE (CASE WHEN x'' THEN vt0.c0 END);
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))OR(((vt1.c0)&(0.2030557168154763)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))OR(((vt1.c0)&(0.2030557168154763))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))OR(((vt1.c0)&(0.2030557168154763)))));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))OR(((vt1.c0)&(0.2030557168154763))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))OR(((vt1.c0)&(0.2030557168154763)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((vt0.c0) IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ORDER BY (NULL IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ORDER BY (NULL IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((TRIM(vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (vt0.c0))) ORDER BY (NULL IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((1.130194489E9)AND((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((1.130194489E9)AND((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((1.130194489E9)AND((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((1.130194489E9)AND((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((1.130194489E9)AND((vt1.c0 IN (vt1.c0)))))OR(vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((~ (vt0.c0))) ORDER BY (+ (((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (+ (((vt1.c0) IS TRUE))) ASC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((~ (vt0.c0))) ORDER BY (+ (((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (+ (((vt1.c0) IS TRUE))) ASC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((~ (vt0.c0))) ORDER BY (+ (((vt1.c0) IS TRUE))) ASC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC) WHERE (((vt0.c0 IN (vt1.c0)) IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt1.c0)) IN (vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC) WHERE (((vt0.c0 IN (vt1.c0)) IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt1.c0)) IN (vt0.c0))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC) WHERE (((vt0.c0 IN (vt1.c0)) IN (vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOTNULL))-((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))-((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOTNULL))-((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))-((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOTNULL))-((- (vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -518615493 END)<<((NOT (vt0.c0))))) ORDER BY CAST(DATE(vt0.c0, vt1.c0, vt1.c0) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -518615493 END)<<((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(DATE(vt0.c0, vt1.c0, vt1.c0) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -518615493 END)<<((NOT (vt0.c0))))) ORDER BY CAST(DATE(vt0.c0, vt1.c0, vt1.c0) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -518615493 END)<<((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(DATE(vt0.c0, vt1.c0, vt1.c0) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE -518615493 END)<<((NOT (vt0.c0))))) ORDER BY CAST(DATE(vt0.c0, vt1.c0, vt1.c0) AS INTEGER)  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt1.c0))) ISNULL) WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS TRUE)))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt1.c0))) ISNULL) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB)  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt1.c0))) ISNULL) WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS TRUE)))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt1.c0))) ISNULL) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB)  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0)>=(vt1.c0))) ISNULL) WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))GLOB(((vt1.c0) IS TRUE)))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c0)OR(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (((vt1.c0)<>(vt1.c0))))) ORDER BY (((vt1.c0 IN ()))IS NOT(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))IS NOT(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (((vt1.c0)<>(vt1.c0))))) ORDER BY (((vt1.c0 IN ()))IS NOT(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))IS NOT(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (((vt1.c0)<>(vt1.c0))))) ORDER BY (((vt1.c0 IN ()))IS NOT(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN 0x25d0a5ce THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.0809116080371336 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE WHERE (((json(vt1.c0))<('250532062')));
SELECT SUM(count) FROM (SELECT ((((json(vt1.c0))<('250532062'))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN 0x25d0a5ce THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.0809116080371336 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN 0x25d0a5ce THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.0809116080371336 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE WHERE (((json(vt1.c0))<('250532062')));
SELECT SUM(count) FROM (SELECT ((((json(vt1.c0))<('250532062'))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN 0x25d0a5ce THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.0809116080371336 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN 0x25d0a5ce THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.0809116080371336 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE WHERE (((json(vt1.c0))<('250532062')));
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 END)>=(LIKELIHOOD(DISTINCT vt1.c0, 0.13328595311511005)))) ORDER BY LTRIM(NULL, (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 END)>=(LIKELIHOOD(DISTINCT vt1.c0, 0.13328595311511005)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 ORDER BY LTRIM(NULL, (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) DESC);
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 END)>=(LIKELIHOOD(DISTINCT vt1.c0, 0.13328595311511005)))) ORDER BY LTRIM(NULL, (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 END)>=(LIKELIHOOD(DISTINCT vt1.c0, 0.13328595311511005)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 ORDER BY LTRIM(NULL, (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) DESC);
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 END)>=(LIKELIHOOD(DISTINCT vt1.c0, 0.13328595311511005)))) ORDER BY LTRIM(NULL, (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))<=((NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))<=((NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))<=((NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))<=((NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) ORDER BY (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))<=((NULL))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((('-518615493') NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((('-518615493') NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((('-518615493') NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((('-518615493') NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((('-518615493') NOT BETWEEN (((vt0.c0) ISNULL)) AND (((vt1.c0)>>(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('')) BETWEEN ((vt1.c0)) AND (((((vt1.c0))==((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN ((vt1.c0)) AND (((((vt1.c0))==((vt0.c0))))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('')) BETWEEN ((vt1.c0)) AND (((((vt1.c0))==((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((('')) BETWEEN ((vt1.c0)) AND (((((vt1.c0))==((vt0.c0))))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('')) BETWEEN ((vt1.c0)) AND (((((vt1.c0))==((vt0.c0)))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOTNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)||(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE (((CAST(vt1.c0 AS NUMERIC))-(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))-(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)||(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)||(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE (((CAST(vt1.c0 AS NUMERIC))-(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))-(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)||(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 COLLATE BINARY)||(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE (((CAST(vt1.c0 AS NUMERIC))-(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((NOT (vt0.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c0)GLOB('1100301310'))  WHEN (NOT (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE IFNULL(vt0.c0, x'') END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2640113813964676 ELSE vt1.c0 END)<(x''));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)GLOB('1100301310'))  WHEN (NOT (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE IFNULL(vt0.c0, x'') END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2640113813964676 ELSE vt1.c0 END)<(x'')));
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c0)GLOB('1100301310'))  WHEN (NOT (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE IFNULL(vt0.c0, x'') END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2640113813964676 ELSE vt1.c0 END)<(x''));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)GLOB('1100301310'))  WHEN (NOT (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE IFNULL(vt0.c0, x'') END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2640113813964676 ELSE vt1.c0 END)<(x'')));
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c0)GLOB('1100301310'))  WHEN (NOT (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE IFNULL(vt0.c0, x'') END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2640113813964676 ELSE vt1.c0 END)<(x''));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((((((((vt1.c0)OR(0.014878945667631482)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0))<=((NULL))) WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN (+ (vt1.c0)) THEN x'' ELSE ((vt0.c0) IS TRUE) END) ORDER BY ((vt0.c0)OR(vt1.c0)) COLLATE NOCASE DESC, ((((((((vt1.c0)AND(vt0.c0)))OR(0.6289911254546546)))OR(vt0.c0)))AND(vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((((((((vt1.c0)OR(0.014878945667631482)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0))<=((NULL))) WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN (+ (vt1.c0)) THEN x'' ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)OR(vt1.c0)) COLLATE NOCASE DESC, ((((((((vt1.c0)AND(vt0.c0)))OR(0.6289911254546546)))OR(vt0.c0)))AND(vt1.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((((((((vt1.c0)OR(0.014878945667631482)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0))<=((NULL))) WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN (+ (vt1.c0)) THEN x'' ELSE ((vt0.c0) IS TRUE) END) ORDER BY ((vt0.c0)OR(vt1.c0)) COLLATE NOCASE DESC, ((((((((vt1.c0)AND(vt0.c0)))OR(0.6289911254546546)))OR(vt0.c0)))AND(vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((((((((vt1.c0)OR(0.014878945667631482)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0))<=((NULL))) WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN (+ (vt1.c0)) THEN x'' ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)OR(vt1.c0)) COLLATE NOCASE DESC, ((((((((vt1.c0)AND(vt0.c0)))OR(0.6289911254546546)))OR(vt0.c0)))AND(vt1.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ABS(DISTINCT vt0.c0) WHEN ((((((((vt1.c0)OR(0.014878945667631482)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0))<=((NULL))) WHEN (NOT (vt0.c0)) THEN vt1.c0 WHEN (+ (vt1.c0)) THEN x'' ELSE ((vt0.c0) IS TRUE) END) ORDER BY ((vt0.c0)OR(vt1.c0)) COLLATE NOCASE DESC, ((((((((vt1.c0)AND(vt0.c0)))OR(0.6289911254546546)))OR(vt0.c0)))AND(vt1.c0)) COLLATE NOCASE ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))) ORDER BY 0.43677394360458377  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY 0.43677394360458377  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))) ORDER BY 0.43677394360458377  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY 0.43677394360458377  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(CAST(vt0.c0 AS TEXT)))) ORDER BY 0.43677394360458377  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (vt1.c0)))!=(((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))!=(((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (vt1.c0)))!=(((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))!=(((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((~ (vt1.c0)))!=(((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))));
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0)>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0)>(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0)>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0)>(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0)>(vt1.c0)) END);
SELECT * FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (TYPEOF(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<=(vt0.c0))))) ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)<(vt0.c0)), vt1.c0, ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))) AND (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, vt1.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)<(vt0.c0)), vt1.c0, ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))) AND (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<=(vt0.c0))))) ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)<(vt0.c0)), vt1.c0, ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))) AND (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, vt1.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)<(vt0.c0)), vt1.c0, ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))) AND (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<=(vt0.c0))))) ORDER BY (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)<(vt0.c0)), vt1.c0, ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))) AND (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, vt1.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0)IS(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0)IS(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0)IS(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0)IS(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0 IN ()))>>(((vt0.c0)IS(vt0.c0)))) DESC;
SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) ORDER BY vt1.c0 DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS NOT((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))IS NOT((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS NOT((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))IS NOT((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))IS NOT((- (vt1.c0)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)LIKE(vt1.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LOWER(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LOWER(DISTINCT (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LOWER(DISTINCT (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON x'' WHERE (NULL) ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON x'' ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON x'' WHERE (NULL) ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON x'' ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON x'' WHERE (NULL) ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) ASC;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (TYPEOF(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY ((((vt0.c0)>=(vt1.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN (((vt0.c0))<=((vt1.c0))) THEN x'3483' WHEN (((vt1.c0, vt0.c0, vt1.c0))>((vt1.c0, vt1.c0, '0.2640113813964676'))) THEN (vt1.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN x'' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((vt0.c0)>=(vt1.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN (((vt0.c0))<=((vt1.c0))) THEN x'3483' WHEN (((vt1.c0, vt0.c0, vt1.c0))>((vt1.c0, vt1.c0, '0.2640113813964676'))) THEN (vt1.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN x'' END ASC  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (TYPEOF(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY ((((vt0.c0)>=(vt1.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN (((vt0.c0))<=((vt1.c0))) THEN x'3483' WHEN (((vt1.c0, vt0.c0, vt1.c0))>((vt1.c0, vt1.c0, '0.2640113813964676'))) THEN (vt1.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN x'' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((((vt0.c0)>=(vt1.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN (((vt0.c0))<=((vt1.c0))) THEN x'3483' WHEN (((vt1.c0, vt0.c0, vt1.c0))>((vt1.c0, vt1.c0, '0.2640113813964676'))) THEN (vt1.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN x'' END ASC  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (TYPEOF(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END)) ORDER BY ((((vt0.c0)>=(vt1.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN (((vt0.c0))<=((vt1.c0))) THEN x'3483' WHEN (((vt1.c0, vt0.c0, vt1.c0))>((vt1.c0, vt1.c0, '0.2640113813964676'))) THEN (vt1.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN x'' END ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0) NOT NULL))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT NULL))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0) NOT NULL))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT NULL))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0) NOT NULL))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN (LIKE(vt1.c0, vt1.c0, 'Q')) AND (vt1.c0))) ORDER BY LIKELY(DISTINCT (vt1.c0 IN (vt1.c0, vt1.c0))) DESC, (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, UNLIKELY(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) NOT BETWEEN (LIKE(vt1.c0, vt1.c0, 'Q')) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(DISTINCT (vt1.c0 IN (vt1.c0, vt1.c0))) DESC, (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, UNLIKELY(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN (LIKE(vt1.c0, vt1.c0, 'Q')) AND (vt1.c0))) ORDER BY LIKELY(DISTINCT (vt1.c0 IN (vt1.c0, vt1.c0))) DESC, (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, UNLIKELY(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) NOT BETWEEN (LIKE(vt1.c0, vt1.c0, 'Q')) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(DISTINCT (vt1.c0 IN (vt1.c0, vt1.c0))) DESC, (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, UNLIKELY(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) NOT BETWEEN (LIKE(vt1.c0, vt1.c0, 'Q')) AND (vt1.c0))) ORDER BY LIKELY(DISTINCT (vt1.c0 IN (vt1.c0, vt1.c0))) DESC, (+ (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST, UNLIKELY(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR((NOT (vt0.c0)))))OR(LOWER(DISTINCT vt0.c0)))) ORDER BY (((vt0.c0)OR(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR((NOT (vt0.c0)))))OR(LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)OR(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR((NOT (vt0.c0)))))OR(LOWER(DISTINCT vt0.c0)))) ORDER BY (((vt0.c0)OR(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR((NOT (vt0.c0)))))OR(LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)OR(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR((NOT (vt0.c0)))))OR(LOWER(DISTINCT vt0.c0)))) ORDER BY (((vt0.c0)OR(vt1.c0)) IN ());
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY (('tr' IN ()) IN (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('tr' IN ()) IN (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY (('tr' IN ()) IN (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('tr' IN ()) IN (vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((x'' IN ())) ORDER BY (('tr' IN ()) IN (vt0.c0))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)*(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)*(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0)*(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY CAST(((vt0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY CAST(((vt0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY))) ORDER BY CAST(((vt0.c0) NOTNULL) AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c0)OR(((vt1.c0)/(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt1.c0))))))AND(((vt1.c0) IS TRUE))) WHERE (0.3725700703360223) ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((0.3725700703360223) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN vt1 ON ((((((((vt0.c0)OR(((vt1.c0)/(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt1.c0))))))AND(((vt1.c0) IS TRUE))) ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c0)OR(((vt1.c0)/(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt1.c0))))))AND(((vt1.c0) IS TRUE))) WHERE (0.3725700703360223) ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((0.3725700703360223) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN vt1 ON ((((((((vt0.c0)OR(((vt1.c0)/(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt1.c0))))))AND(((vt1.c0) IS TRUE))) ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((((vt0.c0)OR(((vt1.c0)/(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))<=((vt1.c0))))))AND(((vt1.c0) IS TRUE))) WHERE (0.3725700703360223) ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) IS TRUE);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'7115d64b' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'7115d64b' COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'7115d64b' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'7115d64b' COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'7115d64b' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)+(vt1.c0)))|((+ (vt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>((NOT (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt1.c0)))|((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>((NOT (NULL)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)+(vt1.c0)))|((+ (vt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>((NOT (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt1.c0)))|((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>((NOT (NULL)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)+(vt1.c0)))|((+ (vt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>((NOT (NULL)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (NOT (IFNULL(vt1.c0, vt1.c0)))  NULLS LAST, CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN 1.130194489E9 THEN 0x6793056c COLLATE NOCASE ELSE 0.21316012631413073 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (NOT (IFNULL(vt1.c0, vt1.c0)))  NULLS LAST, CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN 1.130194489E9 THEN 0x6793056c COLLATE NOCASE ELSE 0.21316012631413073 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (NOT (IFNULL(vt1.c0, vt1.c0)))  NULLS LAST, CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN 1.130194489E9 THEN 0x6793056c COLLATE NOCASE ELSE 0.21316012631413073 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (NOT (IFNULL(vt1.c0, vt1.c0)))  NULLS LAST, CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN 1.130194489E9 THEN 0x6793056c COLLATE NOCASE ELSE 0.21316012631413073 END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (NOT (IFNULL(vt1.c0, vt1.c0)))  NULLS LAST, CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN 1.130194489E9 THEN 0x6793056c COLLATE NOCASE ELSE 0.21316012631413073 END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR(vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END END) ORDER BY ((vt1.c0)<>(('-784763633' IN (vt1.c0, x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR(vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)!=(('-784763633' IN (vt1.c0, x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR(vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END END) ORDER BY ((vt1.c0)<>(('-784763633' IN (vt1.c0, x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR(vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)!=(('-784763633' IN (vt1.c0, x''))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((x'')AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR(vt1.c0)) THEN ((vt1.c0) IS FALSE) ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END END) ORDER BY ((vt1.c0)<>(('-784763633' IN (vt1.c0, x''))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (vt1.c0 IN ()) ELSE json_array_length(vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (vt1.c0 IN ()) ELSE json_array_length(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (vt1.c0 IN ()) ELSE json_array_length(vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (vt1.c0 IN ()) ELSE json_array_length(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0)*(vt1.c0)) THEN (vt1.c0 IN ()) ELSE json_array_length(vt1.c0, vt1.c0) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY CAST((NOT (vt1.c0)) AS NUMERIC);
SELECT * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE NOCASE THEN ((((((((0.749669600374689)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE NOCASE THEN ((((((((0.749669600374689)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE NOCASE THEN ((((((((0.749669600374689)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE NOCASE THEN ((((((((0.749669600374689)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 COLLATE NOCASE THEN ((((((((0.749669600374689)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN (+ ('Xp')) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN (+ ('Xp')) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN (+ ('Xp')) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN (+ ('Xp')) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN (+ ('Xp')) THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0xaf3c241) ORDER BY (((+ ('now'))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0xaf3c241) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ ('now'))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0xaf3c241) ORDER BY (((+ ('now'))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0xaf3c241) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((+ ('now'))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0xaf3c241) ORDER BY (((+ ('now'))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY -1000327968 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY -1000327968 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC)) ORDER BY -1000327968 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY -1000327968 ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (('1176853223' IN (((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((('1176853223' IN (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('1176853223' IN (((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((('1176853223' IN (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (('1176853223' IN (((vt0.c0)GLOB(vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(NULLIF(DISTINCT vt0.c0, vt1.c0)))) ORDER BY CASE '-936565845'  WHEN (+ (vt1.c0)) THEN 0x46f88e14 WHEN vt0.c0 THEN JULIANDAY(vt0.c0, vt1.c0, vt0.c0) WHEN ((((vt0.c0)OR('')))OR(vt0.c0)) THEN x'' ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (1.83747137E8)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(NULLIF(DISTINCT vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE '-936565845'  WHEN (+ (vt1.c0)) THEN 0X46f88e14 WHEN vt0.c0 THEN JULIANDAY(vt0.c0, vt1.c0, vt0.c0) WHEN ((((vt0.c0)OR('')))OR(vt0.c0)) THEN x'' ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (1.83747137E8)) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(NULLIF(DISTINCT vt0.c0, vt1.c0)))) ORDER BY CASE '-936565845'  WHEN (+ (vt1.c0)) THEN 0x46f88e14 WHEN vt0.c0 THEN JULIANDAY(vt0.c0, vt1.c0, vt0.c0) WHEN ((((vt0.c0)OR('')))OR(vt0.c0)) THEN x'' ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (1.83747137E8)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(NULLIF(DISTINCT vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE '-936565845'  WHEN (+ (vt1.c0)) THEN 0X46f88e14 WHEN vt0.c0 THEN JULIANDAY(vt0.c0, vt1.c0, vt0.c0) WHEN ((((vt0.c0)OR('')))OR(vt0.c0)) THEN x'' ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (1.83747137E8)) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(NULLIF(DISTINCT vt0.c0, vt1.c0)))) ORDER BY CASE '-936565845'  WHEN (+ (vt1.c0)) THEN 0x46f88e14 WHEN vt0.c0 THEN JULIANDAY(vt0.c0, vt1.c0, vt0.c0) WHEN ((((vt0.c0)OR('')))OR(vt0.c0)) THEN x'' ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (1.83747137E8)) END  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) AND (TRIM(vt0.c0))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((vt0.c0))>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)AND(vt1.c0)) END WHERE ('') ORDER BY (((vt1.c0 IN ()))=((((0.13855240316652884, vt1.c0, vt0.c0, vt0.c0, vt1.c0))<((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (((('')<=(vt0.c0)))OR(((vt1.c0)GLOB(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((vt0.c0))>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)AND(vt1.c0)) END ORDER BY (((vt1.c0 IN ()))=((((0.13855240316652884, vt1.c0, vt0.c0, vt0.c0, vt1.c0))<((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (((('')<=(vt0.c0)))OR(((vt1.c0)GLOB(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((vt0.c0))>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)AND(vt1.c0)) END WHERE ('') ORDER BY (((vt1.c0 IN ()))=((((0.13855240316652884, vt1.c0, vt0.c0, vt0.c0, vt1.c0))<((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (((('')<=(vt0.c0)))OR(((vt1.c0)GLOB(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((vt0.c0))>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)AND(vt1.c0)) END ORDER BY (((vt1.c0 IN ()))=((((0.13855240316652884, vt1.c0, vt0.c0, vt0.c0, vt1.c0))<((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (((('')<=(vt0.c0)))OR(((vt1.c0)GLOB(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((vt0.c0))>((vt0.c0)))  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0)AND(vt1.c0)) END WHERE ('') ORDER BY (((vt1.c0 IN ()))=((((0.13855240316652884, vt1.c0, vt0.c0, vt0.c0, vt1.c0))<((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (((('')<=(vt0.c0)))OR(((vt1.c0)GLOB(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(json(vt1.c0) AS TEXT)) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS FIRST, (json_type('{I') IN (CAST(vt1.c0 AS BLOB), ((vt1.c0)>>(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json(vt1.c0) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS FIRST, (json_type('{I') IN (CAST(vt1.c0 AS BLOB), ((vt1.c0)>>(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(json(vt1.c0) AS TEXT)) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS FIRST, (json_type('{I') IN (CAST(vt1.c0 AS BLOB), ((vt1.c0)>>(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json(vt1.c0) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS FIRST, (json_type('{I') IN (CAST(vt1.c0 AS BLOB), ((vt1.c0)>>(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(json(vt1.c0) AS TEXT)) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS FIRST, (json_type('{I') IN (CAST(vt1.c0 AS BLOB), ((vt1.c0)>>(vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (json_object((vt0.c0 IN (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)IS(vt0.c0)), ((vt0.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_object((vt0.c0 IN (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)IS(vt0.c0)), ((vt0.c0)+(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_object((vt0.c0 IN (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)IS(vt0.c0)), ((vt0.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_object((vt0.c0 IN (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0)IS(vt0.c0)), ((vt0.c0)+(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (x'')) COLLATE NOCASE) ORDER BY ((ROUND(vt0.c0, vt0.c0))>(NULL)), '㍜u^' DESC;
SELECT SUM(count) FROM (SELECT (((~ (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((ROUND(vt0.c0, vt0.c0))>(NULL)), '㍜u^' DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (x'')) COLLATE NOCASE) ORDER BY ((ROUND(vt0.c0, vt0.c0))>(NULL)), '㍜u^' DESC;
SELECT SUM(count) FROM (SELECT (((~ (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((ROUND(vt0.c0, vt0.c0))>(NULL)), '㍜u^' DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (x'')) COLLATE NOCASE) ORDER BY ((ROUND(vt0.c0, vt0.c0))>(NULL)), '㍜u^' DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))<(CAST(vt1.c0 AS BLOB)))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST, (~ (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST, (~ (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))<(CAST(vt1.c0 AS BLOB)))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST, (~ (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))<(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST, (~ (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))<(CAST(vt1.c0 AS BLOB)))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT), CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE ASC  NULLS FIRST, (~ (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (- (TIME(NULL, vt0.c0, vt1.c0))) WHERE ((((((((vt0.c0))!=((vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((x'' IN (vt0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))!=((vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((x'' IN (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- (TIME(NULL, vt0.c0, vt1.c0))) ORDER BY x'');
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (- (TIME(NULL, vt0.c0, vt1.c0))) WHERE ((((((((vt0.c0))!=((vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((x'' IN (vt0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))!=((vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((x'' IN (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- (TIME(NULL, vt0.c0, vt1.c0))) ORDER BY x'');
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (- (TIME(NULL, vt0.c0, vt1.c0))) WHERE ((((((((vt0.c0))!=((vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((x'' IN (vt0.c0))))) ORDER BY x'';
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY ((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (vt0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (vt0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY ((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (vt0.c0 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (vt0.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY ((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC, (vt0.c0 COLLATE BINARY IN ());
SELECT * FROM vt1 WHERE (((((NULL)/(vt1.c0)))%(((']pꪠ')&(vt1.c0))))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0x46f88e14 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)/(vt1.c0)))%(((']pꪠ')&(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0X46f88e14 END DESC);
SELECT * FROM vt1 WHERE (((((NULL)/(vt1.c0)))%(((']pꪠ')&(vt1.c0))))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0x46f88e14 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)/(vt1.c0)))%(((']pꪠ')&(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0X46f88e14 END DESC);
SELECT * FROM vt1 WHERE (((((NULL)/(vt1.c0)))%(((']pꪠ')&(vt1.c0))))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE 0x46f88e14 END DESC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY ((- (vt1.c0)) IN (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (((((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))AND((((vt0.c0))<((vt1.c0))))))OR((vt1.c0 IN ()))), (((vt1.c0 IN (vt1.c0, vt0.c0)))GLOB(0.3994148637707823)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((- (vt1.c0)) IN (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (((((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))AND((((vt0.c0))<((vt1.c0))))))OR((vt1.c0 IN ()))), (((vt1.c0 IN (vt1.c0, vt0.c0)))GLOB(0.3994148637707823)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY ((- (vt1.c0)) IN (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (((((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))AND((((vt0.c0))<((vt1.c0))))))OR((vt1.c0 IN ()))), (((vt1.c0 IN (vt1.c0, vt0.c0)))GLOB(0.3994148637707823)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((- (vt1.c0)) IN (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (((((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))AND((((vt0.c0))<((vt1.c0))))))OR((vt1.c0 IN ()))), (((vt1.c0 IN (vt1.c0, vt0.c0)))GLOB(0.3994148637707823)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY ((- (vt1.c0)) IN (((((((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, (((((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))AND((((vt0.c0))<((vt1.c0))))))OR((vt1.c0 IN ()))), (((vt1.c0 IN (vt1.c0, vt0.c0)))GLOB(0.3994148637707823)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (vt0.c0)))))) ORDER BY IFNULL(CAST(vt0.c0 AS INTEGER), x'')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CAST(vt0.c0 AS INTEGER), x'')  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (vt0.c0)))))) ORDER BY IFNULL(CAST(vt0.c0 AS INTEGER), x'')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CAST(vt0.c0 AS INTEGER), x'')  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (vt0.c0)))))) ORDER BY IFNULL(CAST(vt0.c0 AS INTEGER), x'')  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, x'1e65')) AND ((vt1.c0, vt0.c0, x''))))AND(((vt0.c0)|(vt0.c0)))))OR(((vt0.c0)|(vt1.c0))))) ORDER BY vt1.c0 ASC, ((0.10832688656523615) NOT BETWEEN ((((vt0.c0, vt1.c0, 2.50532062E8)) BETWEEN ((vt0.c0, 0.13855240316652884, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) AND ((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, x'1e65')) AND ((vt1.c0, vt0.c0, x''))))AND(((vt0.c0)|(vt0.c0)))))OR(((vt0.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 ASC, ((0.10832688656523615) NOT BETWEEN ((((vt0.c0, vt1.c0, 2.50532062E8)) BETWEEN ((vt0.c0, 0.13855240316652884, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) AND ((+ (vt1.c0)))) ASC);
SELECT * FROM vt0, vt1 WHERE ((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, x'1e65')) AND ((vt1.c0, vt0.c0, x''))))AND(((vt0.c0)|(vt0.c0)))))OR(((vt0.c0)|(vt1.c0))))) ORDER BY vt1.c0 ASC, ((0.10832688656523615) NOT BETWEEN ((((vt0.c0, vt1.c0, 2.50532062E8)) BETWEEN ((vt0.c0, 0.13855240316652884, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) AND ((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, x'1e65')) AND ((vt1.c0, vt0.c0, x''))))AND(((vt0.c0)|(vt0.c0)))))OR(((vt0.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 ASC, ((0.10832688656523615) NOT BETWEEN ((((vt0.c0, vt1.c0, 2.50532062E8)) BETWEEN ((vt0.c0, 0.13855240316652884, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) AND ((+ (vt1.c0)))) ASC);
SELECT * FROM vt0, vt1 WHERE ((((((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, x'1e65')) AND ((vt1.c0, vt0.c0, x''))))AND(((vt0.c0)|(vt0.c0)))))OR(((vt0.c0)|(vt1.c0))))) ORDER BY vt1.c0 ASC, ((0.10832688656523615) NOT BETWEEN ((((vt0.c0, vt1.c0, 2.50532062E8)) BETWEEN ((vt0.c0, 0.13855240316652884, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) AND ((+ (vt1.c0)))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((- ((+ (vt0.c0))))) ORDER BY CAST((vt0.c0 IN (vt1.c0, vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt0.c0 IN (vt1.c0, vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((- ((+ (vt0.c0))))) ORDER BY CAST((vt0.c0 IN (vt1.c0, vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt0.c0 IN (vt1.c0, vt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((- ((+ (vt0.c0))))) ORDER BY CAST((vt0.c0 IN (vt1.c0, vt0.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(-1328532079))=(CAST(vt1.c0 AS BLOB)))) ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC, (((- (vt0.c0))) NOTNULL), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(-1328532079))=(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC, (((- (vt0.c0))) NOTNULL), vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(-1328532079))=(CAST(vt1.c0 AS BLOB)))) ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC, (((- (vt0.c0))) NOTNULL), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_USED(-1328532079))=(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC, (((- (vt0.c0))) NOTNULL), vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(-1328532079))=(CAST(vt1.c0 AS BLOB)))) ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN ((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END ASC, (((- (vt0.c0))) NOTNULL), vt0.c0  NULLS LAST;
SELECT * FROM vt0 WHERE (('D\rs' IN ())) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('n踻J}G+')))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((('D\rs' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('n踻J}G+')))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (('D\rs' IN ())) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('n踻J}G+')))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((('D\rs' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('n踻J}G+')))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (('D\rs' IN ())) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('n踻J}G+')))AND(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('4Ko'))<=(((((vt0.c0))<((vt1.c0))))))) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(vt1.c0)))AND(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((('4Ko'))<=(((((vt0.c0))<((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0 COLLATE BINARY)OR(vt1.c0)))AND(vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('4Ko'))<=(((((vt0.c0))<((vt1.c0))))))) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(vt1.c0)))AND(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((('4Ko'))<=(((((vt0.c0))<((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0 COLLATE BINARY)OR(vt1.c0)))AND(vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('4Ko'))<=(((((vt0.c0))<((vt1.c0))))))) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(vt1.c0)))AND(vt1.c0)) DESC;
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(vt1.c0 AS INTEGER)))) ORDER BY (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.24059692303461055)))OR(vt1.c0)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.24059692303461055)))OR(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(vt1.c0 AS INTEGER)))) ORDER BY (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.24059692303461055)))OR(vt1.c0)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.24059692303461055)))OR(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CAST(vt1.c0 AS INTEGER)))) ORDER BY (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(0.24059692303461055)))OR(vt1.c0)))AND(vt1.c0)) IN ());
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('<s')) WHEN ((vt0.c0)<>(NULL)) THEN CAST(vt1.c0 AS BLOB) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('<s')) WHEN ((vt0.c0)<>(NULL)) THEN CAST(vt1.c0 AS BLOB) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('<s')) WHEN ((vt0.c0)<>(NULL)) THEN CAST(vt1.c0 AS BLOB) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('<s')) WHEN ((vt0.c0)<>(NULL)) THEN CAST(vt1.c0 AS BLOB) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('<s')) WHEN ((vt0.c0)<>(NULL)) THEN CAST(vt1.c0 AS BLOB) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT * FROM vt0 WHERE (0xffffffffdb2cf64d) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffdb2cf64d) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0xffffffffdb2cf64d) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffdb2cf64d) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0xffffffffdb2cf64d) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND('D\rs')) IN ())) ORDER BY (((((vt1.c0, vt0.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))LIKE(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND('D\rs')) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0, vt0.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))LIKE(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND('D\rs')) IN ())) ORDER BY (((((vt1.c0, vt0.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))LIKE(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND('D\rs')) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0, vt0.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))LIKE(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND('D\rs')) IN ())) ORDER BY (((((vt1.c0, vt0.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))LIKE(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (0X2fc186a7) ORDER BY (((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, 0.8718818775835634, vt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x2fc186a7) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, 0.8718818775835634, vt1.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (0X2fc186a7) ORDER BY (((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, 0.8718818775835634, vt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x2fc186a7) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, 0.8718818775835634, vt1.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (0X2fc186a7) ORDER BY (((vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0, 0.8718818775835634, vt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS TEXT)) ORDER BY ((((vt1.c0)>(vt1.c0)))GLOB(CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>(vt1.c0)))GLOB(CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS TEXT)) ORDER BY ((((vt1.c0)>(vt1.c0)))GLOB(CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>(vt1.c0)))GLOB(CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS TEXT)) ORDER BY ((((vt1.c0)>(vt1.c0)))GLOB(CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0, vt1.c0, vt0.c0))<(('-503009437', vt1.c0, vt0.c0)))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt1.c0) IS TRUE)))) ORDER BY UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt1.c0, vt0.c0))<(('-503009437', vt1.c0, vt0.c0)))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0, vt1.c0, vt0.c0))<(('-503009437', vt1.c0, vt0.c0)))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt1.c0) IS TRUE)))) ORDER BY UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt1.c0, vt0.c0))<(('-503009437', vt1.c0, vt0.c0)))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c0, vt1.c0, vt0.c0))<(('-503009437', vt1.c0, vt0.c0)))) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (((vt1.c0) IS TRUE)))) ORDER BY UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0X48c5e750)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0x48c5e750)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0X48c5e750)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0x48c5e750)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0X48c5e750)))OR(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) IS FALSE)) ORDER BY (~ (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (~ (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) IS FALSE)) ORDER BY (~ (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (~ (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) IS FALSE)) ORDER BY (~ (CAST(vt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (1.405559434E9) ORDER BY ((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (json_object(0.5046532112900293, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1.405559434E9) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (json_object(0.5046532112900293, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (1.405559434E9) ORDER BY ((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (json_object(0.5046532112900293, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1.405559434E9) IS TRUE)  as count FROM vt1 ORDER BY ((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (json_object(0.5046532112900293, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (1.405559434E9) ORDER BY ((UNLIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt1.c0)|(vt1.c0))) AND (json_object(0.5046532112900293, vt1.c0, vt1.c0, vt1.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0)*(vt1.c0)))/(LIKELY(DISTINCT vt1.c0)))  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('-1936897214')) ASC, PRINTF('-1114310412') DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)*(vt1.c0)))/(LIKELY(DISTINCT vt1.c0)))  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('-1936897214')) ASC, PRINTF('-1114310412') DESC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0)*(vt1.c0)))/(LIKELY(DISTINCT vt1.c0)))  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('-1936897214')) ASC, PRINTF('-1114310412') DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)*(vt1.c0)))/(LIKELY(DISTINCT vt1.c0)))  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('-1936897214')) ASC, PRINTF('-1114310412') DESC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0)*(vt1.c0)))/(LIKELY(DISTINCT vt1.c0)))  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('-1936897214')) ASC, PRINTF('-1114310412') DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((0x4e8ee333)<(((vt1.c0)<>(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN ((((vt1.c0))<((vt0.c0)))) AND (((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0X4e8ee333)<(((vt1.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN ((((vt1.c0))<((vt0.c0)))) AND (((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((0x4e8ee333)<(((vt1.c0)<>(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN ((((vt1.c0))<((vt0.c0)))) AND (((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0X4e8ee333)<(((vt1.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0) NOT BETWEEN ((((vt1.c0))<((vt0.c0)))) AND (((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((0x4e8ee333)<(((vt1.c0)<>(vt0.c0))))) ORDER BY ((vt0.c0) NOT BETWEEN ((((vt1.c0))<((vt0.c0)))) AND (((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS INTEGER) ELSE (((('')OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS INTEGER) ELSE (((('')OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS INTEGER) ELSE (((('')OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS INTEGER) ELSE (((('')OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS INTEGER) ELSE (((('')OR(vt0.c0)))OR(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)<=(vt0.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0 IN ()))=(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))==(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0 IN ()))=(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))==(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c0 IN ()))=(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE ((((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, -1582533798)))>=((vt0.c0)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, -1582533798)))>=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, -1582533798)))>=((vt0.c0)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, -1582533798)))>=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, -1582533798)))>=((vt0.c0)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0)))))) ORDER BY (NOT (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0)))))) ORDER BY (NOT (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((((vt0.c0)!=(vt0.c0)))))) ORDER BY (NOT (((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((+ (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((+ (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((+ (((vt0.c0)!=(vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND('Q~'))) AND ((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND('Q~'))) AND ((vt1.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND('Q~'))) AND ((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND('Q~'))) AND ((vt1.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) IS FALSE)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND('Q~'))) AND ((vt1.c0 IN ())))  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 ELSE 0.2932311860558986 END) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('Kr\n') AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, GLOB(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 ELSE 0.2932311860558986 END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('Kr\n') AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, GLOB(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 ELSE 0.2932311860558986 END) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('Kr\n') AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, GLOB(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 ELSE 0.2932311860558986 END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('Kr\n') AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, GLOB(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 ELSE 0.2932311860558986 END) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('Kr\n') AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST, GLOB(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(((x'')!=(vt0.c0)))))OR(((vt0.c0) IS FALSE)))) ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS LAST, highlight((+ (vt0.c0)), ABS(vt0.c0), NULL, (vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((x'')!=(vt0.c0)))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS LAST, highlight((+ (vt0.c0)), ABS(vt0.c0), NULL, (vt0.c0 IN ()))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(((x'')!=(vt0.c0)))))OR(((vt0.c0) IS FALSE)))) ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS LAST, highlight((+ (vt0.c0)), ABS(vt0.c0), NULL, (vt0.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((x'')!=(vt0.c0)))))OR(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY DESC  NULLS LAST, highlight((+ (vt0.c0)), ABS(vt0.c0), NULL, (vt0.c0 IN ()))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL), (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL), (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL), (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL), (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL), (vt0.c0 IN ()), CAST(vt0.c0 AS NUMERIC))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS INTEGER), DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0, vt1 WHERE (LIKELY((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (LIKELY((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((vt1.c0 IN ()))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (LIKELY((vt1.c0 IN ())));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(SQLITE_VERSION())))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((x'')) AND (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))))  NULLS FIRST, x'' ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(SQLITE_VERSION())))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((x'')) AND (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))))  NULLS FIRST, x'' ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(SQLITE_VERSION())))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((x'')) AND (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))))  NULLS FIRST, x'' ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(SQLITE_VERSION())))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((x'')) AND (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))))  NULLS FIRST, x'' ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(SQLITE_VERSION())))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((x'')) AND (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))))  NULLS FIRST, x'' ASC, ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(vt0.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((0.3994148637707823, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN 0.13028344570763795 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((0.3994148637707823, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN 0.13028344570763795 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((0.3994148637707823, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN 0.13028344570763795 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((0.3994148637707823, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN 0.13028344570763795 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((0.3994148637707823, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN 0.13028344570763795 THEN vt0.c0 ELSE vt0.c0 END END);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((x'') BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((x'') BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((x'') BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)<=(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)<=(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)<=(vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0))OR(-186805347)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt1.c0))OR(-186805347))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0))OR(-186805347)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt1.c0))OR(-186805347))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0))OR(-186805347)));
SELECT * FROM vt0 WHERE (((((ABS(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((ABS(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((ABS(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((ABS(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((ABS(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))OR(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN x'f7c3' THEN CASE vt0.c0  WHEN vt0.c0 THEN '1737688428' ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'f7c3' THEN CASE vt0.c0  WHEN vt0.c0 THEN '1737688428' ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN x'f7c3' THEN CASE vt0.c0  WHEN vt0.c0 THEN '1737688428' ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'f7c3' THEN CASE vt0.c0  WHEN vt0.c0 THEN '1737688428' ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN x'f7c3' THEN CASE vt0.c0  WHEN vt0.c0 THEN '1737688428' ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((UNLIKELY(DISTINCT vt0.c0)) IS TRUE);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ABS(vt1.c0) THEN ((vt1.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(vt1.c0) THEN ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ABS(vt1.c0) THEN ((vt1.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(vt1.c0) THEN ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ABS(vt1.c0) THEN ((vt1.c0) IS FALSE) END);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0)))) NOT NULL)) ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0)IS(6.34430926E8)))))OR(SUBSTR(vt1.c0, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0)IS(6.34430926E8)))))OR(SUBSTR(vt1.c0, vt1.c0))) DESC);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0)))) NOT NULL)) ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0)IS(6.34430926E8)))))OR(SUBSTR(vt1.c0, vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))=((vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0)IS(6.34430926E8)))))OR(SUBSTR(vt1.c0, vt1.c0))) DESC);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))==((vt1.c0)))) NOT NULL)) ORDER BY ((((((((((vt1.c0) NOTNULL))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))AND(((vt1.c0)IS(6.34430926E8)))))OR(SUBSTR(vt1.c0, vt1.c0))) DESC;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)|(vt0.c0)), 0.5824962834774386)) ORDER BY (((NOT (vt0.c0)))OR(vt0.c0 COLLATE NOCASE)), ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0)|(vt0.c0)), 0.5824962834774386)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))OR(vt0.c0 COLLATE NOCASE)), ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)|(vt0.c0)), 0.5824962834774386)) ORDER BY (((NOT (vt0.c0)))OR(vt0.c0 COLLATE NOCASE)), ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0)|(vt0.c0)), 0.5824962834774386)) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))OR(vt0.c0 COLLATE NOCASE)), ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(((vt0.c0)|(vt0.c0)), 0.5824962834774386)) ORDER BY (((NOT (vt0.c0)))OR(vt0.c0 COLLATE NOCASE)), ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)GLOB(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'a347');
SELECT SUM(count) FROM (SELECT ((x'a347') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'a347');
SELECT SUM(count) FROM (SELECT ((x'a347') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'a347');
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))OR((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '0.0991978610615536')))))) ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))-(((((vt1.c0)AND(NULL)))OR('1220929360')))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))OR((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '0.0991978610615536')))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))-(((((vt1.c0)AND(NULL)))OR('1220929360')))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))OR((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '0.0991978610615536')))))) ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))-(((((vt1.c0)AND(NULL)))OR('1220929360')))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT NULL))OR((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '0.0991978610615536')))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))-(((((vt1.c0)AND(NULL)))OR('1220929360')))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))OR((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, '0.0991978610615536')))))) ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))-(((((vt1.c0)AND(NULL)))OR('1220929360')))) ASC  NULLS FIRST, ((((vt0.c0) IS TRUE)) IS FALSE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE 'g]' COLLATE RTRIM  WHEN ((vt1.c0) IS FALSE) THEN (- (vt1.c0)) ELSE CASE WHEN NULL THEN vt0.c0 END END) ORDER BY CAST(CASE 0.5976249004844872  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END AS BLOB) DESC, vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'g]' COLLATE RTRIM  WHEN ((vt1.c0) IS FALSE) THEN (- (vt1.c0)) ELSE CASE WHEN NULL THEN vt0.c0 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CASE 0.5976249004844872  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END AS BLOB) DESC, vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE 'g]' COLLATE RTRIM  WHEN ((vt1.c0) IS FALSE) THEN (- (vt1.c0)) ELSE CASE WHEN NULL THEN vt0.c0 END END) ORDER BY CAST(CASE 0.5976249004844872  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END AS BLOB) DESC, vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'g]' COLLATE RTRIM  WHEN ((vt1.c0) IS FALSE) THEN (- (vt1.c0)) ELSE CASE WHEN NULL THEN vt0.c0 END END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CASE 0.5976249004844872  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END AS BLOB) DESC, vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE 'g]' COLLATE RTRIM  WHEN ((vt1.c0) IS FALSE) THEN (- (vt1.c0)) ELSE CASE WHEN NULL THEN vt0.c0 END END) ORDER BY CAST(CASE 0.5976249004844872  WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END AS BLOB) DESC, vt1.c0;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((- (vt0.c0))) AND (0.2640113813964676))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((- (vt0.c0))) AND (0.2640113813964676))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((- (vt0.c0))) AND (0.2640113813964676))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((- (vt0.c0))) AND (0.2640113813964676))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((- (vt0.c0))) AND (0.2640113813964676))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('-1523003870'))) AND (((vt1.c0) NOT NULL)))) ORDER BY CASE vt1.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN '-1000327968' WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN 0.6332738842934403 END END, CASE NULL  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE '-1328532079' END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('-1523003870'))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE vt1.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN '-1000327968' WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN 0.6332738842934403 END END, CASE NULL  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE '-1328532079' END);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('-1523003870'))) AND (((vt1.c0) NOT NULL)))) ORDER BY CASE vt1.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN '-1000327968' WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN 0.6332738842934403 END END, CASE NULL  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE '-1328532079' END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('-1523003870'))) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE vt1.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN '-1000327968' WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN 0.6332738842934403 END END, CASE NULL  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE '-1328532079' END);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND ('-1523003870'))) AND (((vt1.c0) NOT NULL)))) ORDER BY CASE vt1.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN '-1000327968' WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN 0.6332738842934403 END END, CASE NULL  WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE '-1328532079' END;
SELECT COUNT(*) FROM vt1, vt0 WHERE (IFNULL((vt0.c0 IN ()), ((vt0.c0)%(NULL)))) ORDER BY (((0x19649f36, (vt0.c0 IN (vt1.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt0.c0) ISNULL), (((('250532062')AND(vt0.c0)))OR(vt1.c0)), vt0.c0 COLLATE NOCASE))), (~ (SQLITE_SOURCE_ID())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((vt0.c0 IN ()), ((vt0.c0)%(NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((0x19649f36, (vt0.c0 IN (vt1.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt0.c0) ISNULL), (((('250532062')AND(vt0.c0)))OR(vt1.c0)), vt0.c0 COLLATE NOCASE))), (~ (SQLITE_SOURCE_ID())) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (IFNULL((vt0.c0 IN ()), ((vt0.c0)%(NULL)))) ORDER BY (((0x19649f36, (vt0.c0 IN (vt1.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt0.c0) ISNULL), (((('250532062')AND(vt0.c0)))OR(vt1.c0)), vt0.c0 COLLATE NOCASE))), (~ (SQLITE_SOURCE_ID())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((vt0.c0 IN ()), ((vt0.c0)%(NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((0x19649f36, (vt0.c0 IN (vt1.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt0.c0) ISNULL), (((('250532062')AND(vt0.c0)))OR(vt1.c0)), vt0.c0 COLLATE NOCASE))), (~ (SQLITE_SOURCE_ID())) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (IFNULL((vt0.c0 IN ()), ((vt0.c0)%(NULL)))) ORDER BY (((0x19649f36, (vt0.c0 IN (vt1.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<((((vt0.c0) ISNULL), (((('250532062')AND(vt0.c0)))OR(vt1.c0)), vt0.c0 COLLATE NOCASE))), (~ (SQLITE_SOURCE_ID())) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('0.5976249004844872') AND (vt0.c0)))!=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('0.5976249004844872') AND (vt0.c0)))!=(NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('0.5976249004844872') AND (vt0.c0)))!=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('0.5976249004844872') AND (vt0.c0)))!=(NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('0.5976249004844872') AND (vt0.c0)))!=(NULL)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((((((vt0.c0) NOTNULL))AND((vt1.c0 IN ()))))OR(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))AND((vt1.c0 IN ()))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((((((vt0.c0) NOTNULL))AND((vt1.c0 IN ()))))OR(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))AND((vt1.c0 IN ()))))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((((((vt0.c0) NOTNULL))AND((vt1.c0 IN ()))))OR(CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(ROUND(vt0.c0, vt1.c0))) WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.287930062489249))|(TYPEOF(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt1.c0, 0.287930062489249))|(TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(ROUND(vt0.c0, vt1.c0))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(ROUND(vt0.c0, vt1.c0))) WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.287930062489249))|(TYPEOF(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt1.c0, 0.287930062489249))|(TYPEOF(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(ROUND(vt0.c0, vt1.c0))));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(ROUND(vt0.c0, vt1.c0))) WHERE (((LIKELIHOOD(DISTINCT vt1.c0, 0.287930062489249))|(TYPEOF(DISTINCT vt1.c0))));
SELECT * FROM vt1 WHERE ((((('-1210234470')&(vt1.c0)))<=((- (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((('-1210234470')&(vt1.c0)))<=((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC) DESC);
SELECT * FROM vt1 WHERE ((((('-1210234470')&(vt1.c0)))<=((- (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((('-1210234470')&(vt1.c0)))<=((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC) DESC);
SELECT * FROM vt1 WHERE ((((('-1210234470')&(vt1.c0)))<=((- (vt1.c0))))) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0)-(vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0)<=(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)-(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0)<=(vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0)-(vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0)<=(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)-(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0)<=(vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0)-(vt0.c0)) COLLATE NOCASE) ORDER BY ((vt0.c0)<=(vt0.c0))  NULLS LAST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt0.c0, NULL)) ISNULL) WHERE (((((vt1.c0)<=(vt1.c0)))IS NOT(((vt0.c0) BETWEEN (x'') AND (vt1.c0))))) ORDER BY (((vt0.c0)<<(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0)))IS NOT(((vt0.c0) BETWEEN (x'') AND (vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt0.c0, NULL)) ISNULL) ORDER BY (((vt0.c0)<<(vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt0.c0, NULL)) ISNULL) WHERE (((((vt1.c0)<=(vt1.c0)))IS NOT(((vt0.c0) BETWEEN (x'') AND (vt1.c0))))) ORDER BY (((vt0.c0)<<(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt1.c0)))IS NOT(((vt0.c0) BETWEEN (x'') AND (vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt0.c0, NULL)) ISNULL) ORDER BY (((vt0.c0)<<(vt1.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((STRFTIME(vt1.c0, vt0.c0, NULL)) ISNULL) WHERE (((((vt1.c0)<=(vt1.c0)))IS NOT(((vt0.c0) BETWEEN (x'') AND (vt1.c0))))) ORDER BY (((vt0.c0)<<(vt1.c0)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT NULL)) ORDER BY CASE ((((x'')OR(x'')))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN '1176853223' ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((x'')OR(x'')))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN '1176853223' ELSE NULL END DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT NULL)) ORDER BY CASE ((((x'')OR(x'')))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN '1176853223' ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((x'')OR(x'')))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN '1176853223' ELSE NULL END DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT NULL)) ORDER BY CASE ((((x'')OR(x'')))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN '1176853223' ELSE NULL END DESC;
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND (((vt1.c0 IN ()))))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('73604212'))) AS INTEGER) DESC, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('73604212'))) AS INTEGER) DESC, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND (((vt1.c0 IN ()))))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('73604212'))) AS INTEGER) DESC, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('73604212'))) AS INTEGER) DESC, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0)>>(vt0.c0)))) AND (((vt1.c0 IN ()))))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('73604212'))) AS INTEGER) DESC, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (LTRIM((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LTRIM((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LTRIM((vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.22092936E9)))) AND ((CAST(vt0.c0 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.22092936E9)))) AND ((CAST(vt0.c0 AS BLOB)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.22092936E9)))) AND ((CAST(vt0.c0 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.22092936E9)))) AND ((CAST(vt0.c0 AS BLOB)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.22092936E9)))) AND ((CAST(vt0.c0 AS BLOB)))) DESC;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 0.6197020773680817 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0) NOT NULL))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC, ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt1.c0)>>(vt0.c0)))))OR(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))))AND((- (NULL))));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 0.6197020773680817 ORDER BY ((((vt0.c0) NOT NULL))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC, ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt1.c0)>>(vt0.c0)))))OR(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))))AND((- (NULL)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 0.6197020773680817 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0) NOT NULL))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC, ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt1.c0)>>(vt0.c0)))))OR(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))))AND((- (NULL))));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 0.6197020773680817 ORDER BY ((((vt0.c0) NOT NULL))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC, ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt1.c0)>>(vt0.c0)))))OR(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))))AND((- (NULL)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 0.6197020773680817 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0) NOT NULL))GLOB(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) DESC, ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt1.c0)>>(vt0.c0)))))OR(((vt1.c0) IS FALSE))))OR(CAST(vt1.c0 AS BLOB))))AND((- (NULL))));
SELECT ALL * FROM vt0 WHERE (LTRIM(CAST(vt0.c0 AS INTEGER))) ORDER BY (0Xffffffffcc8d8948 IN ()), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)  NULLS FIRST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM(CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY (0xffffffffcc8d8948 IN ()), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)  NULLS FIRST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LTRIM(CAST(vt0.c0 AS INTEGER))) ORDER BY (0Xffffffffcc8d8948 IN ()), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)  NULLS FIRST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM(CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY (0xffffffffcc8d8948 IN ()), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)  NULLS FIRST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LTRIM(CAST(vt0.c0 AS INTEGER))) ORDER BY (0Xffffffffcc8d8948 IN ()), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)  NULLS FIRST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (2.50532062E8) AND (vt1.c0))))) ORDER BY ((((((NULL)&(0.7776182307441882)))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS BLOB))), (((((vt1.c0))<=((vt1.c0)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (2.50532062E8) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((NULL)&(0.7776182307441882)))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS BLOB))), (((((vt1.c0))<=((vt1.c0)))) ISNULL) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (2.50532062E8) AND (vt1.c0))))) ORDER BY ((((((NULL)&(0.7776182307441882)))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS BLOB))), (((((vt1.c0))<=((vt1.c0)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (2.50532062E8) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((NULL)&(0.7776182307441882)))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS BLOB))), (((((vt1.c0))<=((vt1.c0)))) ISNULL) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN (((0.7675639950346078)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)&(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0.6769546645062835 END THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN (((0.7675639950346078)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)&(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0.6769546645062835 END THEN vt1.c0 END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN (((0.7675639950346078)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)&(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0.6769546645062835 END THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN (((0.7675639950346078)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)&(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0.6769546645062835 END THEN vt1.c0 END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN (((0.7675639950346078)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)&(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)) WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE 0.6769546645062835 END THEN vt1.c0 END);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c0 IN ()))OR(LAST_INSERT_ROWID())))AND((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(LAST_INSERT_ROWID())))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c0 IN ()))OR(LAST_INSERT_ROWID())))AND((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN ()))OR(LAST_INSERT_ROWID())))AND((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c0 IN ()))OR(LAST_INSERT_ROWID())))AND((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)<>(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)GLOB(vt1.c0)) WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN 0.13855240316652884 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (- (vt1.c0)) THEN ((vt1.c0)GLOB(vt1.c0)) ELSE NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)!=(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)GLOB(vt1.c0)) WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN 0.13855240316652884 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (- (vt1.c0)) THEN ((vt1.c0)GLOB(vt1.c0)) ELSE NULL END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)<>(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)GLOB(vt1.c0)) WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN 0.13855240316652884 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (- (vt1.c0)) THEN ((vt1.c0)GLOB(vt1.c0)) ELSE NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)!=(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)GLOB(vt1.c0)) WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN 0.13855240316652884 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (- (vt1.c0)) THEN ((vt1.c0)GLOB(vt1.c0)) ELSE NULL END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)<>(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c0)GLOB(vt1.c0)) WHEN ((vt1.c0)+(vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN 0.13855240316652884 THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (- (vt1.c0)) THEN ((vt1.c0)GLOB(vt1.c0)) ELSE NULL END ASC  NULLS FIRST;
SELECT * FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) ISNULL) WHERE (vt1.c0) ORDER BY (((vt0.c0)>>(vt1.c0)) IN (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) ISNULL) ORDER BY (((vt0.c0)>>(vt1.c0)) IN (''))  NULLS LAST);
SELECT * FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) ISNULL) WHERE (vt1.c0) ORDER BY (((vt0.c0)>>(vt1.c0)) IN (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) ISNULL) ORDER BY (((vt0.c0)>>(vt1.c0)) IN (''))  NULLS LAST);
SELECT * FROM vt1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) ISNULL) WHERE (vt1.c0) ORDER BY (((vt0.c0)>>(vt1.c0)) IN (''))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), ((vt1.c0) NOTNULL)))!=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0))==((vt1.c0))), ((vt1.c0) IS TRUE))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<=(vt1.c0)) DESC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), ((vt1.c0) NOTNULL)))!=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0))==((vt1.c0))), ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<=(vt1.c0)) DESC, vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), ((vt1.c0) NOTNULL)))!=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0))==((vt1.c0))), ((vt1.c0) IS TRUE))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<=(vt1.c0)) DESC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), ((vt1.c0) NOTNULL)))!=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0))==((vt1.c0))), ((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<=(vt1.c0)) DESC, vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), ((vt1.c0) NOTNULL)))!=((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0))==((vt1.c0))), ((vt1.c0) IS TRUE))))) ORDER BY (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ())  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)<=(vt1.c0)) DESC, vt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)<>(vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<>(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)<>(vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<>(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL)<>(vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (LOWER(NULL)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT) DESC, ((vt0.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT) DESC, ((vt0.c0) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(NULL)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT) DESC, ((vt0.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT) DESC, ((vt0.c0) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(NULL)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT) DESC, ((vt0.c0) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt0.c0 IN ())) IS FALSE) WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) ORDER BY ((((((((IFNULL(DISTINCT vt1.c0, vt0.c0))OR(UPPER(DISTINCT vt0.c0))))AND((- ('-1240681032')))))OR(vt1.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0 IN ())) IS FALSE) ORDER BY ((((((((IFNULL(DISTINCT vt1.c0, vt0.c0))OR(UPPER(DISTINCT vt0.c0))))AND((- ('-1240681032')))))OR(vt1.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt0.c0 IN ())) IS FALSE) WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) ORDER BY ((((((((IFNULL(DISTINCT vt1.c0, vt0.c0))OR(UPPER(DISTINCT vt0.c0))))AND((- ('-1240681032')))))OR(vt1.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt0.c0 IN ())) IS FALSE) ORDER BY ((((((((IFNULL(DISTINCT vt1.c0, vt0.c0))OR(UPPER(DISTINCT vt0.c0))))AND((- ('-1240681032')))))OR(vt1.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt0.c0 IN ())) IS FALSE) WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT NULL)) ORDER BY ((((((((IFNULL(DISTINCT vt1.c0, vt0.c0))OR(UPPER(DISTINCT vt0.c0))))AND((- ('-1240681032')))))OR(vt1.c0)))OR((vt1.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(x'')))AND(CASE WHEN 0.5144236120996218 THEN vt0.c0 END)))OR(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(x'')))AND(CASE WHEN 0.5144236120996218 THEN vt0.c0 END)))OR(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(x'')))AND(CASE WHEN 0.5144236120996218 THEN vt0.c0 END)))OR(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(x'')))AND(CASE WHEN 0.5144236120996218 THEN vt0.c0 END)))OR(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(x'')))AND(CASE WHEN 0.5144236120996218 THEN vt0.c0 END)))OR(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)/(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (('--/' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('--/' IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (('--/' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('--/' IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (('--/' IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN 'o' WHEN vt0.c0 THEN vt0.c0 END) AND (0x5072ad35)), ((((vt1.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN 'o' WHEN vt0.c0 THEN vt0.c0 END) AND (0X5072ad35)), ((((vt1.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN 'o' WHEN vt0.c0 THEN vt0.c0 END) AND (0x5072ad35)), ((((vt1.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN 'o' WHEN vt0.c0 THEN vt0.c0 END) AND (0X5072ad35)), ((((vt1.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0) ISNULL) IN ())) ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN 'o' WHEN vt0.c0 THEN vt0.c0 END) AND (0x5072ad35)), ((((vt1.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))||(CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0 COLLATE NOCASE ASC, ((-503009437) NOTNULL) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))||(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE ASC, ((-503009437) NOTNULL) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))||(CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0 COLLATE NOCASE ASC, ((-503009437) NOTNULL) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))||(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE ASC, ((-503009437) NOTNULL) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))||(CAST(vt0.c0 AS BLOB)))) ORDER BY vt0.c0 COLLATE NOCASE ASC, ((-503009437) NOTNULL) ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM;
SELECT ALL * FROM vt1, vt0 WHERE ((+ (((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((+ (((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((+ (((vt0.c0)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0)||(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((vt0.c0))))) AND (((('250532062')LIKE(vt0.c0)))))  NULLS LAST, CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END ASC, ((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((vt0.c0))))) AND (((('250532062')LIKE(vt0.c0)))))  NULLS LAST, CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END ASC, ((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0)||(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((vt0.c0))))) AND (((('250532062')LIKE(vt0.c0)))))  NULLS LAST, CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END ASC, ((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((vt0.c0))))) AND (((('250532062')LIKE(vt0.c0)))))  NULLS LAST, CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END ASC, ((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0)||(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((vt0.c0))))) AND (((('250532062')LIKE(vt0.c0)))))  NULLS LAST, CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE RTRIM ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END ASC, ((vt0.c0)LIKE(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0))>((vt1.c0)))))==((vt1.c0))) WHERE ((((NOT (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff82b55ee9 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0))>((vt1.c0)))))==((vt1.c0))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff82b55ee9 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0))>((vt1.c0)))))==((vt1.c0))) WHERE ((((NOT (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff82b55ee9 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0))>((vt1.c0)))))==((vt1.c0))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff82b55ee9 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c0))>((vt1.c0)))))==((vt1.c0))) WHERE ((((NOT (vt0.c0)))>=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffff82b55ee9 END COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN HEX(vt0.c0) WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN HEX(vt0.c0) WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) END  NULLS LAST);
SELECT * FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN HEX(vt0.c0) WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN HEX(vt0.c0) WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) END  NULLS LAST);
SELECT * FROM vt0 WHERE ((~ ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN HEX(vt0.c0) WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) WHEN (~ (vt0.c0)) THEN UNLIKELY(DISTINCT vt0.c0) END  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (('RBwC') BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)<(vt0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (('RBwC') BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)<(vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (('RBwC') BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)<(vt0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (('RBwC') BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)<(vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (('RBwC') BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)<(vt0.c0)))) WHERE (vt1.c0);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0 IN (vt1.c0)), vt1.c0, ((vt1.c0)&(vt0.c0))))>((LIKELIHOOD(vt1.c0, 0.2868089208720559), CASE WHEN vt1.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY))) WHERE ((((vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0 IN (vt1.c0)), vt1.c0, ((vt1.c0)&(vt0.c0))))>((LIKELIHOOD(vt1.c0, 0.2868089208720559), CASE WHEN vt1.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0 IN (vt1.c0)), vt1.c0, ((vt1.c0)&(vt0.c0))))>((LIKELIHOOD(vt1.c0, 0.2868089208720559), CASE WHEN vt1.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY))) WHERE ((((vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((vt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0 IN (vt1.c0)), vt1.c0, ((vt1.c0)&(vt0.c0))))>((LIKELIHOOD(vt1.c0, 0.2868089208720559), CASE WHEN vt1.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0 IN (vt1.c0)), vt1.c0, ((vt1.c0)&(vt0.c0))))>((LIKELIHOOD(vt1.c0, 0.2868089208720559), CASE WHEN vt1.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY))) WHERE ((((vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((vt1.c0 COLLATE NOCASE))));
SELECT * FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)/(vt0.c0)) IN ())) ORDER BY (COALESCE(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((NULL)/(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (COALESCE(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)/(vt0.c0)) IN ())) ORDER BY (COALESCE(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((NULL)/(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (COALESCE(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((NULL)/(vt0.c0)) IN ())) ORDER BY (COALESCE(DISTINCT vt0.c0, vt0.c0) IN (((vt0.c0) NOTNULL), (vt0.c0 IN (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0))>=((vt0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0))>=((vt0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0))>=((vt0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0))>=((vt0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((vt0.c0))>=((vt0.c0))))OR(((vt0.c0)OR(vt0.c0)))))OR((~ (vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT CAST(vt1.c0 AS INTEGER), 0.4056208903276374));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(vt1.c0 AS INTEGER), 0.4056208903276374)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT CAST(vt1.c0 AS INTEGER), 0.4056208903276374));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(vt1.c0 AS INTEGER), 0.4056208903276374)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT CAST(vt1.c0 AS INTEGER), 0.4056208903276374));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE ((0X25d0a5ce)|(vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY vt0.c0 DESC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0X25d0a5ce)|(vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt0.c0 DESC, vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE ((0X25d0a5ce)|(vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY vt0.c0 DESC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0X25d0a5ce)|(vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY vt0.c0 DESC, vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE ((0X25d0a5ce)|(vt1.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) ORDER BY vt0.c0 DESC, vt1.c0  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)IS(vt0.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY x'350c'  NULLS LAST, LIKELY(DISTINCT CASE vt1.c0  WHEN NULL THEN 'q~' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'350c'  NULLS LAST, LIKELY(DISTINCT CASE vt1.c0  WHEN NULL THEN 'q~' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)IS(vt0.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY x'350c'  NULLS LAST, LIKELY(DISTINCT CASE vt1.c0  WHEN NULL THEN 'q~' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'350c'  NULLS LAST, LIKELY(DISTINCT CASE vt1.c0  WHEN NULL THEN 'q~' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)IS(vt0.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY x'350c'  NULLS LAST, LIKELY(DISTINCT CASE vt1.c0  WHEN NULL THEN 'q~' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))<(((x'')!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0)))<(((x'')!=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))<(((x'')!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0)))<(((x'')!=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))<(((x'')!=(vt1.c0)))));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0))) NOT NULL));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) NOTNULL));
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY)GLOB(LTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)GLOB(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY)GLOB(LTRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)GLOB(LTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY)GLOB(LTRIM(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&((('㍜u^') NOTNULL))) WHERE ((((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt1.c0)%(vt0.c0))))) ORDER BY ((NULL)>(((x'10e6')<=(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt1.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&((('㍜u^') NOTNULL))) ORDER BY ((NULL)>(((x'10e6')<=(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&((('㍜u^') NOTNULL))) WHERE ((((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt1.c0)%(vt0.c0))))) ORDER BY ((NULL)>(((x'10e6')<=(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt1.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&((('㍜u^') NOTNULL))) ORDER BY ((NULL)>(((x'10e6')<=(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((vt0.c0)&((('㍜u^') NOTNULL))) WHERE ((((((vt1.c0))>=((vt0.c0)))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt1.c0)%(vt0.c0))))) ORDER BY ((NULL)>(((x'10e6')<=(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY CHAR(json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 ORDER BY CHAR(json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) ASC);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY CHAR(json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 ORDER BY CHAR(json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) ASC);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY CHAR(json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((CAST(vt0.c0 AS REAL)))!=((((vt0.c0)>=(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS REAL)))!=((((vt0.c0)>=(vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((CAST(vt0.c0 AS REAL)))!=((((vt0.c0)>=(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS REAL)))!=((((vt0.c0)>=(vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((CAST(vt0.c0 AS REAL)))!=((((vt0.c0)>=(vt0.c0))))) ASC;
SELECT * FROM vt1, vt0 WHERE (0.49974840628269557) ORDER BY ((((('1144596093')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))<<(CASE WHEN '6膵K-梻Ypo' THEN vt0.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.49974840628269557) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((('1144596093')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))<<(CASE WHEN '6膵K-梻Ypo' THEN vt0.c0 ELSE vt1.c0 END)) ASC);
SELECT * FROM vt1, vt0 WHERE (0.49974840628269557) ORDER BY ((((('1144596093')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))<<(CASE WHEN '6膵K-梻Ypo' THEN vt0.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.49974840628269557) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((('1144596093')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))<<(CASE WHEN '6膵K-梻Ypo' THEN vt0.c0 ELSE vt1.c0 END)) ASC);
SELECT * FROM vt1, vt0 WHERE (0.49974840628269557) ORDER BY ((((('1144596093')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))<<(CASE WHEN '6膵K-梻Ypo' THEN vt0.c0 ELSE vt1.c0 END)) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY (((((vt1.c0)) BETWEEN (('323634138')) AND ((vt1.c0)))) ISNULL)  NULLS LAST, CAST(load_extension(vt1.c0, vt1.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN (('323634138')) AND ((vt1.c0)))) ISNULL)  NULLS LAST, CAST(load_extension(vt1.c0, vt1.c0) AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY (((((vt1.c0)) BETWEEN (('323634138')) AND ((vt1.c0)))) ISNULL)  NULLS LAST, CAST(load_extension(vt1.c0, vt1.c0) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN (('323634138')) AND ((vt1.c0)))) ISNULL)  NULLS LAST, CAST(load_extension(vt1.c0, vt1.c0) AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) ORDER BY (((((vt1.c0)) BETWEEN (('323634138')) AND ((vt1.c0)))) ISNULL)  NULLS LAST, CAST(load_extension(vt1.c0, vt1.c0) AS BLOB);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN NULL END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN NULL END) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN NULL END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN NULL END) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN NULL END) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ('1737688428') ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1737688428') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('1737688428') ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1737688428') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('1737688428') ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LTRIM(0Xffffffffa479e9ab)) ORDER BY TRIM(DISTINCT (((vt1.c0))>((vt0.c0)))) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((LTRIM(0xffffffffa479e9ab)) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM(DISTINCT (((vt1.c0))>((vt0.c0)))) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LTRIM(0Xffffffffa479e9ab)) ORDER BY TRIM(DISTINCT (((vt1.c0))>((vt0.c0)))) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((LTRIM(0xffffffffa479e9ab)) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM(DISTINCT (((vt1.c0))>((vt0.c0)))) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LTRIM(0Xffffffffa479e9ab)) ORDER BY TRIM(DISTINCT (((vt1.c0))>((vt0.c0)))) ASC  NULLS FIRST, ((vt0.c0 IN ()) IN ());
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')OR(vt0.c0)))AND(0.7706091120448613))))>((((vt0.c0) ISNULL), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((vt0.c0)||(vt0.c0))))>=(((~ (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')OR(vt0.c0)))AND(0.7706091120448613))))>((((vt0.c0) ISNULL), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)||(vt0.c0))))>=(((~ (vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')OR(vt0.c0)))AND(0.7706091120448613))))>((((vt0.c0) ISNULL), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((vt0.c0)||(vt0.c0))))>=(((~ (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')OR(vt0.c0)))AND(0.7706091120448613))))>((((vt0.c0) ISNULL), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)||(vt0.c0))))>=(((~ (vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((x'')OR(vt0.c0)))AND(0.7706091120448613))))>((((vt0.c0) ISNULL), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((vt0.c0)||(vt0.c0))))>=(((~ (vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE ((((NOT (vt0.c0)))|(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))|(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE ((((NOT (vt0.c0)))|(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))|(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE ((((NOT (vt0.c0)))|(CAST(vt1.c0 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS FALSE))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) NOTNULL)))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN CAST(vt0.c0 AS BLOB) THEN NULL END;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN (vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))=((vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (vt0.c0));
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)>(vt0.c0)) THEN ((vt0.c0) NOTNULL) END) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)>(vt0.c0)) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)>(vt0.c0)) THEN ((vt0.c0) NOTNULL) END) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)>(vt0.c0)) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)>(vt0.c0)) THEN ((vt0.c0) NOTNULL) END) ORDER BY vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(NULL)))OR(vt0.c0)))<('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))<(''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(NULL)))OR(vt0.c0)))<('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))<(''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(NULL)))OR(vt0.c0)))<('')));
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT '')) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT '')) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT '')) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT '')) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT '')) ORDER BY vt0.c0  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))-(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)<=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))-(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)<=(vt0.c0)));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))-(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)<=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))-(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)<=(vt0.c0)));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))-(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM, ((CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)<=(vt0.c0));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)))) AND ((vt1.c0, ((vt0.c0)<=(vt1.c0)), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))) ORDER BY 0.4806165161945388 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)))) AND ((vt1.c0, ((vt0.c0)<=(vt1.c0)), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.4806165161945388 DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)))) AND ((vt1.c0, ((vt0.c0)<=(vt1.c0)), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))) ORDER BY 0.4806165161945388 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)))) AND ((vt1.c0, ((vt0.c0)<=(vt1.c0)), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.4806165161945388 DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)))) AND ((vt1.c0, ((vt0.c0)<=(vt1.c0)), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))) ORDER BY 0.4806165161945388 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)|((('? ') IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)|((('? ') IS TRUE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)|((('? ') IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)|((('? ') IS TRUE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM)|((('? ') IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0))))>(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>((vt1.c0))))>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0))))>(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>((vt1.c0))))>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0))))>(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (ROUND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (ROUND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (ROUND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))!=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))<>(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))!=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))<>(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))!=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (((((183747137) NOT BETWEEN (0.5018151655203817) AND (vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((183747137) NOT BETWEEN (0.5018151655203817) AND (vt0.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((183747137) NOT BETWEEN (0.5018151655203817) AND (vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((183747137) NOT BETWEEN (0.5018151655203817) AND (vt0.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((183747137) NOT BETWEEN (0.5018151655203817) AND (vt0.c0)))AND(vt0.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (HEX(DISTINCT ((vt0.c0) ISNULL))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1 WHERE (HEX(DISTINCT ((vt0.c0) ISNULL))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1 WHERE (HEX(DISTINCT ((vt0.c0) ISNULL))) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, -2002418020))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((-4.32131236E8)-(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, -2002418020))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((-4.32131236E8)-(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, -2002418020))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((-4.32131236E8)-(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, -2002418020))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((-4.32131236E8)-(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, -2002418020))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((-4.32131236E8)-(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (''))) ORDER BY ((vt0.c0 COLLATE BINARY)LIKE((((vt0.c0)) BETWEEN ((0.9531709574823273)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (''))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)LIKE((((vt0.c0)) BETWEEN ((0.9531709574823273)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (''))) ORDER BY ((vt0.c0 COLLATE BINARY)LIKE((((vt0.c0)) BETWEEN ((0.9531709574823273)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (''))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)LIKE((((vt0.c0)) BETWEEN ((0.9531709574823273)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (''))) ORDER BY ((vt0.c0 COLLATE BINARY)LIKE((((vt0.c0)) BETWEEN ((0.9531709574823273)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (1678413125)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (1678413125)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (1678413125)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (1678413125)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (1678413125)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<<(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<<(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<<(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<<(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<<(CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)<=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.15595235116073602) COLLATE NOCASE) ORDER BY (((+ (vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt0.c0, 0.15595235116073602) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.15595235116073602) COLLATE NOCASE) ORDER BY (((+ (vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt0.c0, 0.15595235116073602) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT vt0.c0, 0.15595235116073602) COLLATE NOCASE) ORDER BY (((+ (vt0.c0))) NOTNULL) DESC;
SELECT COUNT(*) FROM vt1 WHERE (SUBSTR(CAST(vt1.c0 AS INTEGER), (NOT (NULL)))) ORDER BY '}' DESC;
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(vt1.c0 AS INTEGER), (NOT (NULL)))) IS TRUE)  as count FROM vt1 ORDER BY '}' DESC);
SELECT COUNT(*) FROM vt1 WHERE (SUBSTR(CAST(vt1.c0 AS INTEGER), (NOT (NULL)))) ORDER BY '}' DESC;
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(vt1.c0 AS INTEGER), (NOT (NULL)))) IS TRUE)  as count FROM vt1 ORDER BY '}' DESC);
SELECT COUNT(*) FROM vt1 WHERE (SUBSTR(CAST(vt1.c0 AS INTEGER), (NOT (NULL)))) ORDER BY '}' DESC;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS INTEGER) WHERE (((((((((((vt1.c0)<>(vt0.c0)))AND(NULL)))AND((((vt0.c0))!=((vt1.c0))))))AND((vt0.c0 IN (vt1.c0)))))OR((+ (vt1.c0))))) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((((vt1.c0)OR(CASE WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN (('7|sM#')) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))OR((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)<>(vt0.c0)))AND(NULL)))AND((((vt0.c0))!=((vt1.c0))))))AND((vt0.c0 IN (vt1.c0)))))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((((vt1.c0)OR(CASE WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN (('7|sM#')) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))OR((~ (vt1.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS INTEGER) WHERE (((((((((((vt1.c0)<>(vt0.c0)))AND(NULL)))AND((((vt0.c0))!=((vt1.c0))))))AND((vt0.c0 IN (vt1.c0)))))OR((+ (vt1.c0))))) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((((vt1.c0)OR(CASE WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN (('7|sM#')) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))OR((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)<>(vt0.c0)))AND(NULL)))AND((((vt0.c0))!=((vt1.c0))))))AND((vt0.c0 IN (vt1.c0)))))OR((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((((vt1.c0)OR(CASE WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN (('7|sM#')) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))OR((~ (vt1.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 COLLATE RTRIM AS INTEGER) WHERE (((((((((((vt1.c0)<>(vt0.c0)))AND(NULL)))AND((((vt0.c0))!=((vt1.c0))))))AND((vt0.c0 IN (vt1.c0)))))OR((+ (vt1.c0))))) ORDER BY (+ (vt0.c0 COLLATE NOCASE))  NULLS LAST, ((((((((vt1.c0)OR(CASE WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)))OR((((vt0.c0)) NOT BETWEEN (('7|sM#')) AND ((vt1.c0))))))AND(CAST(vt1.c0 AS INTEGER))))OR((~ (vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE))/(vt1.c0))) ORDER BY ((0.46901551535536523)>=(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE))/(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((0.46901551535536523)>=(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE))/(vt1.c0))) ORDER BY ((0.46901551535536523)>=(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE))/(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((0.46901551535536523)>=(NULL))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE))/(vt1.c0))) ORDER BY ((0.46901551535536523)>=(NULL))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((LENGTH(vt0.c0)))<((((vt1.c0)IS(vt0.c0)))))) ORDER BY (CAST(vt1.c0 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((LENGTH(vt0.c0)))<((((vt1.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CAST(vt1.c0 AS TEXT) IN ()) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((LENGTH(vt0.c0)))<((((vt1.c0)IS(vt0.c0)))))) ORDER BY (CAST(vt1.c0 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((LENGTH(vt0.c0)))<((((vt1.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CAST(vt1.c0 AS TEXT) IN ()) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((LENGTH(vt0.c0)))<((((vt1.c0)IS(vt0.c0)))))) ORDER BY (CAST(vt1.c0 AS TEXT) IN ()) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('a[''P+' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('a[''P+' COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('a[''P+' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('a[''P+' COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('a[''P+' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c0)!=(vt0.c0)))) ORDER BY (((((vt0.c0))=((vt0.c0)))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0)OR(vt0.c0))) ISNULL)  NULLS LAST, ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) IN (UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0)!=(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))=((vt0.c0)))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0)OR(vt0.c0))) ISNULL)  NULLS LAST, ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) IN (UNLIKELY(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c0)!=(vt0.c0)))) ORDER BY (((((vt0.c0))=((vt0.c0)))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0)OR(vt0.c0))) ISNULL)  NULLS LAST, ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) IN (UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0)!=(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))=((vt0.c0)))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0)OR(vt0.c0))) ISNULL)  NULLS LAST, ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) IN (UNLIKELY(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c0)!=(vt0.c0)))) ORDER BY (((((vt0.c0))=((vt0.c0)))) IS TRUE) DESC  NULLS FIRST, ((((vt0.c0)OR(vt0.c0))) ISNULL)  NULLS LAST, ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) IN (UNLIKELY(vt0.c0)));
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL))|(1.737688428E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))|(1.737688428E9))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL))|(1.737688428E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))|(1.737688428E9))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) ISNULL))|(1.737688428E9)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0))<>((vt1.c0))) IN (((vt1.c0) NOT BETWEEN (0xffffffffb60cb5b8) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))!=((vt1.c0))) IN (((vt1.c0) NOT BETWEEN (0xffffffffb60cb5b8) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0))<>((vt1.c0))) IN (((vt1.c0) NOT BETWEEN (0xffffffffb60cb5b8) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))!=((vt1.c0))) IN (((vt1.c0) NOT BETWEEN (0xffffffffb60cb5b8) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0))<>((vt1.c0))) IN (((vt1.c0) NOT BETWEEN (0xffffffffb60cb5b8) AND (vt1.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((((((vt1.c0))>=((vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND((('0.21316012631413073')AND(vt1.c0)))) WHERE (vt0.c0) ORDER BY DATETIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((((vt1.c0))>=((vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND((('0.21316012631413073')AND(vt1.c0)))) ORDER BY DATETIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((((((vt1.c0))>=((vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND((('0.21316012631413073')AND(vt1.c0)))) WHERE (vt0.c0) ORDER BY DATETIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((((vt1.c0))>=((vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND((('0.21316012631413073')AND(vt1.c0)))) ORDER BY DATETIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((((((vt1.c0))>=((vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND((('0.21316012631413073')AND(vt1.c0)))) WHERE (vt0.c0) ORDER BY DATETIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), vt0.c0 COLLATE BINARY) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((NULL IN ())))) ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(0.4210552456776182)))AND(vt0.c0)))OR(vt0.c0)) END ASC  NULLS FIRST, CASE vt0.c0  WHEN 0.87224890264231 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT (((+ ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(0.4210552456776182)))AND(vt0.c0)))OR(vt0.c0)) END ASC  NULLS FIRST, CASE vt0.c0  WHEN 0.87224890264231 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((NULL IN ())))) ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(0.4210552456776182)))AND(vt0.c0)))OR(vt0.c0)) END ASC  NULLS FIRST, CASE vt0.c0  WHEN 0.87224890264231 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END;
SELECT SUM(count) FROM (SELECT (((+ ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(0.4210552456776182)))AND(vt0.c0)))OR(vt0.c0)) END ASC  NULLS FIRST, CASE vt0.c0  WHEN 0.87224890264231 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ ((NULL IN ())))) ORDER BY CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN ((((((((vt0.c0)AND(vt0.c0)))OR(0.4210552456776182)))AND(vt0.c0)))OR(vt0.c0)) END ASC  NULLS FIRST, CASE vt0.c0  WHEN 0.87224890264231 COLLATE NOCASE THEN ((vt0.c0) ISNULL) END;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE NOCASE WHERE (load_extension(((vt1.c0)OR(vt0.c0)), vt1.c0 COLLATE BINARY)) ORDER BY CAST(((vt0.c0)>=(vt0.c0)) AS REAL) ASC  NULLS LAST, vt1.c0 DESC  NULLS LAST, ((~ (vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((vt1.c0)OR(vt0.c0)), vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE NOCASE ORDER BY CAST(((vt0.c0)>=(vt0.c0)) AS REAL) ASC  NULLS LAST, vt1.c0 DESC  NULLS LAST, ((~ (vt1.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE NOCASE WHERE (load_extension(((vt1.c0)OR(vt0.c0)), vt1.c0 COLLATE BINARY)) ORDER BY CAST(((vt0.c0)>=(vt0.c0)) AS REAL) ASC  NULLS LAST, vt1.c0 DESC  NULLS LAST, ((~ (vt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((vt1.c0)OR(vt0.c0)), vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (vt1.c0 IN ()) COLLATE NOCASE ORDER BY CAST(((vt0.c0)>=(vt0.c0)) AS REAL) ASC  NULLS LAST, vt1.c0 DESC  NULLS LAST, ((~ (vt1.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((TRIM(DISTINCT vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((TRIM(DISTINCT vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((TRIM(DISTINCT vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((TRIM(DISTINCT vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((TRIM(DISTINCT vt1.c0, vt1.c0)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON '+2뵎p/Ckn' WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) BETWEEN (((vt0.c0)!=(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY x'4494' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) BETWEEN (((vt0.c0)<>(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '+2뵎p/Ckn' ORDER BY x'4494' DESC  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON '+2뵎p/Ckn' WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) BETWEEN (((vt0.c0)!=(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY x'4494' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) BETWEEN (((vt0.c0)<>(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON '+2뵎p/Ckn' ORDER BY x'4494' DESC  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON '+2뵎p/Ckn' WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) BETWEEN (((vt0.c0)!=(vt1.c0))) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY x'4494' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE '1092349787'  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1092349787'  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE '1092349787'  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '1092349787'  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE '1092349787'  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.34000080482164474)))) AND (((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.34000080482164474)))) AND (((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.34000080482164474)))) AND (((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.34000080482164474)))) AND (((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.34000080482164474)))) AND (((((((((vt0.c0)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((((vt0.c0)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CAST(NULL AS TEXT))))AND((('e\r') BETWEEN (0x2024b85d) AND (vt0.c0)))) WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)%(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)%(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((((vt0.c0)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CAST(NULL AS TEXT))))AND((('e\r') BETWEEN (0x2024b85d) AND (vt0.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((((vt0.c0)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CAST(NULL AS TEXT))))AND((('e\r') BETWEEN (0x2024b85d) AND (vt0.c0)))) WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)%(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)%(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((((vt0.c0)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CAST(NULL AS TEXT))))AND((('e\r') BETWEEN (0x2024b85d) AND (vt0.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((((vt0.c0)AND(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END)))AND(CAST(vt0.c0 AS INTEGER))))OR(CAST(NULL AS TEXT))))AND((('e\r') BETWEEN (0x2024b85d) AND (vt0.c0)))) WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0)%(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))LIKE(vt0.c0))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)), 0.5084346448611031) WHERE (TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)), 0.5084346448611031));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)), 0.5084346448611031) WHERE (TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)), 0.5084346448611031));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON LIKELIHOOD(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)), 0.5084346448611031) WHERE (TRIM(DISTINCT ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))));
SELECT * FROM vt0, vt1 WHERE ((~ (((x'')>>(vt0.c0))))) ORDER BY ((((((vt1.c0) IS TRUE))AND(CAST(vt1.c0 AS INTEGER))))OR(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'')>>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c0) IS TRUE))AND(CAST(vt1.c0 AS INTEGER))))OR(CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0, vt1 WHERE ((~ (((x'')>>(vt0.c0))))) ORDER BY ((((((vt1.c0) IS TRUE))AND(CAST(vt1.c0 AS INTEGER))))OR(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'')>>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c0) IS TRUE))AND(CAST(vt1.c0 AS INTEGER))))OR(CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0, vt1 WHERE ((~ (((x'')>>(vt0.c0))))) ORDER BY ((((((vt1.c0) IS TRUE))AND(CAST(vt1.c0 AS INTEGER))))OR(CAST(vt0.c0 AS REAL)));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0)))>(((vt1.c0) BETWEEN (vt1.c0) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0)))>(((vt1.c0) BETWEEN (vt1.c0) AND (x''))))  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0)))>(((vt1.c0) BETWEEN (vt1.c0) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0)))>(((vt1.c0) BETWEEN (vt1.c0) AND (x''))))  NULLS LAST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL)) ORDER BY (((vt1.c0 IN (vt1.c0, vt1.c0)))>(((vt1.c0) BETWEEN (vt1.c0) AND (x''))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) WHERE (CASE TRIM(DISTINCT '452269256', vt0.c0)  WHEN HEX(DISTINCT vt1.c0) THEN LOWER(vt1.c0) END) ORDER BY TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT '452269256', vt0.c0)  WHEN HEX(DISTINCT vt1.c0) THEN LOWER(vt1.c0) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) ORDER BY TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) WHERE (CASE TRIM(DISTINCT '452269256', vt0.c0)  WHEN HEX(DISTINCT vt1.c0) THEN LOWER(vt1.c0) END) ORDER BY TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT '452269256', vt0.c0)  WHEN HEX(DISTINCT vt1.c0) THEN LOWER(vt1.c0) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) ORDER BY TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB)));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt1.c0 AS REAL) WHERE (CASE TRIM(DISTINCT '452269256', vt0.c0)  WHEN HEX(DISTINCT vt1.c0) THEN LOWER(vt1.c0) END) ORDER BY TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS BLOB));
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CASE ((vt0.c0) IS FALSE)  WHEN ((NULL) NOTNULL) THEN vt0.c0 WHEN ABS(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (x'' IN (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END, ((vt0.c0)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) IS FALSE)  WHEN ((NULL) NOTNULL) THEN vt0.c0 WHEN ABS(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (x'' IN (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END, ((vt0.c0)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CASE ((vt0.c0) IS FALSE)  WHEN ((NULL) NOTNULL) THEN vt0.c0 WHEN ABS(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (x'' IN (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END, ((vt0.c0)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) IS FALSE)  WHEN ((NULL) NOTNULL) THEN vt0.c0 WHEN ABS(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (x'' IN (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END, ((vt0.c0)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY CASE ((vt0.c0) IS FALSE)  WHEN ((NULL) NOTNULL) THEN vt0.c0 WHEN ABS(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (x'' IN (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END, ((vt0.c0)>>(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))IS NOT((+ (vt1.c0))))) ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC  NULLS LAST, (((vt1.c0 IN ())) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))IS NOT((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC  NULLS LAST, (((vt1.c0 IN ())) NOT NULL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))IS NOT((+ (vt1.c0))))) ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC  NULLS LAST, (((vt1.c0 IN ())) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))IS NOT((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC  NULLS LAST, (((vt1.c0 IN ())) NOT NULL) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))IS NOT((+ (vt1.c0))))) ORDER BY CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) ASC  NULLS LAST, (((vt1.c0 IN ())) NOT NULL) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(TOTAL_CHANGES())))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND('EkN')))))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(TOTAL_CHANGES())))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND('EkN')))))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(TOTAL_CHANGES())))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND('EkN')))))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(TOTAL_CHANGES())))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND('EkN')))))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((((((((vt1.c0 COLLATE BINARY)AND(TOTAL_CHANGES())))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND('EkN')))))OR(vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (266809708) ORDER BY ((((vt1.c0)%(vt1.c0)))<((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((266809708) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)%(vt1.c0)))<((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (266809708) ORDER BY ((((vt1.c0)%(vt1.c0)))<((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((266809708) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)%(vt1.c0)))<((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (266809708) ORDER BY ((((vt1.c0)%(vt1.c0)))<((vt0.c0 IN ())));
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT NULL))))) ORDER BY UPPER(DISTINCT ((vt1.c0)GLOB(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY UPPER(DISTINCT ((vt1.c0)GLOB(vt0.c0)))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT NULL))))) ORDER BY UPPER(DISTINCT ((vt1.c0)GLOB(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY UPPER(DISTINCT ((vt1.c0)GLOB(vt0.c0)))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT NULL))))) ORDER BY UPPER(DISTINCT ((vt1.c0)GLOB(vt0.c0)))  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)OR(CAST(vt1.c0 AS TEXT))) WHERE ((((((vt1.c0))<((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)OR(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)OR(CAST(vt1.c0 AS TEXT))) WHERE ((((((vt1.c0))<((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)OR(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)OR(CAST(vt1.c0 AS TEXT))) WHERE ((((((vt1.c0))<((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT * FROM vt1 WHERE (LIKELY(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (LIKELY(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (LIKELY(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((('1678413125')) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt1.c0) BETWEEN (x'') AND ('250532062')))))) ORDER BY 1737688428 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('1678413125')) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt1.c0) BETWEEN (x'') AND ('250532062')))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 1737688428 DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((('1678413125')) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt1.c0) BETWEEN (x'') AND ('250532062')))))) ORDER BY 1737688428 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('1678413125')) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt1.c0) BETWEEN (x'') AND ('250532062')))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 1737688428 DESC);
SELECT * FROM vt0 WHERE (CASE WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ('_IvT' IN (0.24059692303461055)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ('_IvT' IN (0.24059692303461055)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ('_IvT' IN (0.24059692303461055)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ('_IvT' IN (0.24059692303461055)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ('_IvT' IN (0.24059692303461055)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) ISNULL) END);
SELECT ALL * FROM vt1 WHERE (CASE (+ (NULL))  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN HEX(vt1.c0) ELSE ((vt1.c0) NOTNULL) END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)||(vt1.c0)), ((vt1.c0)<=(vt1.c0)), (NOT (vt1.c0)), ((vt1.c0) NOT NULL))) AND ((ABS(-1400111086), ((x'') BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)OR(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ())))), (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, TIME(CAST(vt1.c0 AS NUMERIC), TRIM(vt1.c0), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))>=((vt1.c0))), LOWER(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (NULL))  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN HEX(vt1.c0) ELSE ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)||(vt1.c0)), ((vt1.c0)<=(vt1.c0)), (NOT (vt1.c0)), ((vt1.c0) NOT NULL))) AND ((ABS(-1400111086), ((x'') BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)OR(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ())))), (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, TIME(CAST(vt1.c0 AS NUMERIC), TRIM(vt1.c0), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))>=((vt1.c0))), LOWER(vt1.c0))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE (+ (NULL))  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN HEX(vt1.c0) ELSE ((vt1.c0) NOTNULL) END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)||(vt1.c0)), ((vt1.c0)<=(vt1.c0)), (NOT (vt1.c0)), ((vt1.c0) NOT NULL))) AND ((ABS(-1400111086), ((x'') BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)OR(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ())))), (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, TIME(CAST(vt1.c0 AS NUMERIC), TRIM(vt1.c0), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))>=((vt1.c0))), LOWER(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (NULL))  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN HEX(vt1.c0) ELSE ((vt1.c0) NOTNULL) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)||(vt1.c0)), ((vt1.c0)<=(vt1.c0)), (NOT (vt1.c0)), ((vt1.c0) NOT NULL))) AND ((ABS(-1400111086), ((x'') BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)OR(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ())))), (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, TIME(CAST(vt1.c0 AS NUMERIC), TRIM(vt1.c0), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))>=((vt1.c0))), LOWER(vt1.c0))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE (+ (NULL))  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN HEX(vt1.c0) ELSE ((vt1.c0) NOTNULL) END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)||(vt1.c0)), ((vt1.c0)<=(vt1.c0)), (NOT (vt1.c0)), ((vt1.c0) NOT NULL))) AND ((ABS(-1400111086), ((x'') BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)OR(vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ())))), (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, TIME(CAST(vt1.c0 AS NUMERIC), TRIM(vt1.c0), ((vt1.c0)<<(vt1.c0)), (((vt1.c0))>=((vt1.c0))), LOWER(vt1.c0))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS FALSE)) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (vt1.c0 IN ()) END DESC  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) ASC, UPPER(vt1.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (vt1.c0 IN ()) END DESC  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) ASC, UPPER(vt1.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS FALSE)) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (vt1.c0 IN ()) END DESC  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) ASC, UPPER(vt1.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (vt1.c0 IN ()) END DESC  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) ASC, UPPER(vt1.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS FALSE)) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (vt1.c0 IN ()) END DESC  NULLS FIRST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) ASC, UPPER(vt1.c0) COLLATE RTRIM;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN 0.00572404826883921 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0.00572404826883921 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN 0.00572404826883921 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN 0.00572404826883921 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN 0.00572404826883921 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (ABS(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ABS(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (ABS(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt0.c0)))<>((((vt1.c0))>=(('QP+k'))))) WHERE ((vt0.c0 COLLATE RTRIM IN (vt0.c0))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('') AND ((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN (vt0.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt0.c0)))!=((((vt1.c0))>=(('QP+k'))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('') AND ((+ (vt1.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt0.c0)))<>((((vt1.c0))>=(('QP+k'))))) WHERE ((vt0.c0 COLLATE RTRIM IN (vt0.c0))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('') AND ((+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN (vt0.c0))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt0.c0)))!=((((vt1.c0))>=(('QP+k'))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('') AND ((+ (vt1.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(vt0.c0)))<>((((vt1.c0))>=(('QP+k'))))) WHERE ((vt0.c0 COLLATE RTRIM IN (vt0.c0))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('') AND ((+ (vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0))==((vt1.c0))) AS REAL)) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0) BETWEEN ('') AND ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0))==((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0) BETWEEN ('') AND ((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0))==((vt1.c0))) AS REAL)) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0) BETWEEN ('') AND ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0))==((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0) BETWEEN ('') AND ((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((((vt1.c0))==((vt1.c0))) AS REAL)) ORDER BY vt1.c0  NULLS FIRST, ((vt1.c0) BETWEEN ('') AND ((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)+(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((CAST(vt0.c0 AS REAL))*(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS REAL))*(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)+(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((CAST(vt0.c0 AS REAL))*(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS REAL))*(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)+(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((CAST(vt0.c0 AS REAL))*(vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN (((vt1.c0)&(0.8718818775835634)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN (((vt1.c0)&(0.8718818775835634))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN (((vt1.c0)&(0.8718818775835634)))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN (((vt1.c0)&(0.8718818775835634))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN (((vt1.c0)&(0.8718818775835634)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND ((((vt0.c0))<>((vt0.c0))))) WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((load_extension(vt1.c0, 'd5q0鎠~')) IS FALSE) DESC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0)))=(((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND ((((vt0.c0))<>((vt0.c0))))) ORDER BY ((load_extension(vt1.c0, 'd5q0鎠~')) IS FALSE) DESC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0)))==(((vt0.c0) ISNULL))) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND ((((vt0.c0))<>((vt0.c0))))) WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((load_extension(vt1.c0, 'd5q0鎠~')) IS FALSE) DESC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0)))=(((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND ((((vt0.c0))<>((vt0.c0))))) ORDER BY ((load_extension(vt1.c0, 'd5q0鎠~')) IS FALSE) DESC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0)))==(((vt0.c0) ISNULL))) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND ((((vt0.c0))<>((vt0.c0))))) WHERE ((+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((load_extension(vt1.c0, 'd5q0鎠~')) IS FALSE) DESC  NULLS FIRST, ((((vt1.c0)>=(vt0.c0)))=(((vt0.c0) ISNULL))) DESC;
SELECT * FROM vt0 WHERE ((((('OGG,')AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)OR(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))))) AND ((((vt0.c0)>=('<%S{y')))))  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('OGG,')AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))))) AND ((((vt0.c0)>=('<%S{y')))))  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((('OGG,')AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)OR(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))))) AND ((((vt0.c0)>=('<%S{y')))))  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('OGG,')AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))))) AND ((((vt0.c0)>=('<%S{y')))))  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((('OGG,')AND(((vt0.c0) NOTNULL))))OR(((vt0.c0)OR(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))))) AND ((((vt0.c0)>=('<%S{y')))))  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT * FROM vt1 WHERE (x'd0d6');
SELECT SUM(count) FROM (SELECT ((x'd0d6') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'd0d6');
SELECT SUM(count) FROM (SELECT ((x'd0d6') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'd0d6');
SELECT COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT (((vt1.c0))==((vt1.c0))))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((vt1.c0))=((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT (((vt1.c0))==((vt1.c0))))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((vt1.c0))=((vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt1 WHERE (LIKELY(DISTINCT (((vt1.c0))==((vt1.c0))))) ORDER BY CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (TYPEOF(((vt0.c0)OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)OR(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (TYPEOF(((vt0.c0)OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0)OR(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (TYPEOF(((vt0.c0)OR(vt0.c0))));
SELECT ALL * FROM vt1 WHERE (0.6769546645062835) ORDER BY ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS LAST, ((((vt1.c0) NOT NULL))||(((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.6769546645062835) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS LAST, ((((vt1.c0) NOT NULL))||(((vt1.c0)*(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (0.6769546645062835) ORDER BY ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS LAST, ((((vt1.c0) NOT NULL))||(((vt1.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.6769546645062835) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS LAST, ((((vt1.c0) NOT NULL))||(((vt1.c0)*(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (0.6769546645062835) ORDER BY ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS LAST, ((((vt1.c0) NOT NULL))||(((vt1.c0)*(vt1.c0))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(vt0.c0 AS BLOB))) WHERE (((((vt0.c0)IS NOT(vt0.c0)))/(vt0.c0))) ORDER BY ((((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((vt1.c0 IN (vt0.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)!=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))/(vt0.c0))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(vt0.c0 AS BLOB))) ORDER BY ((((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((vt1.c0 IN (vt0.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)!=(vt1.c0)))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(vt0.c0 AS BLOB))) WHERE (((((vt0.c0)IS NOT(vt0.c0)))/(vt0.c0))) ORDER BY ((((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((vt1.c0 IN (vt0.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)!=(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0)))/(vt0.c0))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(vt0.c0 AS BLOB))) ORDER BY ((((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((vt1.c0 IN (vt0.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)!=(vt1.c0)))));
SELECT * FROM vt1 INNER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(vt0.c0 AS BLOB))) WHERE (((((vt0.c0)IS NOT(vt0.c0)))/(vt0.c0))) ORDER BY ((((((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND((vt1.c0 IN (vt0.c0)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)!=(vt1.c0))));
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY DATETIME(((vt1.c0)*(vt1.c0)), ((NULL) NOT NULL), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY DATETIME(((vt1.c0)*(vt1.c0)), ((NULL) NOT NULL), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))));
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY DATETIME(((vt1.c0)*(vt1.c0)), ((NULL) NOT NULL), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY DATETIME(((vt1.c0)*(vt1.c0)), ((NULL) NOT NULL), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))));
SELECT * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY DATETIME(((vt1.c0)*(vt1.c0)), ((NULL) NOT NULL), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)));
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (- (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (x'') ORDER BY '-1950251409' COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY '-1950251409' COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (x'') ORDER BY '-1950251409' COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY '-1950251409' COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (x'') ORDER BY '-1950251409' COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN ('-186805347') AND (((NULL) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN ('-186805347') AND (((NULL) NOT NULL))));
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN ('-186805347') AND (((NULL) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN ('-186805347') AND (((NULL) NOT NULL))));
SELECT * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((CASE vt1.c0  WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN ('-186805347') AND (((NULL) NOT NULL)));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ())))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ())))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN ())))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN ('RBwC') AND (vt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN ('RBwC') AND (vt0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN ('RBwC') AND (vt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN ('RBwC') AND (vt0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) BETWEEN ('RBwC') AND (vt0.c0))) AND (NULL)));
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN (((vt1.c0) NOTNULL)))) ORDER BY (+ (NULL COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (NULL COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN (((vt1.c0) NOTNULL)))) ORDER BY (+ (NULL COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (NULL COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN (((vt1.c0) NOTNULL)))) ORDER BY (+ (NULL COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (HEX(DISTINCT vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (HEX(DISTINCT vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT vt1.c0)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (HEX(DISTINCT vt1.c0));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((vt0.c0 IN ()))OR((+ (vt1.c0)))))AND(((vt0.c0) NOT NULL))))OR(vt1.c0 COLLATE NOCASE)))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))OR((+ (vt1.c0)))))AND(((vt0.c0) NOT NULL))))OR(vt1.c0 COLLATE NOCASE)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((vt0.c0 IN ()))OR((+ (vt1.c0)))))AND(((vt0.c0) NOT NULL))))OR(vt1.c0 COLLATE NOCASE)))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))OR((+ (vt1.c0)))))AND(((vt0.c0) NOT NULL))))OR(vt1.c0 COLLATE NOCASE)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((vt0.c0 IN ()))OR((+ (vt1.c0)))))AND(((vt0.c0) NOT NULL))))OR(vt1.c0 COLLATE NOCASE)))OR((vt1.c0 IN ()))));
SELECT ALL * FROM vt0, vt1 WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)AND((vt1.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)AND((vt1.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)AND((vt1.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)AND((vt1.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)AND((vt1.c0 IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))%(SUBSTR(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0)))%(SUBSTR(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))%(SUBSTR(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0)))%(SUBSTR(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))%(SUBSTR(vt0.c0, vt0.c0))));
SELECT ALL * FROM vt1 WHERE (json_patch(NULL, vt1.c0));
SELECT SUM(count) FROM (SELECT ((json_patch(NULL, vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (json_patch(NULL, vt1.c0));
SELECT SUM(count) FROM (SELECT ((json_patch(NULL, vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (json_patch(NULL, vt1.c0));
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(NULL))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(NULL))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)IS NOT(NULL)));
SELECT ALL * FROM vt1, vt0 WHERE ((x'5ee4' IN ()) COLLATE BINARY COLLATE BINARY) ORDER BY ((DATETIME(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))=((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'5ee4' IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((DATETIME(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))==((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((x'5ee4' IN ()) COLLATE BINARY COLLATE BINARY) ORDER BY ((DATETIME(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))=((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'5ee4' IN ()) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((DATETIME(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))==((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((x'5ee4' IN ()) COLLATE BINARY COLLATE BINARY) ORDER BY ((DATETIME(vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0))=((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT * FROM vt0 WHERE (rtreenode(RTRIM(vt0.c0), ((vt0.c0)||(vt0.c0)))) ORDER BY ((0Xffffffff8425241e) BETWEEN (((0.5058951028202829) NOTNULL)) AND ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(RTRIM(vt0.c0), ((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((0Xffffffff8425241e) BETWEEN (((0.5058951028202829) NOTNULL)) AND ((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (rtreenode(RTRIM(vt0.c0), ((vt0.c0)||(vt0.c0)))) ORDER BY ((0Xffffffff8425241e) BETWEEN (((0.5058951028202829) NOTNULL)) AND ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(RTRIM(vt0.c0), ((vt0.c0)||(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((0Xffffffff8425241e) BETWEEN (((0.5058951028202829) NOTNULL)) AND ((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (rtreenode(RTRIM(vt0.c0), ((vt0.c0)||(vt0.c0)))) ORDER BY ((0Xffffffff8425241e) BETWEEN (((0.5058951028202829) NOTNULL)) AND ((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)%(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)%(vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (((load_extension(vt0.c0, vt0.c0))>(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((load_extension(vt0.c0, vt0.c0))>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((load_extension(vt0.c0, vt0.c0))>(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((load_extension(vt0.c0, vt0.c0))>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt1 WHERE ('SvOATsM5') ORDER BY CAST(((vt1.c0)IS(x'')) AS INTEGER)  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('SvOATsM5') IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)IS(x'')) AS INTEGER)  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ('SvOATsM5') ORDER BY CAST(((vt1.c0)IS(x'')) AS INTEGER)  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('SvOATsM5') IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)IS(x'')) AS INTEGER)  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ('SvOATsM5') ORDER BY CAST(((vt1.c0)IS(x'')) AS INTEGER)  NULLS FIRST, ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)==(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)=(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)==(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)=(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)==(vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS INTEGER) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c0)GLOB(vt0.c0)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)>>('?tn^ G\n'))))) ORDER BY ((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)>>('?tn^ G\n'))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)>>('?tn^ G\n'))))) ORDER BY ((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)>>('?tn^ G\n'))))) IS TRUE)  as count FROM vt0 ORDER BY ((json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)LIKE(vt0.c0))))<=((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)LIKE(vt0.c0))))<=((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)LIKE(vt0.c0))))<=((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)LIKE(vt0.c0))))<=((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)LIKE(vt0.c0))))<=((vt1.c0 COLLATE RTRIM))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')<>(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY NULL, (~ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY NULL, (~ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')<>(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY NULL, (~ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')!=(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY NULL, (~ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'')<>(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY NULL, (~ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN '~TFP' WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN '~TFP' WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN '~TFP' WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN '~TFP' WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN '~TFP' WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN (vt1.c0 IN ()) ELSE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END);
SELECT ALL * FROM vt0, vt1 WHERE ((((((+ (vt1.c0)))AND(((vt1.c0)<<(vt0.c0)))))OR(((vt0.c0)|(vt0.c0))))) ORDER BY HEX(((vt0.c0) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))AND(((vt1.c0)<<(vt0.c0)))))OR(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY HEX(((vt0.c0) ISNULL))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((+ (vt1.c0)))AND(((vt1.c0)<<(vt0.c0)))))OR(((vt0.c0)|(vt0.c0))))) ORDER BY HEX(((vt0.c0) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (vt1.c0)))AND(((vt1.c0)<<(vt0.c0)))))OR(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY HEX(((vt0.c0) ISNULL))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((+ (vt1.c0)))AND(((vt1.c0)<<(vt0.c0)))))OR(((vt0.c0)|(vt0.c0))))) ORDER BY HEX(((vt0.c0) ISNULL))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))AND((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0))))) WHERE (LOWER((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))AND((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))AND((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0))))) WHERE (LOWER((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))AND((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((vt0.c0 IN (vt1.c0)))AND((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0))))) WHERE (LOWER((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 7.3604212E7 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 7.3604212E7 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 7.3604212E7 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 7.3604212E7 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 7.3604212E7 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((((((((vt0.c0)OR(0.24028276246391844)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY 0.6028902497259875  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((vt0.c0)OR(0.24028276246391844)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.6028902497259875  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((((((((vt0.c0)OR(0.24028276246391844)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY 0.6028902497259875  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((vt0.c0)OR(0.24028276246391844)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.6028902497259875  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((((((((vt0.c0)OR(0.24028276246391844)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY 0.6028902497259875  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (ROUND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>(0.6555566980287493))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>(0.6555566980287493)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ROUND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>(0.6555566980287493))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>(0.6555566980287493)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ROUND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)>(0.6555566980287493))));
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)=(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)=(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)=(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt1.c0);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt1.c0);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST('0.2030557168154763' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.2030557168154763' AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST('0.2030557168154763' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.2030557168154763' AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST('0.2030557168154763' AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('? ');
SELECT SUM(count) FROM (SELECT (('? ') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('? ');
SELECT SUM(count) FROM (SELECT (('? ') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('? ');
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE '-1377375674'  WHEN '-1688452644' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN CASE WHEN vt1.c0 THEN x'530c' WHEN vt0.c0 THEN vt0.c0 WHEN '0.6332738842934403' THEN vt1.c0 ELSE vt1.c0 END THEN vt0.c0 COLLATE NOCASE WHEN TRIM(DISTINCT x'bf42', vt1.c0) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END END WHERE (ABS(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE '-1377375674'  WHEN '-1688452644' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN CASE WHEN vt1.c0 THEN x'530c' WHEN vt0.c0 THEN vt0.c0 WHEN '0.6332738842934403' THEN vt1.c0 ELSE vt1.c0 END THEN vt0.c0 COLLATE NOCASE WHEN TRIM(DISTINCT x'bf42', vt1.c0) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE '-1377375674'  WHEN '-1688452644' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN CASE WHEN vt1.c0 THEN x'530c' WHEN vt0.c0 THEN vt0.c0 WHEN '0.6332738842934403' THEN vt1.c0 ELSE vt1.c0 END THEN vt0.c0 COLLATE NOCASE WHEN TRIM(DISTINCT x'bf42', vt1.c0) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END END WHERE (ABS(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE '-1377375674'  WHEN '-1688452644' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN CASE WHEN vt1.c0 THEN x'530c' WHEN vt0.c0 THEN vt0.c0 WHEN '0.6332738842934403' THEN vt1.c0 ELSE vt1.c0 END THEN vt0.c0 COLLATE NOCASE WHEN TRIM(DISTINCT x'bf42', vt1.c0) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE '-1377375674'  WHEN '-1688452644' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN CASE WHEN vt1.c0 THEN x'530c' WHEN vt0.c0 THEN vt0.c0 WHEN '0.6332738842934403' THEN vt1.c0 ELSE vt1.c0 END THEN vt0.c0 COLLATE NOCASE WHEN TRIM(DISTINCT x'bf42', vt1.c0) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END END WHERE (ABS(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END);
SELECT * FROM vt0 WHERE (((((0xffffffffb12f94bb)%(vt0.c0)))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffb12f94bb)%(vt0.c0)))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0xffffffffb12f94bb)%(vt0.c0)))AND(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffb12f94bb)%(vt0.c0)))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0xffffffffb12f94bb)%(vt0.c0)))AND(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((~ (x'9a04')), ((vt0.c0)||(vt0.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>(((- (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE NULL  WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY ((((vt0.c0)AND((vt0.c0 IN ()))))AND(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (x'9a04')), ((vt0.c0)||(vt0.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>(((- (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE NULL  WHEN vt1.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)AND((vt0.c0 IN ()))))AND(((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((~ (x'9a04')), ((vt0.c0)||(vt0.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>(((- (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE NULL  WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY ((((vt0.c0)AND((vt0.c0 IN ()))))AND(((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (x'9a04')), ((vt0.c0)||(vt0.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))>(((- (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE NULL  WHEN vt1.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0)AND((vt0.c0 IN ()))))AND(((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN 0.5156427632140176 WHEN vt1.c0 THEN vt1.c0 END)GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN 0.5156427632140176 WHEN vt1.c0 THEN vt1.c0 END)GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN 0.5156427632140176 WHEN vt1.c0 THEN vt1.c0 END)GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN 0.5156427632140176 WHEN vt1.c0 THEN vt1.c0 END)GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY ((CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN 0.5156427632140176 WHEN vt1.c0 THEN vt1.c0 END)GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0))) IS FALSE));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)|(vt0.c0)) COLLATE BINARY WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)|(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)|(vt0.c0)) COLLATE BINARY WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)|(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)|(vt0.c0)) COLLATE BINARY WHERE ((((vt0.c0 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt1.c0)+(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c0))>=((vt1.c0))))) ASC, CAST(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt1.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c0))>=((vt1.c0))))) ASC, CAST(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt1.c0)+(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c0))>=((vt1.c0))))) ASC, CAST(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt1.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c0))>=((vt1.c0))))) ASC, CAST(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt1.c0)+(vt0.c0))))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt0.c0))>=((vt1.c0))))) ASC, CAST(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (LIKELIHOOD(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)), 0.5916097509168521));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)), 0.5916097509168521)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELIHOOD(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)), 0.5916097509168521));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)), 0.5916097509168521)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELIHOOD(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)), 0.5916097509168521));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('') ORDER BY vt1.c0 COLLATE RTRIM ASC, ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 COLLATE RTRIM ASC, ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('') ORDER BY vt1.c0 COLLATE RTRIM ASC, ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 COLLATE RTRIM ASC, ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('') ORDER BY vt1.c0 COLLATE RTRIM ASC, ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN 0.7776182307441882 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (QUOTE(vt1.c0)) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0))))) ORDER BY NULL ASC  NULLS FIRST, (~ (CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN 0.7776182307441882 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (QUOTE(vt1.c0)) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL ASC  NULLS FIRST, (~ (CAST(vt1.c0 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN 0.7776182307441882 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (QUOTE(vt1.c0)) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0))))) ORDER BY NULL ASC  NULLS FIRST, (~ (CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN 0.7776182307441882 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (QUOTE(vt1.c0)) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL ASC  NULLS FIRST, (~ (CAST(vt1.c0 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN 0.7776182307441882 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (QUOTE(vt1.c0)) AND (((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0))))) ORDER BY NULL ASC  NULLS FIRST, (~ (CAST(vt1.c0 AS TEXT))) DESC;
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)LIKE(x'')) THEN CASE 0.6131639612196307  WHEN vt1.c0 THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN ((vt1.c0)>=(vt1.c0)) THEN x'' END) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND((((('71fHUb')AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)) DESC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)LIKE(x'')) THEN CASE 0.6131639612196307  WHEN vt1.c0 THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN ((vt1.c0)>=(vt1.c0)) THEN x'' END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND((((('71fHUb')AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)) DESC, vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)LIKE(x'')) THEN CASE 0.6131639612196307  WHEN vt1.c0 THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN ((vt1.c0)>=(vt1.c0)) THEN x'' END) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND((((('71fHUb')AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)) DESC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)LIKE(x'')) THEN CASE 0.6131639612196307  WHEN vt1.c0 THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN ((vt1.c0)>=(vt1.c0)) THEN x'' END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND((((('71fHUb')AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)) DESC, vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c0)LIKE(x'')) THEN CASE 0.6131639612196307  WHEN vt1.c0 THEN vt1.c0 END WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN ((vt1.c0)>=(vt1.c0)) THEN x'' END) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND((((('71fHUb')AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)) DESC, vt1.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND ('1678413125')))OR(((0.639936322912462)<>(vt0.c0)))))OR((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (vt0.c0) AND ('1678413125')))OR(((0.639936322912462)<>(vt0.c0)))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND ('1678413125')))OR(((0.639936322912462)<>(vt0.c0)))))OR((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (vt0.c0) AND ('1678413125')))OR(((0.639936322912462)<>(vt0.c0)))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND ('1678413125')))OR(((0.639936322912462)<>(vt0.c0)))))OR((+ (vt0.c0)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((vt1.c0))>((vt1.c0))))))) ORDER BY CAST(vt1.c0 AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((vt1.c0))>((vt1.c0))))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS REAL));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((vt1.c0))>((vt1.c0))))))) ORDER BY CAST(vt1.c0 AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((vt1.c0))>((vt1.c0))))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS REAL));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((vt1.c0))>((vt1.c0))))))) ORDER BY CAST(vt1.c0 AS REAL);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE))>=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))>=(vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE))>=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))>=(vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE))>=(vt1.c0)));
SELECT * FROM vt1 NOT INDEXED WHERE (((((~ (2.50532062E8)), CASE WHEN '-447543672' THEN vt1.c0 END, (+ (vt1.c0))))<=((((vt1.c0)<(vt1.c0)), ((vt1.c0)<=(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (0.5763856960594023)))))) ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((~ (2.50532062E8)), CASE WHEN '-447543672' THEN vt1.c0 END, (+ (vt1.c0))))<=((((vt1.c0)<(vt1.c0)), ((vt1.c0)<=(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (0.5763856960594023)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED WHERE (((((~ (2.50532062E8)), CASE WHEN '-447543672' THEN vt1.c0 END, (+ (vt1.c0))))<=((((vt1.c0)<(vt1.c0)), ((vt1.c0)<=(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (0.5763856960594023)))))) ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((~ (2.50532062E8)), CASE WHEN '-447543672' THEN vt1.c0 END, (+ (vt1.c0))))<=((((vt1.c0)<(vt1.c0)), ((vt1.c0)<=(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (0.5763856960594023)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED WHERE (((((~ (2.50532062E8)), CASE WHEN '-447543672' THEN vt1.c0 END, (+ (vt1.c0))))<=((((vt1.c0)<(vt1.c0)), ((vt1.c0)<=(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (0.5763856960594023)))))) ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN vt0.c0 COLLATE BINARY THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN HEX(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN vt0.c0 COLLATE BINARY THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN HEX(vt0.c0) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN vt0.c0 COLLATE BINARY THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN HEX(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN vt0.c0 COLLATE BINARY THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN HEX(vt0.c0) END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE RTRIM  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN vt0.c0 COLLATE BINARY THEN x'' WHEN CAST(vt0.c0 AS BLOB) THEN HEX(vt0.c0) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)|(vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)|(vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)|(vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt1.c0 COLLATE NOCASE) BETWEEN (vt0.c0 COLLATE BINARY) AND ((NOT (vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c0)))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c0)))))AND((NOT (vt0.c0)))));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE ((((((-585526628, vt0.c0, vt1.c0))!=(('KR\n', vt1.c0, vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((-585526628, vt0.c0, vt1.c0))<>(('KR\n', vt1.c0, vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((-585526628, vt0.c0, vt1.c0))!=(('KR\n', vt1.c0, vt1.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((-585526628, vt0.c0, vt1.c0))<>(('KR\n', vt1.c0, vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((((-585526628, vt0.c0, vt1.c0))!=(('KR\n', vt1.c0, vt1.c0)))) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0, '2072496096', vt1.c0))<((NULL, vt0.c0, vt1.c0))), CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)/(vt0.c0)), CAST(vt1.c0 AS TEXT), (- (vt1.c0)))))) ORDER BY ((json_remove(vt1.c0, vt0.c0))/(((vt1.c0)/(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0, '2072496096', vt1.c0))<((NULL, vt0.c0, vt1.c0))), CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)/(vt0.c0)), CAST(vt1.c0 AS TEXT), (- (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((json_remove(vt1.c0, vt0.c0))/(((vt1.c0)/(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0, '2072496096', vt1.c0))<((NULL, vt0.c0, vt1.c0))), CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)/(vt0.c0)), CAST(vt1.c0 AS TEXT), (- (vt1.c0)))))) ORDER BY ((json_remove(vt1.c0, vt0.c0))/(((vt1.c0)/(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0, '2072496096', vt1.c0))<((NULL, vt0.c0, vt1.c0))), CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)/(vt0.c0)), CAST(vt1.c0 AS TEXT), (- (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((json_remove(vt1.c0, vt0.c0))/(((vt1.c0)/(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0, '2072496096', vt1.c0))<((NULL, vt0.c0, vt1.c0))), CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)/(vt0.c0)), CAST(vt1.c0 AS TEXT), (- (vt1.c0)))))) ORDER BY ((json_remove(vt1.c0, vt0.c0))/(((vt1.c0)/(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5382679053300656)) IN ())) ORDER BY CASE (((('v\n*t?G}F(')AND(vt1.c0)))AND(vt1.c0))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN 'WI' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt1.c0)%(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) END  NULLS LAST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) AND (ABS(DISTINCT -1.21023447E9)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5382679053300656)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (((('v\n*t?G}F(')AND(vt1.c0)))AND(vt1.c0))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN 'WI' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt1.c0)%(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) END  NULLS LAST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) AND (ABS(DISTINCT -1.21023447E9))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5382679053300656)) IN ())) ORDER BY CASE (((('v\n*t?G}F(')AND(vt1.c0)))AND(vt1.c0))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN 'WI' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt1.c0)%(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) END  NULLS LAST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) AND (ABS(DISTINCT -1.21023447E9)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5382679053300656)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (((('v\n*t?G}F(')AND(vt1.c0)))AND(vt1.c0))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN 'WI' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt1.c0)%(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) END  NULLS LAST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) AND (ABS(DISTINCT -1.21023447E9))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5382679053300656)) IN ())) ORDER BY CASE (((('v\n*t?G}F(')AND(vt1.c0)))AND(vt1.c0))  WHEN ((vt0.c0)LIKE(vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN 'WI' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt1.c0)%(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) END  NULLS LAST, ((((vt0.c0) ISNULL)) NOT BETWEEN (((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0))) AND (ABS(DISTINCT -1.21023447E9)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END) NOT NULL) WHERE (TYPEOF(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END) NOT NULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END) NOT NULL) WHERE (TYPEOF(((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END) NOT NULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((CASE x''  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END) NOT NULL) WHERE (TYPEOF(((vt0.c0) IS TRUE)));
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)||(vt1.c0))) NOT NULL)) ORDER BY ABS(vt1.c0 COLLATE BINARY)  NULLS LAST, (((vt1.c0)-(vt0.c0)) IN ()) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ABS(vt1.c0 COLLATE BINARY)  NULLS LAST, (((vt1.c0)-(vt0.c0)) IN ()) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)||(vt1.c0))) NOT NULL)) ORDER BY ABS(vt1.c0 COLLATE BINARY)  NULLS LAST, (((vt1.c0)-(vt0.c0)) IN ()) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ABS(vt1.c0 COLLATE BINARY)  NULLS LAST, (((vt1.c0)-(vt0.c0)) IN ()) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0)||(vt1.c0))) NOT NULL)) ORDER BY ABS(vt1.c0 COLLATE BINARY)  NULLS LAST, (((vt1.c0)-(vt0.c0)) IN ()) ASC, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE))) AND ((vt1.c0, (vt1.c0 IN ()), (vt1.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE))) AND ((vt1.c0, (vt1.c0 IN ()), (vt1.c0 IN ())))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE))) AND ((vt1.c0, (vt1.c0 IN ()), (vt1.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE))) AND ((vt1.c0, (vt1.c0 IN ()), (vt1.c0 IN ())))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY (NOT (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS FALSE))) AND ((vt1.c0, (vt1.c0 IN ()), (vt1.c0 IN ())))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS TEXT)) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS TEXT)) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS TEXT)) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(CAST(vt1.c0 AS TEXT))))OR(CAST(vt1.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)<<(vt1.c0))) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt1.c0) ISNULL)))) ORDER BY ((404005721) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt1.c0))) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((404005721) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)<<(vt1.c0))) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt1.c0) ISNULL)))) ORDER BY ((404005721) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt1.c0))) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((404005721) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)<<(vt1.c0))) BETWEEN (((vt1.c0)>=(vt0.c0))) AND (((vt1.c0) ISNULL)))) ORDER BY ((404005721) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0.1287007225876885)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0.1287007225876885)))) IS TRUE)  as count FROM vt1 ORDER BY '' ASC);
SELECT ALL * FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0.1287007225876885)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0.1287007225876885)))) IS TRUE)  as count FROM vt1 ORDER BY '' ASC);
SELECT ALL * FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (0.1287007225876885)))) ORDER BY '' ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (4.04005721E8) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (4.04005721E8) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (4.04005721E8) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (4.04005721E8) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (4.04005721E8) AND (vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)/(vt0.c0))) AND ((((vt1.c0, vt1.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (NOT (rtreenode(vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)/(vt0.c0))) AND ((((vt1.c0, vt1.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (rtreenode(vt0.c0, vt0.c0))) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)/(vt0.c0))) AND ((((vt1.c0, vt1.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (NOT (rtreenode(vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)/(vt0.c0))) AND ((((vt1.c0, vt1.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (rtreenode(vt0.c0, vt0.c0))) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)/(vt0.c0))) AND ((((vt1.c0, vt1.c0, vt0.c0))<>((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (NOT (rtreenode(vt0.c0, vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL)GLOB(((((vt1.c0)OR('cU')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(((((vt1.c0)OR('cU')))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL)GLOB(((((vt1.c0)OR('cU')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(((((vt1.c0)OR('cU')))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL)GLOB(((((vt1.c0)OR('cU')))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'1e27') ORDER BY (((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR(vt1.c0 COLLATE BINARY)))OR(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((x'1e27') IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR(vt1.c0 COLLATE BINARY)))OR(CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'1e27') ORDER BY (((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR(vt1.c0 COLLATE BINARY)))OR(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((x'1e27') IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR(vt1.c0 COLLATE BINARY)))OR(CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (x'1e27') ORDER BY (((((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))OR(vt1.c0 COLLATE BINARY)))OR(CAST(vt1.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)IS NOT(vt1.c0)) COLLATE RTRIM) ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c0 ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS NOT(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c0 ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)IS NOT(vt1.c0)) COLLATE RTRIM) ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c0 ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS NOT(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c0 ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)IS NOT(vt1.c0)) COLLATE RTRIM) ORDER BY CASE ((vt0.c0)&(vt1.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN vt0.c0 ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)-(((vt1.c0) IS TRUE)))) ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0xffffffffd8e2e9c5, (- (vt1.c0)), CAST(vt1.c0 AS TEXT), ((vt1.c0) IS TRUE)))!=((((x'')<<(vt1.c0)), ((vt1.c0) IS TRUE), CAST(vt0.c0 AS INTEGER), vt1.c0 COLLATE RTRIM, ((vt0.c0)AND(vt1.c0))))), ((NOT (vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((vt0.c0) NOT NULL))AND(LIKELIHOOD(vt0.c0, 0.7598833979430305))))OR((('<%S{y')AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)-(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0Xffffffffd8e2e9c5, (- (vt1.c0)), CAST(vt1.c0 AS TEXT), ((vt1.c0) IS TRUE)))!=((((x'')<<(vt1.c0)), ((vt1.c0) IS TRUE), CAST(vt0.c0 AS INTEGER), vt1.c0 COLLATE RTRIM, ((vt0.c0)AND(vt1.c0))))), ((NOT (vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((vt0.c0) NOT NULL))AND(LIKELIHOOD(vt0.c0, 0.7598833979430305))))OR((('<%S{y')AND(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)-(((vt1.c0) IS TRUE)))) ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0xffffffffd8e2e9c5, (- (vt1.c0)), CAST(vt1.c0 AS TEXT), ((vt1.c0) IS TRUE)))!=((((x'')<<(vt1.c0)), ((vt1.c0) IS TRUE), CAST(vt0.c0 AS INTEGER), vt1.c0 COLLATE RTRIM, ((vt0.c0)AND(vt1.c0))))), ((NOT (vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((vt0.c0) NOT NULL))AND(LIKELIHOOD(vt0.c0, 0.7598833979430305))))OR((('<%S{y')AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)-(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0Xffffffffd8e2e9c5, (- (vt1.c0)), CAST(vt1.c0 AS TEXT), ((vt1.c0) IS TRUE)))!=((((x'')<<(vt1.c0)), ((vt1.c0) IS TRUE), CAST(vt0.c0 AS INTEGER), vt1.c0 COLLATE RTRIM, ((vt0.c0)AND(vt1.c0))))), ((NOT (vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((vt0.c0) NOT NULL))AND(LIKELIHOOD(vt0.c0, 0.7598833979430305))))OR((('<%S{y')AND(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)-(((vt1.c0) IS TRUE)))) ORDER BY (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), 0xffffffffd8e2e9c5, (- (vt1.c0)), CAST(vt1.c0 AS TEXT), ((vt1.c0) IS TRUE)))!=((((x'')<<(vt1.c0)), ((vt1.c0) IS TRUE), CAST(vt0.c0 AS INTEGER), vt1.c0 COLLATE RTRIM, ((vt0.c0)AND(vt1.c0))))), ((NOT (vt1.c0)) IN ()) DESC  NULLS FIRST, ((((((vt0.c0) NOT NULL))AND(LIKELIHOOD(vt0.c0, 0.7598833979430305))))OR((('<%S{y')AND(vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT ((vt0.c0) IS TRUE)));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL)) ORDER BY CAST(((NULL)|(vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((NULL)|(vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL)) ORDER BY CAST(((NULL)|(vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((NULL)|(vt0.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL)) ORDER BY CAST(((NULL)|(vt0.c0)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((0Xffffffffcfc3f814) BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffcfc3f814) BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((0Xffffffffcfc3f814) BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffcfc3f814) BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((0Xffffffffcfc3f814) BETWEEN (((vt1.c0) IS TRUE)) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY CAST(((0.7706091120448613) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((0.7706091120448613) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY CAST(((0.7706091120448613) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((0.7706091120448613) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((+ (x''))) ORDER BY CAST(((0.7706091120448613) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) ASC;
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('')&(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((('')&(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('')&(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((('')&(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('')&(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (x''))))>(((~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (vt1.c0) AND (x''))))>(((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (x''))))>(((~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (vt1.c0) AND (x''))))>(((~ (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (x''))))>(((~ (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL));
SELECT * FROM vt1 WHERE ((((((((vt1.c0))<((x''))))OR('73604212')))OR(DATETIME(vt1.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0))<((x''))))OR('73604212')))OR(DATETIME(vt1.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((vt1.c0))<((x''))))OR('73604212')))OR(DATETIME(vt1.c0, vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0))<((x''))))OR('73604212')))OR(DATETIME(vt1.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((vt1.c0))<((x''))))OR('73604212')))OR(DATETIME(vt1.c0, vt1.c0, vt1.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length((~ (vt0.c0))) WHERE (JULIANDAY((- (vt0.c0)), ((vt1.c0)/(vt0.c0)), (- (vt0.c0)), ((vt1.c0)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN ('? ') AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((- (vt0.c0)), ((vt1.c0)/(vt0.c0)), (- (vt0.c0)), ((vt1.c0)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN ('? ') AND (vt1.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length((~ (vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length((~ (vt0.c0))) WHERE (JULIANDAY((- (vt0.c0)), ((vt1.c0)/(vt0.c0)), (- (vt0.c0)), ((vt1.c0)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN ('? ') AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((- (vt0.c0)), ((vt1.c0)/(vt0.c0)), (- (vt0.c0)), ((vt1.c0)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN ('? ') AND (vt1.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length((~ (vt0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON json_array_length((~ (vt0.c0))) WHERE (JULIANDAY((- (vt0.c0)), ((vt1.c0)/(vt0.c0)), (- (vt0.c0)), ((vt1.c0)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN ('? ') AND (vt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOTNULL)) ORDER BY CASE ((vt0.c0)<>(vt0.c0))  WHEN x'2e6986f3' THEN TRIM(vt0.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)<>(vt0.c0))  WHEN x'2e6986f3' THEN TRIM(vt0.c0) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOTNULL)) ORDER BY CASE ((vt0.c0)<>(vt0.c0))  WHEN x'2e6986f3' THEN TRIM(vt0.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)<>(vt0.c0))  WHEN x'2e6986f3' THEN TRIM(vt0.c0) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0))) NOTNULL)) ORDER BY CASE ((vt0.c0)<>(vt0.c0))  WHEN x'2e6986f3' THEN TRIM(vt0.c0) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((DATETIME(vt1.c0, vt1.c0, vt1.c0))*(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt1.c0, vt1.c0, vt1.c0))*(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((DATETIME(vt1.c0, vt1.c0, vt1.c0))*(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt1.c0, vt1.c0, vt1.c0))*(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((DATETIME(vt1.c0, vt1.c0, vt1.c0))*(((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN TRIM(DISTINCT vt0.c0) THEN (~ (vt0.c0)) WHEN 0.689575505516452 THEN (~ (vt0.c0)) WHEN '1194562464' THEN vt0.c0 COLLATE RTRIM WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) ELSE CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(DISTINCT vt0.c0) THEN (~ (vt0.c0)) WHEN 0.689575505516452 THEN (~ (vt0.c0)) WHEN '1194562464' THEN vt0.c0 COLLATE RTRIM WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN TRIM(DISTINCT vt0.c0) THEN (~ (vt0.c0)) WHEN 0.689575505516452 THEN (~ (vt0.c0)) WHEN '1194562464' THEN vt0.c0 COLLATE RTRIM WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) ELSE CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(DISTINCT vt0.c0) THEN (~ (vt0.c0)) WHEN 0.689575505516452 THEN (~ (vt0.c0)) WHEN '1194562464' THEN vt0.c0 COLLATE RTRIM WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN TRIM(DISTINCT vt0.c0) THEN (~ (vt0.c0)) WHEN 0.689575505516452 THEN (~ (vt0.c0)) WHEN '1194562464' THEN vt0.c0 COLLATE RTRIM WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) ELSE CAST(vt0.c0 AS TEXT) END);
SELECT ALL * FROM vt0, vt1 WHERE ('1116389152') ORDER BY CAST(((vt1.c0) ISNULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (('1116389152') IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) ISNULL) AS NUMERIC));
SELECT ALL * FROM vt0, vt1 WHERE ('1116389152') ORDER BY CAST(((vt1.c0) ISNULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (('1116389152') IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt1.c0) ISNULL) AS NUMERIC));
SELECT ALL * FROM vt0, vt1 WHERE ('1116389152') ORDER BY CAST(((vt1.c0) ISNULL) AS NUMERIC);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_VERSION());
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c0) BETWEEN (0.02500707953143677) AND (vt1.c0))) AND ('5'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c0) BETWEEN (0.02500707953143677) AND (vt1.c0))) AND ('5'))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c0) BETWEEN (0.02500707953143677) AND (vt1.c0))) AND ('5'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c0) BETWEEN (0.02500707953143677) AND (vt1.c0))) AND ('5'))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((vt1.c0) NOT BETWEEN (((vt1.c0) BETWEEN (0.02500707953143677) AND (vt1.c0))) AND ('5'))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0, NULL)))))==(((vt0.c0 IN (vt0.c0)), (- (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0, NULL)))))==(((vt0.c0 IN (vt0.c0)), (- (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0, NULL)))))==(((vt0.c0 IN (vt0.c0)), (- (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0, NULL)))))==(((vt0.c0 IN (vt0.c0)), (- (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt1.c0)<<(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0, NULL)))))==(((vt0.c0 IN (vt0.c0)), (- (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((LOWER(vt1.c0)))>((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CAST(((vt1.c0)IS NOT(-7.1441035E7)) AS TEXT) DESC  NULLS FIRST, json_array_length(vt1.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((LOWER(vt1.c0)))>((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CAST(((vt1.c0)IS NOT(-7.1441035E7)) AS TEXT) DESC  NULLS FIRST, json_array_length(vt1.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((LOWER(vt1.c0)))>((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CAST(((vt1.c0)IS NOT(-7.1441035E7)) AS TEXT) DESC  NULLS FIRST, json_array_length(vt1.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((LOWER(vt1.c0)))>((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CAST(((vt1.c0)IS NOT(-7.1441035E7)) AS TEXT) DESC  NULLS FIRST, json_array_length(vt1.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((LOWER(vt1.c0)))>((((vt1.c0) IS FALSE)))) DESC  NULLS LAST, CAST(((vt1.c0)IS NOT(-7.1441035E7)) AS TEXT) DESC  NULLS FIRST, json_array_length(vt1.c0) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)))AND((vt1.c0 IN ())))) ORDER BY 0Xffffffffcfc3f814 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY 0Xffffffffcfc3f814 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)))AND((vt1.c0 IN ())))) ORDER BY 0Xffffffffcfc3f814 DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY 0Xffffffffcfc3f814 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)))AND((vt1.c0 IN ())))) ORDER BY 0Xffffffffcfc3f814 DESC;
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE WHERE ((- (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE WHERE ((- (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0) IS TRUE) COLLATE NOCASE WHERE ((- (((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE ((((CAST(NULL AS NUMERIC), vt1.c0 COLLATE NOCASE, ((vt1.c0)+(vt1.c0)), ((vt1.c0) NOT NULL), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('-1377375674')))AND(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE BINARY, x'', ((vt1.c0) NOT NULL), (NOT (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(NULL AS NUMERIC), vt1.c0 COLLATE NOCASE, ((vt1.c0)+(vt1.c0)), ((vt1.c0) NOT NULL), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('-1377375674')))AND(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE BINARY, x'', ((vt1.c0) NOT NULL), (NOT (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE ((((CAST(NULL AS NUMERIC), vt1.c0 COLLATE NOCASE, ((vt1.c0)+(vt1.c0)), ((vt1.c0) NOT NULL), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('-1377375674')))AND(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE BINARY, x'', ((vt1.c0) NOT NULL), (NOT (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(NULL AS NUMERIC), vt1.c0 COLLATE NOCASE, ((vt1.c0)+(vt1.c0)), ((vt1.c0) NOT NULL), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('-1377375674')))AND(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE BINARY, x'', ((vt1.c0) NOT NULL), (NOT (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE ((((CAST(NULL AS NUMERIC), vt1.c0 COLLATE NOCASE, ((vt1.c0)+(vt1.c0)), ((vt1.c0) NOT NULL), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('-1377375674')))AND(vt1.c0))))>=((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE BINARY, x'', ((vt1.c0) NOT NULL), (NOT (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0))>((vt1.c0)))  WHEN (vt1.c0 IN ()) THEN ((vt0.c0)!=(vt1.c0)) END) ORDER BY (+ ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((x'', vt0.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))>((vt1.c0)))  WHEN (vt1.c0 IN ()) THEN ((vt0.c0)<>(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((x'', vt0.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0))>((vt1.c0)))  WHEN (vt1.c0 IN ()) THEN ((vt0.c0)!=(vt1.c0)) END) ORDER BY (+ ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((x'', vt0.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))>((vt1.c0)))  WHEN (vt1.c0 IN ()) THEN ((vt0.c0)<>(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((x'', vt0.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0))>((vt1.c0)))  WHEN (vt1.c0 IN ()) THEN ((vt0.c0)!=(vt1.c0)) END) ORDER BY (+ ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((x'', vt0.c0, vt1.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)LIKE(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)LIKE(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)LIKE(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)LIKE(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN -1730380024 END) IS TRUE)) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN -1730380024 END) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN -1730380024 END) IS TRUE)) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN -1730380024 END) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN -1730380024 END) IS TRUE)) ORDER BY ((((vt1.c0) IS TRUE)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((((((((+ (vt1.c0)))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((('-1727250949')AND(vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))OR(((vt0.c0)LIKE(vt0.c0)))) WHERE ((- (vt1.c0 COLLATE NOCASE))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 870909196 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((((((+ (vt1.c0)))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((('-1727250949')AND(vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))OR(((vt0.c0)LIKE(vt0.c0)))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 870909196 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((((((((+ (vt1.c0)))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((('-1727250949')AND(vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))OR(((vt0.c0)LIKE(vt0.c0)))) WHERE ((- (vt1.c0 COLLATE NOCASE))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 870909196 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((((((+ (vt1.c0)))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((('-1727250949')AND(vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))OR(((vt0.c0)LIKE(vt0.c0)))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 870909196 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (((((((((+ (vt1.c0)))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))))OR((('-1727250949')AND(vt1.c0)))))OR(CAST(vt1.c0 AS REAL))))OR(((vt0.c0)LIKE(vt0.c0)))) WHERE ((- (vt1.c0 COLLATE NOCASE))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 870909196 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM ASC;
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0))) ISNULL)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0))) ISNULL)) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0))) ISNULL)) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((NOT ('-479915584')));
SELECT SUM(count) FROM (SELECT (((NOT ('-479915584'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT ('-479915584')));
SELECT SUM(count) FROM (SELECT (((NOT ('-479915584'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT ('-479915584')));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY (x'a067' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (x'a067' IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY (x'a067' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (x'a067' IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL)) ORDER BY (x'a067' IN ()) DESC;
SELECT * FROM vt0 WHERE (json_remove((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY json_array_length('')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY json_array_length('')  NULLS FIRST);
SELECT * FROM vt0 WHERE (json_remove((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY json_array_length('')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_remove((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY json_array_length('')  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS(vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0 IN ()))!=(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))<>(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS(vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0 IN ()))!=(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))<>(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS(vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0 IN ()))!=(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))AND(((0.5382679053300656)%(vt1.c0)))))OR(((vt0.c0)+(vt0.c0))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOTNULL))AND(((0.5382679053300656)%(vt1.c0)))))OR(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))AND(((0.5382679053300656)%(vt1.c0)))))OR(((vt0.c0)+(vt0.c0))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOTNULL))AND(((0.5382679053300656)%(vt1.c0)))))OR(((vt0.c0)+(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((((vt0.c0) NOTNULL))AND(((0.5382679053300656)%(vt1.c0)))))OR(((vt0.c0)+(vt0.c0))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(TYPEOF(DISTINCT vt0.c0) AS TEXT)) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(TYPEOF(DISTINCT vt0.c0) AS TEXT)) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(TYPEOF(DISTINCT vt0.c0) AS TEXT)) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY 0.5058951028202829 DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY 0.5058951028202829 DESC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY 0.5058951028202829 DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY 0.5058951028202829 DESC);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (vt0.c0) ORDER BY 0.5058951028202829 DESC;
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((((0X4bae4deb)||(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((vt1.c0 IN (vt1.c0, 0.10643003085829827)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((0X4bae4deb)||(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((vt1.c0 IN (vt1.c0, 0.10643003085829827)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((((0X4bae4deb)||(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((vt1.c0 IN (vt1.c0, 0.10643003085829827)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((0X4bae4deb)||(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((vt1.c0 IN (vt1.c0, 0.10643003085829827)))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((((0X4bae4deb)||(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((vt1.c0 IN (vt1.c0, 0.10643003085829827)))) DESC;
SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (NULL);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT NULL) WHERE (IFNULL(('-923765335' IN ()), (x'' IN (vt0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(('-923765335' IN ()), (x'' IN (vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT NULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT NULL) WHERE (IFNULL(('-923765335' IN ()), (x'' IN (vt0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(('-923765335' IN ()), (x'' IN (vt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT NULL));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c0 AS REAL)) NOT NULL) WHERE (IFNULL(('-923765335' IN ()), (x'' IN (vt0.c0, vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (DATETIME((vt1.c0 IN ()), (+ (vt1.c0)), ((vt1.c0)>(vt0.c0)), ((vt1.c0)%(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((183747137, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((vt1.c0 IN ()), (+ (vt1.c0)), ((vt1.c0)>(vt0.c0)), ((vt1.c0)%(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((183747137, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (DATETIME((vt1.c0 IN ()), (+ (vt1.c0)), ((vt1.c0)>(vt0.c0)), ((vt1.c0)%(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((183747137, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME((vt1.c0 IN ()), (+ (vt1.c0)), ((vt1.c0)>(vt0.c0)), ((vt1.c0)%(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((183747137, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (DATETIME((vt1.c0 IN ()), (+ (vt1.c0)), ((vt1.c0)>(vt0.c0)), ((vt1.c0)%(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((183747137, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((+ (((-9.36565845E8)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((-9.36565845E8)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((+ (((-9.36565845E8)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((-9.36565845E8)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((+ (((-9.36565845E8)LIKE(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY CAST(((vt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY CAST(((vt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS TRUE)) ORDER BY CAST(((vt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC;
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY vt1.c0, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN ('1112241178') AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN ('1112241178') AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY vt1.c0, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN ('1112241178') AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN ('1112241178') AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY vt1.c0, ((((vt1.c0)|(vt1.c0))) NOT BETWEEN ('1112241178') AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))GLOB(0.16566690289594121)) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1273906995' END)IS(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST, CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE JULIANDAY(0.8718818775835634, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))GLOB(0.16566690289594121)) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1273906995' END)IS(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST, CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE JULIANDAY(0.8718818775835634, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))GLOB(0.16566690289594121)) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1273906995' END)IS(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST, CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE JULIANDAY(0.8718818775835634, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))GLOB(0.16566690289594121)) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1273906995' END)IS(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST, CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE JULIANDAY(0.8718818775835634, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))GLOB(0.16566690289594121)) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE '-1273906995' END)IS(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS LAST, CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE JULIANDAY(0.8718818775835634, vt1.c0, vt1.c0, vt1.c0, vt1.c0) END ASC  NULLS FIRST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (- ((((vt1.c0))>=((vt0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- ((((vt1.c0))>=((vt0.c0))))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (- ((((vt1.c0))>=((vt0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- ((((vt1.c0))>=((vt0.c0))))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (- ((((vt1.c0))>=((vt0.c0))))) WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((UPPER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((UPPER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((UPPER(vt0.c0))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, vt1 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))|(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))|(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))|(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))|(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))|(((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE (RTRIM((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((RTRIM((~ (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (RTRIM((~ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((RTRIM((~ (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (RTRIM((~ (vt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (0.7645900695146066);
SELECT SUM(count) FROM (SELECT ((0.7645900695146066) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7645900695146066);
SELECT SUM(count) FROM (SELECT ((0.7645900695146066) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7645900695146066);
SELECT ALL * FROM vt1, vt0 WHERE (0x5fa483fe) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X5fa483fe) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (0x5fa483fe) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X5fa483fe) IS TRUE)  as count FROM vt1, vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (0x5fa483fe) ORDER BY (vt0.c0 COLLATE RTRIM IN ()) DESC;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS REAL) WHERE (CASE WHEN (~ (vt1.c0)) THEN vt0.c0 WHEN vt1.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))/('')) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((x'' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN vt0.c0 WHEN vt1.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS REAL) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))/('')) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((x'' COLLATE BINARY))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS REAL) WHERE (CASE WHEN (~ (vt1.c0)) THEN vt0.c0 WHEN vt1.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))/('')) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((x'' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN vt0.c0 WHEN vt1.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS REAL) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))/('')) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((x'' COLLATE BINARY))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS REAL) WHERE (CASE WHEN (~ (vt1.c0)) THEN vt0.c0 WHEN vt1.c0 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS INTEGER) THEN vt0.c0 END) ORDER BY ((((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))/('')) ASC  NULLS FIRST, (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((x'' COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (('Q~')) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN (('Q~')) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (('Q~')) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN (('Q~')) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (('Q~')) AND ((vt0.c0)))) NOT NULL));
SELECT ALL * FROM vt0, vt1 WHERE (LIKELY(((vt1.c0)==(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt1.c0)==(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (LIKELY(((vt1.c0)==(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((vt1.c0)==(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (LIKELY(((vt1.c0)==(vt0.c0))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((- (0Xffffffffe591a00f)))AND((((870909196)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt0.c0)AND(vt1.c0)))))OR((~ (vt0.c0)))))OR(((vt1.c0) NOT NULL))) WHERE ((((vt0.c0))<((vt0.c0 COLLATE NOCASE)))) ORDER BY ((x'') NOT BETWEEN ('-1827379013') AND (vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((- (0Xffffffffe591a00f)))AND((((870909196)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt0.c0)AND(vt1.c0)))))OR((~ (vt0.c0)))))OR(((vt1.c0) NOT NULL))) ORDER BY ((x'') NOT BETWEEN ('-1827379013') AND (vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((- (0Xffffffffe591a00f)))AND((((870909196)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt0.c0)AND(vt1.c0)))))OR((~ (vt0.c0)))))OR(((vt1.c0) NOT NULL))) WHERE ((((vt0.c0))<((vt0.c0 COLLATE NOCASE)))) ORDER BY ((x'') NOT BETWEEN ('-1827379013') AND (vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((- (0Xffffffffe591a00f)))AND((((870909196)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt0.c0)AND(vt1.c0)))))OR((~ (vt0.c0)))))OR(((vt1.c0) NOT NULL))) ORDER BY ((x'') NOT BETWEEN ('-1827379013') AND (vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((- (0Xffffffffe591a00f)))AND((((870909196)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt0.c0)AND(vt1.c0)))))OR((~ (vt0.c0)))))OR(((vt1.c0) NOT NULL))) WHERE ((((vt0.c0))<((vt0.c0 COLLATE NOCASE)))) ORDER BY ((x'') NOT BETWEEN ('-1827379013') AND (vt1.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT NULL, vt1.c0)) NOT BETWEEN (((vt0.c0)GLOB(vt1.c0))) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT NULL, vt1.c0)) NOT BETWEEN (((vt0.c0)GLOB(vt1.c0))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT NULL, vt1.c0)) NOT BETWEEN (((vt0.c0)GLOB(vt1.c0))) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT NULL, vt1.c0)) NOT BETWEEN (((vt0.c0)GLOB(vt1.c0))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT NULL, vt1.c0)) NOT BETWEEN (((vt0.c0)GLOB(vt1.c0))) AND (UPPER(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<>(((vt0.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<>(((vt0.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<>(((vt0.c0)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<>(((vt0.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))<>(((vt0.c0)&(vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt0.c0)))%(CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))%(CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt0.c0)))%(CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c0)))%(CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt0.c0)))%(CASE WHEN vt1.c0 THEN NULL ELSE vt0.c0 END)));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((TRIM(vt0.c0))<<(((vt1.c0) BETWEEN (vt0.c0) AND (x'')))) WHERE (HEX((vt0.c0 IN ()))) ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ('-494351263' IN ()) THEN (vt1.c0 IN (x'96a50dc2', '? ')) END DESC, ((((vt0.c0)*(vt0.c0)))%(((((-1.582533798E9)AND(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((vt0.c0 IN ()))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((TRIM(vt0.c0))<<(((vt1.c0) BETWEEN (vt0.c0) AND (x'')))) ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ('-494351263' IN ()) THEN (vt1.c0 IN (x'96a50dc2', '? ')) END DESC, ((((vt0.c0)*(vt0.c0)))%(((((-1.582533798E9)AND(vt1.c0)))OR(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((TRIM(vt0.c0))<<(((vt1.c0) BETWEEN (vt0.c0) AND (x'')))) WHERE (HEX((vt0.c0 IN ()))) ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ('-494351263' IN ()) THEN (vt1.c0 IN (x'96a50dc2', '? ')) END DESC, ((((vt0.c0)*(vt0.c0)))%(((((-1.582533798E9)AND(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((vt0.c0 IN ()))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((TRIM(vt0.c0))<<(((vt1.c0) BETWEEN (vt0.c0) AND (x'')))) ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ('-494351263' IN ()) THEN (vt1.c0 IN (x'96a50dc2', '? ')) END DESC, ((((vt0.c0)*(vt0.c0)))%(((((-1.582533798E9)AND(vt1.c0)))OR(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((TRIM(vt0.c0))<<(((vt1.c0) BETWEEN (vt0.c0) AND (x'')))) WHERE (HEX((vt0.c0 IN ()))) ORDER BY ((NOT (vt0.c0)) IN ()) DESC  NULLS FIRST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ('-494351263' IN ()) THEN (vt1.c0 IN (x'96a50dc2', '? ')) END DESC, ((((vt0.c0)*(vt0.c0)))%(((((-1.582533798E9)AND(vt1.c0)))OR(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0) IS TRUE) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0)AND(NULL)) THEN NULL END) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN ((vt0.c0)AND(NULL)) THEN NULL END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0)AND(NULL)) THEN NULL END) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c0))  WHEN ((vt0.c0)AND(NULL)) THEN NULL END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (NOT (vt0.c0))  WHEN ((vt0.c0)AND(NULL)) THEN NULL END) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((((vt1.c0)==(vt1.c0)))IS((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((vt1.c0 COLLATE BINARY) IS FALSE), ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (ABS(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)=(vt1.c0)))IS((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((vt1.c0 COLLATE BINARY) IS FALSE), ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (ABS(vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((((vt1.c0)==(vt1.c0)))IS((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((vt1.c0 COLLATE BINARY) IS FALSE), ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (ABS(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)=(vt1.c0)))IS((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((vt1.c0 COLLATE BINARY) IS FALSE), ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (ABS(vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) ISNULL)) ORDER BY ((((vt1.c0)==(vt1.c0)))IS((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))  NULLS LAST, ((vt1.c0 COLLATE BINARY) IS FALSE), ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (ABS(vt1.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0)<>(vt0.c0)))+(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))+(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0)<>(vt0.c0)))+(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))+(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0)<>(vt0.c0)))+(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CAST(x'da09' AS TEXT))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CAST(x'da09' AS TEXT))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CAST(x'da09' AS TEXT))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CAST(x'da09' AS TEXT))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((CAST(x'da09' AS TEXT))))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0)>=(vt0.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0)>=(vt0.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0)>=(vt0.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0)>=(vt0.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0)>=(vt0.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)) WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)LIKE(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND('1269714411')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND('1269714411')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND('1269714411')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND('1269714411')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN ((- (vt0.c0))) AND (((((vt1.c0)AND('1269714411')))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULL)<<(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((NULL)<<(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((NULL)<<(NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULL)<<(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((NULL)<<(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((NULL)<<(NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NULL)<<(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST, ((NULL)<<(NULL)) ASC  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT vt1.c0)))>=((((vt0.c0) NOT NULL)))) WHERE (((NULL)LIKE(((vt0.c0) NOT NULL)))) ORDER BY '' ASC, (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT vt1.c0)))>=((((vt0.c0) NOT NULL)))) ORDER BY '' ASC, (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END IN ()) ASC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT vt1.c0)))>=((((vt0.c0) NOT NULL)))) WHERE (((NULL)LIKE(((vt0.c0) NOT NULL)))) ORDER BY '' ASC, (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT vt1.c0)))>=((((vt0.c0) NOT NULL)))) ORDER BY '' ASC, (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END IN ()) ASC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON (((HEX(DISTINCT vt1.c0)))>=((((vt0.c0) NOT NULL)))) WHERE (((NULL)LIKE(((vt0.c0) NOT NULL)))) ORDER BY '' ASC, (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END IN ()) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (0.46901551535536523);
SELECT SUM(count) FROM (SELECT ((0.46901551535536523) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.46901551535536523);
SELECT SUM(count) FROM (SELECT ((0.46901551535536523) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.46901551535536523);
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN ('') AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN ('') AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN ('') AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN ('') AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))))AND(((vt0.c0) BETWEEN ('') AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt1, vt0 WHERE ((((((((((vt0.c0)AND('b''_''')))AND(vt1.c0)))AND(vt0.c0)))AND('1130194489')) IN ())) ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND('b''_''')))AND(vt1.c0)))AND(vt0.c0)))AND('1130194489')) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((((((((vt0.c0)AND('b''_''')))AND(vt1.c0)))AND(vt0.c0)))AND('1130194489')) IN ())) ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)AND('b''_''')))AND(vt1.c0)))AND(vt0.c0)))AND('1130194489')) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((((((((vt0.c0)AND('b''_''')))AND(vt1.c0)))AND(vt0.c0)))AND('1130194489')) IN ())) ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<>((NULL, vt1.c0, vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, vt1.c0, vt1.c0))!=((NULL, vt1.c0, vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<>((NULL, vt1.c0, vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, vt1.c0, vt1.c0))!=((NULL, vt1.c0, vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<>((NULL, vt1.c0, vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((('?k7ca') BETWEEN (vt0.c0) AND (vt0.c0)))<<((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((('?k7ca') BETWEEN (vt0.c0) AND (vt0.c0)))<<((vt0.c0 IN (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((('?k7ca') BETWEEN (vt0.c0) AND (vt0.c0)))<<((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((('?k7ca') BETWEEN (vt0.c0) AND (vt0.c0)))<<((vt0.c0 IN (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((('?k7ca') BETWEEN (vt0.c0) AND (vt0.c0)))<<((vt0.c0 IN (vt0.c0))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (1674896484) ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0)))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (IFNULL(DISTINCT vt1.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1674896484) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0)))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (IFNULL(DISTINCT vt1.c0, vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (1674896484) ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0)))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (IFNULL(DISTINCT vt1.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1674896484) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0)))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (IFNULL(DISTINCT vt1.c0, vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (1674896484) ORDER BY (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0)))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND (IFNULL(DISTINCT vt1.c0, vt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((~ (0.06357787715881924)))*(((NULL)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (0.06357787715881924)))*(((NULL)>=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (0.06357787715881924)))*(((NULL)>=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (0.06357787715881924)))*(((NULL)>=(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (0.06357787715881924)))*(((NULL)>=(vt1.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END IN ())) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'2770')))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND ('-1827379013'));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'2770')))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND ('-1827379013')));
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END IN ())) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'2770')))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND ('-1827379013'));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'2770')))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND ('-1827379013')));
SELECT ALL * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END IN ())) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'2770')))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND ('-1827379013'));
SELECT * FROM vt1 WHERE ((((x'45526a21')) BETWEEN ((x'cdcd')) AND (((((vt1.c0, vt1.c0, x''))<((vt1.c0, 0x34ccf5fe, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((x'45526a21')) BETWEEN ((x'cdcd')) AND (((((vt1.c0, vt1.c0, x''))<((vt1.c0, 0x34ccf5fe, vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((x'45526a21')) BETWEEN ((x'cdcd')) AND (((((vt1.c0, vt1.c0, x''))<((vt1.c0, 0x34ccf5fe, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((x'45526a21')) BETWEEN ((x'cdcd')) AND (((((vt1.c0, vt1.c0, x''))<((vt1.c0, 0x34ccf5fe, vt1.c0))))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((x'45526a21')) BETWEEN ((x'cdcd')) AND (((((vt1.c0, vt1.c0, x''))<((vt1.c0, 0x34ccf5fe, vt1.c0)))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (UNLIKELY(vt1.c0)) AND (((vt0.c0)==(vt1.c0))))) ORDER BY (((vt1.c0 IN ()))<=(TRIM(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (UNLIKELY(vt1.c0)) AND (((vt0.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN ()))<=(TRIM(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (UNLIKELY(vt1.c0)) AND (((vt0.c0)==(vt1.c0))))) ORDER BY (((vt1.c0 IN ()))<=(TRIM(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (UNLIKELY(vt1.c0)) AND (((vt0.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0 IN ()))<=(TRIM(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (UNLIKELY(vt1.c0)) AND (((vt0.c0)==(vt1.c0))))) ORDER BY (((vt1.c0 IN ()))<=(TRIM(DISTINCT vt1.c0)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (('1685842422')>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(x'', 0.13300167024211862))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(x'', 0.13300167024211862)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (('1685842422')>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (('1685842422')>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(x'', 0.13300167024211862))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(x'', 0.13300167024211862)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (('1685842422')>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (('1685842422')>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) WHERE (((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))))AND(LIKELIHOOD(x'', 0.13300167024211862))));
SELECT ALL * FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN vt1.c0 END IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt1.c0 END IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN vt1.c0 END IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN vt1.c0 END IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1 WHERE ((CASE WHEN vt0.c0 THEN vt1.c0 END IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE BINARY;
SELECT ALL * FROM vt0 WHERE (json_insert((vt0.c0 IN ()), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END, TYPEOF(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_insert((vt0.c0 IN ()), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END, TYPEOF(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_insert((vt0.c0 IN ()), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END, TYPEOF(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((json_insert((vt0.c0 IN ()), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END, TYPEOF(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)>>(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)>>(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)>>(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)>>(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(NULL)))OR(vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)>>(CAST(vt1.c0 AS TEXT)));
SELECT ALL * FROM vt0 WHERE ((- ((~ (vt0.c0))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((~ (vt0.c0))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((~ (vt0.c0))))) ORDER BY NULL ASC  NULLS LAST;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS REAL) WHERE (((vt1.c0 IN ()) IN ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS REAL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS REAL) WHERE (((vt1.c0 IN ()) IN ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS REAL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt1.c0 AS REAL) WHERE (((vt1.c0 IN ()) IN ((~ (vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)>(vt1.c0)) IN ())) ORDER BY ((0.5221021344601521)||((vt1.c0 IN ()))), (((((vt0.c0))>=((vt1.c0))))OR(json(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((0.5221021344601521)||((vt1.c0 IN ()))), (((((vt0.c0))>=((vt1.c0))))OR(json(vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)>(vt1.c0)) IN ())) ORDER BY ((0.5221021344601521)||((vt1.c0 IN ()))), (((((vt0.c0))>=((vt1.c0))))OR(json(vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((0.5221021344601521)||((vt1.c0 IN ()))), (((((vt0.c0))>=((vt1.c0))))OR(json(vt0.c0))) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)>(vt1.c0)) IN ())) ORDER BY ((0.5221021344601521)||((vt1.c0 IN ()))), (((((vt0.c0))>=((vt1.c0))))OR(json(vt0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))OR(vt1.c0 COLLATE BINARY))) ORDER BY (NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))OR(vt1.c0 COLLATE BINARY))) ORDER BY (NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))OR(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))OR(vt1.c0 COLLATE BINARY))) ORDER BY (NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN (((vt1.c0))>=((''))) WHEN '1154191673' THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN vt1.c0 THEN vt0.c0 WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))<((vt0.c0, 0xffffffff83e88f2d, vt0.c0, vt0.c0, x''))) THEN x'' ELSE (- (vt1.c0)) END) ORDER BY ((((~ ('652495587')), ((0.1695023510928384) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (~ (vt0.c0))))!=((0.5614716442490426, ((vt1.c0)>(vt1.c0)), ((((vt1.c0)AND('-1804142024')))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) ISNULL)  WHEN (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN (((vt1.c0))>=((''))) WHEN '1154191673' THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN vt1.c0 THEN vt0.c0 WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))<((vt0.c0, 0xffffffff83e88f2d, vt0.c0, vt0.c0, x''))) THEN x'' ELSE (- (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((~ ('652495587')), ((0.1695023510928384) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (~ (vt0.c0))))!=((0.5614716442490426, ((vt1.c0)>(vt1.c0)), ((((vt1.c0)AND('-1804142024')))OR(vt0.c0))))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN (((vt1.c0))>=((''))) WHEN '1154191673' THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN vt1.c0 THEN vt0.c0 WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))<((vt0.c0, 0xffffffff83e88f2d, vt0.c0, vt0.c0, x''))) THEN x'' ELSE (- (vt1.c0)) END) ORDER BY ((((~ ('652495587')), ((0.1695023510928384) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (~ (vt0.c0))))!=((0.5614716442490426, ((vt1.c0)>(vt1.c0)), ((((vt1.c0)AND('-1804142024')))OR(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) ISNULL)  WHEN (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN (((vt1.c0))>=((''))) WHEN '1154191673' THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN vt1.c0 THEN vt0.c0 WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))<((vt0.c0, 0xffffffff83e88f2d, vt0.c0, vt0.c0, x''))) THEN x'' ELSE (- (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((~ ('652495587')), ((0.1695023510928384) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (~ (vt0.c0))))!=((0.5614716442490426, ((vt1.c0)>(vt1.c0)), ((((vt1.c0)AND('-1804142024')))OR(vt0.c0))))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((vt0.c0) ISNULL)  WHEN (((vt1.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN (((vt1.c0))>=((''))) WHEN '1154191673' THEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) IS FALSE) THEN (NOT (vt0.c0)) WHEN vt1.c0 THEN vt0.c0 WHEN (((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))<((vt0.c0, 0xffffffff83e88f2d, vt0.c0, vt0.c0, x''))) THEN x'' ELSE (- (vt1.c0)) END) ORDER BY ((((~ ('652495587')), ((0.1695023510928384) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (~ (vt0.c0))))!=((0.5614716442490426, ((vt1.c0)>(vt1.c0)), ((((vt1.c0)AND('-1804142024')))OR(vt0.c0))))) ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((0.43677394360458377)>=(vt1.c0)))AND((('1130194489')LIKE(vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (vt0.c0) ORDER BY (((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((0.43677394360458377)>=(vt1.c0)))AND((('1130194489')LIKE(vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY (((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((0.43677394360458377)>=(vt1.c0)))AND((('1130194489')LIKE(vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (vt0.c0) ORDER BY (((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((0.43677394360458377)>=(vt1.c0)))AND((('1130194489')LIKE(vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY (((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((0.43677394360458377)>=(vt1.c0)))AND((('1130194489')LIKE(vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (vt0.c0) ORDER BY (((vt1.c0, vt0.c0, vt0.c0))<((vt0.c0, vt1.c0, vt0.c0))) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>(((vt0.c0) NOT BETWEEN (0.2051153700651095) AND (x'ea8a'))))) ORDER BY ((- (NULL)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((vt0.c0) NOT BETWEEN (0.2051153700651095) AND (x'ea8a'))))) IS TRUE)  as count FROM vt0 ORDER BY ((- (NULL)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>(((vt0.c0) NOT BETWEEN (0.2051153700651095) AND (x'ea8a'))))) ORDER BY ((- (NULL)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((vt0.c0) NOT BETWEEN (0.2051153700651095) AND (x'ea8a'))))) IS TRUE)  as count FROM vt0 ORDER BY ((- (NULL)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>(((vt0.c0) NOT BETWEEN (0.2051153700651095) AND (x'ea8a'))))) ORDER BY ((- (NULL)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NULL, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), (~ (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (~ (0.541170855484301)))))) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), (~ (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (~ (0.541170855484301)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NULL, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), (~ (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (~ (0.541170855484301)))))) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), (~ (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (~ (0.541170855484301)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NULL, vt0.c0, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT), (~ (vt1.c0)), ((vt1.c0) IS TRUE))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE, (~ (0.541170855484301)))))) ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (HEX(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(CAST(vt0.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) ISNULL)))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)||(0.954275937362018)))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)||(0.954275937362018)))))OR(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) ISNULL)))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)||(0.954275937362018)))))OR(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)||(0.954275937362018)))))OR(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (((vt0.c0) ISNULL)))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0)||(0.954275937362018)))))OR(NULL))  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) WHERE (((((((((NULL)AND(IFNULL(vt0.c0, vt1.c0))))AND(vt0.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0) NOTNULL)))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(IFNULL(vt0.c0, vt1.c0))))AND(vt0.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) WHERE (((((((((NULL)AND(IFNULL(vt0.c0, vt1.c0))))AND(vt0.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0) NOTNULL)))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(IFNULL(vt0.c0, vt1.c0))))AND(vt0.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE BINARY AS INTEGER) WHERE (((((((((NULL)AND(IFNULL(vt0.c0, vt1.c0))))AND(vt0.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0) NOTNULL)))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((NOT (vt0.c0)) IN (((vt0.c0)*(vt1.c0))))) ORDER BY 577494834 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (((vt0.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 577494834 DESC);
SELECT ALL * FROM vt1, vt0 WHERE (((NOT (vt0.c0)) IN (((vt0.c0)*(vt1.c0))))) ORDER BY 577494834 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (((vt0.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 577494834 DESC);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY ((LIKELIHOOD(vt0.c0, 0.3749433837774556))IS NOT(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, CAST(5.39277405E8 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(vt0.c0, 0.3749433837774556))IS NOT(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, CAST(5.39277405E8 AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY ((LIKELIHOOD(vt0.c0, 0.3749433837774556))IS NOT(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, CAST(5.39277405E8 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELIHOOD(vt0.c0, 0.3749433837774556))IS NOT(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, CAST(5.39277405E8 AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT NULL)) ORDER BY ((LIKELIHOOD(vt0.c0, 0.3749433837774556))IS NOT(((vt0.c0) NOT NULL)))  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, CAST(5.39277405E8 AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON 'v\n*\r?G}X(' WHERE ((HEX(DISTINCT vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((HEX(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON 'v\n*\r?G}X(');
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON 'v\n*\r?G}X(' WHERE ((HEX(DISTINCT vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((HEX(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON 'v\n*\r?G}X(');
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON 'v\n*\r?G}X(' WHERE ((HEX(DISTINCT vt1.c0) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (x'bf80'))) ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ASC, ((+ (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (x'bf80'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ASC, ((+ (vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (x'bf80'))) ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ASC, ((+ (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (x'bf80'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ASC, ((+ (vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (x'bf80'))) ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ASC, ((+ (vt0.c0)) IN ()) DESC;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE BINARY END) ORDER BY NULLIF(((vt1.c0)IS(vt1.c0)), vt1.c0);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(((vt1.c0)IS(vt1.c0)), vt1.c0));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE BINARY END) ORDER BY NULLIF(((vt1.c0)IS(vt1.c0)), vt1.c0);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1 ORDER BY NULLIF(((vt1.c0)IS(vt1.c0)), vt1.c0));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN vt1.c0 COLLATE BINARY END) ORDER BY NULLIF(((vt1.c0)IS(vt1.c0)), vt1.c0);
SELECT * FROM vt0, vt1 WHERE ((~ (-1.950251409E9))) ORDER BY ((vt0.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (-1.950251409E9))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((~ (-1.950251409E9))) ORDER BY ((vt0.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (-1.950251409E9))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((~ (-1.950251409E9))) ORDER BY ((vt0.c0)<<(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c0)%(vt0.c0)), '-0.0' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c0)%(vt0.c0)), '-0.0' COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c0)%(vt0.c0)), '-0.0' COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c0)%(vt0.c0)), '-0.0' COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c0)%(vt0.c0)), '-0.0' COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN ((vt0.c0)IS(vt1.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (- (vt1.c0)) THEN ((vt0.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((((x'1146') ISNULL))||(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN ((vt0.c0)IS(vt1.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (- (vt1.c0)) THEN ((vt0.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((x'1146') ISNULL))||(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN ((vt0.c0)IS(vt1.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (- (vt1.c0)) THEN ((vt0.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((((x'1146') ISNULL))||(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN ((vt0.c0)IS(vt1.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (- (vt1.c0)) THEN ((vt0.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((x'1146') ISNULL))||(((vt0.c0) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) WHEN ((vt0.c0)IS(vt1.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN (- (vt1.c0)) THEN ((vt0.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY ((((x'1146') ISNULL))||(((vt0.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((vt0.c0, vt1.c0, 0.6066767740660033, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0.04683046250234135)) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))), UPPER(vt1.c0), ((vt1.c0)AND(vt1.c0)), ((vt0.c0)IS NOT(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, IFNULL(DISTINCT vt1.c0, vt1.c0), vt0.c0, vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt0.c0, 2080908650)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0, vt1.c0, 0.6066767740660033, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0.04683046250234135)) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))), UPPER(vt1.c0), ((vt1.c0)AND(vt1.c0)), ((vt0.c0)IS NOT(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, IFNULL(DISTINCT vt1.c0, vt1.c0), vt0.c0, vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt0.c0, 2080908650)))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((vt0.c0, vt1.c0, 0.6066767740660033, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0.04683046250234135)) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))), UPPER(vt1.c0), ((vt1.c0)AND(vt1.c0)), ((vt0.c0)IS NOT(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, IFNULL(DISTINCT vt1.c0, vt1.c0), vt0.c0, vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt0.c0, 2080908650)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0, vt1.c0, 0.6066767740660033, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0.04683046250234135)) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))), UPPER(vt1.c0), ((vt1.c0)AND(vt1.c0)), ((vt0.c0)IS NOT(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, IFNULL(DISTINCT vt1.c0, vt1.c0), vt0.c0, vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt0.c0, 2080908650)))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (((vt0.c0, vt1.c0, 0.6066767740660033, vt1.c0, vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0.04683046250234135)) AND ((vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt1.c0, vt0.c0))), UPPER(vt1.c0), ((vt1.c0)AND(vt1.c0)), ((vt0.c0)IS NOT(vt1.c0)))) AND ((vt0.c0 COLLATE RTRIM, IFNULL(DISTINCT vt1.c0, vt1.c0), vt0.c0, vt1.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0, vt0.c0, 2080908650)))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN 0xffffffff8acbdcbf THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (0X7c08256a) AND (vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END WHERE (((((((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt1.c0))))OR(((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt0.c0 COLLATE NOCASE IN ((- (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt1.c0))))OR(((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN 0xffffffff8acbdcbf THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (0x7c08256a) AND (vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END ORDER BY (vt0.c0 COLLATE NOCASE IN ((- (vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN 0xffffffff8acbdcbf THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (0X7c08256a) AND (vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END WHERE (((((((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt1.c0))))OR(((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt0.c0 COLLATE NOCASE IN ((- (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt1.c0))))OR(((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN 0xffffffff8acbdcbf THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (0x7c08256a) AND (vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END ORDER BY (vt0.c0 COLLATE NOCASE IN ((- (vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN 0xffffffff8acbdcbf THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (0X7c08256a) AND (vt1.c0)) THEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END END WHERE (((((((((CASE WHEN vt1.c0 THEN vt0.c0 END)AND(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(QUOTE(vt1.c0))))OR(((((((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt0.c0 COLLATE NOCASE IN ((- (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY vt1.c0 ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((- (vt0.c0)))!=(UNLIKELY(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))!=(UNLIKELY(NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((- (vt0.c0)))!=(UNLIKELY(NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))!=(UNLIKELY(NULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((- (vt0.c0)))!=(UNLIKELY(NULL))));
SELECT ALL * FROM vt1, vt0 WHERE (LIKELIHOOD((vt1.c0 IN ()), 0.2088376065971198));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((vt1.c0 IN ()), 0.2088376065971198)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELIHOOD((vt1.c0 IN ()), 0.2088376065971198));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((vt1.c0 IN ()), 0.2088376065971198)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (LIKELIHOOD((vt1.c0 IN ()), 0.2088376065971198));
SELECT * FROM vt0, vt1 WHERE (((load_extension(vt0.c0, vt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (RTRIM(vt0.c0)))) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 ELSE NULL END, CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt0.c0, vt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (RTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 ELSE NULL END, CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((load_extension(vt0.c0, vt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (RTRIM(vt0.c0)))) ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 ELSE NULL END, CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt0.c0, vt0.c0)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (RTRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 ELSE NULL END, CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (TRIM(vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TRIM(vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TRIM(vt1.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((NOT (vt0.c0))) NOT NULL) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((NOT (vt1.c0)))OR(CASE vt1.c0  WHEN 'c''?5&D' THEN vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT NULL))))AND(CAST(NULL AS BLOB)))) ORDER BY ((vt1.c0 COLLATE BINARY)-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), IFNULL(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((((vt1.c0)OR('1737688428')))AND(vt1.c0))) AND (LOWER(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt1.c0)))OR(CASE vt1.c0  WHEN 'c''?5&D' THEN vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT NULL))))AND(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), IFNULL(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((((vt1.c0)OR('1737688428')))AND(vt1.c0))) AND (LOWER(NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((NOT (vt1.c0)))OR(CASE vt1.c0  WHEN 'c''?5&D' THEN vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT NULL))))AND(CAST(NULL AS BLOB)))) ORDER BY ((vt1.c0 COLLATE BINARY)-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), IFNULL(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((((vt1.c0)OR('1737688428')))AND(vt1.c0))) AND (LOWER(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt1.c0)))OR(CASE vt1.c0  WHEN 'c''?5&D' THEN vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT NULL))))AND(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), IFNULL(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((((vt1.c0)OR('1737688428')))AND(vt1.c0))) AND (LOWER(NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((NOT (vt1.c0)))OR(CASE vt1.c0  WHEN 'c''?5&D' THEN vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c0) NOT NULL))))AND(CAST(NULL AS BLOB)))) ORDER BY ((vt1.c0 COLLATE BINARY)-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), IFNULL(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ASC  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((((vt1.c0)OR('1737688428')))AND(vt1.c0))) AND (LOWER(NULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE vt1.c0  WHEN x'' THEN x'64c4' END)OR(((vt1.c0)|(vt1.c0)))))AND(NULL))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN x'' THEN x'64c4' END)OR(((vt1.c0)|(vt1.c0)))))AND(NULL))) IS TRUE)  as count FROM vt1 ORDER BY LAST_INSERT_ROWID()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE vt1.c0  WHEN x'' THEN x'64c4' END)OR(((vt1.c0)|(vt1.c0)))))AND(NULL))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt1.c0  WHEN x'' THEN x'64c4' END)OR(((vt1.c0)|(vt1.c0)))))AND(NULL))) IS TRUE)  as count FROM vt1 ORDER BY LAST_INSERT_ROWID()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((CASE vt1.c0  WHEN x'' THEN x'64c4' END)OR(((vt1.c0)|(vt1.c0)))))AND(NULL))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (vt1.c0)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) DESC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0, vt0.c0))))<>((((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0, vt0.c0))))<>((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0, vt0.c0))))<>((((vt0.c0)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0, vt0.c0))))<>((((vt0.c0)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0, vt0.c0))))<>((((vt0.c0)IS NOT(vt0.c0))))));
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((vt1.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((IFNULL(vt1.c0, vt1.c0))GLOB(((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, vt1.c0))GLOB(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((IFNULL(vt1.c0, vt1.c0))GLOB(((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, vt1.c0))GLOB(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((IFNULL(vt1.c0, vt1.c0))GLOB(((vt0.c0)=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY)<(((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)<(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY)<(((vt0.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)<(((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY)<(((vt0.c0)<>(vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((NOT (vt0.c0))) AND (-923765335))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN ((NOT (vt0.c0))) AND (-923765335))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((NOT (vt0.c0))) AND (-923765335))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN ((NOT (vt0.c0))) AND (-923765335))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((NOT (vt0.c0))) AND (-923765335))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((HEX(vt0.c0))*(LENGTH(vt1.c0)))) ORDER BY (NOT (CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0))*(LENGTH(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (CAST(vt1.c0 AS BLOB))) DESC);
SELECT * FROM vt0, vt1 WHERE (((HEX(vt0.c0))*(LENGTH(vt1.c0)))) ORDER BY (NOT (CAST(vt1.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ((((HEX(vt0.c0))*(LENGTH(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (CAST(vt1.c0 AS BLOB))) DESC);
SELECT * FROM vt0, vt1 WHERE (((HEX(vt0.c0))*(LENGTH(vt1.c0)))) ORDER BY (NOT (CAST(vt1.c0 AS BLOB))) DESC;
SELECT ALL * FROM vt1 WHERE (CASE WHEN x'' THEN ((vt1.c0) NOT BETWEEN (550016086) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((vt1.c0) NOT BETWEEN (550016086) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN x'' THEN ((vt1.c0) NOT BETWEEN (550016086) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((vt1.c0) NOT BETWEEN (550016086) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN x'' THEN ((vt1.c0) NOT BETWEEN (550016086) AND (vt1.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ORDER BY vt1.c0 DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL)))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL)))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))/(((vt1.c0) NOT NULL)))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) AS REAL)) ORDER BY ((((x'')%(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')%(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) AS REAL)) ORDER BY ((((x'')%(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')%(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) AS REAL)) ORDER BY ((((x'')%(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) ORDER BY json_quote(CASE WHEN '}' THEN vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_quote(CASE WHEN '}' THEN vt0.c0 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) ORDER BY json_quote(CASE WHEN '}' THEN vt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_quote(CASE WHEN '}' THEN vt0.c0 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))) ORDER BY json_quote(CASE WHEN '}' THEN vt0.c0 END)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOT NULL), 0xffffffffd22cd818 COLLATE NOCASE, ((vt1.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 'xY', vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOT NULL), 0Xffffffffd22cd818 COLLATE NOCASE, ((vt1.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 'xY', vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOT NULL), 0xffffffffd22cd818 COLLATE NOCASE, ((vt1.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 'xY', vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOT NULL), 0Xffffffffd22cd818 COLLATE NOCASE, ((vt1.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 'xY', vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOT NULL), 0xffffffffd22cd818 COLLATE NOCASE, ((vt1.c0)|(vt1.c0)))) AND (((vt1.c0 IN ()), (vt1.c0 IN (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 'xY', vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, NULL, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('{m6p') ORDER BY CASE WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN rtreenode(vt1.c0, '-1842729160') THEN (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))) WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN 0.06560608131868928 END WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('{m6p') IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN rtreenode(vt1.c0, '-1842729160') THEN (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))) WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN 0.06560608131868928 END WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('{m6p') ORDER BY CASE WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN rtreenode(vt1.c0, '-1842729160') THEN (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))) WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN 0.06560608131868928 END WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('{m6p') IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN rtreenode(vt1.c0, '-1842729160') THEN (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))) WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN 0.06560608131868928 END WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('{m6p') ORDER BY CASE WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN vt0.c0 COLLATE NOCASE THEN (vt1.c0 IN ()) WHEN rtreenode(vt1.c0, '-1842729160') THEN (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))) WHEN vt1.c0 COLLATE BINARY THEN CASE WHEN vt1.c0 THEN 0.06560608131868928 END WHEN ((((x'')AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((NULL)<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NULL)<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NULL)<(vt0.c0)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((x'') NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN (vt1.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((x'') NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN (vt1.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((x'') NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN (vt1.c0))))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((((((((-8.09240556E8)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((((((((-8.09240556E8)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((((((((-8.09240556E8)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((((((((-8.09240556E8)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((((((((((-8.09240556E8)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT * FROM vt1 WHERE (TRIM(DISTINCT vt1.c0 COLLATE RTRIM)) ORDER BY ((vt1.c0)LIKE(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)LIKE(vt1.c0)) DESC);
SELECT * FROM vt1 WHERE (TRIM(DISTINCT vt1.c0 COLLATE RTRIM)) ORDER BY ((vt1.c0)LIKE(vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)LIKE(vt1.c0)) DESC);
SELECT * FROM vt1 WHERE (TRIM(DISTINCT vt1.c0 COLLATE RTRIM)) ORDER BY ((vt1.c0)LIKE(vt1.c0)) DESC;
SELECT ALL * FROM vt1 WHERE ('1116389152' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('1116389152' COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('1116389152' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('1116389152' COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('1116389152' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY ((vt0.c0 IN ()) IN (NULLIF(0x4cf267a7, x'')));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN (NULLIF(0X4cf267a7, x''))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY ((vt0.c0 IN ()) IN (NULLIF(0x4cf267a7, x'')));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN ()) IN (NULLIF(0X4cf267a7, x''))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(vt0.c0 AS BLOB))) ORDER BY ((vt0.c0 IN ()) IN (NULLIF(0x4cf267a7, x'')));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((- (vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0))<((vt0.c0))) IN ())) ORDER BY '</{y' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY '</{y' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0))<((vt0.c0))) IN ())) ORDER BY '</{y' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY '</{y' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0))<((vt0.c0))) IN ())) ORDER BY '</{y' DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE BINARY COLLATE BINARY) ORDER BY (((vt1.c0 IN (vt1.c0, x''))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, (((('2028607640')*(vt1.c0)))IS NOT(((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0, x''))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, (((('2028607640')*(vt1.c0)))IS NOT(((vt1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE BINARY COLLATE BINARY) ORDER BY (((vt1.c0 IN (vt1.c0, x''))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, (((('2028607640')*(vt1.c0)))IS NOT(((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (vt1.c0, x''))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, (((('2028607640')*(vt1.c0)))IS NOT(((vt1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0 COLLATE BINARY COLLATE BINARY) ORDER BY (((vt1.c0 IN (vt1.c0, x''))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST, (((('2028607640')*(vt1.c0)))IS NOT(((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE WHEN NULL THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN NULL THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN NULL THEN (vt1.c0 IN (vt1.c0, vt1.c0)) END);
SELECT ALL * FROM vt0 WHERE ((- (CASE 0Xfe7316c  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE 0xfe7316c  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (CASE 0Xfe7316c  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE 0xfe7316c  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (CASE 0Xfe7316c  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((vt0.c0)GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((vt0.c0)GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY ((vt0.c0)GLOB((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST(x'0be16ab8' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'0be16ab8' AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(x'0be16ab8' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'0be16ab8' AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(x'0be16ab8' AS BLOB));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (x'8f55') AND (vt0.c0)) COLLATE RTRIM) ORDER BY (vt1.c0 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (x'8f55') AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (x'8f55') AND (vt0.c0)) COLLATE RTRIM) ORDER BY (vt1.c0 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (x'8f55') AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c0 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (x'8f55') AND (vt0.c0)) COLLATE RTRIM) ORDER BY (vt1.c0 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT * FROM vt1 WHERE (((CAST('1144596093' AS INTEGER))==(('-1523003870' IN ())))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((CAST('1144596093' AS INTEGER))==(('-1523003870' IN ())))) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC);
SELECT * FROM vt1 WHERE (((CAST('1144596093' AS INTEGER))==(('-1523003870' IN ())))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((CAST('1144596093' AS INTEGER))==(('-1523003870' IN ())))) IS TRUE)  as count FROM vt1 ORDER BY NULL DESC);
SELECT * FROM vt1 WHERE (((CAST('1144596093' AS INTEGER))==(('-1523003870' IN ())))) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(0.6197020773680817 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.6197020773680817 AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(0.6197020773680817 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(0.6197020773680817 AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(0.6197020773680817 AS REAL));
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c0)))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((IFNULL('1743158970', vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE RTRIM)) AND ((vt0.c0, 0.7287977363848589, (vt1.c0 IN ()))))) ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(((vt1.c0)/(vt0.c0)))))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((IFNULL('1743158970', vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE RTRIM)) AND ((vt0.c0, 0.7287977363848589, (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(((vt1.c0)/(vt0.c0)))))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((IFNULL('1743158970', vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE RTRIM)) AND ((vt0.c0, 0.7287977363848589, (vt1.c0 IN ()))))) ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(((vt1.c0)/(vt0.c0)))))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((IFNULL('1743158970', vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE RTRIM)) AND ((vt0.c0, 0.7287977363848589, (vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(((vt1.c0)/(vt0.c0)))))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((IFNULL('1743158970', vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE RTRIM)) AND ((vt0.c0, 0.7287977363848589, (vt1.c0 IN ()))))) ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(vt1.c0 COLLATE RTRIM)))OR((NOT (vt0.c0)))))AND(((vt1.c0)/(vt0.c0)))))OR(vt1.c0))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (vt1.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (vt1.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((~ (vt1.c0)))<(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END)));
SELECT * FROM vt1 INNER JOIN vt0 ON TRIM(vt1.c0) WHERE ((+ (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM(vt1.c0));
SELECT * FROM vt1 INNER JOIN vt0 ON TRIM(vt1.c0) WHERE ((+ (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM(vt1.c0));
SELECT * FROM vt1 INNER JOIN vt0 ON TRIM(vt1.c0) WHERE ((+ (((vt0.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.08696571227956007)) BETWEEN (((vt0.c0) ISNULL)) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, (((CAST(vt0.c0 AS INTEGER), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM))<=(((vt1.c0 IN ()), CAST(vt1.c0 AS REAL), ((vt1.c0)-(vt0.c0))))), ((x'') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.08696571227956007)) BETWEEN (((vt0.c0) ISNULL)) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, (((CAST(vt0.c0 AS INTEGER), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM))<=(((vt1.c0 IN ()), CAST(vt1.c0 AS REAL), ((vt1.c0)-(vt0.c0))))), ((x'') NOT NULL) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.08696571227956007)) BETWEEN (((vt0.c0) ISNULL)) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, (((CAST(vt0.c0 AS INTEGER), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM))<=(((vt1.c0 IN ()), CAST(vt1.c0 AS REAL), ((vt1.c0)-(vt0.c0))))), ((x'') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.08696571227956007)) BETWEEN (((vt0.c0) ISNULL)) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, (((CAST(vt0.c0 AS INTEGER), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM))<=(((vt1.c0 IN ()), CAST(vt1.c0 AS REAL), ((vt1.c0)-(vt0.c0))))), ((x'') NOT NULL) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((~ (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.08696571227956007)) BETWEEN (((vt0.c0) ISNULL)) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, (((CAST(vt0.c0 AS INTEGER), (~ (vt0.c0)), vt0.c0 COLLATE RTRIM))<=(((vt1.c0 IN ()), CAST(vt1.c0 AS REAL), ((vt1.c0)-(vt0.c0))))), ((x'') NOT NULL) DESC;
SELECT * FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE BINARY) ORDER BY CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CAST(-7.1441035E7 AS INTEGER) THEN (((vt1.c0, vt1.c0, x'a2cb')) BETWEEN ((vt1.c0, 0.36636523813399924, vt1.c0)) AND ((x'65e1', vt1.c0, vt1.c0))) ELSE ((vt1.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CAST(-7.1441035E7 AS INTEGER) THEN (((vt1.c0, vt1.c0, x'a2cb')) BETWEEN ((vt1.c0, 0.36636523813399924, vt1.c0)) AND ((x'65e1', vt1.c0, vt1.c0))) ELSE ((vt1.c0) IS FALSE) END);
SELECT * FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE BINARY) ORDER BY CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CAST(-7.1441035E7 AS INTEGER) THEN (((vt1.c0, vt1.c0, x'a2cb')) BETWEEN ((vt1.c0, 0.36636523813399924, vt1.c0)) AND ((x'65e1', vt1.c0, vt1.c0))) ELSE ((vt1.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CAST(-7.1441035E7 AS INTEGER) THEN (((vt1.c0, vt1.c0, x'a2cb')) BETWEEN ((vt1.c0, 0.36636523813399924, vt1.c0)) AND ((x'65e1', vt1.c0, vt1.c0))) ELSE ((vt1.c0) IS FALSE) END);
SELECT * FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE BINARY) ORDER BY CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN CAST(-7.1441035E7 AS INTEGER) THEN (((vt1.c0, vt1.c0, x'a2cb')) BETWEEN ((vt1.c0, 0.36636523813399924, vt1.c0)) AND ((x'65e1', vt1.c0, vt1.c0))) ELSE ((vt1.c0) IS FALSE) END;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1, vt0 WHERE ((((NULL IN (vt0.c0)))*(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY ((((vt1.c0) NOT NULL)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt0.c0)))*(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT NULL)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((NULL IN (vt0.c0)))*(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY ((((vt1.c0) NOT NULL)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt0.c0)))*(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT NULL)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((NULL IN (vt0.c0)))*(((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) ORDER BY ((((vt1.c0) NOT NULL)) IS TRUE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT ((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT ((- (vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((x'' IN ())) ORDER BY CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0, vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 WHEN (((vt1.c0))>=((vt1.c0))) THEN vt1.c0 ELSE ((vt0.c0) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0, vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 WHEN (((vt1.c0))>=((vt1.c0))) THEN vt1.c0 ELSE ((vt0.c0) IS FALSE) END  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((x'' IN ())) ORDER BY CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0, vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 WHEN (((vt1.c0))>=((vt1.c0))) THEN vt1.c0 ELSE ((vt0.c0) IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0, vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 WHEN (((vt1.c0))>=((vt1.c0))) THEN vt1.c0 ELSE ((vt0.c0) IS FALSE) END  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((x'' IN ())) ORDER BY CASE WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN (vt1.c0 IN (vt1.c0, vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 WHEN (((vt1.c0))>=((vt1.c0))) THEN vt1.c0 ELSE ((vt0.c0) IS FALSE) END  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((- (vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((CAST(NULL AS TEXT) IN ())) ORDER BY ((CAST(vt0.c0 AS INTEGER))&(vt0.c0)) ASC, CAST((- (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((CAST(NULL AS TEXT) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS INTEGER))&(vt0.c0)) ASC, CAST((- (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((CAST(NULL AS TEXT) IN ())) ORDER BY ((CAST(vt0.c0 AS INTEGER))&(vt0.c0)) ASC, CAST((- (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((CAST(NULL AS TEXT) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c0 AS INTEGER))&(vt0.c0)) ASC, CAST((- (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((CAST(NULL AS TEXT) IN ())) ORDER BY ((CAST(vt0.c0 AS INTEGER))&(vt0.c0)) ASC, CAST((- (vt0.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)>(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)>(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)>(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0)>(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(((vt1.c0)>>(vt1.c0)))))AND((((((((('now')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN ('') AND (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((CAST(-948717158 AS BLOB))||(vt1.c0))  NULLS LAST, TRIM(DISTINCT (vt1.c0 IN ())) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM)) AND ((((((vt1.c0)AND(x'')))OR(vt1.c0)), '0.014878945667631482', ((vt1.c0)>=(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(((vt1.c0)>>(vt1.c0)))))AND((((((((('now')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN ('') AND (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(-948717158 AS BLOB))||(vt1.c0))  NULLS LAST, TRIM(DISTINCT (vt1.c0 IN ())) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM)) AND ((((((vt1.c0)AND(x'')))OR(vt1.c0)), '0.014878945667631482', ((vt1.c0)>=(x''))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(((vt1.c0)>>(vt1.c0)))))AND((((((((('now')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN ('') AND (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((CAST(-948717158 AS BLOB))||(vt1.c0))  NULLS LAST, TRIM(DISTINCT (vt1.c0 IN ())) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM)) AND ((((((vt1.c0)AND(x'')))OR(vt1.c0)), '0.014878945667631482', ((vt1.c0)>=(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(((vt1.c0)>>(vt1.c0)))))AND((((((((('now')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN ('') AND (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(-948717158 AS BLOB))||(vt1.c0))  NULLS LAST, TRIM(DISTINCT (vt1.c0 IN ())) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM)) AND ((((((vt1.c0)AND(x'')))OR(vt1.c0)), '0.014878945667631482', ((vt1.c0)>=(x''))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(((vt1.c0)>>(vt1.c0)))))AND((((((((('now')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) BETWEEN ('') AND (vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((CAST(-948717158 AS BLOB))||(vt1.c0))  NULLS LAST, TRIM(DISTINCT (vt1.c0 IN ())) DESC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt1.c0 IN ()), ((vt1.c0) NOT NULL), vt1.c0 COLLATE RTRIM)) AND ((((((vt1.c0)AND(x'')))OR(vt1.c0)), '0.014878945667631482', ((vt1.c0)>=(x'')))));
