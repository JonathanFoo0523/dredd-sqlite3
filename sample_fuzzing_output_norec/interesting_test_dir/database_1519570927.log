-- Time: 2024/06/09 03:49:08
-- Database: database27
-- Database version: 3.40.0
-- seed value: 1519570927
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
PRAGMA cell_size_check; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '738587155 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1758864351 sz=738587155 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT NULL) IN (((x'') BETWEEN ('') AND (NULL)), ((x'') NOT BETWEEN (0.33726812095273884) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE LOWER(x''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1758864351 sz=738587155 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('1392632840' IN (-1138774000)) THEN NULL ELSE (((((((('-1758864351')AND(NULL)))AND(0.5625505925932835)))AND(NULL)))AND(0xffffffff9729dc21)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('' IN ())  WHEN (((NULL))>=(('\rp8.k9s'))) THEN ROUND(NULL, 0.5364935136997402) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1138774000'))>=((1041569796))))!=(NULL)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-873758068 sz=-1651681804 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1128460610 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1849558830 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '-1138774000'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1028033214 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-873758068 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (''))) BETWEEN (0.5625505925932835 COLLATE RTRIM) AND ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.5625505925932835 THEN NULL ELSE '' END)-((NULL IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1128460610 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'b896' COLLATE NOCASE)OR('-1203637632' COLLATE RTRIM)))OR((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.24336730248729643)AND(NULL)))OR(0Xffffffffeaf6541f)))AND(((NULL)*(0X521d6635)))))OR(json_extract(NULL, 0.8275942748437247, NULL, '1071303729'))); -- 3ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN 0xffffffffa42d23f1 THEN x'' WHEN x'' THEN NULL WHEN 0.5364935136997402 THEN '' ELSE 0.49948001559407973 END))>=((((0.4104804119518928)>>(''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1028033214 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-305552538'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-417842415 -221155701'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1128460610 sz=1956147967 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1041569796 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN 0.21162310371432191 ELSE 0.24336730248729643 END) NOT BETWEEN ((0.21162310371432191 IN (0.5647264476016527))) AND (((0.4104804119518928) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL, '1849558830', NULL))<=((NULL, x'fd49', NULL)))  WHEN ((('')) BETWEEN ((x'')) AND (('-352955361'))) THEN MIN(x'', '0.33726812095273884') WHEN LIKELY(NULL) THEN CAST('' AS TEXT) WHEN ((('-221155701', -8.73758068E8, '2013174894', -1.540545551E9, x''))<((NULL, '<7', NULL, '-221155701', x''))) THEN (~ (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)LIKE('-1028033214')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS TEXT) AS INTEGER); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1325888623 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=129704115 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1261820794 0 sz=-285975195 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((NULL)OR('-1203637632')))OR('-1325888623')))AND('')))AND(x'4fcb')) THEN (NOT ('')) WHEN CASE x'45b7'  WHEN '-1651681804' THEN '8kQDX/E' WHEN '1377658421' THEN '-631169934' WHEN NULL THEN 0.8275942748437247 WHEN NULL THEN x'' WHEN x'' THEN 0xffffffffbc1fb010 ELSE x'ca8f' END THEN ((x'') IS FALSE) WHEN ((-2099353725)*(0.2840131108614008)) THEN (- (0xffffffffda611c72)) ELSE CASE '?tQ'  WHEN 'aZ)H' THEN NULL WHEN x'' THEN x'' WHEN 0.9994885558304373 THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1254613885 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1531256601 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-994052070 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=301265391'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '738587155 1377658421 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (0.931323645832121) AND ('')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((3.01265391E8) IS FALSE))OR(((301265391)IS NOT(x'')))))OR((('-1203637632') NOTNULL))))OR(('<7' IN ()))))OR((('?tQ')==(NULL)))))AND(NULL COLLATE BINARY)))OR((('0.24336730248729643')<<(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1254613885'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.1309648674786844)GLOB('-1651681804')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1071303729 unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1984543189 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CASE WHEN '' THEN 1e500 WHEN x'8aa429d684705148' THEN 0Xffffffffeaf6541f WHEN '-1802748751' THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR(1003139479)))OR(0Xffffffffbc1fb010)))AND(x'853e')))OR(((NULL) BETWEEN ('-1802748751') AND (1.956147967E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN x'' THEN '-305552538' ELSE 'hO' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '-1495653389'  WHEN 0.07850580685753805 THEN '' ELSE NULL END)AND((((0.8410312626688368))>=(('纎⇓'))))))OR(('' IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x''))<((-1.651681804E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-831586350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1089810486 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT -1970588650))GLOB((('1392632840') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.35393374809879397) NOTNULL) IN ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1700361668'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2051230851 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=161976100'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((7.38587155E8)LIKE(x'e1ee')))>>((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.5625505925932835)||(0.08785262370816638)) THEN CASE NULL  WHEN 0.7188777697725277 THEN x'' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=406857960 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-793785334 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '457477982 sz=1261820794 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2110314600'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ ('n警\k6'))  WHEN (+ ('J')) THEN CASE WHEN x'16e9' THEN 0.5647264476016527 ELSE NULL END WHEN (((0x7649b9d5))<((x'6715'))) THEN (('Q1[婷v(,ꁈ') IS FALSE) WHEN ((x'') ISNULL) THEN '1663815677' COLLATE RTRIM ELSE ((x'')<('1272268170')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1089810486 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE GLOB(CASE ',￿3eta>+l'  WHEN '홹]X!/w' THEN 0.21162310371432191 WHEN ',￿3ETa>+L' THEN NULL WHEN x'52bf' THEN x'' ELSE 0.9949836104340575 END, '-802518170'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2110314600 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.6330708839687735 AS REAL))AND((('뾒k*T(E褶')!=(0.9252211123453916)))))OR(((x'd2bd')>>(NULL)))))OR(((x'') BETWEEN (0.5625505925932835) AND (0.029031226257663634)))))AND(((((-1312360538)OR('2051230851')))OR(0.4217235316887532)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=75203468 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)LIKE((+ (0.5951688186661284)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-589872087 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-793785334 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1002106855 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1956147967 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '438065783 sz=-1122244028'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1775823825 1155796711 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=75203468 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1651681804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((3.01265391E8)AND('-305538596')))AND(0.13387723830279008)))OR('-2135089227')))OR(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==(NULL))) BETWEEN (0.5162118348966003) AND (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)*('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1068139213 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '530564516 0 sz=-352955361 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('652592908' AS REAL), (NOT ('Mv?{}K7P')), 0.270409292048721 COLLATE BINARY, ((((NULL)OR(NULL)))OR(x'')), (NOT (''))))>((CASE WHEN '1045685271' THEN NULL ELSE 0.08785262370816638 END, ((('<㐖'))>=((252390119))), (NOT (0X184028e8)), CAST('' AS BLOB), (((0.5162118348966003)) NOT BETWEEN (('uS')) AND ((1948150465)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-400273018 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=26057204 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-529996192 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-473582161 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2003286756 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5119919354198766)=(x'003d')) IN (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.029031226257663634; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-873758068 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN 1971702166 END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2 sz=-589872087'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS(''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN x'' THEN 0Xffffffff82de6783 ELSE '0.08785262370816638' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'5927', 0x3bcab197)) NOT BETWEEN (((('') ISNULL), NULL, (('1948150465')<=(NULL)))) AND ((((-2078382383) BETWEEN (NULL) AND (NULL)), CAST(1956147967 AS TEXT), ((NULL) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1984543189 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE BINARY)OR(((('0.9994885558304373', NULL, 0Xffffffffe068e660))<=((2.013174894E9, 0.7175624669050927, x''))))))AND(((0.8837619256736966)%('')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '26057204'  WHEN NULL THEN x'' WHEN '457477982' THEN -1.495653389E9 WHEN '[]' THEN NULL ELSE '2004281943' END COLLATE RTRIM COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS NUMERIC), ((-1138774000) NOT BETWEEN ('524467781') AND (0.2121183146527621)), ((x'')||(x''))))<=((('1461167245' IN (0.371489451424204)), CAST(x'' AS INTEGER), (x'14268689' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1496877243 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '558429597 sz=-1423859636 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '137753563 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1122244028 0 sz=-919499384 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-285975195 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1888244277 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((0.337492488587223) NOT BETWEEN ('2004281943') AND (0.9051209945304559))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-678111552 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode((('0.35393374809879397')<=(x'')), PRINTF('5')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=1575651887 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1943698496 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1071303729')>('-1004929010')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1267212571'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '438065783 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1028033214)+('1086711656')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (0.5951688186661284)) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1731862120'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1759998183 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=581645923 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1802993562 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((~ ('1663815677'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('-20982323' IN (x'', 0.931323645832121)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-601919066 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=524467781 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1465732766 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=530564516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1266878383 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(UNICODE(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN (('|(')) AND ((x''))))LIKE((((x'', NULL, '380640455', NULL, x'b830fa60')) NOT BETWEEN ((x'', 408750633, '495719754', '0.337492488587223', NULL)) AND ((x'3eb5', '-919499384', x'3c1e', '0.6330708839687735', 'l'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1277830958'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('301265391' IN ()))/((0X670a6634 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((x'' IN (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1513077781' IN ()))|('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('Fw')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1365327145 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=259402045 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1700361668 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '6 sz=-365586766 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2016200119 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6330708839687735) BETWEEN (NULL) AND (0.8318425286115918)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1188488230 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(((x'') IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1884527850'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-932037333 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('宆n塤''') IS TRUE))AND(((((x'')OR(NULL)))OR(NULL)))))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (-2.078382383E9)))AND((('') IS FALSE))))OR(LIKELY(DISTINCT 0.5924334601285519))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'', '')) BETWEEN ((CASE WHEN '-1815298209' THEN NULL END, (NOT ('530564516')), '8M2稩f&iIߑ' COLLATE NOCASE)) AND ((((1.041569796E9) BETWEEN (NULL) AND (NULL)), (NOT (0.8258440802131808)), CAST(0.329037588095469 AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1377658421 sz=-305552538 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=2013174894 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1213351908'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1009568175 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1569469886 sz=1292514959 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))>(CASE WHEN 0xfffffffff48480c7 THEN 0.5514864359444047 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=579212060 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.775823825E9 IN (x'')))IS NOT(((0xffffffff82138bf7) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-793785334 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1886144717 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-601919066 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1744466337 sz=1559507335 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 1602586394 sz=275561091 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '286311920 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=599511791 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-797215894'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-285975195 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.18189319106742274)|(NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1971702166 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2033035341 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1474636551'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 -831586350 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=850169353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)|(x'2ae9')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-101417008 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('')OR(0xbe40d09)))OR(NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-253159651 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-305552538 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8258440802131808 AS REAL))>=(COALESCE(0.7188777697725277, 0x1a1c5a77))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.371489451424204) BETWEEN (-196428459) AND ('nl\k6')))||((x'ff0d' IN (x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1764317786 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2072757235 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2060491192 sz=111506245 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1047584713 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))|(CAST('1441802635' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1807097686 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '12715126 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')||(NULL)), ((((((((0.00884008564686567)OR(NULL)))AND('0.18189319106742274')))OR(NULL)))OR(NULL)), ((((-2077737751)OR(x'')))AND(x''))))!=(((- (0.9851719983243838)), SQLITE_VERSION(), (0.4628019357696227 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1575651887'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1956500643 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=119279473 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2004281943'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-3.05538596E8)%(NULL)))GLOB(CAST(0x4b35db7a AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.020404640781379824 COLLATE NOCASE)OR((((0.2121183146527621)) BETWEEN ((0.9577483116177726)) AND (('524467781'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.4146516823864602)AND(0.6895726382383519)))OR(0.5064332358096565)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(((NULL)%(0.6330708839687735)), ((2.52390119E8)>>(0.6147915448775351)), CAST(0.8559569471266368 AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=147014700 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2092476625 sz=-1458609176 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1783367211 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1884019131 4 sz=-956407695 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-1703283190) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-2050355198 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1392632840 sz=161976100'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-1267212571 COLLATE RTRIM IN (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1977340054167569; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1933950866 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1676231074 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=457477982 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1460173687 COLLATE NOCASE)>((('6,AVV/') BETWEEN (1861033471) AND (0x1e4f43a7)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<=((x''))))|((+ (0.7173342448343214)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1118921866 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-576182251 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '794341292 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) ISNULL))OR((((NULL, 'F_₌\ri~de', -1440390684, x'', NULL))>((1775823825, 'YI', 0xffffffffc2b97542, 0x208f4ffe, 'ὕﳍ'))))))AND((NOT (x'3d47')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'ac70416a' AS NUMERIC) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=581645923 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')!=('2003286756')) THEN ((NULL) NOT BETWEEN (x'c7ff') AND (0.0)) ELSE ((0.7921484482348151) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9095278442351975 COLLATE NOCASE)<=((('ὕﳍ')/(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((-1807097686))==((x''))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((MAX(0.883824966684384, -1.138774E9))=(-1266878383)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('941540359' AS REAL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-802518170 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x5301e408)|('')))IS(CASE WHEN '' THEN x'' ELSE 0.25193957600752703 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1071303729 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)=(-1.700361668E9))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1128460610 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1495653389'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1966673287 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'b528' COLLATE NOCASE) BETWEEN (x'' COLLATE BINARY) AND (((((-1.495653389E9)AND(NULL)))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1497041249 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1905130864'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0X1ee01274 COLLATE BINARY THEN (((('457477982')OR(NULL)))AND(x'')) ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (TRIM(x'', 'y_ꜥt9'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-80997280'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1531256601 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1300271016 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'86b9'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-802518170' IN ())) NOT BETWEEN (((NULL)>=(0.8700504550870853))) AND (CASE 'r30'  WHEN '-1970588650' THEN 2036387813 ELSE '骫Q-' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', 1.045685271E9, 'U42&E', '0.9994885558304373', 0.7765259912052112)) BETWEEN ((SQLITE_COMPILEOPTION_GET(''), ((NULL)<<(0X7696d133)), ((0.16696477938974008)IS('1003139479')), ((0Xffffffffb89b6c0a) NOT BETWEEN ('-1830943006') AND (x'17f7')), ((NULL) IS FALSE))) AND (((('1731862120')>(x'')), ((x'') BETWEEN (NULL) AND (x'')), (x'' IN ()), ((x'') NOT BETWEEN (0.2389400904597757) AND (0.8927226091500693)), (- (1.948150465E9))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)<=(x'a042')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1122244028'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1204501225 COLLATE NOCASE AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'd121' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=744000763'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN x'' THEN NULL ELSE 'zDk' END))>=((CAST(NULL AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-793785334', 'J', x'')) BETWEEN ((-3.05538596E8, NULL, NULL)) AND (('[]', '3N', ',/}신|E1Vl'))))AND(((((((((1.663815677E9)AND(x'5b61')))AND(NULL)))AND(5.58429597E8)))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=566704092 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5898699326772004 AS REAL)) NOT BETWEEN (highlight(0.4760383478155078, 0xffffffffbbde45a9, '', 'L1f')) AND (((x'1cd9')<('-1775379968')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.7399507816169697, NULL, NULL))>=((0X26d24a21, 0.9188027690490932, 0x1f6b3339))))OR((('-1354066103') NOT BETWEEN (x'96a8') AND (x'')))))OR(CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1076568704'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -5.89872087E8  WHEN 0.5077177389590999 THEN 0.8072453144302777 ELSE x'ae92' END)*(0.05022025740507807 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.9577483116177726 IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=741164064 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'75b9') NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-147319429 -611846266 sz=1437718137 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('_E4o') NOTNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 9223372036854775807 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=824231546'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1041569796 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1700361668 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-391824414'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1849558830 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1807042014 sz=980108195'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(('809829919' IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '' THEN '' WHEN 0.8275942748437247 THEN x'' WHEN '1956147967' THEN NULL ELSE '2103907607' END THEN CAST(0.7934755448371522 AS BLOB) WHEN TYPEOF(DISTINCT NULL) THEN CASE WHEN 0Xffffffffa42d23f1 THEN x'' END WHEN QUOTE(x'') THEN (- ('-1818589158')) WHEN (('amvL{wC*')OR(NULL)) THEN (NULL IN (x'')) WHEN CAST(x'9e61' AS NUMERIC) THEN ((x'd974')>=('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT ('8kQDX/E')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=840206646 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1499129824 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LIKELIHOOD(DISTINCT x'', 0.0048459748139989545), load_extension(x''), SQLITE_COMPILEOPTION_GET('-952620940')))=((((0.7158810753033039) IS TRUE), CASE 0.5364935136997402  WHEN x'a203' THEN 0.4628019357696227 WHEN 0.4286183097978886 THEN '1189705878' WHEN NULL THEN 0X4f656404 END, (+ ('ᡋ+'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '581645923 sz=344959206'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((('-721540665')GLOB(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1377658421 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2 sz=-678111552 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) ISNULL)  WHEN ('1213034492' IN ()) THEN ((']%1n&eo') NOT NULL) WHEN (('-793785334') NOTNULL) THEN ((NULL) BETWEEN (NULL) AND (0.8927226091500693)) WHEN (('')!=(x'')) THEN ((0.4760383478155078)<=(0.8546058611058762)) ELSE (('{EuLO')<>(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1227980671 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'5455') IS TRUE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('757496985')IS NOT(0.3822794874949581)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1553200723 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-221155701 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2110314600 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '904852922 sz=-1254613885 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '0.4628019357696227' THEN (NOT (NULL)) ELSE (0.8077994835318556 IN (0.09358423286278494)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')OR(x'')))AND(x'78cb')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=336609'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=832311336 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1059552734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5431914909476508)>=(NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-122041244 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1981939849 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1301113652')>(x'ed1a')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0Xfffffffff9a52b7f IN ()) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=446652010 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.9690218828471873  WHEN 0.4076182407290476 THEN x'' WHEN NULL THEN '1437718137' WHEN '-1094922011' THEN '-1536357222' END)<=(CASE '546441169'  WHEN '-899615562' THEN '>D' WHEN NULL THEN x'' WHEN x'' THEN 0.5813673041341739 END)); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 0 sz=-417842415'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-221155701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1893760606 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1461167245 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1155796711 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1895295222 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2110314600 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1898303008'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('995411320')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=701796831 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'6d81eb49' COLLATE RTRIM)%(CAST(0.022523647461544227 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '811757916 -1855506330 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS FALSE)  WHEN CASE 0.6567164282359412  WHEN 0.11883952116831009 THEN NULL WHEN NULL THEN '-1267212571' WHEN NULL THEN '1002726875' END THEN ((0.129992980197713)/('')) ELSE UNLIKELY(DISTINCT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1802993562 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '26057204 -601919066 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1122244028 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'a40b' THEN NULL END)OR(UPPER(DISTINCT 0.5119919354198766))))AND(((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '161976100 sz=-1266878383'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-285975195 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-361370351 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 947057088 sz=1575651887 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('7H') ISNULL))>>(CAST(0x25a7df99 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 'lx.⼽q?nZ5' THEN NULL ELSE NULL END)>=(((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1357309843 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-529996192 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1377658421 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1495653389 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1877082389'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1002106855 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN '-17304694' THEN NULL WHEN '' THEN 'ὕﳍ' WHEN 0.958949856555679 THEN '-1028033214' END THEN x'' ELSE (((x'd661d984'))!=((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-536622488 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-488293523'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-851430107 sz=1942290011 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2108473969 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'3167') IS FALSE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-85099986 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1985878467 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2003165052 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-305538596 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=652592908'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1398916399 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1071303729 sz=-865654844 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1048021995 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-2110314600 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=652592908 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-231161351'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff85a9a048) NOTNULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-763537177 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 652592908 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1045685271 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1933950866', '-1293330535', 'Jt0g*0&p5')) NOT BETWEEN (('161976100', NULL, x'')) AND ((1385457989, NULL, ''))))==((('')IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7910644296775895)|(-473582161)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-735726300'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=806930282 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2118593300 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1854206076 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LOWER(DISTINCT 0.582425431117459) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1597890575 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-354588100 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-582645127'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.64698402838371)IS NOT('*i')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1771188401 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('nOSnFgwK' COLLATE BINARY)*(CASE WHEN NULL THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL END) BETWEEN (CASE 'ir앓'  WHEN x'a895' THEN -1763942799 END) AND ((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'eb38')GLOB('-677311764')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (NULL))))<=((((x'') NOT BETWEEN ('558429597') AND (0.7349085588189963))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((((x'')) NOT BETWEEN ((0.11585865404278528)) AND ((0.5431914909476508))), json_array(0.9077907404694525, -1.807097686E9)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1786032160 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('Jt0g*0&p5' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELIHOOD(NULL, 0.7349023571053597) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=530564516 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1849558830 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-134315720 1308314486 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '738587155 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=595798010 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 0 sz=-305538596 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-417842415'))<((''))))!=(CASE 0.7349085588189963  WHEN NULL THEN x'9820' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=396726239 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1152876581 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -732381938 sz=-1660793479 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-51966421'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.844838451953555)AND(0.3688444501767829)))AND(x'b9ca')))AND(NULL)))OR('1437718137'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1603025412 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-699243230 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT json_array(NULL, x'063d', ',￿3ETA>+L', NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=738587155 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1265953698') NOT BETWEEN (NULL) AND ('1518361242')))OR(COALESCE(DISTINCT x'b73151cf', '1068139213'))))OR((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '{Y᠄qE'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1267212571 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)) BETWEEN ((NULL)) AND ((0.751014490221081))))OR(CASE 0.5210508770844892  WHEN 0Xffffffffbd1bea44 THEN 0.09358423286278494 WHEN x'' THEN x'02d1' WHEN 7.38587155E8 THEN '1437718137' END)))OR(CASE NULL  WHEN 0.9988137333815518 THEN '0.7765259912052112' ELSE '-1998842615' END)))AND(((0.8077994835318556) IS FALSE))))OR((+ (0.8103362957059572)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1651681804 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('%0%\')LIKE(NULL)))AND(((-959802989) BETWEEN (x'b8f57117') AND (0.8090144081270172)))))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=1261820794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1986942991 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 143300194 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2013174894)==(0.9551570448734071)))!=(((x'')=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1877703754 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-351471842 1389381154 sz=-1758864351'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-76383948'  WHEN (('-234178889') NOTNULL) THEN CAST('\n-Kpz' AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=2103941734 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-660510417'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2112450306 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((x'') NOTNULL), ((((x'')OR(x'4128')))OR('2Jzp8	'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.377658421E9 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1631871864 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1112027209 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((')Y5㬑W}yR7')*(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1392632840' COLLATE BINARY) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '-1266878383'  WHEN 0.7410769146278687 THEN NULL WHEN 0.8744685624415408 THEN '' WHEN '1459755357' THEN x'' END)OR(0X23a1c740 COLLATE NOCASE)))OR(CAST('1580849120' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5139336983923071)AND(0Xffffffff8e520690)))OR(x''))) BETWEEN ((('E{')LIKE(x'b6e1'))) AND (((((0.6314048330071269)AND(-2.135089227E9)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(NULL, x'', NULL, x'') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.6330708839687735 THEN ((NULL)<>(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '438065783 0 sz=1683231104'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((RTRIM('1132615265')) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1535669746 sz=1229441370 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR('137753563'))))<((UNICODE(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('>d')) BETWEEN (((('	嗴YNWo') BETWEEN (1.84955883E9) AND ('!lWg,v {}B')))) AND ((((x'')GLOB(-1.028033214E9))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('ho' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1802748751')OR(x''))  WHEN (~ (NULL)) THEN ((x'') IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=269316544 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1312360538 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8236870539716419)&(0xffffffffb4773558)))IS((('-7f_X') NOT BETWEEN (0.15341613838049073) AND (-2.0982323E7)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1531256601 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('渆J' COLLATE NOCASE) NOT BETWEEN ((~ ('0.1309648674786844'))) AND ((('-678111552')GLOB('-2095437986')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')%(0.582425431117459))))<((((0.2976172120353767) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=967556185'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1581388352 sz=-468356898 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -919499384 sz=-983840919'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1004929010 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'')-(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('Rx' IN ()))AND((NOT (x'')))))OR(((('-2033955172'))=((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=137753563 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=714904620'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1138774000 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=905595305'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1337613101 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<>((0xffffffffe2eb9b80))))/(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=26057204 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=209501159 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1554946766 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'')OR(NULL)))OR('ou')))AND(NULL)))AND('1086711656')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(x'', 0.6742049246429419) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9335524659646306)IS((('0.337492488587223') NOT BETWEEN ('VtY*8J!^') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1254613885 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=843553179 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1966104049 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=693498798 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2018740417 sz=1003139479'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2100694037506723) NOT BETWEEN (NULL) AND ((- ('0.8927226091500693')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1737248070 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-619034003 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('oM') IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9978')AND(x'')))OR('-1122244028')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((NULL)) AND ((x''))))>>(((0x78a179c9) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=186759198 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1254613885 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1028033214 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)IS(0.2748623303986648)))AND(CAST('-1758864351' AS BLOB))))OR((((NULL)) NOT BETWEEN (('1041569796')) AND ((x'c882'))))))OR(CAST(0.24070571108519623 AS NUMERIC))))OR((('472999261') BETWEEN (0xffffffffa9442022) AND (0Xffffffff9aa68a3c)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-631169934 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1904952175 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1261820794 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -168891452 sz=1272268170 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE BINARY THEN CAST(NULL AS BLOB) ELSE (NULL IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-263531335 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1074902 sz=1984543189 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS BLOB)  WHEN (~ ('1759998183')) THEN (NOT (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('5') BETWEEN (NULL) AND ('-919499384')))>>(((NULL) BETWEEN (0.26339798104727663) AND (0.08309610551072877)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1888244277'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1373385897 sz=1557091823'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '738587155 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'7c9d' THEN 0.8091495302459233 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (NULL, 0Xffffffffc9318d88)))>(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '125479913 sz=1849558830 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE -1.700361668E9  WHEN 0.5431914909476508 THEN 0.751842826789318 END  WHEN x'' COLLATE BINARY THEN ((-221155701)-(0.21888478132938183)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1151934118 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1406733920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=834953072 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('Ff', 0.30834239665017604, 0X2984c98a))<=((NULL, NULL, 0.09630180500254104))))|((('O ') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1851054733 sz=-285975195 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=124726513 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-9223372036854775808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE NULL  WHEN '-1860682381' THEN NULL WHEN '^\n' THEN NULL WHEN NULL THEN '떯烧r?\3i' ELSE 0.6267137553197694 END)AND(((((0.8139313786850312)AND('-1309970838')))OR(x'')))))AND(((('0.5514864359444047', x'', NULL)) NOT BETWEEN ((NULL, x'', '-37166218')) AND ((NULL, x'53b9', x''))))))AND(CAST(NULL AS NUMERIC))))AND((('''')<>(-1.465732766E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (NULL))  WHEN (- (NULL)) THEN SUBSTR(NULL, 0.9742663638440701) WHEN CASE WHEN x'' THEN 0xfffffffffebfd5cd ELSE NULL END THEN json_array('0.4076182407290476', -1.203637632E9) WHEN (-3.05552538E8 IN ()) THEN CASE WHEN NULL THEN NULL ELSE 0.4080703032607387 END ELSE CASE NULL  WHEN 0Xffffffff9772003e THEN NULL WHEN 'Jt0g*0&p5' THEN NULL WHEN 0xffffffffc2b59c18 THEN x'' END END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1004929010 sz=2136386094'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2030210567 2 sz=-873758068 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2073858805'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1853289051'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1605534476'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1849558830'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1758864351 129704115 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'd0db')))IS NOT(CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.580430952370802)<=(NULL)))OR(((NULL) NOT BETWEEN (2003286756) AND (NULL)))))OR('-232532621')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1117038481 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(JULIANDAY(NULL, '-853815921', 'B/'))))AND((NULL IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-678111552 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('1634462304')/(0.5159344524416851)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN -1.7976931348623157E308 THEN 0.7849264215629508 ELSE -637399623 END)AND(CAST(x'7d0e' AS TEXT))))OR('')))OR((((((((('')OR(0.17320143020593204)))OR(x'')))OR('5L畂')))OR('525795317')))))OR(CAST(x'' AS INTEGER))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 713196071; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((rtreenode(x'98a1', 0.64698402838371)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(NULL, ''))||((('1K*ad') NOT BETWEEN (NULL) AND ('-1267212571')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1731862120 IN ('-1680420573')))IS((- ('2051230851')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('%Wof\rkQK')) COLLATE RTRIM COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) BETWEEN ((('1971702166')IS NOT(550259551))) AND (((((NULL)OR(x'')))AND('738587155')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<=(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '928984085 sz=-1266878383 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('>Vz￿OwP*') IS TRUE) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-305552538'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.6835778778693654)AND(x'0778a5c5')))OR(NULL)))AND('Nc*w')))AND(NULL)) IN ((('252390119')IS('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8508305573433861; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(4.57477982E8)))AND('8kQDX/E'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1267212571)) NOT BETWEEN ((x'')) AND ((0.33115297912964503))))IS NOT(((((0.16332534760459982)AND(x'')))OR('On')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT NULL) IN (0xffffffffe7183b11 COLLATE RTRIM, LIKELY(DISTINCT x'bc59'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1164236942 0 sz=524467781 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-723371971 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1933950866 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((0.9530167405230665) BETWEEN (NULL) AND ('2Jzp8	'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1033237308 sz=-402724718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2135089227 sz=75203468 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE 0.38305329818878797  WHEN NULL THEN x'' WHEN x'' THEN NULL WHEN x'' THEN NULL WHEN x'e754' THEN NULL WHEN NULL THEN NULL ELSE '-402931414' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1684136541 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('TRUE' COLLATE NOCASE)GLOB(CAST('-1114260860' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=819250241'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1312360538 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1958103588 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(DISTINCT NULL) IN (((NULL)-(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('P5' IN ()) IN (((((((((x'9629')OR('Tw')))OR(-529996192)))OR(x'65c1')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-992351338 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1392632840 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1045685271 -683731722 sz=-1476401724 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1722071671 0 sz=1563263403'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=246247280'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))*(CAST(x'' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1802748751 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 253342603'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
INSERT OR FAIL INTO rt0 VALUES (0.39005029882074005, NULL, x'c814'); -- 4ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES ('᣾]y}>BdU\n'), (-1.028033214E9), (NULL); -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES (x'', '1699788370', 0.5647264476016527); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (0.3359721927478537, 0.03283070299157598); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0) VALUES (NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('-688239568'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.5460982006190258, 0x2df47974); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-558311841 unordered'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES ('z,L3*O/!E'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, 0.8260091392875002); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('', 1726074368); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (1.984543189E9); -- 6ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('h7/>ࣚ刵', 0.9551570448734071, x''), (-1409242239, x'', 0x64541b78), (x'4843', x'', '*'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES (0.5857365722643826, NULL), (x'6ece', '522851327'), (0.42291264560217645, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL), ('{Y᠄qE'), ('-2052480952'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (0.5210508770844892, 0.5210508770844892); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('-1312360538', ''), (NULL, x''), (x'bbc2', '-1'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES ('-2099353725'), (x'4617d2bd'), (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (NULL, 0.7910644296775895, 0.33726812095273884); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.7818312201247083, 0xffffffff939bf533); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('1795631293'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (x'347b', NULL, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0, c2) VALUES ('836727186', NULL, x'885e'), (NULL, 0.74188701619663, 0.5970857707030873), (0x39c1826e, 'uS', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.8103362957059572, '''<f'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ABORT rt0 SET c1=x'', c1='252390119'; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'', c0='303996550' WHERE CAST(((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) AS BLOB); -- 0ms;
CREATE TEMP TABLE t0 (c0 INT ); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 BEFORE UPDATE OF c0 ON t0 WHEN '43' BEGIN SELECT RAISE(IGNORE);UPDATE OR IGNORE t0 SET c0=NULL, c0=x'' WHERE ((((t0.c0)==(t0.c0)))IS(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))));END; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
ANALYZE rt0; -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0.33726812095273884); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0.5528879932967569, 0.8968047074093697), (x'', 'e䨸'), (x'', x'3454'); -- 1ms;
ANALYZE main; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c0=NULL; -- 1ms;
ANALYZE t0; -- 1ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=x'43e0' WHERE t0.c0; -- 0ms;
PRAGMA main.journal_mode = WAL; -- 4ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0Xffffffff9d019b5e), (x''), (NULL); -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
DROP TABLE rt0; -- 1ms;
INSERT OR REPLACE INTO t0 VALUES (0.5077177389590999); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x'11d5'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0xffffffffaa9e2e0d); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2, c2, c1)=('', 1653684959, x'02f2') WHERE ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))>>((- (rt0.c0)))); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE t0 SET (c0)=(x'8b1b'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't0', ' unordered noskipscan'); -- 0ms;
REINDEX  rt0; -- 0ms;
CREATE INDEX IF NOT EXISTS i58 ON t0(((NULL) IS FALSE) ASC); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('?tQ'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1637028199') WHERE (((t0.c0 IN (t0.c0)))+((t0.c0 IN ()))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(((rt0.c0)OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c0)OR(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(((rt0.c0)OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c0)OR(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(((rt0.c0)OR(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY CASE -1.203637632E9  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE -1.203637632E9  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY CASE -1.203637632E9  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE -1.203637632E9  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY CASE -1.203637632E9  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))=(((((rt0.c1))=((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))=(((((rt0.c1))==((rt0.c2))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))=(((((rt0.c1))=((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))=(((((rt0.c1))==((rt0.c2))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))=(((((rt0.c1))=((rt0.c2)))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<=((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<=((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))<=((t0.c0)))) NOT NULL));
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (-1758864351);
SELECT SUM(count) FROM (SELECT ALL ((-1758864351) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (-1758864351);
SELECT SUM(count) FROM (SELECT ALL ((-1758864351) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (-1758864351);
SELECT ALL * FROM rt0, t0 WHERE (NULLIF(DISTINCT (rt0.c1 IN (rt0.c0)), LIKELY(rt0.c1))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN LIKELY(DISTINCT rt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (rt0.c1 IN (rt0.c0)), LIKELY(rt0.c1))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (t0.c0 IN ()) THEN LIKELY(DISTINCT rt0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (NULLIF(DISTINCT (rt0.c1 IN (rt0.c0)), LIKELY(rt0.c1))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN LIKELY(DISTINCT rt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (rt0.c1 IN (rt0.c0)), LIKELY(rt0.c1))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (t0.c0 IN ()) THEN LIKELY(DISTINCT rt0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (NULLIF(DISTINCT (rt0.c1 IN (rt0.c0)), LIKELY(rt0.c1))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN LIKELY(DISTINCT rt0.c0) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON '810426328' WHERE ((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0))))==((((((((((0.6525854062407687)OR(rt0.c1)))OR(rt0.c2)))OR('q''')))AND(t0.c0)))))) ORDER BY (~ (((rt0.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0))))=((((((((((0.6525854062407687)OR(rt0.c1)))OR(rt0.c2)))OR('q''')))AND(t0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON '810426328' ORDER BY (~ (((rt0.c1) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON '810426328' WHERE ((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0))))==((((((((((0.6525854062407687)OR(rt0.c1)))OR(rt0.c2)))OR('q''')))AND(t0.c0)))))) ORDER BY (~ (((rt0.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0))))=((((((((((0.6525854062407687)OR(rt0.c1)))OR(rt0.c2)))OR('q''')))AND(t0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON '810426328' ORDER BY (~ (((rt0.c1) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON '810426328' WHERE ((((((((rt0.c2)OR(rt0.c0)))AND(t0.c0))))==((((((((((0.6525854062407687)OR(rt0.c1)))OR(rt0.c2)))OR('q''')))AND(t0.c0)))))) ORDER BY (~ (((rt0.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE (NOT (rt0.c2))  WHEN CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN INSTR(rt0.c1, t0.c0) WHEN rt0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) END) ORDER BY (((- (t0.c0)))%(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c2))  WHEN CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN INSTR(rt0.c1, t0.c0) WHEN rt0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((- (t0.c0)))%(rt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE (NOT (rt0.c2))  WHEN CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN INSTR(rt0.c1, t0.c0) WHEN rt0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) END) ORDER BY (((- (t0.c0)))%(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (rt0.c2))  WHEN CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN INSTR(rt0.c1, t0.c0) WHEN rt0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((- (t0.c0)))%(rt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE (NOT (rt0.c2))  WHEN CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN NULL THEN INSTR(rt0.c1, t0.c0) WHEN rt0.c0 THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) END) ORDER BY (((- (t0.c0)))%(rt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) ISNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c0)))AND(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY NULL DESC);
SELECT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) ISNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c0)))AND(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY NULL DESC);
SELECT * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0))) ISNULL)) ORDER BY NULL DESC;
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) ORDER BY rt0.c2 COLLATE RTRIM ASC  NULLS LAST, (('0.7399507816169697') BETWEEN (CASE rt0.c0  WHEN 0.5612491596699385 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c1)) BETWEEN ((0.49546383376791403)) AND ((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE RTRIM ASC  NULLS LAST, (('0.7399507816169697') BETWEEN (CASE rt0.c0  WHEN 0.5612491596699385 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c1)) BETWEEN ((0.49546383376791403)) AND ((rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) ORDER BY rt0.c2 COLLATE RTRIM ASC  NULLS LAST, (('0.7399507816169697') BETWEEN (CASE rt0.c0  WHEN 0.5612491596699385 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c1)) BETWEEN ((0.49546383376791403)) AND ((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE RTRIM ASC  NULLS LAST, (('0.7399507816169697') BETWEEN (CASE rt0.c0  WHEN 0.5612491596699385 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c1)) BETWEEN ((0.49546383376791403)) AND ((rt0.c0))))) DESC);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC)) ORDER BY rt0.c2 COLLATE RTRIM ASC  NULLS LAST, (('0.7399507816169697') BETWEEN (CASE rt0.c0  WHEN 0.5612491596699385 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c1)) BETWEEN ((0.49546383376791403)) AND ((rt0.c0))))) DESC;
SELECT ALL * FROM t0 WHERE (CASE TRIM(DISTINCT t0.c0, t0.c0)  WHEN (+ (t0.c0)) THEN t0.c0 ELSE UNICODE('1325161248') END) ORDER BY ((t0.c0)<((- (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT t0.c0, t0.c0)  WHEN (+ (t0.c0)) THEN t0.c0 ELSE UNICODE('1325161248') END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)<((- (t0.c0)))));
SELECT ALL * FROM t0 WHERE (CASE TRIM(DISTINCT t0.c0, t0.c0)  WHEN (+ (t0.c0)) THEN t0.c0 ELSE UNICODE('1325161248') END) ORDER BY ((t0.c0)<((- (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE TRIM(DISTINCT t0.c0, t0.c0)  WHEN (+ (t0.c0)) THEN t0.c0 ELSE UNICODE('1325161248') END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)<((- (t0.c0)))));
SELECT ALL * FROM t0 WHERE (CASE TRIM(DISTINCT t0.c0, t0.c0)  WHEN (+ (t0.c0)) THEN t0.c0 ELSE UNICODE('1325161248') END) ORDER BY ((t0.c0)<((- (t0.c0))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((-2.078382383E9, rt0.c2, t0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((-2.078382383E9, rt0.c2, t0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((-2.078382383E9, rt0.c2, t0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((-2.078382383E9, rt0.c2, t0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((-2.078382383E9, rt0.c2, t0.c0))) AS BLOB));
SELECT ALL * FROM t0, rt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(NULL AS TEXT));
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))>((~ (NULL))))) ORDER BY '-2078382383', NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))>((~ (NULL))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY '-2078382383', NULL  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))>((~ (NULL))))) ORDER BY '-2078382383', NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))>((~ (NULL))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY '-2078382383', NULL  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))>((~ (NULL))))) ORDER BY '-2078382383', NULL  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((-1.325888623E9)) AND ((LIKELY(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((-1.325888623E9)) AND ((LIKELY(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((-1.325888623E9)) AND ((LIKELY(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((-1.325888623E9)) AND ((LIKELY(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((-1.325888623E9)) AND ((LIKELY(t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 WHERE ((((+ (t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ORDER BY t0.c0;
SELECT ALL * FROM t0 INNER JOIN rt0 ON json(((rt0.c2)GLOB(rt0.c1))) WHERE (CASE ((rt0.c2)/(t0.c0))  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)LIKE(((t0.c0) ISNULL))) ASC  NULLS LAST, ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c1)IS(rt0.c2))) AND ((NOT (0.9551570448734071))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)/(t0.c0))  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON json(((rt0.c2)GLOB(rt0.c1))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)LIKE(((t0.c0) ISNULL))) ASC  NULLS LAST, ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c1)IS(rt0.c2))) AND ((NOT (0.9551570448734071)))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON json(((rt0.c2)GLOB(rt0.c1))) WHERE (CASE ((rt0.c2)/(t0.c0))  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)LIKE(((t0.c0) ISNULL))) ASC  NULLS LAST, ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c1)IS(rt0.c2))) AND ((NOT (0.9551570448734071))));
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)/(t0.c0))  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON json(((rt0.c2)GLOB(rt0.c1))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)LIKE(((t0.c0) ISNULL))) ASC  NULLS LAST, ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c1)IS(rt0.c2))) AND ((NOT (0.9551570448734071)))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON json(((rt0.c2)GLOB(rt0.c1))) WHERE (CASE ((rt0.c2)/(t0.c0))  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) END) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)LIKE(((t0.c0) ISNULL))) ASC  NULLS LAST, ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((rt0.c1)IS(rt0.c2))) AND ((NOT (0.9551570448734071))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (((NULL)&(rt0.c0))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.38360388006042)) IN ());
SELECT SUM(count) FROM (SELECT (((~ (((NULL)&(rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.38360388006042)) IN ()));
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (((NULL)&(rt0.c0))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.38360388006042)) IN ());
SELECT SUM(count) FROM (SELECT (((~ (((NULL)&(rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.38360388006042)) IN ()));
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (((NULL)&(rt0.c0))))) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.38360388006042)) IN ());
SELECT ALL * FROM t0 WHERE (-43079036);
SELECT SUM(count) FROM (SELECT ((-43079036) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (-43079036);
SELECT SUM(count) FROM (SELECT ((-43079036) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (-43079036);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((NULL) NOTNULL) IN ())) ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (t0.c0)))) AND ((((0.23109781936740348)*(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (t0.c0)))) AND ((((0.23109781936740348)*(rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((NULL) NOTNULL) IN ())) ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (t0.c0)))) AND ((((0.23109781936740348)*(rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOTNULL) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (t0.c0)))) AND ((((0.23109781936740348)*(rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((NULL) NOTNULL) IN ())) ORDER BY (((rt0.c1)) NOT BETWEEN (((~ (t0.c0)))) AND ((((0.23109781936740348)*(rt0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) ORDER BY CAST(load_extension(rt0.c2) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(load_extension(rt0.c2) AS REAL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) ORDER BY CAST(load_extension(rt0.c2) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(load_extension(rt0.c2) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c1))) ORDER BY (rt0.c1 COLLATE NOCASE IN (x'3940'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN (x'3940'))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c1))) ORDER BY (rt0.c1 COLLATE NOCASE IN (x'3940'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN (x'3940'))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c1))) ORDER BY (rt0.c1 COLLATE NOCASE IN (x'3940'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0)IS(t0.c0)))))) ORDER BY t0.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0)IS(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0)IS(t0.c0)))))) ORDER BY t0.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0)IS(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0)IS(t0.c0)))))) ORDER BY t0.c0 COLLATE NOCASE DESC;
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM t0 WHERE ('Z7~P') ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (5.81645923E8)) AS BLOB)  NULLS LAST, ((((((((((((t0.c0)AND(t0.c0 COLLATE BINARY)))AND(t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0)))))AND((t0.c0 IN ()))), ((LOWER(t0.c0))AND(t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('Z7~P') IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (5.81645923E8)) AS BLOB)  NULLS LAST, ((((((((((((t0.c0)AND(t0.c0 COLLATE BINARY)))AND(t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0)))))AND((t0.c0 IN ()))), ((LOWER(t0.c0))AND(t0.c0))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ('Z7~P') ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (5.81645923E8)) AS BLOB)  NULLS LAST, ((((((((((((t0.c0)AND(t0.c0 COLLATE BINARY)))AND(t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0)))))AND((t0.c0 IN ()))), ((LOWER(t0.c0))AND(t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('Z7~P') IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (5.81645923E8)) AS BLOB)  NULLS LAST, ((((((((((((t0.c0)AND(t0.c0 COLLATE BINARY)))AND(t0.c0)))OR(CAST(t0.c0 AS NUMERIC))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0)))))AND((t0.c0 IN ()))), ((LOWER(t0.c0))AND(t0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)/(rt0.c2)))) AND ((((rt0.c2)-(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c1)/(rt0.c2)))) AND ((((rt0.c2)-(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)/(rt0.c2)))) AND ((((rt0.c2)-(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((rt0.c1)/(rt0.c2)))) AND ((((rt0.c2)-(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c1)/(rt0.c2)))) AND ((((rt0.c2)-(rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (('-1798141475' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1798141475' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (('-1798141475' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1798141475' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (('-1798141475' IN ()));
SELECT ALL * FROM rt0, t0 WHERE ((- (((rt0.c2)OR(rt0.c2))))) ORDER BY (((CASE rt0.c2  WHEN 0X57a99063 THEN rt0.c2 END))<=((((rt0.c0)/(rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((CASE rt0.c2  WHEN 0X57a99063 THEN rt0.c2 END))<=((((rt0.c0)/(rt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((- (((rt0.c2)OR(rt0.c2))))) ORDER BY (((CASE rt0.c2  WHEN 0X57a99063 THEN rt0.c2 END))<=((((rt0.c0)/(rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((CASE rt0.c2  WHEN 0X57a99063 THEN rt0.c2 END))<=((((rt0.c0)/(rt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((- (((rt0.c2)OR(rt0.c2))))) ORDER BY (((CASE rt0.c2  WHEN 0X57a99063 THEN rt0.c2 END))<=((((rt0.c0)/(rt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) IS FALSE)) ORDER BY (t0.c0 IN ()) COLLATE RTRIM, NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))  NULLS FIRST, (((t0.c0 IN ())) NOT BETWEEN (json_extract(t0.c0, t0.c0)) AND (json_insert(t0.c0, t0.c0, t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE RTRIM, NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))  NULLS FIRST, (((t0.c0 IN ())) NOT BETWEEN (json_extract(t0.c0, t0.c0)) AND (json_insert(t0.c0, t0.c0, t0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) IS FALSE)) ORDER BY (t0.c0 IN ()) COLLATE RTRIM, NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))  NULLS FIRST, (((t0.c0 IN ())) NOT BETWEEN (json_extract(t0.c0, t0.c0)) AND (json_insert(t0.c0, t0.c0, t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) COLLATE RTRIM, NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))  NULLS FIRST, (((t0.c0 IN ())) NOT BETWEEN (json_extract(t0.c0, t0.c0)) AND (json_insert(t0.c0, t0.c0, t0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON UNLIKELY(((rt0.c0) NOT NULL)) WHERE (1086711656) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((1086711656) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON UNLIKELY(((rt0.c0) NOT NULL)) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON UNLIKELY(((rt0.c0) NOT NULL)) WHERE (1086711656) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((1086711656) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON UNLIKELY(((rt0.c0) NOT NULL)) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON UNLIKELY(((rt0.c0) NOT NULL)) WHERE (1086711656) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM ASC;
SELECT ALL * FROM t0 WHERE (0X1b8434ce) ORDER BY ((((t0.c0) IS TRUE))IS NOT(((t0.c0)-(t0.c0))))  NULLS FIRST, CAST(((t0.c0) IS FALSE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x1b8434ce) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE))IS NOT(((t0.c0)-(t0.c0))))  NULLS FIRST, CAST(((t0.c0) IS FALSE) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (0X1b8434ce) ORDER BY ((((t0.c0) IS TRUE))IS NOT(((t0.c0)-(t0.c0))))  NULLS FIRST, CAST(((t0.c0) IS FALSE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x1b8434ce) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE))IS NOT(((t0.c0)-(t0.c0))))  NULLS FIRST, CAST(((t0.c0) IS FALSE) AS TEXT)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (0X1b8434ce) ORDER BY ((((t0.c0) IS TRUE))IS NOT(((t0.c0)-(t0.c0))))  NULLS FIRST, CAST(((t0.c0) IS FALSE) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i58, rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(SQLITE_COMPILEOPTION_GET(t0.c0)))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE RTRIM DESC, CASE WHEN ((x'')>>(rt0.c0)) THEN ((t0.c0)/(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)IS NOT(SQLITE_COMPILEOPTION_GET(t0.c0)))) IS TRUE)  as count FROM t0 INDEXED BY i58, rt0 ORDER BY CAST(t0.c0 AS TEXT) COLLATE RTRIM DESC, CASE WHEN ((x'')>>(rt0.c0)) THEN ((t0.c0)/(rt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i58, rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(SQLITE_COMPILEOPTION_GET(t0.c0)))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE RTRIM DESC, CASE WHEN ((x'')>>(rt0.c0)) THEN ((t0.c0)/(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM)IS NOT(SQLITE_COMPILEOPTION_GET(t0.c0)))) IS TRUE)  as count FROM t0 INDEXED BY i58, rt0 ORDER BY CAST(t0.c0 AS TEXT) COLLATE RTRIM DESC, CASE WHEN ((x'')>>(rt0.c0)) THEN ((t0.c0)/(rt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i58, rt0 WHERE (((rt0.c0 COLLATE RTRIM)IS NOT(SQLITE_COMPILEOPTION_GET(t0.c0)))) ORDER BY CAST(t0.c0 AS TEXT) COLLATE RTRIM DESC, CASE WHEN ((x'')>>(rt0.c0)) THEN ((t0.c0)/(rt0.c0)) END ASC;
SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((0.41321255831629133)) AND ((rt0.c0))))+(COALESCE(rt0.c2, '')))) ORDER BY CASE WHEN x'' THEN NULL ELSE rt0.c2 END COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((0.41321255831629133)) AND ((rt0.c0))))+(COALESCE(rt0.c2, '')))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'' THEN NULL ELSE rt0.c2 END COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((0.41321255831629133)) AND ((rt0.c0))))+(COALESCE(rt0.c2, '')))) ORDER BY CASE WHEN x'' THEN NULL ELSE rt0.c2 END COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((0.41321255831629133)) AND ((rt0.c0))))+(COALESCE(rt0.c2, '')))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'' THEN NULL ELSE rt0.c2 END COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((0.41321255831629133)) AND ((rt0.c0))))+(COALESCE(rt0.c2, '')))) ORDER BY CASE WHEN x'' THEN NULL ELSE rt0.c2 END COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) ORDER BY highlight((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), t0.c0, CAST(rt0.c2 AS TEXT), (NOT (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY highlight((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), t0.c0, CAST(rt0.c2 AS TEXT), (NOT (rt0.c1))) ASC);
SELECT ALL * FROM t0, rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) ORDER BY highlight((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), t0.c0, CAST(rt0.c2 AS TEXT), (NOT (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY highlight((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), t0.c0, CAST(rt0.c2 AS TEXT), (NOT (rt0.c1))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))*(CASE t0.c0  WHEN '-589872087' THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))*(CASE t0.c0  WHEN '-589872087' THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))*(CASE t0.c0  WHEN '-589872087' THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER))*(CASE t0.c0  WHEN '-589872087' THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))*(CASE t0.c0  WHEN '-589872087' THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM t0 WHERE ((- ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- ((NOT (t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((t0.c0, rt0.c1, rt0.c1, t0.c0, rt0.c1)) BETWEEN ((t0.c0, rt0.c2, 0.7012965398775106, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0, t0.c0, t0.c0))) IN (rt0.c2))) ORDER BY ((((t0.c0)OR(rt0.c2)))AND((- (rt0.c0)))) DESC, ((rt0.c2 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0, rt0.c1, rt0.c1, t0.c0, rt0.c1)) BETWEEN ((t0.c0, rt0.c2, 0.7012965398775106, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0, t0.c0, t0.c0))) IN (rt0.c2))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c0)OR(rt0.c2)))AND((- (rt0.c0)))) DESC, ((rt0.c2 COLLATE BINARY) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((t0.c0, rt0.c1, rt0.c1, t0.c0, rt0.c1)) BETWEEN ((t0.c0, rt0.c2, 0.7012965398775106, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0, t0.c0, t0.c0))) IN (rt0.c2))) ORDER BY ((((t0.c0)OR(rt0.c2)))AND((- (rt0.c0)))) DESC, ((rt0.c2 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0, rt0.c1, rt0.c1, t0.c0, rt0.c1)) BETWEEN ((t0.c0, rt0.c2, 0.7012965398775106, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0, t0.c0, t0.c0))) IN (rt0.c2))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c0)OR(rt0.c2)))AND((- (rt0.c0)))) DESC, ((rt0.c2 COLLATE BINARY) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((t0.c0, rt0.c1, rt0.c1, t0.c0, rt0.c1)) BETWEEN ((t0.c0, rt0.c2, 0.7012965398775106, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, t0.c0, t0.c0, t0.c0))) IN (rt0.c2))) ORDER BY ((((t0.c0)OR(rt0.c2)))AND((- (rt0.c0)))) DESC, ((rt0.c2 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)>(rt0.c2))))) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)>(rt0.c2))))) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (((rt0.c1)>(rt0.c2))))) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((('', (t0.c0 IN ()), CAST(rt0.c2 AS INTEGER), ((rt0.c0)LIKE(rt0.c1)), CAST(t0.c0 AS NUMERIC)))<(((NOT (rt0.c2)), (rt0.c2 IN ()), (+ (t0.c0)), rt0.c1 COLLATE NOCASE, (rt0.c2 IN ())))) WHERE (((((t0.c0)!=(rt0.c0)))<<(1.984543189E9))) ORDER BY (((NOT (rt0.c1)))IS NOT((('~홹\n.d镬A')+(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(rt0.c0)))<<(1.984543189E9))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((('', (t0.c0 IN ()), CAST(rt0.c2 AS INTEGER), ((rt0.c0)LIKE(rt0.c1)), CAST(t0.c0 AS NUMERIC)))<(((NOT (rt0.c2)), (rt0.c2 IN ()), (+ (t0.c0)), rt0.c1 COLLATE NOCASE, (rt0.c2 IN ())))) ORDER BY (((NOT (rt0.c1)))IS NOT((('~홹\n.d镬A')+(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((('', (t0.c0 IN ()), CAST(rt0.c2 AS INTEGER), ((rt0.c0)LIKE(rt0.c1)), CAST(t0.c0 AS NUMERIC)))<(((NOT (rt0.c2)), (rt0.c2 IN ()), (+ (t0.c0)), rt0.c1 COLLATE NOCASE, (rt0.c2 IN ())))) WHERE (((((t0.c0)!=(rt0.c0)))<<(1.984543189E9))) ORDER BY (((NOT (rt0.c1)))IS NOT((('~홹\n.d镬A')+(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(rt0.c0)))<<(1.984543189E9))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((('', (t0.c0 IN ()), CAST(rt0.c2 AS INTEGER), ((rt0.c0)LIKE(rt0.c1)), CAST(t0.c0 AS NUMERIC)))<(((NOT (rt0.c2)), (rt0.c2 IN ()), (+ (t0.c0)), rt0.c1 COLLATE NOCASE, (rt0.c2 IN ())))) ORDER BY (((NOT (rt0.c1)))IS NOT((('~홹\n.d镬A')+(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((('', (t0.c0 IN ()), CAST(rt0.c2 AS INTEGER), ((rt0.c0)LIKE(rt0.c1)), CAST(t0.c0 AS NUMERIC)))<(((NOT (rt0.c2)), (rt0.c2 IN ()), (+ (t0.c0)), rt0.c1 COLLATE NOCASE, (rt0.c2 IN ())))) WHERE (((((t0.c0)!=(rt0.c0)))<<(1.984543189E9))) ORDER BY (((NOT (rt0.c1)))IS NOT((('~홹\n.d镬A')+(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ORDER BY ((((t0.c0))>((t0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0))>((t0.c0))) IN ()) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ORDER BY ((((t0.c0))>((t0.c0))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0))>((t0.c0))) IN ()) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL)) ORDER BY ((((t0.c0))>((t0.c0))) IN ()) ASC;
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c0)<>(t0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)!=(t0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c0)<>(t0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)!=(t0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c0)<>(t0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((rt0.c1)!=(rt0.c1)) COLLATE NOCASE WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((rt0.c1)<>(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((rt0.c1)!=(rt0.c1)) COLLATE NOCASE WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((rt0.c1)<>(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON ((rt0.c1)!=(rt0.c1)) COLLATE NOCASE WHERE ((rt0.c1 IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((LIKELIHOOD(t0.c0, 0.04621996628391112) IN (('558757836' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c0, 0.04621996628391112) IN (('558757836' IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((LIKELIHOOD(t0.c0, 0.04621996628391112) IN (('558757836' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c0, 0.04621996628391112) IN (('558757836' IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((LIKELIHOOD(t0.c0, 0.04621996628391112) IN (('558757836' IN ()))));
SELECT * FROM rt0, t0 WHERE (((0X22ab3663) BETWEEN (((rt0.c2)<>(rt0.c0))) AND (((-1e500) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0x22ab3663) BETWEEN (((rt0.c2)<>(rt0.c0))) AND (((-1e500) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((0X22ab3663) BETWEEN (((rt0.c2)<>(rt0.c0))) AND (((-1e500) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0x22ab3663) BETWEEN (((rt0.c2)<>(rt0.c0))) AND (((-1e500) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((0X22ab3663) BETWEEN (((rt0.c2)<>(rt0.c0))) AND (((-1e500) ISNULL))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT * FROM t0, rt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(NULL COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(NULL COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(NULL COLLATE RTRIM)));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON x'' COLLATE BINARY WHERE (((NULL) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2)=(rt0.c2))))) ORDER BY rt0.c0 DESC  NULLS LAST, NULL  NULLS FIRST, CASE ((0.35657024314075736) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((((((rt0.c2)OR(t0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0)>(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2)=(rt0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON x'' COLLATE BINARY ORDER BY rt0.c0 DESC  NULLS LAST, NULL  NULLS FIRST, CASE ((0.35657024314075736) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((((((rt0.c2)OR(t0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0)>(rt0.c0)) END  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON x'' COLLATE BINARY WHERE (((NULL) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2)=(rt0.c2))))) ORDER BY rt0.c0 DESC  NULLS LAST, NULL  NULLS FIRST, CASE ((0.35657024314075736) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((((((rt0.c2)OR(t0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0)>(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2)=(rt0.c2))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON x'' COLLATE BINARY ORDER BY rt0.c0 DESC  NULLS LAST, NULL  NULLS FIRST, CASE ((0.35657024314075736) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((((((rt0.c2)OR(t0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0)>(rt0.c0)) END  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON x'' COLLATE BINARY WHERE (((NULL) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c2)=(rt0.c2))))) ORDER BY rt0.c0 DESC  NULLS LAST, NULL  NULLS FIRST, CASE ((0.35657024314075736) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((((((((rt0.c2)OR(t0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0)>(rt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((CAST(rt0.c2 AS TEXT)))!=((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS TEXT)))!=((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((CAST(rt0.c2 AS TEXT)))!=((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS TEXT)))!=((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((CAST(rt0.c2 AS TEXT)))!=((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) DESC;
SELECT * FROM t0 WHERE (CASE UNLIKELY(DISTINCT t0.c0)  WHEN (- (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)%(t0.c0)) END) ORDER BY ((CHAR(t0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(DISTINCT t0.c0)  WHEN (- (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)%(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((CHAR(t0.c0)) NOTNULL) ASC);
SELECT * FROM t0 WHERE (CASE UNLIKELY(DISTINCT t0.c0)  WHEN (- (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)%(t0.c0)) END) ORDER BY ((CHAR(t0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(DISTINCT t0.c0)  WHEN (- (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)%(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((CHAR(t0.c0)) NOTNULL) ASC);
SELECT * FROM t0 WHERE (CASE UNLIKELY(DISTINCT t0.c0)  WHEN (- (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)%(t0.c0)) END) ORDER BY ((CHAR(t0.c0)) NOTNULL) ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<<(rt0.c2)) AS INTEGER)) ORDER BY (((((rt0.c0, rt0.c1, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2))))>=((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<<(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c1, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2))))>=((rt0.c2 IN ()))) DESC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<<(rt0.c2)) AS INTEGER)) ORDER BY (((((rt0.c0, rt0.c1, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2))))>=((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<<(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c1, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2))))>=((rt0.c2 IN ()))) DESC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)<<(rt0.c2)) AS INTEGER)) ORDER BY (((((rt0.c0, rt0.c1, rt0.c0))!=((rt0.c1, rt0.c2, rt0.c2))))>=((rt0.c2 IN ()))) DESC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c1)-(t0.c0))) AND (t0.c0)) WHERE ((((((t0.c0)||('᣾]y}>bdu\n')), ((rt0.c1)&(NULL)), ((((t0.c0)OR(rt0.c1)))AND(x''))))<=((((t0.c0) ISNULL), rt0.c0 COLLATE NOCASE, (rt0.c1 IN (t0.c0, rt0.c0)))))) ORDER BY CAST(1802993562 AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)||('᣾]y}>bdu\n')), ((rt0.c1)&(NULL)), ((((t0.c0)OR(rt0.c1)))AND(x''))))<=((((t0.c0) ISNULL), rt0.c0 COLLATE NOCASE, (rt0.c1 IN (t0.c0, rt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c1)-(t0.c0))) AND (t0.c0)) ORDER BY CAST(1802993562 AS INTEGER));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c1)-(t0.c0))) AND (t0.c0)) WHERE ((((((t0.c0)||('᣾]y}>bdu\n')), ((rt0.c1)&(NULL)), ((((t0.c0)OR(rt0.c1)))AND(x''))))<=((((t0.c0) ISNULL), rt0.c0 COLLATE NOCASE, (rt0.c1 IN (t0.c0, rt0.c0)))))) ORDER BY CAST(1802993562 AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)||('᣾]y}>bdu\n')), ((rt0.c1)&(NULL)), ((((t0.c0)OR(rt0.c1)))AND(x''))))<=((((t0.c0) ISNULL), rt0.c0 COLLATE NOCASE, (rt0.c1 IN (t0.c0, rt0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c1)-(t0.c0))) AND (t0.c0)) ORDER BY CAST(1802993562 AS INTEGER));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c0) NOT BETWEEN (((rt0.c1)-(t0.c0))) AND (t0.c0)) WHERE ((((((t0.c0)||('᣾]y}>bdu\n')), ((rt0.c1)&(NULL)), ((((t0.c0)OR(rt0.c1)))AND(x''))))<=((((t0.c0) ISNULL), rt0.c0 COLLATE NOCASE, (rt0.c1 IN (t0.c0, rt0.c0)))))) ORDER BY CAST(1802993562 AS INTEGER);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END IN ()));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ('|P6파_M' IN (NULLIF(rt0.c2, rt0.c2))) WHERE (((((((((x'')AND(((rt0.c2)IS(t0.c0)))))OR(rt0.c2 COLLATE RTRIM)))AND(HEX(t0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((((0.6092971170831593) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) AND (TRIM(DISTINCT t0.c0, rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(((rt0.c2)IS(t0.c0)))))OR(rt0.c2 COLLATE RTRIM)))AND(HEX(t0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ('|P6파_M' IN (NULLIF(rt0.c2, rt0.c2))) ORDER BY ((((0.6092971170831593) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) AND (TRIM(DISTINCT t0.c0, rt0.c1))) ASC  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ('|P6파_M' IN (NULLIF(rt0.c2, rt0.c2))) WHERE (((((((((x'')AND(((rt0.c2)IS(t0.c0)))))OR(rt0.c2 COLLATE RTRIM)))AND(HEX(t0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((((0.6092971170831593) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) AND (TRIM(DISTINCT t0.c0, rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(((rt0.c2)IS(t0.c0)))))OR(rt0.c2 COLLATE RTRIM)))AND(HEX(t0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ('|P6파_M' IN (NULLIF(rt0.c2, rt0.c2))) ORDER BY ((((0.6092971170831593) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) AND (TRIM(DISTINCT t0.c0, rt0.c1))) ASC  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ('|P6파_M' IN (NULLIF(rt0.c2, rt0.c2))) WHERE (((((((((x'')AND(((rt0.c2)IS(t0.c0)))))OR(rt0.c2 COLLATE RTRIM)))AND(HEX(t0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY ((((0.6092971170831593) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) AND (TRIM(DISTINCT t0.c0, rt0.c1))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON ((rt0.c1)IS(rt0.c2)) COLLATE RTRIM WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((rt0.c1)IS(rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON ((rt0.c1)IS(rt0.c2)) COLLATE RTRIM WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((rt0.c1)IS(rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON ((rt0.c1)IS(rt0.c2)) COLLATE RTRIM WHERE (rt0.c1);
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(t0.c0 AS REAL)  WHEN rt0.c1 COLLATE NOCASE THEN CAST(t0.c0 AS INTEGER) WHEN COALESCE(DISTINCT t0.c0, rt0.c1) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN (rt0.c0 IN ()) THEN ((NULL)IS(rt0.c2)) END) ORDER BY ((((t0.c0)>>(rt0.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS REAL)  WHEN rt0.c1 COLLATE NOCASE THEN CAST(t0.c0 AS INTEGER) WHEN COALESCE(DISTINCT t0.c0, rt0.c1) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN (rt0.c0 IN ()) THEN ((NULL)IS(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)>>(rt0.c2))) NOT NULL) DESC);
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(t0.c0 AS REAL)  WHEN rt0.c1 COLLATE NOCASE THEN CAST(t0.c0 AS INTEGER) WHEN COALESCE(DISTINCT t0.c0, rt0.c1) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN (rt0.c0 IN ()) THEN ((NULL)IS(rt0.c2)) END) ORDER BY ((((t0.c0)>>(rt0.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS REAL)  WHEN rt0.c1 COLLATE NOCASE THEN CAST(t0.c0 AS INTEGER) WHEN COALESCE(DISTINCT t0.c0, rt0.c1) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN (rt0.c0 IN ()) THEN ((NULL)IS(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)>>(rt0.c2))) NOT NULL) DESC);
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(t0.c0 AS REAL)  WHEN rt0.c1 COLLATE NOCASE THEN CAST(t0.c0 AS INTEGER) WHEN COALESCE(DISTINCT t0.c0, rt0.c1) THEN IFNULL(DISTINCT rt0.c1, rt0.c1) WHEN (rt0.c0 IN ()) THEN ((NULL)IS(rt0.c2)) END) ORDER BY ((((t0.c0)>>(rt0.c2))) NOT NULL) DESC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON TRIM(CAST(t0.c0 AS BLOB), ((((((((rt0.c1)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))AND(rt0.c1))) WHERE (NULLIF(((rt0.c0) IS FALSE), -1371903160));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c0) IS FALSE), -1371903160)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON TRIM(CAST(t0.c0 AS BLOB), ((((((((rt0.c1)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))AND(rt0.c1))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON TRIM(CAST(t0.c0 AS BLOB), ((((((((rt0.c1)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))AND(rt0.c1))) WHERE (NULLIF(((rt0.c0) IS FALSE), -1371903160));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c0) IS FALSE), -1371903160)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON TRIM(CAST(t0.c0 AS BLOB), ((((((((rt0.c1)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))AND(rt0.c1))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON TRIM(CAST(t0.c0 AS BLOB), ((((((((rt0.c1)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))AND(rt0.c1))) WHERE (NULLIF(((rt0.c0) IS FALSE), -1371903160));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((((((rt0.c0))>=((rt0.c0))))OR(((((rt0.c0)OR('')))OR(t0.c0)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 'e7E1+K[{精' END)) WHERE ((NOT (CAST(rt0.c2 AS INTEGER)))) ORDER BY (((rt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((CAST(rt0.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((((((rt0.c0))>=((rt0.c0))))OR(((((rt0.c0)OR('')))OR(t0.c0)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 'e7E1+K[{精' END)) ORDER BY (((rt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((CAST(rt0.c0 AS BLOB))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((((((rt0.c0))>=((rt0.c0))))OR(((((rt0.c0)OR('')))OR(t0.c0)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 'e7E1+K[{精' END)) WHERE ((NOT (CAST(rt0.c2 AS INTEGER)))) ORDER BY (((rt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((CAST(rt0.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((((((rt0.c0))>=((rt0.c0))))OR(((((rt0.c0)OR('')))OR(t0.c0)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 'e7E1+K[{精' END)) ORDER BY (((rt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((CAST(rt0.c0 AS BLOB))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((((((rt0.c0))>=((rt0.c0))))OR(((((rt0.c0)OR('')))OR(t0.c0)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE 'e7E1+K[{精' END)) WHERE ((NOT (CAST(rt0.c2 AS INTEGER)))) ORDER BY (((rt0.c0)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((CAST(rt0.c0 AS BLOB))))  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)<>(''))) AND (t0.c0))) ORDER BY TRIM(DISTINCT 'G,]&U⧉1A');
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c2)!=(''))) AND (t0.c0))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 ORDER BY TRIM(DISTINCT 'G,]&U⧉1A'));
SELECT ALL * FROM t0, rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)<>(''))) AND (t0.c0))) ORDER BY TRIM(DISTINCT 'G,]&U⧉1A');
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((rt0.c2)!=(''))) AND (t0.c0))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 ORDER BY TRIM(DISTINCT 'G,]&U⧉1A'));
SELECT ALL * FROM t0, rt0 WHERE (((NULL) NOT BETWEEN (((rt0.c2)<>(''))) AND (t0.c0))) ORDER BY TRIM(DISTINCT 'G,]&U⧉1A');
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((0.9332938352654938) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.9332938352654938) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((0.9332938352654938) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.9332938352654938) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((0.9332938352654938) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)>>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)>>(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)>>(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)>>(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)>>(rt0.c0)));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON NULL WHERE (((792834133) NOT BETWEEN (highlight(NULL, rt0.c1, rt0.c2, rt0.c2)) AND (rt0.c2))) ORDER BY CAST('406857960' COLLATE NOCASE AS BLOB)  NULLS LAST, ((CAST(0.5364935136997402 AS INTEGER)) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((t0.c0) BETWEEN (NULL) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((792834133) NOT BETWEEN (highlight(NULL, rt0.c1, rt0.c2, rt0.c2)) AND (rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON NULL ORDER BY CAST('406857960' COLLATE NOCASE AS BLOB)  NULLS LAST, ((CAST(0.5364935136997402 AS INTEGER)) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((t0.c0) BETWEEN (NULL) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON NULL WHERE (((792834133) NOT BETWEEN (highlight(NULL, rt0.c1, rt0.c2, rt0.c2)) AND (rt0.c2))) ORDER BY CAST('406857960' COLLATE NOCASE AS BLOB)  NULLS LAST, ((CAST(0.5364935136997402 AS INTEGER)) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((t0.c0) BETWEEN (NULL) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((792834133) NOT BETWEEN (highlight(NULL, rt0.c1, rt0.c2, rt0.c2)) AND (rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON NULL ORDER BY CAST('406857960' COLLATE NOCASE AS BLOB)  NULLS LAST, ((CAST(0.5364935136997402 AS INTEGER)) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((t0.c0) BETWEEN (NULL) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON NULL WHERE (((792834133) NOT BETWEEN (highlight(NULL, rt0.c1, rt0.c2, rt0.c2)) AND (rt0.c2))) ORDER BY CAST('406857960' COLLATE NOCASE AS BLOB)  NULLS LAST, ((CAST(0.5364935136997402 AS INTEGER)) NOT BETWEEN (((rt0.c1)|(rt0.c2))) AND (((t0.c0) BETWEEN (NULL) AND (rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC)) ORDER BY CAST(NULL AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(NULL AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC)) ORDER BY CAST(NULL AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(NULL AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)) AS NUMERIC)) ORDER BY CAST(NULL AS TEXT)  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((CAST(t0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((CAST(t0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((CAST(t0.c0 AS NUMERIC) IN ()));
SELECT * FROM rt0, t0 WHERE (((((- (rt0.c2))))<((CAST('' AS TEXT))))) ORDER BY (((- (rt0.c0)))*(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c2))))<((CAST('' AS TEXT))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((- (rt0.c0)))*(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT * FROM rt0, t0 WHERE (((((- (rt0.c2))))<((CAST('' AS TEXT))))) ORDER BY (((- (rt0.c0)))*(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c2))))<((CAST('' AS TEXT))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((- (rt0.c0)))*(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT * FROM rt0, t0 WHERE (((((- (rt0.c2))))<((CAST('' AS TEXT))))) ORDER BY (((- (rt0.c0)))*(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) AND (CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((x'')OR(rt0.c1)))OR(rt0.c1))) AND (((rt0.c1) ISNULL)))) ORDER BY ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((x'fe9d', rt0.c1, rt0.c0))) IN ()) ASC, ((CAST(rt0.c0 AS INTEGER)) BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((x'')OR(rt0.c1)))OR(rt0.c1))) AND (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((x'fe9d', rt0.c1, rt0.c0))) IN ()) ASC, ((CAST(rt0.c0 AS INTEGER)) BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((x'')OR(rt0.c1)))OR(rt0.c1))) AND (((rt0.c1) ISNULL)))) ORDER BY ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((x'fe9d', rt0.c1, rt0.c0))) IN ()) ASC, ((CAST(rt0.c0 AS INTEGER)) BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((x'')OR(rt0.c1)))OR(rt0.c1))) AND (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((x'fe9d', rt0.c1, rt0.c0))) IN ()) ASC, ((CAST(rt0.c0 AS INTEGER)) BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((x'')OR(rt0.c1)))OR(rt0.c1))) AND (((rt0.c1) ISNULL)))) ORDER BY ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((x'fe9d', rt0.c1, rt0.c0))) IN ()) ASC, ((CAST(rt0.c0 AS INTEGER)) BETWEEN ((rt0.c0 IN ())) AND (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (- (rt0.c1)), rt0.c0 COLLATE NOCASE)) AND ((((rt0.c2)IS(rt0.c0)), CAST(NULL AS TEXT), CAST(t0.c0 AS BLOB))))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (- (rt0.c1)), rt0.c0 COLLATE NOCASE)) AND ((((rt0.c2)IS(rt0.c0)), CAST(NULL AS TEXT), CAST(t0.c0 AS BLOB))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (- (rt0.c1)), rt0.c0 COLLATE NOCASE)) AND ((((rt0.c2)IS(rt0.c0)), CAST(NULL AS TEXT), CAST(t0.c0 AS BLOB))))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (- (rt0.c1)), rt0.c0 COLLATE NOCASE)) AND ((((rt0.c2)IS(rt0.c0)), CAST(NULL AS TEXT), CAST(t0.c0 AS BLOB))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0, rt0.c2, t0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (- (rt0.c1)), rt0.c0 COLLATE NOCASE)) AND ((((rt0.c2)IS(rt0.c0)), CAST(NULL AS TEXT), CAST(t0.c0 AS BLOB))))) ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) ASC;
SELECT * FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)AND(t0.c0)))AND(rt0.c1))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)AND(t0.c0)))AND(rt0.c1))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)));
SELECT * FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)AND(t0.c0)))AND(rt0.c1))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)AND(t0.c0)))AND(rt0.c1))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)));
SELECT * FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)AND(t0.c0)))AND(rt0.c1))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)) WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT (- (rt0.c1)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ORDER BY (COALESCE(DISTINCT rt0.c2, rt0.c0) IN ())  NULLS LAST, ((((((rt0.c0)IS NOT(rt0.c2)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c1))))))AND(x'' COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (- (rt0.c1)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(DISTINCT rt0.c2, rt0.c0) IN ())  NULLS LAST, ((((((rt0.c0)IS NOT(rt0.c2)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c1))))))AND(x'' COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT (- (rt0.c1)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ORDER BY (COALESCE(DISTINCT rt0.c2, rt0.c0) IN ())  NULLS LAST, ((((((rt0.c0)IS NOT(rt0.c2)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c1))))))AND(x'' COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (- (rt0.c1)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(DISTINCT rt0.c2, rt0.c0) IN ())  NULLS LAST, ((((((rt0.c0)IS NOT(rt0.c2)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c1))))))AND(x'' COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT (- (rt0.c1)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ORDER BY (COALESCE(DISTINCT rt0.c2, rt0.c0) IN ())  NULLS LAST, ((((((rt0.c0)IS NOT(rt0.c2)))AND((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c1))))))AND(x'' COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (json_valid(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (json_valid(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (json_valid(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (json_valid(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (json_valid(rt0.c0))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (- ((((rt0.c0))=((rt0.c1))))) WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))==((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))==((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- ((((rt0.c0))=((rt0.c1))))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (- ((((rt0.c0))=((rt0.c1))))) WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))==((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))==((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- ((((rt0.c0))=((rt0.c1))))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (- ((((rt0.c0))=((rt0.c1))))) WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))==((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS BLOB)))) ORDER BY ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS BLOB)))) ORDER BY ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)AND(CAST(t0.c0 AS BLOB)))) ORDER BY ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ())  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON (((t0.c0 IN (rt0.c1)))LIKE(rt0.c2 COLLATE RTRIM)) WHERE ((((t0.c0)) NOT BETWEEN ((json_patch(t0.c0, rt0.c0))) AND (((NULL IN ()))))) ORDER BY ((NULL)IS NOT(((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((json_patch(t0.c0, rt0.c0))) AND (((NULL IN ()))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((t0.c0 IN (rt0.c1)))LIKE(rt0.c2 COLLATE RTRIM)) ORDER BY ((NULL)IS NOT(((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))) ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON (((t0.c0 IN (rt0.c1)))LIKE(rt0.c2 COLLATE RTRIM)) WHERE ((((t0.c0)) NOT BETWEEN ((json_patch(t0.c0, rt0.c0))) AND (((NULL IN ()))))) ORDER BY ((NULL)IS NOT(((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((json_patch(t0.c0, rt0.c0))) AND (((NULL IN ()))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((t0.c0 IN (rt0.c1)))LIKE(rt0.c2 COLLATE RTRIM)) ORDER BY ((NULL)IS NOT(((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)>=(0.690988021750613))) ORDER BY ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>=(0.690988021750613))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)>=(0.690988021750613))) ORDER BY ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>=(0.690988021750613))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)>=(0.690988021750613))) ORDER BY ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((((((((((rt0.c0)>>(rt0.c1)))OR('' COLLATE RTRIM)))OR(((rt0.c2) IS FALSE))))AND(RTRIM(rt0.c2))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (((t0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 ORDER BY ((((((((((rt0.c0)>>(rt0.c1)))OR('' COLLATE RTRIM)))OR(((rt0.c2) IS FALSE))))AND(RTRIM(rt0.c2))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (((t0.c0) ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((((((((((rt0.c0)>>(rt0.c1)))OR('' COLLATE RTRIM)))OR(((rt0.c2) IS FALSE))))AND(RTRIM(rt0.c2))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (((t0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 ORDER BY ((((((((((rt0.c0)>>(rt0.c1)))OR('' COLLATE RTRIM)))OR(((rt0.c2) IS FALSE))))AND(RTRIM(rt0.c2))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (((t0.c0) ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((((((((((rt0.c0)>>(rt0.c1)))OR('' COLLATE RTRIM)))OR(((rt0.c2) IS FALSE))))AND(RTRIM(rt0.c2))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (((t0.c0) ISNULL))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)<(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)<(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)<(t0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) ORDER BY t0.c0 DESC, (- ((~ (t0.c0)))) ASC  NULLS FIRST, (((t0.c0)) BETWEEN (((((x'72fb', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'68db' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, (- ((~ (t0.c0)))) ASC  NULLS FIRST, (((t0.c0)) BETWEEN (((((x'72fb', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'68db' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) ORDER BY t0.c0 DESC, (- ((~ (t0.c0)))) ASC  NULLS FIRST, (((t0.c0)) BETWEEN (((((x'72fb', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'68db' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, (- ((~ (t0.c0)))) ASC  NULLS FIRST, (((t0.c0)) BETWEEN (((((x'72fb', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'68db' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) ORDER BY t0.c0 DESC, (- ((~ (t0.c0)))) ASC  NULLS FIRST, (((t0.c0)) BETWEEN (((((x'72fb', t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'68db' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)<>(((rt0.c0) NOTNULL))) WHERE (rt0.c0) ORDER BY (NOT (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)!=(((rt0.c0) NOTNULL))) ORDER BY (NOT (x'')) ASC);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)<>(((rt0.c0) NOTNULL))) WHERE (rt0.c0) ORDER BY (NOT (x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)!=(((rt0.c0) NOTNULL))) ORDER BY (NOT (x'')) ASC);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)<>(((rt0.c0) NOTNULL))) WHERE (rt0.c0) ORDER BY (NOT (x'')) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN (((t0.c0)*(t0.c0))))) ORDER BY (((((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))/(((t0.c0)%(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN (((t0.c0)*(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))/(((t0.c0)%(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN (((t0.c0)*(t0.c0))))) ORDER BY (((((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))/(((t0.c0)%(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN (((t0.c0)*(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))/(((t0.c0)%(t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN (((t0.c0)*(t0.c0))))) ORDER BY (((((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))/(((t0.c0)%(t0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((- ((('T)5')<=(0.5428135702675739)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('T)5')<=(0.5428135702675739))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE ((- ((('T)5')<=(0.5428135702675739)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('T)5')<=(0.5428135702675739))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE ((- ((('T)5')<=(0.5428135702675739)))));
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2) ORDER BY (((~ (rt0.c0)))>>(((x'd4bf')>('	x')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY (((~ (rt0.c0)))>>(((x'd4bf')>('	x')))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2) ORDER BY (((~ (rt0.c0)))>>(((x'd4bf')>('	x')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY (((~ (rt0.c0)))>>(((x'd4bf')>('	x')))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2) ORDER BY (((~ (rt0.c0)))>>(((x'd4bf')>('	x')))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)+(rt0.c2))))) ORDER BY ((((886781874) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<<(((rt0.c2)|(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((886781874) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<<(((rt0.c2)|(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)+(rt0.c2))))) ORDER BY ((((886781874) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<<(((rt0.c2)|(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((886781874) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<<(((rt0.c2)|(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(((rt0.c2)+(rt0.c2))))) ORDER BY ((((886781874) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<<(((rt0.c2)|(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) ORDER BY (((rt0.c2, NULL, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (((rt0.c2, NULL, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE DESC);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) ORDER BY (((rt0.c2, NULL, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (((rt0.c2, NULL, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE DESC);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) ORDER BY (((rt0.c2, NULL, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))) COLLATE NOCASE DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS REAL) ASC;
SELECT * FROM rt0 NOT INDEXED, t0 WHERE ((((rt0.c1) IS TRUE) IN ())) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)=(t0.c0))))  NULLS LAST, '1849558830' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)==(t0.c0))))  NULLS LAST, '1849558830' ASC  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED, t0 WHERE ((((rt0.c1) IS TRUE) IN ())) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)=(t0.c0))))  NULLS LAST, '1849558830' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)==(t0.c0))))  NULLS LAST, '1849558830' ASC  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED, t0 WHERE ((((rt0.c1) IS TRUE) IN ())) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)=(t0.c0))))  NULLS LAST, '1849558830' ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((NULL)))) ORDER BY TYPEOF(DISTINCT ABS(rt0.c2)), x'628f' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((NULL)))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT ABS(rt0.c2)), x'628f' ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((NULL)))) ORDER BY TYPEOF(DISTINCT ABS(rt0.c2)), x'628f' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((NULL)))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT ABS(rt0.c2)), x'628f' ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((NULL)))) ORDER BY TYPEOF(DISTINCT ABS(rt0.c2)), x'628f' ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(x'675e' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'675e' AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(x'675e' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'675e' AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(x'675e' AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) IS FALSE))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) IS FALSE))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))OR(NULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) IS FALSE))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) IS FALSE))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))OR(NULL))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0) IS FALSE))OR((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))OR(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ((((t0.c0, t0.c0, NULL))!=(('', t0.c0, t0.c0))), t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE RTRIM IN ((((t0.c0, t0.c0, NULL))!=(('', t0.c0, t0.c0))), t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ((((t0.c0, t0.c0, NULL))!=(('', t0.c0, t0.c0))), t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE RTRIM IN ((((t0.c0, t0.c0, NULL))!=(('', t0.c0, t0.c0))), t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ((((t0.c0, t0.c0, NULL))!=(('', t0.c0, t0.c0))), t0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON highlight(-336959492, ((t0.c0)==(rt0.c2)), CHAR(rt0.c2), ((rt0.c2) IS FALSE)) WHERE (CASE (+ (0.8376062230089989))  WHEN LIKELIHOOD(DISTINCT t0.c0, 0.4715692129831638) THEN ((rt0.c1)!=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (0.8376062230089989))  WHEN LIKELIHOOD(DISTINCT t0.c0, 0.4715692129831638) THEN ((rt0.c1)!=(rt0.c1)) END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON highlight(-336959492, ((t0.c0)==(rt0.c2)), CHAR(rt0.c2), ((rt0.c2) IS FALSE)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON highlight(-336959492, ((t0.c0)==(rt0.c2)), CHAR(rt0.c2), ((rt0.c2) IS FALSE)) WHERE (CASE (+ (0.8376062230089989))  WHEN LIKELIHOOD(DISTINCT t0.c0, 0.4715692129831638) THEN ((rt0.c1)!=(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (0.8376062230089989))  WHEN LIKELIHOOD(DISTINCT t0.c0, 0.4715692129831638) THEN ((rt0.c1)!=(rt0.c1)) END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON highlight(-336959492, ((t0.c0)==(rt0.c2)), CHAR(rt0.c2), ((rt0.c2) IS FALSE)));
SELECT ALL * FROM t0, rt0 WHERE ((+ (((rt0.c0)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)&(rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((+ (((rt0.c0)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)&(rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((+ (((rt0.c0)&(rt0.c1)))));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN (('118313444')) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1366795229' THEN t0.c0 END)))) ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (('118313444')) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1366795229' THEN t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN (('118313444')) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1366795229' THEN t0.c0 END)))) ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (('118313444')) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1366795229' THEN t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN (('118313444')) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1366795229' THEN t0.c0 END)))) ORDER BY ((t0.c0 COLLATE NOCASE) NOTNULL);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c0)GLOB(rt0.c1))  WHEN rt0.c0 THEN ((rt0.c0)<>(161976100)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1)>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN '-830746394' WHEN (((t0.c0, t0.c0, t0.c0))>=((rt0.c0, t0.c0, rt0.c1))) THEN ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)GLOB(rt0.c1))  WHEN rt0.c0 THEN ((rt0.c0)<>(161976100)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1)>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN '-830746394' WHEN (((t0.c0, t0.c0, t0.c0))>=((rt0.c0, t0.c0, rt0.c1))) THEN ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c0)GLOB(rt0.c1))  WHEN rt0.c0 THEN ((rt0.c0)<>(161976100)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1)>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN '-830746394' WHEN (((t0.c0, t0.c0, t0.c0))>=((rt0.c0, t0.c0, rt0.c1))) THEN ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)GLOB(rt0.c1))  WHEN rt0.c0 THEN ((rt0.c0)<>(161976100)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1)>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN '-830746394' WHEN (((t0.c0, t0.c0, t0.c0))>=((rt0.c0, t0.c0, rt0.c1))) THEN ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c0)GLOB(rt0.c1))  WHEN rt0.c0 THEN ((rt0.c0)<>(161976100)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END WHEN ((rt0.c0)<=(rt0.c2)) THEN ((rt0.c1)>(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN '-830746394' WHEN (((t0.c0, t0.c0, t0.c0))>=((rt0.c0, t0.c0, rt0.c1))) THEN ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)) ELSE rt0.c0 END);
SELECT ALL * FROM t0, rt0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))%(NULL)) DESC, ((rt0.c2 COLLATE RTRIM)LIKE('-850165755')) ASC  NULLS FIRST, ((((((((rt0.c1)OR(((rt0.c0)<>(rt0.c2)))))OR((('')IS(rt0.c0)))))AND('')))OR((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))%(NULL)) DESC, ((rt0.c2 COLLATE RTRIM)LIKE('-850165755')) ASC  NULLS FIRST, ((((((((rt0.c1)OR(((rt0.c0)!=(rt0.c2)))))OR((('')IS(rt0.c0)))))AND('')))OR((rt0.c2 IN ()))) DESC);
SELECT ALL * FROM t0, rt0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))%(NULL)) DESC, ((rt0.c2 COLLATE RTRIM)LIKE('-850165755')) ASC  NULLS FIRST, ((((((((rt0.c1)OR(((rt0.c0)<>(rt0.c2)))))OR((('')IS(rt0.c0)))))AND('')))OR((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))%(NULL)) DESC, ((rt0.c2 COLLATE RTRIM)LIKE('-850165755')) ASC  NULLS FIRST, ((((((((rt0.c1)OR(((rt0.c0)!=(rt0.c2)))))OR((('')IS(rt0.c0)))))AND('')))OR((rt0.c2 IN ()))) DESC);
SELECT ALL * FROM t0, rt0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))%(NULL)) DESC, ((rt0.c2 COLLATE RTRIM)LIKE('-850165755')) ASC  NULLS FIRST, ((((((((rt0.c1)OR(((rt0.c0)<>(rt0.c2)))))OR((('')IS(rt0.c0)))))AND('')))OR((rt0.c2 IN ()))) DESC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(rt0.c1 AS REAL)) WHERE (CAST(((rt0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(rt0.c1 AS REAL)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(rt0.c1 AS REAL)) WHERE (CAST(((rt0.c0) IS TRUE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(rt0.c1 AS REAL)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON TYPEOF(CAST(rt0.c1 AS REAL)) WHERE (CAST(((rt0.c0) IS TRUE) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i58, t0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (0.9659730694172768) AND (CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY t0.c0 ASC, rt0.c0 ASC  NULLS FIRST, CASE WHEN 1437718137 THEN NULL WHEN ((((1.461167245E9)OR(rt0.c0)))OR(t0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN '-1628888621' THEN ((t0.c0)*(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) BETWEEN (0.9659730694172768) AND (CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 INDEXED BY i58, t0 ORDER BY t0.c0 ASC, rt0.c0 ASC  NULLS FIRST, CASE WHEN 1437718137 THEN NULL WHEN ((((1.461167245E9)OR(rt0.c0)))OR(t0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN '-1628888621' THEN ((t0.c0)*(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i58, t0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (0.9659730694172768) AND (CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY t0.c0 ASC, rt0.c0 ASC  NULLS FIRST, CASE WHEN 1437718137 THEN NULL WHEN ((((1.461167245E9)OR(rt0.c0)))OR(t0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN '-1628888621' THEN ((t0.c0)*(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) BETWEEN (0.9659730694172768) AND (CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 INDEXED BY i58, t0 ORDER BY t0.c0 ASC, rt0.c0 ASC  NULLS FIRST, CASE WHEN 1437718137 THEN NULL WHEN ((((1.461167245E9)OR(rt0.c0)))OR(t0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN '-1628888621' THEN ((t0.c0)*(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND ((- (0.2246456062562293))))) ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c0))<((rt0.c1))), rt0.c1 COLLATE RTRIM, (~ (-1.807097686E9)))) AND ((json_extract(rt0.c0, rt0.c0, rt0.c2, rt0.c0), (- (rt0.c2)), LOWER(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND ((- (0.2246456062562293))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c0))<((rt0.c1))), rt0.c1 COLLATE RTRIM, (~ (-1.807097686E9)))) AND ((json_extract(rt0.c0, rt0.c0, rt0.c2, rt0.c0), (- (rt0.c2)), LOWER(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND ((- (0.2246456062562293))))) ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c0))<((rt0.c1))), rt0.c1 COLLATE RTRIM, (~ (-1.807097686E9)))) AND ((json_extract(rt0.c0, rt0.c0, rt0.c2, rt0.c0), (- (rt0.c2)), LOWER(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND ((- (0.2246456062562293))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN (((((rt0.c0))<((rt0.c1))), rt0.c1 COLLATE RTRIM, (~ (-1.807097686E9)))) AND ((json_extract(rt0.c0, rt0.c0, rt0.c2, rt0.c0), (- (rt0.c2)), LOWER(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END THEN QUOTE(rt0.c0) WHEN (- (rt0.c1)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c0  WHEN 0.10102941984758862 THEN rt0.c0 END THEN ('' IN ()) ELSE rt0.c0 COLLATE NOCASE END WHERE (CASE WHEN ((x'') BETWEEN (rt0.c1) AND (t0.c0)) THEN t0.c0 ELSE ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') BETWEEN (rt0.c1) AND (t0.c0)) THEN t0.c0 ELSE ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END THEN QUOTE(rt0.c0) WHEN (- (rt0.c1)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c0  WHEN 0.10102941984758862 THEN rt0.c0 END THEN ('' IN ()) ELSE rt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END THEN QUOTE(rt0.c0) WHEN (- (rt0.c1)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c0  WHEN 0.10102941984758862 THEN rt0.c0 END THEN ('' IN ()) ELSE rt0.c0 COLLATE NOCASE END WHERE (CASE WHEN ((x'') BETWEEN (rt0.c1) AND (t0.c0)) THEN t0.c0 ELSE ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') BETWEEN (rt0.c1) AND (t0.c0)) THEN t0.c0 ELSE ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END THEN QUOTE(rt0.c0) WHEN (- (rt0.c1)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c0  WHEN 0.10102941984758862 THEN rt0.c0 END THEN ('' IN ()) ELSE rt0.c0 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END THEN QUOTE(rt0.c0) WHEN (- (rt0.c1)) THEN (rt0.c2 IN ()) WHEN CASE rt0.c0  WHEN 0.10102941984758862 THEN rt0.c0 END THEN ('' IN ()) ELSE rt0.c0 COLLATE NOCASE END WHERE (CASE WHEN ((x'') BETWEEN (rt0.c1) AND (t0.c0)) THEN t0.c0 ELSE ((rt0.c1) IS FALSE) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2)))>=(((rt0.c2) ISNULL)))) ORDER BY (((rt0.c1 IN ()))AND(rt0.c1)) DESC  NULLS LAST, (((((0.9695167180012322)OR(rt0.c1)))OR(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))>=(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))AND(rt0.c1)) DESC  NULLS LAST, (((((0.9695167180012322)OR(rt0.c1)))OR(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2)))>=(((rt0.c2) ISNULL)))) ORDER BY (((rt0.c1 IN ()))AND(rt0.c1)) DESC  NULLS LAST, (((((0.9695167180012322)OR(rt0.c1)))OR(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))>=(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 IN ()))AND(rt0.c1)) DESC  NULLS LAST, (((((0.9695167180012322)OR(rt0.c1)))OR(rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c2) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c2) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c2) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c2) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) ISNULL) IN (((rt0.c2) NOT NULL)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(((((((((rt0.c2)AND(rt0.c2)))AND('-664355013')))OR(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(((((((((rt0.c2)AND(rt0.c2)))AND('-664355013')))OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(((((((((rt0.c2)AND(rt0.c2)))AND('-664355013')))OR(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(((((((((rt0.c2)AND(rt0.c2)))AND('-664355013')))OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(((((((((rt0.c2)AND(rt0.c2)))AND('-664355013')))OR(rt0.c1)))OR(rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rtreenode(t0.c0, rt0.c1))AND(LIKELY(t0.c0))))AND(((rt0.c2)!=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rtreenode(t0.c0, rt0.c1))AND(LIKELY(t0.c0))))AND(((rt0.c2)<>(t0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rtreenode(t0.c0, rt0.c1))AND(LIKELY(t0.c0))))AND(((rt0.c2)!=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rtreenode(t0.c0, rt0.c1))AND(LIKELY(t0.c0))))AND(((rt0.c2)<>(t0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rtreenode(t0.c0, rt0.c1))AND(LIKELY(t0.c0))))AND(((rt0.c2)!=(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2) NOTNULL))))AND((rt0.c1 IN ()))))AND(((t0.c0) NOTNULL))))OR(LTRIM('', t0.c0))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))LIKE(((rt0.c0)<<(0.356366899972563)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))LIKE(((rt0.c0)<<(0.356366899972563))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2) NOTNULL))))AND((rt0.c1 IN ()))))AND(((t0.c0) NOTNULL))))OR(LTRIM('', t0.c0))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2) NOTNULL))))AND((rt0.c1 IN ()))))AND(((t0.c0) NOTNULL))))OR(LTRIM('', t0.c0))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))LIKE(((rt0.c0)<<(0.356366899972563)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))LIKE(((rt0.c0)<<(0.356366899972563))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2) NOTNULL))))AND((rt0.c1 IN ()))))AND(((t0.c0) NOTNULL))))OR(LTRIM('', t0.c0))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2) NOTNULL))))AND((rt0.c1 IN ()))))AND(((t0.c0) NOTNULL))))OR(LTRIM('', t0.c0))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))LIKE(((rt0.c0)<<(0.356366899972563)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c1)AND(rt0.c2)) END) ORDER BY (+ (((rt0.c2) NOTNULL))) ASC  NULLS LAST, CAST(((rt0.c2) NOT NULL) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c1)AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c2) NOTNULL))) ASC  NULLS LAST, CAST(((rt0.c2) NOT NULL) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c1)AND(rt0.c2)) END) ORDER BY (+ (((rt0.c2) NOTNULL))) ASC  NULLS LAST, CAST(((rt0.c2) NOT NULL) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c1)AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c2) NOTNULL))) ASC  NULLS LAST, CAST(((rt0.c2) NOT NULL) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN ((rt0.c1)LIKE(rt0.c0)) ELSE ((rt0.c1)AND(rt0.c2)) END) ORDER BY (+ (((rt0.c2) NOTNULL))) ASC  NULLS LAST, CAST(((rt0.c2) NOT NULL) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((~ (CAST(rt0.c0 AS BLOB)))) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS REAL) DESC);
SELECT ALL * FROM t0, rt0 WHERE ((~ (CAST(rt0.c0 AS BLOB)))) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS REAL) DESC);
SELECT ALL * FROM t0, rt0 WHERE ((~ (CAST(rt0.c0 AS BLOB)))) ORDER BY CAST(((rt0.c1)IS NOT(rt0.c2)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN IFNULL(t0.c0, t0.c0) WHEN x'' THEN t0.c0 WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN IFNULL(t0.c0, t0.c0) WHEN x'' THEN t0.c0 WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN IFNULL(t0.c0, t0.c0) WHEN x'' THEN t0.c0 WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN IFNULL(t0.c0, t0.c0) WHEN x'' THEN t0.c0 WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN IFNULL(t0.c0, t0.c0) WHEN x'' THEN t0.c0 WHEN TRIM(DISTINCT t0.c0, t0.c0) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS TEXT) END);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(TYPEOF(rt0.c1))))OR(rt0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE '%m'  WHEN t0.c0 THEN NULL ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE '%m'  WHEN t0.c0 THEN NULL ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM t0 WHERE (CASE '%m'  WHEN t0.c0 THEN NULL ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE '%m'  WHEN t0.c0 THEN NULL ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM t0 WHERE (CASE '%m'  WHEN t0.c0 THEN NULL ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM COLLATE NOCASE;
SELECT ALL COUNT(*) FROM t0 WHERE (((ROUND('2002613171', t0.c0)) NOTNULL)) ORDER BY NULL, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((ROUND('2002613171', t0.c0)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY NULL, t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((ROUND('2002613171', t0.c0)) NOTNULL)) ORDER BY NULL, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((ROUND('2002613171', t0.c0)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY NULL, t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((ROUND('2002613171', t0.c0)) NOTNULL)) ORDER BY NULL, t0.c0 DESC;
SELECT * FROM rt0, t0 WHERE (COALESCE(rt0.c0, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((COALESCE(rt0.c0, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (COALESCE(rt0.c0, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((COALESCE(rt0.c0, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (COALESCE(rt0.c0, rt0.c2) COLLATE BINARY);
SELECT * FROM rt0, t0 WHERE (DATETIME(rt0.c2, rt0.c2, rt0.c2) COLLATE RTRIM) ORDER BY ((((rt0.c2)IS NOT(rt0.c1)))>((NOT (rt0.c0)))) DESC  NULLS FIRST, ((rt0.c1 COLLATE BINARY)>>(((rt0.c1)GLOB(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c2, rt0.c2, rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2)IS NOT(rt0.c1)))>((NOT (rt0.c0)))) DESC  NULLS FIRST, ((rt0.c1 COLLATE BINARY)>>(((rt0.c1)GLOB(rt0.c0)))) ASC);
SELECT * FROM rt0, t0 WHERE (DATETIME(rt0.c2, rt0.c2, rt0.c2) COLLATE RTRIM) ORDER BY ((((rt0.c2)IS NOT(rt0.c1)))>((NOT (rt0.c0)))) DESC  NULLS FIRST, ((rt0.c1 COLLATE BINARY)>>(((rt0.c1)GLOB(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c2, rt0.c2, rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2)IS NOT(rt0.c1)))>((NOT (rt0.c0)))) DESC  NULLS FIRST, ((rt0.c1 COLLATE BINARY)>>(((rt0.c1)GLOB(rt0.c0)))) ASC);
SELECT * FROM rt0, t0 WHERE (DATETIME(rt0.c2, rt0.c2, rt0.c2) COLLATE RTRIM) ORDER BY ((((rt0.c2)IS NOT(rt0.c1)))>((NOT (rt0.c0)))) DESC  NULLS FIRST, ((rt0.c1 COLLATE BINARY)>>(((rt0.c1)GLOB(rt0.c0)))) ASC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (~ (((-1.807097686E9) ISNULL))) WHERE (CASE WHEN rt0.c2 THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) WHEN ((((rt0.c0)AND(NULL)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE 0x5301e408 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) WHEN ((((rt0.c0)AND(NULL)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE 0x5301e408 END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (~ (((-1.807097686E9) ISNULL))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (~ (((-1.807097686E9) ISNULL))) WHERE (CASE WHEN rt0.c2 THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) WHEN ((((rt0.c0)AND(NULL)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE 0x5301e408 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) WHEN ((((rt0.c0)AND(NULL)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE 0x5301e408 END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (~ (((-1.807097686E9) ISNULL))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (~ (((-1.807097686E9) ISNULL))) WHERE (CASE WHEN rt0.c2 THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c0) WHEN ((((rt0.c0)AND(NULL)))AND(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE 0x5301e408 END);
SELECT * FROM t0, rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN '5L畂' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 END) AND (CASE t0.c0  WHEN NULL THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN '5L畂' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 END) AND (CASE t0.c0  WHEN NULL THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN '5L畂' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 END) AND (CASE t0.c0  WHEN NULL THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN '5L畂' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 END) AND (CASE t0.c0  WHEN NULL THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (CASE WHEN rt0.c1 THEN '5L畂' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 END) AND (CASE t0.c0  WHEN NULL THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT * FROM t0 WHERE (HEX(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST((NOT (t0.c0)) AS BLOB) ASC  NULLS FIRST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((NOT (t0.c0)) AS BLOB) ASC  NULLS FIRST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (HEX(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST((NOT (t0.c0)) AS BLOB) ASC  NULLS FIRST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST((NOT (t0.c0)) AS BLOB) ASC  NULLS FIRST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) ISNULL) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (HEX(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY CAST((NOT (t0.c0)) AS BLOB) ASC  NULLS FIRST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) ISNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ()));
SELECT * FROM t0, rt0 WHERE ((+ (CAST(rt0.c1 AS REAL)))) ORDER BY '0.8837619256736966', 0.5745917823761149 ASC  NULLS FIRST, '8S' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY '0.8837619256736966', 0.5745917823761149 ASC  NULLS FIRST, '8S' ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((+ (CAST(rt0.c1 AS REAL)))) ORDER BY '0.8837619256736966', 0.5745917823761149 ASC  NULLS FIRST, '8S' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY '0.8837619256736966', 0.5745917823761149 ASC  NULLS FIRST, '8S' ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((+ (CAST(rt0.c1 AS REAL)))) ORDER BY '0.8837619256736966', 0.5745917823761149 ASC  NULLS FIRST, '8S' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE (((rt0.c2))<((rt0.c2)))  WHEN LOWER(rt0.c1) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END WHEN HEX(t0.c0) THEN 'wve*XLgJ' ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2))<((rt0.c2)))  WHEN LOWER(rt0.c1) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END WHEN HEX(t0.c0) THEN 'wve*XLgJ' ELSE rt0.c2 END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE (((rt0.c2))<((rt0.c2)))  WHEN LOWER(rt0.c1) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END WHEN HEX(t0.c0) THEN 'wve*XLgJ' ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2))<((rt0.c2)))  WHEN LOWER(rt0.c1) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END WHEN HEX(t0.c0) THEN 'wve*XLgJ' ELSE rt0.c2 END) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE (((rt0.c2))<((rt0.c2)))  WHEN LOWER(rt0.c1) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 END WHEN HEX(t0.c0) THEN 'wve*XLgJ' ELSE rt0.c2 END);
SELECT * FROM rt0 WHERE (((rt0.c1)+(TYPEOF(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)+(TYPEOF(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)+(TYPEOF(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)+(TYPEOF(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)+(TYPEOF(rt0.c1))));
SELECT * FROM t0 CROSS JOIN rt0 ON (NOT (rt0.c1)) WHERE (((((t0.c0)*(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*(rt0.c1))) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (NOT (rt0.c1)));
SELECT * FROM t0 CROSS JOIN rt0 ON (NOT (rt0.c1)) WHERE (((((t0.c0)*(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*(rt0.c1))) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (NOT (rt0.c1)));
SELECT * FROM t0 CROSS JOIN rt0 ON (NOT (rt0.c1)) WHERE (((((t0.c0)*(rt0.c1))) ISNULL));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)!=(t0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<>(t0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)!=(t0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<>(t0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)!=(t0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0)|(t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0)|(t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0)|(t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0)|(t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0) NOTNULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c0)|(t0.c0)) THEN (NOT (t0.c0)) WHEN ((t0.c0) IS TRUE) THEN t0.c0 ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN (+ (rt0.c2)) THEN (((rt0.c0, rt0.c1, '	z'))>=((t0.c0, rt0.c1, rt0.c0))) ELSE ((rt0.c2) BETWEEN (x'') AND (t0.c0)) END WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN (+ (rt0.c2)) THEN (((rt0.c0, rt0.c1, '	z'))>=((t0.c0, rt0.c1, rt0.c0))) ELSE ((rt0.c2) BETWEEN (x'') AND (t0.c0)) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN (+ (rt0.c2)) THEN (((rt0.c0, rt0.c1, '	z'))>=((t0.c0, rt0.c1, rt0.c0))) ELSE ((rt0.c2) BETWEEN (x'') AND (t0.c0)) END WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN (+ (rt0.c2)) THEN (((rt0.c0, rt0.c1, '	z'))>=((t0.c0, rt0.c1, rt0.c0))) ELSE ((rt0.c2) BETWEEN (x'') AND (t0.c0)) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END  WHEN (+ (rt0.c2)) THEN (((rt0.c0, rt0.c1, '	z'))>=((t0.c0, rt0.c1, rt0.c0))) ELSE ((rt0.c2) BETWEEN (x'') AND (t0.c0)) END WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(rt0.c2, rt0.c2) COLLATE NOCASE) ORDER BY (COALESCE(rt0.c1, rt0.c0) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(rt0.c2, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(rt0.c1, rt0.c0) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(rt0.c2, rt0.c2) COLLATE NOCASE) ORDER BY (COALESCE(rt0.c1, rt0.c0) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(rt0.c2, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(rt0.c1, rt0.c0) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(rt0.c2, rt0.c2) COLLATE NOCASE) ORDER BY (COALESCE(rt0.c1, rt0.c0) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS((NOT (t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS((NOT (t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS((NOT (t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((x'') IS FALSE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((x'') IS FALSE) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((x'') IS FALSE) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((x'') IS FALSE) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((x'') IS FALSE) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((~ ('lx.⼽q?nZ5')));
SELECT SUM(count) FROM (SELECT (((~ ('lx.⼽q?nZ5'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ ('lx.⼽q?nZ5')));
SELECT SUM(count) FROM (SELECT (((~ ('lx.⼽q?nZ5'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ ('lx.⼽q?nZ5')));
SELECT * FROM rt0 INNER JOIN t0 ON (((((((((('457477982')||(x'2493')))OR(0.6147915448775351)))AND(((rt0.c0)*('*ن쮓*!U&w')))))AND(((t0.c0) IS TRUE))))AND(rt0.c1 COLLATE BINARY)) WHERE (((CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END) ISNULL)) ORDER BY (((rt0.c1 IN (rt0.c0)))<(CAST(rt0.c2 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((((((('457477982')||(x'2493')))OR(0.6147915448775351)))AND(((rt0.c0)*('*ن쮓*!U&w')))))AND(((t0.c0) IS TRUE))))AND(rt0.c1 COLLATE BINARY)) ORDER BY (((rt0.c1 IN (rt0.c0)))<(CAST(rt0.c2 AS TEXT))) ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN t0 ON (((((((((('457477982')||(x'2493')))OR(0.6147915448775351)))AND(((rt0.c0)*('*ن쮓*!U&w')))))AND(((t0.c0) IS TRUE))))AND(rt0.c1 COLLATE BINARY)) WHERE (((CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END) ISNULL)) ORDER BY (((rt0.c1 IN (rt0.c0)))<(CAST(rt0.c2 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((((((('457477982')||(x'2493')))OR(0.6147915448775351)))AND(((rt0.c0)*('*ن쮓*!U&w')))))AND(((t0.c0) IS TRUE))))AND(rt0.c1 COLLATE BINARY)) ORDER BY (((rt0.c1 IN (rt0.c0)))<(CAST(rt0.c2 AS TEXT))) ASC  NULLS LAST);
SELECT * FROM rt0 INNER JOIN t0 ON (((((((((('457477982')||(x'2493')))OR(0.6147915448775351)))AND(((rt0.c0)*('*ن쮓*!U&w')))))AND(((t0.c0) IS TRUE))))AND(rt0.c1 COLLATE BINARY)) WHERE (((CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END) ISNULL)) ORDER BY (((rt0.c1 IN (rt0.c0)))<(CAST(rt0.c2 AS TEXT))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((('1284916032') NOT BETWEEN (t0.c0) AND (t0.c0))) ORDER BY '-1758864351', (('R{o') NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((('1284916032') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY '-1758864351', (('R{o') NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((t0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE ((('1284916032') NOT BETWEEN (t0.c0) AND (t0.c0))) ORDER BY '-1758864351', (('R{o') NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((('1284916032') NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY '-1758864351', (('R{o') NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((t0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE ((('1284916032') NOT BETWEEN (t0.c0) AND (t0.c0))) ORDER BY '-1758864351', (('R{o') NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND ((t0.c0 IN ())));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(UNICODE(rt0.c2))))AND(((rt0.c1) NOT NULL))))AND(((((rt0.c2)OR('EG[/EQUA')))OR(rt0.c0)))))AND(((rt0.c0) IS TRUE)))) ORDER BY TRIM(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))), UPPER(DISTINCT (rt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(UNICODE(rt0.c2))))AND(((rt0.c1) NOT NULL))))AND(((((rt0.c2)OR('EG[/EQUA')))OR(rt0.c0)))))AND(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY TRIM(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))), UPPER(DISTINCT (rt0.c0 IN ())) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(UNICODE(rt0.c2))))AND(((rt0.c1) NOT NULL))))AND(((((rt0.c2)OR('EG[/EQUA')))OR(rt0.c0)))))AND(((rt0.c0) IS TRUE)))) ORDER BY TRIM(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))), UPPER(DISTINCT (rt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(UNICODE(rt0.c2))))AND(((rt0.c1) NOT NULL))))AND(((((rt0.c2)OR('EG[/EQUA')))OR(rt0.c0)))))AND(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY TRIM(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))), UPPER(DISTINCT (rt0.c0 IN ())) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((CASE WHEN rt0.c0 THEN rt0.c0 END)OR(UNICODE(rt0.c2))))AND(((rt0.c1) NOT NULL))))AND(((((rt0.c2)OR('EG[/EQUA')))OR(rt0.c0)))))AND(((rt0.c0) IS TRUE)))) ORDER BY TRIM(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))), UPPER(DISTINCT (rt0.c0 IN ())) DESC;
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) WHERE (((CAST(0.46683659656727283 AS BLOB))OR((rt0.c1 IN (t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.46683659656727283 AS BLOB))OR((rt0.c1 IN (t0.c0, t0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) WHERE (((CAST(0.46683659656727283 AS BLOB))OR((rt0.c1 IN (t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.46683659656727283 AS BLOB))OR((rt0.c1 IN (t0.c0, t0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (+ ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) WHERE (((CAST(0.46683659656727283 AS BLOB))OR((rt0.c1 IN (t0.c0, t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c2)))) BETWEEN ((((rt0.c2))!=((rt0.c2)))) AND (((rt0.c0)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c2)))) BETWEEN ((((rt0.c2))!=((rt0.c2)))) AND (((rt0.c0)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c2)))) BETWEEN ((((rt0.c2))!=((rt0.c2)))) AND (((rt0.c0)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c2)))) BETWEEN ((((rt0.c2))!=((rt0.c2)))) AND (((rt0.c0)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c2)))) BETWEEN ((((rt0.c2))!=((rt0.c2)))) AND (((rt0.c0)GLOB(rt0.c0)))));
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.023146387939801838));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.023146387939801838)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.023146387939801838));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.023146387939801838)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELIHOOD(DISTINCT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), 0.023146387939801838));
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 ORDER BY TOTAL_CHANGES() ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 ORDER BY TOTAL_CHANGES() ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ('') ORDER BY TOTAL_CHANGES() ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>=(x'')))%(t0.c0 COLLATE RTRIM))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>=(x'')))%(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>=(x'')))%(t0.c0 COLLATE RTRIM))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>=(x'')))%(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>=(x'')))%(t0.c0 COLLATE RTRIM))) ORDER BY ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((rt0.c2) BETWEEN ((rt0.c2 IN (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN ((rt0.c2 IN (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c2) BETWEEN ((rt0.c2 IN (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN ((rt0.c2 IN (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((rt0.c2) BETWEEN ((rt0.c2 IN (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM rt0, t0 WHERE ((((x'9d72' IN ()))*('1086711656'))) ORDER BY ((((((t0.c0)%(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'9d72' IN ()))*('1086711656'))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c0)%(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(''))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((((x'9d72' IN ()))*('1086711656'))) ORDER BY ((((((t0.c0)%(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((x'9d72' IN ()))*('1086711656'))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c0)%(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(''))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((((x'9d72' IN ()))*('1086711656'))) ORDER BY ((((((t0.c0)%(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(''))  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((NOT (t0.c0))) NOTNULL) WHERE ((((((((rt0.c1))<((rt0.c0))))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(t0.c0 COLLATE BINARY))) ORDER BY ((((0.5813673041341739)>(t0.c0))) NOT BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1))<((rt0.c0))))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((NOT (t0.c0))) NOTNULL) ORDER BY ((((0.5813673041341739)>(t0.c0))) NOT BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((NOT (t0.c0))) NOTNULL) WHERE ((((((((rt0.c1))<((rt0.c0))))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(t0.c0 COLLATE BINARY))) ORDER BY ((((0.5813673041341739)>(t0.c0))) NOT BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1))<((rt0.c0))))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((NOT (t0.c0))) NOTNULL) ORDER BY ((((0.5813673041341739)>(t0.c0))) NOT BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((NOT (t0.c0))) NOTNULL) WHERE ((((((((rt0.c1))<((rt0.c0))))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(t0.c0 COLLATE BINARY))) ORDER BY ((((0.5813673041341739)>(t0.c0))) NOT BETWEEN (((rt0.c1)IS NOT(t0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (x'' COLLATE NOCASE))) ORDER BY ((((rt0.c2) ISNULL))*(((rt0.c0)/(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (x'' COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) ISNULL))*(((rt0.c0)/(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (x'' COLLATE NOCASE))) ORDER BY ((((rt0.c2) ISNULL))*(((rt0.c0)/(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (x'' COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) ISNULL))*(((rt0.c0)/(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (x'' COLLATE NOCASE))) ORDER BY ((((rt0.c2) ISNULL))*(((rt0.c0)/(rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) ORDER BY ((((x'') IS TRUE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((x'') IS TRUE)) NOT NULL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) ORDER BY ((((x'') IS TRUE)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((x'') IS TRUE)) NOT NULL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) COLLATE NOCASE) ORDER BY ((((x'') IS TRUE)) NOT NULL);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN NULL THEN (rt0.c2 IN ()) END WHERE (CAST(((rt0.c2)&(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)&(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN NULL THEN (rt0.c2 IN ()) END);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN NULL THEN (rt0.c2 IN ()) END WHERE (CAST(((rt0.c2)&(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)&(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN NULL THEN (rt0.c2 IN ()) END);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CASE (rt0.c1 IN ())  WHEN NULL THEN (rt0.c2 IN ()) END WHERE (CAST(((rt0.c2)&(rt0.c2)) AS BLOB));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c2)))GLOB(0xffffffff8189de01))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)/(rt0.c2)))GLOB(0xffffffff8189de01))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c2)))GLOB(0xffffffff8189de01))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)/(rt0.c2)))GLOB(0xffffffff8189de01))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c2)))GLOB(0xffffffff8189de01))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c2)>(rt0.c2)))AND((((rt0.c0, 1.003139479E9, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))OR(((rt0.c2)%(rt0.c2))))) ORDER BY ((((rt0.c1)==(rt0.c2)))>((('')<<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>(rt0.c2)))AND((((rt0.c0, 1.003139479E9, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))OR(((rt0.c2)%(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)==(rt0.c2)))>((('')<<(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((((rt0.c2)>(rt0.c2)))AND((((rt0.c0, 1.003139479E9, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))OR(((rt0.c2)%(rt0.c2))))) ORDER BY ((((rt0.c1)==(rt0.c2)))>((('')<<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)>(rt0.c2)))AND((((rt0.c0, 1.003139479E9, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))OR(((rt0.c2)%(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)==(rt0.c2)))>((('')<<(rt0.c2)))));
SELECT * FROM rt0 WHERE (((((((rt0.c2)>(rt0.c2)))AND((((rt0.c0, 1.003139479E9, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))))OR(((rt0.c2)%(rt0.c2))))) ORDER BY ((((rt0.c1)==(rt0.c2)))>((('')<<(rt0.c2))));
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((~ (t0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((~ (t0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((~ (t0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'')) NOT BETWEEN (((('1731862120') ISNULL))) AND (((((rt0.c1))<=((rt0.c2))))))) ORDER BY (+ (((rt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN (((('1731862120') ISNULL))) AND (((((rt0.c1))<=((rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'')) NOT BETWEEN (((('1731862120') ISNULL))) AND (((((rt0.c1))<=((rt0.c2))))))) ORDER BY (+ (((rt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((x'')) NOT BETWEEN (((('1731862120') ISNULL))) AND (((((rt0.c1))<=((rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c1) NOT NULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'')) NOT BETWEEN (((('1731862120') ISNULL))) AND (((((rt0.c1))<=((rt0.c2))))))) ORDER BY (+ (((rt0.c1) NOT NULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((+ (rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((+ (rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((+ (rt0.c2))) NOTNULL);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN x'' THEN rt0.c0 ELSE x'' END)!=(json_array_length(t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN x'' THEN rt0.c0 ELSE x'' END)!=(json_array_length(t0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN x'' THEN rt0.c0 ELSE x'' END)!=(json_array_length(t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN x'' THEN rt0.c0 ELSE x'' END)!=(json_array_length(t0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (TRIM(DISTINCT (~ (t0.c0)))) ORDER BY (((('	|')OR(((rt0.c1) NOTNULL))))AND(CAST('-285975195' AS TEXT))) DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((('	|')OR(((rt0.c1) NOTNULL))))AND(CAST('-285975195' AS TEXT))) DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (TRIM(DISTINCT (~ (t0.c0)))) ORDER BY (((('	|')OR(((rt0.c1) NOTNULL))))AND(CAST('-285975195' AS TEXT))) DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((('	|')OR(((rt0.c1) NOTNULL))))AND(CAST('-285975195' AS TEXT))) DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (TRIM(DISTINCT (~ (t0.c0)))) ORDER BY (((('	|')OR(((rt0.c1) NOTNULL))))AND(CAST('-285975195' AS TEXT))) DESC  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2)!=(rt0.c0))))) ORDER BY ((((t0.c0)OR(CASE t0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(((('nw[r<l', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, t0.c0))))) ASC, JULIANDAY(CASE rt0.c0  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)), CAST(t0.c0 AS TEXT))  NULLS LAST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2)!=(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)OR(CASE t0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(((('nw[r<l', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, t0.c0))))) ASC, JULIANDAY(CASE rt0.c0  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)), CAST(t0.c0 AS TEXT))  NULLS LAST, NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2)!=(rt0.c0))))) ORDER BY ((((t0.c0)OR(CASE t0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(((('nw[r<l', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, t0.c0))))) ASC, JULIANDAY(CASE rt0.c0  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)), CAST(t0.c0 AS TEXT))  NULLS LAST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2)!=(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)OR(CASE t0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(((('nw[r<l', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, t0.c0))))) ASC, JULIANDAY(CASE rt0.c0  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)), CAST(t0.c0 AS TEXT))  NULLS LAST, NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0)AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2)!=(rt0.c0))))) ORDER BY ((((t0.c0)OR(CASE t0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))OR(((('nw[r<l', rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, t0.c0))))) ASC, JULIANDAY(CASE rt0.c0  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)), CAST(t0.c0 AS TEXT))  NULLS LAST, NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0) ISNULL) IN ()) WHERE (((rt0.c1 COLLATE RTRIM)<<(CAST(rt0.c1 AS TEXT)))) ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN '_Gh_\r/^' END)) AND (((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)<<(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0) ISNULL) IN ()) ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN '_Gh_\r/^' END)) AND (((t0.c0 IN ())))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0) ISNULL) IN ()) WHERE (((rt0.c1 COLLATE RTRIM)<<(CAST(rt0.c1 AS TEXT)))) ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN '_Gh_\r/^' END)) AND (((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)<<(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0) ISNULL) IN ()) ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN '_Gh_\r/^' END)) AND (((t0.c0 IN ())))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0) ISNULL) IN ()) WHERE (((rt0.c1 COLLATE RTRIM)<<(CAST(rt0.c1 AS TEXT)))) ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN '_Gh_\r/^' END)) AND (((t0.c0 IN ()))));
SELECT * FROM rt0 WHERE (((rt0.c1)IS NOT('')) COLLATE BINARY) ORDER BY ((0xffffffffda3782b2) IS TRUE) ASC  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c2 END IN (((x'') BETWEEN (rt0.c0) AND (936905897)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT('')) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((0xffffffffda3782b2) IS TRUE) ASC  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c2 END IN (((x'') BETWEEN (rt0.c0) AND (936905897)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT * FROM rt0 WHERE (((rt0.c1)IS NOT('')) COLLATE BINARY) ORDER BY ((0xffffffffda3782b2) IS TRUE) ASC  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c2 END IN (((x'') BETWEEN (rt0.c0) AND (936905897)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT('')) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((0xffffffffda3782b2) IS TRUE) ASC  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c2 END IN (((x'') BETWEEN (rt0.c0) AND (936905897)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT * FROM rt0 WHERE (((rt0.c1)IS NOT('')) COLLATE BINARY) ORDER BY ((0xffffffffda3782b2) IS TRUE) ASC  NULLS LAST, (CASE WHEN rt0.c1 THEN rt0.c2 END IN (((x'') BETWEEN (rt0.c0) AND (936905897)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) NOTNULL));
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((((~ (t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((((~ (t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE ((((((~ (t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0)GLOB(t0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((0xffffffffd8f08acb, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (((rt0.c2))!=((rt0.c0)))))<=((rt0.c2, CAST(x'' AS INTEGER), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((0xffffffffd8f08acb, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (((rt0.c2))<>((rt0.c0)))))<=((rt0.c2, CAST(x'' AS INTEGER), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((0xffffffffd8f08acb, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (((rt0.c2))!=((rt0.c0)))))<=((rt0.c2, CAST(x'' AS INTEGER), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((0xffffffffd8f08acb, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (((rt0.c2))<>((rt0.c0)))))<=((rt0.c2, CAST(x'' AS INTEGER), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((0xffffffffd8f08acb, ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (((rt0.c2))!=((rt0.c0)))))<=((rt0.c2, CAST(x'' AS INTEGER), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((((rt0.c1)OR(x'')))OR(rt0.c1)))) AND ((CASE WHEN rt0.c2 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((((rt0.c1)OR(x'')))OR(rt0.c1)))) AND ((CASE WHEN rt0.c2 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((((rt0.c1)OR(x'')))OR(rt0.c1)))) AND ((CASE WHEN rt0.c2 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((((rt0.c1)OR(x'')))OR(rt0.c1)))) AND ((CASE WHEN rt0.c2 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((((rt0.c1)OR(x'')))OR(rt0.c1)))) AND ((CASE WHEN rt0.c2 THEN rt0.c1 END))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON t0.c0 WHERE ((((((rt0.c0))!=((0.19293513582946065)))) ISNULL)) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<>((0.19293513582946065)))) ISNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON t0.c0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON t0.c0 WHERE ((((((rt0.c0))!=((0.19293513582946065)))) ISNULL)) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<>((0.19293513582946065)))) ISNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON t0.c0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON t0.c0 WHERE ((((((rt0.c0))!=((0.19293513582946065)))) ISNULL)) ORDER BY t0.c0;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0 IN ())))>=((STRFTIME(rt0.c1, rt0.c2, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))>=((STRFTIME(rt0.c1, rt0.c2, t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0 IN ())))>=((STRFTIME(rt0.c1, rt0.c2, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))>=((STRFTIME(rt0.c1, rt0.c2, t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0 IN ())))>=((STRFTIME(rt0.c1, rt0.c2, t0.c0)))));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*((((t0.c0))>=((t0.c0)))))) ORDER BY ((((t0.c0)-(t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*((((t0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)-(t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*((((t0.c0))>=((t0.c0)))))) ORDER BY ((((t0.c0)-(t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*((((t0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)-(t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*((((t0.c0))>=((t0.c0)))))) ORDER BY ((((t0.c0)-(t0.c0)))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))  NULLS LAST, t0.c0 DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'fcbc') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((rt0.c1 IN (rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'fcbc') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((rt0.c1 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'fcbc') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((rt0.c1 IN (rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'fcbc') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((rt0.c1 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'fcbc') NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((rt0.c1 IN (rt0.c2, rt0.c2)))));
SELECT * FROM rt0 WHERE ((((~ (rt0.c2)))IS NOT(336223017)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))IS NOT(336223017))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ (rt0.c2)))IS NOT(336223017)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))IS NOT(336223017))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ (rt0.c2)))IS NOT(336223017)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE ((t0.c0) NOT NULL)  WHEN COALESCE(DISTINCT rt0.c2, rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((t0.c0) NOT NULL)  WHEN COALESCE(DISTINCT rt0.c2, rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE ((t0.c0) NOT NULL)  WHEN COALESCE(DISTINCT rt0.c2, rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((t0.c0) NOT NULL)  WHEN COALESCE(DISTINCT rt0.c2, rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c0) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE ((t0.c0) NOT NULL)  WHEN COALESCE(DISTINCT rt0.c2, rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) END;
SELECT * FROM t0, rt0 WHERE (((rt0.c1)=(CAST(rt0.c2 AS REAL)))) ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((((0xffffffffeaf6541f)OR(x'')))AND(rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END, (CAST(rt0.c2 AS TEXT) IN ()) DESC, (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, t0.c0))))|(t0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)=(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((((0xffffffffeaf6541f)OR(x'')))AND(rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END, (CAST(rt0.c2 AS TEXT) IN ()) DESC, (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, t0.c0))))|(t0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM t0, rt0 WHERE (((rt0.c1)=(CAST(rt0.c2 AS REAL)))) ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((((0xffffffffeaf6541f)OR(x'')))AND(rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END, (CAST(rt0.c2 AS TEXT) IN ()) DESC, (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, t0.c0))))|(t0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)=(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((((0xffffffffeaf6541f)OR(x'')))AND(rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END, (CAST(rt0.c2 AS TEXT) IN ()) DESC, (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, t0.c0))))|(t0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM t0, rt0 WHERE (((rt0.c1)=(CAST(rt0.c2 AS REAL)))) ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((((0xffffffffeaf6541f)OR(x'')))AND(rt0.c2)) ELSE ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END, (CAST(rt0.c2 AS TEXT) IN ()) DESC, (((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, t0.c0))))|(t0.c0 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c2);
SELECT * FROM t0, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN ((rt0.c2 IN ())) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) BETWEEN ((rt0.c2 IN ())) AND (t0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN ((rt0.c2 IN ())) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) BETWEEN ((rt0.c2 IN ())) AND (t0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c2 IN ())) BETWEEN ((rt0.c2 IN ())) AND (t0.c0)));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(LIKE(rt0.c0, rt0.c2) AS NUMERIC) WHERE (STRFTIME(((rt0.c0)=(t0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((rt0.c0)==(t0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(LIKE(rt0.c0, rt0.c2) AS NUMERIC));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(LIKE(rt0.c0, rt0.c2) AS NUMERIC) WHERE (STRFTIME(((rt0.c0)=(t0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((STRFTIME(((rt0.c0)==(t0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ()))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST(LIKE(rt0.c0, rt0.c2) AS NUMERIC));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON CAST(LIKE(rt0.c0, rt0.c2) AS NUMERIC) WHERE (STRFTIME(((rt0.c0)=(t0.c0)), rt0.c2 COLLATE NOCASE, (rt0.c1 IN ())));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (x'') ORDER BY rt0.c1  NULLS LAST, json_array_length(((((t0.c0)AND(rt0.c2)))OR(rt0.c2))), (((rt0.c0 IN ())) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1  NULLS LAST, json_array_length(((((t0.c0)AND(rt0.c2)))OR(rt0.c2))), (((rt0.c0 IN ())) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (x'') ORDER BY rt0.c1  NULLS LAST, json_array_length(((((t0.c0)AND(rt0.c2)))OR(rt0.c2))), (((rt0.c0 IN ())) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1  NULLS LAST, json_array_length(((((t0.c0)AND(rt0.c2)))OR(rt0.c2))), (((rt0.c0 IN ())) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (x'') ORDER BY rt0.c1  NULLS LAST, json_array_length(((((t0.c0)AND(rt0.c2)))OR(rt0.c2))), (((rt0.c0 IN ())) NOTNULL) DESC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF(DISTINCT rt0.c0, rt0.c2) COLLATE NOCASE COLLATE BINARY WHERE (((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF(DISTINCT rt0.c0, rt0.c2) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF(DISTINCT rt0.c0, rt0.c2) COLLATE NOCASE COLLATE BINARY WHERE (((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF(DISTINCT rt0.c0, rt0.c2) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON NULLIF(DISTINCT rt0.c0, rt0.c2) COLLATE NOCASE COLLATE BINARY WHERE (((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c2))<((-4.9725477E8))))!=(((rt0.c0)IS NOT(t0.c0))))) ORDER BY x''  NULLS LAST, t0.c0 DESC, (((- (t0.c0)))>((('<+^S[뽼+') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((-4.9725477E8))))!=(((rt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY x''  NULLS LAST, t0.c0 DESC, (((- (t0.c0)))>((('<+^S[뽼+') ISNULL))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c2))<((-4.9725477E8))))!=(((rt0.c0)IS NOT(t0.c0))))) ORDER BY x''  NULLS LAST, t0.c0 DESC, (((- (t0.c0)))>((('<+^S[뽼+') ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((-4.9725477E8))))!=(((rt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY x''  NULLS LAST, t0.c0 DESC, (((- (t0.c0)))>((('<+^S[뽼+') ISNULL))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c2))<((-4.9725477E8))))!=(((rt0.c0)IS NOT(t0.c0))))) ORDER BY x''  NULLS LAST, t0.c0 DESC, (((- (t0.c0)))>((('<+^S[뽼+') ISNULL))) ASC;
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (- (((rt0.c0)IS NOT('0.958949856555679')))) WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (((rt0.c0)IS NOT('0.958949856555679')))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (- (((rt0.c0)IS NOT('0.958949856555679')))) WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (((rt0.c0)IS NOT('0.958949856555679')))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (- (((rt0.c0)IS NOT('0.958949856555679')))) WHERE ((rt0.c0 IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN COALESCE(t0.c0, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN COALESCE(t0.c0, t0.c0) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN COALESCE(t0.c0, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN COALESCE(t0.c0, t0.c0) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN COALESCE(t0.c0, t0.c0) END);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ROUND(((t0.c0) BETWEEN (t0.c0) AND (rt0.c2)), 'k~') WHERE (rt0.c0) ORDER BY (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) IN (HEX(DISTINCT x''), rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ROUND(((t0.c0) BETWEEN (t0.c0) AND (rt0.c2)), 'k~') ORDER BY (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) IN (HEX(DISTINCT x''), rt0.c1)));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ROUND(((t0.c0) BETWEEN (t0.c0) AND (rt0.c2)), 'k~') WHERE (rt0.c0) ORDER BY (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) IN (HEX(DISTINCT x''), rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ROUND(((t0.c0) BETWEEN (t0.c0) AND (rt0.c2)), 'k~') ORDER BY (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) IN (HEX(DISTINCT x''), rt0.c1)));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ROUND(((t0.c0) BETWEEN (t0.c0) AND (rt0.c2)), 'k~') WHERE (rt0.c0) ORDER BY (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) IN (HEX(DISTINCT x''), rt0.c1));
SELECT COUNT(*) FROM t0, rt0 WHERE (0.5458912689871428) ORDER BY (NOT ((- (rt0.c1)))) ASC, ((rt0.c0)<(((rt0.c0)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.5458912689871428) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY (NOT ((- (rt0.c1)))) ASC, ((rt0.c0)<(((rt0.c0)&(rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (0.5458912689871428) ORDER BY (NOT ((- (rt0.c1)))) ASC, ((rt0.c0)<(((rt0.c0)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.5458912689871428) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY (NOT ((- (rt0.c1)))) ASC, ((rt0.c0)<(((rt0.c0)&(rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (0.5458912689871428) ORDER BY (NOT ((- (rt0.c1)))) ASC, ((rt0.c0)<(((rt0.c0)&(rt0.c0))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)<=(t0.c0))) NOTNULL)) ORDER BY ((t0.c0 COLLATE NOCASE)||((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<=(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE)||((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)<=(t0.c0))) NOTNULL)) ORDER BY ((t0.c0 COLLATE NOCASE)||((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<=(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE)||((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)<=(t0.c0))) NOTNULL)) ORDER BY ((t0.c0 COLLATE NOCASE)||((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT COUNT(*) FROM rt0 INDEXED BY i58 WHERE (x'') ORDER BY (((rt0.c1)) BETWEEN ((((0.00884008564686567)|(rt0.c1)))) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INDEXED BY i58 ORDER BY (((rt0.c1)) BETWEEN ((((0.00884008564686567)|(rt0.c1)))) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INDEXED BY i58 WHERE (x'') ORDER BY (((rt0.c1)) BETWEEN ((((0.00884008564686567)|(rt0.c1)))) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INDEXED BY i58 ORDER BY (((rt0.c1)) BETWEEN ((((0.00884008564686567)|(rt0.c1)))) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)|(t0.c0)) THEN x'' ELSE t0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)|(t0.c0)) THEN x'' ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)|(t0.c0)) THEN x'' ELSE t0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)|(t0.c0)) THEN x'' ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)|(t0.c0)) THEN x'' ELSE t0.c0 COLLATE RTRIM END);
SELECT ALL * FROM t0, rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY rt0.c2 DESC, t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 DESC, t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY rt0.c2 DESC, t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 DESC, t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY rt0.c2 DESC, t0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((t0.c0 IN (rt0.c2))) BETWEEN (((rt0.c0)|(t0.c0))) AND (CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN '0.2840131108614008' ELSE rt0.c0 END)) WHERE (((('-1004929010'))!=((((((rt0.c0)AND(0.3855548268691741)))AND(rt0.c0)))))) ORDER BY ((NULL) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((('-1004929010'))!=((((((rt0.c0)AND(0.3855548268691741)))AND(rt0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((t0.c0 IN (rt0.c2))) BETWEEN (((rt0.c0)|(t0.c0))) AND (CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN '0.2840131108614008' ELSE rt0.c0 END)) ORDER BY ((NULL) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) IS FALSE))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((t0.c0 IN (rt0.c2))) BETWEEN (((rt0.c0)|(t0.c0))) AND (CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN '0.2840131108614008' ELSE rt0.c0 END)) WHERE (((('-1004929010'))!=((((((rt0.c0)AND(0.3855548268691741)))AND(rt0.c0)))))) ORDER BY ((NULL) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((('-1004929010'))!=((((((rt0.c0)AND(0.3855548268691741)))AND(rt0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((t0.c0 IN (rt0.c2))) BETWEEN (((rt0.c0)|(t0.c0))) AND (CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN '0.2840131108614008' ELSE rt0.c0 END)) ORDER BY ((NULL) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) IS FALSE))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((t0.c0 IN (rt0.c2))) BETWEEN (((rt0.c0)|(t0.c0))) AND (CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN '0.2840131108614008' ELSE rt0.c0 END)) WHERE (((('-1004929010'))!=((((((rt0.c0)AND(0.3855548268691741)))AND(rt0.c0)))))) ORDER BY ((NULL) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) IS FALSE)));
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))+((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, TYPEOF(DISTINCT x'6b26')  NULLS LAST, ((t0.c0 COLLATE NOCASE)&(((t0.c0)<=(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))+((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, TYPEOF(DISTINCT x'6b26')  NULLS LAST, ((t0.c0 COLLATE NOCASE)&(((t0.c0)<=(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))+((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, TYPEOF(DISTINCT x'6b26')  NULLS LAST, ((t0.c0 COLLATE NOCASE)&(((t0.c0)<=(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))+((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, TYPEOF(DISTINCT x'6b26')  NULLS LAST, ((t0.c0 COLLATE NOCASE)&(((t0.c0)<=(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))+((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))==(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS LAST, TYPEOF(DISTINCT x'6b26')  NULLS LAST, ((t0.c0 COLLATE NOCASE)&(((t0.c0)<=(t0.c0))))  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY CAST(((rt0.c0)>(rt0.c1)) AS REAL), CASE ((t0.c0)<>(rt0.c1))  WHEN rt0.c1 THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c0)>(rt0.c1)) AS REAL), CASE ((t0.c0)<>(rt0.c1))  WHEN rt0.c1 THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END ASC);
SELECT * FROM rt0, t0 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY CAST(((rt0.c0)>(rt0.c1)) AS REAL), CASE ((t0.c0)<>(rt0.c1))  WHEN rt0.c1 THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c0)>(rt0.c1)) AS REAL), CASE ((t0.c0)<>(rt0.c1))  WHEN rt0.c1 THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END ASC);
SELECT * FROM rt0, t0 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) ORDER BY CAST(((rt0.c0)>(rt0.c1)) AS REAL), CASE ((t0.c0)<>(rt0.c1))  WHEN rt0.c1 THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END ASC;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE NOCASE)+(DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE)+(DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) DESC);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE NOCASE)+(DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE)+(DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) DESC);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE NOCASE)+(DATETIME(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)>>(rt0.c0)) IN ((((rt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2))), rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>>(rt0.c0)) IN ((((rt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2))), rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)>>(rt0.c0)) IN ((((rt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2))), rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>>(rt0.c0)) IN ((((rt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2))), rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)>>(rt0.c0)) IN ((((rt0.c0, NULL, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c2))), rt0.c2)));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((CAST(t0.c0 AS REAL), ((rt0.c0) IS TRUE), (((rt0.c2))<>((rt0.c2)))))>=((rt0.c2 COLLATE RTRIM, (NOT (t0.c0)), rt0.c1)))) ORDER BY TYPEOF(rt0.c0 COLLATE NOCASE)  NULLS FIRST, 0.6330708839687735  NULLS FIRST, ((((CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (0.30837520834094956))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS REAL), ((rt0.c0) IS TRUE), (((rt0.c2))!=((rt0.c2)))))>=((rt0.c2 COLLATE RTRIM, (NOT (t0.c0)), rt0.c1)))) IS TRUE)  as count FROM rt0, t0 ORDER BY TYPEOF(rt0.c0 COLLATE NOCASE)  NULLS FIRST, 0.6330708839687735  NULLS FIRST, ((((CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (0.30837520834094956))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((CAST(t0.c0 AS REAL), ((rt0.c0) IS TRUE), (((rt0.c2))<>((rt0.c2)))))>=((rt0.c2 COLLATE RTRIM, (NOT (t0.c0)), rt0.c1)))) ORDER BY TYPEOF(rt0.c0 COLLATE NOCASE)  NULLS FIRST, 0.6330708839687735  NULLS FIRST, ((((CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (0.30837520834094956))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS REAL), ((rt0.c0) IS TRUE), (((rt0.c2))!=((rt0.c2)))))>=((rt0.c2 COLLATE RTRIM, (NOT (t0.c0)), rt0.c1)))) IS TRUE)  as count FROM rt0, t0 ORDER BY TYPEOF(rt0.c0 COLLATE NOCASE)  NULLS FIRST, 0.6330708839687735  NULLS FIRST, ((((CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (0.30837520834094956))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((CAST(t0.c0 AS REAL), ((rt0.c0) IS TRUE), (((rt0.c2))<>((rt0.c2)))))>=((rt0.c2 COLLATE RTRIM, (NOT (t0.c0)), rt0.c1)))) ORDER BY TYPEOF(rt0.c0 COLLATE NOCASE)  NULLS FIRST, 0.6330708839687735  NULLS FIRST, ((((CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END)AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (0.30837520834094956))))  NULLS LAST;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON HEX((((rt0.c2))<=((rt0.c2)))) WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON HEX((((rt0.c2))<=((rt0.c2)))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON HEX((((rt0.c2))<=((rt0.c2)))) WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON HEX((((rt0.c2))<=((rt0.c2)))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON HEX((((rt0.c2))<=((rt0.c2)))) WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL * FROM t0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN ((((1404420090, rt0.c2, t0.c0))<((0.7173342448343214, rt0.c1, 'q)U\rJT(')))) AND (((((t0.c0)AND(rt0.c2)))OR(-1156835898))))) ORDER BY CASE ((rt0.c0) ISNULL)  WHEN (rt0.c1 IN ()) THEN CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN (+ (rt0.c1)) THEN (((x'3370f730', rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND (('\nv䤤MsHs>', rt0.c2, rt0.c1))) WHEN ((t0.c0) NOTNULL) THEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END  NULLS LAST, CAST(((NULL) IS TRUE) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN ((((1404420090, rt0.c2, t0.c0))<((0.7173342448343214, rt0.c1, 'q)U\rJT(')))) AND (((((t0.c0)AND(rt0.c2)))OR(-1156835898))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((rt0.c0) ISNULL)  WHEN (rt0.c1 IN ()) THEN CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN (+ (rt0.c1)) THEN (((x'3370f730', rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND (('\nv䤤MsHs>', rt0.c2, rt0.c1))) WHEN ((t0.c0) NOTNULL) THEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END  NULLS LAST, CAST(((NULL) IS TRUE) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN ((((1404420090, rt0.c2, t0.c0))<((0.7173342448343214, rt0.c1, 'q)U\rJT(')))) AND (((((t0.c0)AND(rt0.c2)))OR(-1156835898))))) ORDER BY CASE ((rt0.c0) ISNULL)  WHEN (rt0.c1 IN ()) THEN CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN (+ (rt0.c1)) THEN (((x'3370f730', rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND (('\nv䤤MsHs>', rt0.c2, rt0.c1))) WHEN ((t0.c0) NOTNULL) THEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END  NULLS LAST, CAST(((NULL) IS TRUE) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN ((((1404420090, rt0.c2, t0.c0))<((0.7173342448343214, rt0.c1, 'q)U\rJT(')))) AND (((((t0.c0)AND(rt0.c2)))OR(-1156835898))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((rt0.c0) ISNULL)  WHEN (rt0.c1 IN ()) THEN CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN (+ (rt0.c1)) THEN (((x'3370f730', rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND (('\nv䤤MsHs>', rt0.c2, rt0.c1))) WHEN ((t0.c0) NOTNULL) THEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END  NULLS LAST, CAST(((NULL) IS TRUE) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN ((((1404420090, rt0.c2, t0.c0))<((0.7173342448343214, rt0.c1, 'q)U\rJT(')))) AND (((((t0.c0)AND(rt0.c2)))OR(-1156835898))))) ORDER BY CASE ((rt0.c0) ISNULL)  WHEN (rt0.c1 IN ()) THEN CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN (+ (rt0.c1)) THEN (((x'3370f730', rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND (('\nv䤤MsHs>', rt0.c2, rt0.c1))) WHEN ((t0.c0) NOTNULL) THEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END  NULLS LAST, CAST(((NULL) IS TRUE) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON '' WHERE (((734278852)/(t0.c0))) ORDER BY CASE WHEN NULL THEN rt0.c1 ELSE -1323941935 END COLLATE NOCASE ASC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((734278852)/(t0.c0))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON '' ORDER BY CASE WHEN NULL THEN rt0.c1 ELSE -1323941935 END COLLATE NOCASE ASC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON '' WHERE (((734278852)/(t0.c0))) ORDER BY CASE WHEN NULL THEN rt0.c1 ELSE -1323941935 END COLLATE NOCASE ASC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((734278852)/(t0.c0))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON '' ORDER BY CASE WHEN NULL THEN rt0.c1 ELSE -1323941935 END COLLATE NOCASE ASC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON '' WHERE (((734278852)/(t0.c0))) ORDER BY CASE WHEN NULL THEN rt0.c1 ELSE -1323941935 END COLLATE NOCASE ASC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((DATE(t0.c0, t0.c0, t0.c0))>=(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((DATE(t0.c0, t0.c0, t0.c0))>=(((t0.c0) ISNULL))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((DATE(t0.c0, t0.c0, t0.c0))>=(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY ((DATE(t0.c0, t0.c0, t0.c0))>=(((t0.c0) ISNULL))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0)&(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY ((DATE(t0.c0, t0.c0, t0.c0))>=(((t0.c0) ISNULL)));
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULL) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, t0.c0)) AND (ROUND(rt0.c1, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, t0.c0)) AND (ROUND(rt0.c1, t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULL) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, t0.c0)) AND (ROUND(rt0.c1, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, t0.c0)) AND (ROUND(rt0.c1, t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((NULL) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, t0.c0)) AND (ROUND(rt0.c1, t0.c0))));
SELECT * FROM rt0, t0 WHERE ((~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOT NULL))=('TRUE'))) ORDER BY rt0.c1  NULLS FIRST, ((((t0.c0)>(rt0.c2)))>=(((((rt0.c0)AND(rt0.c0)))AND(NULL))))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))=('TRUE'))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1  NULLS FIRST, ((((t0.c0)>(rt0.c2)))>=(((((rt0.c0)AND(rt0.c0)))AND(NULL))))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOT NULL))=('TRUE'))) ORDER BY rt0.c1  NULLS FIRST, ((((t0.c0)>(rt0.c2)))>=(((((rt0.c0)AND(rt0.c0)))AND(NULL))))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))=('TRUE'))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1  NULLS FIRST, ((((t0.c0)>(rt0.c2)))>=(((((rt0.c0)AND(rt0.c0)))AND(NULL))))  NULLS LAST, rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) NOT NULL))=('TRUE'))) ORDER BY rt0.c1  NULLS FIRST, ((((t0.c0)>(rt0.c2)))>=(((((rt0.c0)AND(rt0.c0)))AND(NULL))))  NULLS LAST, rt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END ELSE (rt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND (t0.c0))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND (t0.c0))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND (t0.c0))) ORDER BY t0.c0;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE NOCASE) ORDER BY ((x'') ISNULL), CASE rt0.c1  WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN CASE WHEN x'' THEN rt0.c0 ELSE ',￿3ETA>+L' END ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((x'') ISNULL), CASE rt0.c1  WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN CASE WHEN x'' THEN rt0.c0 ELSE ',￿3ETA>+L' END ELSE NULL END DESC);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE NOCASE) ORDER BY ((x'') ISNULL), CASE rt0.c1  WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN CASE WHEN x'' THEN rt0.c0 ELSE ',￿3ETA>+L' END ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((x'') ISNULL), CASE rt0.c1  WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN CASE WHEN x'' THEN rt0.c0 ELSE ',￿3ETA>+L' END ELSE NULL END DESC);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE NOCASE) ORDER BY ((x'') ISNULL), CASE rt0.c1  WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) THEN CASE WHEN x'' THEN rt0.c0 ELSE ',￿3ETA>+L' END ELSE NULL END DESC;
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY CAST((NOT (t0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY CAST((NOT (t0.c0)) AS TEXT) ASC);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY CAST((NOT (t0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY CAST((NOT (t0.c0)) AS TEXT) ASC);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY CAST((NOT (t0.c0)) AS TEXT) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))>>(rt0.c0 COLLATE BINARY))) ORDER BY ((NULL)OR(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))>>(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NULL)OR(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))>>(rt0.c0 COLLATE BINARY))) ORDER BY ((NULL)OR(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))>>(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NULL)OR(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))>>(rt0.c0 COLLATE BINARY))) ORDER BY ((NULL)OR(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)GLOB(rt0.c0)) COLLATE BINARY) ORDER BY COALESCE(DISTINCT (- (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, rt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c1, rt0.c2, x'2ed2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))), TRIM(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT (- (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, rt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c1, rt0.c2, x'2ed2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))), TRIM(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)GLOB(rt0.c0)) COLLATE BINARY) ORDER BY COALESCE(DISTINCT (- (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, rt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c1, rt0.c2, x'2ed2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))), TRIM(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT (- (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, rt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c1, rt0.c2, x'2ed2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))), TRIM(rt0.c2))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)GLOB(rt0.c0)) COLLATE BINARY) ORDER BY COALESCE(DISTINCT (- (rt0.c2)), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, rt0.c1 COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c1, rt0.c2, x'2ed2')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))), TRIM(rt0.c2))  NULLS FIRST;
SELECT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE BINARY)) ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY);
SELECT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE BINARY)) ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY);
SELECT * FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(t0.c0 COLLATE BINARY)) ORDER BY CAST(t0.c0 AS BLOB) COLLATE BINARY;
SELECT ALL * FROM t0 WHERE (((((t0.c0))<=((t0.c0))) IN (CAST(t0.c0 AS REAL)))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0))<=((t0.c0))) IN (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0))<=((t0.c0))) IN (CAST(t0.c0 AS REAL)))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0))<=((t0.c0))) IN (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((t0.c0))<=((t0.c0))) IN (CAST(t0.c0 AS REAL)))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c1, rt0.c1, t0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c1, rt0.c2, NULL))) THEN (~ (rt0.c2)) WHEN rt0.c2 THEN (((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) WHEN ((t0.c0)*(rt0.c2)) THEN '-1156082952' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c1, rt0.c1, t0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c1, rt0.c2, NULL))) THEN (~ (rt0.c2)) WHEN rt0.c2 THEN (((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) WHEN ((t0.c0)*(rt0.c2)) THEN '-1156082952' END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c1, rt0.c1, t0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c1, rt0.c2, NULL))) THEN (~ (rt0.c2)) WHEN rt0.c2 THEN (((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) WHEN ((t0.c0)*(rt0.c2)) THEN '-1156082952' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c1, rt0.c1, t0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c1, rt0.c2, NULL))) THEN (~ (rt0.c2)) WHEN rt0.c2 THEN (((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) WHEN ((t0.c0)*(rt0.c2)) THEN '-1156082952' END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c1, rt0.c1, t0.c0, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, rt0.c1, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c1, rt0.c2, NULL))) THEN (~ (rt0.c2)) WHEN rt0.c2 THEN (((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c2))) WHEN ((t0.c0)*(rt0.c2)) THEN '-1156082952' END);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM rt0, t0 WHERE (x'fbcb') ORDER BY (((UPPER(DISTINCT rt0.c1), 0.20133905013802766, ((rt0.c0) IS FALSE)))<(((rt0.c0 IN (rt0.c1)), (+ (rt0.c0)), x'')));
SELECT SUM(count) FROM (SELECT ALL ((x'fbcb') IS TRUE)  as count FROM rt0, t0 ORDER BY (((UPPER(DISTINCT rt0.c1), 0.20133905013802766, ((rt0.c0) IS FALSE)))<(((rt0.c0 IN (rt0.c1)), (+ (rt0.c0)), x''))));
SELECT ALL * FROM rt0, t0 WHERE (x'fbcb') ORDER BY (((UPPER(DISTINCT rt0.c1), 0.20133905013802766, ((rt0.c0) IS FALSE)))<(((rt0.c0 IN (rt0.c1)), (+ (rt0.c0)), x'')));
SELECT SUM(count) FROM (SELECT ALL ((x'fbcb') IS TRUE)  as count FROM rt0, t0 ORDER BY (((UPPER(DISTINCT rt0.c1), 0.20133905013802766, ((rt0.c0) IS FALSE)))<(((rt0.c0 IN (rt0.c1)), (+ (rt0.c0)), x''))));
SELECT ALL * FROM rt0, t0 WHERE (x'fbcb') ORDER BY (((UPPER(DISTINCT rt0.c1), 0.20133905013802766, ((rt0.c0) IS FALSE)))<(((rt0.c0 IN (rt0.c1)), (+ (rt0.c0)), x'')));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c0)|(((rt0.c1)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)|(((rt0.c1)|(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c0)|(((rt0.c1)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)|(((rt0.c1)|(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c0)|(((rt0.c1)|(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (2.013174894E9)) ASC, ((((((rt0.c0)OR(NULL)))AND(rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (2.013174894E9)) ASC, ((((((rt0.c0)OR(NULL)))AND(rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (2.013174894E9)) ASC, ((((((rt0.c0)OR(NULL)))AND(rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (2.013174894E9)) ASC, ((((((rt0.c0)OR(NULL)))AND(rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END) IS FALSE)) ORDER BY ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST, ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (2.013174894E9)) ASC, ((((((rt0.c0)OR(NULL)))AND(rt0.c2))) IS TRUE);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((('宆h塤''') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('宆h塤''') NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((('宆h塤''') NOTNULL));
SELECT SUM(count) FROM (SELECT (((('宆h塤''') NOTNULL)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((('宆h塤''') NOTNULL));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE rt0.c2  WHEN t0.c0 THEN 'B)m' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE rt0.c2  WHEN t0.c0 THEN 'B)m' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE rt0.c2  WHEN t0.c0 THEN 'B)m' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE rt0.c2  WHEN t0.c0 THEN 'B)m' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CASE rt0.c2  WHEN t0.c0 THEN 'B)m' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))));
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)LIKE(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)LIKE(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)LIKE(((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)LIKE(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY)LIKE(((t0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)||(x'')) IN ())) ORDER BY CASE WHEN rt0.c1 THEN '-1565854610' ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END DESC, (+ (json_extract(rt0.c2, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)||(x'')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN '-1565854610' ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END DESC, (+ (json_extract(rt0.c2, rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)||(x'')) IN ())) ORDER BY CASE WHEN rt0.c1 THEN '-1565854610' ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END DESC, (+ (json_extract(rt0.c2, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)||(x'')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN '-1565854610' ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END DESC, (+ (json_extract(rt0.c2, rt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'' COLLATE NOCASE)AND(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE)AND(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'' COLLATE NOCASE)AND(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE NOCASE)AND(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'' COLLATE NOCASE)AND(((rt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)&('1128460610')) ELSE GLOB(rt0.c2, rt0.c2) END) ORDER BY (~ (((rt0.c0)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)&('1128460610')) ELSE GLOB(rt0.c2, rt0.c2) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ (((rt0.c0)LIKE(rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)&('1128460610')) ELSE GLOB(rt0.c2, rt0.c2) END) ORDER BY (~ (((rt0.c0)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)&('1128460610')) ELSE GLOB(rt0.c2, rt0.c2) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ (((rt0.c0)LIKE(rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)&('1128460610')) ELSE GLOB(rt0.c2, rt0.c2) END) ORDER BY (~ (((rt0.c0)LIKE(rt0.c0))));
SELECT * FROM rt0 WHERE (x'') ORDER BY ((UPPER(rt0.c1))||(((rt0.c2)IS NOT(rt0.c1)))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((UPPER(rt0.c1))||(((rt0.c2)IS NOT(rt0.c1)))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY);
SELECT * FROM rt0 WHERE (x'') ORDER BY ((UPPER(rt0.c1))||(((rt0.c2)IS NOT(rt0.c1)))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((UPPER(rt0.c1))||(((rt0.c2)IS NOT(rt0.c1)))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY);
SELECT * FROM rt0 WHERE (x'') ORDER BY ((UPPER(rt0.c1))||(((rt0.c2)IS NOT(rt0.c1)))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY;
SELECT * FROM t0, rt0 WHERE ((((rt0.c0)-(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)-(rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c0)-(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)-(rt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((rt0.c0)-(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (NOT (((rt0.c0)%(rt0.c2)))) WHERE ((('195423982')!=(((x'62d2')-(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('195423982')<>(((x'62d2')-(t0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (NOT (((rt0.c0)%(rt0.c2)))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (NOT (((rt0.c0)%(rt0.c2)))) WHERE ((('195423982')!=(((x'62d2')-(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((('195423982')<>(((x'62d2')-(t0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (NOT (((rt0.c0)%(rt0.c2)))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (NOT (((rt0.c0)%(rt0.c2)))) WHERE ((('195423982')!=(((x'62d2')-(t0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1) NOT BETWEEN (-1e500) AND (rt0.c2))))) ORDER BY ((((((rt0.c2)/(rt0.c1)))OR(((rt0.c1)>(x'')))))OR(CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1) NOT BETWEEN (-1e500) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)/(rt0.c1)))OR(((rt0.c1)>(x'')))))OR(CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1) NOT BETWEEN (-1e500) AND (rt0.c2))))) ORDER BY ((((((rt0.c2)/(rt0.c1)))OR(((rt0.c1)>(x'')))))OR(CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1) NOT BETWEEN (-1e500) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)/(rt0.c1)))OR(((rt0.c1)>(x'')))))OR(CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(NULL)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(((rt0.c1) NOT BETWEEN (-1e500) AND (rt0.c2))))) ORDER BY ((((((rt0.c2)/(rt0.c1)))OR(((rt0.c1)>(x'')))))OR(CAST(rt0.c1 AS INTEGER))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (0.8367709036319493);
SELECT SUM(count) FROM (SELECT ((0.8367709036319493) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (0.8367709036319493);
SELECT SUM(count) FROM (SELECT ((0.8367709036319493) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (0.8367709036319493);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND(((rt0.c2)OR(rt0.c2)))))OR(((rt0.c2)<('-961132611')))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS REAL))AND(((rt0.c2)OR(rt0.c2)))))OR(((rt0.c2)<('-961132611'))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND(((rt0.c2)OR(rt0.c2)))))OR(((rt0.c2)<('-961132611')))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS REAL))AND(((rt0.c2)OR(rt0.c2)))))OR(((rt0.c2)<('-961132611'))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND(((rt0.c2)OR(rt0.c2)))))OR(((rt0.c2)<('-961132611')))));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CAST(IFNULL(rt0.c0, rt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(rt0.c0, rt0.c1) AS BLOB)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CAST(IFNULL(rt0.c0, rt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(rt0.c0, rt0.c1) AS BLOB)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (CAST(IFNULL(rt0.c0, rt0.c1) AS BLOB));
SELECT ALL * FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)IS(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0 INDEXED BY i58, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INDEXED BY i58, rt0);
SELECT ALL * FROM t0 INDEXED BY i58, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INDEXED BY i58, rt0);
SELECT ALL * FROM t0 INDEXED BY i58, rt0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY (- (0.4837157763816111)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (0.4837157763816111)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY (- (0.4837157763816111)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS FALSE) IN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (0.4837157763816111)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY (- (0.4837157763816111)) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOTNULL) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS REAL));
SELECT * FROM rt0 CROSS JOIN t0 ON (((rt0.c2) IS FALSE) IN (rt0.c1)) WHERE (((((t0.c0) NOTNULL))>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((rt0.c2) IS FALSE) IN (rt0.c1)));
SELECT * FROM rt0 CROSS JOIN t0 ON (((rt0.c2) IS FALSE) IN (rt0.c1)) WHERE (((((t0.c0) NOTNULL))>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((rt0.c2) IS FALSE) IN (rt0.c1)));
SELECT * FROM rt0 CROSS JOIN t0 ON (((rt0.c2) IS FALSE) IN (rt0.c1)) WHERE (((((t0.c0) NOTNULL))>((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))));
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)<=(rt0.c1)))||(((rt0.c2) IS FALSE)))) ORDER BY (0xffffffffd02a8b66 IN ()) ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(rt0.c1)))||(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY (0Xffffffffd02a8b66 IN ()) ASC, rt0.c0  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)<=(rt0.c1)))||(((rt0.c2) IS FALSE)))) ORDER BY (0xffffffffd02a8b66 IN ()) ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<=(rt0.c1)))||(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY (0Xffffffffd02a8b66 IN ()) ASC, rt0.c0  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)<=(rt0.c1)))||(((rt0.c2) IS FALSE)))) ORDER BY (0xffffffffd02a8b66 IN ()) ASC, rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c0) ISNULL) THEN ((rt0.c1) ISNULL) END WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c0 WHEN ((((rt0.c0)OR(rt0.c2)))OR(NULL)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('1971702166' AS NUMERIC) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c0 WHEN ((((rt0.c0)OR(rt0.c2)))OR(NULL)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('1971702166' AS NUMERIC) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c0) ISNULL) THEN ((rt0.c1) ISNULL) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c0) ISNULL) THEN ((rt0.c1) ISNULL) END WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c0 WHEN ((((rt0.c0)OR(rt0.c2)))OR(NULL)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('1971702166' AS NUMERIC) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c0 WHEN ((((rt0.c0)OR(rt0.c2)))OR(NULL)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('1971702166' AS NUMERIC) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c0) ISNULL) THEN ((rt0.c1) ISNULL) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c0) ISNULL) THEN ((rt0.c1) ISNULL) END WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c0 WHEN ((((rt0.c0)OR(rt0.c2)))OR(NULL)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) WHEN CAST('1971702166' AS NUMERIC) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) END);
SELECT ALL * FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY (((((t0.c0) IS FALSE)))<=((t0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0) IS FALSE)))<=((t0.c0 COLLATE BINARY))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY (((((t0.c0) IS FALSE)))<=((t0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0) IS FALSE)))<=((t0.c0 COLLATE BINARY))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY (((((t0.c0) IS FALSE)))<=((t0.c0 COLLATE BINARY))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) ORDER BY ((((rt0.c2)<(rt0.c2)))<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)<(rt0.c2)))<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) ORDER BY ((((rt0.c2)<(rt0.c2)))<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)<(rt0.c2)))<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))) ORDER BY ((((rt0.c2)<(rt0.c2)))<(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)) AS REAL));
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c0)>('0.33726812095273884')))>(rt0.c1 COLLATE NOCASE))) ORDER BY (((TYPEOF(rt0.c2)))==((rt0.c1 COLLATE BINARY))) ASC  NULLS FIRST, CAST(((t0.c0)<=(rt0.c2)) AS REAL) DESC, ((SQLITE_COMPILEOPTION_GET(t0.c0)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>('0.33726812095273884')))>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (((TYPEOF(rt0.c2)))==((rt0.c1 COLLATE BINARY))) ASC  NULLS FIRST, CAST(((t0.c0)<=(rt0.c2)) AS REAL) DESC, ((SQLITE_COMPILEOPTION_GET(t0.c0)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c0)>('0.33726812095273884')))>(rt0.c1 COLLATE NOCASE))) ORDER BY (((TYPEOF(rt0.c2)))==((rt0.c1 COLLATE BINARY))) ASC  NULLS FIRST, CAST(((t0.c0)<=(rt0.c2)) AS REAL) DESC, ((SQLITE_COMPILEOPTION_GET(t0.c0)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>('0.33726812095273884')))>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (((TYPEOF(rt0.c2)))==((rt0.c1 COLLATE BINARY))) ASC  NULLS FIRST, CAST(((t0.c0)<=(rt0.c2)) AS REAL) DESC, ((SQLITE_COMPILEOPTION_GET(t0.c0)) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c0)>('0.33726812095273884')))>(rt0.c1 COLLATE NOCASE))) ORDER BY (((TYPEOF(rt0.c2)))==((rt0.c1 COLLATE BINARY))) ASC  NULLS FIRST, CAST(((t0.c0)<=(rt0.c2)) AS REAL) DESC, ((SQLITE_COMPILEOPTION_GET(t0.c0)) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((CAST(rt0.c0 AS REAL)))>=(('1022737555'))) WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((CAST(rt0.c0 AS REAL)))>=(('1022737555'))));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((CAST(rt0.c0 AS REAL)))>=(('1022737555'))) WHERE ((~ (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((CAST(rt0.c0 AS REAL)))>=(('1022737555'))));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((CAST(rt0.c0 AS REAL)))>=(('1022737555'))) WHERE ((~ (rt0.c1)));
SELECT ALL * FROM t0 WHERE ((+ (NULL))) ORDER BY CASE ((t0.c0)OR(t0.c0))  WHEN (((('	x')OR(t0.c0)))AND(t0.c0)) THEN t0.c0 WHEN NULL THEN t0.c0 WHEN (- (0Xffffffff82372798)) THEN CASE 0x4784eb15  WHEN t0.c0 THEN 2010749174 END ELSE t0.c0 COLLATE RTRIM END DESC  NULLS LAST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(((t0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)OR(t0.c0))  WHEN (((('	x')OR(t0.c0)))AND(t0.c0)) THEN t0.c0 WHEN NULL THEN t0.c0 WHEN (- (0Xffffffff82372798)) THEN CASE 0x4784eb15  WHEN t0.c0 THEN 2010749174 END ELSE t0.c0 COLLATE RTRIM END DESC  NULLS LAST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(((t0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (NULL))) ORDER BY CASE ((t0.c0)OR(t0.c0))  WHEN (((('	x')OR(t0.c0)))AND(t0.c0)) THEN t0.c0 WHEN NULL THEN t0.c0 WHEN (- (0Xffffffff82372798)) THEN CASE 0x4784eb15  WHEN t0.c0 THEN 2010749174 END ELSE t0.c0 COLLATE RTRIM END DESC  NULLS LAST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(((t0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)OR(t0.c0))  WHEN (((('	x')OR(t0.c0)))AND(t0.c0)) THEN t0.c0 WHEN NULL THEN t0.c0 WHEN (- (0Xffffffff82372798)) THEN CASE 0x4784eb15  WHEN t0.c0 THEN 2010749174 END ELSE t0.c0 COLLATE RTRIM END DESC  NULLS LAST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(((t0.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (NULL))) ORDER BY CASE ((t0.c0)OR(t0.c0))  WHEN (((('	x')OR(t0.c0)))AND(t0.c0)) THEN t0.c0 WHEN NULL THEN t0.c0 WHEN (- (0Xffffffff82372798)) THEN CASE 0x4784eb15  WHEN t0.c0 THEN 2010749174 END ELSE t0.c0 COLLATE RTRIM END DESC  NULLS LAST, (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(((t0.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c0 AS TEXT)) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((0.6034710407323484)%(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(((t0.c0) IS TRUE))))AND(CAST(0.7156513406435884 AS NUMERIC))))OR((t0.c0 IN (t0.c0, t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST, ((((CASE WHEN t0.c0 THEN t0.c0 END)AND((x'' IN ()))))AND(CASE WHEN t0.c0 THEN 0.7450927536737622 END)) DESC  NULLS LAST, ((((t0.c0)-(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6034710407323484)%(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(((t0.c0) IS TRUE))))AND(CAST(0.7156513406435884 AS NUMERIC))))OR((t0.c0 IN (t0.c0, t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST, ((((CASE WHEN t0.c0 THEN t0.c0 END)AND((x'' IN ()))))AND(CASE WHEN t0.c0 THEN 0.7450927536737622 END)) DESC  NULLS LAST, ((((t0.c0)-(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((0.6034710407323484)%(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(((t0.c0) IS TRUE))))AND(CAST(0.7156513406435884 AS NUMERIC))))OR((t0.c0 IN (t0.c0, t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST, ((((CASE WHEN t0.c0 THEN t0.c0 END)AND((x'' IN ()))))AND(CASE WHEN t0.c0 THEN 0.7450927536737622 END)) DESC  NULLS LAST, ((((t0.c0)-(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6034710407323484)%(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(((t0.c0) IS TRUE))))AND(CAST(0.7156513406435884 AS NUMERIC))))OR((t0.c0 IN (t0.c0, t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST, ((((CASE WHEN t0.c0 THEN t0.c0 END)AND((x'' IN ()))))AND(CASE WHEN t0.c0 THEN 0.7450927536737622 END)) DESC  NULLS LAST, ((((t0.c0)-(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (t0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL COLLATE RTRIM);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) WHERE (((CAST(rt0.c2 AS INTEGER))AND(''))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))AND(''))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) ORDER BY rt0.c1 DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) WHERE (((CAST(rt0.c2 AS INTEGER))AND(''))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))AND(''))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) ORDER BY rt0.c1 DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c1)) WHERE (((CAST(rt0.c2 AS INTEGER))AND(''))) ORDER BY rt0.c1 DESC;
SELECT * FROM t0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (- (rt0.c1)) ELSE 0Xc72dcc END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (- (rt0.c1)) ELSE 0xc72dcc END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (- (rt0.c1)) ELSE 0Xc72dcc END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (- (rt0.c1)) ELSE 0xc72dcc END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (- (rt0.c1)) ELSE 0Xc72dcc END);
SELECT * FROM rt0, t0 WHERE (CASE ((rt0.c1)<<(rt0.c1))  WHEN (((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(t0.c0)) END) ORDER BY 0.6516868195985938 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)<<(rt0.c1))  WHEN (((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(t0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.6516868195985938 COLLATE RTRIM ASC);
SELECT * FROM rt0, t0 WHERE (CASE ((rt0.c1)<<(rt0.c1))  WHEN (((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(t0.c0)) END) ORDER BY 0.6516868195985938 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1)<<(rt0.c1))  WHEN (((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(t0.c0)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.6516868195985938 COLLATE RTRIM ASC);
SELECT * FROM rt0, t0 WHERE (CASE ((rt0.c1)<<(rt0.c1))  WHEN (((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(t0.c0)) END) ORDER BY 0.6516868195985938 COLLATE RTRIM ASC;
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c2 AS REAL))-((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))-((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c2 AS REAL))-((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL))-((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c2 AS REAL))-((+ (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT));
SELECT * FROM rt0 WHERE ((NOT ((NOT (rt0.c2))))) ORDER BY ((x'')%(NULL)) ASC, (((((((((((x''))<=((rt0.c2))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(x'e1ab')))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')%(NULL)) ASC, (((((((((((x''))<=((rt0.c2))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(x'e1ab')))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))) DESC);
SELECT * FROM rt0 WHERE ((NOT ((NOT (rt0.c2))))) ORDER BY ((x'')%(NULL)) ASC, (((((((((((x''))<=((rt0.c2))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(x'e1ab')))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')%(NULL)) ASC, (((((((((((x''))<=((rt0.c2))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(x'e1ab')))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))) DESC);
SELECT * FROM rt0 WHERE ((NOT ((NOT (rt0.c2))))) ORDER BY ((x'')%(NULL)) ASC, (((((((((((x''))<=((rt0.c2))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))AND(x'e1ab')))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))))AND(CAST(rt0.c2 AS NUMERIC))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE BINARY ELSE (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE BINARY ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE BINARY ELSE (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE BINARY ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE BINARY ELSE (NOT (rt0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((NULL)AND(rt0.c0)))AND(NULL)))>=(((NULL) BETWEEN (rt0.c0) AND (x'2c9d51a7'))))) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(rt0.c0)))AND(NULL)))>=(((NULL) BETWEEN (rt0.c0) AND (x'2c9d51a7'))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((NULL)AND(rt0.c0)))AND(NULL)))>=(((NULL) BETWEEN (rt0.c0) AND (x'2c9d51a7'))))) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(rt0.c0)))AND(NULL)))>=(((NULL) BETWEEN (rt0.c0) AND (x'2c9d51a7'))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((NULL)AND(rt0.c0)))AND(NULL)))>=(((NULL) BETWEEN (rt0.c0) AND (x'2c9d51a7'))))) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (((rt0.c2)%(rt0.c0))))) ORDER BY ((TRIM(rt0.c0)) ISNULL), ((((((rt0.c2)+(rt0.c1)))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))))AND((x'' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)%(rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((TRIM(rt0.c0)) ISNULL), ((((((rt0.c2)+(rt0.c1)))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))))AND((x'' IN ()))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (((rt0.c2)%(rt0.c0))))) ORDER BY ((TRIM(rt0.c0)) ISNULL), ((((((rt0.c2)+(rt0.c1)))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))))AND((x'' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)%(rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((TRIM(rt0.c0)) ISNULL), ((((((rt0.c2)+(rt0.c1)))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))))AND((x'' IN ()))) DESC);
SELECT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC);
SELECT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC);
SELECT * FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ORDER BY (NOT (((t0.c0)-(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((0.7188777697725277 COLLATE NOCASE)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((0.7188777697725277 COLLATE NOCASE)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((0.7188777697725277 COLLATE NOCASE)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((0.7188777697725277 COLLATE NOCASE)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((0.7188777697725277 COLLATE NOCASE)OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY -2099353725 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY -2099353725 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ORDER BY -2099353725 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY -2099353725 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (NULL)))+(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (NULL)))+(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (NULL)))+(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (NULL)))+(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN (NULL)))+(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (((t0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (((t0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (((t0.c0)>(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0) IS TRUE))<=(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE))<=(x''))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0) IS TRUE))<=(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE))<=(x''))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0) IS TRUE))<=(x'')));
SELECT * FROM t0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND(((rt0.c0)==(rt0.c2)))))AND(((rt0.c0)+(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND(((rt0.c0)==(rt0.c2)))))AND(((rt0.c0)+(x''))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND(((rt0.c0)==(rt0.c2)))))AND(((rt0.c0)+(x'')))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND(((rt0.c0)==(rt0.c2)))))AND(((rt0.c0)+(x''))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))AND(((rt0.c0)==(rt0.c2)))))AND(((rt0.c0)+(x'')))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c2)>=(rt0.c1))) AND (t0.c0))) ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c2)))AND(CASE WHEN t0.c0 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c2)>=(rt0.c1))) AND (t0.c0))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c2)))AND(CASE WHEN t0.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c2)>=(rt0.c1))) AND (t0.c0))) ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c2)))AND(CASE WHEN t0.c0 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c2)>=(rt0.c1))) AND (t0.c0))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c2)))AND(CASE WHEN t0.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0))) BETWEEN (((rt0.c2)>=(rt0.c1))) AND (t0.c0))) ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c2)))AND(CASE WHEN t0.c0 THEN rt0.c1 END));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ABS(DISTINCT ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ABS(DISTINCT ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ABS(DISTINCT ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c1) ORDER BY (((CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END))<=(((rt0.c1 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY (((CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END))<=(((rt0.c1 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c1) ORDER BY (((CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END))<=(((rt0.c1 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0 ORDER BY (((CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END))<=(((rt0.c1 IN ())))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c1) ORDER BY (((CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END))<=(((rt0.c1 IN ())))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN t0.c0 THEN UPPER(DISTINCT t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN t0.c0 THEN UPPER(DISTINCT t0.c0) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN t0.c0 THEN UPPER(DISTINCT t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN t0.c0 THEN UPPER(DISTINCT t0.c0) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN t0.c0 THEN UPPER(DISTINCT t0.c0) END);
SELECT * FROM t0, rt0 WHERE ((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c2 THEN 0.2606296220105533 ELSE rt0.c2 END)))AND((- (rt0.c1))))) ORDER BY ((((TRIM(DISTINCT t0.c0, t0.c0))OR(((rt0.c1)LIKE(t0.c0)))))AND(rt0.c2));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c2 THEN 0.2606296220105533 ELSE rt0.c2 END)))AND((- (rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((TRIM(DISTINCT t0.c0, t0.c0))OR(((rt0.c1)LIKE(t0.c0)))))AND(rt0.c2)));
SELECT * FROM t0, rt0 WHERE ((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c2 THEN 0.2606296220105533 ELSE rt0.c2 END)))AND((- (rt0.c1))))) ORDER BY ((((TRIM(DISTINCT t0.c0, t0.c0))OR(((rt0.c1)LIKE(t0.c0)))))AND(rt0.c2));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c2 THEN 0.2606296220105533 ELSE rt0.c2 END)))AND((- (rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((TRIM(DISTINCT t0.c0, t0.c0))OR(((rt0.c1)LIKE(t0.c0)))))AND(rt0.c2)));
SELECT * FROM t0, rt0 WHERE ((((((rt0.c1 IN ()))AND(CASE WHEN rt0.c2 THEN 0.2606296220105533 ELSE rt0.c2 END)))AND((- (rt0.c1))))) ORDER BY ((((TRIM(DISTINCT t0.c0, t0.c0))OR(((rt0.c1)LIKE(t0.c0)))))AND(rt0.c2));
SELECT ALL * FROM t0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((NULL) NOTNULL));
SELECT ALL * FROM rt0, t0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS BLOB)) ORDER BY (((NULL)) BETWEEN (((((t0.c0, rt0.c0, t0.c0))>((rt0.c0, '1966415934', rt0.c1))))) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NULL)) BETWEEN (((((t0.c0, rt0.c0, t0.c0))>((rt0.c0, '1966415934', rt0.c1))))) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS BLOB)) ORDER BY (((NULL)) BETWEEN (((((t0.c0, rt0.c0, t0.c0))>((rt0.c0, '1966415934', rt0.c1))))) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((NULL)) BETWEEN (((((t0.c0, rt0.c0, t0.c0))>((rt0.c0, '1966415934', rt0.c1))))) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS BLOB)) ORDER BY (((NULL)) BETWEEN (((((t0.c0, rt0.c0, t0.c0))>((rt0.c0, '1966415934', rt0.c1))))) AND (((rt0.c2 IN ())))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c0) ISNULL) END);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((x'4c35c4a1')AND(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c2, rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((x'4c35c4a1')AND(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c2, rt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((x'4c35c4a1')AND(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c2, rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((x'4c35c4a1')AND(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c2, rt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((x'4c35c4a1')AND(rt0.c2)))OR((((rt0.c2, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c2, rt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((load_extension(t0.c0) IN ())) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((load_extension(t0.c0) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((load_extension(t0.c0) IN ())) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((load_extension(t0.c0) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((load_extension(t0.c0) IN ())) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))<>((NOT (rt0.c2))))) ORDER BY ((rt0.c1 IN (rt0.c2, t0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)|(rt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))<>((NOT (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1 IN (rt0.c2, t0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)|(rt0.c0))) NOT NULL));
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))<>((NOT (rt0.c2))))) ORDER BY ((rt0.c1 IN (rt0.c2, t0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)|(rt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))<>((NOT (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1 IN (rt0.c2, t0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)|(rt0.c0))) NOT NULL));
SELECT * FROM t0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))<>((NOT (rt0.c2))))) ORDER BY ((rt0.c1 IN (rt0.c2, t0.c0)) IN ())  NULLS FIRST, ((((rt0.c0)|(rt0.c0))) NOT NULL);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CAST(rt0.c2 AS INTEGER))<((rt0.c0 IN ()))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))==((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))==((t0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))==((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))==((t0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))==((t0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(LIKELY(DISTINCT rt0.c1) AS NUMERIC)) ORDER BY (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))AND(((((((((((((rt0.c0)OR(rt0.c1)))AND(x'')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))AND(((((((((((((rt0.c0)OR(rt0.c1)))AND(x'')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(LIKELY(DISTINCT rt0.c1) AS NUMERIC)) ORDER BY (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))AND(((((((((((((rt0.c0)OR(rt0.c1)))AND(x'')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(DISTINCT rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))AND(((((((((((((rt0.c0)OR(rt0.c1)))AND(x'')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(LIKELY(DISTINCT rt0.c1) AS NUMERIC)) ORDER BY (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))AND(((((((((((((rt0.c0)OR(rt0.c1)))AND(x'')))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((rt0.c0))))<((((('252390119')OR('')))AND('<*>쫅j#pF(')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((rt0.c0))))<((((('252390119')OR('')))AND('<*>쫅j#pF('))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((rt0.c0))))<((((('252390119')OR('')))AND('<*>쫅j#pF(')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((rt0.c0))))<((((('252390119')OR('')))AND('<*>쫅j#pF('))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((rt0.c0))))<((((('252390119')OR('')))AND('<*>쫅j#pF(')))));
SELECT ALL * FROM t0, rt0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS REAL)) ORDER BY ((((rt0.c0)>(rt0.c0)))AND(0.9741529686507668))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)>(rt0.c0)))AND(0.9741529686507668))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS REAL)) ORDER BY ((((rt0.c0)>(rt0.c0)))AND(0.9741529686507668))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0)>(rt0.c0)))AND(0.9741529686507668))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS REAL)) ORDER BY ((((rt0.c0)>(rt0.c0)))AND(0.9741529686507668))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (NULL) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOT BETWEEN (NULL) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (NULL) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) NOT BETWEEN (NULL) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (NULL) AND ((t0.c0 IN ()))));
SELECT * FROM rt0 WHERE ((- ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))!=(((t0.c0) NOT BETWEEN (x'') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))<>(((t0.c0) NOT BETWEEN (x'') AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))!=(((t0.c0) NOT BETWEEN (x'') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))<>(((t0.c0) NOT BETWEEN (x'') AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))!=(((t0.c0) NOT BETWEEN (x'') AND (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)LIKE(NULL)) WHERE ((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))OR(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)LIKE(NULL)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)LIKE(NULL)) WHERE ((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))OR(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)LIKE(NULL)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0)LIKE(NULL)) WHERE ((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))OR(rt0.c0)));
SELECT ALL * FROM rt0, t0 WHERE ((((((NULL)-(t0.c0)), ((NULL) BETWEEN (rt0.c0) AND (rt0.c2)), 0X40c5e768))<=((json_array_length(rt0.c1, NULL), (+ (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((NULL)-(t0.c0)), ((NULL) BETWEEN (rt0.c0) AND (rt0.c2)), 0X40c5e768))<=((json_array_length(rt0.c1, NULL), (+ (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((NULL)-(t0.c0)), ((NULL) BETWEEN (rt0.c0) AND (rt0.c2)), 0X40c5e768))<=((json_array_length(rt0.c1, NULL), (+ (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((NULL)-(t0.c0)), ((NULL) BETWEEN (rt0.c0) AND (rt0.c2)), 0X40c5e768))<=((json_array_length(rt0.c1, NULL), (+ (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((NULL)-(t0.c0)), ((NULL) BETWEEN (rt0.c0) AND (rt0.c2)), 0X40c5e768))<=((json_array_length(rt0.c1, NULL), (+ (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((+ (t0.c0)) IN ())) ORDER BY '-601919066' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY '-601919066' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((+ (t0.c0)) IN ())) ORDER BY '-601919066' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY '-601919066' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((+ (t0.c0)) IN ())) ORDER BY '-601919066' DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (DATE(((rt0.c2) BETWEEN (0.37731585340434737) AND (rt0.c1)), (~ (rt0.c0)), t0.c0)) ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0))>((7.38587155E8, rt0.c1, rt0.c2, t0.c0, t0.c0)))  WHEN TRIM(DISTINCT t0.c0) THEN (~ (rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(((rt0.c2) BETWEEN (0.37731585340434737) AND (rt0.c1)), (~ (rt0.c0)), t0.c0)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0))>((7.38587155E8, rt0.c1, rt0.c2, t0.c0, t0.c0)))  WHEN TRIM(DISTINCT t0.c0) THEN (~ (rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (DATE(((rt0.c2) BETWEEN (0.37731585340434737) AND (rt0.c1)), (~ (rt0.c0)), t0.c0)) ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0))>((7.38587155E8, rt0.c1, rt0.c2, t0.c0, t0.c0)))  WHEN TRIM(DISTINCT t0.c0) THEN (~ (rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE(((rt0.c2) BETWEEN (0.37731585340434737) AND (rt0.c1)), (~ (rt0.c0)), t0.c0)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0))>((7.38587155E8, rt0.c1, rt0.c2, t0.c0, t0.c0)))  WHEN TRIM(DISTINCT t0.c0) THEN (~ (rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (DATE(((rt0.c2) BETWEEN (0.37731585340434737) AND (rt0.c1)), (~ (rt0.c0)), t0.c0)) ORDER BY CASE (((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0))>((7.38587155E8, rt0.c1, rt0.c2, t0.c0, t0.c0)))  WHEN TRIM(DISTINCT t0.c0) THEN (~ (rt0.c0)) ELSE CAST(rt0.c2 AS NUMERIC) END  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((IFNULL(t0.c0, t0.c0))<>(CAST(t0.c0 AS BLOB)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c0, t0.c0))<>(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY '' ASC);
SELECT COUNT(*) FROM t0 WHERE (((IFNULL(t0.c0, t0.c0))<>(CAST(t0.c0 AS BLOB)))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c0, t0.c0))<>(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY '' ASC);
SELECT COUNT(*) FROM t0 WHERE (((IFNULL(t0.c0, t0.c0))<>(CAST(t0.c0 AS BLOB)))) ORDER BY '' ASC;
SELECT * FROM rt0, t0 WHERE ('^褶');
SELECT SUM(count) FROM (SELECT (('^褶') IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ('^褶');
SELECT SUM(count) FROM (SELECT (('^褶') IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ('^褶');
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN '' THEN ((((0.931708926143413)AND(t0.c0)))OR(t0.c0)) END) ORDER BY t0.c0, LIKELY(((t0.c0) NOT NULL)), x'' DESC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN '' THEN ((((0.931708926143413)AND(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c0, LIKELY(((t0.c0) NOT NULL)), x'' DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN '' THEN ((((0.931708926143413)AND(t0.c0)))OR(t0.c0)) END) ORDER BY t0.c0, LIKELY(((t0.c0) NOT NULL)), x'' DESC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN '' THEN ((((0.931708926143413)AND(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c0, LIKELY(((t0.c0) NOT NULL)), x'' DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN '' THEN ((((0.931708926143413)AND(t0.c0)))OR(t0.c0)) END) ORDER BY t0.c0, LIKELY(((t0.c0) NOT NULL)), x'' DESC;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)LIKE(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)LIKE(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)LIKE(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)LIKE(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)LIKE(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((('wU') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (SQLITE_SOURCE_ID()))) ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN ((+ (rt0.c1))) AND (((rt0.c2)AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((('wU') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN ((+ (rt0.c1))) AND (((rt0.c2)AND(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((('wU') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (SQLITE_SOURCE_ID()))) ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN ((+ (rt0.c1))) AND (((rt0.c2)AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((('wU') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN ((+ (rt0.c1))) AND (((rt0.c2)AND(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((('wU') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (SQLITE_SOURCE_ID()))) ORDER BY ((rt0.c0 COLLATE BINARY) BETWEEN ((+ (rt0.c1))) AND (((rt0.c2)AND(rt0.c2)))) ASC;
SELECT COUNT(*) FROM t0 WHERE (CAST((('n')||(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('n')||(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((('n')||(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('n')||(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((('n')||(t0.c0)) AS REAL));
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN (TRIM(NULL)) AND (CAST(0.040550104637781303 AS BLOB)))) ORDER BY ((x'') IS FALSE) DESC  NULLS LAST, t0.c0 ASC  NULLS LAST, (- (CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>(t0.c0))) NOT BETWEEN (TRIM(NULL)) AND (CAST(0.040550104637781303 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY ((x'') IS FALSE) DESC  NULLS LAST, t0.c0 ASC  NULLS LAST, (- (CAST(t0.c0 AS INTEGER))));
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN (TRIM(NULL)) AND (CAST(0.040550104637781303 AS BLOB)))) ORDER BY ((x'') IS FALSE) DESC  NULLS LAST, t0.c0 ASC  NULLS LAST, (- (CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>(t0.c0))) NOT BETWEEN (TRIM(NULL)) AND (CAST(0.040550104637781303 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY ((x'') IS FALSE) DESC  NULLS LAST, t0.c0 ASC  NULLS LAST, (- (CAST(t0.c0 AS INTEGER))));
SELECT * FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN (TRIM(NULL)) AND (CAST(0.040550104637781303 AS BLOB)))) ORDER BY ((x'') IS FALSE) DESC  NULLS LAST, t0.c0 ASC  NULLS LAST, (- (CAST(t0.c0 AS INTEGER)));
SELECT * FROM rt0 WHERE (x'') ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT * FROM rt0 WHERE (x'') ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT * FROM rt0 WHERE (x'') ORDER BY rt0.c0 ASC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0)/(t0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2))))) WHERE (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY (('|(' COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, MIN(((rt0.c0) NOTNULL), (NOT (rt0.c2))) DESC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0)/(t0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2))))) ORDER BY (('|(' COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, MIN(((rt0.c0) NOTNULL), (NOT (rt0.c2))) DESC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0)/(t0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2))))) WHERE (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY (('|(' COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, MIN(((rt0.c0) NOTNULL), (NOT (rt0.c2))) DESC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0)/(t0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2))))) ORDER BY (('|(' COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, MIN(((rt0.c0) NOTNULL), (NOT (rt0.c2))) DESC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((t0.c0)/(t0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2))))) WHERE (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY (('|(' COLLATE RTRIM) IS TRUE) DESC  NULLS FIRST, MIN(((rt0.c0) NOTNULL), (NOT (rt0.c2))) DESC  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((+ (0.020404640781379824)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (0.020404640781379824)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((+ (0.020404640781379824)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((+ (0.020404640781379824)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((+ (0.020404640781379824)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((t0.c0)OR(t0.c0)))<<(((rt0.c1) NOT NULL)))) ORDER BY (- (((rt0.c2) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))<<(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (((rt0.c2) ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((t0.c0)OR(t0.c0)))<<(((rt0.c1) NOT NULL)))) ORDER BY (- (((rt0.c2) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))<<(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (((rt0.c2) ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((t0.c0)OR(t0.c0)))<<(((rt0.c1) NOT NULL)))) ORDER BY (- (((rt0.c2) ISNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN (LOWER(DISTINCT ''))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (LOWER(DISTINCT '')))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN (LOWER(DISTINCT ''))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE NOCASE IN (LOWER(DISTINCT '')))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE NOCASE IN (LOWER(DISTINCT ''))));
SELECT ALL * FROM rt0, t0 WHERE (((json(t0.c0))<<(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN -417842415 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 END))) ORDER BY HEX(rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json(t0.c0))<<(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN -417842415 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY HEX(rt0.c2) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((json(t0.c0))<<(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN -417842415 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 END))) ORDER BY HEX(rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json(t0.c0))<<(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN -417842415 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY HEX(rt0.c2) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c0 AS NUMERIC))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c0 AS NUMERIC))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL * FROM t0 INNER JOIN rt0 ON ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(CAST(rt0.c0 AS NUMERIC))) WHERE (rt0.c2);
SELECT * FROM t0, rt0 WHERE (IFNULL(DISTINCT NULL, (t0.c0 IN ()))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))||((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT NULL, (t0.c0 IN ()))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))||((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (IFNULL(DISTINCT NULL, (t0.c0 IN ()))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))||((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT NULL, (t0.c0 IN ()))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))||((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (IFNULL(DISTINCT NULL, (t0.c0 IN ()))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))||((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))&(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))&(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))&(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))&(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c1)))AND(rt0.c1)))&(CAST(rt0.c0 AS REAL))));
SELECT * FROM t0 WHERE ((('Ozsnavy') NOT NULL)) ORDER BY (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT (((('Ozsnavy') NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()));
SELECT * FROM t0 WHERE ((('Ozsnavy') NOT NULL)) ORDER BY (t0.c0 IN ());
SELECT SUM(count) FROM (SELECT (((('Ozsnavy') NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()));
SELECT * FROM t0 WHERE ((('Ozsnavy') NOT NULL)) ORDER BY (t0.c0 IN ());
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)AND(x'')) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)AND(x'')) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)AND(x'')) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), 0.9339693708444297)) ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), 0.9339693708444297)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), 0.9339693708444297)) ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), 0.9339693708444297)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), 0.9339693708444297)) ORDER BY (((rt0.c0 IN ())) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (DATETIME(((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE NOCASE, ((t0.c0)&(rt0.c2)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0) ISNULL))) ORDER BY ((((rt0.c2)IS(-98985864)))GLOB((NOT (rt0.c0)))) ASC  NULLS FIRST, CAST(((rt0.c2)*(rt0.c0)) AS REAL)  NULLS LAST, (NOT (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((DATETIME(((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE NOCASE, ((t0.c0)&(rt0.c2)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0) ISNULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)IS(-98985864)))GLOB((NOT (rt0.c0)))) ASC  NULLS FIRST, CAST(((rt0.c2)*(rt0.c0)) AS REAL)  NULLS LAST, (NOT (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (DATETIME(((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE NOCASE, ((t0.c0)&(rt0.c2)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0) ISNULL))) ORDER BY ((((rt0.c2)IS(-98985864)))GLOB((NOT (rt0.c0)))) ASC  NULLS FIRST, CAST(((rt0.c2)*(rt0.c0)) AS REAL)  NULLS LAST, (NOT (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((DATETIME(((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE NOCASE, ((t0.c0)&(rt0.c2)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0) ISNULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)IS(-98985864)))GLOB((NOT (rt0.c0)))) ASC  NULLS FIRST, CAST(((rt0.c2)*(rt0.c0)) AS REAL)  NULLS LAST, (NOT (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (DATETIME(((rt0.c2)>>(rt0.c1)), rt0.c1 COLLATE NOCASE, ((t0.c0)&(rt0.c2)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c0) ISNULL))) ORDER BY ((((rt0.c2)IS(-98985864)))GLOB((NOT (rt0.c0)))) ASC  NULLS FIRST, CAST(((rt0.c2)*(rt0.c0)) AS REAL)  NULLS LAST, (NOT (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))));
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0)&(t0.c0)) ELSE ((t0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN ((t0.c0)&(t0.c0)) ELSE ((t0.c0) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0)&(t0.c0)) ELSE ((t0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN ((t0.c0)&(t0.c0)) ELSE ((t0.c0) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c0)&(t0.c0)) ELSE ((t0.c0) IS FALSE) END);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c2)))OR(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(((1.933950866E9) NOTNULL))))AND((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c0, rt0.c1))))))OR(t0.c0 COLLATE BINARY)))OR(((x'')IS(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (- (rt0.c0)) ELSE rt0.c2 END  NULLS LAST, TRIM(CAST(rt0.c2 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c2)))OR(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(((1.933950866E9) NOTNULL))))AND((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c0, rt0.c1))))))OR(t0.c0 COLLATE BINARY)))OR(((x'')IS(rt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (- (rt0.c0)) ELSE rt0.c2 END  NULLS LAST, TRIM(CAST(rt0.c2 AS BLOB)) DESC);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c2)))OR(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(((1.933950866E9) NOTNULL))))AND((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c0, rt0.c1))))))OR(t0.c0 COLLATE BINARY)))OR(((x'')IS(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (- (rt0.c0)) ELSE rt0.c2 END  NULLS LAST, TRIM(CAST(rt0.c2 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c2)))OR(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(((1.933950866E9) NOTNULL))))AND((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c0, rt0.c1))))))OR(t0.c0 COLLATE BINARY)))OR(((x'')IS(rt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (- (rt0.c0)) ELSE rt0.c2 END  NULLS LAST, TRIM(CAST(rt0.c2 AS BLOB)) DESC);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c2)))OR(((((t0.c0)AND(rt0.c1)))OR(rt0.c0)))))AND(((1.933950866E9) NOTNULL))))AND((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c0, rt0.c1))))))OR(t0.c0 COLLATE BINARY)))OR(((x'')IS(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (- (rt0.c0)) ELSE rt0.c2 END  NULLS LAST, TRIM(CAST(rt0.c2 AS BLOB)) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN NULL THEN ((rt0.c2)LIKE(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt0.c2)LIKE(t0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN NULL THEN ((rt0.c2)LIKE(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt0.c2)LIKE(t0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN NULL THEN ((rt0.c2)LIKE(t0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT ALL * FROM rt0, t0 WHERE (0.1309648674786844 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.1309648674786844 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (0.1309648674786844 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.1309648674786844 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (0.1309648674786844 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM t0, rt0 WHERE (CHAR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CHAR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CHAR(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c0))));
SELECT * FROM t0 WHERE (TRIM(DISTINCT ((0.9810650385706998)%(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((0.9810650385706998)%(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (TRIM(DISTINCT ((0.9810650385706998)%(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((0.9810650385706998)%(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (TRIM(DISTINCT ((0.9810650385706998)%(t0.c0))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END))>((((((rt0.c2)OR(t0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END))>((((((rt0.c2)OR(t0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END))>((((((rt0.c2)OR(t0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END))>((((((rt0.c2)OR(t0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END))>((((((rt0.c2)OR(t0.c0)))AND(t0.c0))))));
SELECT * FROM t0, rt0 WHERE (TYPEOF(DISTINCT '?a' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT '?a' COLLATE NOCASE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (TYPEOF(DISTINCT '?a' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT '?a' COLLATE NOCASE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (TYPEOF(DISTINCT '?a' COLLATE NOCASE));
SELECT COUNT(*) FROM t0 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((- (t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN TRIM(DISTINCT t0.c0) THEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('0.8546058611058762', t0.c0, t0.c0))) END) ORDER BY ((t0.c0)IS NOT(((NULL) BETWEEN (x'') AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN TRIM(DISTINCT t0.c0) THEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('0.8546058611058762', t0.c0, t0.c0))) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)IS NOT(((NULL) BETWEEN (x'') AND (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN TRIM(DISTINCT t0.c0) THEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('0.8546058611058762', t0.c0, t0.c0))) END) ORDER BY ((t0.c0)IS NOT(((NULL) BETWEEN (x'') AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN TRIM(DISTINCT t0.c0) THEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('0.8546058611058762', t0.c0, t0.c0))) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)IS NOT(((NULL) BETWEEN (x'') AND (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END  WHEN TRIM(DISTINCT t0.c0) THEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('0.8546058611058762', t0.c0, t0.c0))) END) ORDER BY ((t0.c0)IS NOT(((NULL) BETWEEN (x'') AND (t0.c0))));
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE ((- ((((rt0.c1))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c1))<=((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE ((- ((((rt0.c1))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c1))<=((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE ((- ((((rt0.c1))<=((rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)>(rt0.c0)))/((NOT (rt0.c2))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c0)))/((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)>(rt0.c0)))/((NOT (rt0.c2))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c0)))/((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)>(rt0.c0)))/((NOT (rt0.c2))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((CASE WHEN 0.9628823617413216 THEN rt0.c0 END IN ())) ORDER BY ((rt0.c2)>>(rt0.c2)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN 0.9628823617413216 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)>>(rt0.c2)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((CASE WHEN 0.9628823617413216 THEN rt0.c0 END IN ())) ORDER BY ((rt0.c2)>>(rt0.c2)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN 0.9628823617413216 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)>>(rt0.c2)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((CASE WHEN 0.9628823617413216 THEN rt0.c0 END IN ())) ORDER BY ((rt0.c2)>>(rt0.c2)) COLLATE BINARY COLLATE NOCASE;
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((HEX(rt0.c2))OR((+ (x'27f9')))))OR(NULL))) ORDER BY json_array_length(CASE WHEN x'3838' THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(rt0.c2))OR((+ (x'27f9')))))OR(NULL))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length(CASE WHEN x'3838' THEN rt0.c0 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((HEX(rt0.c2))OR((+ (x'27f9')))))OR(NULL))) ORDER BY json_array_length(CASE WHEN x'3838' THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(rt0.c2))OR((+ (x'27f9')))))OR(NULL))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length(CASE WHEN x'3838' THEN rt0.c0 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((HEX(rt0.c2))OR((+ (x'27f9')))))OR(NULL))) ORDER BY json_array_length(CASE WHEN x'3838' THEN rt0.c0 END);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c1, rt0.c1) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c1, rt0.c1) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c1, rt0.c1) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c1, rt0.c1) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT rt0.c1, rt0.c1) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)<<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)<<(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)<<(rt0.c1)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)<=(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<=(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)<=(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<=(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)<=(rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((((0Xffffffffa42d23f1) BETWEEN (rt0.c1) AND (rt0.c2))))<=(((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2)))))) WHERE (((((CAST(rt0.c2 AS REAL))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((((0Xffffffffa42d23f1) BETWEEN (rt0.c1) AND (rt0.c2))))<=(((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2)))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((((0Xffffffffa42d23f1) BETWEEN (rt0.c1) AND (rt0.c2))))<=(((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2)))))) WHERE (((((CAST(rt0.c2 AS REAL))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((((0Xffffffffa42d23f1) BETWEEN (rt0.c1) AND (rt0.c2))))<=(((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2)))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((((0Xffffffffa42d23f1) BETWEEN (rt0.c1) AND (rt0.c2))))<=(((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2)))))) WHERE (((((CAST(rt0.c2 AS REAL))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0))));
SELECT * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.8103362957059572 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ORDER BY (((t0.c0))!=((t0.c0))) COLLATE NOCASE COLLATE BINARY, (- ((('Ob.|\Pﹱ') IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.8103362957059572 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0))!=((t0.c0))) COLLATE NOCASE COLLATE BINARY, (- ((('Ob.|\Pﹱ') IS TRUE))));
SELECT * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.8103362957059572 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ORDER BY (((t0.c0))!=((t0.c0))) COLLATE NOCASE COLLATE BINARY, (- ((('Ob.|\Pﹱ') IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.8103362957059572 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0))!=((t0.c0))) COLLATE NOCASE COLLATE BINARY, (- ((('Ob.|\Pﹱ') IS TRUE))));
SELECT * FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.8103362957059572 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) ORDER BY (((t0.c0))!=((t0.c0))) COLLATE NOCASE COLLATE BINARY, (- ((('Ob.|\Pﹱ') IS TRUE)));
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c0)=(rt0.c1)) THEN '8''U''J' WHEN x'' THEN t0.c0 WHEN ((rt0.c1)GLOB(rt0.c2)) THEN ((rt0.c1)LIKE(t0.c0)) ELSE ((rt0.c1) IS FALSE) END WHERE (CAST(((rt0.c1)||(rt0.c0)) AS REAL)) ORDER BY 0xffffffffe3e77c84 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)||(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c0)==(rt0.c1)) THEN '8''U''J' WHEN x'' THEN t0.c0 WHEN ((rt0.c1)GLOB(rt0.c2)) THEN ((rt0.c1)LIKE(t0.c0)) ELSE ((rt0.c1) IS FALSE) END ORDER BY 0xffffffffe3e77c84 COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c0)=(rt0.c1)) THEN '8''U''J' WHEN x'' THEN t0.c0 WHEN ((rt0.c1)GLOB(rt0.c2)) THEN ((rt0.c1)LIKE(t0.c0)) ELSE ((rt0.c1) IS FALSE) END WHERE (CAST(((rt0.c1)||(rt0.c0)) AS REAL)) ORDER BY 0xffffffffe3e77c84 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)||(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c0)==(rt0.c1)) THEN '8''U''J' WHEN x'' THEN t0.c0 WHEN ((rt0.c1)GLOB(rt0.c2)) THEN ((rt0.c1)LIKE(t0.c0)) ELSE ((rt0.c1) IS FALSE) END ORDER BY 0xffffffffe3e77c84 COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((rt0.c0)=(rt0.c1)) THEN '8''U''J' WHEN x'' THEN t0.c0 WHEN ((rt0.c1)GLOB(rt0.c2)) THEN ((rt0.c1)LIKE(t0.c0)) ELSE ((rt0.c1) IS FALSE) END WHERE (CAST(((rt0.c1)||(rt0.c0)) AS REAL)) ORDER BY 0xffffffffe3e77c84 COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>(rt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (~ (((rt0.c2)/(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(rt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)/(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>(rt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (~ (((rt0.c2)/(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(rt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)/(rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)>(rt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (~ (((rt0.c2)/(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND('#'))) ISNULL)) ORDER BY '0.6895726382383519';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND('#'))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY '0.6895726382383519');
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND('#'))) ISNULL)) ORDER BY '0.6895726382383519';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND('#'))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY '0.6895726382383519');
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND('#'))) ISNULL)) ORDER BY '0.6895726382383519';
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN ((rt0.c1)<=(rt0.c1)) WHEN json_insert(rt0.c1, rt0.c1, x'', rt0.c1, rt0.c2) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) END) ORDER BY CAST(((rt0.c1)>>(rt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN ((rt0.c1)<=(rt0.c1)) WHEN json_insert(rt0.c1, rt0.c1, x'', rt0.c1, rt0.c2) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)>>(rt0.c0)) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN ((rt0.c1)<=(rt0.c1)) WHEN json_insert(rt0.c1, rt0.c1, x'', rt0.c1, rt0.c2) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) END) ORDER BY CAST(((rt0.c1)>>(rt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN ((rt0.c1)<=(rt0.c1)) WHEN json_insert(rt0.c1, rt0.c1, x'', rt0.c1, rt0.c2) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1)>>(rt0.c0)) AS BLOB) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN ((rt0.c1)<=(rt0.c1)) WHEN json_insert(rt0.c1, rt0.c1, x'', rt0.c1, rt0.c2) THEN ((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) END) ORDER BY CAST(((rt0.c1)>>(rt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c2) AS BLOB) WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c2) AS BLOB));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c2) AS BLOB) WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c2) AS BLOB));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CAST(LOWER(rt0.c2) AS BLOB) WHERE (CAST(rt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((t0.c0) IS TRUE)))>=((CAST(rt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS TRUE)))>=((CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((t0.c0) IS TRUE)))>=((CAST(rt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0) IS TRUE)))>=((CAST(rt0.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((t0.c0) IS TRUE)))>=((CAST(rt0.c0 AS BLOB)))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (((rt0.c2)=(t0.c0))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)==(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (((rt0.c2)=(t0.c0))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)==(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (((rt0.c2)=(t0.c0))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN ((('5(K?') BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c0, rt0.c1, rt0.c2, rt0.c2, '1849558830'))>=((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) BETWEEN ((('5(K?') BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c0, rt0.c1, rt0.c2, rt0.c2, '1849558830'))>=((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN ((('5(K?') BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c0, rt0.c1, rt0.c2, rt0.c2, '1849558830'))>=((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) BETWEEN ((('5(K?') BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c0, rt0.c1, rt0.c2, rt0.c2, '1849558830'))>=((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN ((('5(K?') BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c0, rt0.c1, rt0.c2, rt0.c2, '1849558830'))>=((rt0.c0, rt0.c0, rt0.c2, rt0.c1, rt0.c2))))));
SELECT * FROM t0, rt0 WHERE (((('614707484')) BETWEEN ((0.9186539257502286)) AND ((x'')))) ORDER BY ((((((rt0.c1)OR(t0.c0)))OR(t0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((('614707484')) BETWEEN ((0.9186539257502286)) AND ((x'')))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c1)OR(t0.c0)))OR(t0.c0))) ISNULL) ASC);
SELECT * FROM t0, rt0 WHERE (((('614707484')) BETWEEN ((0.9186539257502286)) AND ((x'')))) ORDER BY ((((((rt0.c1)OR(t0.c0)))OR(t0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((('614707484')) BETWEEN ((0.9186539257502286)) AND ((x'')))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c1)OR(t0.c0)))OR(t0.c0))) ISNULL) ASC);
SELECT * FROM t0, rt0 WHERE (((('614707484')) BETWEEN ((0.9186539257502286)) AND ((x'')))) ORDER BY ((((((rt0.c1)OR(t0.c0)))OR(t0.c0))) ISNULL) ASC;
SELECT ALL * FROM rt0, t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0))))==(((rt0.c0 IN (rt0.c0, NULL))))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)OR(t0.c0)))AND(t0.c0))))==(((rt0.c0 IN (rt0.c0, NULL)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0))))==(((rt0.c0 IN (rt0.c0, NULL))))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)OR(t0.c0)))AND(t0.c0))))==(((rt0.c0 IN (rt0.c0, NULL)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0))))==(((rt0.c0 IN (rt0.c0, NULL))))));
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0))) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)IS(rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((rt0.c2 IN (rt0.c1)), x'')) ASC, rt0.c2;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)IS(rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((rt0.c2 IN (rt0.c1)), x'')) ASC, rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0))) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)IS(rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((rt0.c2 IN (rt0.c1)), x'')) ASC, rt0.c2;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)IS(rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((rt0.c2 IN (rt0.c1)), x'')) ASC, rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c0))) NOTNULL)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)IS(rt0.c1 COLLATE BINARY)) DESC, (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((rt0.c2 IN (rt0.c1)), x'')) ASC, rt0.c2;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)=('e刃')))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)=('e刃')))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)=('e刃')))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)=('e刃')))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)=('e刃')))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)) ORDER BY (CASE rt0.c1  WHEN -5.29996192E8 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN '-788158994' THEN rt0.c0 ELSE rt0.c2 END IN ()) ASC, ((((rt0.c0))>((rt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c1  WHEN -5.29996192E8 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN '-788158994' THEN rt0.c0 ELSE rt0.c2 END IN ()) ASC, ((((rt0.c0))>((rt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)) ORDER BY (CASE rt0.c1  WHEN -5.29996192E8 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN '-788158994' THEN rt0.c0 ELSE rt0.c2 END IN ()) ASC, ((((rt0.c0))>((rt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c1  WHEN -5.29996192E8 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN '-788158994' THEN rt0.c0 ELSE rt0.c2 END IN ()) ASC, ((((rt0.c0))>((rt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END AS NUMERIC)) ORDER BY (CASE rt0.c1  WHEN -5.29996192E8 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN '-788158994' THEN rt0.c0 ELSE rt0.c2 END IN ()) ASC, ((((rt0.c0))>((rt0.c0))) IN ());
SELECT ALL * FROM rt0, t0 WHERE (LOWER(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (LOWER(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (LOWER(DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE ('26057204') ORDER BY 0.269981120516124  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('26057204') IS TRUE)  as count FROM t0 ORDER BY 0.269981120516124  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ('26057204') ORDER BY 0.269981120516124  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('26057204') IS TRUE)  as count FROM t0 ORDER BY 0.269981120516124  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ('26057204') ORDER BY 0.269981120516124  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN (- (t0.c0)) THEN (('956481882') NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN COALESCE(t0.c0, t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (t0.c0)) THEN (('956481882') NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN COALESCE(t0.c0, t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN (- (t0.c0)) THEN (('956481882') NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN COALESCE(t0.c0, t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (t0.c0)) THEN (('956481882') NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN COALESCE(t0.c0, t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN (- (t0.c0)) THEN (('956481882') NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN COALESCE(t0.c0, t0.c0) END);
SELECT ALL * FROM rt0 WHERE (((CASE '-1529914525'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c2) NOT BETWEEN ('*㐖') AND (rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE '-1529914525'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN ('*㐖') AND (rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((CASE '-1529914525'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c2) NOT BETWEEN ('*㐖') AND (rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE '-1529914525'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN ('*㐖') AND (rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((CASE '-1529914525'  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c2) NOT BETWEEN ('*㐖') AND (rt0.c2)))-(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) IS FALSE)  WHEN 440373746 THEN ((t0.c0)%(t0.c0)) END) ORDER BY ((TYPEOF(t0.c0))*(((t0.c0)GLOB(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) IS FALSE)  WHEN 440373746 THEN ((t0.c0)%(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((TYPEOF(t0.c0))*(((t0.c0)GLOB(t0.c0)))) DESC);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) IS FALSE)  WHEN 440373746 THEN ((t0.c0)%(t0.c0)) END) ORDER BY ((TYPEOF(t0.c0))*(((t0.c0)GLOB(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) IS FALSE)  WHEN 440373746 THEN ((t0.c0)%(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((TYPEOF(t0.c0))*(((t0.c0)GLOB(t0.c0)))) DESC);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c0) IS FALSE)  WHEN 440373746 THEN ((t0.c0)%(t0.c0)) END) ORDER BY ((TYPEOF(t0.c0))*(((t0.c0)GLOB(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (TYPEOF(((rt0.c1)|(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c1)|(rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (TYPEOF(((rt0.c1)|(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c1)|(rt0.c0)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (TYPEOF(((rt0.c1)|(rt0.c0))));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0) IS FALSE))LIKE((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))LIKE((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0) IS FALSE))LIKE((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))LIKE((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0) IS FALSE))LIKE((NOT (rt0.c1)))));
SELECT ALL * FROM t0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c2, rt0.c0)) NOT NULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c2, rt0.c0)) NOT NULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c0)) NOT NULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND ((((t0.c0, t0.c0, 0.5849503293328777, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, '1008428578', t0.c0, t0.c0)) AND ((0.09106735315033909, t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND ((((t0.c0, t0.c0, 0.5849503293328777, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, '1008428578', t0.c0, t0.c0)) AND ((0.09106735315033909, t0.c0, t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND ((((t0.c0, t0.c0, 0.5849503293328777, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, '1008428578', t0.c0, t0.c0)) AND ((0.09106735315033909, t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND ((((t0.c0, t0.c0, 0.5849503293328777, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, '1008428578', t0.c0, t0.c0)) AND ((0.09106735315033909, t0.c0, t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND ((((t0.c0, t0.c0, 0.5849503293328777, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, '1008428578', t0.c0, t0.c0)) AND ((0.09106735315033909, t0.c0, t0.c0, t0.c0, t0.c0))))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (((CASE rt0.c1  WHEN 0.7618391992883461 THEN rt0.c1 WHEN 0X3f1ee573 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN 0.7618391992883461 THEN rt0.c1 WHEN 0x3f1ee573 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (((CASE rt0.c1  WHEN 0.7618391992883461 THEN rt0.c1 WHEN 0X3f1ee573 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN 0.7618391992883461 THEN rt0.c1 WHEN 0x3f1ee573 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (((CASE rt0.c1  WHEN 0.7618391992883461 THEN rt0.c1 WHEN 0X3f1ee573 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 END)GLOB(((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((((rt0.c0 IN ()))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(UPPER(rt0.c0))) WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c0) NOT NULL))*(((rt0.c1)||(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN t0 ON (((((rt0.c0 IN ()))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(UPPER(rt0.c0))) ORDER BY ((((rt0.c0) NOT NULL))*(((rt0.c1)||(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((((rt0.c0 IN ()))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(UPPER(rt0.c0))) WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c0) NOT NULL))*(((rt0.c1)||(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 NOT INDEXED LEFT OUTER JOIN t0 ON (((((rt0.c0 IN ()))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(UPPER(rt0.c0))) ORDER BY ((((rt0.c0) NOT NULL))*(((rt0.c1)||(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((((rt0.c0 IN ()))OR((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(UPPER(rt0.c0))) WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY ((((rt0.c0) NOT NULL))*(((rt0.c1)||(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY ((rt0.c2)>=(((rt0.c0)GLOB(rt0.c1)))), (((((t0.c0))>((NULL))))OR((((rt0.c2))>=((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2)>=(((rt0.c0)GLOB(rt0.c1)))), (((((t0.c0))>((NULL))))OR((((rt0.c2))>=((rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY ((rt0.c2)>=(((rt0.c0)GLOB(rt0.c1)))), (((((t0.c0))>((NULL))))OR((((rt0.c2))>=((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2)>=(((rt0.c0)GLOB(rt0.c1)))), (((((t0.c0))>((NULL))))OR((((rt0.c2))>=((rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY ((rt0.c2)>=(((rt0.c0)GLOB(rt0.c1)))), (((((t0.c0))>((NULL))))OR((((rt0.c2))>=((rt0.c2)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (LOWER(DISTINCT CAST(rt0.c2 AS REAL))) ORDER BY 0xffffffffec8806b4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0Xffffffffec8806b4  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (LOWER(DISTINCT CAST(rt0.c2 AS REAL))) ORDER BY 0xffffffffec8806b4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0Xffffffffec8806b4  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (LOWER(DISTINCT CAST(rt0.c2 AS REAL))) ORDER BY 0xffffffffec8806b4  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((+ (t0.c0))))>=((0.2414639598917221))));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c0))))>=((0.2414639598917221)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((+ (t0.c0))))>=((0.2414639598917221))));
SELECT SUM(count) FROM (SELECT ((((((+ (t0.c0))))>=((0.2414639598917221)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((+ (t0.c0))))>=((0.2414639598917221))));
SELECT * FROM rt0 WHERE ('-1464906790') ORDER BY ((((rt0.c2 COLLATE BINARY)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((('if')>=(rt0.c1)))), ((((rt0.c2)>=(rt0.c0)))||((rt0.c0 IN (x'')))), 0.42870236616116275 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1464906790') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 COLLATE BINARY)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((('if')>=(rt0.c1)))), ((((rt0.c2)>=(rt0.c0)))||((rt0.c0 IN (x'')))), 0.42870236616116275 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ('-1464906790') ORDER BY ((((rt0.c2 COLLATE BINARY)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((('if')>=(rt0.c1)))), ((((rt0.c2)>=(rt0.c0)))||((rt0.c0 IN (x'')))), 0.42870236616116275 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1464906790') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 COLLATE BINARY)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((('if')>=(rt0.c1)))), ((((rt0.c2)>=(rt0.c0)))||((rt0.c0 IN (x'')))), 0.42870236616116275 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ('-1464906790') ORDER BY ((((rt0.c2 COLLATE BINARY)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))))OR((('if')>=(rt0.c1)))), ((((rt0.c2)>=(rt0.c0)))||((rt0.c0 IN (x'')))), 0.42870236616116275 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)>=(rt0.c1)))>=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(rt0.c1)))>=(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)>=(rt0.c1)))>=(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(rt0.c1)))>=(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)>=(rt0.c1)))>=(rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY rt0.c2;
SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM);
SELECT * FROM t0 WHERE (CAST(x'' AS BLOB)) ORDER BY COALESCE(DISTINCT ((((t0.c0)AND(NULL)))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ASC  NULLS FIRST, CAST(x'' AS REAL)  NULLS FIRST, (((t0.c0, (+ (t0.c0)), SUBSTR(t0.c0, t0.c0)))=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY COALESCE(DISTINCT ((((t0.c0)AND(NULL)))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ASC  NULLS FIRST, CAST(x'' AS REAL)  NULLS FIRST, (((t0.c0, (+ (t0.c0)), SUBSTR(t0.c0, t0.c0)))=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(x'' AS BLOB)) ORDER BY COALESCE(DISTINCT ((((t0.c0)AND(NULL)))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ASC  NULLS FIRST, CAST(x'' AS REAL)  NULLS FIRST, (((t0.c0, (+ (t0.c0)), SUBSTR(t0.c0, t0.c0)))=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY COALESCE(DISTINCT ((((t0.c0)AND(NULL)))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ASC  NULLS FIRST, CAST(x'' AS REAL)  NULLS FIRST, (((t0.c0, (+ (t0.c0)), SUBSTR(t0.c0, t0.c0)))=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(x'' AS BLOB)) ORDER BY COALESCE(DISTINCT ((((t0.c0)AND(NULL)))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) ASC  NULLS FIRST, CAST(x'' AS REAL)  NULLS FIRST, (((t0.c0, (+ (t0.c0)), SUBSTR(t0.c0, t0.c0)))=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c2)AND('-473582161')) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2))==((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c2)AND('-473582161')) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2))=((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c2)AND('-473582161')) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2))==((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c2)AND('-473582161')) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2))=((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c2)AND('-473582161')) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2))==((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c2))))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))>((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0))>((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))>((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((t0.c0))>((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))>((t0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c1)OR('1461167245')))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND ((+ ('1943698496')))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR('1461167245')))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND ((+ ('1943698496'))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c1)OR('1461167245')))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND ((+ ('1943698496')))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR('1461167245')))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND ((+ ('1943698496'))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c1)OR('1461167245')))OR(rt0.c1))) NOT BETWEEN (rt0.c1) AND ((+ ('1943698496')))));
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c2)>=(rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) WHEN STRFTIME(rt0.c1, t0.c0, rt0.c0) THEN ((rt0.c2)>=(rt0.c1)) WHEN (- (rt0.c1)) THEN ((t0.c0)LIKE(rt0.c0)) ELSE (- (rt0.c2)) END) ORDER BY LIKELIHOOD(DISTINCT rt0.c1, 0.8963480198829995) COLLATE NOCASE DESC, ((rt0.c1 COLLATE BINARY)!=((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c2)>=(rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) WHEN STRFTIME(rt0.c1, t0.c0, rt0.c0) THEN ((rt0.c2)>=(rt0.c1)) WHEN (- (rt0.c1)) THEN ((t0.c0)LIKE(rt0.c0)) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY LIKELIHOOD(DISTINCT rt0.c1, 0.8963480198829995) COLLATE NOCASE DESC, ((rt0.c1 COLLATE BINARY)<>((rt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c2)>=(rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) WHEN STRFTIME(rt0.c1, t0.c0, rt0.c0) THEN ((rt0.c2)>=(rt0.c1)) WHEN (- (rt0.c1)) THEN ((t0.c0)LIKE(rt0.c0)) ELSE (- (rt0.c2)) END) ORDER BY LIKELIHOOD(DISTINCT rt0.c1, 0.8963480198829995) COLLATE NOCASE DESC, ((rt0.c1 COLLATE BINARY)!=((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c2)>=(rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) WHEN STRFTIME(rt0.c1, t0.c0, rt0.c0) THEN ((rt0.c2)>=(rt0.c1)) WHEN (- (rt0.c1)) THEN ((t0.c0)LIKE(rt0.c0)) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY LIKELIHOOD(DISTINCT rt0.c1, 0.8963480198829995) COLLATE NOCASE DESC, ((rt0.c1 COLLATE BINARY)<>((rt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c2)>=(rt0.c2)) THEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) WHEN STRFTIME(rt0.c1, t0.c0, rt0.c0) THEN ((rt0.c2)>=(rt0.c1)) WHEN (- (rt0.c1)) THEN ((t0.c0)LIKE(rt0.c0)) ELSE (- (rt0.c2)) END) ORDER BY LIKELIHOOD(DISTINCT rt0.c1, 0.8963480198829995) COLLATE NOCASE DESC, ((rt0.c1 COLLATE BINARY)!=((rt0.c0 IN ()))) ASC;
SELECT * FROM rt0, t0 WHERE (CAST(ABS(DISTINCT rt0.c1) AS NUMERIC)) ORDER BY CASE WHEN LIKE(rt0.c1, t0.c0) THEN rt0.c1 COLLATE RTRIM ELSE CAST(71518064 AS BLOB) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN LIKE(rt0.c1, t0.c0) THEN rt0.c1 COLLATE RTRIM ELSE CAST(71518064 AS BLOB) END DESC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CAST(ABS(DISTINCT rt0.c1) AS NUMERIC)) ORDER BY CASE WHEN LIKE(rt0.c1, t0.c0) THEN rt0.c1 COLLATE RTRIM ELSE CAST(71518064 AS BLOB) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN LIKE(rt0.c1, t0.c0) THEN rt0.c1 COLLATE RTRIM ELSE CAST(71518064 AS BLOB) END DESC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CAST(ABS(DISTINCT rt0.c1) AS NUMERIC)) ORDER BY CASE WHEN LIKE(rt0.c1, t0.c0) THEN rt0.c1 COLLATE RTRIM ELSE CAST(71518064 AS BLOB) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS REAL));
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((0Xffffffffb0f88b91)&(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((0xffffffffb0f88b91)&(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((0Xffffffffb0f88b91)&(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((0xffffffffb0f88b91)&(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((0Xffffffffb0f88b91)&(rt0.c0))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)OR(t0.c0)))AND(rt0.c0)) COLLATE BINARY) ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END, 0.9170131436550408);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END, 0.9170131436550408));
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)OR(t0.c0)))AND(rt0.c0)) COLLATE BINARY) ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END, 0.9170131436550408);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END, 0.9170131436550408));
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)OR(t0.c0)))AND(rt0.c0)) COLLATE BINARY) ORDER BY LIKELIHOOD(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE t0.c0 END, 0.9170131436550408);
SELECT ALL * FROM t0 WHERE ((- (CHAR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (CHAR(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (CHAR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (CHAR(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (CHAR(t0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) ORDER BY IFNULL(CAST(rt0.c0 AS REAL), ((((rt0.c0)AND('882625163')))OR(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(CAST(rt0.c0 AS REAL), ((((rt0.c0)AND('882625163')))OR(rt0.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) ORDER BY IFNULL(CAST(rt0.c0 AS REAL), ((((rt0.c0)AND('882625163')))OR(rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(CAST(rt0.c0 AS REAL), ((((rt0.c0)AND('882625163')))OR(rt0.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) ORDER BY IFNULL(CAST(rt0.c0 AS REAL), ((((rt0.c0)AND('882625163')))OR(rt0.c2)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM t0, rt0 WHERE ((+ (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c0) IS TRUE))+(CASE rt0.c0  WHEN rt0.c1 THEN NULL END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0) IS TRUE))+(CASE rt0.c0  WHEN rt0.c1 THEN NULL END)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((+ (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c0) IS TRUE))+(CASE rt0.c0  WHEN rt0.c1 THEN NULL END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c0) IS TRUE))+(CASE rt0.c0  WHEN rt0.c1 THEN NULL END)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((+ (rt0.c2 COLLATE BINARY))) ORDER BY ((((rt0.c0) IS TRUE))+(CASE rt0.c0  WHEN rt0.c1 THEN NULL END)) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (((((rt0.c1)OR('-2052480952')))OR(rt0.c1)), '鱮+h(')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (((((rt0.c1)OR('-2052480952')))OR(rt0.c1)), '鱮+h('))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (((((rt0.c1)OR('-2052480952')))OR(rt0.c1)), '鱮+h(')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (((((rt0.c1)OR('-2052480952')))OR(rt0.c1)), '鱮+h('))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (((((rt0.c1)OR('-2052480952')))OR(rt0.c1)), '鱮+h(')));
SELECT * FROM rt0 WHERE (((rt0.c1)||(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)||(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)||(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)||(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1)||(CAST(rt0.c0 AS REAL))));
SELECT * FROM rt0 WHERE ((((((('')AND(rt0.c2)))AND(rt0.c2))) BETWEEN (TYPEOF(NULL)) AND (rt0.c1))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0))))))AND(((rt0.c2) NOTNULL))) ASC  NULLS FIRST, (((((((NULL)AND(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c2 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('')AND(rt0.c2)))AND(rt0.c2))) BETWEEN (TYPEOF(NULL)) AND (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0))))))AND(((rt0.c2) NOTNULL))) ASC  NULLS FIRST, (((((((NULL)AND(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c2 AS NUMERIC))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((('')AND(rt0.c2)))AND(rt0.c2))) BETWEEN (TYPEOF(NULL)) AND (rt0.c1))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0))))))AND(((rt0.c2) NOTNULL))) ASC  NULLS FIRST, (((((((NULL)AND(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c2 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('')AND(rt0.c2)))AND(rt0.c2))) BETWEEN (TYPEOF(NULL)) AND (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0))))))AND(((rt0.c2) NOTNULL))) ASC  NULLS FIRST, (((((((NULL)AND(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c2 AS NUMERIC))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((('')AND(rt0.c2)))AND(rt0.c2))) BETWEEN (TYPEOF(NULL)) AND (rt0.c1))) ORDER BY ((((rt0.c1 COLLATE BINARY)AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt0.c0))))))AND(((rt0.c2) NOTNULL))) ASC  NULLS FIRST, (((((((NULL)AND(rt0.c2)))AND(rt0.c0))))<((CAST(rt0.c2 AS NUMERIC))))  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (t0.c0) ORDER BY (((rt0.c1))<=(((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))))  NULLS FIRST, (+ ((NULL IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1))<=(((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))))  NULLS FIRST, (+ ((NULL IN ())))  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (t0.c0) ORDER BY (((rt0.c1))<=(((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))))  NULLS FIRST, (+ ((NULL IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1))<=(((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))))  NULLS FIRST, (+ ((NULL IN ())))  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (t0.c0) ORDER BY (((rt0.c1))<=(((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))))  NULLS FIRST, (+ ((NULL IN ())))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)>=(rt0.c0)))) AND (((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c1)>=(rt0.c0)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)>=(rt0.c0)))) AND (((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c1)>=(rt0.c0)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1)>=(rt0.c0)))) AND (((rt0.c1 IN ())))));
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2)>>(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2)>>(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((rt0.c2)>>(t0.c0)) COLLATE NOCASE);
SELECT * FROM rt0, t0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN ((NOT (rt0.c0))) AND (HEX(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) BETWEEN ((NOT (rt0.c0))) AND (HEX(rt0.c1)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN ((NOT (rt0.c0))) AND (HEX(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) BETWEEN ((NOT (rt0.c0))) AND (HEX(rt0.c1)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN ((NOT (rt0.c0))) AND (HEX(rt0.c1))));
SELECT * FROM t0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((((((285350678)OR('Yy{ꯝDl9EP')))OR(rt0.c0)))OR(rt0.c2)))OR('-932348438')))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((285350678)OR('Yy{ꯝDl9EP')))OR(rt0.c0)))OR(rt0.c2)))OR('-932348438')))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((((((285350678)OR('Yy{ꯝDl9EP')))OR(rt0.c0)))OR(rt0.c2)))OR('-932348438')))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((285350678)OR('Yy{ꯝDl9EP')))OR(rt0.c0)))OR(rt0.c2)))OR('-932348438')))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((((((285350678)OR('Yy{ꯝDl9EP')))OR(rt0.c0)))OR(rt0.c2)))OR('-932348438')))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)<=(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))>>(((((rt0.c2)AND(rt0.c1)))AND(t0.c0))))) ORDER BY (('-1397594915')>=(CAST(rt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))>>(((((rt0.c2)AND(rt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (('-1397594915')>=(CAST(rt0.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))>>(((((rt0.c2)AND(rt0.c1)))AND(t0.c0))))) ORDER BY (('-1397594915')>=(CAST(rt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))>>(((((rt0.c2)AND(rt0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (('-1397594915')>=(CAST(rt0.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))>>(((((rt0.c2)AND(rt0.c1)))AND(t0.c0))))) ORDER BY (('-1397594915')>=(CAST(rt0.c0 AS TEXT))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1)>(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c1)>(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1)>(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c1)>(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c1)>(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS REAL))) ASC;
SELECT ALL * FROM rt0, t0 WHERE (NULL) ORDER BY ((((((856947914) BETWEEN (x'') AND (rt0.c2)))OR((t0.c0 IN (rt0.c1)))))OR(((rt0.c0)!=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((856947914) BETWEEN (x'') AND (rt0.c2)))OR((t0.c0 IN (rt0.c1)))))OR(((rt0.c0)!=(rt0.c2)))));
SELECT ALL * FROM rt0, t0 WHERE (NULL) ORDER BY ((((((856947914) BETWEEN (x'') AND (rt0.c2)))OR((t0.c0 IN (rt0.c1)))))OR(((rt0.c0)!=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((856947914) BETWEEN (x'') AND (rt0.c2)))OR((t0.c0 IN (rt0.c1)))))OR(((rt0.c0)!=(rt0.c2)))));
SELECT ALL * FROM rt0, t0 WHERE (NULL) ORDER BY ((((((856947914) BETWEEN (x'') AND (rt0.c2)))OR((t0.c0 IN (rt0.c1)))))OR(((rt0.c0)!=(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0))<((rt0.c0))) IN (((rt0.c0)>(t0.c0))))) ORDER BY ((((t0.c0)<=(rt0.c2))) BETWEEN (((((((((t0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(t0.c0))) AND (((rt0.c0)>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0))<((rt0.c0))) IN (((rt0.c0)>(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)<=(rt0.c2))) BETWEEN (((((((((t0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(t0.c0))) AND (((rt0.c0)>(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0))<((rt0.c0))) IN (((rt0.c0)>(t0.c0))))) ORDER BY ((((t0.c0)<=(rt0.c2))) BETWEEN (((((((((t0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(t0.c0))) AND (((rt0.c0)>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0))<((rt0.c0))) IN (((rt0.c0)>(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)<=(rt0.c2))) BETWEEN (((((((((t0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(t0.c0))) AND (((rt0.c0)>(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c0))<((rt0.c0))) IN (((rt0.c0)>(t0.c0))))) ORDER BY ((((t0.c0)<=(rt0.c2))) BETWEEN (((((((((t0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))AND(t0.c0))) AND (((rt0.c0)>(rt0.c2)))) DESC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c2 COLLATE RTRIM THEN 0x26d7a596 END WHERE (((CAST(rt0.c2 AS TEXT))+((~ (rt0.c2))))) ORDER BY x'', ((((((t0.c0)AND('')))OR(t0.c0))) BETWEEN (rt0.c0) AND ('-1254613885'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT))+((~ (rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c2 COLLATE RTRIM THEN 0X26d7a596 END ORDER BY x'', ((((((t0.c0)AND('')))OR(t0.c0))) BETWEEN (rt0.c0) AND ('-1254613885'))  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c2 COLLATE RTRIM THEN 0x26d7a596 END WHERE (((CAST(rt0.c2 AS TEXT))+((~ (rt0.c2))))) ORDER BY x'', ((((((t0.c0)AND('')))OR(t0.c0))) BETWEEN (rt0.c0) AND ('-1254613885'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT))+((~ (rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c2 COLLATE RTRIM THEN 0X26d7a596 END ORDER BY x'', ((((((t0.c0)AND('')))OR(t0.c0))) BETWEEN (rt0.c0) AND ('-1254613885'))  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE t0.c0  WHEN rt0.c2 COLLATE RTRIM THEN 0x26d7a596 END WHERE (((CAST(rt0.c2 AS TEXT))+((~ (rt0.c2))))) ORDER BY x'', ((((((t0.c0)AND('')))OR(t0.c0))) BETWEEN (rt0.c0) AND ('-1254613885'))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY LIKE(TRIM(DISTINCT rt0.c0), NULL), CAST(0xffffffffdcd74429 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY LIKE(TRIM(DISTINCT rt0.c0), NULL), CAST(0xffffffffdcd74429 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY LIKE(TRIM(DISTINCT rt0.c0), NULL), CAST(0xffffffffdcd74429 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY LIKE(TRIM(DISTINCT rt0.c0), NULL), CAST(0xffffffffdcd74429 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY LIKE(TRIM(DISTINCT rt0.c0), NULL), CAST(0xffffffffdcd74429 AS NUMERIC) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(((rt0.c1) ISNULL))))AND((- (t0.c0)))))OR(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((rt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(((rt0.c1) ISNULL))))AND((- (t0.c0)))))OR(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((rt0.c1) NOTNULL))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(((rt0.c1) ISNULL))))AND((- (t0.c0)))))OR(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((rt0.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(((rt0.c1) ISNULL))))AND((- (t0.c0)))))OR(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((rt0.c1) NOTNULL))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((((((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)OR(((rt0.c1) ISNULL))))AND((- (t0.c0)))))OR(CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)))AND(((rt0.c1) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((ABS(rt0.c0))<=((((rt0.c2, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, 0xffffffffd245b87b, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, rt0.c0, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c0))<=((((rt0.c2, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, 0Xffffffffd245b87b, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, rt0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((ABS(rt0.c0))<=((((rt0.c2, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, 0xffffffffd245b87b, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, rt0.c0, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c0))<=((((rt0.c2, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, 0Xffffffffd245b87b, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, rt0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((ABS(rt0.c0))<=((((rt0.c2, rt0.c1, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, 0xffffffffd245b87b, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c0, rt0.c0, rt0.c0, rt0.c2))))));
SELECT * FROM t0 WHERE (((t0.c0)<>(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)<>(NULL)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)<>(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)<>(NULL)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)<>(NULL)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.8829989393367429 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.493394133321705 END)|((t0.c0 IN ())))) ORDER BY (((((t0.c0))<((t0.c0)))) BETWEEN (INSTR(t0.c0, 0.22254304066389785)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.8829989393367429 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.493394133321705 END)|((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<((t0.c0)))) BETWEEN (INSTR(t0.c0, 0.22254304066389785)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.8829989393367429 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.493394133321705 END)|((t0.c0 IN ())))) ORDER BY (((((t0.c0))<((t0.c0)))) BETWEEN (INSTR(t0.c0, 0.22254304066389785)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.8829989393367429 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.493394133321705 END)|((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<((t0.c0)))) BETWEEN (INSTR(t0.c0, 0.22254304066389785)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.8829989393367429 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.493394133321705 END)|((t0.c0 IN ())))) ORDER BY (((((t0.c0))<((t0.c0)))) BETWEEN (INSTR(t0.c0, 0.22254304066389785)) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))) DESC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON (- ((rt0.c0 IN ()))) WHERE (CASE WHEN rt0.c1 THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(rt0.c2)))*(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (- ((rt0.c0 IN ()))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(rt0.c2)))*(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON (- ((rt0.c0 IN ()))) WHERE (CASE WHEN rt0.c1 THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(rt0.c2)))*(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (- ((rt0.c0 IN ()))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(rt0.c2)))*(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON (- ((rt0.c0 IN ()))) WHERE (CASE WHEN rt0.c1 THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE (NOT (rt0.c0)) END) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(rt0.c2)))*(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL)) IS TRUE));
SELECT * FROM rt0, t0 WHERE ((((('')OR((t0.c0 IN ()))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((('')OR((t0.c0 IN ()))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((('')OR((t0.c0 IN ()))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((('')OR((t0.c0 IN ()))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((('')OR((t0.c0 IN ()))))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((t0.c0)>=(t0.c0)))))  NULLS FIRST, '-1845086706'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((t0.c0)>=(t0.c0)))))  NULLS FIRST, '-1845086706'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((t0.c0)>=(t0.c0)))))  NULLS FIRST, '-1845086706'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((t0.c0)>=(t0.c0)))))  NULLS FIRST, '-1845086706'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((t0.c0)>=(t0.c0)))))  NULLS FIRST, '-1845086706'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(NULL)))AND(CAST(0.7349085588189963 AS NUMERIC)))) ORDER BY (((CAST(rt0.c2 AS NUMERIC), ((rt0.c1)GLOB(rt0.c2)), ((rt0.c1) NOT NULL)))=((rt0.c2, ((rt0.c1) NOT NULL), rt0.c1)))  NULLS FIRST, (((CAST(rt0.c2 AS TEXT)))<=(('K봹3u⊧'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(NULL)))AND(CAST(0.7349085588189963 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c2 AS NUMERIC), ((rt0.c1)GLOB(rt0.c2)), ((rt0.c1) NOT NULL)))==((rt0.c2, ((rt0.c1) NOT NULL), rt0.c1)))  NULLS FIRST, (((CAST(rt0.c2 AS TEXT)))<=(('K봹3u⊧'))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(NULL)))AND(CAST(0.7349085588189963 AS NUMERIC)))) ORDER BY (((CAST(rt0.c2 AS NUMERIC), ((rt0.c1)GLOB(rt0.c2)), ((rt0.c1) NOT NULL)))=((rt0.c2, ((rt0.c1) NOT NULL), rt0.c1)))  NULLS FIRST, (((CAST(rt0.c2 AS TEXT)))<=(('K봹3u⊧'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(NULL)))AND(CAST(0.7349085588189963 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c2 AS NUMERIC), ((rt0.c1)GLOB(rt0.c2)), ((rt0.c1) NOT NULL)))==((rt0.c2, ((rt0.c1) NOT NULL), rt0.c1)))  NULLS FIRST, (((CAST(rt0.c2 AS TEXT)))<=(('K봹3u⊧'))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(NULL)))AND(CAST(0.7349085588189963 AS NUMERIC)))) ORDER BY (((CAST(rt0.c2 AS NUMERIC), ((rt0.c1)GLOB(rt0.c2)), ((rt0.c1) NOT NULL)))=((rt0.c2, ((rt0.c1) NOT NULL), rt0.c1)))  NULLS FIRST, (((CAST(rt0.c2 AS TEXT)))<=(('K봹3u⊧'))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) NOTNULL) IN ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOTNULL) IN ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) NOTNULL) IN ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOTNULL) IN ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0) NOTNULL) IN ((- (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((ABS(DISTINCT '1956147967')) BETWEEN ((t0.c0 IN (t0.c0))) AND (('0.371489451424204' IN ())))) ORDER BY t0.c0 DESC  NULLS FIRST, CASE t0.c0  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN '1671819913' WHEN ((t0.c0)+(NULL)) THEN 2144078135 WHEN COALESCE(t0.c0, t0.c0) THEN (((t0.c0))>((t0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT '1956147967')) BETWEEN ((t0.c0 IN (t0.c0))) AND (('0.371489451424204' IN ())))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS FIRST, CASE t0.c0  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN '1671819913' WHEN ((t0.c0)+(NULL)) THEN 2144078135 WHEN COALESCE(t0.c0, t0.c0) THEN (((t0.c0))>((t0.c0))) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((ABS(DISTINCT '1956147967')) BETWEEN ((t0.c0 IN (t0.c0))) AND (('0.371489451424204' IN ())))) ORDER BY t0.c0 DESC  NULLS FIRST, CASE t0.c0  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN '1671819913' WHEN ((t0.c0)+(NULL)) THEN 2144078135 WHEN COALESCE(t0.c0, t0.c0) THEN (((t0.c0))>((t0.c0))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT '1956147967')) BETWEEN ((t0.c0 IN (t0.c0))) AND (('0.371489451424204' IN ())))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS FIRST, CASE t0.c0  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN '1671819913' WHEN ((t0.c0)+(NULL)) THEN 2144078135 WHEN COALESCE(t0.c0, t0.c0) THEN (((t0.c0))>((t0.c0))) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((ABS(DISTINCT '1956147967')) BETWEEN ((t0.c0 IN (t0.c0))) AND (('0.371489451424204' IN ())))) ORDER BY t0.c0 DESC  NULLS FIRST, CASE t0.c0  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN '1671819913' WHEN ((t0.c0)+(NULL)) THEN 2144078135 WHEN COALESCE(t0.c0, t0.c0) THEN (((t0.c0))>((t0.c0))) END DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c0)<=(rt0.c0)) IN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (~ (((rt0.c2)+(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<=(rt0.c0)) IN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)+(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c0)<=(rt0.c0)) IN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (~ (((rt0.c2)+(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<=(rt0.c0)) IN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c2)+(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c0)<=(rt0.c0)) IN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ORDER BY (~ (((rt0.c2)+(rt0.c0))));
SELECT * FROM rt0, t0 WHERE (((((((rt0.c2) IS FALSE))OR(NULL)))AND(((NULL)LIKE(t0.c0))))) ORDER BY ((((rt0.c1) NOTNULL))IS NOT(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS FALSE))OR(NULL)))AND(((NULL)LIKE(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) NOTNULL))IS NOT(rt0.c0)) DESC);
SELECT * FROM rt0, t0 WHERE (((((((rt0.c2) IS FALSE))OR(NULL)))AND(((NULL)LIKE(t0.c0))))) ORDER BY ((((rt0.c1) NOTNULL))IS NOT(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS FALSE))OR(NULL)))AND(((NULL)LIKE(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) NOTNULL))IS NOT(rt0.c0)) DESC);
SELECT * FROM rt0, t0 WHERE (((((((rt0.c2) IS FALSE))OR(NULL)))AND(((NULL)LIKE(t0.c0))))) ORDER BY ((((rt0.c1) NOTNULL))IS NOT(rt0.c0)) DESC;
SELECT ALL * FROM t0, rt0 WHERE ((NOT (IFNULL(DISTINCT t0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (IFNULL(DISTINCT t0.c0, rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((NOT (IFNULL(DISTINCT t0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (IFNULL(DISTINCT t0.c0, rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((NOT (IFNULL(DISTINCT t0.c0, rt0.c2))));
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0 WHERE ('0.7910644296775895') ORDER BY ((((t0.c0)LIKE(rt0.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.7910644296775895') IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)LIKE(rt0.c1))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ('0.7910644296775895') ORDER BY ((((t0.c0)LIKE(rt0.c1))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.7910644296775895') IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c0)LIKE(rt0.c1))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ('0.7910644296775895') ORDER BY ((((t0.c0)LIKE(rt0.c1))) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (SUBSTR((rt0.c1 IN ()), (NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((SUBSTR((rt0.c1 IN ()), (NOT (rt0.c2)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (SUBSTR((rt0.c1 IN ()), (NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((SUBSTR((rt0.c1 IN ()), (NOT (rt0.c2)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (SUBSTR((rt0.c1 IN ()), (NOT (rt0.c2))));
SELECT * FROM t0, rt0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((((x'1c43')<(rt0.c0)) IN ())) ORDER BY (~ ((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((x'1c43')<(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c0 IN ()))) DESC);
SELECT ALL * FROM rt0 WHERE ((((x'1c43')<(rt0.c0)) IN ())) ORDER BY (~ ((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((x'1c43')<(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (~ ((rt0.c0 IN ()))) DESC);
SELECT ALL * FROM rt0 WHERE ((((x'1c43')<(rt0.c0)) IN ())) ORDER BY (~ ((rt0.c0 IN ()))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1))==((rt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1))=((rt0.c1))) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1))==((rt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1))=((rt0.c1))) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1))==((rt0.c1))) AS REAL));
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((- (rt0.c2))) ORDER BY ((t0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((t0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((- (rt0.c2))) ORDER BY ((t0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((t0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((- (rt0.c2))) ORDER BY ((t0.c0 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (((((((((((75203468)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((75203468)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((((((75203468)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((75203468)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((((((75203468)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) WHERE ((((((t0.c0 IN (rt0.c2, rt0.c1)))AND(((t0.c0) NOT NULL))))OR((t0.c0 IN (rt0.c2, rt0.c2))))) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))  WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN CASE NULL  WHEN '' THEN rt0.c2 ELSE t0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (rt0.c2, rt0.c1)))AND(((t0.c0) NOT NULL))))OR((t0.c0 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))  WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN CASE NULL  WHEN '' THEN rt0.c2 ELSE t0.c0 END END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) WHERE ((((((t0.c0 IN (rt0.c2, rt0.c1)))AND(((t0.c0) NOT NULL))))OR((t0.c0 IN (rt0.c2, rt0.c2))))) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))  WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN CASE NULL  WHEN '' THEN rt0.c2 ELSE t0.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (rt0.c2, rt0.c1)))AND(((t0.c0) NOT NULL))))OR((t0.c0 IN (rt0.c2, rt0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))  WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN CASE NULL  WHEN '' THEN rt0.c2 ELSE t0.c0 END END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (NOT (rt0.c0 COLLATE RTRIM)) WHERE ((((((t0.c0 IN (rt0.c2, rt0.c1)))AND(((t0.c0) NOT NULL))))OR((t0.c0 IN (rt0.c2, rt0.c2))))) ORDER BY CASE ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))  WHEN (((t0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c2))) THEN CASE NULL  WHEN '' THEN rt0.c2 ELSE t0.c0 END END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ('-417842415'))) ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(NULL))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ('-417842415'))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(NULL))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ('-417842415'))) ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(NULL))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ('-417842415'))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(NULL))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ('-417842415'))) ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(NULL))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('T[' COLLATE NOCASE) ORDER BY ((((rt0.c0)AND(rt0.c1)))||((NOT (rt0.c2)))) DESC, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('T[' COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0)AND(rt0.c1)))||((NOT (rt0.c2)))) DESC, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('T[' COLLATE NOCASE) ORDER BY ((((rt0.c0)AND(rt0.c1)))||((NOT (rt0.c2)))) DESC, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('T[' COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0)AND(rt0.c1)))||((NOT (rt0.c2)))) DESC, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('T[' COLLATE NOCASE) ORDER BY ((((rt0.c0)AND(rt0.c1)))||((NOT (rt0.c2)))) DESC, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((NULL)LIKE(t0.c0)))LIKE(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)LIKE(t0.c0)))LIKE(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((NULL)LIKE(t0.c0)))LIKE(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)LIKE(t0.c0)))LIKE(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((NULL)LIKE(t0.c0)))LIKE(((t0.c0) ISNULL))));
SELECT * FROM rt0 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE BINARY WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE BINARY ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST);
SELECT * FROM rt0 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE BINARY WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE BINARY ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST);
SELECT * FROM rt0 INNER JOIN t0 ON (rt0.c2 IN ()) COLLATE BINARY WHERE (CAST(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL)) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)+(rt0.c1)))AND((- (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt0.c1)))AND((- (NULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)+(rt0.c1)))AND((- (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt0.c1)))AND((- (NULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)+(rt0.c1)))AND((- (NULL)))));
SELECT * FROM rt0 WHERE (-678196587);
SELECT SUM(count) FROM (SELECT ALL ((-678196587) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-678196587);
SELECT SUM(count) FROM (SELECT ALL ((-678196587) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (-678196587);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) IN (rt0.c0)) WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((((t0.c0) IS FALSE)) NOTNULL) DESC, (NOT (rt0.c2))  NULLS FIRST, ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)-((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) IN (rt0.c0)) ORDER BY ((((t0.c0) IS FALSE)) NOTNULL) DESC, (NOT (rt0.c2))  NULLS FIRST, ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)-((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) IN (rt0.c0)) WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((((t0.c0) IS FALSE)) NOTNULL) DESC, (NOT (rt0.c2))  NULLS FIRST, ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)-((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) IN (rt0.c0)) ORDER BY ((((t0.c0) IS FALSE)) NOTNULL) DESC, (NOT (rt0.c2))  NULLS FIRST, ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)-((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0)) IN (rt0.c0)) WHERE (((rt0.c2 IN ()) IN ())) ORDER BY ((((t0.c0) IS FALSE)) NOTNULL) DESC, (NOT (rt0.c2))  NULLS FIRST, ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)-((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (- (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (- (((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (- (((rt0.c0) IS FALSE)));
SELECT * FROM t0 WHERE ((((((t0.c0))<((NULL))))LIKE(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<((NULL))))LIKE(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS FALSE));
SELECT * FROM t0 WHERE ((((((t0.c0))<((NULL))))LIKE(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<((NULL))))LIKE(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS FALSE));
SELECT * FROM t0 WHERE ((((((t0.c0))<((NULL))))LIKE(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS FALSE);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(CAST(t0.c0 AS REAL))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY (((CAST(rt0.c2 AS REAL)))!=((TRIM(DISTINCT t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)OR(CAST(t0.c0 AS REAL))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((CAST(rt0.c2 AS REAL)))!=((TRIM(DISTINCT t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(CAST(t0.c0 AS REAL))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY (((CAST(rt0.c2 AS REAL)))!=((TRIM(DISTINCT t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)OR(CAST(t0.c0 AS REAL))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((CAST(rt0.c2 AS REAL)))!=((TRIM(DISTINCT t0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)OR(CAST(t0.c0 AS REAL))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY (((CAST(rt0.c2 AS REAL)))!=((TRIM(DISTINCT t0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (CHANGES()) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (CHANGES()) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (CHANGES()) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (CHANGES()) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (CHANGES()) AND (((rt0.c2) IS FALSE))));
SELECT * FROM t0, rt0 WHERE ('457477982');
SELECT SUM(count) FROM (SELECT (('457477982') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ('457477982');
SELECT SUM(count) FROM (SELECT (('457477982') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ('457477982');
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) BETWEEN ('-400273018') AND (((t0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) BETWEEN ('-400273018') AND (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) BETWEEN ('-400273018') AND (((t0.c0)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) BETWEEN ('-400273018') AND (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) BETWEEN ('-400273018') AND (((t0.c0)&(t0.c0)))));
SELECT ALL * FROM t0 WHERE (((((((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) IS FALSE))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))AND((t0.c0 IN ()))))AND(((t0.c0) IS TRUE)))) ORDER BY json_object(((((t0.c0)AND(t0.c0)))AND(t0.c0)), (~ (t0.c0))) DESC, CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN t0.c0 COLLATE RTRIM ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) IS FALSE))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))AND((t0.c0 IN ()))))AND(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY json_object(((((t0.c0)AND(t0.c0)))AND(t0.c0)), (~ (t0.c0))) DESC, CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN t0.c0 COLLATE RTRIM ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END DESC);
SELECT ALL * FROM t0 WHERE (((((((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) IS FALSE))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))AND((t0.c0 IN ()))))AND(((t0.c0) IS TRUE)))) ORDER BY json_object(((((t0.c0)AND(t0.c0)))AND(t0.c0)), (~ (t0.c0))) DESC, CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN t0.c0 COLLATE RTRIM ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) IS FALSE))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))AND((t0.c0 IN ()))))AND(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY json_object(((((t0.c0)AND(t0.c0)))AND(t0.c0)), (~ (t0.c0))) DESC, CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN t0.c0 COLLATE RTRIM ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2, rt0.c0)) AS BLOB)) ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))LIKE(TRIM(DISTINCT rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2, rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))LIKE(TRIM(DISTINCT rt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2, rt0.c0)) AS BLOB)) ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))LIKE(TRIM(DISTINCT rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c0 IN (rt0.c2, rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))LIKE(TRIM(DISTINCT rt0.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2, rt0.c0)) AS BLOB)) ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))LIKE(TRIM(DISTINCT rt0.c1)))  NULLS LAST;
SELECT ALL * FROM t0 NOT INDEXED NATURAL JOIN rt0 WHERE ((((((-590349342, rt0.c0, t0.c0, rt0.c0, '0.16696477938974008')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0))))IS NOT(PRINTF(rt0.c2)))) ORDER BY CAST(((((0.49948001559407973)AND(rt0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((-590349342, rt0.c0, t0.c0, rt0.c0, '0.16696477938974008')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0))))IS NOT(PRINTF(rt0.c2)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CAST(((((0.49948001559407973)AND(rt0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED NATURAL JOIN rt0 WHERE ((((((-590349342, rt0.c0, t0.c0, rt0.c0, '0.16696477938974008')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0))))IS NOT(PRINTF(rt0.c2)))) ORDER BY CAST(((((0.49948001559407973)AND(rt0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((-590349342, rt0.c0, t0.c0, rt0.c0, '0.16696477938974008')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0))))IS NOT(PRINTF(rt0.c2)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY CAST(((((0.49948001559407973)AND(rt0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED NATURAL JOIN rt0 WHERE ((((((-590349342, rt0.c0, t0.c0, rt0.c0, '0.16696477938974008')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0))))IS NOT(PRINTF(rt0.c2)))) ORDER BY CAST(((((0.49948001559407973)AND(rt0.c0)))AND(rt0.c2)) AS REAL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (json_remove(((t0.c0)>(t0.c0)), 1.531256601E9));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((t0.c0)>(t0.c0)), 1.531256601E9)) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE (json_remove(((t0.c0)>(t0.c0)), 1.531256601E9));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((t0.c0)>(t0.c0)), 1.531256601E9)) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED WHERE (((((((t0.c0)>>(t0.c0)))OR(((((0.9516106433744657)OR(x'abfe')))OR(rt0.c1)))))OR(((((x'f171')OR(rt0.c0)))OR(0xffffffffa6c76886)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)>>(t0.c0)))OR(((((0.9516106433744657)OR(x'abfe')))OR(rt0.c1)))))OR(((((x'f171')OR(rt0.c0)))OR(0xffffffffa6c76886))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED WHERE (((((((t0.c0)>>(t0.c0)))OR(((((0.9516106433744657)OR(x'abfe')))OR(rt0.c1)))))OR(((((x'f171')OR(rt0.c0)))OR(0xffffffffa6c76886)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)>>(t0.c0)))OR(((((0.9516106433744657)OR(x'abfe')))OR(rt0.c1)))))OR(((((x'f171')OR(rt0.c0)))OR(0xffffffffa6c76886))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED WHERE (((((((t0.c0)>>(t0.c0)))OR(((((0.9516106433744657)OR(x'abfe')))OR(rt0.c1)))))OR(((((x'f171')OR(rt0.c0)))OR(0xffffffffa6c76886)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (UPPER(DISTINCT rt0.c0)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)/(rt0.c2)), rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (NOT (rt0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)/(rt0.c2)), rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (NOT (rt0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (UPPER(DISTINCT rt0.c0)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)/(rt0.c2)), rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (NOT (rt0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)/(rt0.c2)), rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (NOT (rt0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (UPPER(DISTINCT rt0.c0)))) ORDER BY (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)/(rt0.c2)), rt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), (NOT (rt0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT * FROM rt0, t0 WHERE (((((rt0.c1)<(rt0.c2))) ISNULL)) ORDER BY ((- (0Xffffffffcfb68458)) IN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, '-497254770')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((- (0xffffffffcfb68458)) IN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, '-497254770'))))));
SELECT * FROM rt0, t0 WHERE (((((rt0.c1)<(rt0.c2))) ISNULL)) ORDER BY ((- (0Xffffffffcfb68458)) IN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, '-497254770')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((- (0xffffffffcfb68458)) IN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, '-497254770'))))));
SELECT * FROM rt0, t0 WHERE (((((rt0.c1)<(rt0.c2))) ISNULL)) ORDER BY ((- (0Xffffffffcfb68458)) IN ((((rt0.c0, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c1, '-497254770')))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c1 AS BLOB) WHEN (((rt0.c2, 0.42901776091505084, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))) THEN (rt0.c0 IN ()) ELSE (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c1 AS BLOB) WHEN (((rt0.c2, 0.42901776091505084, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))) THEN (rt0.c0 IN ()) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c1 AS BLOB) WHEN (((rt0.c2, 0.42901776091505084, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))) THEN (rt0.c0 IN ()) ELSE (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c1 AS BLOB) WHEN (((rt0.c2, 0.42901776091505084, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))) THEN (rt0.c0 IN ()) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE RTRIM THEN CAST(rt0.c1 AS BLOB) WHEN (((rt0.c2, 0.42901776091505084, rt0.c1))>((rt0.c0, rt0.c0, rt0.c1))) THEN (rt0.c0 IN ()) ELSE (rt0.c2 IN ()) END);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN ())))) ORDER BY (((((t0.c0)*(t0.c0))))<=((t0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)*(t0.c0))))<=((t0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN ())))) ORDER BY (((((t0.c0)*(t0.c0))))<=((t0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)*(t0.c0))))<=((t0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((t0.c0) NOTNULL)) AND ((t0.c0 IN ())))) ORDER BY (((((t0.c0)*(t0.c0))))<=((t0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (+ ((('') IS TRUE))) WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN rt0.c1 COLLATE RTRIM WHEN t0.c0 THEN ((t0.c0) NOT NULL) WHEN ((rt0.c0)*(rt0.c0)) THEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (t0.c0 IN ()) THEN (rt0.c2 IN (t0.c0)) END ASC  NULLS FIRST, (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((x'8b7a', rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2))))>=((rt0.c2 IN (t0.c0))))  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN t0.c0 ELSE NULL END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (+ ((('') IS TRUE))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN rt0.c1 COLLATE RTRIM WHEN t0.c0 THEN ((t0.c0) NOT NULL) WHEN ((rt0.c0)*(rt0.c0)) THEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (t0.c0 IN ()) THEN (rt0.c2 IN (t0.c0)) END ASC  NULLS FIRST, (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((x'8b7a', rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2))))>=((rt0.c2 IN (t0.c0))))  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN t0.c0 ELSE NULL END AS NUMERIC) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (+ ((('') IS TRUE))) WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN rt0.c1 COLLATE RTRIM WHEN t0.c0 THEN ((t0.c0) NOT NULL) WHEN ((rt0.c0)*(rt0.c0)) THEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (t0.c0 IN ()) THEN (rt0.c2 IN (t0.c0)) END ASC  NULLS FIRST, (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((x'8b7a', rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2))))>=((rt0.c2 IN (t0.c0))))  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN t0.c0 ELSE NULL END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (+ ((('') IS TRUE))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN rt0.c1 COLLATE RTRIM WHEN t0.c0 THEN ((t0.c0) NOT NULL) WHEN ((rt0.c0)*(rt0.c0)) THEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (t0.c0 IN ()) THEN (rt0.c2 IN (t0.c0)) END ASC  NULLS FIRST, (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((x'8b7a', rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2))))>=((rt0.c2 IN (t0.c0))))  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN t0.c0 ELSE NULL END AS NUMERIC) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (+ ((('') IS TRUE))) WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) WHEN t0.c0 COLLATE RTRIM THEN rt0.c1 COLLATE RTRIM WHEN t0.c0 THEN ((t0.c0) NOT NULL) WHEN ((rt0.c0)*(rt0.c0)) THEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (t0.c0 IN ()) THEN (rt0.c2 IN (t0.c0)) END ASC  NULLS FIRST, (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((x'8b7a', rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2))))>=((rt0.c2 IN (t0.c0))))  NULLS FIRST, CAST(CASE WHEN rt0.c1 THEN t0.c0 ELSE NULL END AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1)LIKE(rt0.c0)))IS(CASE WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY 161976100, (((t0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)), ((t0.c0)>=(x'bbf6')), ((((((((-1122244028)AND(x'98d3')))AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))) AND (((((t0.c0))>=((rt0.c1))), ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)), x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)LIKE(rt0.c0)))IS(CASE WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY 161976100, (((t0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)), ((t0.c0)>=(x'bbf6')), ((((((((-1122244028)AND(x'98d3')))AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))) AND (((((t0.c0))>=((rt0.c1))), ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)), x''))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c1)LIKE(rt0.c0)))IS(CASE WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY 161976100, (((t0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)), ((t0.c0)>=(x'bbf6')), ((((((((-1122244028)AND(x'98d3')))AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))) AND (((((t0.c0))>=((rt0.c1))), ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)), x''))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)LIKE(rt0.c0)))IS(CASE WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY 161976100, (((t0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)), ((t0.c0)>=(x'bbf6')), ((((((((-1122244028)AND(x'98d3')))AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))) AND (((((t0.c0))>=((rt0.c1))), ((((((((rt0.c2)AND(rt0.c0)))OR(t0.c0)))OR(NULL)))OR(t0.c0)), x''))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)<('2003286756')) IN ()) WHERE (((((rt0.c2)-(rt0.c2)))>(COALESCE(rt0.c2, t0.c0)))) ORDER BY TIME(CAST(t0.c0 AS REAL), CAST(rt0.c0 AS REAL), (NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)-(rt0.c2)))>(COALESCE(rt0.c2, t0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)<('2003286756')) IN ()) ORDER BY TIME(CAST(t0.c0 AS REAL), CAST(rt0.c0 AS REAL), (NOT (rt0.c2))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)<('2003286756')) IN ()) WHERE (((((rt0.c2)-(rt0.c2)))>(COALESCE(rt0.c2, t0.c0)))) ORDER BY TIME(CAST(t0.c0 AS REAL), CAST(rt0.c0 AS REAL), (NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)-(rt0.c2)))>(COALESCE(rt0.c2, t0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)<('2003286756')) IN ()) ORDER BY TIME(CAST(t0.c0 AS REAL), CAST(rt0.c0 AS REAL), (NOT (rt0.c2))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)<('2003286756')) IN ()) WHERE (((((rt0.c2)-(rt0.c2)))>(COALESCE(rt0.c2, t0.c0)))) ORDER BY TIME(CAST(t0.c0 AS REAL), CAST(rt0.c0 AS REAL), (NOT (rt0.c2)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (LOWER(((rt0.c1)*(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c1)*(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (LOWER(((rt0.c1)*(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c1)*(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (LOWER(((rt0.c1)*(rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1))>=((x'', rt0.c0, rt0.c1))))>(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, rt0.c1))>=((x'', rt0.c0, rt0.c1))))>(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1))>=((x'', rt0.c0, rt0.c1))))>(CAST(rt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, rt0.c1))>=((x'', rt0.c0, rt0.c1))))>(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1))>=((x'', rt0.c0, rt0.c1))))>(CAST(rt0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c2) COLLATE BINARY WHERE (CASE WHEN UNLIKELY(DISTINCT t0.c0) THEN ((0.06506191738861633)/(t0.c0)) ELSE ((t0.c0)<(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(DISTINCT t0.c0) THEN ((0.06506191738861633)/(t0.c0)) ELSE ((t0.c0)<(rt0.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c2) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c2) COLLATE BINARY WHERE (CASE WHEN UNLIKELY(DISTINCT t0.c0) THEN ((0.06506191738861633)/(t0.c0)) ELSE ((t0.c0)<(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(DISTINCT t0.c0) THEN ((0.06506191738861633)/(t0.c0)) ELSE ((t0.c0)<(rt0.c0)) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c2) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c2) COLLATE BINARY WHERE (CASE WHEN UNLIKELY(DISTINCT t0.c0) THEN ((0.06506191738861633)/(t0.c0)) ELSE ((t0.c0)<(rt0.c0)) END);
SELECT * FROM t0 WHERE ('') ORDER BY CASE CAST(t0.c0 AS INTEGER)  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)&(t0.c0)) ELSE '-20982323' END ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c0 AS INTEGER)  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)&(t0.c0)) ELSE '-20982323' END ASC);
SELECT * FROM t0 WHERE ('') ORDER BY CASE CAST(t0.c0 AS INTEGER)  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)&(t0.c0)) ELSE '-20982323' END ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c0 AS INTEGER)  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)&(t0.c0)) ELSE '-20982323' END ASC);
SELECT * FROM t0 WHERE ('') ORDER BY CASE CAST(t0.c0 AS INTEGER)  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0)&(t0.c0)) ELSE '-20982323' END ASC;
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)&(t0.c0))))) ORDER BY CASE json_insert(t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN ((NULL) NOT NULL) WHEN ((t0.c0)GLOB(t0.c0)) THEN (t0.c0 IN ()) WHEN CHANGES() THEN NULL END ASC;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE json_insert(t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN ((NULL) NOT NULL) WHEN ((t0.c0)GLOB(t0.c0)) THEN (t0.c0 IN ()) WHEN CHANGES() THEN NULL END ASC);
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)&(t0.c0))))) ORDER BY CASE json_insert(t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN ((NULL) NOT NULL) WHEN ((t0.c0)GLOB(t0.c0)) THEN (t0.c0 IN ()) WHEN CHANGES() THEN NULL END ASC;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)&(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE json_insert(t0.c0, t0.c0, t0.c0)  WHEN t0.c0 THEN ((NULL) NOT NULL) WHEN ((t0.c0)GLOB(t0.c0)) THEN (t0.c0 IN ()) WHEN CHANGES() THEN NULL END ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (x'');
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (t0.c0)));
SELECT * FROM rt0, t0 WHERE ((NOT (((rt0.c2)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)/(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((NOT (((rt0.c2)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)/(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((NOT (((rt0.c2)/(t0.c0)))));
SELECT * FROM t0 WHERE (CAST(((t0.c0)||(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)||(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c0)||(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)||(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c0)||(t0.c0)) AS TEXT));
SELECT ALL * FROM t0 WHERE ((- (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (t0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(NULL AS REAL));
SELECT ALL * FROM t0, rt0 WHERE (NULL) ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1, rt0.c2)) AND (((rt0.c0)LIKE(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1, rt0.c2)) AND (((rt0.c0)LIKE(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (NULL) ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1, rt0.c2)) AND (((rt0.c0)LIKE(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1, rt0.c2)) AND (((rt0.c0)LIKE(rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (NULL) ORDER BY ((rt0.c0 COLLATE RTRIM) BETWEEN (TRIM(rt0.c1, rt0.c2)) AND (((rt0.c0)LIKE(rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0)IS(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)) WHERE (((((((rt0.c2)OR(t0.c0)))AND(rt0.c1))) BETWEEN (((t0.c0)-(rt0.c2))) AND (((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1))) BETWEEN (((t0.c0)-(rt0.c2))) AND (((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0)IS(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0)IS(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)) WHERE (((((((rt0.c2)OR(t0.c0)))AND(rt0.c1))) BETWEEN (((t0.c0)-(rt0.c2))) AND (((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1))) BETWEEN (((t0.c0)-(rt0.c2))) AND (((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0)IS(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((t0.c0)IS(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)) WHERE (((((((rt0.c2)OR(t0.c0)))AND(rt0.c1))) BETWEEN (((t0.c0)-(rt0.c2))) AND (((((((((rt0.c1)AND(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((HEX(NULL))AND(t0.c0)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(NULL))AND(t0.c0)))OR(rt0.c1))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((HEX(NULL))AND(t0.c0)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(NULL))AND(t0.c0)))OR(rt0.c1))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((HEX(NULL))AND(t0.c0)))OR(rt0.c1)));
SELECT ALL * FROM t0, rt0 WHERE ((+ (LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (LOWER(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((+ (LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ (LOWER(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((+ (LOWER(rt0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((((x'4538')-(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE '1266933332' END)))AND((t0.c0 IN ())))  NULLS LAST, CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((x'4538')-(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE '1266933332' END)))AND((t0.c0 IN ())))  NULLS LAST, CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) IS FALSE) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((((((x'4538')-(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE '1266933332' END)))AND((t0.c0 IN ())))  NULLS LAST, CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) IS FALSE) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((x'4538')-(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE '1266933332' END)))AND((t0.c0 IN ())))  NULLS LAST, CASE WHEN ((t0.c0) NOTNULL) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0) IS FALSE) END DESC  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((json_extract(t0.c0, t0.c0, t0.c0, t0.c0))<=(TYPEOF(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(t0.c0, t0.c0, t0.c0, t0.c0))<=(TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((json_extract(t0.c0, t0.c0, t0.c0, t0.c0))<=(TYPEOF(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(t0.c0, t0.c0, t0.c0, t0.c0))<=(TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((json_extract(t0.c0, t0.c0, t0.c0, t0.c0))<=(TYPEOF(rt0.c0))));
SELECT * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE 0Xffffffffec9d46dd END) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.029031226257663634 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE 0Xffffffffec9d46dd END) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.029031226257663634 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE 0Xffffffffec9d46dd END) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.029031226257663634 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE 0Xffffffffec9d46dd END) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.029031226257663634 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE 0Xffffffffec9d46dd END) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.029031226257663634 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((NOT (rt0.c0)) IN ()), ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((rt0.c0))>((rt0.c2))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c0)) IN ()), ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((rt0.c0))>((rt0.c2))) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((NOT (rt0.c0)) IN ()), ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((rt0.c0))>((rt0.c2))) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c0)) IN ()), ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((rt0.c0))>((rt0.c2))) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY ((NOT (rt0.c0)) IN ()), ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOT NULL) ASC  NULLS LAST, ((((rt0.c0))>((rt0.c2))) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0)>=(t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>=(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM t0 WHERE (((t0.c0)>=(t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>=(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM t0 WHERE (((t0.c0)>=(t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)) BETWEEN (('1663815677')) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) BETWEEN (('1663815677')) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)) BETWEEN (('1663815677')) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) BETWEEN (('1663815677')) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)) BETWEEN (('1663815677')) AND ((rt0.c2))) IN ()));
SELECT * FROM t0, rt0 WHERE (((((rt0.c1)AND(rt0.c0))) BETWEEN ((NOT (rt0.c1))) AND (((((((((((((rt0.c0)OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(0.2884455578209797))))) ORDER BY 0.2853490433236593 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c0))) BETWEEN ((NOT (rt0.c1))) AND (((((((((((((rt0.c0)OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(0.2884455578209797))))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.2853490433236593 DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((rt0.c1)AND(rt0.c0))) BETWEEN ((NOT (rt0.c1))) AND (((((((((((((rt0.c0)OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(0.2884455578209797))))) ORDER BY 0.2853490433236593 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c0))) BETWEEN ((NOT (rt0.c1))) AND (((((((((((((rt0.c0)OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(0.2884455578209797))))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.2853490433236593 DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((rt0.c1)AND(rt0.c0))) BETWEEN ((NOT (rt0.c1))) AND (((((((((((((rt0.c0)OR(rt0.c2)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(0.2884455578209797))))) ORDER BY 0.2853490433236593 DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT ALL * FROM t0, rt0 WHERE ((((('-417842415') NOTNULL))=(LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((('-417842415') NOTNULL))==(LOWER(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((('-417842415') NOTNULL))=(LOWER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((('-417842415') NOTNULL))==(LOWER(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((('-417842415') NOTNULL))=(LOWER(rt0.c2))));
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN ((((rt0.c0))<((t0.c0)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN ((((rt0.c0))<((t0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN ((((rt0.c0))<((t0.c0)))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN ((((rt0.c0))<((t0.c0)))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((rt0.c1))>((rt0.c1)))) NOT BETWEEN ((((rt0.c0))<((t0.c0)))) AND (rt0.c0)));
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')))GLOB((~ (rt0.c2)))), (((((rt0.c0, rt0.c0, rt0.c2))<>((t0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')))GLOB((~ (rt0.c2)))), (((((rt0.c0, rt0.c0, rt0.c2))<>((t0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (t0.c0))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')))GLOB((~ (rt0.c2)))), (((((rt0.c0, rt0.c0, rt0.c2))<>((t0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')))GLOB((~ (rt0.c2)))), (((((rt0.c0, rt0.c0, rt0.c2))<>((t0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (t0.c0))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'')))GLOB((~ (rt0.c2)))), (((((rt0.c0, rt0.c0, rt0.c2))<>((t0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND (t0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((rtreenode(t0.c0, t0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND (CAST(t0.c0 AS TEXT)))) ORDER BY (((((t0.c0 IN (t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((NULL)LIKE(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(t0.c0, t0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN (t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((NULL)LIKE(x'')))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((rtreenode(t0.c0, t0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND (CAST(t0.c0 AS TEXT)))) ORDER BY (((((t0.c0 IN (t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((NULL)LIKE(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(t0.c0, t0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN (t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((NULL)LIKE(x'')))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((rtreenode(t0.c0, t0.c0)) BETWEEN (((t0.c0)|(t0.c0))) AND (CAST(t0.c0 AS TEXT)))) ORDER BY (((((t0.c0 IN (t0.c0)))AND(t0.c0 COLLATE BINARY)))OR(((NULL)LIKE(x'')))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE '*i'  WHEN ((t0.c0)<<(rt0.c2)) THEN (rt0.c2 IN ()) WHEN (rt0.c0 IN (rt0.c2)) THEN ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN 1261758001 COLLATE BINARY THEN ((rt0.c2)!=(rt0.c2)) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((CASE '*i'  WHEN ((t0.c0)<<(rt0.c2)) THEN (rt0.c2 IN ()) WHEN (rt0.c0 IN (rt0.c2)) THEN ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN 1261758001 COLLATE BINARY THEN ((rt0.c2)<>(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE '*i'  WHEN ((t0.c0)<<(rt0.c2)) THEN (rt0.c2 IN ()) WHEN (rt0.c0 IN (rt0.c2)) THEN ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN 1261758001 COLLATE BINARY THEN ((rt0.c2)!=(rt0.c2)) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((CASE '*i'  WHEN ((t0.c0)<<(rt0.c2)) THEN (rt0.c2 IN ()) WHEN (rt0.c0 IN (rt0.c2)) THEN ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN 1261758001 COLLATE BINARY THEN ((rt0.c2)<>(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE '*i'  WHEN ((t0.c0)<<(rt0.c2)) THEN (rt0.c2 IN ()) WHEN (rt0.c0 IN (rt0.c2)) THEN ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN 1261758001 COLLATE BINARY THEN ((rt0.c2)!=(rt0.c2)) END) ORDER BY rt0.c2;
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((('-1365465868'))<>((rt0.c2))) END) ORDER BY (((rt0.c2, t0.c0, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), CASE WHEN x'' THEN rt0.c1 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((NULL)OR(rt0.c2)), UNLIKELY(DISTINCT t0.c0), (- (rt0.c1))))), x'';
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((('-1365465868'))!=((rt0.c2))) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2, t0.c0, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), CASE WHEN x'' THEN rt0.c1 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((NULL)OR(rt0.c2)), UNLIKELY(DISTINCT t0.c0), (- (rt0.c1))))), x'');
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((('-1365465868'))<>((rt0.c2))) END) ORDER BY (((rt0.c2, t0.c0, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), CASE WHEN x'' THEN rt0.c1 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((NULL)OR(rt0.c2)), UNLIKELY(DISTINCT t0.c0), (- (rt0.c1))))), x'';
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((('-1365465868'))!=((rt0.c2))) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c2, t0.c0, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), CASE WHEN x'' THEN rt0.c1 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((NULL)OR(rt0.c2)), UNLIKELY(DISTINCT t0.c0), (- (rt0.c1))))), x'');
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((('-1365465868'))<>((rt0.c2))) END) ORDER BY (((rt0.c2, t0.c0, rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), CASE WHEN x'' THEN rt0.c1 END, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((NULL)OR(rt0.c2)), UNLIKELY(DISTINCT t0.c0), (- (rt0.c1))))), x'';
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((((((rt0.c2)AND(CAST(rt0.c2 AS BLOB))))AND(CAST(t0.c0 AS REAL))))OR(t0.c0 COLLATE NOCASE)))OR(CAST('' AS INTEGER))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(CAST(rt0.c2 AS BLOB))))AND(CAST(t0.c0 AS REAL))))OR(t0.c0 COLLATE NOCASE)))OR(CAST('' AS INTEGER))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((((((rt0.c2)AND(CAST(rt0.c2 AS BLOB))))AND(CAST(t0.c0 AS REAL))))OR(t0.c0 COLLATE NOCASE)))OR(CAST('' AS INTEGER))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)AND(CAST(rt0.c2 AS BLOB))))AND(CAST(t0.c0 AS REAL))))OR(t0.c0 COLLATE NOCASE)))OR(CAST('' AS INTEGER))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((((((((rt0.c2)AND(CAST(rt0.c2 AS BLOB))))AND(CAST(t0.c0 AS REAL))))OR(t0.c0 COLLATE NOCASE)))OR(CAST('' AS INTEGER))))OR(UNLIKELY(DISTINCT rt0.c0))))OR(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))));
SELECT * FROM rt0, t0 WHERE ((NOT (rt0.c0))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((NOT (rt0.c0))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((NOT (rt0.c0))) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((rt0.c2 IN (t0.c0)) AS TEXT)) ORDER BY ((NOT (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (t0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NOT (rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((rt0.c2 IN (t0.c0)) AS TEXT)) ORDER BY ((NOT (rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (t0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NOT (rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((rt0.c2 IN (t0.c0)) AS TEXT)) ORDER BY ((NOT (rt0.c0)) IN ());
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (('ks'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (('ks')))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (('ks'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (('ks')))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (('ks'))));
SELECT COUNT(*) FROM rt0 WHERE (((HEX(rt0.c1)) BETWEEN (((rt0.c2)||(x'24d3'))) AND (CAST(rt0.c2 AS REAL)))) ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(rt0.c1)) BETWEEN (((rt0.c2)||(x'24d3'))) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((HEX(rt0.c1)) BETWEEN (((rt0.c2)||(x'24d3'))) AND (CAST(rt0.c2 AS REAL)))) ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(rt0.c1)) BETWEEN (((rt0.c2)||(x'24d3'))) AND (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((HEX(rt0.c1)) BETWEEN (((rt0.c2)||(x'24d3'))) AND (CAST(rt0.c2 AS REAL)))) ORDER BY (rt0.c1 IN (rt0.c1, rt0.c1)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)LIKE(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)LIKE(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)LIKE(rt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((NULL))>=((t0.c0))) IN ())) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL))>=((t0.c0))) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((NULL))>=((t0.c0))) IN ())) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL))>=((t0.c0))) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((NULL))>=((t0.c0))) IN ())) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt0 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID() COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID() COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)<<(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.9760972743860199))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)<<(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.9760972743860199)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)<<(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.9760972743860199))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)<<(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.9760972743860199)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)<<(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.9760972743860199))))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((((- (rt0.c2)))AND(((NULL)==(rt0.c0)))))OR(((rt0.c0) IS TRUE))) WHERE ((('-659442652')AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((('-659442652')AND(rt0.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((- (rt0.c2)))AND(((NULL)=(rt0.c0)))))OR(((rt0.c0) IS TRUE))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((((- (rt0.c2)))AND(((NULL)==(rt0.c0)))))OR(((rt0.c0) IS TRUE))) WHERE ((('-659442652')AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((('-659442652')AND(rt0.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((((- (rt0.c2)))AND(((NULL)=(rt0.c0)))))OR(((rt0.c0) IS TRUE))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((((- (rt0.c2)))AND(((NULL)==(rt0.c0)))))OR(((rt0.c0) IS TRUE))) WHERE ((('-659442652')AND(rt0.c2)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(t0.c0)))-(((rt0.c1) IS FALSE)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))OR(t0.c0)))-(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(t0.c0)))-(((rt0.c1) IS FALSE)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))OR(t0.c0)))-(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(t0.c0)))-(((rt0.c1) IS FALSE)))) ORDER BY rt0.c0;
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (((((t0.c0)<=(t0.c0))))==((x''))), CAST(((t0.c0) IS FALSE) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)<=(t0.c0))))==((x''))), CAST(((t0.c0) IS FALSE) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (((((t0.c0)<=(t0.c0))))==((x''))), CAST(((t0.c0) IS FALSE) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)<=(t0.c0))))==((x''))), CAST(((t0.c0) IS FALSE) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ORDER BY (((((t0.c0)<=(t0.c0))))==((x''))), CAST(((t0.c0) IS FALSE) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((COALESCE(rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c2, rt0.c2))));
SELECT ALL * FROM rt0 WHERE ((+ (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((COALESCE(rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c2, rt0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c2, rt0.c2))));
SELECT ALL * FROM rt0 WHERE ((+ (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))))) ORDER BY ((COALESCE(rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0 IN ())) AND (COALESCE(DISTINCT rt0.c2, rt0.c2)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c1)/(rt0.c0)) IN ((rt0.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1)/(rt0.c0)) IN ((rt0.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c1)/(rt0.c0)) IN ((rt0.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c1)/(rt0.c0)) IN ((rt0.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (rt0.c0)) COLLATE BINARY) ORDER BY (((rt0.c1)/(rt0.c0)) IN ((rt0.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0))<=(('i>yh'))))OR(CASE x''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<=(('i>yh'))))OR(CASE x''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0))<=(('i>yh'))))OR(CASE x''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<=(('i>yh'))))OR(CASE x''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0))<=(('i>yh'))))OR(CASE x''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL) WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((rt0.c0)>>(rt0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL) ORDER BY ((((rt0.c0)>>(rt0.c2))) IS FALSE) ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL) WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((rt0.c0)>>(rt0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL) ORDER BY ((((rt0.c0)>>(rt0.c2))) IS FALSE) ASC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON (((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOTNULL) WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((rt0.c0)>>(rt0.c2))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (-2.0982323E7) ORDER BY ((('' IN ())) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-2.0982323E7) IS TRUE)  as count FROM rt0 ORDER BY ((('' IN ())) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (-2.0982323E7) ORDER BY ((('' IN ())) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-2.0982323E7) IS TRUE)  as count FROM rt0 ORDER BY ((('' IN ())) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (-2.0982323E7) ORDER BY ((('' IN ())) BETWEEN ((NOT (rt0.c0))) AND (CAST(rt0.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (STRFTIME(rt0.c2, rt0.c1, rt0.c2)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (STRFTIME(rt0.c2, rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (STRFTIME(rt0.c2, rt0.c1, rt0.c2)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (STRFTIME(rt0.c2, rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (STRFTIME(rt0.c2, rt0.c1, rt0.c2)))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON LAST_INSERT_ROWID() WHERE (((ABS(rt0.c0)) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c0)) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON LAST_INSERT_ROWID() WHERE (((ABS(rt0.c0)) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c0)) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON LAST_INSERT_ROWID() WHERE (((ABS(rt0.c0)) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((NOT (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL))AND(((rt0.c1)LIKE(rt0.c1))))) ORDER BY ((((+ (0.5364935136997402))))<((TIME(rt0.c0, rt0.c0, rt0.c1)))), (((('UsfEM윎*_') BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))AND(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((+ (0.5364935136997402))))<((TIME(rt0.c0, rt0.c0, rt0.c1)))), (((('UsfEM윎*_') BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL))AND(((rt0.c1)LIKE(rt0.c1))))) ORDER BY ((((+ (0.5364935136997402))))<((TIME(rt0.c0, rt0.c0, rt0.c1)))), (((('UsfEM윎*_') BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))AND(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((+ (0.5364935136997402))))<((TIME(rt0.c0, rt0.c0, rt0.c1)))), (((('UsfEM윎*_') BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL))AND(((rt0.c1)LIKE(rt0.c1))))) ORDER BY ((((+ (0.5364935136997402))))<((TIME(rt0.c0, rt0.c0, rt0.c1)))), (((('UsfEM윎*_') BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))OR((+ (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY CASE t0.c0  WHEN CASE t0.c0  WHEN 0.9663597265981358 THEN t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (- (0xffffffffac3ee3a8)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c0)AND(t0.c0)) END DESC  NULLS LAST, ((t0.c0) BETWEEN (((t0.c0) ISNULL)) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS TEXT))OR((+ (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN CASE t0.c0  WHEN 0.9663597265981358 THEN t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (- (0Xffffffffac3ee3a8)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c0)AND(t0.c0)) END DESC  NULLS LAST, ((t0.c0) BETWEEN (((t0.c0) ISNULL)) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))OR((+ (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY CASE t0.c0  WHEN CASE t0.c0  WHEN 0.9663597265981358 THEN t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (- (0xffffffffac3ee3a8)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c0)AND(t0.c0)) END DESC  NULLS LAST, ((t0.c0) BETWEEN (((t0.c0) ISNULL)) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS TEXT))OR((+ (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN CASE t0.c0  WHEN 0.9663597265981358 THEN t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (- (0Xffffffffac3ee3a8)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c0)AND(t0.c0)) END DESC  NULLS LAST, ((t0.c0) BETWEEN (((t0.c0) ISNULL)) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))));
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS TEXT))OR((+ (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY CASE t0.c0  WHEN CASE t0.c0  WHEN 0.9663597265981358 THEN t0.c0 END THEN CAST(t0.c0 AS INTEGER) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (- (0xffffffffac3ee3a8)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c0)AND(t0.c0)) END DESC  NULLS LAST, ((t0.c0) BETWEEN (((t0.c0) ISNULL)) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) ORDER BY CASE WHEN ((rt0.c2)>(t0.c0)) THEN (NOT (rt0.c1)) ELSE ((((t0.c0)OR(t0.c0)))AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((rt0.c2)>(t0.c0)) THEN (NOT (rt0.c1)) ELSE ((((t0.c0)OR(t0.c0)))AND(rt0.c1)) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) ORDER BY CASE WHEN ((rt0.c2)>(t0.c0)) THEN (NOT (rt0.c1)) ELSE ((((t0.c0)OR(t0.c0)))AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN ((rt0.c2)>(t0.c0)) THEN (NOT (rt0.c1)) ELSE ((((t0.c0)OR(t0.c0)))AND(rt0.c1)) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) ISNULL)) ORDER BY CASE WHEN ((rt0.c2)>(t0.c0)) THEN (NOT (rt0.c1)) ELSE ((((t0.c0)OR(t0.c0)))AND(rt0.c1)) END;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS TEXT)) ORDER BY CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN ((t0.c0)=(t0.c0)) ELSE t0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN ((t0.c0)==(t0.c0)) ELSE t0.c0 END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS TEXT)) ORDER BY CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN ((t0.c0)=(t0.c0)) ELSE t0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN ((t0.c0)==(t0.c0)) ELSE t0.c0 END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS TEXT)) ORDER BY CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN ((t0.c0)=(t0.c0)) ELSE t0.c0 END DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)IS NOT(rt0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c0)IS NOT(rt0.c0)))));
SELECT * FROM t0 WHERE (((((json(t0.c0))OR(((t0.c0) IS TRUE))))AND((t0.c0 IN ())))) ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))!=(((t0.c0)%(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((json(t0.c0))OR(((t0.c0) IS TRUE))))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))<>(((t0.c0)%(t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((json(t0.c0))OR(((t0.c0) IS TRUE))))AND((t0.c0 IN ())))) ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))!=(((t0.c0)%(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((json(t0.c0))OR(((t0.c0) IS TRUE))))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))<>(((t0.c0)%(t0.c0)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((json(t0.c0))OR(((t0.c0) IS TRUE))))AND((t0.c0 IN ())))) ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))!=(((t0.c0)%(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN (~ (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN (~ (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN (~ (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN (~ (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ())) ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN (~ (rt0.c2)) THEN rt0.c2 ELSE ((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)) END DESC;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, (t0.c0 IN ()), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, t0.c0, CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, (t0.c0 IN ()), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, t0.c0, CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, (t0.c0 IN ()), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, t0.c0, CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, (t0.c0 IN ()), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, t0.c0, CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, (t0.c0 IN ()), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, t0.c0, CAST(t0.c0 AS REAL)))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((rt0.c2)AND(t0.c0)))OR(rt0.c1)) WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN (- (t0.c0)) THEN LIKE(rt0.c2, rt0.c0, '/') ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) END WHERE (((((((rt0.c2)>(rt0.c2)))OR((rt0.c0 IN ()))))OR((- (rt0.c2))))) ORDER BY ((((((rt0.c2))==((rt0.c0))), '', 0.7644461899873755))>=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((2050859479) BETWEEN (rt0.c1) AND (NULL)), (t0.c0 IN (t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)>(rt0.c2)))OR((rt0.c0 IN ()))))OR((- (rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((rt0.c2)AND(t0.c0)))OR(rt0.c1)) WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN (- (t0.c0)) THEN LIKE(rt0.c2, rt0.c0, '/') ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) END ORDER BY ((((((rt0.c2))==((rt0.c0))), '', 0.7644461899873755))>=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((2050859479) BETWEEN (rt0.c1) AND (NULL)), (t0.c0 IN (t0.c0))))) ASC  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((rt0.c2)AND(t0.c0)))OR(rt0.c1)) WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN (- (t0.c0)) THEN LIKE(rt0.c2, rt0.c0, '/') ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) END WHERE (((((((rt0.c2)>(rt0.c2)))OR((rt0.c0 IN ()))))OR((- (rt0.c2))))) ORDER BY ((((((rt0.c2))==((rt0.c0))), '', 0.7644461899873755))>=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((2050859479) BETWEEN (rt0.c1) AND (NULL)), (t0.c0 IN (t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)>(rt0.c2)))OR((rt0.c0 IN ()))))OR((- (rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((rt0.c2)AND(t0.c0)))OR(rt0.c1)) WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN (- (t0.c0)) THEN LIKE(rt0.c2, rt0.c0, '/') ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) END ORDER BY ((((((rt0.c2))==((rt0.c0))), '', 0.7644461899873755))>=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((2050859479) BETWEEN (rt0.c1) AND (NULL)), (t0.c0 IN (t0.c0))))) ASC  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c0)) THEN ((((rt0.c2)AND(t0.c0)))OR(rt0.c1)) WHEN NULL THEN ((t0.c0)IS(t0.c0)) WHEN (- (t0.c0)) THEN LIKE(rt0.c2, rt0.c0, '/') ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c0)) END WHERE (((((((rt0.c2)>(rt0.c2)))OR((rt0.c0 IN ()))))OR((- (rt0.c2))))) ORDER BY ((((((rt0.c2))==((rt0.c0))), '', 0.7644461899873755))>=((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((2050859479) BETWEEN (rt0.c1) AND (NULL)), (t0.c0 IN (t0.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((x'')AND(rt0.c0)))AND(rt0.c0))) IS FALSE)) ORDER BY LIKELIHOOD(rt0.c2, 0.2976973366216492) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(rt0.c0)))AND(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(rt0.c2, 0.2976973366216492) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (((((((x'')AND(rt0.c0)))AND(rt0.c0))) IS FALSE)) ORDER BY LIKELIHOOD(rt0.c2, 0.2976973366216492) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'')AND(rt0.c0)))AND(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY LIKELIHOOD(rt0.c2, 0.2976973366216492) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (((((((x'')AND(rt0.c0)))AND(rt0.c0))) IS FALSE)) ORDER BY LIKELIHOOD(rt0.c2, 0.2976973366216492) COLLATE RTRIM;
SELECT ALL * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('');
SELECT ALL * FROM rt0, t0 NOT INDEXED WHERE ((- ((rt0.c2 IN ())))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0, t0 NOT INDEXED WHERE ((- ((rt0.c2 IN ())))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1);
SELECT ALL * FROM rt0, t0 NOT INDEXED WHERE ((- ((rt0.c2 IN ())))) ORDER BY rt0.c1;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM);
SELECT ALL * FROM rt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ('');
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) NOTNULL) WHERE (((((0.8507829770670714) IS TRUE))<(((rt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8507829770670714) IS TRUE))<(((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) NOTNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) NOTNULL) WHERE (((((0.8507829770670714) IS TRUE))<(((rt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8507829770670714) IS TRUE))<(((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) NOTNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS NUMERIC)) NOTNULL) WHERE (((((0.8507829770670714) IS TRUE))<(((rt0.c0)IS(rt0.c1)))));
